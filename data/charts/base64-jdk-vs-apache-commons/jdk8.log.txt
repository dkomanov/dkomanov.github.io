# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:26:08
# Fork: 1 of 1
# Warmup Iteration   1: 914.680 ns/op
# Warmup Iteration   2: 705.620 ns/op
# Warmup Iteration   3: 718.255 ns/op
# Warmup Iteration   4: 705.533 ns/op
# Warmup Iteration   5: 713.425 ns/op
Iteration   1: 729.363 ns/op
Iteration   2: 764.666 ns/op
Iteration   3: 705.836 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  733.288 ±(99.9%) 540.203 ns/op [Average]
  (min, avg, max) = (705.836, 733.288, 764.666), stdev = 29.610
  CI (99.9%): [193.085, 1273.492] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.89% complete, ETA 00:27:15
# Fork: 1 of 1
# Warmup Iteration   1: 1014.392 ns/op
# Warmup Iteration   2: 791.682 ns/op
# Warmup Iteration   3: 789.067 ns/op
# Warmup Iteration   4: 776.891 ns/op
# Warmup Iteration   5: 779.844 ns/op
Iteration   1: 820.499 ns/op
Iteration   2: 828.301 ns/op
Iteration   3: 807.311 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  818.704 ±(99.9%) 193.561 ns/op [Average]
  (min, avg, max) = (807.311, 818.704, 828.301), stdev = 10.610
  CI (99.9%): [625.143, 1012.264] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 1.79% complete, ETA 00:26:54
# Fork: 1 of 1
# Warmup Iteration   1: 1629.984 ns/op
# Warmup Iteration   2: 1231.895 ns/op
# Warmup Iteration   3: 1224.734 ns/op
# Warmup Iteration   4: 1207.839 ns/op
# Warmup Iteration   5: 1206.685 ns/op
Iteration   1: 1271.003 ns/op
Iteration   2: 1222.977 ns/op
Iteration   3: 1204.166 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1232.716 ±(99.9%) 628.797 ns/op [Average]
  (min, avg, max) = (1204.166, 1232.716, 1271.003), stdev = 34.467
  CI (99.9%): [603.918, 1861.513] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 2.68% complete, ETA 00:26:36
# Fork: 1 of 1
# Warmup Iteration   1: 2358.927 ns/op
# Warmup Iteration   2: 1777.382 ns/op
# Warmup Iteration   3: 1756.942 ns/op
# Warmup Iteration   4: 1799.871 ns/op
# Warmup Iteration   5: 1750.970 ns/op
Iteration   1: 1777.801 ns/op
Iteration   2: 1766.125 ns/op
Iteration   3: 1770.071 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1771.332 ±(99.9%) 108.357 ns/op [Average]
  (min, avg, max) = (1766.125, 1771.332, 1777.801), stdev = 5.939
  CI (99.9%): [1662.975, 1879.689] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 3.57% complete, ETA 00:26:20
# Fork: 1 of 1
# Warmup Iteration   1: 7973.352 ns/op
# Warmup Iteration   2: 6731.647 ns/op
# Warmup Iteration   3: 6341.945 ns/op
# Warmup Iteration   4: 6350.260 ns/op
# Warmup Iteration   5: 6362.942 ns/op
Iteration   1: 6962.521 ns/op
Iteration   2: 6587.835 ns/op
Iteration   3: 6349.264 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  6633.207 ±(99.9%) 5639.794 ns/op [Average]
  (min, avg, max) = (6349.264, 6633.207, 6962.521), stdev = 309.136
  CI (99.9%): [993.413, 12273.000] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 4.46% complete, ETA 00:26:05
# Fork: 1 of 1
# Warmup Iteration   1: 10667.639 ns/op
# Warmup Iteration   2: 8924.572 ns/op
# Warmup Iteration   3: 8457.360 ns/op
# Warmup Iteration   4: 8520.468 ns/op
# Warmup Iteration   5: 8446.326 ns/op
Iteration   1: 8520.009 ns/op
Iteration   2: 8486.624 ns/op
Iteration   3: 8492.084 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  8499.572 ±(99.9%) 326.708 ns/op [Average]
  (min, avg, max) = (8486.624, 8499.572, 8520.009), stdev = 17.908
  CI (99.9%): [8172.864, 8826.281] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 5.36% complete, ETA 00:25:49
# Fork: 1 of 1
# Warmup Iteration   1: 94650.776 ns/op
# Warmup Iteration   2: 90000.276 ns/op
# Warmup Iteration   3: 83893.747 ns/op
# Warmup Iteration   4: 86439.869 ns/op
# Warmup Iteration   5: 83555.451 ns/op
Iteration   1: 83369.816 ns/op
Iteration   2: 84448.672 ns/op
Iteration   3: 83658.381 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  83825.623 ±(99.9%) 10189.737 ns/op [Average]
  (min, avg, max) = (83369.816, 83825.623, 84448.672), stdev = 558.534
  CI (99.9%): [73635.886, 94015.360] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 6.25% complete, ETA 00:25:34
# Fork: 1 of 1
# Warmup Iteration   1: 910.458 ns/op
# Warmup Iteration   2: 715.511 ns/op
# Warmup Iteration   3: 693.432 ns/op
# Warmup Iteration   4: 699.585 ns/op
# Warmup Iteration   5: 787.746 ns/op
Iteration   1: 694.546 ns/op
Iteration   2: 701.499 ns/op
Iteration   3: 735.508 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  710.518 ±(99.9%) 399.889 ns/op [Average]
  (min, avg, max) = (694.546, 710.518, 735.508), stdev = 21.919
  CI (99.9%): [310.628, 1110.407] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 7.14% complete, ETA 00:25:18
# Fork: 1 of 1
# Warmup Iteration   1: 1020.346 ns/op
# Warmup Iteration   2: 788.812 ns/op
# Warmup Iteration   3: 780.038 ns/op
# Warmup Iteration   4: 778.290 ns/op
# Warmup Iteration   5: 873.685 ns/op
Iteration   1: 789.449 ns/op
Iteration   2: 783.509 ns/op
Iteration   3: 778.046 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  783.668 ±(99.9%) 104.047 ns/op [Average]
  (min, avg, max) = (778.046, 783.668, 789.449), stdev = 5.703
  CI (99.9%): [679.621, 887.715] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 8.04% complete, ETA 00:25:02
# Fork: 1 of 1
# Warmup Iteration   1: 1589.432 ns/op
# Warmup Iteration   2: 1410.213 ns/op
# Warmup Iteration   3: 1376.666 ns/op
# Warmup Iteration   4: 1325.787 ns/op
# Warmup Iteration   5: 1234.271 ns/op
Iteration   1: 1238.249 ns/op
Iteration   2: 1222.711 ns/op
Iteration   3: 1222.846 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1227.935 ±(99.9%) 162.950 ns/op [Average]
  (min, avg, max) = (1222.711, 1227.935, 1238.249), stdev = 8.932
  CI (99.9%): [1064.985, 1390.886] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 8.93% complete, ETA 00:24:47
# Fork: 1 of 1
# Warmup Iteration   1: 2309.655 ns/op
# Warmup Iteration   2: 1778.733 ns/op
# Warmup Iteration   3: 1775.309 ns/op
# Warmup Iteration   4: 1758.926 ns/op
# Warmup Iteration   5: 1766.724 ns/op
Iteration   1: 1781.191 ns/op
Iteration   2: 1812.441 ns/op
Iteration   3: 1838.451 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1810.694 ±(99.9%) 523.053 ns/op [Average]
  (min, avg, max) = (1781.191, 1810.694, 1838.451), stdev = 28.670
  CI (99.9%): [1287.642, 2333.747] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 9.82% complete, ETA 00:24:31
# Fork: 1 of 1
# Warmup Iteration   1: 8104.223 ns/op
# Warmup Iteration   2: 6775.945 ns/op
# Warmup Iteration   3: 6425.479 ns/op
# Warmup Iteration   4: 6446.887 ns/op
# Warmup Iteration   5: 6596.278 ns/op
Iteration   1: 6610.104 ns/op
Iteration   2: 6450.009 ns/op
Iteration   3: 6516.918 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  6525.677 ±(99.9%) 1466.905 ns/op [Average]
  (min, avg, max) = (6450.009, 6525.677, 6610.104), stdev = 80.406
  CI (99.9%): [5058.773, 7992.582] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 10.71% complete, ETA 00:24:16
# Fork: 1 of 1
# Warmup Iteration   1: 14437.618 ns/op
# Warmup Iteration   2: 13707.588 ns/op
# Warmup Iteration   3: 12789.003 ns/op
# Warmup Iteration   4: 12418.355 ns/op
# Warmup Iteration   5: 12389.998 ns/op
Iteration   1: 12531.888 ns/op
Iteration   2: 12562.957 ns/op
Iteration   3: 12490.185 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  12528.343 ±(99.9%) 666.177 ns/op [Average]
  (min, avg, max) = (12490.185, 12528.343, 12562.957), stdev = 36.515
  CI (99.9%): [11862.166, 13194.520] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 11.61% complete, ETA 00:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 98113.588 ns/op
# Warmup Iteration   2: 91100.355 ns/op
# Warmup Iteration   3: 86410.160 ns/op
# Warmup Iteration   4: 85179.017 ns/op
# Warmup Iteration   5: 85122.152 ns/op
Iteration   1: 85344.038 ns/op
Iteration   2: 85524.733 ns/op
Iteration   3: 86407.631 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  85758.801 ±(99.9%) 10382.879 ns/op [Average]
  (min, avg, max) = (85344.038, 85758.801, 86407.631), stdev = 569.121
  CI (99.9%): [75375.922, 96141.680] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 12.50% complete, ETA 00:23:46
# Fork: 1 of 1
# Warmup Iteration   1: 917.228 ns/op
# Warmup Iteration   2: 753.834 ns/op
# Warmup Iteration   3: 744.799 ns/op
# Warmup Iteration   4: 730.131 ns/op
# Warmup Iteration   5: 704.352 ns/op
Iteration   1: 709.741 ns/op
Iteration   2: 716.706 ns/op
Iteration   3: 721.556 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  716.001 ±(99.9%) 108.346 ns/op [Average]
  (min, avg, max) = (709.741, 716.001, 721.556), stdev = 5.939
  CI (99.9%): [607.655, 824.348] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 13.39% complete, ETA 00:23:32
# Fork: 1 of 1
# Warmup Iteration   1: 1046.003 ns/op
# Warmup Iteration   2: 803.868 ns/op
# Warmup Iteration   3: 817.866 ns/op
# Warmup Iteration   4: 869.504 ns/op
# Warmup Iteration   5: 823.381 ns/op
Iteration   1: 794.120 ns/op
Iteration   2: 804.059 ns/op
Iteration   3: 817.147 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  805.109 ±(99.9%) 210.698 ns/op [Average]
  (min, avg, max) = (794.120, 805.109, 817.147), stdev = 11.549
  CI (99.9%): [594.411, 1015.807] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 14.29% complete, ETA 00:23:17
# Fork: 1 of 1
# Warmup Iteration   1: 1566.987 ns/op
# Warmup Iteration   2: 1168.754 ns/op
# Warmup Iteration   3: 1165.097 ns/op
# Warmup Iteration   4: 1190.573 ns/op
# Warmup Iteration   5: 1210.903 ns/op
Iteration   1: 1188.650 ns/op
Iteration   2: 1168.945 ns/op
Iteration   3: 1181.111 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1179.569 ±(99.9%) 181.388 ns/op [Average]
  (min, avg, max) = (1168.945, 1179.569, 1188.650), stdev = 9.942
  CI (99.9%): [998.181, 1360.957] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 15.18% complete, ETA 00:23:03
# Fork: 1 of 1
# Warmup Iteration   1: 2157.597 ns/op
# Warmup Iteration   2: 1762.135 ns/op
# Warmup Iteration   3: 1631.570 ns/op
# Warmup Iteration   4: 1649.976 ns/op
# Warmup Iteration   5: 1639.333 ns/op
Iteration   1: 1671.356 ns/op
Iteration   2: 1652.645 ns/op
Iteration   3: 1693.378 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1672.460 ±(99.9%) 371.966 ns/op [Average]
  (min, avg, max) = (1652.645, 1672.460, 1693.378), stdev = 20.389
  CI (99.9%): [1300.494, 2044.426] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 16.07% complete, ETA 00:22:48
# Fork: 1 of 1
# Warmup Iteration   1: 7303.166 ns/op
# Warmup Iteration   2: 6190.302 ns/op
# Warmup Iteration   3: 5761.050 ns/op
# Warmup Iteration   4: 5783.152 ns/op
# Warmup Iteration   5: 5788.159 ns/op
Iteration   1: 5787.464 ns/op
Iteration   2: 5827.581 ns/op
Iteration   3: 5892.514 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  5835.853 ±(99.9%) 967.120 ns/op [Average]
  (min, avg, max) = (5787.464, 5835.853, 5892.514), stdev = 53.011
  CI (99.9%): [4868.733, 6802.973] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 16.96% complete, ETA 00:22:34
# Fork: 1 of 1
# Warmup Iteration   1: 13222.248 ns/op
# Warmup Iteration   2: 11632.158 ns/op
# Warmup Iteration   3: 10802.175 ns/op
# Warmup Iteration   4: 10735.217 ns/op
# Warmup Iteration   5: 10728.485 ns/op
Iteration   1: 10769.912 ns/op
Iteration   2: 11002.082 ns/op
Iteration   3: 10730.786 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  10834.260 ±(99.9%) 2675.422 ns/op [Average]
  (min, avg, max) = (10730.786, 10834.260, 11002.082), stdev = 146.649
  CI (99.9%): [8158.838, 13509.682] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 17.86% complete, ETA 00:22:19
# Fork: 1 of 1
# Warmup Iteration   1: 104106.326 ns/op
# Warmup Iteration   2: 101499.302 ns/op
# Warmup Iteration   3: 91587.981 ns/op
# Warmup Iteration   4: 91284.907 ns/op
# Warmup Iteration   5: 91174.224 ns/op
Iteration   1: 90582.129 ns/op
Iteration   2: 90963.941 ns/op
Iteration   3: 91061.302 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  90869.124 ±(99.9%) 4620.541 ns/op [Average]
  (min, avg, max) = (90582.129, 90869.124, 91061.302), stdev = 253.267
  CI (99.9%): [86248.583, 95489.665] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 18.75% complete, ETA 00:22:05
# Fork: 1 of 1
# Warmup Iteration   1: 892.728 ns/op
# Warmup Iteration   2: 723.990 ns/op
# Warmup Iteration   3: 721.728 ns/op
# Warmup Iteration   4: 698.067 ns/op
# Warmup Iteration   5: 699.407 ns/op
Iteration   1: 701.652 ns/op
Iteration   2: 694.853 ns/op
Iteration   3: 741.846 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  712.784 ±(99.9%) 463.341 ns/op [Average]
  (min, avg, max) = (694.853, 712.784, 741.846), stdev = 25.397
  CI (99.9%): [249.443, 1176.124] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 19.64% complete, ETA 00:21:50
# Fork: 1 of 1
# Warmup Iteration   1: 1028.025 ns/op
# Warmup Iteration   2: 980.351 ns/op
# Warmup Iteration   3: 798.166 ns/op
# Warmup Iteration   4: 791.814 ns/op
# Warmup Iteration   5: 790.283 ns/op
Iteration   1: 829.334 ns/op
Iteration   2: 804.588 ns/op
Iteration   3: 810.432 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  814.785 ±(99.9%) 235.981 ns/op [Average]
  (min, avg, max) = (804.588, 814.785, 829.334), stdev = 12.935
  CI (99.9%): [578.804, 1050.765] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 20.54% complete, ETA 00:21:35
# Fork: 1 of 1
# Warmup Iteration   1: 1738.521 ns/op
# Warmup Iteration   2: 1282.777 ns/op
# Warmup Iteration   3: 1164.437 ns/op
# Warmup Iteration   4: 1168.938 ns/op
# Warmup Iteration   5: 1166.034 ns/op
Iteration   1: 1152.262 ns/op
Iteration   2: 1164.367 ns/op
Iteration   3: 1163.346 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1159.991 ±(99.9%) 122.480 ns/op [Average]
  (min, avg, max) = (1152.262, 1159.991, 1164.367), stdev = 6.714
  CI (99.9%): [1037.511, 1282.471] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 21.43% complete, ETA 00:21:20
# Fork: 1 of 1
# Warmup Iteration   1: 2151.494 ns/op
# Warmup Iteration   2: 1658.210 ns/op
# Warmup Iteration   3: 1752.751 ns/op
# Warmup Iteration   4: 1708.994 ns/op
# Warmup Iteration   5: 1704.097 ns/op
Iteration   1: 1695.023 ns/op
Iteration   2: 1749.047 ns/op
Iteration   3: 1670.215 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1704.761 ±(99.9%) 735.371 ns/op [Average]
  (min, avg, max) = (1670.215, 1704.761, 1749.047), stdev = 40.308
  CI (99.9%): [969.391, 2440.132] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 22.32% complete, ETA 00:21:06
# Fork: 1 of 1
# Warmup Iteration   1: 7650.941 ns/op
# Warmup Iteration   2: 6178.183 ns/op
# Warmup Iteration   3: 5746.767 ns/op
# Warmup Iteration   4: 6290.918 ns/op
# Warmup Iteration   5: 5806.512 ns/op
Iteration   1: 5774.301 ns/op
Iteration   2: 5790.278 ns/op
Iteration   3: 5832.167 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  5798.915 ±(99.9%) 545.203 ns/op [Average]
  (min, avg, max) = (5774.301, 5798.915, 5832.167), stdev = 29.884
  CI (99.9%): [5253.712, 6344.118] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 23.21% complete, ETA 00:20:51
# Fork: 1 of 1
# Warmup Iteration   1: 13421.725 ns/op
# Warmup Iteration   2: 12074.159 ns/op
# Warmup Iteration   3: 11039.528 ns/op
# Warmup Iteration   4: 10929.727 ns/op
# Warmup Iteration   5: 11429.711 ns/op
Iteration   1: 10997.335 ns/op
Iteration   2: 11296.040 ns/op
Iteration   3: 10972.473 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  11088.616 ±(99.9%) 3285.036 ns/op [Average]
  (min, avg, max) = (10972.473, 11088.616, 11296.040), stdev = 180.064
  CI (99.9%): [7803.580, 14373.652] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 24.11% complete, ETA 00:20:36
# Fork: 1 of 1
# Warmup Iteration   1: 107376.671 ns/op
# Warmup Iteration   2: 97879.746 ns/op
# Warmup Iteration   3: 92329.086 ns/op
# Warmup Iteration   4: 90838.755 ns/op
# Warmup Iteration   5: 90619.699 ns/op
Iteration   1: 91373.798 ns/op
Iteration   2: 91331.734 ns/op
Iteration   3: 90863.248 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  91189.593 ±(99.9%) 5170.364 ns/op [Average]
  (min, avg, max) = (90863.248, 91189.593, 91373.798), stdev = 283.405
  CI (99.9%): [86019.229, 96359.957] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 25.00% complete, ETA 00:20:21
# Fork: 1 of 1
# Warmup Iteration   1: 1054.869 ns/op
# Warmup Iteration   2: 812.225 ns/op
# Warmup Iteration   3: 709.382 ns/op
# Warmup Iteration   4: 734.988 ns/op
# Warmup Iteration   5: 705.741 ns/op
Iteration   1: 698.371 ns/op
Iteration   2: 705.772 ns/op
Iteration   3: 724.876 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  709.673 ±(99.9%) 249.506 ns/op [Average]
  (min, avg, max) = (698.371, 709.673, 724.876), stdev = 13.676
  CI (99.9%): [460.167, 959.179] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 25.89% complete, ETA 00:20:07
# Fork: 1 of 1
# Warmup Iteration   1: 1027.053 ns/op
# Warmup Iteration   2: 801.570 ns/op
# Warmup Iteration   3: 832.614 ns/op
# Warmup Iteration   4: 849.487 ns/op
# Warmup Iteration   5: 784.681 ns/op
Iteration   1: 808.682 ns/op
Iteration   2: 788.527 ns/op
Iteration   3: 820.534 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  805.914 ±(99.9%) 295.223 ns/op [Average]
  (min, avg, max) = (788.527, 805.914, 820.534), stdev = 16.182
  CI (99.9%): [510.691, 1101.138] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 26.79% complete, ETA 00:19:53
# Fork: 1 of 1
# Warmup Iteration   1: 1583.431 ns/op
# Warmup Iteration   2: 1214.160 ns/op
# Warmup Iteration   3: 1174.684 ns/op
# Warmup Iteration   4: 1174.223 ns/op
# Warmup Iteration   5: 1174.848 ns/op
Iteration   1: 1190.934 ns/op
Iteration   2: 1214.317 ns/op
Iteration   3: 1172.495 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1192.582 ±(99.9%) 382.383 ns/op [Average]
  (min, avg, max) = (1172.495, 1192.582, 1214.317), stdev = 20.960
  CI (99.9%): [810.199, 1574.965] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 27.68% complete, ETA 00:19:38
# Fork: 1 of 1
# Warmup Iteration   1: 2272.718 ns/op
# Warmup Iteration   2: 1718.127 ns/op
# Warmup Iteration   3: 1749.815 ns/op
# Warmup Iteration   4: 1743.428 ns/op
# Warmup Iteration   5: 1694.954 ns/op
Iteration   1: 1690.900 ns/op
Iteration   2: 1689.917 ns/op
Iteration   3: 1689.049 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1689.955 ±(99.9%) 16.901 ns/op [Average]
  (min, avg, max) = (1689.049, 1689.955, 1690.900), stdev = 0.926
  CI (99.9%): [1673.054, 1706.857] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 28.57% complete, ETA 00:19:24
# Fork: 1 of 1
# Warmup Iteration   1: 8113.184 ns/op
# Warmup Iteration   2: 6183.568 ns/op
# Warmup Iteration   3: 5817.861 ns/op
# Warmup Iteration   4: 5843.839 ns/op
# Warmup Iteration   5: 5857.363 ns/op
Iteration   1: 5895.386 ns/op
Iteration   2: 5861.771 ns/op
Iteration   3: 5851.800 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  5869.652 ±(99.9%) 416.629 ns/op [Average]
  (min, avg, max) = (5851.800, 5869.652, 5895.386), stdev = 22.837
  CI (99.9%): [5453.023, 6286.281] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 29.46% complete, ETA 00:19:09
# Fork: 1 of 1
# Warmup Iteration   1: 13517.229 ns/op
# Warmup Iteration   2: 12234.549 ns/op
# Warmup Iteration   3: 10965.163 ns/op
# Warmup Iteration   4: 10954.926 ns/op
# Warmup Iteration   5: 11000.852 ns/op
Iteration   1: 11098.913 ns/op
Iteration   2: 11256.189 ns/op
Iteration   3: 11171.692 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  11175.598 ±(99.9%) 1435.977 ns/op [Average]
  (min, avg, max) = (11098.913, 11175.598, 11256.189), stdev = 78.711
  CI (99.9%): [9739.621, 12611.575] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 30.36% complete, ETA 00:18:55
# Fork: 1 of 1
# Warmup Iteration   1: 98343.488 ns/op
# Warmup Iteration   2: 92879.848 ns/op
# Warmup Iteration   3: 90058.757 ns/op
# Warmup Iteration   4: 86496.682 ns/op
# Warmup Iteration   5: 86538.818 ns/op
Iteration   1: 85992.783 ns/op
Iteration   2: 86172.837 ns/op
Iteration   3: 86118.608 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  86094.743 ±(99.9%) 1685.156 ns/op [Average]
  (min, avg, max) = (85992.783, 86094.743, 86172.837), stdev = 92.369
  CI (99.9%): [84409.586, 87779.899] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 31.25% complete, ETA 00:18:40
# Fork: 1 of 1
# Warmup Iteration   1: 919.535 ns/op
# Warmup Iteration   2: 719.049 ns/op
# Warmup Iteration   3: 703.588 ns/op
# Warmup Iteration   4: 703.341 ns/op
# Warmup Iteration   5: 706.623 ns/op
Iteration   1: 722.984 ns/op
Iteration   2: 700.818 ns/op
Iteration   3: 700.333 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  708.045 ±(99.9%) 236.065 ns/op [Average]
  (min, avg, max) = (700.333, 708.045, 722.984), stdev = 12.940
  CI (99.9%): [471.980, 944.110] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 32.14% complete, ETA 00:18:26
# Fork: 1 of 1
# Warmup Iteration   1: 1059.297 ns/op
# Warmup Iteration   2: 792.706 ns/op
# Warmup Iteration   3: 785.927 ns/op
# Warmup Iteration   4: 783.885 ns/op
# Warmup Iteration   5: 794.420 ns/op
Iteration   1: 802.993 ns/op
Iteration   2: 789.160 ns/op
Iteration   3: 860.803 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  817.652 ±(99.9%) 693.346 ns/op [Average]
  (min, avg, max) = (789.160, 817.652, 860.803), stdev = 38.005
  CI (99.9%): [124.306, 1510.999] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 33.04% complete, ETA 00:18:11
# Fork: 1 of 1
# Warmup Iteration   1: 1545.304 ns/op
# Warmup Iteration   2: 1219.775 ns/op
# Warmup Iteration   3: 1177.201 ns/op
# Warmup Iteration   4: 1183.583 ns/op
# Warmup Iteration   5: 1256.475 ns/op
Iteration   1: 1173.943 ns/op
Iteration   2: 1172.673 ns/op
Iteration   3: 1198.308 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1181.642 ±(99.9%) 263.578 ns/op [Average]
  (min, avg, max) = (1172.673, 1181.642, 1198.308), stdev = 14.448
  CI (99.9%): [918.064, 1445.219] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 33.93% complete, ETA 00:17:56
# Fork: 1 of 1
# Warmup Iteration   1: 2334.821 ns/op
# Warmup Iteration   2: 1717.885 ns/op
# Warmup Iteration   3: 1704.841 ns/op
# Warmup Iteration   4: 1698.244 ns/op
# Warmup Iteration   5: 1709.362 ns/op
Iteration   1: 1690.602 ns/op
Iteration   2: 1699.432 ns/op
Iteration   3: 1725.469 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1705.168 ±(99.9%) 330.701 ns/op [Average]
  (min, avg, max) = (1690.602, 1705.168, 1725.469), stdev = 18.127
  CI (99.9%): [1374.467, 2035.869] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 34.82% complete, ETA 00:17:41
# Fork: 1 of 1
# Warmup Iteration   1: 7683.712 ns/op
# Warmup Iteration   2: 6203.238 ns/op
# Warmup Iteration   3: 5977.315 ns/op
# Warmup Iteration   4: 5860.846 ns/op
# Warmup Iteration   5: 5852.587 ns/op
Iteration   1: 6074.095 ns/op
Iteration   2: 5857.014 ns/op
Iteration   3: 6025.880 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  5985.663 ±(99.9%) 2079.633 ns/op [Average]
  (min, avg, max) = (5857.014, 5985.663, 6074.095), stdev = 113.992
  CI (99.9%): [3906.030, 8065.295] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 35.71% complete, ETA 00:17:27
# Fork: 1 of 1
# Warmup Iteration   1: 13323.531 ns/op
# Warmup Iteration   2: 12213.735 ns/op
# Warmup Iteration   3: 10957.107 ns/op
# Warmup Iteration   4: 10979.872 ns/op
# Warmup Iteration   5: 11003.812 ns/op
Iteration   1: 10998.181 ns/op
Iteration   2: 11114.689 ns/op
Iteration   3: 11052.928 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  11055.266 ±(99.9%) 1063.416 ns/op [Average]
  (min, avg, max) = (10998.181, 11055.266, 11114.689), stdev = 58.289
  CI (99.9%): [9991.850, 12118.683] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 36.61% complete, ETA 00:17:12
# Fork: 1 of 1
# Warmup Iteration   1: 100649.447 ns/op
# Warmup Iteration   2: 92862.907 ns/op
# Warmup Iteration   3: 88749.238 ns/op
# Warmup Iteration   4: 86297.121 ns/op
# Warmup Iteration   5: 86949.374 ns/op
Iteration   1: 85975.231 ns/op
Iteration   2: 86293.271 ns/op
Iteration   3: 86315.980 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  86194.827 ±(99.9%) 3475.701 ns/op [Average]
  (min, avg, max) = (85975.231, 86194.827, 86315.980), stdev = 190.515
  CI (99.9%): [82719.127, 89670.528] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 37.50% complete, ETA 00:16:58
# Fork: 1 of 1
# Warmup Iteration   1: 912.441 ns/op
# Warmup Iteration   2: 709.792 ns/op
# Warmup Iteration   3: 694.668 ns/op
# Warmup Iteration   4: 693.717 ns/op
# Warmup Iteration   5: 698.808 ns/op
Iteration   1: 708.421 ns/op
Iteration   2: 730.217 ns/op
Iteration   3: 691.606 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  710.081 ±(99.9%) 353.175 ns/op [Average]
  (min, avg, max) = (691.606, 710.081, 730.217), stdev = 19.359
  CI (99.9%): [356.906, 1063.256] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 38.39% complete, ETA 00:16:43
# Fork: 1 of 1
# Warmup Iteration   1: 1019.303 ns/op
# Warmup Iteration   2: 799.201 ns/op
# Warmup Iteration   3: 774.871 ns/op
# Warmup Iteration   4: 768.348 ns/op
# Warmup Iteration   5: 774.175 ns/op
Iteration   1: 777.307 ns/op
Iteration   2: 800.080 ns/op
Iteration   3: 794.840 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  790.743 ±(99.9%) 217.583 ns/op [Average]
  (min, avg, max) = (777.307, 790.743, 800.080), stdev = 11.926
  CI (99.9%): [573.159, 1008.326] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 39.29% complete, ETA 00:16:29
# Fork: 1 of 1
# Warmup Iteration   1: 1481.395 ns/op
# Warmup Iteration   2: 1144.268 ns/op
# Warmup Iteration   3: 1140.238 ns/op
# Warmup Iteration   4: 1141.506 ns/op
# Warmup Iteration   5: 1131.265 ns/op
Iteration   1: 1135.958 ns/op
Iteration   2: 1134.705 ns/op
Iteration   3: 1143.743 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1138.135 ±(99.9%) 89.329 ns/op [Average]
  (min, avg, max) = (1134.705, 1138.135, 1143.743), stdev = 4.896
  CI (99.9%): [1048.806, 1227.465] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 40.18% complete, ETA 00:16:14
# Fork: 1 of 1
# Warmup Iteration   1: 2138.943 ns/op
# Warmup Iteration   2: 1719.760 ns/op
# Warmup Iteration   3: 1635.232 ns/op
# Warmup Iteration   4: 1719.105 ns/op
# Warmup Iteration   5: 1973.726 ns/op
Iteration   1: 1639.912 ns/op
Iteration   2: 1625.768 ns/op
Iteration   3: 1624.156 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1629.945 ±(99.9%) 158.162 ns/op [Average]
  (min, avg, max) = (1624.156, 1629.945, 1639.912), stdev = 8.669
  CI (99.9%): [1471.783, 1788.107] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 41.07% complete, ETA 00:16:00
# Fork: 1 of 1
# Warmup Iteration   1: 6918.494 ns/op
# Warmup Iteration   2: 5720.833 ns/op
# Warmup Iteration   3: 5573.256 ns/op
# Warmup Iteration   4: 5402.610 ns/op
# Warmup Iteration   5: 6554.264 ns/op
Iteration   1: 5520.453 ns/op
Iteration   2: 5484.213 ns/op
Iteration   3: 5393.683 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  5466.116 ±(99.9%) 1191.201 ns/op [Average]
  (min, avg, max) = (5393.683, 5466.116, 5520.453), stdev = 65.294
  CI (99.9%): [4274.915, 6657.318] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 41.96% complete, ETA 00:15:45
# Fork: 1 of 1
# Warmup Iteration   1: 13021.545 ns/op
# Warmup Iteration   2: 11321.817 ns/op
# Warmup Iteration   3: 10525.417 ns/op
# Warmup Iteration   4: 10885.617 ns/op
# Warmup Iteration   5: 10464.800 ns/op
Iteration   1: 10530.033 ns/op
Iteration   2: 10523.577 ns/op
Iteration   3: 10748.929 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  10600.846 ±(99.9%) 2340.379 ns/op [Average]
  (min, avg, max) = (10523.577, 10600.846, 10748.929), stdev = 128.284
  CI (99.9%): [8260.467, 12941.226] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 42.86% complete, ETA 00:15:31
# Fork: 1 of 1
# Warmup Iteration   1: 104311.556 ns/op
# Warmup Iteration   2: 100607.915 ns/op
# Warmup Iteration   3: 92274.371 ns/op
# Warmup Iteration   4: 93490.375 ns/op
# Warmup Iteration   5: 92644.387 ns/op
Iteration   1: 91580.832 ns/op
Iteration   2: 91517.990 ns/op
Iteration   3: 91961.785 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  91686.869 ±(99.9%) 4381.207 ns/op [Average]
  (min, avg, max) = (91517.990, 91686.869, 91961.785), stdev = 240.149
  CI (99.9%): [87305.662, 96068.076] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 43.75% complete, ETA 00:15:16
# Fork: 1 of 1
# Warmup Iteration   1: 902.939 ns/op
# Warmup Iteration   2: 712.850 ns/op
# Warmup Iteration   3: 738.691 ns/op
# Warmup Iteration   4: 730.216 ns/op
# Warmup Iteration   5: 739.947 ns/op
Iteration   1: 720.604 ns/op
Iteration   2: 698.407 ns/op
Iteration   3: 719.047 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  712.686 ±(99.9%) 226.045 ns/op [Average]
  (min, avg, max) = (698.407, 712.686, 720.604), stdev = 12.390
  CI (99.9%): [486.641, 938.731] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 44.64% complete, ETA 00:15:02
# Fork: 1 of 1
# Warmup Iteration   1: 1015.138 ns/op
# Warmup Iteration   2: 810.185 ns/op
# Warmup Iteration   3: 824.356 ns/op
# Warmup Iteration   4: 813.458 ns/op
# Warmup Iteration   5: 777.986 ns/op
Iteration   1: 784.109 ns/op
Iteration   2: 812.137 ns/op
Iteration   3: 786.271 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  794.172 ±(99.9%) 284.514 ns/op [Average]
  (min, avg, max) = (784.109, 794.172, 812.137), stdev = 15.595
  CI (99.9%): [509.659, 1078.686] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 45.54% complete, ETA 00:14:47
# Fork: 1 of 1
# Warmup Iteration   1: 1554.312 ns/op
# Warmup Iteration   2: 1147.414 ns/op
# Warmup Iteration   3: 1138.099 ns/op
# Warmup Iteration   4: 1135.049 ns/op
# Warmup Iteration   5: 1135.832 ns/op
Iteration   1: 1163.654 ns/op
Iteration   2: 1152.247 ns/op
Iteration   3: 1135.226 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1150.376 ±(99.9%) 261.000 ns/op [Average]
  (min, avg, max) = (1135.226, 1150.376, 1163.654), stdev = 14.306
  CI (99.9%): [889.376, 1411.376] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 46.43% complete, ETA 00:14:32
# Fork: 1 of 1
# Warmup Iteration   1: 2134.322 ns/op
# Warmup Iteration   2: 1633.165 ns/op
# Warmup Iteration   3: 1651.388 ns/op
# Warmup Iteration   4: 1645.381 ns/op
# Warmup Iteration   5: 1648.343 ns/op
Iteration   1: 1628.453 ns/op
Iteration   2: 1630.874 ns/op
Iteration   3: 1654.299 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1637.875 ±(99.9%) 260.423 ns/op [Average]
  (min, avg, max) = (1628.453, 1637.875, 1654.299), stdev = 14.275
  CI (99.9%): [1377.453, 1898.298] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 47.32% complete, ETA 00:14:18
# Fork: 1 of 1
# Warmup Iteration   1: 6894.236 ns/op
# Warmup Iteration   2: 5688.833 ns/op
# Warmup Iteration   3: 5414.787 ns/op
# Warmup Iteration   4: 5708.794 ns/op
# Warmup Iteration   5: 5399.423 ns/op
Iteration   1: 5364.860 ns/op
Iteration   2: 5389.246 ns/op
Iteration   3: 5381.902 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  5378.669 ±(99.9%) 228.231 ns/op [Average]
  (min, avg, max) = (5364.860, 5378.669, 5389.246), stdev = 12.510
  CI (99.9%): [5150.438, 5606.901] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 48.21% complete, ETA 00:14:03
# Fork: 1 of 1
# Warmup Iteration   1: 12917.500 ns/op
# Warmup Iteration   2: 11337.461 ns/op
# Warmup Iteration   3: 10555.435 ns/op
# Warmup Iteration   4: 10485.626 ns/op
# Warmup Iteration   5: 10801.821 ns/op
Iteration   1: 10522.222 ns/op
Iteration   2: 10890.243 ns/op
Iteration   3: 10726.906 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  10713.124 ±(99.9%) 3364.091 ns/op [Average]
  (min, avg, max) = (10522.222, 10713.124, 10890.243), stdev = 184.397
  CI (99.9%): [7349.032, 14077.215] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.11% complete, ETA 00:13:48
# Fork: 1 of 1
# Warmup Iteration   1: 109180.861 ns/op
# Warmup Iteration   2: 99418.844 ns/op
# Warmup Iteration   3: 96423.772 ns/op
# Warmup Iteration   4: 91068.439 ns/op
# Warmup Iteration   5: 90733.174 ns/op
Iteration   1: 90778.767 ns/op
Iteration   2: 90262.367 ns/op
Iteration   3: 90296.571 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  90445.902 ±(99.9%) 5268.356 ns/op [Average]
  (min, avg, max) = (90262.367, 90445.902, 90778.767), stdev = 288.776
  CI (99.9%): [85177.546, 95714.258] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:13:34
# Fork: 1 of 1
# Warmup Iteration   1: 65.834 ns/op
# Warmup Iteration   2: 64.846 ns/op
# Warmup Iteration   3: 58.403 ns/op
# Warmup Iteration   4: 57.156 ns/op
# Warmup Iteration   5: 56.912 ns/op
Iteration   1: 56.983 ns/op
Iteration   2: 57.481 ns/op
Iteration   3: 57.278 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  57.247 ±(99.9%) 4.563 ns/op [Average]
  (min, avg, max) = (56.983, 57.247, 57.481), stdev = 0.250
  CI (99.9%): [52.684, 61.811] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.89% complete, ETA 00:13:19
# Fork: 1 of 1
# Warmup Iteration   1: 99.788 ns/op
# Warmup Iteration   2: 98.310 ns/op
# Warmup Iteration   3: 100.637 ns/op
# Warmup Iteration   4: 90.711 ns/op
# Warmup Iteration   5: 90.640 ns/op
Iteration   1: 91.798 ns/op
Iteration   2: 91.606 ns/op
Iteration   3: 94.237 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  92.547 ±(99.9%) 26.761 ns/op [Average]
  (min, avg, max) = (91.606, 92.547, 94.237), stdev = 1.467
  CI (99.9%): [65.786, 119.308] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 51.79% complete, ETA 00:13:05
# Fork: 1 of 1
# Warmup Iteration   1: 285.334 ns/op
# Warmup Iteration   2: 279.356 ns/op
# Warmup Iteration   3: 260.905 ns/op
# Warmup Iteration   4: 261.056 ns/op
# Warmup Iteration   5: 261.229 ns/op
Iteration   1: 261.384 ns/op
Iteration   2: 270.058 ns/op
Iteration   3: 269.724 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  267.055 ±(99.9%) 89.658 ns/op [Average]
  (min, avg, max) = (261.384, 267.055, 270.058), stdev = 4.914
  CI (99.9%): [177.398, 356.713] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 52.68% complete, ETA 00:12:50
# Fork: 1 of 1
# Warmup Iteration   1: 498.675 ns/op
# Warmup Iteration   2: 481.020 ns/op
# Warmup Iteration   3: 456.176 ns/op
# Warmup Iteration   4: 454.661 ns/op
# Warmup Iteration   5: 454.514 ns/op
Iteration   1: 455.071 ns/op
Iteration   2: 456.406 ns/op
Iteration   3: 463.547 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  458.342 ±(99.9%) 83.148 ns/op [Average]
  (min, avg, max) = (455.071, 458.342, 463.547), stdev = 4.558
  CI (99.9%): [375.194, 541.489] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 53.57% complete, ETA 00:12:36
# Fork: 1 of 1
# Warmup Iteration   1: 2576.767 ns/op
# Warmup Iteration   2: 2455.837 ns/op
# Warmup Iteration   3: 2333.782 ns/op
# Warmup Iteration   4: 2347.592 ns/op
# Warmup Iteration   5: 2355.346 ns/op
Iteration   1: 2340.571 ns/op
Iteration   2: 2346.527 ns/op
Iteration   3: 2400.178 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  2362.425 ±(99.9%) 598.949 ns/op [Average]
  (min, avg, max) = (2340.571, 2362.425, 2400.178), stdev = 32.830
  CI (99.9%): [1763.476, 2961.375] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 54.46% complete, ETA 00:12:21
# Fork: 1 of 1
# Warmup Iteration   1: 4716.700 ns/op
# Warmup Iteration   2: 4527.789 ns/op
# Warmup Iteration   3: 4254.742 ns/op
# Warmup Iteration   4: 4316.532 ns/op
# Warmup Iteration   5: 4260.517 ns/op
Iteration   1: 4258.979 ns/op
Iteration   2: 4263.735 ns/op
Iteration   3: 4276.639 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  4266.451 ±(99.9%) 166.713 ns/op [Average]
  (min, avg, max) = (4258.979, 4266.451, 4276.639), stdev = 9.138
  CI (99.9%): [4099.737, 4433.164] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 55.36% complete, ETA 00:12:07
# Fork: 1 of 1
# Warmup Iteration   1: 68400.441 ns/op
# Warmup Iteration   2: 64099.581 ns/op
# Warmup Iteration   3: 65947.422 ns/op
# Warmup Iteration   4: 66192.835 ns/op
# Warmup Iteration   5: 63876.117 ns/op
Iteration   1: 64578.933 ns/op
Iteration   2: 64036.022 ns/op
Iteration   3: 64058.827 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  64224.594 ±(99.9%) 5602.251 ns/op [Average]
  (min, avg, max) = (64036.022, 64224.594, 64578.933), stdev = 307.078
  CI (99.9%): [58622.342, 69826.845] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 56.25% complete, ETA 00:11:52
# Fork: 1 of 1
# Warmup Iteration   1: 67.399 ns/op
# Warmup Iteration   2: 65.506 ns/op
# Warmup Iteration   3: 59.995 ns/op
# Warmup Iteration   4: 57.588 ns/op
# Warmup Iteration   5: 57.559 ns/op
Iteration   1: 57.624 ns/op
Iteration   2: 57.923 ns/op
Iteration   3: 58.997 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  58.181 ±(99.9%) 13.175 ns/op [Average]
  (min, avg, max) = (57.624, 58.181, 58.997), stdev = 0.722
  CI (99.9%): [45.006, 71.356] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 57.14% complete, ETA 00:11:38
# Fork: 1 of 1
# Warmup Iteration   1: 100.280 ns/op
# Warmup Iteration   2: 98.083 ns/op
# Warmup Iteration   3: 100.442 ns/op
# Warmup Iteration   4: 90.547 ns/op
# Warmup Iteration   5: 90.747 ns/op
Iteration   1: 90.622 ns/op
Iteration   2: 90.596 ns/op
Iteration   3: 92.439 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  91.219 ±(99.9%) 19.270 ns/op [Average]
  (min, avg, max) = (90.596, 91.219, 92.439), stdev = 1.056
  CI (99.9%): [71.949, 110.489] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 58.04% complete, ETA 00:11:23
# Fork: 1 of 1
# Warmup Iteration   1: 285.727 ns/op
# Warmup Iteration   2: 278.942 ns/op
# Warmup Iteration   3: 260.820 ns/op
# Warmup Iteration   4: 260.905 ns/op
# Warmup Iteration   5: 261.336 ns/op
Iteration   1: 262.677 ns/op
Iteration   2: 264.357 ns/op
Iteration   3: 263.045 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  263.360 ±(99.9%) 16.113 ns/op [Average]
  (min, avg, max) = (262.677, 263.360, 264.357), stdev = 0.883
  CI (99.9%): [247.248, 279.473] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 58.93% complete, ETA 00:11:08
# Fork: 1 of 1
# Warmup Iteration   1: 501.174 ns/op
# Warmup Iteration   2: 480.807 ns/op
# Warmup Iteration   3: 455.100 ns/op
# Warmup Iteration   4: 453.012 ns/op
# Warmup Iteration   5: 453.722 ns/op
Iteration   1: 454.330 ns/op
Iteration   2: 455.074 ns/op
Iteration   3: 470.939 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  460.114 ±(99.9%) 171.164 ns/op [Average]
  (min, avg, max) = (454.330, 460.114, 470.939), stdev = 9.382
  CI (99.9%): [288.950, 631.279] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 59.82% complete, ETA 00:10:54
# Fork: 1 of 1
# Warmup Iteration   1: 2584.561 ns/op
# Warmup Iteration   2: 2356.675 ns/op
# Warmup Iteration   3: 2345.407 ns/op
# Warmup Iteration   4: 2405.667 ns/op
# Warmup Iteration   5: 2328.797 ns/op
Iteration   1: 2332.925 ns/op
Iteration   2: 2344.311 ns/op
Iteration   3: 2343.267 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  2340.168 ±(99.9%) 114.825 ns/op [Average]
  (min, avg, max) = (2332.925, 2340.168, 2344.311), stdev = 6.294
  CI (99.9%): [2225.343, 2454.993] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 60.71% complete, ETA 00:10:39
# Fork: 1 of 1
# Warmup Iteration   1: 4846.758 ns/op
# Warmup Iteration   2: 4519.280 ns/op
# Warmup Iteration   3: 4390.848 ns/op
# Warmup Iteration   4: 4247.400 ns/op
# Warmup Iteration   5: 4254.356 ns/op
Iteration   1: 4258.147 ns/op
Iteration   2: 4316.779 ns/op
Iteration   3: 4280.053 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  4284.993 ±(99.9%) 540.504 ns/op [Average]
  (min, avg, max) = (4258.147, 4284.993, 4316.779), stdev = 29.627
  CI (99.9%): [3744.489, 4825.498] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 61.61% complete, ETA 00:10:25
# Fork: 1 of 1
# Warmup Iteration   1: 54931.583 ns/op
# Warmup Iteration   2: 50440.285 ns/op
# Warmup Iteration   3: 48285.006 ns/op
# Warmup Iteration   4: 47961.453 ns/op
# Warmup Iteration   5: 48004.899 ns/op
Iteration   1: 48648.302 ns/op
Iteration   2: 49435.697 ns/op
Iteration   3: 48897.611 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  48993.870 ±(99.9%) 7341.750 ns/op [Average]
  (min, avg, max) = (48648.302, 48993.870, 49435.697), stdev = 402.426
  CI (99.9%): [41652.120, 56335.620] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 62.50% complete, ETA 00:10:10
# Fork: 1 of 1
# Warmup Iteration   1: 58.660 ns/op
# Warmup Iteration   2: 57.778 ns/op
# Warmup Iteration   3: 48.793 ns/op
# Warmup Iteration   4: 48.864 ns/op
# Warmup Iteration   5: 49.571 ns/op
Iteration   1: 49.241 ns/op
Iteration   2: 48.876 ns/op
Iteration   3: 49.576 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  49.231 ±(99.9%) 6.388 ns/op [Average]
  (min, avg, max) = (48.876, 49.231, 49.576), stdev = 0.350
  CI (99.9%): [42.843, 55.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 63.39% complete, ETA 00:09:55
# Fork: 1 of 1
# Warmup Iteration   1: 89.216 ns/op
# Warmup Iteration   2: 87.291 ns/op
# Warmup Iteration   3: 79.768 ns/op
# Warmup Iteration   4: 77.566 ns/op
# Warmup Iteration   5: 77.853 ns/op
Iteration   1: 77.797 ns/op
Iteration   2: 78.852 ns/op
Iteration   3: 79.415 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  78.688 ±(99.9%) 14.991 ns/op [Average]
  (min, avg, max) = (77.797, 78.688, 79.415), stdev = 0.822
  CI (99.9%): [63.697, 93.679] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 64.29% complete, ETA 00:09:41
# Fork: 1 of 1
# Warmup Iteration   1: 152.439 ns/op
# Warmup Iteration   2: 151.573 ns/op
# Warmup Iteration   3: 139.474 ns/op
# Warmup Iteration   4: 132.340 ns/op
# Warmup Iteration   5: 132.180 ns/op
Iteration   1: 132.760 ns/op
Iteration   2: 134.408 ns/op
Iteration   3: 134.491 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  133.886 ±(99.9%) 17.809 ns/op [Average]
  (min, avg, max) = (132.760, 133.886, 134.491), stdev = 0.976
  CI (99.9%): [116.078, 151.695] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 65.18% complete, ETA 00:09:26
# Fork: 1 of 1
# Warmup Iteration   1: 262.398 ns/op
# Warmup Iteration   2: 253.618 ns/op
# Warmup Iteration   3: 244.156 ns/op
# Warmup Iteration   4: 230.986 ns/op
# Warmup Iteration   5: 230.949 ns/op
Iteration   1: 231.378 ns/op
Iteration   2: 233.340 ns/op
Iteration   3: 232.867 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  232.528 ±(99.9%) 18.679 ns/op [Average]
  (min, avg, max) = (231.378, 232.528, 233.340), stdev = 1.024
  CI (99.9%): [213.849, 251.207] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 66.07% complete, ETA 00:09:12
# Fork: 1 of 1
# Warmup Iteration   1: 1087.758 ns/op
# Warmup Iteration   2: 994.149 ns/op
# Warmup Iteration   3: 934.995 ns/op
# Warmup Iteration   4: 888.579 ns/op
# Warmup Iteration   5: 890.968 ns/op
Iteration   1: 902.410 ns/op
Iteration   2: 897.176 ns/op
Iteration   3: 897.595 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  899.060 ±(99.9%) 53.066 ns/op [Average]
  (min, avg, max) = (897.176, 899.060, 902.410), stdev = 2.909
  CI (99.9%): [845.994, 952.127] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 66.96% complete, ETA 00:08:57
# Fork: 1 of 1
# Warmup Iteration   1: 2047.164 ns/op
# Warmup Iteration   2: 1981.746 ns/op
# Warmup Iteration   3: 1898.469 ns/op
# Warmup Iteration   4: 1774.814 ns/op
# Warmup Iteration   5: 1808.579 ns/op
Iteration   1: 1806.069 ns/op
Iteration   2: 1842.057 ns/op
Iteration   3: 1785.472 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  1811.199 ±(99.9%) 522.480 ns/op [Average]
  (min, avg, max) = (1785.472, 1811.199, 1842.057), stdev = 28.639
  CI (99.9%): [1288.720, 2333.679] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 67.86% complete, ETA 00:08:43
# Fork: 1 of 1
# Warmup Iteration   1: 20102.985 ns/op
# Warmup Iteration   2: 18909.719 ns/op
# Warmup Iteration   3: 16910.752 ns/op
# Warmup Iteration   4: 16897.375 ns/op
# Warmup Iteration   5: 16914.005 ns/op
Iteration   1: 17139.043 ns/op
Iteration   2: 16990.652 ns/op
Iteration   3: 17394.994 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  17174.896 ±(99.9%) 3731.592 ns/op [Average]
  (min, avg, max) = (16990.652, 17174.896, 17394.994), stdev = 204.541
  CI (99.9%): [13443.305, 20906.488] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 68.75% complete, ETA 00:08:28
# Fork: 1 of 1
# Warmup Iteration   1: 58.481 ns/op
# Warmup Iteration   2: 57.971 ns/op
# Warmup Iteration   3: 48.852 ns/op
# Warmup Iteration   4: 48.718 ns/op
# Warmup Iteration   5: 48.790 ns/op
Iteration   1: 48.877 ns/op
Iteration   2: 48.963 ns/op
Iteration   3: 49.293 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  49.044 ±(99.9%) 4.006 ns/op [Average]
  (min, avg, max) = (48.877, 49.044, 49.293), stdev = 0.220
  CI (99.9%): [45.039, 53.050] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 69.64% complete, ETA 00:08:14
# Fork: 1 of 1
# Warmup Iteration   1: 89.153 ns/op
# Warmup Iteration   2: 87.630 ns/op
# Warmup Iteration   3: 80.187 ns/op
# Warmup Iteration   4: 77.391 ns/op
# Warmup Iteration   5: 77.595 ns/op
Iteration   1: 77.596 ns/op
Iteration   2: 77.675 ns/op
Iteration   3: 79.535 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  78.269 ±(99.9%) 20.016 ns/op [Average]
  (min, avg, max) = (77.596, 78.269, 79.535), stdev = 1.097
  CI (99.9%): [58.253, 98.285] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 70.54% complete, ETA 00:07:59
# Fork: 1 of 1
# Warmup Iteration   1: 163.622 ns/op
# Warmup Iteration   2: 153.980 ns/op
# Warmup Iteration   3: 142.564 ns/op
# Warmup Iteration   4: 142.711 ns/op
# Warmup Iteration   5: 143.092 ns/op
Iteration   1: 143.530 ns/op
Iteration   2: 144.545 ns/op
Iteration   3: 146.722 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  144.932 ±(99.9%) 29.756 ns/op [Average]
  (min, avg, max) = (143.530, 144.932, 146.722), stdev = 1.631
  CI (99.9%): [115.177, 174.688] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 71.43% complete, ETA 00:07:45
# Fork: 1 of 1
# Warmup Iteration   1: 260.945 ns/op
# Warmup Iteration   2: 253.067 ns/op
# Warmup Iteration   3: 244.134 ns/op
# Warmup Iteration   4: 230.997 ns/op
# Warmup Iteration   5: 231.820 ns/op
Iteration   1: 231.603 ns/op
Iteration   2: 236.700 ns/op
Iteration   3: 236.894 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  235.065 ±(99.9%) 54.738 ns/op [Average]
  (min, avg, max) = (231.603, 235.065, 236.894), stdev = 3.000
  CI (99.9%): [180.328, 289.803] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 72.32% complete, ETA 00:07:30
# Fork: 1 of 1
# Warmup Iteration   1: 1056.025 ns/op
# Warmup Iteration   2: 1002.153 ns/op
# Warmup Iteration   3: 913.396 ns/op
# Warmup Iteration   4: 889.336 ns/op
# Warmup Iteration   5: 916.075 ns/op
Iteration   1: 914.489 ns/op
Iteration   2: 926.073 ns/op
Iteration   3: 901.796 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  914.120 ±(99.9%) 221.529 ns/op [Average]
  (min, avg, max) = (901.796, 914.120, 926.073), stdev = 12.143
  CI (99.9%): [692.590, 1135.649] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 73.21% complete, ETA 00:07:16
# Fork: 1 of 1
# Warmup Iteration   1: 2058.307 ns/op
# Warmup Iteration   2: 1974.002 ns/op
# Warmup Iteration   3: 1805.765 ns/op
# Warmup Iteration   4: 1769.457 ns/op
# Warmup Iteration   5: 1774.430 ns/op
Iteration   1: 1791.480 ns/op
Iteration   2: 1784.628 ns/op
Iteration   3: 1812.147 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  1796.085 ±(99.9%) 261.349 ns/op [Average]
  (min, avg, max) = (1784.628, 1796.085, 1812.147), stdev = 14.325
  CI (99.9%): [1534.736, 2057.434] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 74.11% complete, ETA 00:07:01
# Fork: 1 of 1
# Warmup Iteration   1: 20519.110 ns/op
# Warmup Iteration   2: 18901.686 ns/op
# Warmup Iteration   3: 17044.996 ns/op
# Warmup Iteration   4: 16832.456 ns/op
# Warmup Iteration   5: 17476.983 ns/op
Iteration   1: 16907.742 ns/op
Iteration   2: 17040.535 ns/op
Iteration   3: 17001.673 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  16983.317 ±(99.9%) 1245.556 ns/op [Average]
  (min, avg, max) = (16907.742, 16983.317, 17040.535), stdev = 68.273
  CI (99.9%): [15737.761, 18228.873] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 75.00% complete, ETA 00:06:46
# Fork: 1 of 1
# Warmup Iteration   1: 63.687 ns/op
# Warmup Iteration   2: 63.241 ns/op
# Warmup Iteration   3: 54.504 ns/op
# Warmup Iteration   4: 54.179 ns/op
# Warmup Iteration   5: 54.210 ns/op
Iteration   1: 54.297 ns/op
Iteration   2: 55.135 ns/op
Iteration   3: 54.679 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  54.704 ±(99.9%) 7.648 ns/op [Average]
  (min, avg, max) = (54.297, 54.704, 55.135), stdev = 0.419
  CI (99.9%): [47.055, 62.352] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 75.89% complete, ETA 00:06:32
# Fork: 1 of 1
# Warmup Iteration   1: 89.551 ns/op
# Warmup Iteration   2: 86.861 ns/op
# Warmup Iteration   3: 82.714 ns/op
# Warmup Iteration   4: 80.057 ns/op
# Warmup Iteration   5: 79.937 ns/op
Iteration   1: 79.871 ns/op
Iteration   2: 79.951 ns/op
Iteration   3: 80.908 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  80.243 ±(99.9%) 10.529 ns/op [Average]
  (min, avg, max) = (79.871, 80.243, 80.908), stdev = 0.577
  CI (99.9%): [69.714, 90.773] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 76.79% complete, ETA 00:06:17
# Fork: 1 of 1
# Warmup Iteration   1: 220.503 ns/op
# Warmup Iteration   2: 216.908 ns/op
# Warmup Iteration   3: 215.810 ns/op
# Warmup Iteration   4: 199.714 ns/op
# Warmup Iteration   5: 199.607 ns/op
Iteration   1: 199.208 ns/op
Iteration   2: 199.596 ns/op
Iteration   3: 199.884 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  199.563 ±(99.9%) 6.195 ns/op [Average]
  (min, avg, max) = (199.208, 199.563, 199.884), stdev = 0.340
  CI (99.9%): [193.368, 205.758] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 77.68% complete, ETA 00:06:03
# Fork: 1 of 1
# Warmup Iteration   1: 368.326 ns/op
# Warmup Iteration   2: 364.601 ns/op
# Warmup Iteration   3: 366.962 ns/op
# Warmup Iteration   4: 341.439 ns/op
# Warmup Iteration   5: 342.337 ns/op
Iteration   1: 342.929 ns/op
Iteration   2: 341.584 ns/op
Iteration   3: 344.198 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  342.904 ±(99.9%) 23.854 ns/op [Average]
  (min, avg, max) = (341.584, 342.904, 344.198), stdev = 1.308
  CI (99.9%): [319.049, 366.758] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 78.57% complete, ETA 00:05:48
# Fork: 1 of 1
# Warmup Iteration   1: 1741.977 ns/op
# Warmup Iteration   2: 1708.491 ns/op
# Warmup Iteration   3: 1719.553 ns/op
# Warmup Iteration   4: 1565.469 ns/op
# Warmup Iteration   5: 1572.045 ns/op
Iteration   1: 1569.539 ns/op
Iteration   2: 1570.286 ns/op
Iteration   3: 1604.505 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  1581.443 ±(99.9%) 364.425 ns/op [Average]
  (min, avg, max) = (1569.539, 1581.443, 1604.505), stdev = 19.975
  CI (99.9%): [1217.018, 1945.868] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 79.46% complete, ETA 00:05:34
# Fork: 1 of 1
# Warmup Iteration   1: 3413.350 ns/op
# Warmup Iteration   2: 3277.318 ns/op
# Warmup Iteration   3: 3094.936 ns/op
# Warmup Iteration   4: 3092.146 ns/op
# Warmup Iteration   5: 3101.262 ns/op
Iteration   1: 3135.621 ns/op
Iteration   2: 3139.294 ns/op
Iteration   3: 3131.402 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  3135.439 ±(99.9%) 72.047 ns/op [Average]
  (min, avg, max) = (3131.402, 3135.439, 3139.294), stdev = 3.949
  CI (99.9%): [3063.392, 3207.486] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 80.36% complete, ETA 00:05:19
# Fork: 1 of 1
# Warmup Iteration   1: 32457.414 ns/op
# Warmup Iteration   2: 31360.742 ns/op
# Warmup Iteration   3: 29933.647 ns/op
# Warmup Iteration   4: 29505.875 ns/op
# Warmup Iteration   5: 29771.145 ns/op
Iteration   1: 29717.841 ns/op
Iteration   2: 29900.395 ns/op
Iteration   3: 30542.926 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  30053.721 ±(99.9%) 7906.556 ns/op [Average]
  (min, avg, max) = (29717.841, 30053.721, 30542.926), stdev = 433.385
  CI (99.9%): [22147.164, 37960.277] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 81.25% complete, ETA 00:05:05
# Fork: 1 of 1
# Warmup Iteration   1: 63.598 ns/op
# Warmup Iteration   2: 62.877 ns/op
# Warmup Iteration   3: 54.511 ns/op
# Warmup Iteration   4: 54.022 ns/op
# Warmup Iteration   5: 54.044 ns/op
Iteration   1: 54.770 ns/op
Iteration   2: 54.544 ns/op
Iteration   3: 54.483 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  54.599 ±(99.9%) 2.763 ns/op [Average]
  (min, avg, max) = (54.483, 54.599, 54.770), stdev = 0.151
  CI (99.9%): [51.837, 57.362] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 82.14% complete, ETA 00:04:50
# Fork: 1 of 1
# Warmup Iteration   1: 89.290 ns/op
# Warmup Iteration   2: 86.934 ns/op
# Warmup Iteration   3: 80.804 ns/op
# Warmup Iteration   4: 79.047 ns/op
# Warmup Iteration   5: 77.314 ns/op
Iteration   1: 77.217 ns/op
Iteration   2: 77.366 ns/op
Iteration   3: 77.536 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  77.373 ±(99.9%) 2.913 ns/op [Average]
  (min, avg, max) = (77.217, 77.373, 77.536), stdev = 0.160
  CI (99.9%): [74.460, 80.287] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 83.04% complete, ETA 00:04:36
# Fork: 1 of 1
# Warmup Iteration   1: 221.289 ns/op
# Warmup Iteration   2: 215.151 ns/op
# Warmup Iteration   3: 214.975 ns/op
# Warmup Iteration   4: 210.686 ns/op
# Warmup Iteration   5: 199.419 ns/op
Iteration   1: 199.767 ns/op
Iteration   2: 199.482 ns/op
Iteration   3: 199.630 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  199.626 ±(99.9%) 2.602 ns/op [Average]
  (min, avg, max) = (199.482, 199.626, 199.767), stdev = 0.143
  CI (99.9%): [197.025, 202.228] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 83.93% complete, ETA 00:04:21
# Fork: 1 of 1
# Warmup Iteration   1: 382.377 ns/op
# Warmup Iteration   2: 363.977 ns/op
# Warmup Iteration   3: 356.403 ns/op
# Warmup Iteration   4: 343.334 ns/op
# Warmup Iteration   5: 345.749 ns/op
Iteration   1: 342.228 ns/op
Iteration   2: 349.663 ns/op
Iteration   3: 346.946 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  346.279 ±(99.9%) 68.631 ns/op [Average]
  (min, avg, max) = (342.228, 346.279, 349.663), stdev = 3.762
  CI (99.9%): [277.648, 414.910] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 84.82% complete, ETA 00:04:07
# Fork: 1 of 1
# Warmup Iteration   1: 1796.025 ns/op
# Warmup Iteration   2: 1659.127 ns/op
# Warmup Iteration   3: 1573.865 ns/op
# Warmup Iteration   4: 1572.841 ns/op
# Warmup Iteration   5: 1573.617 ns/op
Iteration   1: 1574.656 ns/op
Iteration   2: 1594.127 ns/op
Iteration   3: 1581.204 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  1583.329 ±(99.9%) 180.761 ns/op [Average]
  (min, avg, max) = (1574.656, 1583.329, 1594.127), stdev = 9.908
  CI (99.9%): [1402.568, 1764.090] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 85.71% complete, ETA 00:03:52
# Fork: 1 of 1
# Warmup Iteration   1: 3437.109 ns/op
# Warmup Iteration   2: 3330.724 ns/op
# Warmup Iteration   3: 3375.238 ns/op
# Warmup Iteration   4: 3078.076 ns/op
# Warmup Iteration   5: 3079.840 ns/op
Iteration   1: 3114.915 ns/op
Iteration   2: 3088.582 ns/op
Iteration   3: 3087.781 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  3097.093 ±(99.9%) 281.681 ns/op [Average]
  (min, avg, max) = (3087.781, 3097.093, 3114.915), stdev = 15.440
  CI (99.9%): [2815.411, 3378.774] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 86.61% complete, ETA 00:03:38
# Fork: 1 of 1
# Warmup Iteration   1: 35593.978 ns/op
# Warmup Iteration   2: 32346.885 ns/op
# Warmup Iteration   3: 33600.773 ns/op
# Warmup Iteration   4: 30888.100 ns/op
# Warmup Iteration   5: 30991.255 ns/op
Iteration   1: 30957.976 ns/op
Iteration   2: 31003.180 ns/op
Iteration   3: 31198.778 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  31053.311 ±(99.9%) 2334.999 ns/op [Average]
  (min, avg, max) = (30957.976, 31053.311, 31198.778), stdev = 127.989
  CI (99.9%): [28718.312, 33388.311] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 87.50% complete, ETA 00:03:23
# Fork: 1 of 1
# Warmup Iteration   1: 59.253 ns/op
# Warmup Iteration   2: 59.055 ns/op
# Warmup Iteration   3: 50.946 ns/op
# Warmup Iteration   4: 50.986 ns/op
# Warmup Iteration   5: 51.028 ns/op
Iteration   1: 51.474 ns/op
Iteration   2: 51.162 ns/op
Iteration   3: 51.662 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  51.433 ±(99.9%) 4.605 ns/op [Average]
  (min, avg, max) = (51.162, 51.433, 51.662), stdev = 0.252
  CI (99.9%): [46.828, 56.038] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 88.39% complete, ETA 00:03:08
# Fork: 1 of 1
# Warmup Iteration   1: 91.305 ns/op
# Warmup Iteration   2: 87.772 ns/op
# Warmup Iteration   3: 80.841 ns/op
# Warmup Iteration   4: 77.901 ns/op
# Warmup Iteration   5: 78.096 ns/op
Iteration   1: 77.866 ns/op
Iteration   2: 78.224 ns/op
Iteration   3: 78.409 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  78.166 ±(99.9%) 5.033 ns/op [Average]
  (min, avg, max) = (77.866, 78.166, 78.409), stdev = 0.276
  CI (99.9%): [73.133, 83.199] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 89.29% complete, ETA 00:02:54
# Fork: 1 of 1
# Warmup Iteration   1: 177.952 ns/op
# Warmup Iteration   2: 171.271 ns/op
# Warmup Iteration   3: 155.166 ns/op
# Warmup Iteration   4: 155.893 ns/op
# Warmup Iteration   5: 156.523 ns/op
Iteration   1: 155.932 ns/op
Iteration   2: 156.685 ns/op
Iteration   3: 156.462 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  156.360 ±(99.9%) 7.051 ns/op [Average]
  (min, avg, max) = (155.932, 156.360, 156.685), stdev = 0.386
  CI (99.9%): [149.308, 163.411] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 90.18% complete, ETA 00:02:39
# Fork: 1 of 1
# Warmup Iteration   1: 264.122 ns/op
# Warmup Iteration   2: 254.683 ns/op
# Warmup Iteration   3: 244.464 ns/op
# Warmup Iteration   4: 231.466 ns/op
# Warmup Iteration   5: 232.171 ns/op
Iteration   1: 241.454 ns/op
Iteration   2: 233.116 ns/op
Iteration   3: 234.184 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  236.251 ±(99.9%) 82.775 ns/op [Average]
  (min, avg, max) = (233.116, 236.251, 241.454), stdev = 4.537
  CI (99.9%): [153.476, 319.027] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 91.07% complete, ETA 00:02:25
# Fork: 1 of 1
# Warmup Iteration   1: 1036.875 ns/op
# Warmup Iteration   2: 993.091 ns/op
# Warmup Iteration   3: 904.769 ns/op
# Warmup Iteration   4: 932.390 ns/op
# Warmup Iteration   5: 940.142 ns/op
Iteration   1: 887.361 ns/op
Iteration   2: 895.183 ns/op
Iteration   3: 892.147 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  891.564 ±(99.9%) 71.947 ns/op [Average]
  (min, avg, max) = (887.361, 891.564, 895.183), stdev = 3.944
  CI (99.9%): [819.617, 963.511] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 91.96% complete, ETA 00:02:10
# Fork: 1 of 1
# Warmup Iteration   1: 2029.524 ns/op
# Warmup Iteration   2: 2006.319 ns/op
# Warmup Iteration   3: 1790.300 ns/op
# Warmup Iteration   4: 1884.198 ns/op
# Warmup Iteration   5: 1754.376 ns/op
Iteration   1: 1760.974 ns/op
Iteration   2: 1838.423 ns/op
Iteration   3: 1776.136 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  1791.844 ±(99.9%) 748.808 ns/op [Average]
  (min, avg, max) = (1760.974, 1791.844, 1838.423), stdev = 41.045
  CI (99.9%): [1043.036, 2540.653] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 92.86% complete, ETA 00:01:56
# Fork: 1 of 1
# Warmup Iteration   1: 20287.539 ns/op
# Warmup Iteration   2: 19145.178 ns/op
# Warmup Iteration   3: 17620.672 ns/op
# Warmup Iteration   4: 16955.966 ns/op
# Warmup Iteration   5: 16991.174 ns/op
Iteration   1: 17073.969 ns/op
Iteration   2: 17071.937 ns/op
Iteration   3: 17936.478 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  17360.795 ±(99.9%) 9095.548 ns/op [Average]
  (min, avg, max) = (17071.937, 17360.795, 17936.478), stdev = 498.558
  CI (99.9%): [8265.246, 26456.343] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 93.75% complete, ETA 00:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 59.882 ns/op
# Warmup Iteration   2: 59.329 ns/op
# Warmup Iteration   3: 51.019 ns/op
# Warmup Iteration   4: 50.977 ns/op
# Warmup Iteration   5: 50.968 ns/op
Iteration   1: 51.046 ns/op
Iteration   2: 51.117 ns/op
Iteration   3: 51.275 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  51.146 ±(99.9%) 2.134 ns/op [Average]
  (min, avg, max) = (51.046, 51.146, 51.275), stdev = 0.117
  CI (99.9%): [49.012, 53.281] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 94.64% complete, ETA 00:01:27
# Fork: 1 of 1
# Warmup Iteration   1: 90.165 ns/op
# Warmup Iteration   2: 91.708 ns/op
# Warmup Iteration   3: 81.987 ns/op
# Warmup Iteration   4: 78.058 ns/op
# Warmup Iteration   5: 78.491 ns/op
Iteration   1: 77.877 ns/op
Iteration   2: 78.663 ns/op
Iteration   3: 78.190 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  78.243 ±(99.9%) 7.214 ns/op [Average]
  (min, avg, max) = (77.877, 78.243, 78.663), stdev = 0.395
  CI (99.9%): [71.029, 85.457] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 95.54% complete, ETA 00:01:12
# Fork: 1 of 1
# Warmup Iteration   1: 185.081 ns/op
# Warmup Iteration   2: 174.273 ns/op
# Warmup Iteration   3: 165.550 ns/op
# Warmup Iteration   4: 154.758 ns/op
# Warmup Iteration   5: 154.929 ns/op
Iteration   1: 154.413 ns/op
Iteration   2: 153.981 ns/op
Iteration   3: 154.645 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  154.346 ±(99.9%) 6.144 ns/op [Average]
  (min, avg, max) = (153.981, 154.346, 154.645), stdev = 0.337
  CI (99.9%): [148.202, 160.490] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 96.43% complete, ETA 00:00:58
# Fork: 1 of 1
# Warmup Iteration   1: 258.244 ns/op
# Warmup Iteration   2: 249.046 ns/op
# Warmup Iteration   3: 241.595 ns/op
# Warmup Iteration   4: 228.100 ns/op
# Warmup Iteration   5: 227.707 ns/op
Iteration   1: 234.195 ns/op
Iteration   2: 228.891 ns/op
Iteration   3: 230.550 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  231.212 ±(99.9%) 49.496 ns/op [Average]
  (min, avg, max) = (228.891, 231.212, 234.195), stdev = 2.713
  CI (99.9%): [181.716, 280.708] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 97.32% complete, ETA 00:00:43
# Fork: 1 of 1
# Warmup Iteration   1: 1037.194 ns/op
# Warmup Iteration   2: 999.876 ns/op
# Warmup Iteration   3: 901.666 ns/op
# Warmup Iteration   4: 884.368 ns/op
# Warmup Iteration   5: 886.286 ns/op
Iteration   1: 886.670 ns/op
Iteration   2: 891.063 ns/op
Iteration   3: 912.785 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  896.839 ±(99.9%) 255.100 ns/op [Average]
  (min, avg, max) = (886.670, 896.839, 912.785), stdev = 13.983
  CI (99.9%): [641.740, 1151.939] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 98.21% complete, ETA 00:00:29
# Fork: 1 of 1
# Warmup Iteration   1: 2036.634 ns/op
# Warmup Iteration   2: 1962.830 ns/op
# Warmup Iteration   3: 1794.102 ns/op
# Warmup Iteration   4: 1752.816 ns/op
# Warmup Iteration   5: 1756.293 ns/op
Iteration   1: 1798.900 ns/op
Iteration   2: 1812.460 ns/op
Iteration   3: 1775.079 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  1795.480 ±(99.9%) 345.241 ns/op [Average]
  (min, avg, max) = (1775.079, 1795.480, 1812.460), stdev = 18.924
  CI (99.9%): [1450.238, 2140.721] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.11% complete, ETA 00:00:14
# Fork: 1 of 1
# Warmup Iteration   1: 20498.700 ns/op
# Warmup Iteration   2: 18973.013 ns/op
# Warmup Iteration   3: 17166.332 ns/op
# Warmup Iteration   4: 16968.347 ns/op
# Warmup Iteration   5: 16995.073 ns/op
Iteration   1: 16985.971 ns/op
Iteration   2: 17398.286 ns/op
Iteration   3: 17157.067 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  17180.441 ±(99.9%) 3779.169 ns/op [Average]
  (min, avg, max) = (16985.971, 17180.441, 17398.286), stdev = 207.149
  CI (99.9%): [13401.272, 20959.610] (assumes normal distribution)


# Run complete. Total time: 00:27:07

Benchmark                          (dataset)  (length)  Mode  Cnt      Score       Error  Units
Base64Benchmarks.commonsDecode         fixed         1  avgt    3    733.288 ±   540.203  ns/op
Base64Benchmarks.commonsDecode         fixed        10  avgt    3    818.704 ±   193.561  ns/op
Base64Benchmarks.commonsDecode         fixed        50  avgt    3   1232.716 ±   628.797  ns/op
Base64Benchmarks.commonsDecode         fixed       100  avgt    3   1771.332 ±   108.357  ns/op
Base64Benchmarks.commonsDecode         fixed       500  avgt    3   6633.207 ±  5639.794  ns/op
Base64Benchmarks.commonsDecode         fixed      1000  avgt    3   8499.572 ±   326.708  ns/op
Base64Benchmarks.commonsDecode         fixed     10000  avgt    3  83825.623 ± 10189.737  ns/op
Base64Benchmarks.commonsDecode        random         1  avgt    3    710.518 ±   399.889  ns/op
Base64Benchmarks.commonsDecode        random        10  avgt    3    783.668 ±   104.047  ns/op
Base64Benchmarks.commonsDecode        random        50  avgt    3   1227.935 ±   162.950  ns/op
Base64Benchmarks.commonsDecode        random       100  avgt    3   1810.694 ±   523.053  ns/op
Base64Benchmarks.commonsDecode        random       500  avgt    3   6525.677 ±  1466.905  ns/op
Base64Benchmarks.commonsDecode        random      1000  avgt    3  12528.343 ±   666.177  ns/op
Base64Benchmarks.commonsDecode        random     10000  avgt    3  85758.801 ± 10382.879  ns/op
Base64Benchmarks.commonsEncode         fixed         1  avgt    3    716.001 ±   108.346  ns/op
Base64Benchmarks.commonsEncode         fixed        10  avgt    3    805.109 ±   210.698  ns/op
Base64Benchmarks.commonsEncode         fixed        50  avgt    3   1179.569 ±   181.388  ns/op
Base64Benchmarks.commonsEncode         fixed       100  avgt    3   1672.460 ±   371.966  ns/op
Base64Benchmarks.commonsEncode         fixed       500  avgt    3   5835.853 ±   967.120  ns/op
Base64Benchmarks.commonsEncode         fixed      1000  avgt    3  10834.260 ±  2675.422  ns/op
Base64Benchmarks.commonsEncode         fixed     10000  avgt    3  90869.124 ±  4620.541  ns/op
Base64Benchmarks.commonsEncode        random         1  avgt    3    712.784 ±   463.341  ns/op
Base64Benchmarks.commonsEncode        random        10  avgt    3    814.785 ±   235.981  ns/op
Base64Benchmarks.commonsEncode        random        50  avgt    3   1159.991 ±   122.480  ns/op
Base64Benchmarks.commonsEncode        random       100  avgt    3   1704.761 ±   735.371  ns/op
Base64Benchmarks.commonsEncode        random       500  avgt    3   5798.915 ±   545.203  ns/op
Base64Benchmarks.commonsEncode        random      1000  avgt    3  11088.616 ±  3285.036  ns/op
Base64Benchmarks.commonsEncode        random     10000  avgt    3  91189.593 ±  5170.364  ns/op
Base64Benchmarks.commonsUrlDecode      fixed         1  avgt    3    709.673 ±   249.506  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        10  avgt    3    805.914 ±   295.223  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        50  avgt    3   1192.582 ±   382.383  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       100  avgt    3   1689.955 ±    16.901  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       500  avgt    3   5869.652 ±   416.629  ns/op
Base64Benchmarks.commonsUrlDecode      fixed      1000  avgt    3  11175.598 ±  1435.977  ns/op
Base64Benchmarks.commonsUrlDecode      fixed     10000  avgt    3  86094.743 ±  1685.156  ns/op
Base64Benchmarks.commonsUrlDecode     random         1  avgt    3    708.045 ±   236.065  ns/op
Base64Benchmarks.commonsUrlDecode     random        10  avgt    3    817.652 ±   693.346  ns/op
Base64Benchmarks.commonsUrlDecode     random        50  avgt    3   1181.642 ±   263.578  ns/op
Base64Benchmarks.commonsUrlDecode     random       100  avgt    3   1705.168 ±   330.701  ns/op
Base64Benchmarks.commonsUrlDecode     random       500  avgt    3   5985.663 ±  2079.633  ns/op
Base64Benchmarks.commonsUrlDecode     random      1000  avgt    3  11055.266 ±  1063.416  ns/op
Base64Benchmarks.commonsUrlDecode     random     10000  avgt    3  86194.827 ±  3475.701  ns/op
Base64Benchmarks.commonsUrlEncode      fixed         1  avgt    3    710.081 ±   353.175  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        10  avgt    3    790.743 ±   217.583  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        50  avgt    3   1138.135 ±    89.329  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       100  avgt    3   1629.945 ±   158.162  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       500  avgt    3   5466.116 ±  1191.201  ns/op
Base64Benchmarks.commonsUrlEncode      fixed      1000  avgt    3  10600.846 ±  2340.379  ns/op
Base64Benchmarks.commonsUrlEncode      fixed     10000  avgt    3  91686.869 ±  4381.207  ns/op
Base64Benchmarks.commonsUrlEncode     random         1  avgt    3    712.686 ±   226.045  ns/op
Base64Benchmarks.commonsUrlEncode     random        10  avgt    3    794.172 ±   284.514  ns/op
Base64Benchmarks.commonsUrlEncode     random        50  avgt    3   1150.376 ±   261.000  ns/op
Base64Benchmarks.commonsUrlEncode     random       100  avgt    3   1637.875 ±   260.423  ns/op
Base64Benchmarks.commonsUrlEncode     random       500  avgt    3   5378.669 ±   228.231  ns/op
Base64Benchmarks.commonsUrlEncode     random      1000  avgt    3  10713.124 ±  3364.091  ns/op
Base64Benchmarks.commonsUrlEncode     random     10000  avgt    3  90445.902 ±  5268.356  ns/op
Base64Benchmarks.jdkDecode             fixed         1  avgt    3     57.247 ±     4.563  ns/op
Base64Benchmarks.jdkDecode             fixed        10  avgt    3     92.547 ±    26.761  ns/op
Base64Benchmarks.jdkDecode             fixed        50  avgt    3    267.055 ±    89.658  ns/op
Base64Benchmarks.jdkDecode             fixed       100  avgt    3    458.342 ±    83.148  ns/op
Base64Benchmarks.jdkDecode             fixed       500  avgt    3   2362.425 ±   598.949  ns/op
Base64Benchmarks.jdkDecode             fixed      1000  avgt    3   4266.451 ±   166.713  ns/op
Base64Benchmarks.jdkDecode             fixed     10000  avgt    3  64224.594 ±  5602.251  ns/op
Base64Benchmarks.jdkDecode            random         1  avgt    3     58.181 ±    13.175  ns/op
Base64Benchmarks.jdkDecode            random        10  avgt    3     91.219 ±    19.270  ns/op
Base64Benchmarks.jdkDecode            random        50  avgt    3    263.360 ±    16.113  ns/op
Base64Benchmarks.jdkDecode            random       100  avgt    3    460.114 ±   171.164  ns/op
Base64Benchmarks.jdkDecode            random       500  avgt    3   2340.168 ±   114.825  ns/op
Base64Benchmarks.jdkDecode            random      1000  avgt    3   4284.993 ±   540.504  ns/op
Base64Benchmarks.jdkDecode            random     10000  avgt    3  48993.870 ±  7341.750  ns/op
Base64Benchmarks.jdkEncode             fixed         1  avgt    3     49.231 ±     6.388  ns/op
Base64Benchmarks.jdkEncode             fixed        10  avgt    3     78.688 ±    14.991  ns/op
Base64Benchmarks.jdkEncode             fixed        50  avgt    3    133.886 ±    17.809  ns/op
Base64Benchmarks.jdkEncode             fixed       100  avgt    3    232.528 ±    18.679  ns/op
Base64Benchmarks.jdkEncode             fixed       500  avgt    3    899.060 ±    53.066  ns/op
Base64Benchmarks.jdkEncode             fixed      1000  avgt    3   1811.199 ±   522.480  ns/op
Base64Benchmarks.jdkEncode             fixed     10000  avgt    3  17174.896 ±  3731.592  ns/op
Base64Benchmarks.jdkEncode            random         1  avgt    3     49.044 ±     4.006  ns/op
Base64Benchmarks.jdkEncode            random        10  avgt    3     78.269 ±    20.016  ns/op
Base64Benchmarks.jdkEncode            random        50  avgt    3    144.932 ±    29.756  ns/op
Base64Benchmarks.jdkEncode            random       100  avgt    3    235.065 ±    54.738  ns/op
Base64Benchmarks.jdkEncode            random       500  avgt    3    914.120 ±   221.529  ns/op
Base64Benchmarks.jdkEncode            random      1000  avgt    3   1796.085 ±   261.349  ns/op
Base64Benchmarks.jdkEncode            random     10000  avgt    3  16983.317 ±  1245.556  ns/op
Base64Benchmarks.jdkUrlDecode          fixed         1  avgt    3     54.704 ±     7.648  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        10  avgt    3     80.243 ±    10.529  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        50  avgt    3    199.563 ±     6.195  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       100  avgt    3    342.904 ±    23.854  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       500  avgt    3   1581.443 ±   364.425  ns/op
Base64Benchmarks.jdkUrlDecode          fixed      1000  avgt    3   3135.439 ±    72.047  ns/op
Base64Benchmarks.jdkUrlDecode          fixed     10000  avgt    3  30053.721 ±  7906.556  ns/op
Base64Benchmarks.jdkUrlDecode         random         1  avgt    3     54.599 ±     2.763  ns/op
Base64Benchmarks.jdkUrlDecode         random        10  avgt    3     77.373 ±     2.913  ns/op
Base64Benchmarks.jdkUrlDecode         random        50  avgt    3    199.626 ±     2.602  ns/op
Base64Benchmarks.jdkUrlDecode         random       100  avgt    3    346.279 ±    68.631  ns/op
Base64Benchmarks.jdkUrlDecode         random       500  avgt    3   1583.329 ±   180.761  ns/op
Base64Benchmarks.jdkUrlDecode         random      1000  avgt    3   3097.093 ±   281.681  ns/op
Base64Benchmarks.jdkUrlDecode         random     10000  avgt    3  31053.311 ±  2334.999  ns/op
Base64Benchmarks.jdkUrlEncode          fixed         1  avgt    3     51.433 ±     4.605  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        10  avgt    3     78.166 ±     5.033  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        50  avgt    3    156.360 ±     7.051  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       100  avgt    3    236.251 ±    82.775  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       500  avgt    3    891.564 ±    71.947  ns/op
Base64Benchmarks.jdkUrlEncode          fixed      1000  avgt    3   1791.844 ±   748.808  ns/op
Base64Benchmarks.jdkUrlEncode          fixed     10000  avgt    3  17360.795 ±  9095.548  ns/op
Base64Benchmarks.jdkUrlEncode         random         1  avgt    3     51.146 ±     2.134  ns/op
Base64Benchmarks.jdkUrlEncode         random        10  avgt    3     78.243 ±     7.214  ns/op
Base64Benchmarks.jdkUrlEncode         random        50  avgt    3    154.346 ±     6.144  ns/op
Base64Benchmarks.jdkUrlEncode         random       100  avgt    3    231.212 ±    49.496  ns/op
Base64Benchmarks.jdkUrlEncode         random       500  avgt    3    896.839 ±   255.100  ns/op
Base64Benchmarks.jdkUrlEncode         random      1000  avgt    3   1795.480 ±   345.241  ns/op
Base64Benchmarks.jdkUrlEncode         random     10000  avgt    3  17180.441 ±  3779.169  ns/op

Benchmark result is saved to /static/data/charts/base64-jdk-vs-commons/jdk8.json
