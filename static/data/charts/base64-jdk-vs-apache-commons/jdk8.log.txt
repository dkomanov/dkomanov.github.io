# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:18:40
# Fork: 1 of 1
# Warmup Iteration   1: 963.441 ns/op
# Warmup Iteration   2: 710.023 ns/op
# Warmup Iteration   3: 704.125 ns/op
# Warmup Iteration   4: 693.600 ns/op
# Warmup Iteration   5: 759.184 ns/op
Iteration   1: 696.373 ns/op
Iteration   2: 710.612 ns/op
Iteration   3: 732.341 ns/op
Iteration   4: 736.962 ns/op
Iteration   5: 739.717 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  723.201 ±(99.9%) 72.651 ns/op [Average]
  (min, avg, max) = (696.373, 723.201, 739.717), stdev = 18.867
  CI (99.9%): [650.550, 795.852] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.89% complete, ETA 00:19:45
# Fork: 1 of 1
# Warmup Iteration   1: 1003.341 ns/op
# Warmup Iteration   2: 809.285 ns/op
# Warmup Iteration   3: 801.290 ns/op
# Warmup Iteration   4: 785.197 ns/op
# Warmup Iteration   5: 804.503 ns/op
Iteration   1: 833.577 ns/op
Iteration   2: 880.968 ns/op
Iteration   3: 821.077 ns/op
Iteration   4: 812.031 ns/op
Iteration   5: 787.130 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  826.957 ±(99.9%) 133.453 ns/op [Average]
  (min, avg, max) = (787.130, 826.957, 880.968), stdev = 34.657
  CI (99.9%): [693.504, 960.410] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 1.79% complete, ETA 00:19:29
# Fork: 1 of 1
# Warmup Iteration   1: 1576.764 ns/op
# Warmup Iteration   2: 1243.404 ns/op
# Warmup Iteration   3: 1279.970 ns/op
# Warmup Iteration   4: 1249.659 ns/op
# Warmup Iteration   5: 1230.263 ns/op
Iteration   1: 1310.978 ns/op
Iteration   2: 1208.922 ns/op
Iteration   3: 1261.744 ns/op
Iteration   4: 1217.791 ns/op
Iteration   5: 1250.608 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1250.009 ±(99.9%) 156.194 ns/op [Average]
  (min, avg, max) = (1208.922, 1250.009, 1310.978), stdev = 40.563
  CI (99.9%): [1093.815, 1406.202] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 2.68% complete, ETA 00:19:16
# Fork: 1 of 1
# Warmup Iteration   1: 2463.161 ns/op
# Warmup Iteration   2: 1879.613 ns/op
# Warmup Iteration   3: 1812.653 ns/op
# Warmup Iteration   4: 1764.679 ns/op
# Warmup Iteration   5: 1781.514 ns/op
Iteration   1: 1777.640 ns/op
Iteration   2: 1809.605 ns/op
Iteration   3: 1861.021 ns/op
Iteration   4: 1763.848 ns/op
Iteration   5: 1758.292 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1794.081 ±(99.9%) 163.223 ns/op [Average]
  (min, avg, max) = (1758.292, 1794.081, 1861.021), stdev = 42.388
  CI (99.9%): [1630.858, 1957.304] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 3.57% complete, ETA 00:19:05
# Fork: 1 of 1
# Warmup Iteration   1: 8079.481 ns/op
# Warmup Iteration   2: 6948.737 ns/op
# Warmup Iteration   3: 6588.392 ns/op
# Warmup Iteration   4: 6762.564 ns/op
# Warmup Iteration   5: 6654.259 ns/op
Iteration   1: 6611.289 ns/op
Iteration   2: 6524.401 ns/op
Iteration   3: 6738.686 ns/op
Iteration   4: 6716.991 ns/op
Iteration   5: 6656.671 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  6649.608 ±(99.9%) 331.638 ns/op [Average]
  (min, avg, max) = (6524.401, 6649.608, 6738.686), stdev = 86.125
  CI (99.9%): [6317.970, 6981.245] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 4.46% complete, ETA 00:18:53
# Fork: 1 of 1
# Warmup Iteration   1: 14929.084 ns/op
# Warmup Iteration   2: 13534.527 ns/op
# Warmup Iteration   3: 12902.513 ns/op
# Warmup Iteration   4: 12420.293 ns/op
# Warmup Iteration   5: 12432.359 ns/op
Iteration   1: 12373.574 ns/op
Iteration   2: 12382.470 ns/op
Iteration   3: 12414.776 ns/op
Iteration   4: 12435.849 ns/op
Iteration   5: 12461.931 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  12413.720 ±(99.9%) 141.525 ns/op [Average]
  (min, avg, max) = (12373.574, 12413.720, 12461.931), stdev = 36.754
  CI (99.9%): [12272.195, 12555.245] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 5.36% complete, ETA 00:18:42
# Fork: 1 of 1
# Warmup Iteration   1: 96742.321 ns/op
# Warmup Iteration   2: 91800.531 ns/op
# Warmup Iteration   3: 87383.998 ns/op
# Warmup Iteration   4: 85485.764 ns/op
# Warmup Iteration   5: 85596.681 ns/op
Iteration   1: 85801.974 ns/op
Iteration   2: 85670.976 ns/op
Iteration   3: 85269.202 ns/op
Iteration   4: 85406.483 ns/op
Iteration   5: 86139.516 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  85657.630 ±(99.9%) 1315.967 ns/op [Average]
  (min, avg, max) = (85269.202, 85657.630, 86139.516), stdev = 341.752
  CI (99.9%): [84341.664, 86973.597] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 6.25% complete, ETA 00:18:31
# Fork: 1 of 1
# Warmup Iteration   1: 923.995 ns/op
# Warmup Iteration   2: 773.188 ns/op
# Warmup Iteration   3: 699.142 ns/op
# Warmup Iteration   4: 705.777 ns/op
# Warmup Iteration   5: 698.682 ns/op
Iteration   1: 722.695 ns/op
Iteration   2: 712.514 ns/op
Iteration   3: 699.883 ns/op
Iteration   4: 717.847 ns/op
Iteration   5: 726.608 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  715.909 ±(99.9%) 40.045 ns/op [Average]
  (min, avg, max) = (699.883, 715.909, 726.608), stdev = 10.400
  CI (99.9%): [675.864, 755.955] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 7.14% complete, ETA 00:18:20
# Fork: 1 of 1
# Warmup Iteration   1: 1041.788 ns/op
# Warmup Iteration   2: 817.041 ns/op
# Warmup Iteration   3: 796.234 ns/op
# Warmup Iteration   4: 814.743 ns/op
# Warmup Iteration   5: 789.497 ns/op
Iteration   1: 787.581 ns/op
Iteration   2: 798.137 ns/op
Iteration   3: 830.631 ns/op
Iteration   4: 802.569 ns/op
Iteration   5: 812.224 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  806.228 ±(99.9%) 62.625 ns/op [Average]
  (min, avg, max) = (787.581, 806.228, 830.631), stdev = 16.263
  CI (99.9%): [743.603, 868.853] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 8.04% complete, ETA 00:18:08
# Fork: 1 of 1
# Warmup Iteration   1: 1625.571 ns/op
# Warmup Iteration   2: 1252.302 ns/op
# Warmup Iteration   3: 1290.729 ns/op
# Warmup Iteration   4: 1271.034 ns/op
# Warmup Iteration   5: 1271.633 ns/op
Iteration   1: 1242.998 ns/op
Iteration   2: 1240.568 ns/op
Iteration   3: 1270.765 ns/op
Iteration   4: 1348.334 ns/op
Iteration   5: 1256.983 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1271.929 ±(99.9%) 170.943 ns/op [Average]
  (min, avg, max) = (1240.568, 1271.929, 1348.334), stdev = 44.393
  CI (99.9%): [1100.987, 1442.872] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 8.93% complete, ETA 00:17:56
# Fork: 1 of 1
# Warmup Iteration   1: 2376.886 ns/op
# Warmup Iteration   2: 1817.561 ns/op
# Warmup Iteration   3: 1801.981 ns/op
# Warmup Iteration   4: 1975.954 ns/op
# Warmup Iteration   5: 1823.646 ns/op
Iteration   1: 1820.678 ns/op
Iteration   2: 1834.670 ns/op
Iteration   3: 2238.283 ns/op
Iteration   4: 2097.001 ns/op
Iteration   5: 1897.138 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1977.554 ±(99.9%) 704.099 ns/op [Average]
  (min, avg, max) = (1820.678, 1977.554, 2238.283), stdev = 182.852
  CI (99.9%): [1273.455, 2681.653] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 9.82% complete, ETA 00:17:45
# Fork: 1 of 1
# Warmup Iteration   1: 9289.122 ns/op
# Warmup Iteration   2: 6954.346 ns/op
# Warmup Iteration   3: 6555.079 ns/op
# Warmup Iteration   4: 6862.547 ns/op
# Warmup Iteration   5: 6505.848 ns/op
Iteration   1: 6487.869 ns/op
Iteration   2: 6479.240 ns/op
Iteration   3: 6465.680 ns/op
Iteration   4: 6558.587 ns/op
Iteration   5: 6497.390 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  6497.753 ±(99.9%) 138.437 ns/op [Average]
  (min, avg, max) = (6465.680, 6497.753, 6558.587), stdev = 35.952
  CI (99.9%): [6359.317, 6636.190] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 10.71% complete, ETA 00:17:34
# Fork: 1 of 1
# Warmup Iteration   1: 13507.849 ns/op
# Warmup Iteration   2: 12961.856 ns/op
# Warmup Iteration   3: 11540.186 ns/op
# Warmup Iteration   4: 11412.233 ns/op
# Warmup Iteration   5: 12743.680 ns/op
Iteration   1: 11336.825 ns/op
Iteration   2: 11274.928 ns/op
Iteration   3: 11301.725 ns/op
Iteration   4: 11323.346 ns/op
Iteration   5: 11328.120 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  11312.989 ±(99.9%) 95.877 ns/op [Average]
  (min, avg, max) = (11274.928, 11312.989, 11336.825), stdev = 24.899
  CI (99.9%): [11217.111, 11408.866] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 11.61% complete, ETA 00:17:23
# Fork: 1 of 1
# Warmup Iteration   1: 101016.324 ns/op
# Warmup Iteration   2: 92473.514 ns/op
# Warmup Iteration   3: 89019.346 ns/op
# Warmup Iteration   4: 86230.405 ns/op
# Warmup Iteration   5: 86568.892 ns/op
Iteration   1: 88251.897 ns/op
Iteration   2: 88374.866 ns/op
Iteration   3: 86040.475 ns/op
Iteration   4: 86652.360 ns/op
Iteration   5: 86885.705 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  87241.061 ±(99.9%) 3955.849 ns/op [Average]
  (min, avg, max) = (86040.475, 87241.061, 88374.866), stdev = 1027.321
  CI (99.9%): [83285.212, 91196.910] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 12.50% complete, ETA 00:17:12
# Fork: 1 of 1
# Warmup Iteration   1: 902.592 ns/op
# Warmup Iteration   2: 711.993 ns/op
# Warmup Iteration   3: 704.973 ns/op
# Warmup Iteration   4: 738.296 ns/op
# Warmup Iteration   5: 703.782 ns/op
Iteration   1: 710.954 ns/op
Iteration   2: 705.833 ns/op
Iteration   3: 728.872 ns/op
Iteration   4: 792.174 ns/op
Iteration   5: 702.224 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  728.012 ±(99.9%) 143.632 ns/op [Average]
  (min, avg, max) = (702.224, 728.012, 792.174), stdev = 37.301
  CI (99.9%): [584.380, 871.644] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 13.39% complete, ETA 00:17:02
# Fork: 1 of 1
# Warmup Iteration   1: 1028.785 ns/op
# Warmup Iteration   2: 848.095 ns/op
# Warmup Iteration   3: 794.411 ns/op
# Warmup Iteration   4: 805.264 ns/op
# Warmup Iteration   5: 791.761 ns/op
Iteration   1: 791.613 ns/op
Iteration   2: 830.320 ns/op
Iteration   3: 812.769 ns/op
Iteration   4: 793.307 ns/op
Iteration   5: 791.692 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  803.940 ±(99.9%) 66.386 ns/op [Average]
  (min, avg, max) = (791.613, 803.940, 830.320), stdev = 17.240
  CI (99.9%): [737.554, 870.326] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 14.29% complete, ETA 00:16:52
# Fork: 1 of 1
# Warmup Iteration   1: 1514.488 ns/op
# Warmup Iteration   2: 1200.991 ns/op
# Warmup Iteration   3: 1195.536 ns/op
# Warmup Iteration   4: 1157.984 ns/op
# Warmup Iteration   5: 1164.960 ns/op
Iteration   1: 1163.652 ns/op
Iteration   2: 1162.540 ns/op
Iteration   3: 1157.778 ns/op
Iteration   4: 1165.945 ns/op
Iteration   5: 1159.463 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1161.876 ±(99.9%) 12.591 ns/op [Average]
  (min, avg, max) = (1157.778, 1161.876, 1165.945), stdev = 3.270
  CI (99.9%): [1149.284, 1174.467] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 15.18% complete, ETA 00:16:42
# Fork: 1 of 1
# Warmup Iteration   1: 2213.545 ns/op
# Warmup Iteration   2: 1697.668 ns/op
# Warmup Iteration   3: 1892.103 ns/op
# Warmup Iteration   4: 1775.017 ns/op
# Warmup Iteration   5: 1715.020 ns/op
Iteration   1: 1731.304 ns/op
Iteration   2: 1655.653 ns/op
Iteration   3: 1666.678 ns/op
Iteration   4: 1676.949 ns/op
Iteration   5: 1663.063 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1678.729 ±(99.9%) 116.961 ns/op [Average]
  (min, avg, max) = (1655.653, 1678.729, 1731.304), stdev = 30.374
  CI (99.9%): [1561.769, 1795.690] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 16.07% complete, ETA 00:16:31
# Fork: 1 of 1
# Warmup Iteration   1: 7566.073 ns/op
# Warmup Iteration   2: 6161.509 ns/op
# Warmup Iteration   3: 6182.351 ns/op
# Warmup Iteration   4: 6231.940 ns/op
# Warmup Iteration   5: 5796.493 ns/op
Iteration   1: 6082.121 ns/op
Iteration   2: 5826.666 ns/op
Iteration   3: 5946.986 ns/op
Iteration   4: 5761.617 ns/op
Iteration   5: 5810.927 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  5885.663 ±(99.9%) 497.648 ns/op [Average]
  (min, avg, max) = (5761.617, 5885.663, 6082.121), stdev = 129.238
  CI (99.9%): [5388.015, 6383.312] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 16.96% complete, ETA 00:16:21
# Fork: 1 of 1
# Warmup Iteration   1: 13364.563 ns/op
# Warmup Iteration   2: 12270.842 ns/op
# Warmup Iteration   3: 10945.906 ns/op
# Warmup Iteration   4: 10895.574 ns/op
# Warmup Iteration   5: 10965.107 ns/op
Iteration   1: 10967.101 ns/op
Iteration   2: 10963.756 ns/op
Iteration   3: 11036.696 ns/op
Iteration   4: 11053.220 ns/op
Iteration   5: 11002.977 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  11004.750 ±(99.9%) 154.878 ns/op [Average]
  (min, avg, max) = (10963.756, 11004.750, 11053.220), stdev = 40.221
  CI (99.9%): [10849.872, 11159.628] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 17.86% complete, ETA 00:16:11
# Fork: 1 of 1
# Warmup Iteration   1: 105473.531 ns/op
# Warmup Iteration   2: 99414.434 ns/op
# Warmup Iteration   3: 93477.822 ns/op
# Warmup Iteration   4: 95453.368 ns/op
# Warmup Iteration   5: 92555.379 ns/op
Iteration   1: 92779.223 ns/op
Iteration   2: 91761.365 ns/op
Iteration   3: 92408.340 ns/op
Iteration   4: 92301.284 ns/op
Iteration   5: 92020.749 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  92254.192 ±(99.9%) 1490.118 ns/op [Average]
  (min, avg, max) = (91761.365, 92254.192, 92779.223), stdev = 386.979
  CI (99.9%): [90764.075, 93744.310] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 18.75% complete, ETA 00:16:00
# Fork: 1 of 1
# Warmup Iteration   1: 918.680 ns/op
# Warmup Iteration   2: 830.799 ns/op
# Warmup Iteration   3: 705.596 ns/op
# Warmup Iteration   4: 707.041 ns/op
# Warmup Iteration   5: 703.345 ns/op
Iteration   1: 701.390 ns/op
Iteration   2: 697.205 ns/op
Iteration   3: 702.769 ns/op
Iteration   4: 718.205 ns/op
Iteration   5: 703.163 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  704.546 ±(99.9%) 30.774 ns/op [Average]
  (min, avg, max) = (697.205, 704.546, 718.205), stdev = 7.992
  CI (99.9%): [673.772, 735.321] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 19.64% complete, ETA 00:15:49
# Fork: 1 of 1
# Warmup Iteration   1: 1022.955 ns/op
# Warmup Iteration   2: 798.030 ns/op
# Warmup Iteration   3: 802.943 ns/op
# Warmup Iteration   4: 788.014 ns/op
# Warmup Iteration   5: 818.829 ns/op
Iteration   1: 799.675 ns/op
Iteration   2: 788.771 ns/op
Iteration   3: 786.494 ns/op
Iteration   4: 790.722 ns/op
Iteration   5: 819.278 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  796.988 ±(99.9%) 51.697 ns/op [Average]
  (min, avg, max) = (786.494, 796.988, 819.278), stdev = 13.426
  CI (99.9%): [745.291, 848.685] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 20.54% complete, ETA 00:15:39
# Fork: 1 of 1
# Warmup Iteration   1: 1488.439 ns/op
# Warmup Iteration   2: 1163.663 ns/op
# Warmup Iteration   3: 1157.597 ns/op
# Warmup Iteration   4: 1151.616 ns/op
# Warmup Iteration   5: 1149.079 ns/op
Iteration   1: 1143.885 ns/op
Iteration   2: 1152.430 ns/op
Iteration   3: 1146.731 ns/op
Iteration   4: 1179.283 ns/op
Iteration   5: 1196.241 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1163.714 ±(99.9%) 88.425 ns/op [Average]
  (min, avg, max) = (1143.885, 1163.714, 1196.241), stdev = 22.964
  CI (99.9%): [1075.289, 1252.140] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 21.43% complete, ETA 00:15:28
# Fork: 1 of 1
# Warmup Iteration   1: 2183.037 ns/op
# Warmup Iteration   2: 1672.857 ns/op
# Warmup Iteration   3: 1663.399 ns/op
# Warmup Iteration   4: 1649.756 ns/op
# Warmup Iteration   5: 1657.712 ns/op
Iteration   1: 1668.053 ns/op
Iteration   2: 1660.045 ns/op
Iteration   3: 1657.681 ns/op
Iteration   4: 1661.777 ns/op
Iteration   5: 1660.127 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1661.536 ±(99.9%) 15.111 ns/op [Average]
  (min, avg, max) = (1657.681, 1661.536, 1668.053), stdev = 3.924
  CI (99.9%): [1646.425, 1676.647] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 22.32% complete, ETA 00:15:17
# Fork: 1 of 1
# Warmup Iteration   1: 7366.850 ns/op
# Warmup Iteration   2: 6180.731 ns/op
# Warmup Iteration   3: 5787.358 ns/op
# Warmup Iteration   4: 5955.384 ns/op
# Warmup Iteration   5: 5833.417 ns/op
Iteration   1: 5968.562 ns/op
Iteration   2: 5786.814 ns/op
Iteration   3: 5796.973 ns/op
Iteration   4: 5839.259 ns/op
Iteration   5: 5779.949 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  5834.311 ±(99.9%) 302.302 ns/op [Average]
  (min, avg, max) = (5779.949, 5834.311, 5968.562), stdev = 78.507
  CI (99.9%): [5532.010, 6136.613] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 23.21% complete, ETA 00:15:07
# Fork: 1 of 1
# Warmup Iteration   1: 13459.068 ns/op
# Warmup Iteration   2: 12150.604 ns/op
# Warmup Iteration   3: 11186.426 ns/op
# Warmup Iteration   4: 11030.935 ns/op
# Warmup Iteration   5: 11053.756 ns/op
Iteration   1: 11056.576 ns/op
Iteration   2: 11046.795 ns/op
Iteration   3: 11058.564 ns/op
Iteration   4: 11102.153 ns/op
Iteration   5: 11134.977 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  11079.813 ±(99.9%) 144.384 ns/op [Average]
  (min, avg, max) = (11046.795, 11079.813, 11134.977), stdev = 37.496
  CI (99.9%): [10935.429, 11224.197] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 24.11% complete, ETA 00:14:56
# Fork: 1 of 1
# Warmup Iteration   1: 106876.331 ns/op
# Warmup Iteration   2: 97570.963 ns/op
# Warmup Iteration   3: 91569.305 ns/op
# Warmup Iteration   4: 91140.806 ns/op
# Warmup Iteration   5: 91483.193 ns/op
Iteration   1: 90904.683 ns/op
Iteration   2: 92052.459 ns/op
Iteration   3: 93277.441 ns/op
Iteration   4: 90980.382 ns/op
Iteration   5: 93354.358 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  92113.864 ±(99.9%) 4573.767 ns/op [Average]
  (min, avg, max) = (90904.683, 92113.864, 93354.358), stdev = 1187.793
  CI (99.9%): [87540.097, 96687.632] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 25.00% complete, ETA 00:14:45
# Fork: 1 of 1
# Warmup Iteration   1: 904.403 ns/op
# Warmup Iteration   2: 757.227 ns/op
# Warmup Iteration   3: 729.686 ns/op
# Warmup Iteration   4: 707.777 ns/op
# Warmup Iteration   5: 765.492 ns/op
Iteration   1: 722.343 ns/op
Iteration   2: 706.598 ns/op
Iteration   3: 714.771 ns/op
Iteration   4: 708.334 ns/op
Iteration   5: 736.688 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  717.747 ±(99.9%) 47.224 ns/op [Average]
  (min, avg, max) = (706.598, 717.747, 736.688), stdev = 12.264
  CI (99.9%): [670.522, 764.971] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 25.89% complete, ETA 00:14:35
# Fork: 1 of 1
# Warmup Iteration   1: 1128.263 ns/op
# Warmup Iteration   2: 810.228 ns/op
# Warmup Iteration   3: 783.997 ns/op
# Warmup Iteration   4: 867.333 ns/op
# Warmup Iteration   5: 828.333 ns/op
Iteration   1: 819.233 ns/op
Iteration   2: 809.345 ns/op
Iteration   3: 789.711 ns/op
Iteration   4: 783.868 ns/op
Iteration   5: 789.886 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  798.409 ±(99.9%) 58.175 ns/op [Average]
  (min, avg, max) = (783.868, 798.409, 819.233), stdev = 15.108
  CI (99.9%): [740.234, 856.583] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 26.79% complete, ETA 00:14:24
# Fork: 1 of 1
# Warmup Iteration   1: 1606.682 ns/op
# Warmup Iteration   2: 1191.139 ns/op
# Warmup Iteration   3: 1171.098 ns/op
# Warmup Iteration   4: 1168.371 ns/op
# Warmup Iteration   5: 1173.585 ns/op
Iteration   1: 1174.878 ns/op
Iteration   2: 1163.582 ns/op
Iteration   3: 1165.802 ns/op
Iteration   4: 1203.889 ns/op
Iteration   5: 1178.898 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1177.410 ±(99.9%) 61.962 ns/op [Average]
  (min, avg, max) = (1163.582, 1177.410, 1203.889), stdev = 16.091
  CI (99.9%): [1115.448, 1239.372] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 27.68% complete, ETA 00:14:14
# Fork: 1 of 1
# Warmup Iteration   1: 2706.971 ns/op
# Warmup Iteration   2: 1791.592 ns/op
# Warmup Iteration   3: 1697.387 ns/op
# Warmup Iteration   4: 1739.987 ns/op
# Warmup Iteration   5: 1716.625 ns/op
Iteration   1: 1697.245 ns/op
Iteration   2: 1687.268 ns/op
Iteration   3: 1687.841 ns/op
Iteration   4: 1689.725 ns/op
Iteration   5: 1732.005 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1698.817 ±(99.9%) 73.071 ns/op [Average]
  (min, avg, max) = (1687.268, 1698.817, 1732.005), stdev = 18.976
  CI (99.9%): [1625.745, 1771.888] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 28.57% complete, ETA 00:14:03
# Fork: 1 of 1
# Warmup Iteration   1: 7420.736 ns/op
# Warmup Iteration   2: 6183.328 ns/op
# Warmup Iteration   3: 5999.672 ns/op
# Warmup Iteration   4: 5920.061 ns/op
# Warmup Iteration   5: 5988.302 ns/op
Iteration   1: 5876.319 ns/op
Iteration   2: 5900.812 ns/op
Iteration   3: 5859.764 ns/op
Iteration   4: 5881.845 ns/op
Iteration   5: 5889.483 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  5881.645 ±(99.9%) 58.902 ns/op [Average]
  (min, avg, max) = (5859.764, 5881.645, 5900.812), stdev = 15.297
  CI (99.9%): [5822.742, 5940.547] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 29.46% complete, ETA 00:13:53
# Fork: 1 of 1
# Warmup Iteration   1: 13288.278 ns/op
# Warmup Iteration   2: 12146.994 ns/op
# Warmup Iteration   3: 10986.123 ns/op
# Warmup Iteration   4: 11031.328 ns/op
# Warmup Iteration   5: 11028.801 ns/op
Iteration   1: 11034.458 ns/op
Iteration   2: 11531.182 ns/op
Iteration   3: 11038.145 ns/op
Iteration   4: 11294.821 ns/op
Iteration   5: 11139.762 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  11207.674 ±(99.9%) 806.818 ns/op [Average]
  (min, avg, max) = (11034.458, 11207.674, 11531.182), stdev = 209.528
  CI (99.9%): [10400.856, 12014.491] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 30.36% complete, ETA 00:13:43
# Fork: 1 of 1
# Warmup Iteration   1: 96396.302 ns/op
# Warmup Iteration   2: 90639.160 ns/op
# Warmup Iteration   3: 84779.891 ns/op
# Warmup Iteration   4: 84281.615 ns/op
# Warmup Iteration   5: 84287.440 ns/op
Iteration   1: 84738.132 ns/op
Iteration   2: 83959.704 ns/op
Iteration   3: 84002.981 ns/op
Iteration   4: 83860.501 ns/op
Iteration   5: 84944.649 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  84301.193 ±(99.9%) 1929.848 ns/op [Average]
  (min, avg, max) = (83860.501, 84301.193, 84944.649), stdev = 501.175
  CI (99.9%): [82371.346, 86231.041] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 31.25% complete, ETA 00:13:32
# Fork: 1 of 1
# Warmup Iteration   1: 965.961 ns/op
# Warmup Iteration   2: 717.604 ns/op
# Warmup Iteration   3: 699.378 ns/op
# Warmup Iteration   4: 698.929 ns/op
# Warmup Iteration   5: 700.473 ns/op
Iteration   1: 708.619 ns/op
Iteration   2: 702.042 ns/op
Iteration   3: 703.622 ns/op
Iteration   4: 696.652 ns/op
Iteration   5: 702.551 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  702.697 ±(99.9%) 16.441 ns/op [Average]
  (min, avg, max) = (696.652, 702.697, 708.619), stdev = 4.270
  CI (99.9%): [686.257, 719.138] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 32.14% complete, ETA 00:13:21
# Fork: 1 of 1
# Warmup Iteration   1: 1021.580 ns/op
# Warmup Iteration   2: 806.420 ns/op
# Warmup Iteration   3: 817.255 ns/op
# Warmup Iteration   4: 808.078 ns/op
# Warmup Iteration   5: 800.310 ns/op
Iteration   1: 839.553 ns/op
Iteration   2: 793.564 ns/op
Iteration   3: 794.088 ns/op
Iteration   4: 811.062 ns/op
Iteration   5: 790.599 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  805.773 ±(99.9%) 79.030 ns/op [Average]
  (min, avg, max) = (790.599, 805.773, 839.553), stdev = 20.524
  CI (99.9%): [726.744, 884.803] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 33.04% complete, ETA 00:13:11
# Fork: 1 of 1
# Warmup Iteration   1: 1555.021 ns/op
# Warmup Iteration   2: 1193.374 ns/op
# Warmup Iteration   3: 1172.486 ns/op
# Warmup Iteration   4: 1173.102 ns/op
# Warmup Iteration   5: 1282.823 ns/op
Iteration   1: 1262.295 ns/op
Iteration   2: 1174.841 ns/op
Iteration   3: 1170.531 ns/op
Iteration   4: 1170.972 ns/op
Iteration   5: 1171.552 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1190.038 ±(99.9%) 155.674 ns/op [Average]
  (min, avg, max) = (1170.531, 1190.038, 1262.295), stdev = 40.428
  CI (99.9%): [1034.364, 1345.712] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 33.93% complete, ETA 00:13:00
# Fork: 1 of 1
# Warmup Iteration   1: 2250.043 ns/op
# Warmup Iteration   2: 1710.636 ns/op
# Warmup Iteration   3: 1710.151 ns/op
# Warmup Iteration   4: 1713.176 ns/op
# Warmup Iteration   5: 1700.272 ns/op
Iteration   1: 1736.769 ns/op
Iteration   2: 1703.351 ns/op
Iteration   3: 1704.009 ns/op
Iteration   4: 1703.446 ns/op
Iteration   5: 1703.140 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1710.143 ±(99.9%) 57.327 ns/op [Average]
  (min, avg, max) = (1703.140, 1710.143, 1736.769), stdev = 14.888
  CI (99.9%): [1652.816, 1767.470] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 34.82% complete, ETA 00:12:49
# Fork: 1 of 1
# Warmup Iteration   1: 7679.714 ns/op
# Warmup Iteration   2: 6207.000 ns/op
# Warmup Iteration   3: 5823.794 ns/op
# Warmup Iteration   4: 5832.926 ns/op
# Warmup Iteration   5: 5876.190 ns/op
Iteration   1: 5864.649 ns/op
Iteration   2: 5855.539 ns/op
Iteration   3: 5859.179 ns/op
Iteration   4: 5869.880 ns/op
Iteration   5: 5892.673 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  5868.384 ±(99.9%) 56.326 ns/op [Average]
  (min, avg, max) = (5855.539, 5868.384, 5892.673), stdev = 14.628
  CI (99.9%): [5812.058, 5924.710] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 35.71% complete, ETA 00:12:39
# Fork: 1 of 1
# Warmup Iteration   1: 13377.981 ns/op
# Warmup Iteration   2: 12126.987 ns/op
# Warmup Iteration   3: 11017.990 ns/op
# Warmup Iteration   4: 11014.420 ns/op
# Warmup Iteration   5: 11018.044 ns/op
Iteration   1: 11021.439 ns/op
Iteration   2: 11115.037 ns/op
Iteration   3: 11031.212 ns/op
Iteration   4: 11040.741 ns/op
Iteration   5: 11109.262 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  11063.538 ±(99.9%) 173.063 ns/op [Average]
  (min, avg, max) = (11021.439, 11063.538, 11115.037), stdev = 44.944
  CI (99.9%): [10890.475, 11236.601] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 36.61% complete, ETA 00:12:28
# Fork: 1 of 1
# Warmup Iteration   1: 106360.391 ns/op
# Warmup Iteration   2: 92475.299 ns/op
# Warmup Iteration   3: 88604.539 ns/op
# Warmup Iteration   4: 86015.946 ns/op
# Warmup Iteration   5: 86191.004 ns/op
Iteration   1: 85882.093 ns/op
Iteration   2: 85801.536 ns/op
Iteration   3: 86014.245 ns/op
Iteration   4: 85669.359 ns/op
Iteration   5: 86090.708 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  85891.588 ±(99.9%) 645.137 ns/op [Average]
  (min, avg, max) = (85669.359, 85891.588, 86090.708), stdev = 167.540
  CI (99.9%): [85246.451, 86536.725] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 37.50% complete, ETA 00:12:17
# Fork: 1 of 1
# Warmup Iteration   1: 933.587 ns/op
# Warmup Iteration   2: 738.173 ns/op
# Warmup Iteration   3: 694.981 ns/op
# Warmup Iteration   4: 735.817 ns/op
# Warmup Iteration   5: 700.056 ns/op
Iteration   1: 756.773 ns/op
Iteration   2: 727.679 ns/op
Iteration   3: 698.921 ns/op
Iteration   4: 697.384 ns/op
Iteration   5: 697.722 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  715.696 ±(99.9%) 101.344 ns/op [Average]
  (min, avg, max) = (697.384, 715.696, 756.773), stdev = 26.319
  CI (99.9%): [614.352, 817.039] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 38.39% complete, ETA 00:12:07
# Fork: 1 of 1
# Warmup Iteration   1: 1026.995 ns/op
# Warmup Iteration   2: 823.470 ns/op
# Warmup Iteration   3: 784.857 ns/op
# Warmup Iteration   4: 810.299 ns/op
# Warmup Iteration   5: 792.126 ns/op
Iteration   1: 815.165 ns/op
Iteration   2: 803.155 ns/op
Iteration   3: 783.332 ns/op
Iteration   4: 827.555 ns/op
Iteration   5: 789.525 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  803.746 ±(99.9%) 69.860 ns/op [Average]
  (min, avg, max) = (783.332, 803.746, 827.555), stdev = 18.142
  CI (99.9%): [733.887, 873.606] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 39.29% complete, ETA 00:11:57
# Fork: 1 of 1
# Warmup Iteration   1: 1477.995 ns/op
# Warmup Iteration   2: 1151.658 ns/op
# Warmup Iteration   3: 1142.298 ns/op
# Warmup Iteration   4: 1149.651 ns/op
# Warmup Iteration   5: 1164.854 ns/op
Iteration   1: 1163.204 ns/op
Iteration   2: 1165.371 ns/op
Iteration   3: 1145.119 ns/op
Iteration   4: 1144.164 ns/op
Iteration   5: 1143.198 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1152.211 ±(99.9%) 42.632 ns/op [Average]
  (min, avg, max) = (1143.198, 1152.211, 1165.371), stdev = 11.071
  CI (99.9%): [1109.579, 1194.844] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 40.18% complete, ETA 00:11:46
# Fork: 1 of 1
# Warmup Iteration   1: 2107.657 ns/op
# Warmup Iteration   2: 1615.743 ns/op
# Warmup Iteration   3: 1615.193 ns/op
# Warmup Iteration   4: 1732.131 ns/op
# Warmup Iteration   5: 1603.003 ns/op
Iteration   1: 1608.397 ns/op
Iteration   2: 1669.670 ns/op
Iteration   3: 1610.680 ns/op
Iteration   4: 1611.748 ns/op
Iteration   5: 1612.420 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1622.583 ±(99.9%) 101.528 ns/op [Average]
  (min, avg, max) = (1608.397, 1622.583, 1669.670), stdev = 26.367
  CI (99.9%): [1521.055, 1724.111] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 41.07% complete, ETA 00:11:36
# Fork: 1 of 1
# Warmup Iteration   1: 6866.322 ns/op
# Warmup Iteration   2: 5638.408 ns/op
# Warmup Iteration   3: 5672.936 ns/op
# Warmup Iteration   4: 5389.363 ns/op
# Warmup Iteration   5: 5399.280 ns/op
Iteration   1: 5391.953 ns/op
Iteration   2: 5396.569 ns/op
Iteration   3: 5396.642 ns/op
Iteration   4: 5395.483 ns/op
Iteration   5: 5392.926 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  5394.715 ±(99.9%) 8.296 ns/op [Average]
  (min, avg, max) = (5391.953, 5394.715, 5396.642), stdev = 2.154
  CI (99.9%): [5386.419, 5403.010] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 41.96% complete, ETA 00:11:25
# Fork: 1 of 1
# Warmup Iteration   1: 13477.448 ns/op
# Warmup Iteration   2: 11442.100 ns/op
# Warmup Iteration   3: 10541.470 ns/op
# Warmup Iteration   4: 10437.673 ns/op
# Warmup Iteration   5: 10471.292 ns/op
Iteration   1: 10728.556 ns/op
Iteration   2: 10825.539 ns/op
Iteration   3: 10782.678 ns/op
Iteration   4: 10529.764 ns/op
Iteration   5: 10573.933 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  10688.094 ±(99.9%) 500.493 ns/op [Average]
  (min, avg, max) = (10529.764, 10688.094, 10825.539), stdev = 129.976
  CI (99.9%): [10187.601, 11188.587] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 42.86% complete, ETA 00:11:15
# Fork: 1 of 1
# Warmup Iteration   1: 104228.552 ns/op
# Warmup Iteration   2: 99608.393 ns/op
# Warmup Iteration   3: 92249.951 ns/op
# Warmup Iteration   4: 91351.092 ns/op
# Warmup Iteration   5: 91004.704 ns/op
Iteration   1: 91395.576 ns/op
Iteration   2: 91290.000 ns/op
Iteration   3: 90862.634 ns/op
Iteration   4: 90977.124 ns/op
Iteration   5: 91395.484 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  91184.164 ±(99.9%) 956.479 ns/op [Average]
  (min, avg, max) = (90862.634, 91184.164, 91395.576), stdev = 248.395
  CI (99.9%): [90227.685, 92140.643] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 43.75% complete, ETA 00:11:04
# Fork: 1 of 1
# Warmup Iteration   1: 969.212 ns/op
# Warmup Iteration   2: 734.375 ns/op
# Warmup Iteration   3: 720.903 ns/op
# Warmup Iteration   4: 732.410 ns/op
# Warmup Iteration   5: 750.368 ns/op
Iteration   1: 707.582 ns/op
Iteration   2: 714.596 ns/op
Iteration   3: 715.594 ns/op
Iteration   4: 787.960 ns/op
Iteration   5: 701.651 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  725.476 ±(99.9%) 136.252 ns/op [Average]
  (min, avg, max) = (701.651, 725.476, 787.960), stdev = 35.384
  CI (99.9%): [589.225, 861.728] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 44.64% complete, ETA 00:10:53
# Fork: 1 of 1
# Warmup Iteration   1: 1012.822 ns/op
# Warmup Iteration   2: 794.646 ns/op
# Warmup Iteration   3: 838.869 ns/op
# Warmup Iteration   4: 784.088 ns/op
# Warmup Iteration   5: 783.081 ns/op
Iteration   1: 783.134 ns/op
Iteration   2: 780.297 ns/op
Iteration   3: 808.487 ns/op
Iteration   4: 789.602 ns/op
Iteration   5: 780.196 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  788.343 ±(99.9%) 45.789 ns/op [Average]
  (min, avg, max) = (780.196, 788.343, 808.487), stdev = 11.891
  CI (99.9%): [742.555, 834.132] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 45.54% complete, ETA 00:10:43
# Fork: 1 of 1
# Warmup Iteration   1: 1560.919 ns/op
# Warmup Iteration   2: 1163.054 ns/op
# Warmup Iteration   3: 1186.113 ns/op
# Warmup Iteration   4: 1131.781 ns/op
# Warmup Iteration   5: 1153.647 ns/op
Iteration   1: 1143.928 ns/op
Iteration   2: 1161.410 ns/op
Iteration   3: 1239.021 ns/op
Iteration   4: 1132.197 ns/op
Iteration   5: 1143.046 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1163.921 ±(99.9%) 166.607 ns/op [Average]
  (min, avg, max) = (1132.197, 1163.921, 1239.021), stdev = 43.267
  CI (99.9%): [997.313, 1330.528] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 46.43% complete, ETA 00:10:32
# Fork: 1 of 1
# Warmup Iteration   1: 2236.889 ns/op
# Warmup Iteration   2: 1675.044 ns/op
# Warmup Iteration   3: 1662.055 ns/op
# Warmup Iteration   4: 1645.188 ns/op
# Warmup Iteration   5: 1624.187 ns/op
Iteration   1: 1609.273 ns/op
Iteration   2: 1605.437 ns/op
Iteration   3: 1611.136 ns/op
Iteration   4: 1592.854 ns/op
Iteration   5: 1604.727 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1604.685 ±(99.9%) 27.446 ns/op [Average]
  (min, avg, max) = (1592.854, 1604.685, 1611.136), stdev = 7.128
  CI (99.9%): [1577.240, 1632.131] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 47.32% complete, ETA 00:10:22
# Fork: 1 of 1
# Warmup Iteration   1: 6900.318 ns/op
# Warmup Iteration   2: 5927.572 ns/op
# Warmup Iteration   3: 5481.190 ns/op
# Warmup Iteration   4: 5632.560 ns/op
# Warmup Iteration   5: 5388.373 ns/op
Iteration   1: 5440.559 ns/op
Iteration   2: 5394.126 ns/op
Iteration   3: 5441.023 ns/op
Iteration   4: 5423.721 ns/op
Iteration   5: 5421.389 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  5424.164 ±(99.9%) 73.647 ns/op [Average]
  (min, avg, max) = (5394.126, 5424.164, 5441.023), stdev = 19.126
  CI (99.9%): [5350.517, 5497.811] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 48.21% complete, ETA 00:10:11
# Fork: 1 of 1
# Warmup Iteration   1: 12937.854 ns/op
# Warmup Iteration   2: 11422.141 ns/op
# Warmup Iteration   3: 10561.883 ns/op
# Warmup Iteration   4: 10606.330 ns/op
# Warmup Iteration   5: 10554.237 ns/op
Iteration   1: 10533.809 ns/op
Iteration   2: 10558.377 ns/op
Iteration   3: 10690.324 ns/op
Iteration   4: 10998.023 ns/op
Iteration   5: 10601.695 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  10676.445 ±(99.9%) 729.282 ns/op [Average]
  (min, avg, max) = (10533.809, 10676.445, 10998.023), stdev = 189.392
  CI (99.9%): [9947.163, 11405.728] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.11% complete, ETA 00:10:00
# Fork: 1 of 1
# Warmup Iteration   1: 109796.178 ns/op
# Warmup Iteration   2: 99408.768 ns/op
# Warmup Iteration   3: 94456.259 ns/op
# Warmup Iteration   4: 92434.007 ns/op
# Warmup Iteration   5: 92449.383 ns/op
Iteration   1: 91930.511 ns/op
Iteration   2: 92194.300 ns/op
Iteration   3: 92188.877 ns/op
Iteration   4: 92477.354 ns/op
Iteration   5: 94546.131 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  92667.434 ±(99.9%) 4112.066 ns/op [Average]
  (min, avg, max) = (91930.511, 92667.434, 94546.131), stdev = 1067.891
  CI (99.9%): [88555.368, 96779.501] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:09:50
# Fork: 1 of 1
# Warmup Iteration   1: 65.670 ns/op
# Warmup Iteration   2: 65.210 ns/op
# Warmup Iteration   3: 58.858 ns/op
# Warmup Iteration   4: 57.520 ns/op
# Warmup Iteration   5: 57.915 ns/op
Iteration   1: 57.982 ns/op
Iteration   2: 57.490 ns/op
Iteration   3: 57.597 ns/op
Iteration   4: 57.524 ns/op
Iteration   5: 57.283 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  57.575 ±(99.9%) 0.983 ns/op [Average]
  (min, avg, max) = (57.283, 57.575, 57.982), stdev = 0.255
  CI (99.9%): [56.592, 58.559] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.89% complete, ETA 00:09:39
# Fork: 1 of 1
# Warmup Iteration   1: 99.610 ns/op
# Warmup Iteration   2: 98.044 ns/op
# Warmup Iteration   3: 90.901 ns/op
# Warmup Iteration   4: 90.993 ns/op
# Warmup Iteration   5: 91.283 ns/op
Iteration   1: 91.184 ns/op
Iteration   2: 92.428 ns/op
Iteration   3: 91.680 ns/op
Iteration   4: 91.419 ns/op
Iteration   5: 93.611 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  92.064 ±(99.9%) 3.785 ns/op [Average]
  (min, avg, max) = (91.184, 92.064, 93.611), stdev = 0.983
  CI (99.9%): [88.280, 95.849] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 51.79% complete, ETA 00:09:29
# Fork: 1 of 1
# Warmup Iteration   1: 283.778 ns/op
# Warmup Iteration   2: 278.384 ns/op
# Warmup Iteration   3: 260.798 ns/op
# Warmup Iteration   4: 261.368 ns/op
# Warmup Iteration   5: 261.310 ns/op
Iteration   1: 261.344 ns/op
Iteration   2: 262.341 ns/op
Iteration   3: 264.186 ns/op
Iteration   4: 271.234 ns/op
Iteration   5: 261.869 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  264.195 ±(99.9%) 15.703 ns/op [Average]
  (min, avg, max) = (261.344, 264.195, 271.234), stdev = 4.078
  CI (99.9%): [248.491, 279.898] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 52.68% complete, ETA 00:09:18
# Fork: 1 of 1
# Warmup Iteration   1: 497.431 ns/op
# Warmup Iteration   2: 481.406 ns/op
# Warmup Iteration   3: 455.784 ns/op
# Warmup Iteration   4: 454.733 ns/op
# Warmup Iteration   5: 454.550 ns/op
Iteration   1: 454.470 ns/op
Iteration   2: 456.647 ns/op
Iteration   3: 455.152 ns/op
Iteration   4: 455.547 ns/op
Iteration   5: 470.934 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  458.550 ±(99.9%) 26.830 ns/op [Average]
  (min, avg, max) = (454.470, 458.550, 470.934), stdev = 6.968
  CI (99.9%): [431.720, 485.380] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 53.57% complete, ETA 00:09:08
# Fork: 1 of 1
# Warmup Iteration   1: 2547.932 ns/op
# Warmup Iteration   2: 2377.231 ns/op
# Warmup Iteration   3: 2361.410 ns/op
# Warmup Iteration   4: 2368.403 ns/op
# Warmup Iteration   5: 2373.353 ns/op
Iteration   1: 2371.596 ns/op
Iteration   2: 2413.231 ns/op
Iteration   3: 2416.906 ns/op
Iteration   4: 2377.545 ns/op
Iteration   5: 2364.339 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  2388.724 ±(99.9%) 94.473 ns/op [Average]
  (min, avg, max) = (2364.339, 2388.724, 2416.906), stdev = 24.534
  CI (99.9%): [2294.250, 2483.197] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 54.46% complete, ETA 00:08:57
# Fork: 1 of 1
# Warmup Iteration   1: 4697.056 ns/op
# Warmup Iteration   2: 4497.679 ns/op
# Warmup Iteration   3: 4265.115 ns/op
# Warmup Iteration   4: 4258.098 ns/op
# Warmup Iteration   5: 4259.313 ns/op
Iteration   1: 4262.570 ns/op
Iteration   2: 4655.444 ns/op
Iteration   3: 4260.640 ns/op
Iteration   4: 4264.631 ns/op
Iteration   5: 4261.823 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  4341.021 ±(99.9%) 676.841 ns/op [Average]
  (min, avg, max) = (4260.640, 4341.021, 4655.444), stdev = 175.773
  CI (99.9%): [3664.181, 5017.862] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 55.36% complete, ETA 00:08:47
# Fork: 1 of 1
# Warmup Iteration   1: 68187.909 ns/op
# Warmup Iteration   2: 64045.504 ns/op
# Warmup Iteration   3: 64104.034 ns/op
# Warmup Iteration   4: 64124.705 ns/op
# Warmup Iteration   5: 63919.946 ns/op
Iteration   1: 63997.453 ns/op
Iteration   2: 64134.354 ns/op
Iteration   3: 66973.124 ns/op
Iteration   4: 65882.230 ns/op
Iteration   5: 63872.901 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  64972.012 ±(99.9%) 5339.923 ns/op [Average]
  (min, avg, max) = (63872.901, 64972.012, 66973.124), stdev = 1386.761
  CI (99.9%): [59632.089, 70311.936] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 56.25% complete, ETA 00:08:36
# Fork: 1 of 1
# Warmup Iteration   1: 65.967 ns/op
# Warmup Iteration   2: 65.325 ns/op
# Warmup Iteration   3: 58.913 ns/op
# Warmup Iteration   4: 57.493 ns/op
# Warmup Iteration   5: 57.281 ns/op
Iteration   1: 57.322 ns/op
Iteration   2: 57.276 ns/op
Iteration   3: 57.373 ns/op
Iteration   4: 57.281 ns/op
Iteration   5: 57.480 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  57.346 ±(99.9%) 0.325 ns/op [Average]
  (min, avg, max) = (57.276, 57.346, 57.480), stdev = 0.085
  CI (99.9%): [57.021, 57.672] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 57.14% complete, ETA 00:08:26
# Fork: 1 of 1
# Warmup Iteration   1: 99.587 ns/op
# Warmup Iteration   2: 98.272 ns/op
# Warmup Iteration   3: 100.403 ns/op
# Warmup Iteration   4: 90.922 ns/op
# Warmup Iteration   5: 91.522 ns/op
Iteration   1: 92.850 ns/op
Iteration   2: 90.968 ns/op
Iteration   3: 90.947 ns/op
Iteration   4: 90.871 ns/op
Iteration   5: 91.594 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  91.446 ±(99.9%) 3.223 ns/op [Average]
  (min, avg, max) = (90.871, 91.446, 92.850), stdev = 0.837
  CI (99.9%): [88.223, 94.669] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 58.04% complete, ETA 00:08:15
# Fork: 1 of 1
# Warmup Iteration   1: 285.064 ns/op
# Warmup Iteration   2: 279.448 ns/op
# Warmup Iteration   3: 264.657 ns/op
# Warmup Iteration   4: 269.722 ns/op
# Warmup Iteration   5: 261.178 ns/op
Iteration   1: 261.063 ns/op
Iteration   2: 261.135 ns/op
Iteration   3: 266.753 ns/op
Iteration   4: 266.739 ns/op
Iteration   5: 262.579 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  263.654 ±(99.9%) 11.116 ns/op [Average]
  (min, avg, max) = (261.063, 263.654, 266.753), stdev = 2.887
  CI (99.9%): [252.538, 274.770] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 58.93% complete, ETA 00:08:04
# Fork: 1 of 1
# Warmup Iteration   1: 510.203 ns/op
# Warmup Iteration   2: 482.086 ns/op
# Warmup Iteration   3: 454.931 ns/op
# Warmup Iteration   4: 454.979 ns/op
# Warmup Iteration   5: 455.730 ns/op
Iteration   1: 455.504 ns/op
Iteration   2: 456.103 ns/op
Iteration   3: 456.730 ns/op
Iteration   4: 456.843 ns/op
Iteration   5: 456.507 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  456.337 ±(99.9%) 2.099 ns/op [Average]
  (min, avg, max) = (455.504, 456.337, 456.843), stdev = 0.545
  CI (99.9%): [454.239, 458.436] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 59.82% complete, ETA 00:07:54
# Fork: 1 of 1
# Warmup Iteration   1: 2559.452 ns/op
# Warmup Iteration   2: 2457.993 ns/op
# Warmup Iteration   3: 2333.052 ns/op
# Warmup Iteration   4: 2340.732 ns/op
# Warmup Iteration   5: 2338.936 ns/op
Iteration   1: 2320.399 ns/op
Iteration   2: 2339.203 ns/op
Iteration   3: 2330.531 ns/op
Iteration   4: 2331.448 ns/op
Iteration   5: 2366.641 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  2337.644 ±(99.9%) 67.513 ns/op [Average]
  (min, avg, max) = (2320.399, 2337.644, 2366.641), stdev = 17.533
  CI (99.9%): [2270.132, 2405.157] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 60.71% complete, ETA 00:07:43
# Fork: 1 of 1
# Warmup Iteration   1: 4720.477 ns/op
# Warmup Iteration   2: 4511.229 ns/op
# Warmup Iteration   3: 4330.938 ns/op
# Warmup Iteration   4: 4263.442 ns/op
# Warmup Iteration   5: 4264.258 ns/op
Iteration   1: 4265.475 ns/op
Iteration   2: 4257.333 ns/op
Iteration   3: 4259.365 ns/op
Iteration   4: 4273.099 ns/op
Iteration   5: 4268.053 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  4264.665 ±(99.9%) 24.740 ns/op [Average]
  (min, avg, max) = (4257.333, 4264.665, 4273.099), stdev = 6.425
  CI (99.9%): [4239.925, 4289.405] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 61.61% complete, ETA 00:07:33
# Fork: 1 of 1
# Warmup Iteration   1: 54795.743 ns/op
# Warmup Iteration   2: 48882.672 ns/op
# Warmup Iteration   3: 48400.446 ns/op
# Warmup Iteration   4: 47988.695 ns/op
# Warmup Iteration   5: 48110.751 ns/op
Iteration   1: 48218.693 ns/op
Iteration   2: 48316.102 ns/op
Iteration   3: 48287.012 ns/op
Iteration   4: 48244.287 ns/op
Iteration   5: 48437.969 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  48300.812 ±(99.9%) 328.858 ns/op [Average]
  (min, avg, max) = (48218.693, 48300.812, 48437.969), stdev = 85.403
  CI (99.9%): [47971.955, 48629.670] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 62.50% complete, ETA 00:07:22
# Fork: 1 of 1
# Warmup Iteration   1: 58.873 ns/op
# Warmup Iteration   2: 58.295 ns/op
# Warmup Iteration   3: 48.731 ns/op
# Warmup Iteration   4: 48.636 ns/op
# Warmup Iteration   5: 48.726 ns/op
Iteration   1: 48.783 ns/op
Iteration   2: 48.810 ns/op
Iteration   3: 48.713 ns/op
Iteration   4: 49.845 ns/op
Iteration   5: 49.543 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  49.139 ±(99.9%) 1.999 ns/op [Average]
  (min, avg, max) = (48.713, 49.139, 49.845), stdev = 0.519
  CI (99.9%): [47.140, 51.138] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 63.39% complete, ETA 00:07:12
# Fork: 1 of 1
# Warmup Iteration   1: 88.811 ns/op
# Warmup Iteration   2: 87.705 ns/op
# Warmup Iteration   3: 79.808 ns/op
# Warmup Iteration   4: 77.551 ns/op
# Warmup Iteration   5: 77.916 ns/op
Iteration   1: 77.788 ns/op
Iteration   2: 77.722 ns/op
Iteration   3: 77.951 ns/op
Iteration   4: 77.676 ns/op
Iteration   5: 78.852 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  77.998 ±(99.9%) 1.882 ns/op [Average]
  (min, avg, max) = (77.676, 77.998, 78.852), stdev = 0.489
  CI (99.9%): [76.116, 79.880] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 64.29% complete, ETA 00:07:01
# Fork: 1 of 1
# Warmup Iteration   1: 158.666 ns/op
# Warmup Iteration   2: 153.601 ns/op
# Warmup Iteration   3: 151.648 ns/op
# Warmup Iteration   4: 143.044 ns/op
# Warmup Iteration   5: 142.748 ns/op
Iteration   1: 142.473 ns/op
Iteration   2: 143.851 ns/op
Iteration   3: 143.287 ns/op
Iteration   4: 142.333 ns/op
Iteration   5: 146.970 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  143.783 ±(99.9%) 7.261 ns/op [Average]
  (min, avg, max) = (142.333, 143.783, 146.970), stdev = 1.886
  CI (99.9%): [136.522, 151.044] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 65.18% complete, ETA 00:06:51
# Fork: 1 of 1
# Warmup Iteration   1: 262.092 ns/op
# Warmup Iteration   2: 253.664 ns/op
# Warmup Iteration   3: 244.937 ns/op
# Warmup Iteration   4: 231.232 ns/op
# Warmup Iteration   5: 231.551 ns/op
Iteration   1: 248.284 ns/op
Iteration   2: 235.956 ns/op
Iteration   3: 231.792 ns/op
Iteration   4: 232.080 ns/op
Iteration   5: 232.253 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  236.073 ±(99.9%) 27.090 ns/op [Average]
  (min, avg, max) = (231.792, 236.073, 248.284), stdev = 7.035
  CI (99.9%): [208.983, 263.163] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 66.07% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 1044.022 ns/op
# Warmup Iteration   2: 1000.075 ns/op
# Warmup Iteration   3: 903.870 ns/op
# Warmup Iteration   4: 890.701 ns/op
# Warmup Iteration   5: 892.492 ns/op
Iteration   1: 895.093 ns/op
Iteration   2: 923.469 ns/op
Iteration   3: 895.437 ns/op
Iteration   4: 895.730 ns/op
Iteration   5: 898.362 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  901.618 ±(99.9%) 47.299 ns/op [Average]
  (min, avg, max) = (895.093, 901.618, 923.469), stdev = 12.283
  CI (99.9%): [854.319, 948.917] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 66.96% complete, ETA 00:06:29
# Fork: 1 of 1
# Warmup Iteration   1: 2064.994 ns/op
# Warmup Iteration   2: 1972.334 ns/op
# Warmup Iteration   3: 1823.221 ns/op
# Warmup Iteration   4: 1794.628 ns/op
# Warmup Iteration   5: 1778.158 ns/op
Iteration   1: 1780.628 ns/op
Iteration   2: 1812.385 ns/op
Iteration   3: 1826.936 ns/op
Iteration   4: 1783.137 ns/op
Iteration   5: 1839.644 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  1808.546 ±(99.9%) 100.874 ns/op [Average]
  (min, avg, max) = (1780.628, 1808.546, 1839.644), stdev = 26.197
  CI (99.9%): [1707.672, 1909.420] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 67.86% complete, ETA 00:06:19
# Fork: 1 of 1
# Warmup Iteration   1: 20022.837 ns/op
# Warmup Iteration   2: 18871.405 ns/op
# Warmup Iteration   3: 16876.113 ns/op
# Warmup Iteration   4: 16871.464 ns/op
# Warmup Iteration   5: 16917.901 ns/op
Iteration   1: 17996.859 ns/op
Iteration   2: 16938.401 ns/op
Iteration   3: 16945.541 ns/op
Iteration   4: 17077.486 ns/op
Iteration   5: 18300.268 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  17451.711 ±(99.9%) 2493.254 ns/op [Average]
  (min, avg, max) = (16938.401, 17451.711, 18300.268), stdev = 647.490
  CI (99.9%): [14958.457, 19944.964] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 68.75% complete, ETA 00:06:08
# Fork: 1 of 1
# Warmup Iteration   1: 59.040 ns/op
# Warmup Iteration   2: 58.310 ns/op
# Warmup Iteration   3: 48.763 ns/op
# Warmup Iteration   4: 48.867 ns/op
# Warmup Iteration   5: 48.813 ns/op
Iteration   1: 49.408 ns/op
Iteration   2: 48.983 ns/op
Iteration   3: 49.014 ns/op
Iteration   4: 48.918 ns/op
Iteration   5: 50.044 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  49.273 ±(99.9%) 1.816 ns/op [Average]
  (min, avg, max) = (48.918, 49.273, 50.044), stdev = 0.472
  CI (99.9%): [47.457, 51.090] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 69.64% complete, ETA 00:05:58
# Fork: 1 of 1
# Warmup Iteration   1: 89.263 ns/op
# Warmup Iteration   2: 88.178 ns/op
# Warmup Iteration   3: 80.039 ns/op
# Warmup Iteration   4: 77.340 ns/op
# Warmup Iteration   5: 77.467 ns/op
Iteration   1: 78.889 ns/op
Iteration   2: 81.258 ns/op
Iteration   3: 80.742 ns/op
Iteration   4: 77.441 ns/op
Iteration   5: 77.496 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  79.165 ±(99.9%) 6.861 ns/op [Average]
  (min, avg, max) = (77.441, 79.165, 81.258), stdev = 1.782
  CI (99.9%): [72.304, 86.026] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 70.54% complete, ETA 00:05:47
# Fork: 1 of 1
# Warmup Iteration   1: 158.729 ns/op
# Warmup Iteration   2: 153.876 ns/op
# Warmup Iteration   3: 150.565 ns/op
# Warmup Iteration   4: 142.552 ns/op
# Warmup Iteration   5: 142.599 ns/op
Iteration   1: 142.505 ns/op
Iteration   2: 143.194 ns/op
Iteration   3: 143.368 ns/op
Iteration   4: 143.393 ns/op
Iteration   5: 143.680 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  143.228 ±(99.9%) 1.694 ns/op [Average]
  (min, avg, max) = (142.505, 143.228, 143.680), stdev = 0.440
  CI (99.9%): [141.534, 144.922] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 71.43% complete, ETA 00:05:37
# Fork: 1 of 1
# Warmup Iteration   1: 262.670 ns/op
# Warmup Iteration   2: 253.613 ns/op
# Warmup Iteration   3: 244.670 ns/op
# Warmup Iteration   4: 231.459 ns/op
# Warmup Iteration   5: 231.995 ns/op
Iteration   1: 232.330 ns/op
Iteration   2: 231.831 ns/op
Iteration   3: 232.068 ns/op
Iteration   4: 232.949 ns/op
Iteration   5: 233.159 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  232.467 ±(99.9%) 2.190 ns/op [Average]
  (min, avg, max) = (231.831, 232.467, 233.159), stdev = 0.569
  CI (99.9%): [230.277, 234.657] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 72.32% complete, ETA 00:05:26
# Fork: 1 of 1
# Warmup Iteration   1: 1041.597 ns/op
# Warmup Iteration   2: 1001.049 ns/op
# Warmup Iteration   3: 906.327 ns/op
# Warmup Iteration   4: 892.116 ns/op
# Warmup Iteration   5: 892.602 ns/op
Iteration   1: 894.036 ns/op
Iteration   2: 895.312 ns/op
Iteration   3: 894.148 ns/op
Iteration   4: 921.737 ns/op
Iteration   5: 896.944 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  900.436 ±(99.9%) 46.074 ns/op [Average]
  (min, avg, max) = (894.036, 900.436, 921.737), stdev = 11.965
  CI (99.9%): [854.362, 946.509] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 73.21% complete, ETA 00:05:16
# Fork: 1 of 1
# Warmup Iteration   1: 2175.468 ns/op
# Warmup Iteration   2: 1958.056 ns/op
# Warmup Iteration   3: 1839.375 ns/op
# Warmup Iteration   4: 1775.233 ns/op
# Warmup Iteration   5: 1774.674 ns/op
Iteration   1: 1779.400 ns/op
Iteration   2: 1778.309 ns/op
Iteration   3: 1776.109 ns/op
Iteration   4: 1780.908 ns/op
Iteration   5: 1949.808 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  1812.907 ±(99.9%) 294.767 ns/op [Average]
  (min, avg, max) = (1776.109, 1812.907, 1949.808), stdev = 76.550
  CI (99.9%): [1518.140, 2107.674] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 74.11% complete, ETA 00:05:05
# Fork: 1 of 1
# Warmup Iteration   1: 20818.689 ns/op
# Warmup Iteration   2: 18888.073 ns/op
# Warmup Iteration   3: 17149.187 ns/op
# Warmup Iteration   4: 16850.453 ns/op
# Warmup Iteration   5: 16898.509 ns/op
Iteration   1: 16914.648 ns/op
Iteration   2: 16963.487 ns/op
Iteration   3: 16994.200 ns/op
Iteration   4: 17501.783 ns/op
Iteration   5: 17041.180 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  17083.060 ±(99.9%) 918.601 ns/op [Average]
  (min, avg, max) = (16914.648, 17083.060, 17501.783), stdev = 238.558
  CI (99.9%): [16164.459, 18001.660] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 75.00% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 63.722 ns/op
# Warmup Iteration   2: 63.658 ns/op
# Warmup Iteration   3: 54.473 ns/op
# Warmup Iteration   4: 54.069 ns/op
# Warmup Iteration   5: 54.571 ns/op
Iteration   1: 54.157 ns/op
Iteration   2: 54.183 ns/op
Iteration   3: 54.166 ns/op
Iteration   4: 54.210 ns/op
Iteration   5: 55.105 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  54.364 ±(99.9%) 1.596 ns/op [Average]
  (min, avg, max) = (54.157, 54.364, 55.105), stdev = 0.415
  CI (99.9%): [52.768, 55.961] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 75.89% complete, ETA 00:04:44
# Fork: 1 of 1
# Warmup Iteration   1: 89.172 ns/op
# Warmup Iteration   2: 86.785 ns/op
# Warmup Iteration   3: 80.916 ns/op
# Warmup Iteration   4: 77.068 ns/op
# Warmup Iteration   5: 78.840 ns/op
Iteration   1: 79.128 ns/op
Iteration   2: 83.585 ns/op
Iteration   3: 77.190 ns/op
Iteration   4: 77.455 ns/op
Iteration   5: 77.337 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  78.939 ±(99.9%) 10.448 ns/op [Average]
  (min, avg, max) = (77.190, 78.939, 83.585), stdev = 2.713
  CI (99.9%): [68.491, 89.388] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 76.79% complete, ETA 00:04:33
# Fork: 1 of 1
# Warmup Iteration   1: 222.748 ns/op
# Warmup Iteration   2: 213.813 ns/op
# Warmup Iteration   3: 214.938 ns/op
# Warmup Iteration   4: 199.606 ns/op
# Warmup Iteration   5: 199.364 ns/op
Iteration   1: 199.579 ns/op
Iteration   2: 199.255 ns/op
Iteration   3: 199.707 ns/op
Iteration   4: 200.488 ns/op
Iteration   5: 199.829 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  199.772 ±(99.9%) 1.747 ns/op [Average]
  (min, avg, max) = (199.255, 199.772, 200.488), stdev = 0.454
  CI (99.9%): [198.024, 201.519] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 77.68% complete, ETA 00:04:23
# Fork: 1 of 1
# Warmup Iteration   1: 367.564 ns/op
# Warmup Iteration   2: 359.523 ns/op
# Warmup Iteration   3: 344.637 ns/op
# Warmup Iteration   4: 344.204 ns/op
# Warmup Iteration   5: 344.685 ns/op
Iteration   1: 345.435 ns/op
Iteration   2: 345.907 ns/op
Iteration   3: 358.624 ns/op
Iteration   4: 346.294 ns/op
Iteration   5: 352.627 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  349.777 ±(99.9%) 22.150 ns/op [Average]
  (min, avg, max) = (345.435, 349.777, 358.624), stdev = 5.752
  CI (99.9%): [327.628, 371.927] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 78.57% complete, ETA 00:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 1735.739 ns/op
# Warmup Iteration   2: 1658.739 ns/op
# Warmup Iteration   3: 1573.026 ns/op
# Warmup Iteration   4: 1575.363 ns/op
# Warmup Iteration   5: 1576.253 ns/op
Iteration   1: 1575.630 ns/op
Iteration   2: 1629.355 ns/op
Iteration   3: 1594.032 ns/op
Iteration   4: 1603.124 ns/op
Iteration   5: 1583.814 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  1597.191 ±(99.9%) 79.930 ns/op [Average]
  (min, avg, max) = (1575.630, 1597.191, 1629.355), stdev = 20.758
  CI (99.9%): [1517.261, 1677.121] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 79.46% complete, ETA 00:04:02
# Fork: 1 of 1
# Warmup Iteration   1: 3395.121 ns/op
# Warmup Iteration   2: 3254.068 ns/op
# Warmup Iteration   3: 3089.593 ns/op
# Warmup Iteration   4: 3096.753 ns/op
# Warmup Iteration   5: 3092.070 ns/op
Iteration   1: 3099.237 ns/op
Iteration   2: 3091.211 ns/op
Iteration   3: 3203.233 ns/op
Iteration   4: 3104.715 ns/op
Iteration   5: 3114.112 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  3122.502 ±(99.9%) 176.717 ns/op [Average]
  (min, avg, max) = (3091.211, 3122.502, 3203.233), stdev = 45.893
  CI (99.9%): [2945.784, 3299.219] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 80.36% complete, ETA 00:03:51
# Fork: 1 of 1
# Warmup Iteration   1: 32493.234 ns/op
# Warmup Iteration   2: 31108.211 ns/op
# Warmup Iteration   3: 29939.738 ns/op
# Warmup Iteration   4: 29898.350 ns/op
# Warmup Iteration   5: 29768.026 ns/op
Iteration   1: 30254.738 ns/op
Iteration   2: 29825.889 ns/op
Iteration   3: 29755.171 ns/op
Iteration   4: 29826.422 ns/op
Iteration   5: 29992.589 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  29930.962 ±(99.9%) 773.731 ns/op [Average]
  (min, avg, max) = (29755.171, 29930.962, 30254.738), stdev = 200.935
  CI (99.9%): [29157.231, 30704.693] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 81.25% complete, ETA 00:03:41
# Fork: 1 of 1
# Warmup Iteration   1: 65.240 ns/op
# Warmup Iteration   2: 63.026 ns/op
# Warmup Iteration   3: 55.965 ns/op
# Warmup Iteration   4: 54.095 ns/op
# Warmup Iteration   5: 54.161 ns/op
Iteration   1: 55.233 ns/op
Iteration   2: 54.682 ns/op
Iteration   3: 57.591 ns/op
Iteration   4: 54.254 ns/op
Iteration   5: 54.698 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  55.292 ±(99.9%) 5.127 ns/op [Average]
  (min, avg, max) = (54.254, 55.292, 57.591), stdev = 1.331
  CI (99.9%): [50.165, 60.418] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 82.14% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: 89.069 ns/op
# Warmup Iteration   2: 86.753 ns/op
# Warmup Iteration   3: 79.483 ns/op
# Warmup Iteration   4: 77.015 ns/op
# Warmup Iteration   5: 77.179 ns/op
Iteration   1: 76.988 ns/op
Iteration   2: 76.990 ns/op
Iteration   3: 77.159 ns/op
Iteration   4: 77.205 ns/op
Iteration   5: 77.358 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  77.140 ±(99.9%) 0.602 ns/op [Average]
  (min, avg, max) = (76.988, 77.140, 77.358), stdev = 0.156
  CI (99.9%): [76.538, 77.741] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 83.04% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 220.230 ns/op
# Warmup Iteration   2: 214.710 ns/op
# Warmup Iteration   3: 213.730 ns/op
# Warmup Iteration   4: 199.658 ns/op
# Warmup Iteration   5: 199.586 ns/op
Iteration   1: 199.368 ns/op
Iteration   2: 199.476 ns/op
Iteration   3: 199.895 ns/op
Iteration   4: 200.167 ns/op
Iteration   5: 203.488 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  200.479 ±(99.9%) 6.595 ns/op [Average]
  (min, avg, max) = (199.368, 200.479, 203.488), stdev = 1.713
  CI (99.9%): [193.884, 207.073] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 83.93% complete, ETA 00:03:09
# Fork: 1 of 1
# Warmup Iteration   1: 382.737 ns/op
# Warmup Iteration   2: 362.994 ns/op
# Warmup Iteration   3: 373.327 ns/op
# Warmup Iteration   4: 358.601 ns/op
# Warmup Iteration   5: 343.433 ns/op
Iteration   1: 346.132 ns/op
Iteration   2: 344.022 ns/op
Iteration   3: 344.560 ns/op
Iteration   4: 344.110 ns/op
Iteration   5: 343.210 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  344.407 ±(99.9%) 4.159 ns/op [Average]
  (min, avg, max) = (343.210, 344.407, 346.132), stdev = 1.080
  CI (99.9%): [340.248, 348.566] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 84.82% complete, ETA 00:02:59
# Fork: 1 of 1
# Warmup Iteration   1: 1733.751 ns/op
# Warmup Iteration   2: 1686.770 ns/op
# Warmup Iteration   3: 1572.374 ns/op
# Warmup Iteration   4: 1571.067 ns/op
# Warmup Iteration   5: 1571.354 ns/op
Iteration   1: 1571.467 ns/op
Iteration   2: 1577.147 ns/op
Iteration   3: 1578.473 ns/op
Iteration   4: 1576.585 ns/op
Iteration   5: 1590.228 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  1578.780 ±(99.9%) 26.686 ns/op [Average]
  (min, avg, max) = (1571.467, 1578.780, 1590.228), stdev = 6.930
  CI (99.9%): [1552.094, 1605.466] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 85.71% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: 3420.213 ns/op
# Warmup Iteration   2: 3275.386 ns/op
# Warmup Iteration   3: 3391.503 ns/op
# Warmup Iteration   4: 3089.209 ns/op
# Warmup Iteration   5: 3171.690 ns/op
Iteration   1: 3084.852 ns/op
Iteration   2: 3105.605 ns/op
Iteration   3: 3088.795 ns/op
Iteration   4: 3107.680 ns/op
Iteration   5: 3099.821 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  3097.351 ±(99.9%) 39.001 ns/op [Average]
  (min, avg, max) = (3084.852, 3097.351, 3107.680), stdev = 10.128
  CI (99.9%): [3058.350, 3136.352] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 86.61% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: 33416.100 ns/op
# Warmup Iteration   2: 30883.140 ns/op
# Warmup Iteration   3: 31950.928 ns/op
# Warmup Iteration   4: 29913.016 ns/op
# Warmup Iteration   5: 29667.128 ns/op
Iteration   1: 30620.265 ns/op
Iteration   2: 29899.944 ns/op
Iteration   3: 29724.898 ns/op
Iteration   4: 29721.377 ns/op
Iteration   5: 29747.863 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  29942.869 ±(99.9%) 1485.501 ns/op [Average]
  (min, avg, max) = (29721.377, 29942.869, 30620.265), stdev = 385.780
  CI (99.9%): [28457.368, 31428.371] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 87.50% complete, ETA 00:02:27
# Fork: 1 of 1
# Warmup Iteration   1: 58.911 ns/op
# Warmup Iteration   2: 59.063 ns/op
# Warmup Iteration   3: 50.912 ns/op
# Warmup Iteration   4: 50.837 ns/op
# Warmup Iteration   5: 50.958 ns/op
Iteration   1: 50.967 ns/op
Iteration   2: 50.941 ns/op
Iteration   3: 51.163 ns/op
Iteration   4: 51.729 ns/op
Iteration   5: 50.986 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  51.157 ±(99.9%) 1.276 ns/op [Average]
  (min, avg, max) = (50.941, 51.157, 51.729), stdev = 0.331
  CI (99.9%): [49.881, 52.433] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 88.39% complete, ETA 00:02:16
# Fork: 1 of 1
# Warmup Iteration   1: 89.997 ns/op
# Warmup Iteration   2: 88.034 ns/op
# Warmup Iteration   3: 84.139 ns/op
# Warmup Iteration   4: 78.154 ns/op
# Warmup Iteration   5: 78.088 ns/op
Iteration   1: 78.011 ns/op
Iteration   2: 77.750 ns/op
Iteration   3: 78.606 ns/op
Iteration   4: 77.823 ns/op
Iteration   5: 78.305 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  78.099 ±(99.9%) 1.368 ns/op [Average]
  (min, avg, max) = (77.750, 78.099, 78.606), stdev = 0.355
  CI (99.9%): [76.731, 79.467] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 89.29% complete, ETA 00:02:06
# Fork: 1 of 1
# Warmup Iteration   1: 179.046 ns/op
# Warmup Iteration   2: 173.450 ns/op
# Warmup Iteration   3: 163.178 ns/op
# Warmup Iteration   4: 155.958 ns/op
# Warmup Iteration   5: 157.168 ns/op
Iteration   1: 156.431 ns/op
Iteration   2: 154.542 ns/op
Iteration   3: 154.809 ns/op
Iteration   4: 154.536 ns/op
Iteration   5: 157.956 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  155.655 ±(99.9%) 5.809 ns/op [Average]
  (min, avg, max) = (154.536, 155.655, 157.956), stdev = 1.508
  CI (99.9%): [149.846, 161.463] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 90.18% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 258.184 ns/op
# Warmup Iteration   2: 250.660 ns/op
# Warmup Iteration   3: 240.071 ns/op
# Warmup Iteration   4: 228.137 ns/op
# Warmup Iteration   5: 228.281 ns/op
Iteration   1: 231.732 ns/op
Iteration   2: 229.068 ns/op
Iteration   3: 228.615 ns/op
Iteration   4: 229.170 ns/op
Iteration   5: 229.233 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  229.564 ±(99.9%) 4.760 ns/op [Average]
  (min, avg, max) = (228.615, 229.564, 231.732), stdev = 1.236
  CI (99.9%): [224.804, 234.324] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 91.07% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: 1035.522 ns/op
# Warmup Iteration   2: 992.587 ns/op
# Warmup Iteration   3: 900.585 ns/op
# Warmup Iteration   4: 926.850 ns/op
# Warmup Iteration   5: 913.724 ns/op
Iteration   1: 887.490 ns/op
Iteration   2: 887.289 ns/op
Iteration   3: 888.274 ns/op
Iteration   4: 890.644 ns/op
Iteration   5: 973.003 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  905.340 ±(99.9%) 145.740 ns/op [Average]
  (min, avg, max) = (887.289, 905.340, 973.003), stdev = 37.848
  CI (99.9%): [759.600, 1051.080] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 91.96% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 2029.464 ns/op
# Warmup Iteration   2: 1954.609 ns/op
# Warmup Iteration   3: 1773.388 ns/op
# Warmup Iteration   4: 1760.846 ns/op
# Warmup Iteration   5: 1758.368 ns/op
Iteration   1: 1814.492 ns/op
Iteration   2: 1759.106 ns/op
Iteration   3: 1758.909 ns/op
Iteration   4: 1768.391 ns/op
Iteration   5: 1766.503 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  1773.480 ±(99.9%) 89.801 ns/op [Average]
  (min, avg, max) = (1758.909, 1773.480, 1814.492), stdev = 23.321
  CI (99.9%): [1683.679, 1863.281] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 92.86% complete, ETA 00:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 20132.911 ns/op
# Warmup Iteration   2: 18955.088 ns/op
# Warmup Iteration   3: 16965.811 ns/op
# Warmup Iteration   4: 16925.111 ns/op
# Warmup Iteration   5: 17020.932 ns/op
Iteration   1: 16993.211 ns/op
Iteration   2: 17011.887 ns/op
Iteration   3: 18220.794 ns/op
Iteration   4: 17033.701 ns/op
Iteration   5: 17102.626 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  17272.444 ±(99.9%) 2047.609 ns/op [Average]
  (min, avg, max) = (16993.211, 17272.444, 18220.794), stdev = 531.758
  CI (99.9%): [15224.835, 19320.053] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 93.75% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 59.715 ns/op
# Warmup Iteration   2: 58.526 ns/op
# Warmup Iteration   3: 51.118 ns/op
# Warmup Iteration   4: 51.052 ns/op
# Warmup Iteration   5: 51.032 ns/op
Iteration   1: 50.944 ns/op
Iteration   2: 51.088 ns/op
Iteration   3: 50.869 ns/op
Iteration   4: 51.168 ns/op
Iteration   5: 51.296 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  51.073 ±(99.9%) 0.660 ns/op [Average]
  (min, avg, max) = (50.869, 51.073, 51.296), stdev = 0.171
  CI (99.9%): [50.414, 51.733] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 94.64% complete, ETA 00:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 90.060 ns/op
# Warmup Iteration   2: 88.050 ns/op
# Warmup Iteration   3: 81.592 ns/op
# Warmup Iteration   4: 78.382 ns/op
# Warmup Iteration   5: 78.524 ns/op
Iteration   1: 78.432 ns/op
Iteration   2: 78.518 ns/op
Iteration   3: 78.259 ns/op
Iteration   4: 79.026 ns/op
Iteration   5: 78.832 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  78.613 ±(99.9%) 1.195 ns/op [Average]
  (min, avg, max) = (78.259, 78.613, 79.026), stdev = 0.310
  CI (99.9%): [77.418, 79.808] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 95.54% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 195.309 ns/op
# Warmup Iteration   2: 175.548 ns/op
# Warmup Iteration   3: 154.953 ns/op
# Warmup Iteration   4: 157.342 ns/op
# Warmup Iteration   5: 155.879 ns/op
Iteration   1: 158.420 ns/op
Iteration   2: 156.253 ns/op
Iteration   3: 154.754 ns/op
Iteration   4: 155.857 ns/op
Iteration   5: 158.143 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  156.685 ±(99.9%) 6.008 ns/op [Average]
  (min, avg, max) = (154.754, 156.685, 158.420), stdev = 1.560
  CI (99.9%): [150.677, 162.693] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 96.43% complete, ETA 00:00:42
# Fork: 1 of 1
# Warmup Iteration   1: 259.183 ns/op
# Warmup Iteration   2: 250.075 ns/op
# Warmup Iteration   3: 241.311 ns/op
# Warmup Iteration   4: 228.416 ns/op
# Warmup Iteration   5: 228.605 ns/op
Iteration   1: 229.281 ns/op
Iteration   2: 230.694 ns/op
Iteration   3: 229.391 ns/op
Iteration   4: 229.252 ns/op
Iteration   5: 229.108 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  229.545 ±(99.9%) 2.502 ns/op [Average]
  (min, avg, max) = (229.108, 229.545, 230.694), stdev = 0.650
  CI (99.9%): [227.043, 232.047] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 97.32% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 1030.379 ns/op
# Warmup Iteration   2: 993.810 ns/op
# Warmup Iteration   3: 894.341 ns/op
# Warmup Iteration   4: 884.743 ns/op
# Warmup Iteration   5: 886.117 ns/op
Iteration   1: 888.343 ns/op
Iteration   2: 889.565 ns/op
Iteration   3: 889.151 ns/op
Iteration   4: 891.295 ns/op
Iteration   5: 894.236 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  890.518 ±(99.9%) 9.018 ns/op [Average]
  (min, avg, max) = (888.343, 890.518, 894.236), stdev = 2.342
  CI (99.9%): [881.501, 899.536] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 98.21% complete, ETA 00:00:21
# Fork: 1 of 1
# Warmup Iteration   1: 2031.436 ns/op
# Warmup Iteration   2: 1957.162 ns/op
# Warmup Iteration   3: 1783.391 ns/op
# Warmup Iteration   4: 1754.026 ns/op
# Warmup Iteration   5: 1800.942 ns/op
Iteration   1: 1758.618 ns/op
Iteration   2: 1761.724 ns/op
Iteration   3: 1757.553 ns/op
Iteration   4: 1760.911 ns/op
Iteration   5: 1762.914 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  1760.344 ±(99.9%) 8.523 ns/op [Average]
  (min, avg, max) = (1757.553, 1760.344, 1762.914), stdev = 2.214
  CI (99.9%): [1751.820, 1768.867] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.11% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 20423.882 ns/op
# Warmup Iteration   2: 18971.359 ns/op
# Warmup Iteration   3: 17118.423 ns/op
# Warmup Iteration   4: 16965.129 ns/op
# Warmup Iteration   5: 17866.898 ns/op
Iteration   1: 16994.156 ns/op
Iteration   2: 17008.795 ns/op
Iteration   3: 17046.342 ns/op
Iteration   4: 17011.509 ns/op
Iteration   5: 17068.204 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  17025.801 ±(99.9%) 117.346 ns/op [Average]
  (min, avg, max) = (16994.156, 17025.801, 17068.204), stdev = 30.474
  CI (99.9%): [16908.455, 17143.147] (assumes normal distribution)


# Run complete. Total time: 00:19:39

Benchmark                          (dataset)  (length)  Mode  Cnt      Score      Error  Units
Base64Benchmarks.commonsDecode         fixed         1  avgt    5    723.201 ±   72.651  ns/op
Base64Benchmarks.commonsDecode         fixed        10  avgt    5    826.957 ±  133.453  ns/op
Base64Benchmarks.commonsDecode         fixed        50  avgt    5   1250.009 ±  156.194  ns/op
Base64Benchmarks.commonsDecode         fixed       100  avgt    5   1794.081 ±  163.223  ns/op
Base64Benchmarks.commonsDecode         fixed       500  avgt    5   6649.608 ±  331.638  ns/op
Base64Benchmarks.commonsDecode         fixed      1000  avgt    5  12413.720 ±  141.525  ns/op
Base64Benchmarks.commonsDecode         fixed     10000  avgt    5  85657.630 ± 1315.967  ns/op
Base64Benchmarks.commonsDecode        random         1  avgt    5    715.909 ±   40.045  ns/op
Base64Benchmarks.commonsDecode        random        10  avgt    5    806.228 ±   62.625  ns/op
Base64Benchmarks.commonsDecode        random        50  avgt    5   1271.929 ±  170.943  ns/op
Base64Benchmarks.commonsDecode        random       100  avgt    5   1977.554 ±  704.099  ns/op
Base64Benchmarks.commonsDecode        random       500  avgt    5   6497.753 ±  138.437  ns/op
Base64Benchmarks.commonsDecode        random      1000  avgt    5  11312.989 ±   95.877  ns/op
Base64Benchmarks.commonsDecode        random     10000  avgt    5  87241.061 ± 3955.849  ns/op
Base64Benchmarks.commonsEncode         fixed         1  avgt    5    728.012 ±  143.632  ns/op
Base64Benchmarks.commonsEncode         fixed        10  avgt    5    803.940 ±   66.386  ns/op
Base64Benchmarks.commonsEncode         fixed        50  avgt    5   1161.876 ±   12.591  ns/op
Base64Benchmarks.commonsEncode         fixed       100  avgt    5   1678.729 ±  116.961  ns/op
Base64Benchmarks.commonsEncode         fixed       500  avgt    5   5885.663 ±  497.648  ns/op
Base64Benchmarks.commonsEncode         fixed      1000  avgt    5  11004.750 ±  154.878  ns/op
Base64Benchmarks.commonsEncode         fixed     10000  avgt    5  92254.192 ± 1490.118  ns/op
Base64Benchmarks.commonsEncode        random         1  avgt    5    704.546 ±   30.774  ns/op
Base64Benchmarks.commonsEncode        random        10  avgt    5    796.988 ±   51.697  ns/op
Base64Benchmarks.commonsEncode        random        50  avgt    5   1163.714 ±   88.425  ns/op
Base64Benchmarks.commonsEncode        random       100  avgt    5   1661.536 ±   15.111  ns/op
Base64Benchmarks.commonsEncode        random       500  avgt    5   5834.311 ±  302.302  ns/op
Base64Benchmarks.commonsEncode        random      1000  avgt    5  11079.813 ±  144.384  ns/op
Base64Benchmarks.commonsEncode        random     10000  avgt    5  92113.864 ± 4573.767  ns/op
Base64Benchmarks.commonsUrlDecode      fixed         1  avgt    5    717.747 ±   47.224  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        10  avgt    5    798.409 ±   58.175  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        50  avgt    5   1177.410 ±   61.962  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       100  avgt    5   1698.817 ±   73.071  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       500  avgt    5   5881.645 ±   58.902  ns/op
Base64Benchmarks.commonsUrlDecode      fixed      1000  avgt    5  11207.674 ±  806.818  ns/op
Base64Benchmarks.commonsUrlDecode      fixed     10000  avgt    5  84301.193 ± 1929.848  ns/op
Base64Benchmarks.commonsUrlDecode     random         1  avgt    5    702.697 ±   16.441  ns/op
Base64Benchmarks.commonsUrlDecode     random        10  avgt    5    805.773 ±   79.030  ns/op
Base64Benchmarks.commonsUrlDecode     random        50  avgt    5   1190.038 ±  155.674  ns/op
Base64Benchmarks.commonsUrlDecode     random       100  avgt    5   1710.143 ±   57.327  ns/op
Base64Benchmarks.commonsUrlDecode     random       500  avgt    5   5868.384 ±   56.326  ns/op
Base64Benchmarks.commonsUrlDecode     random      1000  avgt    5  11063.538 ±  173.063  ns/op
Base64Benchmarks.commonsUrlDecode     random     10000  avgt    5  85891.588 ±  645.137  ns/op
Base64Benchmarks.commonsUrlEncode      fixed         1  avgt    5    715.696 ±  101.344  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        10  avgt    5    803.746 ±   69.860  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        50  avgt    5   1152.211 ±   42.632  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       100  avgt    5   1622.583 ±  101.528  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       500  avgt    5   5394.715 ±    8.296  ns/op
Base64Benchmarks.commonsUrlEncode      fixed      1000  avgt    5  10688.094 ±  500.493  ns/op
Base64Benchmarks.commonsUrlEncode      fixed     10000  avgt    5  91184.164 ±  956.479  ns/op
Base64Benchmarks.commonsUrlEncode     random         1  avgt    5    725.476 ±  136.252  ns/op
Base64Benchmarks.commonsUrlEncode     random        10  avgt    5    788.343 ±   45.789  ns/op
Base64Benchmarks.commonsUrlEncode     random        50  avgt    5   1163.921 ±  166.607  ns/op
Base64Benchmarks.commonsUrlEncode     random       100  avgt    5   1604.685 ±   27.446  ns/op
Base64Benchmarks.commonsUrlEncode     random       500  avgt    5   5424.164 ±   73.647  ns/op
Base64Benchmarks.commonsUrlEncode     random      1000  avgt    5  10676.445 ±  729.282  ns/op
Base64Benchmarks.commonsUrlEncode     random     10000  avgt    5  92667.434 ± 4112.066  ns/op
Base64Benchmarks.jdkDecode             fixed         1  avgt    5     57.575 ±    0.983  ns/op
Base64Benchmarks.jdkDecode             fixed        10  avgt    5     92.064 ±    3.785  ns/op
Base64Benchmarks.jdkDecode             fixed        50  avgt    5    264.195 ±   15.703  ns/op
Base64Benchmarks.jdkDecode             fixed       100  avgt    5    458.550 ±   26.830  ns/op
Base64Benchmarks.jdkDecode             fixed       500  avgt    5   2388.724 ±   94.473  ns/op
Base64Benchmarks.jdkDecode             fixed      1000  avgt    5   4341.021 ±  676.841  ns/op
Base64Benchmarks.jdkDecode             fixed     10000  avgt    5  64972.012 ± 5339.923  ns/op
Base64Benchmarks.jdkDecode            random         1  avgt    5     57.346 ±    0.325  ns/op
Base64Benchmarks.jdkDecode            random        10  avgt    5     91.446 ±    3.223  ns/op
Base64Benchmarks.jdkDecode            random        50  avgt    5    263.654 ±   11.116  ns/op
Base64Benchmarks.jdkDecode            random       100  avgt    5    456.337 ±    2.099  ns/op
Base64Benchmarks.jdkDecode            random       500  avgt    5   2337.644 ±   67.513  ns/op
Base64Benchmarks.jdkDecode            random      1000  avgt    5   4264.665 ±   24.740  ns/op
Base64Benchmarks.jdkDecode            random     10000  avgt    5  48300.812 ±  328.858  ns/op
Base64Benchmarks.jdkEncode             fixed         1  avgt    5     49.139 ±    1.999  ns/op
Base64Benchmarks.jdkEncode             fixed        10  avgt    5     77.998 ±    1.882  ns/op
Base64Benchmarks.jdkEncode             fixed        50  avgt    5    143.783 ±    7.261  ns/op
Base64Benchmarks.jdkEncode             fixed       100  avgt    5    236.073 ±   27.090  ns/op
Base64Benchmarks.jdkEncode             fixed       500  avgt    5    901.618 ±   47.299  ns/op
Base64Benchmarks.jdkEncode             fixed      1000  avgt    5   1808.546 ±  100.874  ns/op
Base64Benchmarks.jdkEncode             fixed     10000  avgt    5  17451.711 ± 2493.254  ns/op
Base64Benchmarks.jdkEncode            random         1  avgt    5     49.273 ±    1.816  ns/op
Base64Benchmarks.jdkEncode            random        10  avgt    5     79.165 ±    6.861  ns/op
Base64Benchmarks.jdkEncode            random        50  avgt    5    143.228 ±    1.694  ns/op
Base64Benchmarks.jdkEncode            random       100  avgt    5    232.467 ±    2.190  ns/op
Base64Benchmarks.jdkEncode            random       500  avgt    5    900.436 ±   46.074  ns/op
Base64Benchmarks.jdkEncode            random      1000  avgt    5   1812.907 ±  294.767  ns/op
Base64Benchmarks.jdkEncode            random     10000  avgt    5  17083.060 ±  918.601  ns/op
Base64Benchmarks.jdkUrlDecode          fixed         1  avgt    5     54.364 ±    1.596  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        10  avgt    5     78.939 ±   10.448  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        50  avgt    5    199.772 ±    1.747  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       100  avgt    5    349.777 ±   22.150  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       500  avgt    5   1597.191 ±   79.930  ns/op
Base64Benchmarks.jdkUrlDecode          fixed      1000  avgt    5   3122.502 ±  176.717  ns/op
Base64Benchmarks.jdkUrlDecode          fixed     10000  avgt    5  29930.962 ±  773.731  ns/op
Base64Benchmarks.jdkUrlDecode         random         1  avgt    5     55.292 ±    5.127  ns/op
Base64Benchmarks.jdkUrlDecode         random        10  avgt    5     77.140 ±    0.602  ns/op
Base64Benchmarks.jdkUrlDecode         random        50  avgt    5    200.479 ±    6.595  ns/op
Base64Benchmarks.jdkUrlDecode         random       100  avgt    5    344.407 ±    4.159  ns/op
Base64Benchmarks.jdkUrlDecode         random       500  avgt    5   1578.780 ±   26.686  ns/op
Base64Benchmarks.jdkUrlDecode         random      1000  avgt    5   3097.351 ±   39.001  ns/op
Base64Benchmarks.jdkUrlDecode         random     10000  avgt    5  29942.869 ± 1485.501  ns/op
Base64Benchmarks.jdkUrlEncode          fixed         1  avgt    5     51.157 ±    1.276  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        10  avgt    5     78.099 ±    1.368  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        50  avgt    5    155.655 ±    5.809  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       100  avgt    5    229.564 ±    4.760  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       500  avgt    5    905.340 ±  145.740  ns/op
Base64Benchmarks.jdkUrlEncode          fixed      1000  avgt    5   1773.480 ±   89.801  ns/op
Base64Benchmarks.jdkUrlEncode          fixed     10000  avgt    5  17272.444 ± 2047.609  ns/op
Base64Benchmarks.jdkUrlEncode         random         1  avgt    5     51.073 ±    0.660  ns/op
Base64Benchmarks.jdkUrlEncode         random        10  avgt    5     78.613 ±    1.195  ns/op
Base64Benchmarks.jdkUrlEncode         random        50  avgt    5    156.685 ±    6.008  ns/op
Base64Benchmarks.jdkUrlEncode         random       100  avgt    5    229.545 ±    2.502  ns/op
Base64Benchmarks.jdkUrlEncode         random       500  avgt    5    890.518 ±    9.018  ns/op
Base64Benchmarks.jdkUrlEncode         random      1000  avgt    5   1760.344 ±    8.523  ns/op
Base64Benchmarks.jdkUrlEncode         random     10000  avgt    5  17025.801 ±  117.346  ns/op

Benchmark result is saved to /static/data/charts/base64-jdk-vs-apache-commons/jdk8.json
