# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000)

# Run progress: 0.00% complete, ETA 00:22:24
# Fork: 1 of 1
# Warmup Iteration   1: 91.692 ns/op
# Warmup Iteration   2: 88.612 ns/op
Iteration   1: 69.387 ns/op
Iteration   2: 68.972 ns/op
Iteration   3: 70.951 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  69.770 ±(99.9%) 19.038 ns/op [Average]
  (min, avg, max) = (68.972, 69.770, 70.951), stdev = 1.044
  CI (99.9%): [50.732, 88.808] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 10000)

# Run progress: 1.56% complete, ETA 00:22:40
# Fork: 1 of 1
# Warmup Iteration   1: 127.391 ns/op
# Warmup Iteration   2: 143.527 ns/op
Iteration   1: 81.546 ns/op
Iteration   2: 83.486 ns/op
Iteration   3: 81.498 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  82.177 ±(99.9%) 20.698 ns/op [Average]
  (min, avg, max) = (81.498, 82.177, 83.486), stdev = 1.135
  CI (99.9%): [61.479, 102.875] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 100000)

# Run progress: 3.13% complete, ETA 00:22:20
# Fork: 1 of 1
# Warmup Iteration   1: 138.295 ns/op
# Warmup Iteration   2: 126.443 ns/op
Iteration   1: 70.872 ns/op
Iteration   2: 70.018 ns/op
Iteration   3: 69.153 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  70.014 ±(99.9%) 15.682 ns/op [Average]
  (min, avg, max) = (69.153, 70.014, 70.872), stdev = 0.860
  CI (99.9%): [54.332, 85.697] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000000)

# Run progress: 4.69% complete, ETA 00:22:07
# Fork: 1 of 1
# Warmup Iteration   1: 131.984 ns/op
# Warmup Iteration   2: 135.431 ns/op
Iteration   1: 83.918 ns/op
Iteration   2: 82.730 ns/op
Iteration   3: 82.765 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  83.138 ±(99.9%) 12.338 ns/op [Average]
  (min, avg, max) = (82.730, 83.138, 83.918), stdev = 0.676
  CI (99.9%): [70.799, 95.476] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000)

# Run progress: 6.25% complete, ETA 00:22:27
# Fork: 1 of 1
# Warmup Iteration   1: 74.872 ns/op
# Warmup Iteration   2: 71.387 ns/op
Iteration   1: 51.845 ns/op
Iteration   2: 51.792 ns/op
Iteration   3: 51.895 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  51.844 ±(99.9%) 0.943 ns/op [Average]
  (min, avg, max) = (51.792, 51.844, 51.895), stdev = 0.052
  CI (99.9%): [50.902, 52.787] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 10000)

# Run progress: 7.81% complete, ETA 00:21:54
# Fork: 1 of 1
# Warmup Iteration   1: 71.050 ns/op
# Warmup Iteration   2: 67.463 ns/op
Iteration   1: 48.302 ns/op
Iteration   2: 48.258 ns/op
Iteration   3: 48.269 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  48.276 ±(99.9%) 0.425 ns/op [Average]
  (min, avg, max) = (48.258, 48.276, 48.302), stdev = 0.023
  CI (99.9%): [47.852, 48.701] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 100000)

# Run progress: 9.38% complete, ETA 00:21:26
# Fork: 1 of 1
# Warmup Iteration   1: 68.089 ns/op
# Warmup Iteration   2: 66.734 ns/op
Iteration   1: 48.194 ns/op
Iteration   2: 47.891 ns/op
Iteration   3: 48.021 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  48.035 ±(99.9%) 2.777 ns/op [Average]
  (min, avg, max) = (47.891, 48.035, 48.194), stdev = 0.152
  CI (99.9%): [45.259, 50.812] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000000)

# Run progress: 10.94% complete, ETA 00:21:01
# Fork: 1 of 1
# Warmup Iteration   1: 67.460 ns/op
# Warmup Iteration   2: 65.752 ns/op
Iteration   1: 47.217 ns/op
Iteration   2: 47.341 ns/op
Iteration   3: 47.227 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  47.262 ±(99.9%) 1.254 ns/op [Average]
  (min, avg, max) = (47.217, 47.262, 47.341), stdev = 0.069
  CI (99.9%): [46.007, 48.516] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000)

# Run progress: 12.50% complete, ETA 00:20:55
# Fork: 1 of 1
# Warmup Iteration   1: 103.025 ns/op
# Warmup Iteration   2: 102.181 ns/op
Iteration   1: 63.242 ns/op
Iteration   2: 63.247 ns/op
Iteration   3: 63.257 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  63.249 ±(99.9%) 0.134 ns/op [Average]
  (min, avg, max) = (63.242, 63.249, 63.257), stdev = 0.007
  CI (99.9%): [63.114, 63.383] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 10000)

# Run progress: 14.06% complete, ETA 00:20:28
# Fork: 1 of 1
# Warmup Iteration   1: 95.944 ns/op
# Warmup Iteration   2: 92.718 ns/op
Iteration   1: 57.651 ns/op
Iteration   2: 57.713 ns/op
Iteration   3: 57.672 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  57.679 ±(99.9%) 0.576 ns/op [Average]
  (min, avg, max) = (57.651, 57.679, 57.713), stdev = 0.032
  CI (99.9%): [57.102, 58.255] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 100000)

# Run progress: 15.63% complete, ETA 00:20:02
# Fork: 1 of 1
# Warmup Iteration   1: 92.995 ns/op
# Warmup Iteration   2: 94.636 ns/op
Iteration   1: 61.713 ns/op
Iteration   2: 61.686 ns/op
Iteration   3: 61.680 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  61.693 ±(99.9%) 0.317 ns/op [Average]
  (min, avg, max) = (61.680, 61.693, 61.713), stdev = 0.017
  CI (99.9%): [61.376, 62.010] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000000)

# Run progress: 17.19% complete, ETA 00:19:38
# Fork: 1 of 1
# Warmup Iteration   1: 109.963 ns/op
# Warmup Iteration   2: 108.143 ns/op
Iteration   1: 67.314 ns/op
Iteration   2: 69.590 ns/op
Iteration   3: 67.394 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  68.099 ±(99.9%) 23.567 ns/op [Average]
  (min, avg, max) = (67.314, 68.099, 69.590), stdev = 1.292
  CI (99.9%): [44.532, 91.667] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000)

# Run progress: 18.75% complete, ETA 00:19:25
# Fork: 1 of 1
# Warmup Iteration   1: 75.393 ns/op
# Warmup Iteration   2: 72.220 ns/op
Iteration   1: 52.493 ns/op
Iteration   2: 52.545 ns/op
Iteration   3: 52.496 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  52.512 ±(99.9%) 0.533 ns/op [Average]
  (min, avg, max) = (52.493, 52.512, 52.545), stdev = 0.029
  CI (99.9%): [51.979, 53.044] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 10000)

# Run progress: 20.31% complete, ETA 00:18:59
# Fork: 1 of 1
# Warmup Iteration   1: 80.546 ns/op
# Warmup Iteration   2: 79.170 ns/op
Iteration   1: 58.768 ns/op
Iteration   2: 58.734 ns/op
Iteration   3: 59.380 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  58.961 ±(99.9%) 6.630 ns/op [Average]
  (min, avg, max) = (58.734, 58.961, 59.380), stdev = 0.363
  CI (99.9%): [52.330, 65.591] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 100000)

# Run progress: 21.88% complete, ETA 00:18:34
# Fork: 1 of 1
# Warmup Iteration   1: 88.039 ns/op
# Warmup Iteration   2: 86.284 ns/op
Iteration   1: 57.156 ns/op
Iteration   2: 57.087 ns/op
Iteration   3: 57.110 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  57.118 ±(99.9%) 0.640 ns/op [Average]
  (min, avg, max) = (57.087, 57.118, 57.156), stdev = 0.035
  CI (99.9%): [56.478, 57.758] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000000)

# Run progress: 23.44% complete, ETA 00:18:11
# Fork: 1 of 1
# Warmup Iteration   1: 77.735 ns/op
# Warmup Iteration   2: 79.287 ns/op
Iteration   1: 55.586 ns/op
Iteration   2: 55.576 ns/op
Iteration   3: 55.910 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  55.691 ±(99.9%) 3.469 ns/op [Average]
  (min, avg, max) = (55.576, 55.691, 55.910), stdev = 0.190
  CI (99.9%): [52.222, 59.159] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000)

# Run progress: 25.00% complete, ETA 00:17:56
# Fork: 1 of 1
# Warmup Iteration   1: 142.923 ns/op
# Warmup Iteration   2: 123.096 ns/op
Iteration   1: 84.196 ns/op
Iteration   2: 84.146 ns/op
Iteration   3: 84.145 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  84.162 ±(99.9%) 0.530 ns/op [Average]
  (min, avg, max) = (84.145, 84.162, 84.196), stdev = 0.029
  CI (99.9%): [83.633, 84.692] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 10000)

# Run progress: 26.56% complete, ETA 00:17:31
# Fork: 1 of 1
# Warmup Iteration   1: 149.252 ns/op
# Warmup Iteration   2: 135.904 ns/op
Iteration   1: 90.974 ns/op
Iteration   2: 94.078 ns/op
Iteration   3: 91.097 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  92.049 ±(99.9%) 32.066 ns/op [Average]
  (min, avg, max) = (90.974, 92.049, 94.078), stdev = 1.758
  CI (99.9%): [59.983, 124.116] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 100000)

# Run progress: 28.13% complete, ETA 00:17:07
# Fork: 1 of 1
# Warmup Iteration   1: 148.449 ns/op
# Warmup Iteration   2: 177.742 ns/op
Iteration   1: 99.025 ns/op
Iteration   2: 98.643 ns/op
Iteration   3: 98.668 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  98.779 ±(99.9%) 3.900 ns/op [Average]
  (min, avg, max) = (98.643, 98.779, 99.025), stdev = 0.214
  CI (99.9%): [94.879, 102.679] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000000)

# Run progress: 29.69% complete, ETA 00:16:43
# Fork: 1 of 1
# Warmup Iteration   1: 139.498 ns/op
# Warmup Iteration   2: 137.317 ns/op
Iteration   1: 91.126 ns/op
Iteration   2: 93.152 ns/op
Iteration   3: 91.146 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  91.808 ±(99.9%) 21.236 ns/op [Average]
  (min, avg, max) = (91.126, 91.808, 93.152), stdev = 1.164
  CI (99.9%): [70.572, 113.044] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000)

# Run progress: 31.25% complete, ETA 00:16:26
# Fork: 1 of 1
# Warmup Iteration   1: 143.648 ns/op
# Warmup Iteration   2: 144.053 ns/op
Iteration   1: 99.013 ns/op
Iteration   2: 98.439 ns/op
Iteration   3: 98.345 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  98.599 ±(99.9%) 6.601 ns/op [Average]
  (min, avg, max) = (98.345, 98.599, 99.013), stdev = 0.362
  CI (99.9%): [91.998, 105.200] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 10000)

# Run progress: 32.81% complete, ETA 00:16:02
# Fork: 1 of 1
# Warmup Iteration   1: 149.988 ns/op
# Warmup Iteration   2: 147.421 ns/op
Iteration   1: 103.832 ns/op
Iteration   2: 103.850 ns/op
Iteration   3: 103.908 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  103.863 ±(99.9%) 0.720 ns/op [Average]
  (min, avg, max) = (103.832, 103.863, 103.908), stdev = 0.039
  CI (99.9%): [103.143, 104.583] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 100000)

# Run progress: 34.38% complete, ETA 00:15:38
# Fork: 1 of 1
# Warmup Iteration   1: 132.844 ns/op
# Warmup Iteration   2: 129.673 ns/op
Iteration   1: 96.915 ns/op
Iteration   2: 93.459 ns/op
Iteration   3: 93.448 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  94.607 ±(99.9%) 36.463 ns/op [Average]
  (min, avg, max) = (93.448, 94.607, 96.915), stdev = 1.999
  CI (99.9%): [58.145, 131.070] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000000)

# Run progress: 35.94% complete, ETA 00:15:15
# Fork: 1 of 1
# Warmup Iteration   1: 138.346 ns/op
# Warmup Iteration   2: 132.117 ns/op
Iteration   1: 101.176 ns/op
Iteration   2: 95.701 ns/op
Iteration   3: 95.715 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  97.531 ±(99.9%) 57.599 ns/op [Average]
  (min, avg, max) = (95.701, 97.531, 101.176), stdev = 3.157
  CI (99.9%): [39.932, 155.130] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000)

# Run progress: 37.50% complete, ETA 00:14:56
# Fork: 1 of 1
# Warmup Iteration   1: 118.552 ns/op
# Warmup Iteration   2: 114.389 ns/op
Iteration   1: 73.569 ns/op
Iteration   2: 73.624 ns/op
Iteration   3: 73.570 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  73.588 ±(99.9%) 0.571 ns/op [Average]
  (min, avg, max) = (73.569, 73.588, 73.624), stdev = 0.031
  CI (99.9%): [73.017, 74.159] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 10000)

# Run progress: 39.06% complete, ETA 00:14:33
# Fork: 1 of 1
# Warmup Iteration   1: 112.952 ns/op
# Warmup Iteration   2: 113.962 ns/op
Iteration   1: 71.255 ns/op
Iteration   2: 71.289 ns/op
Iteration   3: 71.290 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  71.278 ±(99.9%) 0.371 ns/op [Average]
  (min, avg, max) = (71.255, 71.278, 71.290), stdev = 0.020
  CI (99.9%): [70.908, 71.649] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 100000)

# Run progress: 40.63% complete, ETA 00:14:09
# Fork: 1 of 1
# Warmup Iteration   1: 105.767 ns/op
# Warmup Iteration   2: 104.551 ns/op
Iteration   1: 70.277 ns/op
Iteration   2: 70.978 ns/op
Iteration   3: 70.240 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  70.498 ±(99.9%) 7.583 ns/op [Average]
  (min, avg, max) = (70.240, 70.498, 70.978), stdev = 0.416
  CI (99.9%): [62.915, 78.081] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000000)

# Run progress: 42.19% complete, ETA 00:13:46
# Fork: 1 of 1
# Warmup Iteration   1: 114.467 ns/op
# Warmup Iteration   2: 110.926 ns/op
Iteration   1: 72.713 ns/op
Iteration   2: 72.461 ns/op
Iteration   3: 70.775 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  71.983 ±(99.9%) 19.224 ns/op [Average]
  (min, avg, max) = (70.775, 71.983, 72.713), stdev = 1.054
  CI (99.9%): [52.759, 91.207] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000)

# Run progress: 43.75% complete, ETA 00:13:27
# Fork: 1 of 1
# Warmup Iteration   1: 87.852 ns/op
# Warmup Iteration   2: 84.098 ns/op
Iteration   1: 64.127 ns/op
Iteration   2: 64.247 ns/op
Iteration   3: 64.193 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  64.189 ±(99.9%) 1.095 ns/op [Average]
  (min, avg, max) = (64.127, 64.189, 64.247), stdev = 0.060
  CI (99.9%): [63.094, 65.284] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 10000)

# Run progress: 45.31% complete, ETA 00:13:03
# Fork: 1 of 1
# Warmup Iteration   1: 87.663 ns/op
# Warmup Iteration   2: 86.742 ns/op
Iteration   1: 63.625 ns/op
Iteration   2: 63.644 ns/op
Iteration   3: 63.738 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  63.669 ±(99.9%) 1.100 ns/op [Average]
  (min, avg, max) = (63.625, 63.669, 63.738), stdev = 0.060
  CI (99.9%): [62.569, 64.768] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 100000)

# Run progress: 46.88% complete, ETA 00:12:40
# Fork: 1 of 1
# Warmup Iteration   1: 91.449 ns/op
# Warmup Iteration   2: 89.193 ns/op
Iteration   1: 65.264 ns/op
Iteration   2: 65.191 ns/op
Iteration   3: 65.247 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  65.234 ±(99.9%) 0.698 ns/op [Average]
  (min, avg, max) = (65.191, 65.234, 65.264), stdev = 0.038
  CI (99.9%): [64.536, 65.932] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000000)

# Run progress: 48.44% complete, ETA 00:12:17
# Fork: 1 of 1
# Warmup Iteration   1: 89.871 ns/op
# Warmup Iteration   2: 86.274 ns/op
Iteration   1: 62.425 ns/op
Iteration   2: 62.438 ns/op
Iteration   3: 62.446 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  62.436 ±(99.9%) 0.191 ns/op [Average]
  (min, avg, max) = (62.425, 62.436, 62.446), stdev = 0.010
  CI (99.9%): [62.246, 62.627] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000)

# Run progress: 50.00% complete, ETA 00:11:57
# Fork: 1 of 1
# Warmup Iteration   1: 286.356 ns/op
# Warmup Iteration   2: 276.630 ns/op
Iteration   1: 272.969 ns/op
Iteration   2: 271.605 ns/op
Iteration   3: 271.830 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  272.135 ±(99.9%) 13.338 ns/op [Average]
  (min, avg, max) = (271.605, 272.135, 272.969), stdev = 0.731
  CI (99.9%): [258.796, 285.473] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 10000)

# Run progress: 51.56% complete, ETA 00:11:34
# Fork: 1 of 1
# Warmup Iteration   1: 372.952 ns/op
# Warmup Iteration   2: 365.090 ns/op
Iteration   1: 358.180 ns/op
Iteration   2: 354.276 ns/op
Iteration   3: 354.497 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  355.651 ±(99.9%) 40.011 ns/op [Average]
  (min, avg, max) = (354.276, 355.651, 358.180), stdev = 2.193
  CI (99.9%): [315.641, 395.662] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 100000)

# Run progress: 53.13% complete, ETA 00:11:11
# Fork: 1 of 1
# Warmup Iteration   1: 536.650 ns/op
# Warmup Iteration   2: 532.880 ns/op
Iteration   1: 518.493 ns/op
Iteration   2: 519.106 ns/op
Iteration   3: 519.525 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  519.041 ±(99.9%) 9.469 ns/op [Average]
  (min, avg, max) = (518.493, 519.041, 519.525), stdev = 0.519
  CI (99.9%): [509.572, 528.510] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000000)

# Run progress: 54.69% complete, ETA 00:10:48
# Fork: 1 of 1
# Warmup Iteration   1: 642.202 ns/op
# Warmup Iteration   2: 608.560 ns/op
Iteration   1: 608.617 ns/op
Iteration   2: 601.511 ns/op
Iteration   3: 598.876 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  603.001 ±(99.9%) 91.917 ns/op [Average]
  (min, avg, max) = (598.876, 603.001, 608.617), stdev = 5.038
  CI (99.9%): [511.084, 694.919] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000)

# Run progress: 56.25% complete, ETA 00:10:27
# Fork: 1 of 1
# Warmup Iteration   1: 211.007 ns/op
# Warmup Iteration   2: 203.119 ns/op
Iteration   1: 199.319 ns/op
Iteration   2: 198.068 ns/op
Iteration   3: 198.880 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  198.755 ±(99.9%) 11.578 ns/op [Average]
  (min, avg, max) = (198.068, 198.755, 199.319), stdev = 0.635
  CI (99.9%): [187.177, 210.334] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 10000)

# Run progress: 57.81% complete, ETA 00:10:04
# Fork: 1 of 1
# Warmup Iteration   1: 271.230 ns/op
# Warmup Iteration   2: 261.620 ns/op
Iteration   1: 258.276 ns/op
Iteration   2: 257.775 ns/op
Iteration   3: 257.513 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  257.854 ±(99.9%) 7.071 ns/op [Average]
  (min, avg, max) = (257.513, 257.854, 258.276), stdev = 0.388
  CI (99.9%): [250.784, 264.925] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 100000)

# Run progress: 59.38% complete, ETA 00:09:41
# Fork: 1 of 1
# Warmup Iteration   1: 432.347 ns/op
# Warmup Iteration   2: 413.048 ns/op
Iteration   1: 407.481 ns/op
Iteration   2: 407.718 ns/op
Iteration   3: 407.542 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  407.580 ±(99.9%) 2.240 ns/op [Average]
  (min, avg, max) = (407.481, 407.580, 407.718), stdev = 0.123
  CI (99.9%): [405.340, 409.821] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000000)

# Run progress: 60.94% complete, ETA 00:09:19
# Fork: 1 of 1
# Warmup Iteration   1: 544.832 ns/op
# Warmup Iteration   2: 550.182 ns/op
Iteration   1: 522.526 ns/op
Iteration   2: 522.313 ns/op
Iteration   3: 521.657 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  522.165 ±(99.9%) 8.261 ns/op [Average]
  (min, avg, max) = (521.657, 522.165, 522.526), stdev = 0.453
  CI (99.9%): [513.904, 530.426] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000)

# Run progress: 62.50% complete, ETA 00:08:58
# Fork: 1 of 1
# Warmup Iteration   1: 113.649 ns/op
# Warmup Iteration   2: 125.485 ns/op
Iteration   1: 76.954 ns/op
Iteration   2: 76.931 ns/op
Iteration   3: 76.930 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  76.938 ±(99.9%) 0.250 ns/op [Average]
  (min, avg, max) = (76.930, 76.938, 76.954), stdev = 0.014
  CI (99.9%): [76.688, 77.188] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 10000)

# Run progress: 64.06% complete, ETA 00:08:35
# Fork: 1 of 1
# Warmup Iteration   1: 122.419 ns/op
# Warmup Iteration   2: 121.816 ns/op
Iteration   1: 88.243 ns/op
Iteration   2: 86.283 ns/op
Iteration   3: 86.380 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  86.969 ±(99.9%) 20.157 ns/op [Average]
  (min, avg, max) = (86.283, 86.969, 88.243), stdev = 1.105
  CI (99.9%): [66.812, 107.126] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 100000)

# Run progress: 65.63% complete, ETA 00:08:12
# Fork: 1 of 1
# Warmup Iteration   1: 133.030 ns/op
# Warmup Iteration   2: 130.649 ns/op
Iteration   1: 91.356 ns/op
Iteration   2: 91.325 ns/op
Iteration   3: 91.311 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  91.331 ±(99.9%) 0.417 ns/op [Average]
  (min, avg, max) = (91.311, 91.331, 91.356), stdev = 0.023
  CI (99.9%): [90.913, 91.748] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000000)

# Run progress: 67.19% complete, ETA 00:07:49
# Fork: 1 of 1
# Warmup Iteration   1: 123.086 ns/op
# Warmup Iteration   2: 124.918 ns/op
Iteration   1: 90.255 ns/op
Iteration   2: 90.461 ns/op
Iteration   3: 90.208 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  90.308 ±(99.9%) 2.453 ns/op [Average]
  (min, avg, max) = (90.208, 90.308, 90.461), stdev = 0.134
  CI (99.9%): [87.855, 92.761] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000)

# Run progress: 68.75% complete, ETA 00:07:28
# Fork: 1 of 1
# Warmup Iteration   1: 48.205 ns/op
# Warmup Iteration   2: 47.845 ns/op
Iteration   1: 52.457 ns/op
Iteration   2: 52.381 ns/op
Iteration   3: 52.367 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  52.402 ±(99.9%) 0.889 ns/op [Average]
  (min, avg, max) = (52.367, 52.402, 52.457), stdev = 0.049
  CI (99.9%): [51.513, 53.291] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 10000)

# Run progress: 70.31% complete, ETA 00:07:05
# Fork: 1 of 1
# Warmup Iteration   1: 41.424 ns/op
# Warmup Iteration   2: 42.731 ns/op
Iteration   1: 45.848 ns/op
Iteration   2: 45.875 ns/op
Iteration   3: 45.921 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  45.881 ±(99.9%) 0.680 ns/op [Average]
  (min, avg, max) = (45.848, 45.881, 45.921), stdev = 0.037
  CI (99.9%): [45.201, 46.562] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 100000)

# Run progress: 71.88% complete, ETA 00:06:42
# Fork: 1 of 1
# Warmup Iteration   1: 45.178 ns/op
# Warmup Iteration   2: 43.081 ns/op
Iteration   1: 47.593 ns/op
Iteration   2: 47.562 ns/op
Iteration   3: 47.640 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  47.598 ±(99.9%) 0.710 ns/op [Average]
  (min, avg, max) = (47.562, 47.598, 47.640), stdev = 0.039
  CI (99.9%): [46.888, 48.308] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000000)

# Run progress: 73.44% complete, ETA 00:06:20
# Fork: 1 of 1
# Warmup Iteration   1: 40.486 ns/op
# Warmup Iteration   2: 41.818 ns/op
Iteration   1: 45.396 ns/op
Iteration   2: 45.156 ns/op
Iteration   3: 45.186 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  45.246 ±(99.9%) 2.381 ns/op [Average]
  (min, avg, max) = (45.156, 45.246, 45.396), stdev = 0.131
  CI (99.9%): [42.865, 47.627] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000)

# Run progress: 75.00% complete, ETA 00:05:58
# Fork: 1 of 1
# Warmup Iteration   1: 107.806 ns/op
# Warmup Iteration   2: 98.738 ns/op
Iteration   1: 66.368 ns/op
Iteration   2: 66.427 ns/op
Iteration   3: 66.365 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  66.387 ±(99.9%) 0.642 ns/op [Average]
  (min, avg, max) = (66.365, 66.387, 66.427), stdev = 0.035
  CI (99.9%): [65.745, 67.028] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 10000)

# Run progress: 76.56% complete, ETA 00:05:36
# Fork: 1 of 1
# Warmup Iteration   1: 88.705 ns/op
# Warmup Iteration   2: 87.794 ns/op
Iteration   1: 67.212 ns/op
Iteration   2: 67.229 ns/op
Iteration   3: 67.257 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  67.232 ±(99.9%) 0.417 ns/op [Average]
  (min, avg, max) = (67.212, 67.232, 67.257), stdev = 0.023
  CI (99.9%): [66.815, 67.650] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 100000)

# Run progress: 78.13% complete, ETA 00:05:13
# Fork: 1 of 1
# Warmup Iteration   1: 109.001 ns/op
# Warmup Iteration   2: 107.131 ns/op
Iteration   1: 70.129 ns/op
Iteration   2: 72.012 ns/op
Iteration   3: 71.170 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  71.104 ±(99.9%) 17.204 ns/op [Average]
  (min, avg, max) = (70.129, 71.104, 72.012), stdev = 0.943
  CI (99.9%): [53.900, 88.307] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000000)

# Run progress: 79.69% complete, ETA 00:04:51
# Fork: 1 of 1
# Warmup Iteration   1: 97.022 ns/op
# Warmup Iteration   2: 103.191 ns/op
Iteration   1: 68.088 ns/op
Iteration   2: 68.051 ns/op
Iteration   3: 68.066 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  68.068 ±(99.9%) 0.341 ns/op [Average]
  (min, avg, max) = (68.051, 68.068, 68.088), stdev = 0.019
  CI (99.9%): [67.727, 68.410] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000)

# Run progress: 81.25% complete, ETA 00:04:29
# Fork: 1 of 1
# Warmup Iteration   1: 41.418 ns/op
# Warmup Iteration   2: 44.733 ns/op
Iteration   1: 45.925 ns/op
Iteration   2: 47.003 ns/op
Iteration   3: 45.962 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  46.297 ±(99.9%) 11.167 ns/op [Average]
  (min, avg, max) = (45.925, 46.297, 47.003), stdev = 0.612
  CI (99.9%): [35.130, 57.464] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 10000)

# Run progress: 82.81% complete, ETA 00:04:06
# Fork: 1 of 1
# Warmup Iteration   1: 44.129 ns/op
# Warmup Iteration   2: 44.592 ns/op
Iteration   1: 48.532 ns/op
Iteration   2: 48.562 ns/op
Iteration   3: 48.554 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  48.549 ±(99.9%) 0.280 ns/op [Average]
  (min, avg, max) = (48.532, 48.549, 48.562), stdev = 0.015
  CI (99.9%): [48.270, 48.829] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 100000)

# Run progress: 84.38% complete, ETA 00:03:43
# Fork: 1 of 1
# Warmup Iteration   1: 39.974 ns/op
# Warmup Iteration   2: 41.475 ns/op
Iteration   1: 45.812 ns/op
Iteration   2: 45.583 ns/op
Iteration   3: 45.589 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  45.661 ±(99.9%) 2.376 ns/op [Average]
  (min, avg, max) = (45.583, 45.661, 45.812), stdev = 0.130
  CI (99.9%): [43.285, 48.037] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000000)

# Run progress: 85.94% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 40.045 ns/op
# Warmup Iteration   2: 43.827 ns/op
Iteration   1: 46.585 ns/op
Iteration   2: 46.627 ns/op
Iteration   3: 46.587 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  46.600 ±(99.9%) 0.426 ns/op [Average]
  (min, avg, max) = (46.585, 46.600, 46.627), stdev = 0.023
  CI (99.9%): [46.174, 47.025] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000)

# Run progress: 87.50% complete, ETA 00:02:59
# Fork: 1 of 1
# Warmup Iteration   1: 265.779 ns/op
# Warmup Iteration   2: 262.204 ns/op
Iteration   1: 267.335 ns/op
Iteration   2: 267.376 ns/op
Iteration   3: 267.394 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  267.368 ±(99.9%) 0.558 ns/op [Average]
  (min, avg, max) = (267.335, 267.368, 267.394), stdev = 0.031
  CI (99.9%): [266.810, 267.927] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 10000)

# Run progress: 89.06% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 294.453 ns/op
# Warmup Iteration   2: 290.425 ns/op
Iteration   1: 300.847 ns/op
Iteration   2: 299.567 ns/op
Iteration   3: 301.064 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  300.492 ±(99.9%) 14.763 ns/op [Average]
  (min, avg, max) = (299.567, 300.492, 301.064), stdev = 0.809
  CI (99.9%): [285.729, 315.256] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 100000)

# Run progress: 90.63% complete, ETA 00:02:14
# Fork: 1 of 1
# Warmup Iteration   1: 368.327 ns/op
# Warmup Iteration   2: 363.942 ns/op
Iteration   1: 380.401 ns/op
Iteration   2: 380.915 ns/op
Iteration   3: 380.357 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  380.558 ±(99.9%) 5.655 ns/op [Average]
  (min, avg, max) = (380.357, 380.558, 380.915), stdev = 0.310
  CI (99.9%): [374.903, 386.213] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000000)

# Run progress: 92.19% complete, ETA 00:01:51
# Fork: 1 of 1
# Warmup Iteration   1: 504.035 ns/op
# Warmup Iteration   2: 486.107 ns/op
Iteration   1: 496.598 ns/op
Iteration   2: 491.259 ns/op
Iteration   3: 491.953 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  493.270 ±(99.9%) 52.964 ns/op [Average]
  (min, avg, max) = (491.259, 493.270, 496.598), stdev = 2.903
  CI (99.9%): [440.306, 546.234] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000)

# Run progress: 93.75% complete, ETA 00:01:29
# Fork: 1 of 1
# Warmup Iteration   1: 170.302 ns/op
# Warmup Iteration   2: 173.123 ns/op
Iteration   1: 176.868 ns/op
Iteration   2: 177.028 ns/op
Iteration   3: 178.036 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  177.311 ±(99.9%) 11.554 ns/op [Average]
  (min, avg, max) = (176.868, 177.311, 178.036), stdev = 0.633
  CI (99.9%): [165.757, 188.864] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 10000)

# Run progress: 95.31% complete, ETA 00:01:07
# Fork: 1 of 1
# Warmup Iteration   1: 242.639 ns/op
# Warmup Iteration   2: 247.271 ns/op
Iteration   1: 263.579 ns/op
Iteration   2: 263.540 ns/op
Iteration   3: 263.508 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  263.542 ±(99.9%) 0.643 ns/op [Average]
  (min, avg, max) = (263.508, 263.542, 263.579), stdev = 0.035
  CI (99.9%): [262.899, 264.186] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 100000)

# Run progress: 96.88% complete, ETA 00:00:44
# Fork: 1 of 1
# Warmup Iteration   1: 316.387 ns/op
# Warmup Iteration   2: 317.675 ns/op
Iteration   1: 324.093 ns/op
Iteration   2: 324.272 ns/op
Iteration   3: 324.613 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  324.326 ±(99.9%) 4.825 ns/op [Average]
  (min, avg, max) = (324.093, 324.326, 324.613), stdev = 0.264
  CI (99.9%): [319.501, 329.151] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000000)

# Run progress: 98.44% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 398.917 ns/op
# Warmup Iteration   2: 401.393 ns/op
Iteration   1: 430.194 ns/op
Iteration   2: 427.845 ns/op
Iteration   3: 434.041 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  430.694 ±(99.9%) 57.067 ns/op [Average]
  (min, avg, max) = (427.845, 430.694, 434.041), stdev = 3.128
  CI (99.9%): [373.626, 487.761] (assumes normal distribution)


# Run complete. Total time: 00:23:55

Benchmark                                         (size)  Mode  Cnt    Score    Error  Units
SetMapJavaVsScalaBenchmarks.javaMapHit              1000  avgt    3   69.770 ± 19.038  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit             10000  avgt    3   82.177 ± 20.698  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit            100000  avgt    3   70.014 ± 15.682  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit           1000000  avgt    3   83.138 ± 12.338  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss             1000  avgt    3   51.844 ±  0.943  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss            10000  avgt    3   48.276 ±  0.425  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss           100000  avgt    3   48.035 ±  2.777  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss          1000000  avgt    3   47.262 ±  1.254  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit              1000  avgt    3   63.249 ±  0.134  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit             10000  avgt    3   57.679 ±  0.576  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit            100000  avgt    3   61.693 ±  0.317  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit           1000000  avgt    3   68.099 ± 23.567  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss             1000  avgt    3   52.512 ±  0.533  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss            10000  avgt    3   58.961 ±  6.630  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss           100000  avgt    3   57.118 ±  0.640  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss          1000000  avgt    3   55.691 ±  3.469  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit       1000  avgt    3   84.162 ±  0.530  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit      10000  avgt    3   92.049 ± 32.066  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit     100000  avgt    3   98.779 ±  3.900  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit    1000000  avgt    3   91.808 ± 21.236  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss      1000  avgt    3   98.599 ±  6.601  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss     10000  avgt    3  103.863 ±  0.720  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss    100000  avgt    3   94.607 ± 36.463  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss   1000000  avgt    3   97.531 ± 57.599  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit       1000  avgt    3   73.588 ±  0.571  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit      10000  avgt    3   71.278 ±  0.371  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit     100000  avgt    3   70.498 ±  7.583  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit    1000000  avgt    3   71.983 ± 19.224  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss      1000  avgt    3   64.189 ±  1.095  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss     10000  avgt    3   63.669 ±  1.100  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss    100000  avgt    3   65.234 ±  0.698  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss   1000000  avgt    3   62.436 ±  0.191  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit             1000  avgt    3  272.135 ± 13.338  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit            10000  avgt    3  355.651 ± 40.011  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit           100000  avgt    3  519.041 ±  9.469  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit          1000000  avgt    3  603.001 ± 91.917  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss            1000  avgt    3  198.755 ± 11.578  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss           10000  avgt    3  257.854 ±  7.071  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss          100000  avgt    3  407.580 ±  2.240  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss         1000000  avgt    3  522.165 ±  8.261  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit      1000  avgt    3   76.938 ±  0.250  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit     10000  avgt    3   86.969 ± 20.157  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit    100000  avgt    3   91.331 ±  0.417  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit   1000000  avgt    3   90.308 ±  2.453  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss     1000  avgt    3   52.402 ±  0.889  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss    10000  avgt    3   45.881 ±  0.680  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss   100000  avgt    3   47.598 ±  0.710  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss  1000000  avgt    3   45.246 ±  2.381  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit      1000  avgt    3   66.387 ±  0.642  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit     10000  avgt    3   67.232 ±  0.417  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit    100000  avgt    3   71.104 ± 17.204  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit   1000000  avgt    3   68.068 ±  0.341  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss     1000  avgt    3   46.297 ± 11.167  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss    10000  avgt    3   48.549 ±  0.280  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss   100000  avgt    3   45.661 ±  2.376  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss  1000000  avgt    3   46.600 ±  0.426  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit             1000  avgt    3  267.368 ±  0.558  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit            10000  avgt    3  300.492 ± 14.763  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit           100000  avgt    3  380.558 ±  5.655  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit          1000000  avgt    3  493.270 ± 52.964  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss            1000  avgt    3  177.311 ± 11.554  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss           10000  avgt    3  263.542 ±  0.643  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss          100000  avgt    3  324.326 ±  4.825  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss         1000000  avgt    3  430.694 ± 57.067  ns/op

Benchmark result is saved to /static/data/charts/set-map-java-vs-scala-2-13/jdk17.json
