# JMH version: 1.20
# VM version: JDK 17.0.2, VM 17.0.2+8-Ubuntu-122.10
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.str.jmh.RegionMatchesBenchmarks.begin_regionMatches

# Run progress: 0.00% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: 26.632 ns/op
# Warmup Iteration   2: 29.085 ns/op
Iteration   1: 26.461 ns/op
Iteration   2: 26.551 ns/op
Iteration   3: 47.827 ns/op


Result "com.komanov.str.jmh.RegionMatchesBenchmarks.begin_regionMatches":
  33.613 ±(99.9%) 224.578 ns/op [Average]
  (min, avg, max) = (26.461, 33.613, 47.827), stdev = 12.310
  CI (99.9%): [≈ 0, 258.191] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.2, VM 17.0.2+8-Ubuntu-122.10
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.str.jmh.RegionMatchesBenchmarks.begin_startsWith

# Run progress: 10.00% complete, ETA 00:03:11
# Fork: 1 of 1
# Warmup Iteration   1: 15.371 ns/op
# Warmup Iteration   2: 12.555 ns/op
Iteration   1: 12.083 ns/op
Iteration   2: 13.249 ns/op
Iteration   3: 13.171 ns/op


Result "com.komanov.str.jmh.RegionMatchesBenchmarks.begin_startsWith":
  12.834 ±(99.9%) 11.896 ns/op [Average]
  (min, avg, max) = (12.083, 12.834, 13.249), stdev = 0.652
  CI (99.9%): [0.938, 24.731] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.2, VM 17.0.2+8-Ubuntu-122.10
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.str.jmh.RegionMatchesBenchmarks.begin_substringEquals

# Run progress: 20.00% complete, ETA 00:02:50
# Fork: 1 of 1
# Warmup Iteration   1: 22.424 ns/op
# Warmup Iteration   2: 20.829 ns/op
Iteration   1: 16.770 ns/op
Iteration   2: 19.980 ns/op
Iteration   3: 17.724 ns/op


Result "com.komanov.str.jmh.RegionMatchesBenchmarks.begin_substringEquals":
  18.158 ±(99.9%) 30.074 ns/op [Average]
  (min, avg, max) = (16.770, 18.158, 19.980), stdev = 1.648
  CI (99.9%): [≈ 0, 48.232] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.2, VM 17.0.2+8-Ubuntu-122.10
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.str.jmh.RegionMatchesBenchmarks.end_endsWith

# Run progress: 30.00% complete, ETA 00:02:28
# Fork: 1 of 1
# Warmup Iteration   1: 14.421 ns/op
# Warmup Iteration   2: 15.753 ns/op
Iteration   1: 14.927 ns/op
Iteration   2: 14.776 ns/op
Iteration   3: 14.694 ns/op


Result "com.komanov.str.jmh.RegionMatchesBenchmarks.end_endsWith":
  14.799 ±(99.9%) 2.148 ns/op [Average]
  (min, avg, max) = (14.694, 14.799, 14.927), stdev = 0.118
  CI (99.9%): [12.651, 16.947] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.2, VM 17.0.2+8-Ubuntu-122.10
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.str.jmh.RegionMatchesBenchmarks.end_regionMatches

# Run progress: 40.00% complete, ETA 00:02:07
# Fork: 1 of 1
# Warmup Iteration   1: 26.078 ns/op
# Warmup Iteration   2: 25.864 ns/op
Iteration   1: 26.565 ns/op
Iteration   2: 26.494 ns/op
Iteration   3: 26.637 ns/op


Result "com.komanov.str.jmh.RegionMatchesBenchmarks.end_regionMatches":
  26.565 ±(99.9%) 1.306 ns/op [Average]
  (min, avg, max) = (26.494, 26.565, 26.637), stdev = 0.072
  CI (99.9%): [25.259, 27.871] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.2, VM 17.0.2+8-Ubuntu-122.10
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.str.jmh.RegionMatchesBenchmarks.end_substringEquals

# Run progress: 50.00% complete, ETA 00:01:46
# Fork: 1 of 1
# Warmup Iteration   1: 16.909 ns/op
# Warmup Iteration   2: 17.549 ns/op
Iteration   1: 15.409 ns/op
Iteration   2: 15.193 ns/op
Iteration   3: 16.388 ns/op


Result "com.komanov.str.jmh.RegionMatchesBenchmarks.end_substringEquals":
  15.663 ±(99.9%) 11.616 ns/op [Average]
  (min, avg, max) = (15.193, 15.663, 16.388), stdev = 0.637
  CI (99.9%): [4.047, 27.279] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.2, VM 17.0.2+8-Ubuntu-122.10
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.str.jmh.RegionMatchesBenchmarks.middle2Sides_regionMatches

# Run progress: 60.00% complete, ETA 00:01:25
# Fork: 1 of 1
# Warmup Iteration   1: 29.868 ns/op
# Warmup Iteration   2: 45.641 ns/op
Iteration   1: 47.178 ns/op
Iteration   2: 46.848 ns/op
Iteration   3: 46.387 ns/op


Result "com.komanov.str.jmh.RegionMatchesBenchmarks.middle2Sides_regionMatches":
  46.804 ±(99.9%) 7.244 ns/op [Average]
  (min, avg, max) = (46.387, 46.804, 47.178), stdev = 0.397
  CI (99.9%): [39.560, 54.049] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.2, VM 17.0.2+8-Ubuntu-122.10
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.str.jmh.RegionMatchesBenchmarks.middle2Sides_substringEquals

# Run progress: 70.00% complete, ETA 00:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 25.096 ns/op
# Warmup Iteration   2: 29.785 ns/op
Iteration   1: 26.684 ns/op
Iteration   2: 31.267 ns/op
Iteration   3: 30.898 ns/op


Result "com.komanov.str.jmh.RegionMatchesBenchmarks.middle2Sides_substringEquals":
  29.616 ±(99.9%) 46.455 ns/op [Average]
  (min, avg, max) = (26.684, 29.616, 31.267), stdev = 2.546
  CI (99.9%): [≈ 0, 76.071] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.2, VM 17.0.2+8-Ubuntu-122.10
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.str.jmh.RegionMatchesBenchmarks.middle_regionMatches

# Run progress: 80.00% complete, ETA 00:00:42
# Fork: 1 of 1
# Warmup Iteration   1: 30.058 ns/op
# Warmup Iteration   2: 29.032 ns/op
Iteration   1: 28.084 ns/op
Iteration   2: 27.871 ns/op
Iteration   3: 25.031 ns/op


Result "com.komanov.str.jmh.RegionMatchesBenchmarks.middle_regionMatches":
  26.995 ±(99.9%) 31.092 ns/op [Average]
  (min, avg, max) = (25.031, 26.995, 28.084), stdev = 1.704
  CI (99.9%): [≈ 0, 58.087] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.2, VM 17.0.2+8-Ubuntu-122.10
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.str.jmh.RegionMatchesBenchmarks.middle_substringEquals

# Run progress: 90.00% complete, ETA 00:00:21
# Fork: 1 of 1
# Warmup Iteration   1: 22.092 ns/op
# Warmup Iteration   2: 19.055 ns/op
Iteration   1: 19.761 ns/op
Iteration   2: 16.857 ns/op
Iteration   3: 16.940 ns/op


Result "com.komanov.str.jmh.RegionMatchesBenchmarks.middle_substringEquals":
  17.853 ±(99.9%) 30.165 ns/op [Average]
  (min, avg, max) = (16.857, 17.853, 19.761), stdev = 1.653
  CI (99.9%): [≈ 0, 48.018] (assumes normal distribution)


# Run complete. Total time: 00:03:32

Benchmark                                             Mode  Cnt   Score     Error  Units
RegionMatchesBenchmarks.begin_regionMatches           avgt    3  33.613 ± 224.578  ns/op
RegionMatchesBenchmarks.begin_startsWith              avgt    3  12.834 ±  11.896  ns/op
RegionMatchesBenchmarks.begin_substringEquals         avgt    3  18.158 ±  30.074  ns/op
RegionMatchesBenchmarks.end_endsWith                  avgt    3  14.799 ±   2.148  ns/op
RegionMatchesBenchmarks.end_regionMatches             avgt    3  26.565 ±   1.306  ns/op
RegionMatchesBenchmarks.end_substringEquals           avgt    3  15.663 ±  11.616  ns/op
RegionMatchesBenchmarks.middle2Sides_regionMatches    avgt    3  46.804 ±   7.244  ns/op
RegionMatchesBenchmarks.middle2Sides_substringEquals  avgt    3  29.616 ±  46.455  ns/op
RegionMatchesBenchmarks.middle_regionMatches          avgt    3  26.995 ±  31.092  ns/op
RegionMatchesBenchmarks.middle_substringEquals        avgt    3  17.853 ±  30.165  ns/op

Benchmark result is saved to jdk17.json
