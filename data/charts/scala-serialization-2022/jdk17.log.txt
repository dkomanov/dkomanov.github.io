# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 0.00% complete, ETA 02:10:00
# Fork: 1 of 1
# Warmup Iteration   1: 130462.912 ns/op
# Warmup Iteration   2: 30795.725 ns/op
# Warmup Iteration   3: 28458.468 ns/op
# Warmup Iteration   4: 28111.097 ns/op
# Warmup Iteration   5: 28144.183 ns/op
Iteration   1: 28213.673 ns/op
Iteration   2: 28467.343 ns/op
Iteration   3: 28103.360 ns/op
Iteration   4: 28203.700 ns/op
Iteration   5: 28037.694 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  28205.154 ±(99.9%) 630.444 ns/op [Average]
  (min, avg, max) = (28037.694, 28205.154, 28467.343), stdev = 163.724
  CI (99.9%): [27574.710, 28835.598] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 0.26% complete, ETA 02:26:46
# Fork: 1 of 1
# Warmup Iteration   1: 311865.289 ns/op
# Warmup Iteration   2: 61525.501 ns/op
# Warmup Iteration   3: 57120.778 ns/op
# Warmup Iteration   4: 54550.605 ns/op
# Warmup Iteration   5: 54663.019 ns/op
Iteration   1: 54178.426 ns/op
Iteration   2: 53822.692 ns/op
Iteration   3: 53936.986 ns/op
Iteration   4: 53968.268 ns/op
Iteration   5: 53931.978 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  53967.670 ±(99.9%) 500.777 ns/op [Average]
  (min, avg, max) = (53822.692, 53967.670, 54178.426), stdev = 130.050
  CI (99.9%): [53466.892, 54468.447] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 0.51% complete, ETA 02:26:23
# Fork: 1 of 1
# Warmup Iteration   1: 624018.927 ns/op
# Warmup Iteration   2: 137574.701 ns/op
# Warmup Iteration   3: 112947.639 ns/op
# Warmup Iteration   4: 111581.104 ns/op
# Warmup Iteration   5: 114134.973 ns/op
Iteration   1: 112323.112 ns/op
Iteration   2: 112962.638 ns/op
Iteration   3: 111410.422 ns/op
Iteration   4: 111387.794 ns/op
Iteration   5: 111463.752 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  111909.544 ±(99.9%) 2722.899 ns/op [Average]
  (min, avg, max) = (111387.794, 111909.544, 112962.638), stdev = 707.128
  CI (99.9%): [109186.645, 114632.443] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 0.77% complete, ETA 02:26:25
# Fork: 1 of 1
# Warmup Iteration   1: 2566212.161 ns/op
# Warmup Iteration   2: 333359.091 ns/op
# Warmup Iteration   3: 247968.154 ns/op
# Warmup Iteration   4: 239596.617 ns/op
# Warmup Iteration   5: 247955.835 ns/op
Iteration   1: 241737.892 ns/op
Iteration   2: 244928.681 ns/op
Iteration   3: 241932.489 ns/op
Iteration   4: 239654.563 ns/op
Iteration   5: 239036.967 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  241458.118 ±(99.9%) 8919.643 ns/op [Average]
  (min, avg, max) = (239036.967, 241458.118, 244928.681), stdev = 2316.403
  CI (99.9%): [232538.475, 250377.762] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 1.03% complete, ETA 02:25:55
# Fork: 1 of 1
# Warmup Iteration   1: 5764368.604 ns/op
# Warmup Iteration   2: 2254145.698 ns/op
# Warmup Iteration   3: 2164779.860 ns/op
# Warmup Iteration   4: 2146829.892 ns/op
# Warmup Iteration   5: 2170758.712 ns/op
Iteration   1: 2179537.662 ns/op
Iteration   2: 2153220.036 ns/op
Iteration   3: 2142649.959 ns/op
Iteration   4: 2143913.304 ns/op
Iteration   5: 2157112.545 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2155286.701 ±(99.9%) 57268.388 ns/op [Average]
  (min, avg, max) = (2142649.959, 2155286.701, 2179537.662), stdev = 14872.418
  CI (99.9%): [2098018.314, 2212555.089] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 1.28% complete, ETA 02:25:35
# Fork: 1 of 1
# Warmup Iteration   1: 88699.553 ns/op
# Warmup Iteration   2: 25305.983 ns/op
# Warmup Iteration   3: 23362.191 ns/op
# Warmup Iteration   4: 22891.698 ns/op
# Warmup Iteration   5: 23597.811 ns/op
Iteration   1: 23299.859 ns/op
Iteration   2: 22870.151 ns/op
Iteration   3: 22890.415 ns/op
Iteration   4: 22948.101 ns/op
Iteration   5: 23194.381 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  23040.581 ±(99.9%) 748.225 ns/op [Average]
  (min, avg, max) = (22870.151, 23040.581, 23299.859), stdev = 194.312
  CI (99.9%): [22292.356, 23788.807] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 1.54% complete, ETA 02:25:01
# Fork: 1 of 1
# Warmup Iteration   1: 207838.801 ns/op
# Warmup Iteration   2: 45041.973 ns/op
# Warmup Iteration   3: 42201.824 ns/op
# Warmup Iteration   4: 41545.273 ns/op
# Warmup Iteration   5: 41348.450 ns/op
Iteration   1: 41774.632 ns/op
Iteration   2: 41656.168 ns/op
Iteration   3: 41991.139 ns/op
Iteration   4: 42601.043 ns/op
Iteration   5: 41222.041 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  41849.005 ±(99.9%) 1945.971 ns/op [Average]
  (min, avg, max) = (41222.041, 41849.005, 42601.043), stdev = 505.363
  CI (99.9%): [39903.034, 43794.976] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 1.79% complete, ETA 02:24:35
# Fork: 1 of 1
# Warmup Iteration   1: 351871.427 ns/op
# Warmup Iteration   2: 96982.095 ns/op
# Warmup Iteration   3: 87382.921 ns/op
# Warmup Iteration   4: 87799.250 ns/op
# Warmup Iteration   5: 87509.445 ns/op
Iteration   1: 87337.033 ns/op
Iteration   2: 86966.657 ns/op
Iteration   3: 87135.917 ns/op
Iteration   4: 87484.702 ns/op
Iteration   5: 87115.809 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  87208.024 ±(99.9%) 782.437 ns/op [Average]
  (min, avg, max) = (86966.657, 87208.024, 87484.702), stdev = 203.196
  CI (99.9%): [86425.587, 87990.461] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 2.05% complete, ETA 02:24:08
# Fork: 1 of 1
# Warmup Iteration   1: 508425.342 ns/op
# Warmup Iteration   2: 194365.703 ns/op
# Warmup Iteration   3: 188080.178 ns/op
# Warmup Iteration   4: 183950.592 ns/op
# Warmup Iteration   5: 191249.401 ns/op
Iteration   1: 188765.726 ns/op
Iteration   2: 184029.173 ns/op
Iteration   3: 185526.428 ns/op
Iteration   4: 183076.418 ns/op
Iteration   5: 182641.981 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  184807.945 ±(99.9%) 9525.251 ns/op [Average]
  (min, avg, max) = (182641.981, 184807.945, 188765.726), stdev = 2473.677
  CI (99.9%): [175282.695, 194333.196] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 2.31% complete, ETA 02:23:49
# Fork: 1 of 1
# Warmup Iteration   1: 8078824.661 ns/op
# Warmup Iteration   2: 2018144.994 ns/op
# Warmup Iteration   3: 1807555.062 ns/op
# Warmup Iteration   4: 1803995.933 ns/op
# Warmup Iteration   5: 1807775.709 ns/op
Iteration   1: 1844724.221 ns/op
Iteration   2: 1793333.082 ns/op
Iteration   3: 1797985.220 ns/op
Iteration   4: 1819869.784 ns/op
Iteration   5: 1846047.256 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1820391.913 ±(99.9%) 95972.437 ns/op [Average]
  (min, avg, max) = (1793333.082, 1820391.913, 1846047.256), stdev = 24923.737
  CI (99.9%): [1724419.476, 1916364.350] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 2.56% complete, ETA 02:23:29
# Fork: 1 of 1
# Warmup Iteration   1: 65829.337 ns/op
# Warmup Iteration   2: 26558.819 ns/op
# Warmup Iteration   3: 25011.644 ns/op
# Warmup Iteration   4: 24269.611 ns/op
# Warmup Iteration   5: 25216.397 ns/op
Iteration   1: 24749.664 ns/op
Iteration   2: 24571.792 ns/op
Iteration   3: 24260.168 ns/op
Iteration   4: 24276.435 ns/op
Iteration   5: 24327.511 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  24437.114 ±(99.9%) 828.037 ns/op [Average]
  (min, avg, max) = (24260.168, 24437.114, 24749.664), stdev = 215.039
  CI (99.9%): [23609.077, 25265.151] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 2.82% complete, ETA 02:23:04
# Fork: 1 of 1
# Warmup Iteration   1: 314857.223 ns/op
# Warmup Iteration   2: 52452.440 ns/op
# Warmup Iteration   3: 47945.913 ns/op
# Warmup Iteration   4: 47684.008 ns/op
# Warmup Iteration   5: 47024.571 ns/op
Iteration   1: 47523.542 ns/op
Iteration   2: 47430.029 ns/op
Iteration   3: 47167.855 ns/op
Iteration   4: 47118.548 ns/op
Iteration   5: 47051.698 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  47258.335 ±(99.9%) 794.390 ns/op [Average]
  (min, avg, max) = (47051.698, 47258.335, 47523.542), stdev = 206.301
  CI (99.9%): [46463.945, 48052.724] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 3.08% complete, ETA 02:22:37
# Fork: 1 of 1
# Warmup Iteration   1: 522669.246 ns/op
# Warmup Iteration   2: 103896.532 ns/op
# Warmup Iteration   3: 100578.469 ns/op
# Warmup Iteration   4: 94754.936 ns/op
# Warmup Iteration   5: 94863.454 ns/op
Iteration   1: 97666.356 ns/op
Iteration   2: 94430.446 ns/op
Iteration   3: 94159.949 ns/op
Iteration   4: 94544.172 ns/op
Iteration   5: 94270.953 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  95014.375 ±(99.9%) 5736.616 ns/op [Average]
  (min, avg, max) = (94159.949, 95014.375, 97666.356), stdev = 1489.781
  CI (99.9%): [89277.760, 100750.991] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 3.33% complete, ETA 02:22:13
# Fork: 1 of 1
# Warmup Iteration   1: 855148.232 ns/op
# Warmup Iteration   2: 231807.722 ns/op
# Warmup Iteration   3: 211614.569 ns/op
# Warmup Iteration   4: 211350.130 ns/op
# Warmup Iteration   5: 211094.905 ns/op
Iteration   1: 210270.873 ns/op
Iteration   2: 215356.580 ns/op
Iteration   3: 211641.577 ns/op
Iteration   4: 213864.484 ns/op
Iteration   5: 210624.118 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  212351.527 ±(99.9%) 8422.370 ns/op [Average]
  (min, avg, max) = (210270.873, 212351.527, 215356.580), stdev = 2187.263
  CI (99.9%): [203929.157, 220773.896] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 3.59% complete, ETA 02:21:55
# Fork: 1 of 1
# Warmup Iteration   1: 6153679.442 ns/op
# Warmup Iteration   2: 2309930.265 ns/op
# Warmup Iteration   3: 2128104.915 ns/op
# Warmup Iteration   4: 2125524.062 ns/op
# Warmup Iteration   5: 2134005.254 ns/op
Iteration   1: 2133798.188 ns/op
Iteration   2: 2108885.824 ns/op
Iteration   3: 2122265.701 ns/op
Iteration   4: 2105862.610 ns/op
Iteration   5: 2108815.870 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2115925.639 ±(99.9%) 45601.963 ns/op [Average]
  (min, avg, max) = (2105862.610, 2115925.639, 2133798.188), stdev = 11842.685
  CI (99.9%): [2070323.675, 2161527.602] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 3.85% complete, ETA 02:21:39
# Fork: 1 of 1
# Warmup Iteration   1: 18422.183 ns/op
# Warmup Iteration   2: 11329.811 ns/op
# Warmup Iteration   3: 10792.379 ns/op
# Warmup Iteration   4: 10748.286 ns/op
# Warmup Iteration   5: 10790.060 ns/op
Iteration   1: 10789.853 ns/op
Iteration   2: 10828.309 ns/op
Iteration   3: 10858.761 ns/op
Iteration   4: 10935.337 ns/op
Iteration   5: 10798.851 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  10842.222 ±(99.9%) 225.855 ns/op [Average]
  (min, avg, max) = (10789.853, 10842.222, 10935.337), stdev = 58.654
  CI (99.9%): [10616.367, 11068.077] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 4.10% complete, ETA 02:21:13
# Fork: 1 of 1
# Warmup Iteration   1: 43656.190 ns/op
# Warmup Iteration   2: 22616.078 ns/op
# Warmup Iteration   3: 22311.339 ns/op
# Warmup Iteration   4: 21815.116 ns/op
# Warmup Iteration   5: 21828.103 ns/op
Iteration   1: 21768.853 ns/op
Iteration   2: 21830.434 ns/op
Iteration   3: 21959.398 ns/op
Iteration   4: 22093.053 ns/op
Iteration   5: 21932.522 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  21916.852 ±(99.9%) 481.231 ns/op [Average]
  (min, avg, max) = (21768.853, 21916.852, 22093.053), stdev = 124.974
  CI (99.9%): [21435.621, 22398.083] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 4.36% complete, ETA 02:20:49
# Fork: 1 of 1
# Warmup Iteration   1: 83541.660 ns/op
# Warmup Iteration   2: 37291.188 ns/op
# Warmup Iteration   3: 36377.595 ns/op
# Warmup Iteration   4: 35219.303 ns/op
# Warmup Iteration   5: 36275.103 ns/op
Iteration   1: 35312.038 ns/op
Iteration   2: 35223.569 ns/op
Iteration   3: 35899.235 ns/op
Iteration   4: 35229.257 ns/op
Iteration   5: 35865.478 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  35505.915 ±(99.9%) 1330.889 ns/op [Average]
  (min, avg, max) = (35223.569, 35505.915, 35899.235), stdev = 345.628
  CI (99.9%): [34175.027, 36836.804] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 4.62% complete, ETA 02:20:23
# Fork: 1 of 1
# Warmup Iteration   1: 194140.827 ns/op
# Warmup Iteration   2: 74759.825 ns/op
# Warmup Iteration   3: 68002.582 ns/op
# Warmup Iteration   4: 67991.072 ns/op
# Warmup Iteration   5: 67742.465 ns/op
Iteration   1: 68055.942 ns/op
Iteration   2: 68390.300 ns/op
Iteration   3: 66993.390 ns/op
Iteration   4: 67215.133 ns/op
Iteration   5: 67829.487 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  67696.850 ±(99.9%) 2240.599 ns/op [Average]
  (min, avg, max) = (66993.390, 67696.850, 68390.300), stdev = 581.876
  CI (99.9%): [65456.252, 69937.449] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 4.87% complete, ETA 02:19:57
# Fork: 1 of 1
# Warmup Iteration   1: 1168402.178 ns/op
# Warmup Iteration   2: 657696.263 ns/op
# Warmup Iteration   3: 636387.776 ns/op
# Warmup Iteration   4: 630162.462 ns/op
# Warmup Iteration   5: 620011.868 ns/op
Iteration   1: 617804.038 ns/op
Iteration   2: 623363.473 ns/op
Iteration   3: 623441.002 ns/op
Iteration   4: 618358.399 ns/op
Iteration   5: 619208.349 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  620435.052 ±(99.9%) 10606.918 ns/op [Average]
  (min, avg, max) = (617804.038, 620435.052, 623441.002), stdev = 2754.583
  CI (99.9%): [609828.134, 631041.970] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 5.13% complete, ETA 02:19:32
# Fork: 1 of 1
# Warmup Iteration   1: 18744.540 ns/op
# Warmup Iteration   2: 6382.081 ns/op
# Warmup Iteration   3: 6246.782 ns/op
# Warmup Iteration   4: 6221.991 ns/op
# Warmup Iteration   5: 6206.137 ns/op
Iteration   1: 6205.470 ns/op
Iteration   2: 6196.856 ns/op
Iteration   3: 6252.416 ns/op
Iteration   4: 6229.598 ns/op
Iteration   5: 6226.638 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  6222.196 ±(99.9%) 84.136 ns/op [Average]
  (min, avg, max) = (6196.856, 6222.196, 6252.416), stdev = 21.850
  CI (99.9%): [6138.059, 6306.332] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 5.38% complete, ETA 02:19:09
# Fork: 1 of 1
# Warmup Iteration   1: 72260.215 ns/op
# Warmup Iteration   2: 14125.631 ns/op
# Warmup Iteration   3: 13279.149 ns/op
# Warmup Iteration   4: 12419.163 ns/op
# Warmup Iteration   5: 12318.957 ns/op
Iteration   1: 12290.560 ns/op
Iteration   2: 12392.674 ns/op
Iteration   3: 12439.163 ns/op
Iteration   4: 12278.560 ns/op
Iteration   5: 12283.084 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12336.808 ±(99.9%) 285.672 ns/op [Average]
  (min, avg, max) = (12278.560, 12336.808, 12439.163), stdev = 74.188
  CI (99.9%): [12051.136, 12622.480] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 5.64% complete, ETA 02:18:45
# Fork: 1 of 1
# Warmup Iteration   1: 122457.482 ns/op
# Warmup Iteration   2: 25663.284 ns/op
# Warmup Iteration   3: 23764.854 ns/op
# Warmup Iteration   4: 23213.569 ns/op
# Warmup Iteration   5: 23197.184 ns/op
Iteration   1: 23163.514 ns/op
Iteration   2: 23485.660 ns/op
Iteration   3: 23297.246 ns/op
Iteration   4: 23098.796 ns/op
Iteration   5: 23254.476 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  23259.938 ±(99.9%) 569.962 ns/op [Average]
  (min, avg, max) = (23098.796, 23259.938, 23485.660), stdev = 148.017
  CI (99.9%): [22689.976, 23829.900] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 5.90% complete, ETA 02:18:22
# Fork: 1 of 1
# Warmup Iteration   1: 169039.003 ns/op
# Warmup Iteration   2: 53745.420 ns/op
# Warmup Iteration   3: 49868.366 ns/op
# Warmup Iteration   4: 49894.800 ns/op
# Warmup Iteration   5: 49506.380 ns/op
Iteration   1: 49409.769 ns/op
Iteration   2: 49321.779 ns/op
Iteration   3: 49771.161 ns/op
Iteration   4: 49561.605 ns/op
Iteration   5: 49347.634 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  49482.390 ±(99.9%) 717.536 ns/op [Average]
  (min, avg, max) = (49321.779, 49482.390, 49771.161), stdev = 186.342
  CI (99.9%): [48764.854, 50199.925] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 6.15% complete, ETA 02:17:58
# Fork: 1 of 1
# Warmup Iteration   1: 1507453.343 ns/op
# Warmup Iteration   2: 529453.088 ns/op
# Warmup Iteration   3: 534907.596 ns/op
# Warmup Iteration   4: 504170.738 ns/op
# Warmup Iteration   5: 504017.854 ns/op
Iteration   1: 494256.225 ns/op
Iteration   2: 488730.702 ns/op
Iteration   3: 486390.416 ns/op
Iteration   4: 489355.188 ns/op
Iteration   5: 493845.555 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  490515.617 ±(99.9%) 13147.346 ns/op [Average]
  (min, avg, max) = (486390.416, 490515.617, 494256.225), stdev = 3414.324
  CI (99.9%): [477368.271, 503662.963] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 6.41% complete, ETA 02:17:35
# Fork: 1 of 1
# Warmup Iteration   1: 29541.828 ns/op
# Warmup Iteration   2: 11196.686 ns/op
# Warmup Iteration   3: 10929.067 ns/op
# Warmup Iteration   4: 11214.170 ns/op
# Warmup Iteration   5: 10988.150 ns/op
Iteration   1: 10992.964 ns/op
Iteration   2: 11197.604 ns/op
Iteration   3: 11263.554 ns/op
Iteration   4: 10964.863 ns/op
Iteration   5: 10986.465 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  11081.090 ±(99.9%) 534.592 ns/op [Average]
  (min, avg, max) = (10964.863, 11081.090, 11263.554), stdev = 138.832
  CI (99.9%): [10546.498, 11615.682] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 6.67% complete, ETA 02:17:12
# Fork: 1 of 1
# Warmup Iteration   1: 67093.047 ns/op
# Warmup Iteration   2: 22173.835 ns/op
# Warmup Iteration   3: 21741.358 ns/op
# Warmup Iteration   4: 20880.736 ns/op
# Warmup Iteration   5: 20950.691 ns/op
Iteration   1: 21426.880 ns/op
Iteration   2: 21335.017 ns/op
Iteration   3: 21137.640 ns/op
Iteration   4: 21248.371 ns/op
Iteration   5: 20940.882 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  21217.758 ±(99.9%) 724.234 ns/op [Average]
  (min, avg, max) = (20940.882, 21217.758, 21426.880), stdev = 188.081
  CI (99.9%): [20493.524, 21941.992] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 6.92% complete, ETA 02:16:48
# Fork: 1 of 1
# Warmup Iteration   1: 111091.567 ns/op
# Warmup Iteration   2: 43844.665 ns/op
# Warmup Iteration   3: 43868.121 ns/op
# Warmup Iteration   4: 42262.518 ns/op
# Warmup Iteration   5: 42576.598 ns/op
Iteration   1: 43204.840 ns/op
Iteration   2: 42812.883 ns/op
Iteration   3: 42507.132 ns/op
Iteration   4: 42459.295 ns/op
Iteration   5: 43875.206 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  42971.871 ±(99.9%) 2257.051 ns/op [Average]
  (min, avg, max) = (42459.295, 42971.871, 43875.206), stdev = 586.149
  CI (99.9%): [40714.820, 45228.922] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 7.18% complete, ETA 02:16:27
# Fork: 1 of 1
# Warmup Iteration   1: 209924.744 ns/op
# Warmup Iteration   2: 94387.244 ns/op
# Warmup Iteration   3: 93191.050 ns/op
# Warmup Iteration   4: 93632.067 ns/op
# Warmup Iteration   5: 93880.213 ns/op
Iteration   1: 93245.246 ns/op
Iteration   2: 94046.638 ns/op
Iteration   3: 93460.030 ns/op
Iteration   4: 95795.553 ns/op
Iteration   5: 93000.378 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  93909.569 ±(99.9%) 4324.806 ns/op [Average]
  (min, avg, max) = (93000.378, 93909.569, 95795.553), stdev = 1123.138
  CI (99.9%): [89584.763, 98234.375] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 7.44% complete, ETA 02:16:04
# Fork: 1 of 1
# Warmup Iteration   1: 1898587.819 ns/op
# Warmup Iteration   2: 1084862.350 ns/op
# Warmup Iteration   3: 1007101.164 ns/op
# Warmup Iteration   4: 1008259.341 ns/op
# Warmup Iteration   5: 974283.241 ns/op
Iteration   1: 962660.772 ns/op
Iteration   2: 964524.478 ns/op
Iteration   3: 969945.859 ns/op
Iteration   4: 962883.974 ns/op
Iteration   5: 970508.146 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  966104.646 ±(99.9%) 14773.087 ns/op [Average]
  (min, avg, max) = (962660.772, 966104.646, 970508.146), stdev = 3836.524
  CI (99.9%): [951331.559, 980877.733] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 7.69% complete, ETA 02:15:41
# Fork: 1 of 1
# Warmup Iteration   1: 580019.831 ns/op
# Warmup Iteration   2: 236325.714 ns/op
# Warmup Iteration   3: 135015.892 ns/op
# Warmup Iteration   4: 134092.952 ns/op
# Warmup Iteration   5: 134448.299 ns/op
Iteration   1: 134538.635 ns/op
Iteration   2: 134660.393 ns/op
Iteration   3: 133935.612 ns/op
Iteration   4: 133370.894 ns/op
Iteration   5: 133490.140 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  133999.135 ±(99.9%) 2266.751 ns/op [Average]
  (min, avg, max) = (133370.894, 133999.135, 134660.393), stdev = 588.668
  CI (99.9%): [131732.384, 136265.886] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 7.95% complete, ETA 02:15:18
# Fork: 1 of 1
# Warmup Iteration   1: 1191485.290 ns/op
# Warmup Iteration   2: 441398.579 ns/op
# Warmup Iteration   3: 241707.868 ns/op
# Warmup Iteration   4: 247039.438 ns/op
# Warmup Iteration   5: 239574.892 ns/op
Iteration   1: 239377.709 ns/op
Iteration   2: 238488.383 ns/op
Iteration   3: 240078.622 ns/op
Iteration   4: 241650.196 ns/op
Iteration   5: 238276.829 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  239574.348 ±(99.9%) 5260.387 ns/op [Average]
  (min, avg, max) = (238276.829, 239574.348, 241650.196), stdev = 1366.106
  CI (99.9%): [234313.961, 244834.735] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 8.21% complete, ETA 02:14:55
# Fork: 1 of 1
# Warmup Iteration   1: 2020270.936 ns/op
# Warmup Iteration   2: 894247.956 ns/op
# Warmup Iteration   3: 570280.003 ns/op
# Warmup Iteration   4: 560949.334 ns/op
# Warmup Iteration   5: 564842.603 ns/op
Iteration   1: 562040.928 ns/op
Iteration   2: 561375.181 ns/op
Iteration   3: 561891.587 ns/op
Iteration   4: 560227.498 ns/op
Iteration   5: 561579.841 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  561423.007 ±(99.9%) 2761.693 ns/op [Average]
  (min, avg, max) = (560227.498, 561423.007, 562040.928), stdev = 717.203
  CI (99.9%): [558661.314, 564184.700] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 8.46% complete, ETA 02:14:32
# Fork: 1 of 1
# Warmup Iteration   1: 5240194.817 ns/op
# Warmup Iteration   2: 2367604.184 ns/op
# Warmup Iteration   3: 1391940.682 ns/op
# Warmup Iteration   4: 1392924.156 ns/op
# Warmup Iteration   5: 1359038.489 ns/op
Iteration   1: 1358543.815 ns/op
Iteration   2: 1353769.080 ns/op
Iteration   3: 1387824.474 ns/op
Iteration   4: 1356319.797 ns/op
Iteration   5: 1356541.985 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1362599.830 ±(99.9%) 54689.053 ns/op [Average]
  (min, avg, max) = (1353769.080, 1362599.830, 1387824.474), stdev = 14202.573
  CI (99.9%): [1307910.778, 1417288.883] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 8.72% complete, ETA 02:14:09
# Fork: 1 of 1
# Warmup Iteration   1: 34702840.851 ns/op
# Warmup Iteration   2: 16117385.686 ns/op
# Warmup Iteration   3: 12318379.829 ns/op
# Warmup Iteration   4: 12247582.810 ns/op
# Warmup Iteration   5: 12327469.179 ns/op
Iteration   1: 12345782.354 ns/op
Iteration   2: 12221690.263 ns/op
Iteration   3: 12249343.196 ns/op
Iteration   4: 12227446.081 ns/op
Iteration   5: 12294872.895 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12267826.958 ±(99.9%) 201096.039 ns/op [Average]
  (min, avg, max) = (12221690.263, 12267826.958, 12345782.354), stdev = 52224.003
  CI (99.9%): [12066730.919, 12468922.997] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 8.97% complete, ETA 02:13:48
# Fork: 1 of 1
# Warmup Iteration   1: 12184.523 ns/op
# Warmup Iteration   2: 6180.997 ns/op
# Warmup Iteration   3: 5921.571 ns/op
# Warmup Iteration   4: 6010.402 ns/op
# Warmup Iteration   5: 6299.486 ns/op
Iteration   1: 5925.992 ns/op
Iteration   2: 6071.195 ns/op
Iteration   3: 5924.526 ns/op
Iteration   4: 5945.882 ns/op
Iteration   5: 5963.345 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  5966.188 ±(99.9%) 234.212 ns/op [Average]
  (min, avg, max) = (5924.526, 5966.188, 6071.195), stdev = 60.824
  CI (99.9%): [5731.976, 6200.399] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 9.23% complete, ETA 02:13:26
# Fork: 1 of 1
# Warmup Iteration   1: 21851.241 ns/op
# Warmup Iteration   2: 11645.028 ns/op
# Warmup Iteration   3: 11932.180 ns/op
# Warmup Iteration   4: 11286.941 ns/op
# Warmup Iteration   5: 11585.064 ns/op
Iteration   1: 11498.720 ns/op
Iteration   2: 11375.845 ns/op
Iteration   3: 11537.744 ns/op
Iteration   4: 11298.599 ns/op
Iteration   5: 11330.312 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  11408.244 ±(99.9%) 404.324 ns/op [Average]
  (min, avg, max) = (11298.599, 11408.244, 11537.744), stdev = 105.002
  CI (99.9%): [11003.920, 11812.568] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 9.49% complete, ETA 02:13:03
# Fork: 1 of 1
# Warmup Iteration   1: 47076.050 ns/op
# Warmup Iteration   2: 21796.904 ns/op
# Warmup Iteration   3: 21593.436 ns/op
# Warmup Iteration   4: 21039.654 ns/op
# Warmup Iteration   5: 21162.997 ns/op
Iteration   1: 20957.478 ns/op
Iteration   2: 21184.405 ns/op
Iteration   3: 20977.935 ns/op
Iteration   4: 21242.832 ns/op
Iteration   5: 21349.880 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  21142.506 ±(99.9%) 656.147 ns/op [Average]
  (min, avg, max) = (20957.478, 21142.506, 21349.880), stdev = 170.399
  CI (99.9%): [20486.359, 21798.654] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 9.74% complete, ETA 02:12:39
# Fork: 1 of 1
# Warmup Iteration   1: 135352.242 ns/op
# Warmup Iteration   2: 43604.717 ns/op
# Warmup Iteration   3: 42491.596 ns/op
# Warmup Iteration   4: 42280.332 ns/op
# Warmup Iteration   5: 43702.492 ns/op
Iteration   1: 42332.408 ns/op
Iteration   2: 41531.224 ns/op
Iteration   3: 41312.710 ns/op
Iteration   4: 41225.602 ns/op
Iteration   5: 42148.377 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  41710.064 ±(99.9%) 1929.177 ns/op [Average]
  (min, avg, max) = (41225.602, 41710.064, 42332.408), stdev = 501.001
  CI (99.9%): [39780.888, 43639.241] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 10.00% complete, ETA 02:12:16
# Fork: 1 of 1
# Warmup Iteration   1: 712392.958 ns/op
# Warmup Iteration   2: 417392.911 ns/op
# Warmup Iteration   3: 429709.966 ns/op
# Warmup Iteration   4: 418918.449 ns/op
# Warmup Iteration   5: 410687.069 ns/op
Iteration   1: 404097.559 ns/op
Iteration   2: 404322.187 ns/op
Iteration   3: 409834.301 ns/op
Iteration   4: 405711.583 ns/op
Iteration   5: 404753.575 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  405743.841 ±(99.9%) 9121.410 ns/op [Average]
  (min, avg, max) = (404097.559, 405743.841, 409834.301), stdev = 2368.801
  CI (99.9%): [396622.431, 414865.251] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 10.26% complete, ETA 02:11:52
# Fork: 1 of 1
# Warmup Iteration   1: 77824.790 ns/op
# Warmup Iteration   2: 58308.422 ns/op
# Warmup Iteration   3: 65224.458 ns/op
# Warmup Iteration   4: 64034.420 ns/op
# Warmup Iteration   5: 63612.741 ns/op
Iteration   1: 64708.730 ns/op
Iteration   2: 64850.526 ns/op
Iteration   3: 67779.003 ns/op
Iteration   4: 71662.851 ns/op
Iteration   5: 70501.550 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  67900.532 ±(99.9%) 12241.361 ns/op [Average]
  (min, avg, max) = (64708.730, 67900.532, 71662.851), stdev = 3179.043
  CI (99.9%): [55659.171, 80141.893] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 10.51% complete, ETA 02:11:30
# Fork: 1 of 1
# Warmup Iteration   1: 110513.859 ns/op
# Warmup Iteration   2: 127184.022 ns/op
# Warmup Iteration   3: 124589.604 ns/op
# Warmup Iteration   4: 122905.080 ns/op
# Warmup Iteration   5: 126076.972 ns/op
Iteration   1: 127753.246 ns/op
Iteration   2: 131974.381 ns/op
Iteration   3: 136179.503 ns/op
Iteration   4: 137104.495 ns/op
Iteration   5: 135785.896 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  133759.504 ±(99.9%) 14964.772 ns/op [Average]
  (min, avg, max) = (127753.246, 133759.504, 137104.495), stdev = 3886.304
  CI (99.9%): [118794.733, 148724.276] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 10.77% complete, ETA 02:11:07
# Fork: 1 of 1
# Warmup Iteration   1: 306028.387 ns/op
# Warmup Iteration   2: 280610.034 ns/op
# Warmup Iteration   3: 284283.722 ns/op
# Warmup Iteration   4: 286689.010 ns/op
# Warmup Iteration   5: 274697.224 ns/op
Iteration   1: 282250.266 ns/op
Iteration   2: 280136.500 ns/op
Iteration   3: 285973.807 ns/op
Iteration   4: 282283.824 ns/op
Iteration   5: 282184.471 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  282565.774 ±(99.9%) 8132.176 ns/op [Average]
  (min, avg, max) = (280136.500, 282565.774, 285973.807), stdev = 2111.900
  CI (99.9%): [274433.597, 290697.950] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 11.03% complete, ETA 02:10:44
# Fork: 1 of 1
# Warmup Iteration   1: 543436.077 ns/op
# Warmup Iteration   2: 540906.581 ns/op
# Warmup Iteration   3: 586008.286 ns/op
# Warmup Iteration   4: 591297.427 ns/op
# Warmup Iteration   5: 567395.384 ns/op
Iteration   1: 574208.381 ns/op
Iteration   2: 578153.603 ns/op
Iteration   3: 602063.782 ns/op
Iteration   4: 656807.038 ns/op
Iteration   5: 717402.417 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  625727.044 ±(99.9%) 234602.634 ns/op [Average]
  (min, avg, max) = (574208.381, 625727.044, 717402.417), stdev = 60925.559
  CI (99.9%): [391124.410, 860329.679] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 11.28% complete, ETA 02:10:21
# Fork: 1 of 1
# Warmup Iteration   1: 6212540.222 ns/op
# Warmup Iteration   2: 6214982.204 ns/op
# Warmup Iteration   3: 5975657.849 ns/op
# Warmup Iteration   4: 5981017.150 ns/op
# Warmup Iteration   5: 5973221.582 ns/op
Iteration   1: 6070817.290 ns/op
Iteration   2: 6541182.357 ns/op
Iteration   3: 6610245.100 ns/op
Iteration   4: 6240085.619 ns/op
Iteration   5: 6111090.777 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  6314684.229 ±(99.9%) 953265.695 ns/op [Average]
  (min, avg, max) = (6070817.290, 6314684.229, 6610245.100), stdev = 247560.074
  CI (99.9%): [5361418.534, 7267949.924] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 11.54% complete, ETA 02:09:59
# Fork: 1 of 1
# Warmup Iteration   1: 20110.299 ns/op
# Warmup Iteration   2: 10181.669 ns/op
# Warmup Iteration   3: 10283.869 ns/op
# Warmup Iteration   4: 10272.901 ns/op
# Warmup Iteration   5: 11022.281 ns/op
Iteration   1: 10216.168 ns/op
Iteration   2: 10279.158 ns/op
Iteration   3: 10276.968 ns/op
Iteration   4: 10254.599 ns/op
Iteration   5: 10180.231 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  10241.425 ±(99.9%) 163.858 ns/op [Average]
  (min, avg, max) = (10180.231, 10241.425, 10279.158), stdev = 42.553
  CI (99.9%): [10077.567, 10405.283] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 11.79% complete, ETA 02:09:36
# Fork: 1 of 1
# Warmup Iteration   1: 44147.408 ns/op
# Warmup Iteration   2: 19232.276 ns/op
# Warmup Iteration   3: 19222.807 ns/op
# Warmup Iteration   4: 18403.238 ns/op
# Warmup Iteration   5: 18390.579 ns/op
Iteration   1: 18466.356 ns/op
Iteration   2: 18482.690 ns/op
Iteration   3: 18469.790 ns/op
Iteration   4: 18359.519 ns/op
Iteration   5: 18361.605 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  18427.992 ±(99.9%) 238.199 ns/op [Average]
  (min, avg, max) = (18359.519, 18427.992, 18482.690), stdev = 61.860
  CI (99.9%): [18189.793, 18666.191] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 12.05% complete, ETA 02:09:13
# Fork: 1 of 1
# Warmup Iteration   1: 137905.118 ns/op
# Warmup Iteration   2: 37689.206 ns/op
# Warmup Iteration   3: 39168.664 ns/op
# Warmup Iteration   4: 39937.459 ns/op
# Warmup Iteration   5: 39559.553 ns/op
Iteration   1: 39422.627 ns/op
Iteration   2: 39644.456 ns/op
Iteration   3: 40505.367 ns/op
Iteration   4: 39965.802 ns/op
Iteration   5: 40081.646 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  39923.980 ±(99.9%) 1604.044 ns/op [Average]
  (min, avg, max) = (39422.627, 39923.980, 40505.367), stdev = 416.565
  CI (99.9%): [38319.936, 41528.024] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 12.31% complete, ETA 02:08:50
# Fork: 1 of 1
# Warmup Iteration   1: 178420.097 ns/op
# Warmup Iteration   2: 78402.199 ns/op
# Warmup Iteration   3: 78643.690 ns/op
# Warmup Iteration   4: 79529.776 ns/op
# Warmup Iteration   5: 80535.511 ns/op
Iteration   1: 80998.787 ns/op
Iteration   2: 79945.539 ns/op
Iteration   3: 79352.477 ns/op
Iteration   4: 79280.847 ns/op
Iteration   5: 79238.938 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  79763.318 ±(99.9%) 2879.069 ns/op [Average]
  (min, avg, max) = (79238.938, 79763.318, 80998.787), stdev = 747.685
  CI (99.9%): [76884.249, 82642.387] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 12.56% complete, ETA 02:08:26
# Fork: 1 of 1
# Warmup Iteration   1: 1252156.682 ns/op
# Warmup Iteration   2: 755330.862 ns/op
# Warmup Iteration   3: 818788.018 ns/op
# Warmup Iteration   4: 767486.928 ns/op
# Warmup Iteration   5: 750744.631 ns/op
Iteration   1: 747055.736 ns/op
Iteration   2: 745012.827 ns/op
Iteration   3: 744276.660 ns/op
Iteration   4: 747097.296 ns/op
Iteration   5: 749968.405 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  746682.185 ±(99.9%) 8542.097 ns/op [Average]
  (min, avg, max) = (744276.660, 746682.185, 749968.405), stdev = 2218.355
  CI (99.9%): [738140.088, 755224.281] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 12.82% complete, ETA 02:08:03
# Fork: 1 of 1
# Warmup Iteration   1: 392765.505 ns/op
# Warmup Iteration   2: 230083.123 ns/op
# Warmup Iteration   3: 181002.324 ns/op
# Warmup Iteration   4: 182557.683 ns/op
# Warmup Iteration   5: 197894.388 ns/op
Iteration   1: 179860.382 ns/op
Iteration   2: 182542.403 ns/op
Iteration   3: 179401.472 ns/op
Iteration   4: 179632.310 ns/op
Iteration   5: 179846.430 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  180256.600 ±(99.9%) 4972.815 ns/op [Average]
  (min, avg, max) = (179401.472, 180256.600, 182542.403), stdev = 1291.424
  CI (99.9%): [175283.784, 185229.415] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 13.08% complete, ETA 02:07:42
# Fork: 1 of 1
# Warmup Iteration   1: 664992.557 ns/op
# Warmup Iteration   2: 327365.082 ns/op
# Warmup Iteration   3: 277031.616 ns/op
# Warmup Iteration   4: 268646.053 ns/op
# Warmup Iteration   5: 264963.595 ns/op
Iteration   1: 263206.994 ns/op
Iteration   2: 269897.996 ns/op
Iteration   3: 267971.571 ns/op
Iteration   4: 269491.540 ns/op
Iteration   5: 267661.937 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  267646.008 ±(99.9%) 10240.203 ns/op [Average]
  (min, avg, max) = (263206.994, 267646.008, 269897.996), stdev = 2659.348
  CI (99.9%): [257405.805, 277886.210] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 13.33% complete, ETA 02:07:22
# Fork: 1 of 1
# Warmup Iteration   1: 1204579.349 ns/op
# Warmup Iteration   2: 623108.752 ns/op
# Warmup Iteration   3: 594693.847 ns/op
# Warmup Iteration   4: 566655.072 ns/op
# Warmup Iteration   5: 532042.436 ns/op
Iteration   1: 538400.312 ns/op
Iteration   2: 535624.298 ns/op
Iteration   3: 553215.781 ns/op
Iteration   4: 530048.170 ns/op
Iteration   5: 547523.248 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  540962.362 ±(99.9%) 35883.897 ns/op [Average]
  (min, avg, max) = (530048.170, 540962.362, 553215.781), stdev = 9318.934
  CI (99.9%): [505078.465, 576846.259] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 13.59% complete, ETA 02:07:01
# Fork: 1 of 1
# Warmup Iteration   1: 2927033.044 ns/op
# Warmup Iteration   2: 1463736.455 ns/op
# Warmup Iteration   3: 1239550.659 ns/op
# Warmup Iteration   4: 1228902.796 ns/op
# Warmup Iteration   5: 1258224.617 ns/op
Iteration   1: 1230839.680 ns/op
Iteration   2: 1241197.330 ns/op
Iteration   3: 1217549.545 ns/op
Iteration   4: 1205932.236 ns/op
Iteration   5: 1215298.381 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1222163.434 ±(99.9%) 53405.918 ns/op [Average]
  (min, avg, max) = (1205932.236, 1222163.434, 1241197.330), stdev = 13869.347
  CI (99.9%): [1168757.516, 1275569.352] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 13.85% complete, ETA 02:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 24998698.595 ns/op
# Warmup Iteration   2: 12617412.818 ns/op
# Warmup Iteration   3: 12059654.178 ns/op
# Warmup Iteration   4: 11838548.393 ns/op
# Warmup Iteration   5: 11711000.114 ns/op
Iteration   1: 11874410.197 ns/op
Iteration   2: 11746987.089 ns/op
Iteration   3: 11773931.449 ns/op
Iteration   4: 11678971.391 ns/op
Iteration   5: 11808633.570 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  11776586.739 ±(99.9%) 279061.284 ns/op [Average]
  (min, avg, max) = (11678971.391, 11776586.739, 11874410.197), stdev = 72471.329
  CI (99.9%): [11497525.455, 12055648.024] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 14.10% complete, ETA 02:06:20
# Fork: 1 of 1
# Warmup Iteration   1: 93840.751 ns/op
# Warmup Iteration   2: 38408.719 ns/op
# Warmup Iteration   3: 37826.357 ns/op
# Warmup Iteration   4: 37319.035 ns/op
# Warmup Iteration   5: 37346.869 ns/op
Iteration   1: 37408.087 ns/op
Iteration   2: 37637.841 ns/op
Iteration   3: 38725.659 ns/op
Iteration   4: 37351.867 ns/op
Iteration   5: 37748.751 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  37774.441 ±(99.9%) 2141.284 ns/op [Average]
  (min, avg, max) = (37351.867, 37774.441, 38725.659), stdev = 556.085
  CI (99.9%): [35633.158, 39915.725] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 14.36% complete, ETA 02:05:57
# Fork: 1 of 1
# Warmup Iteration   1: 258983.576 ns/op
# Warmup Iteration   2: 83725.392 ns/op
# Warmup Iteration   3: 77801.446 ns/op
# Warmup Iteration   4: 78554.368 ns/op
# Warmup Iteration   5: 78418.449 ns/op
Iteration   1: 78141.873 ns/op
Iteration   2: 78787.658 ns/op
Iteration   3: 77711.653 ns/op
Iteration   4: 77538.485 ns/op
Iteration   5: 77419.362 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  77919.806 ±(99.9%) 2145.381 ns/op [Average]
  (min, avg, max) = (77419.362, 77919.806, 78787.658), stdev = 557.149
  CI (99.9%): [75774.425, 80065.187] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 14.62% complete, ETA 02:05:34
# Fork: 1 of 1
# Warmup Iteration   1: 471707.119 ns/op
# Warmup Iteration   2: 164290.165 ns/op
# Warmup Iteration   3: 158021.578 ns/op
# Warmup Iteration   4: 149708.938 ns/op
# Warmup Iteration   5: 146311.459 ns/op
Iteration   1: 145559.877 ns/op
Iteration   2: 145550.281 ns/op
Iteration   3: 148044.881 ns/op
Iteration   4: 148625.115 ns/op
Iteration   5: 147488.077 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  147053.646 ±(99.9%) 5490.457 ns/op [Average]
  (min, avg, max) = (145550.281, 147053.646, 148625.115), stdev = 1425.854
  CI (99.9%): [141563.189, 152544.103] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 14.87% complete, ETA 02:05:11
# Fork: 1 of 1
# Warmup Iteration   1: 839662.396 ns/op
# Warmup Iteration   2: 388940.117 ns/op
# Warmup Iteration   3: 353478.608 ns/op
# Warmup Iteration   4: 358861.808 ns/op
# Warmup Iteration   5: 351414.633 ns/op
Iteration   1: 353886.544 ns/op
Iteration   2: 355347.564 ns/op
Iteration   3: 351436.917 ns/op
Iteration   4: 353611.709 ns/op
Iteration   5: 353116.796 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  353479.906 ±(99.9%) 5437.638 ns/op [Average]
  (min, avg, max) = (351436.917, 353479.906, 355347.564), stdev = 1412.137
  CI (99.9%): [348042.268, 358917.544] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 15.13% complete, ETA 02:04:47
# Fork: 1 of 1
# Warmup Iteration   1: 8227351.472 ns/op
# Warmup Iteration   2: 4011512.398 ns/op
# Warmup Iteration   3: 3846837.103 ns/op
# Warmup Iteration   4: 3830384.912 ns/op
# Warmup Iteration   5: 3802389.846 ns/op
Iteration   1: 3840797.081 ns/op
Iteration   2: 3845516.583 ns/op
Iteration   3: 3824289.227 ns/op
Iteration   4: 3813330.962 ns/op
Iteration   5: 3820630.698 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  3828912.910 ±(99.9%) 52716.076 ns/op [Average]
  (min, avg, max) = (3813330.962, 3828912.910, 3845516.583), stdev = 13690.198
  CI (99.9%): [3776196.834, 3881628.986] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 15.38% complete, ETA 02:04:25
# Fork: 1 of 1
# Warmup Iteration   1: 50694.761 ns/op
# Warmup Iteration   2: 17721.108 ns/op
# Warmup Iteration   3: 17416.120 ns/op
# Warmup Iteration   4: 17419.395 ns/op
# Warmup Iteration   5: 17420.254 ns/op
Iteration   1: 17399.547 ns/op
Iteration   2: 17318.507 ns/op
Iteration   3: 17441.258 ns/op
Iteration   4: 17709.009 ns/op
Iteration   5: 17498.296 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  17473.323 ±(99.9%) 566.615 ns/op [Average]
  (min, avg, max) = (17318.507, 17473.323, 17709.009), stdev = 147.148
  CI (99.9%): [16906.708, 18039.939] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 15.64% complete, ETA 02:04:02
# Fork: 1 of 1
# Warmup Iteration   1: 66150.868 ns/op
# Warmup Iteration   2: 35545.149 ns/op
# Warmup Iteration   3: 34982.430 ns/op
# Warmup Iteration   4: 36136.860 ns/op
# Warmup Iteration   5: 35201.822 ns/op
Iteration   1: 34295.339 ns/op
Iteration   2: 34269.514 ns/op
Iteration   3: 34454.181 ns/op
Iteration   4: 34761.687 ns/op
Iteration   5: 34523.094 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  34460.763 ±(99.9%) 766.329 ns/op [Average]
  (min, avg, max) = (34269.514, 34460.763, 34761.687), stdev = 199.013
  CI (99.9%): [33694.434, 35227.092] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 15.90% complete, ETA 02:03:40
# Fork: 1 of 1
# Warmup Iteration   1: 140479.814 ns/op
# Warmup Iteration   2: 81164.808 ns/op
# Warmup Iteration   3: 76255.467 ns/op
# Warmup Iteration   4: 75618.070 ns/op
# Warmup Iteration   5: 75544.236 ns/op
Iteration   1: 75233.235 ns/op
Iteration   2: 74859.318 ns/op
Iteration   3: 75391.633 ns/op
Iteration   4: 77242.336 ns/op
Iteration   5: 74847.310 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  75514.766 ±(99.9%) 3828.453 ns/op [Average]
  (min, avg, max) = (74847.310, 75514.766, 77242.336), stdev = 994.237
  CI (99.9%): [71686.314, 79343.219] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 16.15% complete, ETA 02:03:17
# Fork: 1 of 1
# Warmup Iteration   1: 318854.842 ns/op
# Warmup Iteration   2: 181848.833 ns/op
# Warmup Iteration   3: 168279.781 ns/op
# Warmup Iteration   4: 168149.604 ns/op
# Warmup Iteration   5: 168604.136 ns/op
Iteration   1: 169468.916 ns/op
Iteration   2: 169409.806 ns/op
Iteration   3: 169205.209 ns/op
Iteration   4: 171871.322 ns/op
Iteration   5: 167825.012 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  169556.053 ±(99.9%) 5616.215 ns/op [Average]
  (min, avg, max) = (167825.012, 169556.053, 171871.322), stdev = 1458.513
  CI (99.9%): [163939.838, 175172.268] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 16.41% complete, ETA 02:02:54
# Fork: 1 of 1
# Warmup Iteration   1: 2672252.325 ns/op
# Warmup Iteration   2: 1571338.862 ns/op
# Warmup Iteration   3: 1553942.051 ns/op
# Warmup Iteration   4: 1564374.389 ns/op
# Warmup Iteration   5: 1546933.281 ns/op
Iteration   1: 1537637.427 ns/op
Iteration   2: 1566613.812 ns/op
Iteration   3: 1536611.960 ns/op
Iteration   4: 1541803.040 ns/op
Iteration   5: 1546202.811 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1545773.810 ±(99.9%) 47176.162 ns/op [Average]
  (min, avg, max) = (1536611.960, 1545773.810, 1566613.812), stdev = 12251.499
  CI (99.9%): [1498597.649, 1592949.972] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 16.67% complete, ETA 02:02:32
# Fork: 1 of 1
# Warmup Iteration   1: 29815.644 ns/op
# Warmup Iteration   2: 15662.234 ns/op
# Warmup Iteration   3: 16306.896 ns/op
# Warmup Iteration   4: 14875.035 ns/op
# Warmup Iteration   5: 15116.461 ns/op
Iteration   1: 14842.660 ns/op
Iteration   2: 14910.264 ns/op
Iteration   3: 14896.111 ns/op
Iteration   4: 15194.437 ns/op
Iteration   5: 14880.011 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14944.697 ±(99.9%) 546.303 ns/op [Average]
  (min, avg, max) = (14842.660, 14944.697, 15194.437), stdev = 141.873
  CI (99.9%): [14398.393, 15491.000] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 16.92% complete, ETA 02:02:10
# Fork: 1 of 1
# Warmup Iteration   1: 91014.790 ns/op
# Warmup Iteration   2: 29646.029 ns/op
# Warmup Iteration   3: 28142.634 ns/op
# Warmup Iteration   4: 27288.575 ns/op
# Warmup Iteration   5: 27251.511 ns/op
Iteration   1: 27236.642 ns/op
Iteration   2: 27229.808 ns/op
Iteration   3: 27266.983 ns/op
Iteration   4: 27396.341 ns/op
Iteration   5: 27352.535 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  27296.462 ±(99.9%) 285.639 ns/op [Average]
  (min, avg, max) = (27229.808, 27296.462, 27396.341), stdev = 74.179
  CI (99.9%): [27010.823, 27582.100] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 17.18% complete, ETA 02:01:47
# Fork: 1 of 1
# Warmup Iteration   1: 110167.484 ns/op
# Warmup Iteration   2: 59753.813 ns/op
# Warmup Iteration   3: 58068.346 ns/op
# Warmup Iteration   4: 58237.287 ns/op
# Warmup Iteration   5: 56563.439 ns/op
Iteration   1: 56569.821 ns/op
Iteration   2: 56513.924 ns/op
Iteration   3: 56858.451 ns/op
Iteration   4: 56699.785 ns/op
Iteration   5: 56813.712 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  56691.139 ±(99.9%) 575.074 ns/op [Average]
  (min, avg, max) = (56513.924, 56691.139, 56858.451), stdev = 149.345
  CI (99.9%): [56116.065, 57266.212] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 17.44% complete, ETA 02:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 273658.414 ns/op
# Warmup Iteration   2: 132544.951 ns/op
# Warmup Iteration   3: 125844.625 ns/op
# Warmup Iteration   4: 125293.917 ns/op
# Warmup Iteration   5: 125133.321 ns/op
Iteration   1: 125106.028 ns/op
Iteration   2: 125039.767 ns/op
Iteration   3: 124878.977 ns/op
Iteration   4: 125483.121 ns/op
Iteration   5: 126261.989 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  125353.976 ±(99.9%) 2132.675 ns/op [Average]
  (min, avg, max) = (124878.977, 125353.976, 126261.989), stdev = 553.849
  CI (99.9%): [123221.301, 127486.651] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 17.69% complete, ETA 02:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 2308325.882 ns/op
# Warmup Iteration   2: 1214388.591 ns/op
# Warmup Iteration   3: 1173026.196 ns/op
# Warmup Iteration   4: 1170386.670 ns/op
# Warmup Iteration   5: 1166936.680 ns/op
Iteration   1: 1164204.782 ns/op
Iteration   2: 1163587.222 ns/op
Iteration   3: 1165407.976 ns/op
Iteration   4: 1165677.982 ns/op
Iteration   5: 1168763.879 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1165528.368 ±(99.9%) 7707.384 ns/op [Average]
  (min, avg, max) = (1163587.222, 1165528.368, 1168763.879), stdev = 2001.583
  CI (99.9%): [1157820.984, 1173235.752] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 17.95% complete, ETA 02:00:39
# Fork: 1 of 1
# Warmup Iteration   1: 23205.761 ns/op
# Warmup Iteration   2: 13918.172 ns/op
# Warmup Iteration   3: 13349.127 ns/op
# Warmup Iteration   4: 13359.852 ns/op
# Warmup Iteration   5: 13721.479 ns/op
Iteration   1: 13377.976 ns/op
Iteration   2: 13304.875 ns/op
Iteration   3: 13297.571 ns/op
Iteration   4: 13310.648 ns/op
Iteration   5: 13286.937 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  13315.601 ±(99.9%) 138.528 ns/op [Average]
  (min, avg, max) = (13286.937, 13315.601, 13377.976), stdev = 35.975
  CI (99.9%): [13177.073, 13454.130] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 18.21% complete, ETA 02:00:16
# Fork: 1 of 1
# Warmup Iteration   1: 57786.411 ns/op
# Warmup Iteration   2: 27866.274 ns/op
# Warmup Iteration   3: 26507.329 ns/op
# Warmup Iteration   4: 26177.489 ns/op
# Warmup Iteration   5: 26245.614 ns/op
Iteration   1: 26139.359 ns/op
Iteration   2: 26325.571 ns/op
Iteration   3: 26146.194 ns/op
Iteration   4: 26318.451 ns/op
Iteration   5: 26246.708 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  26235.257 ±(99.9%) 346.224 ns/op [Average]
  (min, avg, max) = (26139.359, 26235.257, 26325.571), stdev = 89.913
  CI (99.9%): [25889.033, 26581.481] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 18.46% complete, ETA 01:59:53
# Fork: 1 of 1
# Warmup Iteration   1: 118592.995 ns/op
# Warmup Iteration   2: 54013.632 ns/op
# Warmup Iteration   3: 50660.894 ns/op
# Warmup Iteration   4: 50614.500 ns/op
# Warmup Iteration   5: 49513.697 ns/op
Iteration   1: 50093.356 ns/op
Iteration   2: 49961.264 ns/op
Iteration   3: 50343.591 ns/op
Iteration   4: 49557.589 ns/op
Iteration   5: 49666.309 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  49924.422 ±(99.9%) 1227.969 ns/op [Average]
  (min, avg, max) = (49557.589, 49924.422, 50343.591), stdev = 318.900
  CI (99.9%): [48696.453, 51152.390] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 18.72% complete, ETA 01:59:30
# Fork: 1 of 1
# Warmup Iteration   1: 242695.548 ns/op
# Warmup Iteration   2: 120948.676 ns/op
# Warmup Iteration   3: 108514.314 ns/op
# Warmup Iteration   4: 108175.606 ns/op
# Warmup Iteration   5: 108604.359 ns/op
Iteration   1: 108429.564 ns/op
Iteration   2: 110058.867 ns/op
Iteration   3: 107700.171 ns/op
Iteration   4: 109039.358 ns/op
Iteration   5: 109196.363 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  108884.865 ±(99.9%) 3395.330 ns/op [Average]
  (min, avg, max) = (107700.171, 108884.865, 110058.867), stdev = 881.756
  CI (99.9%): [105489.535, 112280.195] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 18.97% complete, ETA 01:59:08
# Fork: 1 of 1
# Warmup Iteration   1: 2299099.977 ns/op
# Warmup Iteration   2: 1198835.424 ns/op
# Warmup Iteration   3: 1103073.546 ns/op
# Warmup Iteration   4: 1157409.057 ns/op
# Warmup Iteration   5: 1105274.656 ns/op
Iteration   1: 1120022.432 ns/op
Iteration   2: 1099000.734 ns/op
Iteration   3: 1092110.363 ns/op
Iteration   4: 1091571.348 ns/op
Iteration   5: 1108672.515 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1102275.478 ±(99.9%) 46547.755 ns/op [Average]
  (min, avg, max) = (1091571.348, 1102275.478, 1120022.432), stdev = 12088.304
  CI (99.9%): [1055727.723, 1148823.234] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 19.23% complete, ETA 01:58:45
# Fork: 1 of 1
# Warmup Iteration   1: 24954.992 ns/op
# Warmup Iteration   2: 14208.307 ns/op
# Warmup Iteration   3: 13825.537 ns/op
# Warmup Iteration   4: 13841.671 ns/op
# Warmup Iteration   5: 13799.403 ns/op
Iteration   1: 13824.601 ns/op
Iteration   2: 13841.314 ns/op
Iteration   3: 13895.312 ns/op
Iteration   4: 14059.431 ns/op
Iteration   5: 14010.133 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  13926.158 ±(99.9%) 400.528 ns/op [Average]
  (min, avg, max) = (13824.601, 13926.158, 14059.431), stdev = 104.016
  CI (99.9%): [13525.630, 14326.687] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 19.49% complete, ETA 01:58:23
# Fork: 1 of 1
# Warmup Iteration   1: 57063.687 ns/op
# Warmup Iteration   2: 27325.633 ns/op
# Warmup Iteration   3: 25991.695 ns/op
# Warmup Iteration   4: 26054.021 ns/op
# Warmup Iteration   5: 25969.193 ns/op
Iteration   1: 25965.952 ns/op
Iteration   2: 26029.214 ns/op
Iteration   3: 25968.976 ns/op
Iteration   4: 26118.720 ns/op
Iteration   5: 25941.489 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  26004.870 ±(99.9%) 274.819 ns/op [Average]
  (min, avg, max) = (25941.489, 26004.870, 26118.720), stdev = 71.370
  CI (99.9%): [25730.051, 26279.689] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 19.74% complete, ETA 01:58:01
# Fork: 1 of 1
# Warmup Iteration   1: 260519.004 ns/op
# Warmup Iteration   2: 60479.152 ns/op
# Warmup Iteration   3: 53907.846 ns/op
# Warmup Iteration   4: 56149.496 ns/op
# Warmup Iteration   5: 53032.579 ns/op
Iteration   1: 52830.335 ns/op
Iteration   2: 52912.865 ns/op
Iteration   3: 52917.976 ns/op
Iteration   4: 53483.464 ns/op
Iteration   5: 52858.830 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  53000.694 ±(99.9%) 1048.851 ns/op [Average]
  (min, avg, max) = (52830.335, 53000.694, 53483.464), stdev = 272.383
  CI (99.9%): [51951.843, 54049.545] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 20.00% complete, ETA 01:57:38
# Fork: 1 of 1
# Warmup Iteration   1: 286473.524 ns/op
# Warmup Iteration   2: 124906.444 ns/op
# Warmup Iteration   3: 118169.355 ns/op
# Warmup Iteration   4: 119798.436 ns/op
# Warmup Iteration   5: 119706.694 ns/op
Iteration   1: 117637.898 ns/op
Iteration   2: 116959.197 ns/op
Iteration   3: 116909.465 ns/op
Iteration   4: 116897.353 ns/op
Iteration   5: 117394.538 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  117159.690 ±(99.9%) 1299.368 ns/op [Average]
  (min, avg, max) = (116897.353, 117159.690, 117637.898), stdev = 337.442
  CI (99.9%): [115860.322, 118459.058] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 20.26% complete, ETA 01:57:16
# Fork: 1 of 1
# Warmup Iteration   1: 2088517.009 ns/op
# Warmup Iteration   2: 1117339.297 ns/op
# Warmup Iteration   3: 1089873.563 ns/op
# Warmup Iteration   4: 1083927.920 ns/op
# Warmup Iteration   5: 1081117.409 ns/op
Iteration   1: 1114478.295 ns/op
Iteration   2: 1111825.728 ns/op
Iteration   3: 1132723.362 ns/op
Iteration   4: 1084912.793 ns/op
Iteration   5: 1135103.806 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1115808.797 ±(99.9%) 77745.778 ns/op [Average]
  (min, avg, max) = (1084912.793, 1115808.797, 1135103.806), stdev = 20190.332
  CI (99.9%): [1038063.018, 1193554.575] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 20.51% complete, ETA 01:56:53
# Fork: 1 of 1
# Warmup Iteration   1: 7284.642 ns/op
# Warmup Iteration   2: 5511.677 ns/op
# Warmup Iteration   3: 5374.333 ns/op
# Warmup Iteration   4: 5294.853 ns/op
# Warmup Iteration   5: 5281.407 ns/op
Iteration   1: 5303.892 ns/op
Iteration   2: 5301.345 ns/op
Iteration   3: 5300.539 ns/op
Iteration   4: 5282.367 ns/op
Iteration   5: 5269.736 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  5291.576 ±(99.9%) 57.414 ns/op [Average]
  (min, avg, max) = (5269.736, 5291.576, 5303.892), stdev = 14.910
  CI (99.9%): [5234.162, 5348.990] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 20.77% complete, ETA 01:56:30
# Fork: 1 of 1
# Warmup Iteration   1: 14424.210 ns/op
# Warmup Iteration   2: 9804.778 ns/op
# Warmup Iteration   3: 9614.526 ns/op
# Warmup Iteration   4: 9396.573 ns/op
# Warmup Iteration   5: 9415.996 ns/op
Iteration   1: 9525.674 ns/op
Iteration   2: 9518.202 ns/op
Iteration   3: 9531.013 ns/op
Iteration   4: 9661.213 ns/op
Iteration   5: 9423.007 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9531.822 ±(99.9%) 326.776 ns/op [Average]
  (min, avg, max) = (9423.007, 9531.822, 9661.213), stdev = 84.863
  CI (99.9%): [9205.046, 9858.598] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 21.03% complete, ETA 01:56:07
# Fork: 1 of 1
# Warmup Iteration   1: 25775.214 ns/op
# Warmup Iteration   2: 18097.845 ns/op
# Warmup Iteration   3: 17396.165 ns/op
# Warmup Iteration   4: 17429.153 ns/op
# Warmup Iteration   5: 17539.891 ns/op
Iteration   1: 17214.478 ns/op
Iteration   2: 17164.288 ns/op
Iteration   3: 17463.287 ns/op
Iteration   4: 17328.270 ns/op
Iteration   5: 17360.048 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  17306.074 ±(99.9%) 458.108 ns/op [Average]
  (min, avg, max) = (17164.288, 17306.074, 17463.287), stdev = 118.969
  CI (99.9%): [16847.966, 17764.182] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 21.28% complete, ETA 01:55:44
# Fork: 1 of 1
# Warmup Iteration   1: 60442.105 ns/op
# Warmup Iteration   2: 43130.810 ns/op
# Warmup Iteration   3: 43346.889 ns/op
# Warmup Iteration   4: 40640.322 ns/op
# Warmup Iteration   5: 40376.397 ns/op
Iteration   1: 40848.552 ns/op
Iteration   2: 40497.397 ns/op
Iteration   3: 40779.171 ns/op
Iteration   4: 40779.995 ns/op
Iteration   5: 41425.324 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  40866.088 ±(99.9%) 1311.415 ns/op [Average]
  (min, avg, max) = (40497.397, 40866.088, 41425.324), stdev = 340.570
  CI (99.9%): [39554.673, 42177.503] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 21.54% complete, ETA 01:55:21
# Fork: 1 of 1
# Warmup Iteration   1: 528111.266 ns/op
# Warmup Iteration   2: 407539.077 ns/op
# Warmup Iteration   3: 387744.528 ns/op
# Warmup Iteration   4: 389496.221 ns/op
# Warmup Iteration   5: 404257.183 ns/op
Iteration   1: 394666.685 ns/op
Iteration   2: 380320.855 ns/op
Iteration   3: 383413.735 ns/op
Iteration   4: 389530.110 ns/op
Iteration   5: 387772.302 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  387140.737 ±(99.9%) 21365.800 ns/op [Average]
  (min, avg, max) = (380320.855, 387140.737, 394666.685), stdev = 5548.631
  CI (99.9%): [365774.937, 408506.538] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 21.79% complete, ETA 01:54:58
# Fork: 1 of 1
# Warmup Iteration   1: 5303.213 ns/op
# Warmup Iteration   2: 3175.488 ns/op
# Warmup Iteration   3: 2951.944 ns/op
# Warmup Iteration   4: 2934.544 ns/op
# Warmup Iteration   5: 2929.497 ns/op
Iteration   1: 2929.604 ns/op
Iteration   2: 2942.953 ns/op
Iteration   3: 2930.146 ns/op
Iteration   4: 2935.104 ns/op
Iteration   5: 2910.708 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2929.703 ±(99.9%) 45.794 ns/op [Average]
  (min, avg, max) = (2910.708, 2929.703, 2942.953), stdev = 11.893
  CI (99.9%): [2883.909, 2975.497] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 22.05% complete, ETA 01:54:36
# Fork: 1 of 1
# Warmup Iteration   1: 13849.723 ns/op
# Warmup Iteration   2: 6591.007 ns/op
# Warmup Iteration   3: 6347.551 ns/op
# Warmup Iteration   4: 6341.109 ns/op
# Warmup Iteration   5: 6300.940 ns/op
Iteration   1: 6352.115 ns/op
Iteration   2: 6311.118 ns/op
Iteration   3: 6395.697 ns/op
Iteration   4: 6327.313 ns/op
Iteration   5: 6477.582 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  6372.765 ±(99.9%) 256.907 ns/op [Average]
  (min, avg, max) = (6311.118, 6372.765, 6477.582), stdev = 66.718
  CI (99.9%): [6115.858, 6629.672] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 22.31% complete, ETA 01:54:13
# Fork: 1 of 1
# Warmup Iteration   1: 27895.986 ns/op
# Warmup Iteration   2: 15444.224 ns/op
# Warmup Iteration   3: 13478.197 ns/op
# Warmup Iteration   4: 13320.717 ns/op
# Warmup Iteration   5: 13310.907 ns/op
Iteration   1: 13290.238 ns/op
Iteration   2: 13430.830 ns/op
Iteration   3: 13293.558 ns/op
Iteration   4: 13267.467 ns/op
Iteration   5: 13403.752 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  13337.169 ±(99.9%) 286.663 ns/op [Average]
  (min, avg, max) = (13267.467, 13337.169, 13430.830), stdev = 74.445
  CI (99.9%): [13050.506, 13623.832] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 22.56% complete, ETA 01:53:49
# Fork: 1 of 1
# Warmup Iteration   1: 52959.549 ns/op
# Warmup Iteration   2: 25838.649 ns/op
# Warmup Iteration   3: 27230.354 ns/op
# Warmup Iteration   4: 25433.182 ns/op
# Warmup Iteration   5: 24693.038 ns/op
Iteration   1: 25118.608 ns/op
Iteration   2: 24799.894 ns/op
Iteration   3: 24628.349 ns/op
Iteration   4: 24781.135 ns/op
Iteration   5: 24642.777 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  24794.153 ±(99.9%) 760.146 ns/op [Average]
  (min, avg, max) = (24628.349, 24794.153, 25118.608), stdev = 197.408
  CI (99.9%): [24034.007, 25554.299] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 22.82% complete, ETA 01:53:27
# Fork: 1 of 1
# Warmup Iteration   1: 501784.800 ns/op
# Warmup Iteration   2: 305229.243 ns/op
# Warmup Iteration   3: 262390.505 ns/op
# Warmup Iteration   4: 262459.968 ns/op
# Warmup Iteration   5: 262221.461 ns/op
Iteration   1: 262709.512 ns/op
Iteration   2: 269896.984 ns/op
Iteration   3: 268095.170 ns/op
Iteration   4: 268268.755 ns/op
Iteration   5: 263619.725 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  266518.029 ±(99.9%) 12157.721 ns/op [Average]
  (min, avg, max) = (262709.512, 266518.029, 269896.984), stdev = 3157.321
  CI (99.9%): [254360.309, 278675.750] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 23.08% complete, ETA 01:53:04
# Fork: 1 of 1
# Warmup Iteration   1: 7624.624 ns/op
# Warmup Iteration   2: 4016.799 ns/op
# Warmup Iteration   3: 3876.442 ns/op
# Warmup Iteration   4: 3892.811 ns/op
# Warmup Iteration   5: 3900.272 ns/op
Iteration   1: 4014.697 ns/op
Iteration   2: 3944.157 ns/op
Iteration   3: 3951.028 ns/op
Iteration   4: 3880.412 ns/op
Iteration   5: 3952.427 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3948.544 ±(99.9%) 183.247 ns/op [Average]
  (min, avg, max) = (3880.412, 3948.544, 4014.697), stdev = 47.589
  CI (99.9%): [3765.297, 4131.791] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 23.33% complete, ETA 01:52:41
# Fork: 1 of 1
# Warmup Iteration   1: 15713.546 ns/op
# Warmup Iteration   2: 9166.765 ns/op
# Warmup Iteration   3: 8841.661 ns/op
# Warmup Iteration   4: 8535.656 ns/op
# Warmup Iteration   5: 8724.768 ns/op
Iteration   1: 8537.218 ns/op
Iteration   2: 8554.636 ns/op
Iteration   3: 8645.891 ns/op
Iteration   4: 8569.001 ns/op
Iteration   5: 8695.428 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8600.435 ±(99.9%) 259.540 ns/op [Average]
  (min, avg, max) = (8537.218, 8600.435, 8695.428), stdev = 67.402
  CI (99.9%): [8340.895, 8859.975] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 23.59% complete, ETA 01:52:18
# Fork: 1 of 1
# Warmup Iteration   1: 28855.174 ns/op
# Warmup Iteration   2: 15055.932 ns/op
# Warmup Iteration   3: 14719.087 ns/op
# Warmup Iteration   4: 14818.753 ns/op
# Warmup Iteration   5: 14763.887 ns/op
Iteration   1: 14740.223 ns/op
Iteration   2: 14742.189 ns/op
Iteration   3: 15690.913 ns/op
Iteration   4: 14999.252 ns/op
Iteration   5: 14841.721 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  15002.860 ±(99.9%) 1535.827 ns/op [Average]
  (min, avg, max) = (14740.223, 15002.860, 15690.913), stdev = 398.849
  CI (99.9%): [13467.032, 16538.687] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 23.85% complete, ETA 01:51:55
# Fork: 1 of 1
# Warmup Iteration   1: 57395.715 ns/op
# Warmup Iteration   2: 30849.017 ns/op
# Warmup Iteration   3: 29795.529 ns/op
# Warmup Iteration   4: 29872.000 ns/op
# Warmup Iteration   5: 30047.077 ns/op
Iteration   1: 29637.633 ns/op
Iteration   2: 29944.263 ns/op
Iteration   3: 29663.028 ns/op
Iteration   4: 30169.770 ns/op
Iteration   5: 30044.029 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  29891.745 ±(99.9%) 903.325 ns/op [Average]
  (min, avg, max) = (29637.633, 29891.745, 30169.770), stdev = 234.591
  CI (99.9%): [28988.419, 30795.070] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 24.10% complete, ETA 01:51:33
# Fork: 1 of 1
# Warmup Iteration   1: 473193.080 ns/op
# Warmup Iteration   2: 281293.771 ns/op
# Warmup Iteration   3: 274265.616 ns/op
# Warmup Iteration   4: 274864.697 ns/op
# Warmup Iteration   5: 275100.539 ns/op
Iteration   1: 285013.680 ns/op
Iteration   2: 274654.987 ns/op
Iteration   3: 280584.677 ns/op
Iteration   4: 277576.675 ns/op
Iteration   5: 273836.041 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  278333.212 ±(99.9%) 17648.386 ns/op [Average]
  (min, avg, max) = (273836.041, 278333.212, 285013.680), stdev = 4583.230
  CI (99.9%): [260684.826, 295981.598] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 24.36% complete, ETA 01:51:10
# Fork: 1 of 1
# Warmup Iteration   1: 237088.254 ns/op
# Warmup Iteration   2: 108330.407 ns/op
# Warmup Iteration   3: 105362.787 ns/op
# Warmup Iteration   4: 104896.510 ns/op
# Warmup Iteration   5: 105821.081 ns/op
Iteration   1: 105855.005 ns/op
Iteration   2: 104436.007 ns/op
Iteration   3: 104994.376 ns/op
Iteration   4: 104194.601 ns/op
Iteration   5: 104340.395 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  104764.077 ±(99.9%) 2621.974 ns/op [Average]
  (min, avg, max) = (104194.601, 104764.077, 105855.005), stdev = 680.918
  CI (99.9%): [102142.102, 107386.051] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 24.62% complete, ETA 01:50:47
# Fork: 1 of 1
# Warmup Iteration   1: 472572.994 ns/op
# Warmup Iteration   2: 196663.917 ns/op
# Warmup Iteration   3: 190103.097 ns/op
# Warmup Iteration   4: 190320.513 ns/op
# Warmup Iteration   5: 189668.949 ns/op
Iteration   1: 190202.183 ns/op
Iteration   2: 190985.660 ns/op
Iteration   3: 189987.314 ns/op
Iteration   4: 190496.983 ns/op
Iteration   5: 190887.908 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  190512.010 ±(99.9%) 1653.052 ns/op [Average]
  (min, avg, max) = (189987.314, 190512.010, 190985.660), stdev = 429.292
  CI (99.9%): [188858.958, 192165.061] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 24.87% complete, ETA 01:50:24
# Fork: 1 of 1
# Warmup Iteration   1: 955104.143 ns/op
# Warmup Iteration   2: 476736.759 ns/op
# Warmup Iteration   3: 453785.324 ns/op
# Warmup Iteration   4: 450817.243 ns/op
# Warmup Iteration   5: 450476.923 ns/op
Iteration   1: 450547.476 ns/op
Iteration   2: 452570.923 ns/op
Iteration   3: 451073.398 ns/op
Iteration   4: 453221.100 ns/op
Iteration   5: 452491.380 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  451980.855 ±(99.9%) 4315.932 ns/op [Average]
  (min, avg, max) = (450547.476, 451980.855, 453221.100), stdev = 1120.834
  CI (99.9%): [447664.923, 456296.787] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 25.13% complete, ETA 01:50:01
# Fork: 1 of 1
# Warmup Iteration   1: 2184040.347 ns/op
# Warmup Iteration   2: 1118976.832 ns/op
# Warmup Iteration   3: 1085821.850 ns/op
# Warmup Iteration   4: 1152624.121 ns/op
# Warmup Iteration   5: 1078179.791 ns/op
Iteration   1: 1090379.689 ns/op
Iteration   2: 1069318.304 ns/op
Iteration   3: 1066441.531 ns/op
Iteration   4: 1072344.544 ns/op
Iteration   5: 1082882.161 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1076273.246 ±(99.9%) 38657.187 ns/op [Average]
  (min, avg, max) = (1066441.531, 1076273.246, 1090379.689), stdev = 10039.149
  CI (99.9%): [1037616.058, 1114930.433] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 25.38% complete, ETA 01:49:39
# Fork: 1 of 1
# Warmup Iteration   1: 18364694.318 ns/op
# Warmup Iteration   2: 9663053.188 ns/op
# Warmup Iteration   3: 9545771.173 ns/op
# Warmup Iteration   4: 9419260.884 ns/op
# Warmup Iteration   5: 9440950.632 ns/op
Iteration   1: 9634525.205 ns/op
Iteration   2: 9417818.406 ns/op
Iteration   3: 9427509.728 ns/op
Iteration   4: 9432101.046 ns/op
Iteration   5: 9720487.993 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9526488.476 ±(99.9%) 543959.546 ns/op [Average]
  (min, avg, max) = (9417818.406, 9526488.476, 9720487.993), stdev = 141264.567
  CI (99.9%): [8982528.930, 10070448.021] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 25.64% complete, ETA 01:49:17
# Fork: 1 of 1
# Warmup Iteration   1: 3601.519 ns/op
# Warmup Iteration   2: 2643.134 ns/op
# Warmup Iteration   3: 2430.627 ns/op
# Warmup Iteration   4: 2426.207 ns/op
# Warmup Iteration   5: 2422.266 ns/op
Iteration   1: 2452.936 ns/op
Iteration   2: 2431.005 ns/op
Iteration   3: 2431.249 ns/op
Iteration   4: 2426.911 ns/op
Iteration   5: 2445.636 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2437.547 ±(99.9%) 42.960 ns/op [Average]
  (min, avg, max) = (2426.911, 2437.547, 2452.936), stdev = 11.157
  CI (99.9%): [2394.588, 2480.507] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 25.90% complete, ETA 01:48:54
# Fork: 1 of 1
# Warmup Iteration   1: 7518.395 ns/op
# Warmup Iteration   2: 5045.855 ns/op
# Warmup Iteration   3: 4710.498 ns/op
# Warmup Iteration   4: 4879.772 ns/op
# Warmup Iteration   5: 4699.041 ns/op
Iteration   1: 4716.679 ns/op
Iteration   2: 4710.194 ns/op
Iteration   3: 4853.855 ns/op
Iteration   4: 4712.877 ns/op
Iteration   5: 4710.832 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4740.887 ±(99.9%) 243.366 ns/op [Average]
  (min, avg, max) = (4710.194, 4740.887, 4853.855), stdev = 63.201
  CI (99.9%): [4497.521, 4984.254] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 26.15% complete, ETA 01:48:31
# Fork: 1 of 1
# Warmup Iteration   1: 13037.880 ns/op
# Warmup Iteration   2: 9100.821 ns/op
# Warmup Iteration   3: 9042.411 ns/op
# Warmup Iteration   4: 9042.212 ns/op
# Warmup Iteration   5: 9065.401 ns/op
Iteration   1: 9047.876 ns/op
Iteration   2: 9201.961 ns/op
Iteration   3: 9036.564 ns/op
Iteration   4: 9175.207 ns/op
Iteration   5: 9047.800 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9101.881 ±(99.9%) 307.452 ns/op [Average]
  (min, avg, max) = (9036.564, 9101.881, 9201.961), stdev = 79.844
  CI (99.9%): [8794.429, 9409.334] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 26.41% complete, ETA 01:48:08
# Fork: 1 of 1
# Warmup Iteration   1: 25376.461 ns/op
# Warmup Iteration   2: 17882.366 ns/op
# Warmup Iteration   3: 17358.278 ns/op
# Warmup Iteration   4: 17284.459 ns/op
# Warmup Iteration   5: 17295.728 ns/op
Iteration   1: 17539.237 ns/op
Iteration   2: 17338.136 ns/op
Iteration   3: 17507.455 ns/op
Iteration   4: 17839.510 ns/op
Iteration   5: 17328.018 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  17510.471 ±(99.9%) 798.699 ns/op [Average]
  (min, avg, max) = (17328.018, 17510.471, 17839.510), stdev = 207.420
  CI (99.9%): [16711.772, 18309.170] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 26.67% complete, ETA 01:47:45
# Fork: 1 of 1
# Warmup Iteration   1: 285744.713 ns/op
# Warmup Iteration   2: 197298.033 ns/op
# Warmup Iteration   3: 196439.844 ns/op
# Warmup Iteration   4: 202146.921 ns/op
# Warmup Iteration   5: 208397.253 ns/op
Iteration   1: 195480.912 ns/op
Iteration   2: 193520.758 ns/op
Iteration   3: 196534.757 ns/op
Iteration   4: 192894.008 ns/op
Iteration   5: 194566.550 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  194599.397 ±(99.9%) 5644.700 ns/op [Average]
  (min, avg, max) = (192894.008, 194599.397, 196534.757), stdev = 1465.911
  CI (99.9%): [188954.697, 200244.097] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 26.92% complete, ETA 01:47:23
# Fork: 1 of 1
# Warmup Iteration   1: 39053.919 ns/op
# Warmup Iteration   2: 37342.917 ns/op
# Warmup Iteration   3: 37612.834 ns/op
# Warmup Iteration   4: 37525.369 ns/op
# Warmup Iteration   5: 37933.002 ns/op
Iteration   1: 38981.612 ns/op
Iteration   2: 37584.767 ns/op
Iteration   3: 36753.063 ns/op
Iteration   4: 36602.720 ns/op
Iteration   5: 37620.638 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  37508.560 ±(99.9%) 3642.664 ns/op [Average]
  (min, avg, max) = (36602.720, 37508.560, 38981.612), stdev = 945.988
  CI (99.9%): [33865.896, 41151.223] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 27.18% complete, ETA 01:47:00
# Fork: 1 of 1
# Warmup Iteration   1: 69071.772 ns/op
# Warmup Iteration   2: 60715.643 ns/op
# Warmup Iteration   3: 66090.943 ns/op
# Warmup Iteration   4: 62008.451 ns/op
# Warmup Iteration   5: 63939.803 ns/op
Iteration   1: 61955.934 ns/op
Iteration   2: 68529.632 ns/op
Iteration   3: 70611.689 ns/op
Iteration   4: 68816.263 ns/op
Iteration   5: 67922.481 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  67567.200 ±(99.9%) 12679.073 ns/op [Average]
  (min, avg, max) = (61955.934, 67567.200, 70611.689), stdev = 3292.715
  CI (99.9%): [54888.127, 80246.272] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 27.44% complete, ETA 01:46:38
# Fork: 1 of 1
# Warmup Iteration   1: 162394.357 ns/op
# Warmup Iteration   2: 129441.868 ns/op
# Warmup Iteration   3: 133617.210 ns/op
# Warmup Iteration   4: 140439.745 ns/op
# Warmup Iteration   5: 143558.385 ns/op
Iteration   1: 139212.881 ns/op
Iteration   2: 136840.487 ns/op
Iteration   3: 134271.785 ns/op
Iteration   4: 128548.075 ns/op
Iteration   5: 135632.698 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  134901.185 ±(99.9%) 15359.783 ns/op [Average]
  (min, avg, max) = (128548.075, 134901.185, 139212.881), stdev = 3988.887
  CI (99.9%): [119541.402, 150260.968] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 27.69% complete, ETA 01:46:15
# Fork: 1 of 1
# Warmup Iteration   1: 353821.467 ns/op
# Warmup Iteration   2: 317908.181 ns/op
# Warmup Iteration   3: 328535.289 ns/op
# Warmup Iteration   4: 290136.488 ns/op
# Warmup Iteration   5: 313910.326 ns/op
Iteration   1: 335893.399 ns/op
Iteration   2: 333696.338 ns/op
Iteration   3: 330792.193 ns/op
Iteration   4: 327370.056 ns/op
Iteration   5: 334243.387 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  332399.075 ±(99.9%) 12939.507 ns/op [Average]
  (min, avg, max) = (327370.056, 332399.075, 335893.399), stdev = 3360.349
  CI (99.9%): [319459.567, 345338.582] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 27.95% complete, ETA 01:45:53
# Fork: 1 of 1
# Warmup Iteration   1: 2890481.562 ns/op
# Warmup Iteration   2: 2813938.953 ns/op
# Warmup Iteration   3: 2493568.529 ns/op
# Warmup Iteration   4: 2906210.715 ns/op
# Warmup Iteration   5: 2970895.522 ns/op
Iteration   1: 2690697.757 ns/op
Iteration   2: 2746859.500 ns/op
Iteration   3: 3025806.575 ns/op
Iteration   4: 2983656.719 ns/op
Iteration   5: 3034406.069 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2896285.324 ±(99.9%) 632963.116 ns/op [Average]
  (min, avg, max) = (2690697.757, 2896285.324, 3034406.069), stdev = 164378.511
  CI (99.9%): [2263322.208, 3529248.440] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 28.21% complete, ETA 01:45:30
# Fork: 1 of 1
# Warmup Iteration   1: 9610.016 ns/op
# Warmup Iteration   2: 6545.878 ns/op
# Warmup Iteration   3: 6387.039 ns/op
# Warmup Iteration   4: 6556.024 ns/op
# Warmup Iteration   5: 6530.804 ns/op
Iteration   1: 6721.774 ns/op
Iteration   2: 6698.778 ns/op
Iteration   3: 6626.043 ns/op
Iteration   4: 6574.642 ns/op
Iteration   5: 6562.669 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  6636.781 ±(99.9%) 275.910 ns/op [Average]
  (min, avg, max) = (6562.669, 6636.781, 6721.774), stdev = 71.653
  CI (99.9%): [6360.871, 6912.691] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 28.46% complete, ETA 01:45:07
# Fork: 1 of 1
# Warmup Iteration   1: 22232.922 ns/op
# Warmup Iteration   2: 12731.804 ns/op
# Warmup Iteration   3: 12696.542 ns/op
# Warmup Iteration   4: 13537.009 ns/op
# Warmup Iteration   5: 13441.848 ns/op
Iteration   1: 13494.562 ns/op
Iteration   2: 13432.534 ns/op
Iteration   3: 13536.670 ns/op
Iteration   4: 13447.215 ns/op
Iteration   5: 13507.378 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  13483.672 ±(99.9%) 165.997 ns/op [Average]
  (min, avg, max) = (13432.534, 13483.672, 13536.670), stdev = 43.109
  CI (99.9%): [13317.675, 13649.669] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 28.72% complete, ETA 01:44:45
# Fork: 1 of 1
# Warmup Iteration   1: 36819.146 ns/op
# Warmup Iteration   2: 25629.581 ns/op
# Warmup Iteration   3: 24562.482 ns/op
# Warmup Iteration   4: 23825.705 ns/op
# Warmup Iteration   5: 23830.386 ns/op
Iteration   1: 23752.958 ns/op
Iteration   2: 23746.600 ns/op
Iteration   3: 23749.107 ns/op
Iteration   4: 23726.267 ns/op
Iteration   5: 24249.483 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  23844.883 ±(99.9%) 871.840 ns/op [Average]
  (min, avg, max) = (23726.267, 23844.883, 24249.483), stdev = 226.414
  CI (99.9%): [22973.043, 24716.723] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 28.97% complete, ETA 01:44:22
# Fork: 1 of 1
# Warmup Iteration   1: 78116.473 ns/op
# Warmup Iteration   2: 51352.089 ns/op
# Warmup Iteration   3: 53462.406 ns/op
# Warmup Iteration   4: 52317.630 ns/op
# Warmup Iteration   5: 52329.212 ns/op
Iteration   1: 52653.784 ns/op
Iteration   2: 52634.822 ns/op
Iteration   3: 52533.852 ns/op
Iteration   4: 52689.915 ns/op
Iteration   5: 51351.121 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  52372.699 ±(99.9%) 2210.296 ns/op [Average]
  (min, avg, max) = (51351.121, 52372.699, 52689.915), stdev = 574.007
  CI (99.9%): [50162.402, 54582.995] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 29.23% complete, ETA 01:43:59
# Fork: 1 of 1
# Warmup Iteration   1: 713767.618 ns/op
# Warmup Iteration   2: 500306.792 ns/op
# Warmup Iteration   3: 492903.297 ns/op
# Warmup Iteration   4: 507879.058 ns/op
# Warmup Iteration   5: 508507.266 ns/op
Iteration   1: 505973.666 ns/op
Iteration   2: 505792.338 ns/op
Iteration   3: 504813.432 ns/op
Iteration   4: 505687.244 ns/op
Iteration   5: 507792.927 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  506011.921 ±(99.9%) 4202.080 ns/op [Average]
  (min, avg, max) = (504813.432, 506011.921, 507792.927), stdev = 1091.267
  CI (99.9%): [501809.841, 510214.001] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 29.49% complete, ETA 01:43:36
# Fork: 1 of 1
# Warmup Iteration   1: 213523.336 ns/op
# Warmup Iteration   2: 158706.392 ns/op
# Warmup Iteration   3: 144283.504 ns/op
# Warmup Iteration   4: 143292.436 ns/op
# Warmup Iteration   5: 145310.131 ns/op
Iteration   1: 147517.910 ns/op
Iteration   2: 146107.285 ns/op
Iteration   3: 144229.704 ns/op
Iteration   4: 144811.073 ns/op
Iteration   5: 142941.293 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  145121.453 ±(99.9%) 6768.683 ns/op [Average]
  (min, avg, max) = (142941.293, 145121.453, 147517.910), stdev = 1757.805
  CI (99.9%): [138352.770, 151890.136] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 29.74% complete, ETA 01:43:14
# Fork: 1 of 1
# Warmup Iteration   1: 356335.499 ns/op
# Warmup Iteration   2: 224209.238 ns/op
# Warmup Iteration   3: 207042.457 ns/op
# Warmup Iteration   4: 203025.659 ns/op
# Warmup Iteration   5: 204925.415 ns/op
Iteration   1: 203427.982 ns/op
Iteration   2: 203557.863 ns/op
Iteration   3: 205342.952 ns/op
Iteration   4: 205448.182 ns/op
Iteration   5: 201299.834 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  203815.363 ±(99.9%) 6541.530 ns/op [Average]
  (min, avg, max) = (201299.834, 203815.363, 205448.182), stdev = 1698.815
  CI (99.9%): [197273.832, 210356.893] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 30.00% complete, ETA 01:42:52
# Fork: 1 of 1
# Warmup Iteration   1: 723082.743 ns/op
# Warmup Iteration   2: 455463.388 ns/op
# Warmup Iteration   3: 402823.593 ns/op
# Warmup Iteration   4: 397943.202 ns/op
# Warmup Iteration   5: 404101.901 ns/op
Iteration   1: 402259.034 ns/op
Iteration   2: 400349.447 ns/op
Iteration   3: 399950.303 ns/op
Iteration   4: 394105.586 ns/op
Iteration   5: 407583.162 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  400849.506 ±(99.9%) 18653.576 ns/op [Average]
  (min, avg, max) = (394105.586, 400849.506, 407583.162), stdev = 4844.274
  CI (99.9%): [382195.931, 419503.082] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 30.26% complete, ETA 01:42:30
# Fork: 1 of 1
# Warmup Iteration   1: 1566541.964 ns/op
# Warmup Iteration   2: 969338.640 ns/op
# Warmup Iteration   3: 954390.833 ns/op
# Warmup Iteration   4: 916103.002 ns/op
# Warmup Iteration   5: 918286.654 ns/op
Iteration   1: 929566.625 ns/op
Iteration   2: 913589.421 ns/op
Iteration   3: 912669.089 ns/op
Iteration   4: 933065.528 ns/op
Iteration   5: 902492.233 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  918276.579 ±(99.9%) 49038.564 ns/op [Average]
  (min, avg, max) = (902492.233, 918276.579, 933065.528), stdev = 12735.159
  CI (99.9%): [869238.015, 967315.144] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 30.51% complete, ETA 01:42:08
# Fork: 1 of 1
# Warmup Iteration   1: 13819641.974 ns/op
# Warmup Iteration   2: 8743072.907 ns/op
# Warmup Iteration   3: 8916325.982 ns/op
# Warmup Iteration   4: 8654200.823 ns/op
# Warmup Iteration   5: 8526001.494 ns/op
Iteration   1: 8634523.509 ns/op
Iteration   2: 8575878.400 ns/op
Iteration   3: 8694260.280 ns/op
Iteration   4: 8815286.833 ns/op
Iteration   5: 8624927.507 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8668975.306 ±(99.9%) 354178.461 ns/op [Average]
  (min, avg, max) = (8575878.400, 8668975.306, 8815286.833), stdev = 91979.021
  CI (99.9%): [8314796.845, 9023153.766] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 30.77% complete, ETA 01:41:46
# Fork: 1 of 1
# Warmup Iteration   1: 46836.144 ns/op
# Warmup Iteration   2: 26771.944 ns/op
# Warmup Iteration   3: 27771.740 ns/op
# Warmup Iteration   4: 25374.991 ns/op
# Warmup Iteration   5: 25267.135 ns/op
Iteration   1: 25578.807 ns/op
Iteration   2: 25309.237 ns/op
Iteration   3: 25249.316 ns/op
Iteration   4: 25276.007 ns/op
Iteration   5: 25230.573 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  25328.788 ±(99.9%) 550.115 ns/op [Average]
  (min, avg, max) = (25230.573, 25328.788, 25578.807), stdev = 142.863
  CI (99.9%): [24778.673, 25878.903] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 31.03% complete, ETA 01:41:23
# Fork: 1 of 1
# Warmup Iteration   1: 117913.213 ns/op
# Warmup Iteration   2: 44223.630 ns/op
# Warmup Iteration   3: 43223.528 ns/op
# Warmup Iteration   4: 44302.914 ns/op
# Warmup Iteration   5: 42375.487 ns/op
Iteration   1: 42308.829 ns/op
Iteration   2: 42367.431 ns/op
Iteration   3: 42244.922 ns/op
Iteration   4: 42310.785 ns/op
Iteration   5: 42301.702 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  42306.734 ±(99.9%) 167.303 ns/op [Average]
  (min, avg, max) = (42244.922, 42306.734, 42367.431), stdev = 43.448
  CI (99.9%): [42139.430, 42474.037] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 31.28% complete, ETA 01:41:01
# Fork: 1 of 1
# Warmup Iteration   1: 178652.919 ns/op
# Warmup Iteration   2: 84640.944 ns/op
# Warmup Iteration   3: 74973.779 ns/op
# Warmup Iteration   4: 75172.724 ns/op
# Warmup Iteration   5: 76384.132 ns/op
Iteration   1: 74638.934 ns/op
Iteration   2: 74584.010 ns/op
Iteration   3: 74625.060 ns/op
Iteration   4: 75710.121 ns/op
Iteration   5: 77110.673 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  75333.760 ±(99.9%) 4238.435 ns/op [Average]
  (min, avg, max) = (74584.010, 75333.760, 77110.673), stdev = 1100.708
  CI (99.9%): [71095.325, 79572.195] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 31.54% complete, ETA 01:40:38
# Fork: 1 of 1
# Warmup Iteration   1: 370424.407 ns/op
# Warmup Iteration   2: 204043.604 ns/op
# Warmup Iteration   3: 191247.478 ns/op
# Warmup Iteration   4: 190567.854 ns/op
# Warmup Iteration   5: 191455.684 ns/op
Iteration   1: 208638.372 ns/op
Iteration   2: 190279.148 ns/op
Iteration   3: 190256.076 ns/op
Iteration   4: 189442.959 ns/op
Iteration   5: 189646.854 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  193652.682 ±(99.9%) 32289.033 ns/op [Average]
  (min, avg, max) = (189442.959, 193652.682, 208638.372), stdev = 8385.359
  CI (99.9%): [161363.649, 225941.715] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 31.79% complete, ETA 01:40:15
# Fork: 1 of 1
# Warmup Iteration   1: 3817795.095 ns/op
# Warmup Iteration   2: 1594134.962 ns/op
# Warmup Iteration   3: 1555958.877 ns/op
# Warmup Iteration   4: 1527803.007 ns/op
# Warmup Iteration   5: 1560340.947 ns/op
Iteration   1: 1524563.853 ns/op
Iteration   2: 1543213.991 ns/op
Iteration   3: 1513723.815 ns/op
Iteration   4: 1509641.852 ns/op
Iteration   5: 1491801.236 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1516588.949 ±(99.9%) 73146.877 ns/op [Average]
  (min, avg, max) = (1491801.236, 1516588.949, 1543213.991), stdev = 18996.012
  CI (99.9%): [1443442.072, 1589735.826] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 32.05% complete, ETA 01:39:53
# Fork: 1 of 1
# Warmup Iteration   1: 12138.328 ns/op
# Warmup Iteration   2: 8850.738 ns/op
# Warmup Iteration   3: 8324.747 ns/op
# Warmup Iteration   4: 8278.396 ns/op
# Warmup Iteration   5: 8309.358 ns/op
Iteration   1: 8294.441 ns/op
Iteration   2: 8386.949 ns/op
Iteration   3: 8298.008 ns/op
Iteration   4: 8412.568 ns/op
Iteration   5: 8339.959 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8346.385 ±(99.9%) 202.895 ns/op [Average]
  (min, avg, max) = (8294.441, 8346.385, 8412.568), stdev = 52.691
  CI (99.9%): [8143.490, 8549.279] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 32.31% complete, ETA 01:39:30
# Fork: 1 of 1
# Warmup Iteration   1: 24946.209 ns/op
# Warmup Iteration   2: 17542.767 ns/op
# Warmup Iteration   3: 16259.396 ns/op
# Warmup Iteration   4: 16129.803 ns/op
# Warmup Iteration   5: 16171.088 ns/op
Iteration   1: 16406.050 ns/op
Iteration   2: 16112.327 ns/op
Iteration   3: 16103.125 ns/op
Iteration   4: 16141.639 ns/op
Iteration   5: 16316.483 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  16215.925 ±(99.9%) 528.094 ns/op [Average]
  (min, avg, max) = (16103.125, 16215.925, 16406.050), stdev = 137.144
  CI (99.9%): [15687.831, 16744.019] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 32.56% complete, ETA 01:39:08
# Fork: 1 of 1
# Warmup Iteration   1: 53911.781 ns/op
# Warmup Iteration   2: 37614.958 ns/op
# Warmup Iteration   3: 36730.711 ns/op
# Warmup Iteration   4: 35597.597 ns/op
# Warmup Iteration   5: 35706.649 ns/op
Iteration   1: 35853.371 ns/op
Iteration   2: 36501.300 ns/op
Iteration   3: 35540.082 ns/op
Iteration   4: 35771.450 ns/op
Iteration   5: 35719.679 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  35877.176 ±(99.9%) 1414.441 ns/op [Average]
  (min, avg, max) = (35540.082, 35877.176, 36501.300), stdev = 367.326
  CI (99.9%): [34462.736, 37291.617] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 32.82% complete, ETA 01:38:45
# Fork: 1 of 1
# Warmup Iteration   1: 138139.000 ns/op
# Warmup Iteration   2: 89690.228 ns/op
# Warmup Iteration   3: 88041.850 ns/op
# Warmup Iteration   4: 88439.858 ns/op
# Warmup Iteration   5: 88313.095 ns/op
Iteration   1: 86834.140 ns/op
Iteration   2: 86591.297 ns/op
Iteration   3: 86600.504 ns/op
Iteration   4: 86624.424 ns/op
Iteration   5: 86523.012 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  86634.675 ±(99.9%) 453.206 ns/op [Average]
  (min, avg, max) = (86523.012, 86634.675, 86834.140), stdev = 117.696
  CI (99.9%): [86181.470, 87087.881] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 33.08% complete, ETA 01:38:22
# Fork: 1 of 1
# Warmup Iteration   1: 1163829.139 ns/op
# Warmup Iteration   2: 819756.101 ns/op
# Warmup Iteration   3: 793445.819 ns/op
# Warmup Iteration   4: 786469.209 ns/op
# Warmup Iteration   5: 792312.192 ns/op
Iteration   1: 787521.112 ns/op
Iteration   2: 789531.868 ns/op
Iteration   3: 791502.180 ns/op
Iteration   4: 786450.464 ns/op
Iteration   5: 788629.755 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  788727.076 ±(99.9%) 7455.665 ns/op [Average]
  (min, avg, max) = (786450.464, 788727.076, 791502.180), stdev = 1936.212
  CI (99.9%): [781271.411, 796182.740] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 33.33% complete, ETA 01:38:00
# Fork: 1 of 1
# Warmup Iteration   1: 20348.007 ns/op
# Warmup Iteration   2: 10782.019 ns/op
# Warmup Iteration   3: 10371.932 ns/op
# Warmup Iteration   4: 10304.682 ns/op
# Warmup Iteration   5: 10317.542 ns/op
Iteration   1: 10297.206 ns/op
Iteration   2: 10515.643 ns/op
Iteration   3: 10392.970 ns/op
Iteration   4: 10310.685 ns/op
Iteration   5: 10510.558 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  10405.412 ±(99.9%) 404.056 ns/op [Average]
  (min, avg, max) = (10297.206, 10405.412, 10515.643), stdev = 104.932
  CI (99.9%): [10001.357, 10809.468] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 33.59% complete, ETA 01:37:37
# Fork: 1 of 1
# Warmup Iteration   1: 35471.145 ns/op
# Warmup Iteration   2: 21967.172 ns/op
# Warmup Iteration   3: 21394.946 ns/op
# Warmup Iteration   4: 21648.716 ns/op
# Warmup Iteration   5: 22046.130 ns/op
Iteration   1: 20922.911 ns/op
Iteration   2: 20882.582 ns/op
Iteration   3: 20916.059 ns/op
Iteration   4: 20887.952 ns/op
Iteration   5: 20890.298 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  20899.960 ±(99.9%) 70.095 ns/op [Average]
  (min, avg, max) = (20882.582, 20899.960, 20922.911), stdev = 18.203
  CI (99.9%): [20829.866, 20970.055] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 33.85% complete, ETA 01:37:15
# Fork: 1 of 1
# Warmup Iteration   1: 78742.904 ns/op
# Warmup Iteration   2: 42895.131 ns/op
# Warmup Iteration   3: 44718.826 ns/op
# Warmup Iteration   4: 44219.900 ns/op
# Warmup Iteration   5: 44418.490 ns/op
Iteration   1: 44188.712 ns/op
Iteration   2: 44229.688 ns/op
Iteration   3: 47504.479 ns/op
Iteration   4: 44378.359 ns/op
Iteration   5: 45283.759 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  45116.999 ±(99.9%) 5419.189 ns/op [Average]
  (min, avg, max) = (44188.712, 45116.999, 47504.479), stdev = 1407.346
  CI (99.9%): [39697.810, 50536.189] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 34.10% complete, ETA 01:36:52
# Fork: 1 of 1
# Warmup Iteration   1: 288416.253 ns/op
# Warmup Iteration   2: 112319.265 ns/op
# Warmup Iteration   3: 96116.154 ns/op
# Warmup Iteration   4: 96392.764 ns/op
# Warmup Iteration   5: 96469.677 ns/op
Iteration   1: 96406.192 ns/op
Iteration   2: 95908.145 ns/op
Iteration   3: 95795.618 ns/op
Iteration   4: 95875.532 ns/op
Iteration   5: 96626.711 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  96122.439 ±(99.9%) 1425.913 ns/op [Average]
  (min, avg, max) = (95795.618, 96122.439, 96626.711), stdev = 370.305
  CI (99.9%): [94696.526, 97548.352] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 34.36% complete, ETA 01:36:30
# Fork: 1 of 1
# Warmup Iteration   1: 1315466.269 ns/op
# Warmup Iteration   2: 802412.800 ns/op
# Warmup Iteration   3: 799469.983 ns/op
# Warmup Iteration   4: 793947.293 ns/op
# Warmup Iteration   5: 794059.645 ns/op
Iteration   1: 797767.860 ns/op
Iteration   2: 794978.627 ns/op
Iteration   3: 793411.457 ns/op
Iteration   4: 792567.637 ns/op
Iteration   5: 793812.947 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  794507.706 ±(99.9%) 7772.841 ns/op [Average]
  (min, avg, max) = (792567.637, 794507.706, 797767.860), stdev = 2018.582
  CI (99.9%): [786734.865, 802280.546] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 34.62% complete, ETA 01:36:07
# Fork: 1 of 1
# Warmup Iteration   1: 17534.526 ns/op
# Warmup Iteration   2: 8810.542 ns/op
# Warmup Iteration   3: 8804.641 ns/op
# Warmup Iteration   4: 8556.347 ns/op
# Warmup Iteration   5: 8293.013 ns/op
Iteration   1: 8287.078 ns/op
Iteration   2: 8301.508 ns/op
Iteration   3: 8272.813 ns/op
Iteration   4: 8280.626 ns/op
Iteration   5: 8362.978 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  8301.001 ±(99.9%) 139.435 ns/op [Average]
  (min, avg, max) = (8272.813, 8301.001, 8362.978), stdev = 36.211
  CI (99.9%): [8161.565, 8440.436] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 34.87% complete, ETA 01:35:45
# Fork: 1 of 1
# Warmup Iteration   1: 27062.320 ns/op
# Warmup Iteration   2: 14322.680 ns/op
# Warmup Iteration   3: 13902.717 ns/op
# Warmup Iteration   4: 13877.991 ns/op
# Warmup Iteration   5: 13879.436 ns/op
Iteration   1: 13856.217 ns/op
Iteration   2: 13871.093 ns/op
Iteration   3: 13869.081 ns/op
Iteration   4: 14175.103 ns/op
Iteration   5: 13885.853 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  13931.469 ±(99.9%) 526.000 ns/op [Average]
  (min, avg, max) = (13856.217, 13931.469, 14175.103), stdev = 136.600
  CI (99.9%): [13405.470, 14457.469] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 35.13% complete, ETA 01:35:22
# Fork: 1 of 1
# Warmup Iteration   1: 55891.404 ns/op
# Warmup Iteration   2: 29270.251 ns/op
# Warmup Iteration   3: 28299.917 ns/op
# Warmup Iteration   4: 28047.820 ns/op
# Warmup Iteration   5: 28077.036 ns/op
Iteration   1: 28024.686 ns/op
Iteration   2: 28008.930 ns/op
Iteration   3: 28028.088 ns/op
Iteration   4: 28088.397 ns/op
Iteration   5: 28120.108 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  28054.042 ±(99.9%) 183.820 ns/op [Average]
  (min, avg, max) = (28008.930, 28054.042, 28120.108), stdev = 47.737
  CI (99.9%): [27870.222, 28237.862] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 35.38% complete, ETA 01:34:59
# Fork: 1 of 1
# Warmup Iteration   1: 122749.885 ns/op
# Warmup Iteration   2: 63995.093 ns/op
# Warmup Iteration   3: 67866.296 ns/op
# Warmup Iteration   4: 63123.455 ns/op
# Warmup Iteration   5: 62863.606 ns/op
Iteration   1: 63456.452 ns/op
Iteration   2: 63851.793 ns/op
Iteration   3: 62442.190 ns/op
Iteration   4: 62798.944 ns/op
Iteration   5: 62311.704 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  62972.217 ±(99.9%) 2550.865 ns/op [Average]
  (min, avg, max) = (62311.704, 62972.217, 63851.793), stdev = 662.451
  CI (99.9%): [60421.352, 65523.081] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 35.64% complete, ETA 01:34:37
# Fork: 1 of 1
# Warmup Iteration   1: 1243774.567 ns/op
# Warmup Iteration   2: 638196.627 ns/op
# Warmup Iteration   3: 619541.427 ns/op
# Warmup Iteration   4: 617954.175 ns/op
# Warmup Iteration   5: 617613.708 ns/op
Iteration   1: 627408.514 ns/op
Iteration   2: 621092.005 ns/op
Iteration   3: 620693.872 ns/op
Iteration   4: 623984.003 ns/op
Iteration   5: 617311.213 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  622097.921 ±(99.9%) 14619.205 ns/op [Average]
  (min, avg, max) = (617311.213, 622097.921, 627408.514), stdev = 3796.561
  CI (99.9%): [607478.716, 636717.127] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 35.90% complete, ETA 01:34:14
# Fork: 1 of 1
# Warmup Iteration   1: 24250.402 ns/op
# Warmup Iteration   2: 10053.693 ns/op
# Warmup Iteration   3: 9718.851 ns/op
# Warmup Iteration   4: 9711.774 ns/op
# Warmup Iteration   5: 9672.465 ns/op
Iteration   1: 9737.322 ns/op
Iteration   2: 9837.091 ns/op
Iteration   3: 9734.923 ns/op
Iteration   4: 9827.251 ns/op
Iteration   5: 9677.113 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9762.740 ±(99.9%) 261.458 ns/op [Average]
  (min, avg, max) = (9677.113, 9762.740, 9837.091), stdev = 67.900
  CI (99.9%): [9501.282, 10024.198] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 36.15% complete, ETA 01:33:51
# Fork: 1 of 1
# Warmup Iteration   1: 55980.627 ns/op
# Warmup Iteration   2: 20352.365 ns/op
# Warmup Iteration   3: 20673.785 ns/op
# Warmup Iteration   4: 20118.361 ns/op
# Warmup Iteration   5: 20098.189 ns/op
Iteration   1: 20371.551 ns/op
Iteration   2: 20123.738 ns/op
Iteration   3: 20028.826 ns/op
Iteration   4: 19950.686 ns/op
Iteration   5: 19967.224 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  20088.405 ±(99.9%) 663.108 ns/op [Average]
  (min, avg, max) = (19950.686, 20088.405, 20371.551), stdev = 172.207
  CI (99.9%): [19425.297, 20751.513] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 36.41% complete, ETA 01:33:29
# Fork: 1 of 1
# Warmup Iteration   1: 97622.678 ns/op
# Warmup Iteration   2: 45114.638 ns/op
# Warmup Iteration   3: 44307.975 ns/op
# Warmup Iteration   4: 43607.438 ns/op
# Warmup Iteration   5: 44990.688 ns/op
Iteration   1: 43490.756 ns/op
Iteration   2: 43657.065 ns/op
Iteration   3: 43541.406 ns/op
Iteration   4: 43358.243 ns/op
Iteration   5: 43388.239 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  43487.142 ±(99.9%) 464.590 ns/op [Average]
  (min, avg, max) = (43358.243, 43487.142, 43657.065), stdev = 120.653
  CI (99.9%): [43022.552, 43951.732] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 36.67% complete, ETA 01:33:06
# Fork: 1 of 1
# Warmup Iteration   1: 168216.979 ns/op
# Warmup Iteration   2: 83280.982 ns/op
# Warmup Iteration   3: 83365.388 ns/op
# Warmup Iteration   4: 83954.812 ns/op
# Warmup Iteration   5: 84387.721 ns/op
Iteration   1: 83328.775 ns/op
Iteration   2: 83019.552 ns/op
Iteration   3: 83122.978 ns/op
Iteration   4: 82859.226 ns/op
Iteration   5: 82642.191 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  82994.545 ±(99.9%) 1002.823 ns/op [Average]
  (min, avg, max) = (82642.191, 82994.545, 83328.775), stdev = 260.430
  CI (99.9%): [81991.722, 83997.367] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 36.92% complete, ETA 01:32:43
# Fork: 1 of 1
# Warmup Iteration   1: 1376868.335 ns/op
# Warmup Iteration   2: 850290.956 ns/op
# Warmup Iteration   3: 852665.744 ns/op
# Warmup Iteration   4: 825035.437 ns/op
# Warmup Iteration   5: 822499.957 ns/op
Iteration   1: 841742.977 ns/op
Iteration   2: 825643.748 ns/op
Iteration   3: 837299.031 ns/op
Iteration   4: 867234.522 ns/op
Iteration   5: 829859.447 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  840355.945 ±(99.9%) 62694.339 ns/op [Average]
  (min, avg, max) = (825643.748, 840355.945, 867234.522), stdev = 16281.521
  CI (99.9%): [777661.606, 903050.284] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 37.18% complete, ETA 01:32:21
# Fork: 1 of 1
# Warmup Iteration   1: 8907.277 ns/op
# Warmup Iteration   2: 5495.720 ns/op
# Warmup Iteration   3: 5317.307 ns/op
# Warmup Iteration   4: 5295.692 ns/op
# Warmup Iteration   5: 5328.369 ns/op
Iteration   1: 5302.316 ns/op
Iteration   2: 5295.533 ns/op
Iteration   3: 5288.767 ns/op
Iteration   4: 5285.690 ns/op
Iteration   5: 5297.000 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5293.861 ±(99.9%) 25.603 ns/op [Average]
  (min, avg, max) = (5285.690, 5293.861, 5302.316), stdev = 6.649
  CI (99.9%): [5268.258, 5319.464] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 37.44% complete, ETA 01:31:58
# Fork: 1 of 1
# Warmup Iteration   1: 17731.825 ns/op
# Warmup Iteration   2: 12332.531 ns/op
# Warmup Iteration   3: 11867.312 ns/op
# Warmup Iteration   4: 11851.714 ns/op
# Warmup Iteration   5: 11856.441 ns/op
Iteration   1: 11826.846 ns/op
Iteration   2: 11798.540 ns/op
Iteration   3: 11811.741 ns/op
Iteration   4: 11822.418 ns/op
Iteration   5: 11783.537 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11808.617 ±(99.9%) 68.426 ns/op [Average]
  (min, avg, max) = (11783.537, 11808.617, 11826.846), stdev = 17.770
  CI (99.9%): [11740.190, 11877.043] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 37.69% complete, ETA 01:31:35
# Fork: 1 of 1
# Warmup Iteration   1: 31204.632 ns/op
# Warmup Iteration   2: 18958.683 ns/op
# Warmup Iteration   3: 18342.271 ns/op
# Warmup Iteration   4: 18264.633 ns/op
# Warmup Iteration   5: 18302.991 ns/op
Iteration   1: 18474.516 ns/op
Iteration   2: 18224.280 ns/op
Iteration   3: 18185.018 ns/op
Iteration   4: 18280.163 ns/op
Iteration   5: 18233.330 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  18279.461 ±(99.9%) 439.630 ns/op [Average]
  (min, avg, max) = (18185.018, 18279.461, 18474.516), stdev = 114.170
  CI (99.9%): [17839.832, 18719.091] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 37.95% complete, ETA 01:31:12
# Fork: 1 of 1
# Warmup Iteration   1: 46262.265 ns/op
# Warmup Iteration   2: 28266.651 ns/op
# Warmup Iteration   3: 27479.641 ns/op
# Warmup Iteration   4: 26790.217 ns/op
# Warmup Iteration   5: 26839.239 ns/op
Iteration   1: 26827.894 ns/op
Iteration   2: 26849.077 ns/op
Iteration   3: 27134.797 ns/op
Iteration   4: 26780.528 ns/op
Iteration   5: 32298.828 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  27978.225 ±(99.9%) 9315.793 ns/op [Average]
  (min, avg, max) = (26780.528, 27978.225, 32298.828), stdev = 2419.282
  CI (99.9%): [18662.432, 37294.018] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 38.21% complete, ETA 01:30:50
# Fork: 1 of 1
# Warmup Iteration   1: 342930.096 ns/op
# Warmup Iteration   2: 259430.274 ns/op
# Warmup Iteration   3: 231749.549 ns/op
# Warmup Iteration   4: 230678.280 ns/op
# Warmup Iteration   5: 230980.580 ns/op
Iteration   1: 231490.887 ns/op
Iteration   2: 232924.293 ns/op
Iteration   3: 231865.418 ns/op
Iteration   4: 232568.173 ns/op
Iteration   5: 231429.821 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  232055.718 ±(99.9%) 2557.150 ns/op [Average]
  (min, avg, max) = (231429.821, 232055.718, 232924.293), stdev = 664.084
  CI (99.9%): [229498.568, 234612.868] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 38.46% complete, ETA 01:30:27
# Fork: 1 of 1
# Warmup Iteration   1: 4636.884 ns/op
# Warmup Iteration   2: 2776.040 ns/op
# Warmup Iteration   3: 2633.586 ns/op
# Warmup Iteration   4: 2625.707 ns/op
# Warmup Iteration   5: 2631.588 ns/op
Iteration   1: 2653.829 ns/op
Iteration   2: 2617.720 ns/op
Iteration   3: 2631.233 ns/op
Iteration   4: 2628.404 ns/op
Iteration   5: 2619.814 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2630.200 ±(99.9%) 55.341 ns/op [Average]
  (min, avg, max) = (2617.720, 2630.200, 2653.829), stdev = 14.372
  CI (99.9%): [2574.859, 2685.541] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 38.72% complete, ETA 01:30:05
# Fork: 1 of 1
# Warmup Iteration   1: 11826.282 ns/op
# Warmup Iteration   2: 5771.823 ns/op
# Warmup Iteration   3: 5485.345 ns/op
# Warmup Iteration   4: 5501.599 ns/op
# Warmup Iteration   5: 5462.366 ns/op
Iteration   1: 5474.570 ns/op
Iteration   2: 5469.164 ns/op
Iteration   3: 5486.713 ns/op
Iteration   4: 5476.398 ns/op
Iteration   5: 5476.177 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5476.604 ±(99.9%) 24.499 ns/op [Average]
  (min, avg, max) = (5469.164, 5476.604, 5486.713), stdev = 6.362
  CI (99.9%): [5452.105, 5501.103] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 38.97% complete, ETA 01:29:42
# Fork: 1 of 1
# Warmup Iteration   1: 20739.117 ns/op
# Warmup Iteration   2: 10624.392 ns/op
# Warmup Iteration   3: 10355.809 ns/op
# Warmup Iteration   4: 10343.294 ns/op
# Warmup Iteration   5: 10321.267 ns/op
Iteration   1: 10401.762 ns/op
Iteration   2: 10317.513 ns/op
Iteration   3: 10575.984 ns/op
Iteration   4: 10385.760 ns/op
Iteration   5: 10320.830 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  10400.370 ±(99.9%) 404.994 ns/op [Average]
  (min, avg, max) = (10317.513, 10400.370, 10575.984), stdev = 105.176
  CI (99.9%): [9995.376, 10805.364] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 39.23% complete, ETA 01:29:19
# Fork: 1 of 1
# Warmup Iteration   1: 39212.945 ns/op
# Warmup Iteration   2: 21848.126 ns/op
# Warmup Iteration   3: 21865.503 ns/op
# Warmup Iteration   4: 21608.040 ns/op
# Warmup Iteration   5: 21598.093 ns/op
Iteration   1: 21705.035 ns/op
Iteration   2: 21764.092 ns/op
Iteration   3: 21519.821 ns/op
Iteration   4: 21501.951 ns/op
Iteration   5: 21703.687 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  21638.917 ±(99.9%) 460.386 ns/op [Average]
  (min, avg, max) = (21501.951, 21638.917, 21764.092), stdev = 119.561
  CI (99.9%): [21178.531, 22099.303] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 39.49% complete, ETA 01:28:57
# Fork: 1 of 1
# Warmup Iteration   1: 350169.764 ns/op
# Warmup Iteration   2: 208591.367 ns/op
# Warmup Iteration   3: 200574.670 ns/op
# Warmup Iteration   4: 201440.937 ns/op
# Warmup Iteration   5: 202622.392 ns/op
Iteration   1: 200872.492 ns/op
Iteration   2: 200863.010 ns/op
Iteration   3: 200546.842 ns/op
Iteration   4: 202283.119 ns/op
Iteration   5: 201830.578 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  201279.208 ±(99.9%) 2847.164 ns/op [Average]
  (min, avg, max) = (200546.842, 201279.208, 202283.119), stdev = 739.399
  CI (99.9%): [198432.044, 204126.372] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 39.74% complete, ETA 01:28:34
# Fork: 1 of 1
# Warmup Iteration   1: 13000.502 ns/op
# Warmup Iteration   2: 6924.795 ns/op
# Warmup Iteration   3: 6425.129 ns/op
# Warmup Iteration   4: 6444.724 ns/op
# Warmup Iteration   5: 6465.722 ns/op
Iteration   1: 6435.213 ns/op
Iteration   2: 6504.835 ns/op
Iteration   3: 6432.603 ns/op
Iteration   4: 6434.782 ns/op
Iteration   5: 6423.246 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6446.136 ±(99.9%) 127.724 ns/op [Average]
  (min, avg, max) = (6423.246, 6446.136, 6504.835), stdev = 33.169
  CI (99.9%): [6318.412, 6573.859] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 40.00% complete, ETA 01:28:11
# Fork: 1 of 1
# Warmup Iteration   1: 22884.705 ns/op
# Warmup Iteration   2: 12660.956 ns/op
# Warmup Iteration   3: 12533.635 ns/op
# Warmup Iteration   4: 12537.119 ns/op
# Warmup Iteration   5: 12495.393 ns/op
Iteration   1: 12639.791 ns/op
Iteration   2: 12507.003 ns/op
Iteration   3: 12493.653 ns/op
Iteration   4: 12536.101 ns/op
Iteration   5: 12500.284 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  12535.367 ±(99.9%) 233.276 ns/op [Average]
  (min, avg, max) = (12493.653, 12535.367, 12639.791), stdev = 60.581
  CI (99.9%): [12302.091, 12768.642] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 40.26% complete, ETA 01:27:49
# Fork: 1 of 1
# Warmup Iteration   1: 40273.505 ns/op
# Warmup Iteration   2: 28066.826 ns/op
# Warmup Iteration   3: 27152.540 ns/op
# Warmup Iteration   4: 26696.248 ns/op
# Warmup Iteration   5: 26736.501 ns/op
Iteration   1: 26681.625 ns/op
Iteration   2: 26604.196 ns/op
Iteration   3: 26619.843 ns/op
Iteration   4: 26616.476 ns/op
Iteration   5: 26565.570 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  26617.542 ±(99.9%) 160.995 ns/op [Average]
  (min, avg, max) = (26565.570, 26617.542, 26681.625), stdev = 41.810
  CI (99.9%): [26456.547, 26778.538] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 40.51% complete, ETA 01:27:26
# Fork: 1 of 1
# Warmup Iteration   1: 101804.948 ns/op
# Warmup Iteration   2: 63450.857 ns/op
# Warmup Iteration   3: 59886.564 ns/op
# Warmup Iteration   4: 60146.026 ns/op
# Warmup Iteration   5: 59786.667 ns/op
Iteration   1: 59643.994 ns/op
Iteration   2: 59597.915 ns/op
Iteration   3: 59584.026 ns/op
Iteration   4: 59486.391 ns/op
Iteration   5: 59719.887 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  59606.443 ±(99.9%) 329.378 ns/op [Average]
  (min, avg, max) = (59486.391, 59606.443, 59719.887), stdev = 85.538
  CI (99.9%): [59277.065, 59935.821] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 40.77% complete, ETA 01:27:03
# Fork: 1 of 1
# Warmup Iteration   1: 907623.317 ns/op
# Warmup Iteration   2: 638649.764 ns/op
# Warmup Iteration   3: 664239.716 ns/op
# Warmup Iteration   4: 625040.656 ns/op
# Warmup Iteration   5: 647694.415 ns/op
Iteration   1: 624111.892 ns/op
Iteration   2: 630453.305 ns/op
Iteration   3: 623700.418 ns/op
Iteration   4: 628757.418 ns/op
Iteration   5: 623499.875 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  626104.581 ±(99.9%) 12549.238 ns/op [Average]
  (min, avg, max) = (623499.875, 626104.581, 630453.305), stdev = 3258.997
  CI (99.9%): [613555.344, 638653.819] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 41.03% complete, ETA 01:26:41
# Fork: 1 of 1
# Warmup Iteration   1: 62841.059 ns/op
# Warmup Iteration   2: 31208.007 ns/op
# Warmup Iteration   3: 25929.969 ns/op
# Warmup Iteration   4: 25632.654 ns/op
# Warmup Iteration   5: 25798.486 ns/op
Iteration   1: 25704.279 ns/op
Iteration   2: 26047.896 ns/op
Iteration   3: 25621.553 ns/op
Iteration   4: 25671.684 ns/op
Iteration   5: 26028.334 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  25814.749 ±(99.9%) 793.766 ns/op [Average]
  (min, avg, max) = (25621.553, 25814.749, 26047.896), stdev = 206.138
  CI (99.9%): [25020.984, 26608.515] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 41.28% complete, ETA 01:26:18
# Fork: 1 of 1
# Warmup Iteration   1: 115277.703 ns/op
# Warmup Iteration   2: 58606.106 ns/op
# Warmup Iteration   3: 51478.480 ns/op
# Warmup Iteration   4: 47168.694 ns/op
# Warmup Iteration   5: 46037.232 ns/op
Iteration   1: 46117.432 ns/op
Iteration   2: 46070.299 ns/op
Iteration   3: 46212.175 ns/op
Iteration   4: 46159.529 ns/op
Iteration   5: 46387.265 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  46189.340 ±(99.9%) 471.315 ns/op [Average]
  (min, avg, max) = (46070.299, 46189.340, 46387.265), stdev = 122.399
  CI (99.9%): [45718.025, 46660.655] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 41.54% complete, ETA 01:25:55
# Fork: 1 of 1
# Warmup Iteration   1: 300221.215 ns/op
# Warmup Iteration   2: 130106.445 ns/op
# Warmup Iteration   3: 100643.389 ns/op
# Warmup Iteration   4: 107102.502 ns/op
# Warmup Iteration   5: 101156.920 ns/op
Iteration   1: 101439.075 ns/op
Iteration   2: 100106.822 ns/op
Iteration   3: 99578.853 ns/op
Iteration   4: 99667.509 ns/op
Iteration   5: 100088.248 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  100176.102 ±(99.9%) 2870.597 ns/op [Average]
  (min, avg, max) = (99578.853, 100176.102, 101439.075), stdev = 745.485
  CI (99.9%): [97305.504, 103046.699] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 41.79% complete, ETA 01:25:32
# Fork: 1 of 1
# Warmup Iteration   1: 436171.501 ns/op
# Warmup Iteration   2: 298502.788 ns/op
# Warmup Iteration   3: 270538.073 ns/op
# Warmup Iteration   4: 234661.348 ns/op
# Warmup Iteration   5: 241333.707 ns/op
Iteration   1: 239277.859 ns/op
Iteration   2: 235583.817 ns/op
Iteration   3: 237923.556 ns/op
Iteration   4: 234743.212 ns/op
Iteration   5: 234870.993 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  236479.887 ±(99.9%) 7778.004 ns/op [Average]
  (min, avg, max) = (234743.212, 236479.887, 239277.859), stdev = 2019.923
  CI (99.9%): [228701.884, 244257.891] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 42.05% complete, ETA 01:25:10
# Fork: 1 of 1
# Warmup Iteration   1: 4312523.662 ns/op
# Warmup Iteration   2: 2553524.053 ns/op
# Warmup Iteration   3: 2131880.898 ns/op
# Warmup Iteration   4: 2127814.259 ns/op
# Warmup Iteration   5: 2132866.449 ns/op
Iteration   1: 2147303.156 ns/op
Iteration   2: 2120663.949 ns/op
Iteration   3: 2127058.299 ns/op
Iteration   4: 2129649.221 ns/op
Iteration   5: 2130474.265 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2131029.778 ±(99.9%) 38034.754 ns/op [Average]
  (min, avg, max) = (2120663.949, 2131029.778, 2147303.156), stdev = 9877.505
  CI (99.9%): [2092995.024, 2169064.531] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 42.31% complete, ETA 01:24:47
# Fork: 1 of 1
# Warmup Iteration   1: 6257.124 ns/op
# Warmup Iteration   2: 3687.737 ns/op
# Warmup Iteration   3: 3584.643 ns/op
# Warmup Iteration   4: 3560.237 ns/op
# Warmup Iteration   5: 3578.923 ns/op
Iteration   1: 3574.841 ns/op
Iteration   2: 3696.608 ns/op
Iteration   3: 3674.250 ns/op
Iteration   4: 3639.872 ns/op
Iteration   5: 3657.626 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3648.639 ±(99.9%) 178.138 ns/op [Average]
  (min, avg, max) = (3574.841, 3648.639, 3696.608), stdev = 46.262
  CI (99.9%): [3470.501, 3826.778] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 42.56% complete, ETA 01:24:24
# Fork: 1 of 1
# Warmup Iteration   1: 11116.641 ns/op
# Warmup Iteration   2: 6966.138 ns/op
# Warmup Iteration   3: 6164.893 ns/op
# Warmup Iteration   4: 6184.345 ns/op
# Warmup Iteration   5: 6164.818 ns/op
Iteration   1: 6240.270 ns/op
Iteration   2: 6159.451 ns/op
Iteration   3: 6235.006 ns/op
Iteration   4: 6186.759 ns/op
Iteration   5: 6110.856 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6186.468 ±(99.9%) 208.235 ns/op [Average]
  (min, avg, max) = (6110.856, 6186.468, 6240.270), stdev = 54.078
  CI (99.9%): [5978.233, 6394.704] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 42.82% complete, ETA 01:24:02
# Fork: 1 of 1
# Warmup Iteration   1: 33657.383 ns/op
# Warmup Iteration   2: 12522.356 ns/op
# Warmup Iteration   3: 12398.666 ns/op
# Warmup Iteration   4: 11618.276 ns/op
# Warmup Iteration   5: 11593.603 ns/op
Iteration   1: 11666.519 ns/op
Iteration   2: 11583.569 ns/op
Iteration   3: 11697.252 ns/op
Iteration   4: 11927.172 ns/op
Iteration   5: 11682.756 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11711.454 ±(99.9%) 494.375 ns/op [Average]
  (min, avg, max) = (11583.569, 11711.454, 11927.172), stdev = 128.388
  CI (99.9%): [11217.079, 12205.828] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 43.08% complete, ETA 01:23:39
# Fork: 1 of 1
# Warmup Iteration   1: 105055.387 ns/op
# Warmup Iteration   2: 26579.123 ns/op
# Warmup Iteration   3: 24171.821 ns/op
# Warmup Iteration   4: 24818.610 ns/op
# Warmup Iteration   5: 23854.547 ns/op
Iteration   1: 23523.782 ns/op
Iteration   2: 23635.669 ns/op
Iteration   3: 24305.784 ns/op
Iteration   4: 23851.155 ns/op
Iteration   5: 24425.360 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  23948.350 ±(99.9%) 1543.589 ns/op [Average]
  (min, avg, max) = (23523.782, 23948.350, 24425.360), stdev = 400.865
  CI (99.9%): [22404.761, 25491.939] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 43.33% complete, ETA 01:23:16
# Fork: 1 of 1
# Warmup Iteration   1: 318819.205 ns/op
# Warmup Iteration   2: 209318.758 ns/op
# Warmup Iteration   3: 208016.811 ns/op
# Warmup Iteration   4: 208772.683 ns/op
# Warmup Iteration   5: 209159.913 ns/op
Iteration   1: 218270.724 ns/op
Iteration   2: 210297.312 ns/op
Iteration   3: 210374.319 ns/op
Iteration   4: 212058.051 ns/op
Iteration   5: 210010.415 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  212202.164 ±(99.9%) 13425.091 ns/op [Average]
  (min, avg, max) = (210010.415, 212202.164, 218270.724), stdev = 3486.453
  CI (99.9%): [198777.074, 225627.255] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 43.59% complete, ETA 01:22:54
# Fork: 1 of 1
# Warmup Iteration   1: 31675.473 ns/op
# Warmup Iteration   2: 30270.757 ns/op
# Warmup Iteration   3: 34447.570 ns/op
# Warmup Iteration   4: 36492.878 ns/op
# Warmup Iteration   5: 35495.195 ns/op
Iteration   1: 36000.023 ns/op
Iteration   2: 36097.264 ns/op
Iteration   3: 35679.138 ns/op
Iteration   4: 35580.383 ns/op
Iteration   5: 36220.100 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  35915.382 ±(99.9%) 1056.532 ns/op [Average]
  (min, avg, max) = (35580.383, 35915.382, 36220.100), stdev = 274.378
  CI (99.9%): [34858.850, 36971.914] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 43.85% complete, ETA 01:22:31
# Fork: 1 of 1
# Warmup Iteration   1: 78817.159 ns/op
# Warmup Iteration   2: 68220.841 ns/op
# Warmup Iteration   3: 68618.748 ns/op
# Warmup Iteration   4: 69711.037 ns/op
# Warmup Iteration   5: 71117.890 ns/op
Iteration   1: 73591.703 ns/op
Iteration   2: 77627.202 ns/op
Iteration   3: 75420.841 ns/op
Iteration   4: 74093.832 ns/op
Iteration   5: 74214.363 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  74989.588 ±(99.9%) 6238.882 ns/op [Average]
  (min, avg, max) = (73591.703, 74989.588, 77627.202), stdev = 1620.218
  CI (99.9%): [68750.706, 81228.470] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 44.10% complete, ETA 01:22:08
# Fork: 1 of 1
# Warmup Iteration   1: 142074.333 ns/op
# Warmup Iteration   2: 135264.884 ns/op
# Warmup Iteration   3: 133316.077 ns/op
# Warmup Iteration   4: 145051.939 ns/op
# Warmup Iteration   5: 141157.889 ns/op
Iteration   1: 126088.397 ns/op
Iteration   2: 134606.445 ns/op
Iteration   3: 132950.097 ns/op
Iteration   4: 136930.403 ns/op
Iteration   5: 128390.496 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  131793.168 ±(99.9%) 17195.485 ns/op [Average]
  (min, avg, max) = (126088.397, 131793.168, 136930.403), stdev = 4465.613
  CI (99.9%): [114597.683, 148988.652] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 44.36% complete, ETA 01:21:46
# Fork: 1 of 1
# Warmup Iteration   1: 270780.525 ns/op
# Warmup Iteration   2: 272973.185 ns/op
# Warmup Iteration   3: 228487.592 ns/op
# Warmup Iteration   4: 294191.186 ns/op
# Warmup Iteration   5: 288837.835 ns/op
Iteration   1: 291950.592 ns/op
Iteration   2: 290119.303 ns/op
Iteration   3: 301198.976 ns/op
Iteration   4: 296670.588 ns/op
Iteration   5: 290420.000 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  294071.892 ±(99.9%) 18367.181 ns/op [Average]
  (min, avg, max) = (290119.303, 294071.892, 301198.976), stdev = 4769.899
  CI (99.9%): [275704.711, 312439.073] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 44.62% complete, ETA 01:21:23
# Fork: 1 of 1
# Warmup Iteration   1: 2628638.245 ns/op
# Warmup Iteration   2: 2521695.213 ns/op
# Warmup Iteration   3: 2590718.648 ns/op
# Warmup Iteration   4: 2653552.108 ns/op
# Warmup Iteration   5: 2615068.074 ns/op
Iteration   1: 2670947.247 ns/op
Iteration   2: 2748709.238 ns/op
Iteration   3: 2753829.293 ns/op
Iteration   4: 2712153.805 ns/op
Iteration   5: 2773205.435 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2731769.004 ±(99.9%) 156113.196 ns/op [Average]
  (min, avg, max) = (2670947.247, 2731769.004, 2773205.435), stdev = 40542.101
  CI (99.9%): [2575655.808, 2887882.199] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 44.87% complete, ETA 01:21:01
# Fork: 1 of 1
# Warmup Iteration   1: 5392.003 ns/op
# Warmup Iteration   2: 3379.035 ns/op
# Warmup Iteration   3: 5038.774 ns/op
# Warmup Iteration   4: 5310.941 ns/op
# Warmup Iteration   5: 4777.422 ns/op
Iteration   1: 4947.451 ns/op
Iteration   2: 4930.255 ns/op
Iteration   3: 5111.559 ns/op
Iteration   4: 5183.429 ns/op
Iteration   5: 5162.734 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5067.086 ±(99.9%) 462.467 ns/op [Average]
  (min, avg, max) = (4930.255, 5067.086, 5183.429), stdev = 120.101
  CI (99.9%): [4604.618, 5529.553] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 45.13% complete, ETA 01:20:38
# Fork: 1 of 1
# Warmup Iteration   1: 10577.562 ns/op
# Warmup Iteration   2: 6360.039 ns/op
# Warmup Iteration   3: 6611.728 ns/op
# Warmup Iteration   4: 6483.484 ns/op
# Warmup Iteration   5: 6351.593 ns/op
Iteration   1: 6423.650 ns/op
Iteration   2: 6516.122 ns/op
Iteration   3: 6625.441 ns/op
Iteration   4: 6580.829 ns/op
Iteration   5: 6508.963 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6531.001 ±(99.9%) 295.980 ns/op [Average]
  (min, avg, max) = (6423.650, 6531.001, 6625.441), stdev = 76.865
  CI (99.9%): [6235.021, 6826.981] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 45.38% complete, ETA 01:20:15
# Fork: 1 of 1
# Warmup Iteration   1: 26364.002 ns/op
# Warmup Iteration   2: 12692.503 ns/op
# Warmup Iteration   3: 12140.341 ns/op
# Warmup Iteration   4: 12019.336 ns/op
# Warmup Iteration   5: 12229.856 ns/op
Iteration   1: 12051.648 ns/op
Iteration   2: 11744.205 ns/op
Iteration   3: 11746.968 ns/op
Iteration   4: 11991.953 ns/op
Iteration   5: 12008.538 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11908.662 ±(99.9%) 579.355 ns/op [Average]
  (min, avg, max) = (11744.205, 11908.662, 12051.648), stdev = 150.457
  CI (99.9%): [11329.307, 12488.018] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 45.64% complete, ETA 01:19:52
# Fork: 1 of 1
# Warmup Iteration   1: 73511.347 ns/op
# Warmup Iteration   2: 28920.935 ns/op
# Warmup Iteration   3: 22402.286 ns/op
# Warmup Iteration   4: 19987.323 ns/op
# Warmup Iteration   5: 19995.520 ns/op
Iteration   1: 19937.754 ns/op
Iteration   2: 19979.036 ns/op
Iteration   3: 19936.395 ns/op
Iteration   4: 20001.295 ns/op
Iteration   5: 19967.322 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  19964.360 ±(99.9%) 106.822 ns/op [Average]
  (min, avg, max) = (19936.395, 19964.360, 20001.295), stdev = 27.741
  CI (99.9%): [19857.538, 20071.182] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 45.90% complete, ETA 01:19:30
# Fork: 1 of 1
# Warmup Iteration   1: 274242.543 ns/op
# Warmup Iteration   2: 224246.111 ns/op
# Warmup Iteration   3: 249082.479 ns/op
# Warmup Iteration   4: 245261.019 ns/op
# Warmup Iteration   5: 248789.796 ns/op
Iteration   1: 245367.064 ns/op
Iteration   2: 259814.852 ns/op
Iteration   3: 254053.945 ns/op
Iteration   4: 251435.607 ns/op
Iteration   5: 250708.645 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  252276.022 ±(99.9%) 20274.622 ns/op [Average]
  (min, avg, max) = (245367.064, 252276.022, 259814.852), stdev = 5265.255
  CI (99.9%): [232001.401, 272550.644] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 46.15% complete, ETA 01:19:07
# Fork: 1 of 1
# Warmup Iteration   1: 49070.662 ns/op
# Warmup Iteration   2: 28416.166 ns/op
# Warmup Iteration   3: 29694.646 ns/op
# Warmup Iteration   4: 27513.799 ns/op
# Warmup Iteration   5: 27443.383 ns/op
Iteration   1: 28397.462 ns/op
Iteration   2: 27503.627 ns/op
Iteration   3: 27593.266 ns/op
Iteration   4: 27671.030 ns/op
Iteration   5: 27721.193 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  27777.316 ±(99.9%) 1371.995 ns/op [Average]
  (min, avg, max) = (27503.627, 27777.316, 28397.462), stdev = 356.303
  CI (99.9%): [26405.320, 29149.311] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 46.41% complete, ETA 01:18:45
# Fork: 1 of 1
# Warmup Iteration   1: 114994.244 ns/op
# Warmup Iteration   2: 58907.579 ns/op
# Warmup Iteration   3: 58144.399 ns/op
# Warmup Iteration   4: 58368.982 ns/op
# Warmup Iteration   5: 57733.714 ns/op
Iteration   1: 58413.911 ns/op
Iteration   2: 57612.204 ns/op
Iteration   3: 57619.890 ns/op
Iteration   4: 57380.284 ns/op
Iteration   5: 57342.820 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  57673.822 ±(99.9%) 1667.559 ns/op [Average]
  (min, avg, max) = (57342.820, 57673.822, 58413.911), stdev = 433.060
  CI (99.9%): [56006.262, 59341.381] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 46.67% complete, ETA 01:18:23
# Fork: 1 of 1
# Warmup Iteration   1: 193254.493 ns/op
# Warmup Iteration   2: 125817.950 ns/op
# Warmup Iteration   3: 113929.786 ns/op
# Warmup Iteration   4: 113200.695 ns/op
# Warmup Iteration   5: 117698.650 ns/op
Iteration   1: 114270.289 ns/op
Iteration   2: 112972.067 ns/op
Iteration   3: 113695.683 ns/op
Iteration   4: 114024.653 ns/op
Iteration   5: 115352.390 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  114063.016 ±(99.9%) 3352.506 ns/op [Average]
  (min, avg, max) = (112972.067, 114063.016, 115352.390), stdev = 870.635
  CI (99.9%): [110710.511, 117415.522] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 46.92% complete, ETA 01:18:00
# Fork: 1 of 1
# Warmup Iteration   1: 470408.033 ns/op
# Warmup Iteration   2: 270517.245 ns/op
# Warmup Iteration   3: 260431.662 ns/op
# Warmup Iteration   4: 258707.942 ns/op
# Warmup Iteration   5: 258032.453 ns/op
Iteration   1: 260878.470 ns/op
Iteration   2: 263433.395 ns/op
Iteration   3: 267452.108 ns/op
Iteration   4: 258800.481 ns/op
Iteration   5: 260806.449 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  262274.180 ±(99.9%) 12818.009 ns/op [Average]
  (min, avg, max) = (258800.481, 262274.180, 267452.108), stdev = 3328.796
  CI (99.9%): [249456.172, 275092.189] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 47.18% complete, ETA 01:17:38
# Fork: 1 of 1
# Warmup Iteration   1: 4394441.165 ns/op
# Warmup Iteration   2: 2878408.808 ns/op
# Warmup Iteration   3: 2710066.368 ns/op
# Warmup Iteration   4: 2786052.879 ns/op
# Warmup Iteration   5: 2684525.432 ns/op
Iteration   1: 2688111.816 ns/op
Iteration   2: 2723900.885 ns/op
Iteration   3: 2677835.046 ns/op
Iteration   4: 2695014.164 ns/op
Iteration   5: 2696995.642 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2696371.510 ±(99.9%) 65910.199 ns/op [Average]
  (min, avg, max) = (2677835.046, 2696371.510, 2723900.885), stdev = 17116.669
  CI (99.9%): [2630461.312, 2762281.709] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 47.44% complete, ETA 01:17:16
# Fork: 1 of 1
# Warmup Iteration   1: 27140.451 ns/op
# Warmup Iteration   2: 18618.171 ns/op
# Warmup Iteration   3: 16131.650 ns/op
# Warmup Iteration   4: 16083.160 ns/op
# Warmup Iteration   5: 16046.523 ns/op
Iteration   1: 16086.636 ns/op
Iteration   2: 16105.546 ns/op
Iteration   3: 16123.065 ns/op
Iteration   4: 16099.033 ns/op
Iteration   5: 16120.088 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  16106.874 ±(99.9%) 58.066 ns/op [Average]
  (min, avg, max) = (16086.636, 16106.874, 16123.065), stdev = 15.080
  CI (99.9%): [16048.807, 16164.940] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 47.69% complete, ETA 01:16:53
# Fork: 1 of 1
# Warmup Iteration   1: 63220.330 ns/op
# Warmup Iteration   2: 38312.198 ns/op
# Warmup Iteration   3: 37899.258 ns/op
# Warmup Iteration   4: 37855.812 ns/op
# Warmup Iteration   5: 35344.883 ns/op
Iteration   1: 35401.753 ns/op
Iteration   2: 35546.657 ns/op
Iteration   3: 36349.034 ns/op
Iteration   4: 35660.956 ns/op
Iteration   5: 35571.239 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  35705.928 ±(99.9%) 1429.983 ns/op [Average]
  (min, avg, max) = (35401.753, 35705.928, 36349.034), stdev = 371.362
  CI (99.9%): [34275.945, 37135.911] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 47.95% complete, ETA 01:16:30
# Fork: 1 of 1
# Warmup Iteration   1: 107160.835 ns/op
# Warmup Iteration   2: 79179.038 ns/op
# Warmup Iteration   3: 81108.592 ns/op
# Warmup Iteration   4: 77892.722 ns/op
# Warmup Iteration   5: 77691.283 ns/op
Iteration   1: 76568.410 ns/op
Iteration   2: 77205.215 ns/op
Iteration   3: 76948.291 ns/op
Iteration   4: 78486.378 ns/op
Iteration   5: 77624.594 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  77366.578 ±(99.9%) 2828.716 ns/op [Average]
  (min, avg, max) = (76568.410, 77366.578, 78486.378), stdev = 734.609
  CI (99.9%): [74537.862, 80195.294] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 48.21% complete, ETA 01:16:08
# Fork: 1 of 1
# Warmup Iteration   1: 270188.863 ns/op
# Warmup Iteration   2: 166547.778 ns/op
# Warmup Iteration   3: 161262.782 ns/op
# Warmup Iteration   4: 161508.799 ns/op
# Warmup Iteration   5: 161306.339 ns/op
Iteration   1: 160485.289 ns/op
Iteration   2: 164537.519 ns/op
Iteration   3: 159781.529 ns/op
Iteration   4: 159831.821 ns/op
Iteration   5: 159892.795 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  160905.791 ±(99.9%) 7893.775 ns/op [Average]
  (min, avg, max) = (159781.529, 160905.791, 164537.519), stdev = 2049.988
  CI (99.9%): [153012.016, 168799.565] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 48.46% complete, ETA 01:15:45
# Fork: 1 of 1
# Warmup Iteration   1: 2270061.832 ns/op
# Warmup Iteration   2: 1660726.288 ns/op
# Warmup Iteration   3: 1658302.631 ns/op
# Warmup Iteration   4: 1680380.583 ns/op
# Warmup Iteration   5: 1650016.849 ns/op
Iteration   1: 1619771.777 ns/op
Iteration   2: 1627328.375 ns/op
Iteration   3: 1666071.863 ns/op
Iteration   4: 1630044.490 ns/op
Iteration   5: 1607264.989 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  1630096.299 ±(99.9%) 84577.746 ns/op [Average]
  (min, avg, max) = (1607264.989, 1630096.299, 1666071.863), stdev = 21964.572
  CI (99.9%): [1545518.553, 1714674.045] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 48.72% complete, ETA 01:15:22
# Fork: 1 of 1
# Warmup Iteration   1: 14142.626 ns/op
# Warmup Iteration   2: 9917.297 ns/op
# Warmup Iteration   3: 9492.570 ns/op
# Warmup Iteration   4: 9504.938 ns/op
# Warmup Iteration   5: 9477.561 ns/op
Iteration   1: 9571.658 ns/op
Iteration   2: 9473.309 ns/op
Iteration   3: 9564.950 ns/op
Iteration   4: 9493.090 ns/op
Iteration   5: 9502.736 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9521.149 ±(99.9%) 170.959 ns/op [Average]
  (min, avg, max) = (9473.309, 9521.149, 9571.658), stdev = 44.398
  CI (99.9%): [9350.189, 9692.108] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 48.97% complete, ETA 01:15:00
# Fork: 1 of 1
# Warmup Iteration   1: 23915.090 ns/op
# Warmup Iteration   2: 15063.182 ns/op
# Warmup Iteration   3: 14542.615 ns/op
# Warmup Iteration   4: 14579.527 ns/op
# Warmup Iteration   5: 14561.002 ns/op
Iteration   1: 14727.312 ns/op
Iteration   2: 14582.356 ns/op
Iteration   3: 14589.069 ns/op
Iteration   4: 14540.855 ns/op
Iteration   5: 14627.309 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  14613.380 ±(99.9%) 272.199 ns/op [Average]
  (min, avg, max) = (14540.855, 14613.380, 14727.312), stdev = 70.689
  CI (99.9%): [14341.181, 14885.579] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 49.23% complete, ETA 01:14:37
# Fork: 1 of 1
# Warmup Iteration   1: 41529.400 ns/op
# Warmup Iteration   2: 37937.582 ns/op
# Warmup Iteration   3: 31831.201 ns/op
# Warmup Iteration   4: 29699.638 ns/op
# Warmup Iteration   5: 31499.660 ns/op
Iteration   1: 30199.019 ns/op
Iteration   2: 29730.414 ns/op
Iteration   3: 29801.524 ns/op
Iteration   4: 29536.573 ns/op
Iteration   5: 29867.268 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  29826.960 ±(99.9%) 932.034 ns/op [Average]
  (min, avg, max) = (29536.573, 29826.960, 30199.019), stdev = 242.046
  CI (99.9%): [28894.926, 30758.994] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 49.49% complete, ETA 01:14:15
# Fork: 1 of 1
# Warmup Iteration   1: 137899.997 ns/op
# Warmup Iteration   2: 94872.264 ns/op
# Warmup Iteration   3: 94849.128 ns/op
# Warmup Iteration   4: 94981.741 ns/op
# Warmup Iteration   5: 95087.812 ns/op
Iteration   1: 94695.974 ns/op
Iteration   2: 94157.748 ns/op
Iteration   3: 94338.967 ns/op
Iteration   4: 94115.554 ns/op
Iteration   5: 98263.941 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  95114.437 ±(99.9%) 6836.619 ns/op [Average]
  (min, avg, max) = (94115.554, 95114.437, 98263.941), stdev = 1775.448
  CI (99.9%): [88277.818, 101951.056] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 49.74% complete, ETA 01:13:52
# Fork: 1 of 1
# Warmup Iteration   1: 1242343.544 ns/op
# Warmup Iteration   2: 916261.014 ns/op
# Warmup Iteration   3: 918746.390 ns/op
# Warmup Iteration   4: 938648.496 ns/op
# Warmup Iteration   5: 900280.164 ns/op
Iteration   1: 911882.771 ns/op
Iteration   2: 897285.855 ns/op
Iteration   3: 899059.501 ns/op
Iteration   4: 903639.179 ns/op
Iteration   5: 898281.598 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  902029.781 ±(99.9%) 23187.772 ns/op [Average]
  (min, avg, max) = (897285.855, 902029.781, 911882.771), stdev = 6021.791
  CI (99.9%): [878842.009, 925217.552] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 50.00% complete, ETA 01:13:30
# Fork: 1 of 1
# Warmup Iteration   1: 64912.900 ns/op
# Warmup Iteration   2: 17054.519 ns/op
# Warmup Iteration   3: 16337.145 ns/op
# Warmup Iteration   4: 15974.855 ns/op
# Warmup Iteration   5: 15951.218 ns/op
Iteration   1: 15927.614 ns/op
Iteration   2: 16141.311 ns/op
Iteration   3: 15924.197 ns/op
Iteration   4: 16070.279 ns/op
Iteration   5: 16172.675 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  16047.215 ±(99.9%) 449.735 ns/op [Average]
  (min, avg, max) = (15924.197, 16047.215, 16172.675), stdev = 116.795
  CI (99.9%): [15597.480, 16496.951] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 50.26% complete, ETA 01:13:07
# Fork: 1 of 1
# Warmup Iteration   1: 156810.870 ns/op
# Warmup Iteration   2: 38461.427 ns/op
# Warmup Iteration   3: 31026.594 ns/op
# Warmup Iteration   4: 29691.370 ns/op
# Warmup Iteration   5: 29807.949 ns/op
Iteration   1: 29694.309 ns/op
Iteration   2: 29690.907 ns/op
Iteration   3: 29743.287 ns/op
Iteration   4: 29643.139 ns/op
Iteration   5: 30005.142 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  29755.357 ±(99.9%) 554.720 ns/op [Average]
  (min, avg, max) = (29643.139, 29755.357, 30005.142), stdev = 144.059
  CI (99.9%): [29200.637, 30310.076] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 50.51% complete, ETA 01:12:44
# Fork: 1 of 1
# Warmup Iteration   1: 452072.193 ns/op
# Warmup Iteration   2: 97366.423 ns/op
# Warmup Iteration   3: 57200.757 ns/op
# Warmup Iteration   4: 56654.703 ns/op
# Warmup Iteration   5: 55719.012 ns/op
Iteration   1: 55446.380 ns/op
Iteration   2: 55436.747 ns/op
Iteration   3: 55476.745 ns/op
Iteration   4: 55398.869 ns/op
Iteration   5: 55571.155 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  55465.979 ±(99.9%) 250.442 ns/op [Average]
  (min, avg, max) = (55398.869, 55465.979, 55571.155), stdev = 65.039
  CI (99.9%): [55215.537, 55716.421] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 50.77% complete, ETA 01:12:21
# Fork: 1 of 1
# Warmup Iteration   1: 592148.710 ns/op
# Warmup Iteration   2: 279649.501 ns/op
# Warmup Iteration   3: 134541.640 ns/op
# Warmup Iteration   4: 115866.760 ns/op
# Warmup Iteration   5: 115470.817 ns/op
Iteration   1: 118594.424 ns/op
Iteration   2: 114710.230 ns/op
Iteration   3: 114746.168 ns/op
Iteration   4: 114689.013 ns/op
Iteration   5: 116018.893 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  115751.745 ±(99.9%) 6494.225 ns/op [Average]
  (min, avg, max) = (114689.013, 115751.745, 118594.424), stdev = 1686.530
  CI (99.9%): [109257.520, 122245.971] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 51.03% complete, ETA 01:11:59
# Fork: 1 of 1
# Warmup Iteration   1: 2088047.984 ns/op
# Warmup Iteration   2: 894271.652 ns/op
# Warmup Iteration   3: 885509.188 ns/op
# Warmup Iteration   4: 888106.110 ns/op
# Warmup Iteration   5: 863791.106 ns/op
Iteration   1: 862758.938 ns/op
Iteration   2: 861529.065 ns/op
Iteration   3: 860268.772 ns/op
Iteration   4: 863340.856 ns/op
Iteration   5: 862754.211 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  862130.368 ±(99.9%) 4746.090 ns/op [Average]
  (min, avg, max) = (860268.772, 862130.368, 863340.856), stdev = 1232.545
  CI (99.9%): [857384.278, 866876.459] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 51.28% complete, ETA 01:11:36
# Fork: 1 of 1
# Warmup Iteration   1: 80956.994 ns/op
# Warmup Iteration   2: 13619.188 ns/op
# Warmup Iteration   3: 12726.530 ns/op
# Warmup Iteration   4: 12331.052 ns/op
# Warmup Iteration   5: 12331.253 ns/op
Iteration   1: 12357.230 ns/op
Iteration   2: 12373.141 ns/op
Iteration   3: 12550.762 ns/op
Iteration   4: 12359.817 ns/op
Iteration   5: 12434.154 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  12415.021 ±(99.9%) 315.970 ns/op [Average]
  (min, avg, max) = (12357.230, 12415.021, 12550.762), stdev = 82.056
  CI (99.9%): [12099.051, 12730.990] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 51.54% complete, ETA 01:11:13
# Fork: 1 of 1
# Warmup Iteration   1: 146868.845 ns/op
# Warmup Iteration   2: 30112.939 ns/op
# Warmup Iteration   3: 22516.833 ns/op
# Warmup Iteration   4: 21590.293 ns/op
# Warmup Iteration   5: 21613.397 ns/op
Iteration   1: 21652.332 ns/op
Iteration   2: 21998.130 ns/op
Iteration   3: 21547.590 ns/op
Iteration   4: 21486.599 ns/op
Iteration   5: 21556.923 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  21648.315 ±(99.9%) 786.881 ns/op [Average]
  (min, avg, max) = (21486.599, 21648.315, 21998.130), stdev = 204.350
  CI (99.9%): [20861.434, 22435.196] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 51.79% complete, ETA 01:10:51
# Fork: 1 of 1
# Warmup Iteration   1: 129453.313 ns/op
# Warmup Iteration   2: 50155.600 ns/op
# Warmup Iteration   3: 42340.839 ns/op
# Warmup Iteration   4: 41193.709 ns/op
# Warmup Iteration   5: 41084.180 ns/op
Iteration   1: 41092.770 ns/op
Iteration   2: 41145.042 ns/op
Iteration   3: 41130.022 ns/op
Iteration   4: 41182.240 ns/op
Iteration   5: 41144.396 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  41138.894 ±(99.9%) 124.077 ns/op [Average]
  (min, avg, max) = (41092.770, 41138.894, 41182.240), stdev = 32.222
  CI (99.9%): [41014.817, 41262.971] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 52.05% complete, ETA 01:10:28
# Fork: 1 of 1
# Warmup Iteration   1: 329130.193 ns/op
# Warmup Iteration   2: 98506.861 ns/op
# Warmup Iteration   3: 88020.023 ns/op
# Warmup Iteration   4: 86617.586 ns/op
# Warmup Iteration   5: 86168.380 ns/op
Iteration   1: 86490.171 ns/op
Iteration   2: 86405.967 ns/op
Iteration   3: 85540.335 ns/op
Iteration   4: 86144.789 ns/op
Iteration   5: 85468.929 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  86010.038 ±(99.9%) 1845.565 ns/op [Average]
  (min, avg, max) = (85468.929, 86010.038, 86490.171), stdev = 479.287
  CI (99.9%): [84164.474, 87855.603] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 52.31% complete, ETA 01:10:05
# Fork: 1 of 1
# Warmup Iteration   1: 1427586.293 ns/op
# Warmup Iteration   2: 669265.019 ns/op
# Warmup Iteration   3: 660157.606 ns/op
# Warmup Iteration   4: 637582.617 ns/op
# Warmup Iteration   5: 637015.673 ns/op
Iteration   1: 635291.005 ns/op
Iteration   2: 634992.665 ns/op
Iteration   3: 636720.344 ns/op
Iteration   4: 634127.292 ns/op
Iteration   5: 633810.011 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  634988.263 ±(99.9%) 4399.403 ns/op [Average]
  (min, avg, max) = (633810.011, 634988.263, 636720.344), stdev = 1142.511
  CI (99.9%): [630588.860, 639387.667] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 52.56% complete, ETA 01:09:43
# Fork: 1 of 1
# Warmup Iteration   1: 56944.780 ns/op
# Warmup Iteration   2: 14880.065 ns/op
# Warmup Iteration   3: 14314.597 ns/op
# Warmup Iteration   4: 14184.905 ns/op
# Warmup Iteration   5: 14128.036 ns/op
Iteration   1: 14115.458 ns/op
Iteration   2: 14116.799 ns/op
Iteration   3: 14134.826 ns/op
Iteration   4: 14189.562 ns/op
Iteration   5: 15051.332 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14321.595 ±(99.9%) 1575.078 ns/op [Average]
  (min, avg, max) = (14115.458, 14321.595, 15051.332), stdev = 409.043
  CI (99.9%): [12746.517, 15896.674] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 52.82% complete, ETA 01:09:20
# Fork: 1 of 1
# Warmup Iteration   1: 239979.732 ns/op
# Warmup Iteration   2: 78469.519 ns/op
# Warmup Iteration   3: 28950.600 ns/op
# Warmup Iteration   4: 23146.639 ns/op
# Warmup Iteration   5: 22937.164 ns/op
Iteration   1: 23047.787 ns/op
Iteration   2: 22966.461 ns/op
Iteration   3: 22944.652 ns/op
Iteration   4: 22960.564 ns/op
Iteration   5: 22954.714 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  22974.836 ±(99.9%) 160.064 ns/op [Average]
  (min, avg, max) = (22944.652, 22974.836, 23047.787), stdev = 41.568
  CI (99.9%): [22814.772, 23134.900] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 53.08% complete, ETA 01:08:57
# Fork: 1 of 1
# Warmup Iteration   1: 603818.175 ns/op
# Warmup Iteration   2: 259585.504 ns/op
# Warmup Iteration   3: 85927.358 ns/op
# Warmup Iteration   4: 59892.839 ns/op
# Warmup Iteration   5: 43039.411 ns/op
Iteration   1: 42132.439 ns/op
Iteration   2: 43319.846 ns/op
Iteration   3: 42066.933 ns/op
Iteration   4: 43401.080 ns/op
Iteration   5: 42056.773 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  42595.414 ±(99.9%) 2693.848 ns/op [Average]
  (min, avg, max) = (42056.773, 42595.414, 43401.080), stdev = 699.584
  CI (99.9%): [39901.566, 45289.262] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 53.33% complete, ETA 01:08:35
# Fork: 1 of 1
# Warmup Iteration   1: 655731.283 ns/op
# Warmup Iteration   2: 160123.904 ns/op
# Warmup Iteration   3: 90680.589 ns/op
# Warmup Iteration   4: 80809.369 ns/op
# Warmup Iteration   5: 80153.357 ns/op
Iteration   1: 80999.720 ns/op
Iteration   2: 79071.846 ns/op
Iteration   3: 78951.698 ns/op
Iteration   4: 78942.683 ns/op
Iteration   5: 80218.797 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  79636.949 ±(99.9%) 3584.724 ns/op [Average]
  (min, avg, max) = (78942.683, 79636.949, 80999.720), stdev = 930.942
  CI (99.9%): [76052.224, 83221.673] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 53.59% complete, ETA 01:08:12
# Fork: 1 of 1
# Warmup Iteration   1: 5279010.638 ns/op
# Warmup Iteration   2: 702670.836 ns/op
# Warmup Iteration   3: 603672.961 ns/op
# Warmup Iteration   4: 585584.659 ns/op
# Warmup Iteration   5: 592801.041 ns/op
Iteration   1: 580299.167 ns/op
Iteration   2: 579712.620 ns/op
Iteration   3: 581317.139 ns/op
Iteration   4: 581712.468 ns/op
Iteration   5: 589425.986 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  582493.476 ±(99.9%) 15233.372 ns/op [Average]
  (min, avg, max) = (579712.620, 582493.476, 589425.986), stdev = 3956.058
  CI (99.9%): [567260.104, 597726.848] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 53.85% complete, ETA 01:07:50
# Fork: 1 of 1
# Warmup Iteration   1: 39842.113 ns/op
# Warmup Iteration   2: 9615.627 ns/op
# Warmup Iteration   3: 9223.892 ns/op
# Warmup Iteration   4: 9064.696 ns/op
# Warmup Iteration   5: 9114.094 ns/op
Iteration   1: 9053.806 ns/op
Iteration   2: 9060.134 ns/op
Iteration   3: 9070.959 ns/op
Iteration   4: 9057.603 ns/op
Iteration   5: 9040.404 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  9056.581 ±(99.9%) 42.611 ns/op [Average]
  (min, avg, max) = (9040.404, 9056.581, 9070.959), stdev = 11.066
  CI (99.9%): [9013.970, 9099.192] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 54.10% complete, ETA 01:07:27
# Fork: 1 of 1
# Warmup Iteration   1: 77608.879 ns/op
# Warmup Iteration   2: 34950.976 ns/op
# Warmup Iteration   3: 16867.829 ns/op
# Warmup Iteration   4: 16504.282 ns/op
# Warmup Iteration   5: 16537.766 ns/op
Iteration   1: 16508.928 ns/op
Iteration   2: 16491.211 ns/op
Iteration   3: 16620.152 ns/op
Iteration   4: 16754.033 ns/op
Iteration   5: 16554.538 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  16585.772 ±(99.9%) 409.854 ns/op [Average]
  (min, avg, max) = (16491.211, 16585.772, 16754.033), stdev = 106.438
  CI (99.9%): [16175.918, 16995.627] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 54.36% complete, ETA 01:07:04
# Fork: 1 of 1
# Warmup Iteration   1: 123338.559 ns/op
# Warmup Iteration   2: 58673.549 ns/op
# Warmup Iteration   3: 28281.892 ns/op
# Warmup Iteration   4: 27032.271 ns/op
# Warmup Iteration   5: 26777.702 ns/op
Iteration   1: 26759.449 ns/op
Iteration   2: 26772.159 ns/op
Iteration   3: 26824.436 ns/op
Iteration   4: 26701.637 ns/op
Iteration   5: 27050.558 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  26821.648 ±(99.9%) 520.650 ns/op [Average]
  (min, avg, max) = (26701.637, 26821.648, 27050.558), stdev = 135.211
  CI (99.9%): [26300.998, 27342.298] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 54.62% complete, ETA 01:06:42
# Fork: 1 of 1
# Warmup Iteration   1: 240265.330 ns/op
# Warmup Iteration   2: 79728.294 ns/op
# Warmup Iteration   3: 47943.718 ns/op
# Warmup Iteration   4: 48060.722 ns/op
# Warmup Iteration   5: 46892.184 ns/op
Iteration   1: 46820.350 ns/op
Iteration   2: 46887.959 ns/op
Iteration   3: 46796.752 ns/op
Iteration   4: 46790.478 ns/op
Iteration   5: 47034.698 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  46866.047 ±(99.9%) 392.331 ns/op [Average]
  (min, avg, max) = (46790.478, 46866.047, 47034.698), stdev = 101.887
  CI (99.9%): [46473.716, 47258.379] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 54.87% complete, ETA 01:06:19
# Fork: 1 of 1
# Warmup Iteration   1: 953090.699 ns/op
# Warmup Iteration   2: 371086.627 ns/op
# Warmup Iteration   3: 299262.137 ns/op
# Warmup Iteration   4: 291402.175 ns/op
# Warmup Iteration   5: 291752.627 ns/op
Iteration   1: 293802.858 ns/op
Iteration   2: 295549.795 ns/op
Iteration   3: 294740.798 ns/op
Iteration   4: 289899.321 ns/op
Iteration   5: 291018.171 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  293002.189 ±(99.9%) 9376.583 ns/op [Average]
  (min, avg, max) = (289899.321, 293002.189, 295549.795), stdev = 2435.069
  CI (99.9%): [283625.605, 302378.772] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 55.13% complete, ETA 01:05:56
# Fork: 1 of 1
# Warmup Iteration   1: 51727.410 ns/op
# Warmup Iteration   2: 8691.913 ns/op
# Warmup Iteration   3: 7068.846 ns/op
# Warmup Iteration   4: 6953.326 ns/op
# Warmup Iteration   5: 6992.238 ns/op
Iteration   1: 6983.442 ns/op
Iteration   2: 6965.416 ns/op
Iteration   3: 7000.896 ns/op
Iteration   4: 6956.428 ns/op
Iteration   5: 7164.954 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  7014.227 ±(99.9%) 331.062 ns/op [Average]
  (min, avg, max) = (6956.428, 7014.227, 7164.954), stdev = 85.976
  CI (99.9%): [6683.165, 7345.289] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 55.38% complete, ETA 01:05:34
# Fork: 1 of 1
# Warmup Iteration   1: 99119.704 ns/op
# Warmup Iteration   2: 21353.489 ns/op
# Warmup Iteration   3: 13427.015 ns/op
# Warmup Iteration   4: 13533.413 ns/op
# Warmup Iteration   5: 13313.450 ns/op
Iteration   1: 13305.818 ns/op
Iteration   2: 13478.375 ns/op
Iteration   3: 13302.043 ns/op
Iteration   4: 13304.079 ns/op
Iteration   5: 13344.356 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13346.934 ±(99.9%) 290.880 ns/op [Average]
  (min, avg, max) = (13302.043, 13346.934, 13478.375), stdev = 75.541
  CI (99.9%): [13056.054, 13637.814] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 55.64% complete, ETA 01:05:11
# Fork: 1 of 1
# Warmup Iteration   1: 153448.234 ns/op
# Warmup Iteration   2: 36286.892 ns/op
# Warmup Iteration   3: 21776.059 ns/op
# Warmup Iteration   4: 21462.148 ns/op
# Warmup Iteration   5: 21521.109 ns/op
Iteration   1: 21672.237 ns/op
Iteration   2: 21423.164 ns/op
Iteration   3: 21904.503 ns/op
Iteration   4: 21421.700 ns/op
Iteration   5: 21473.712 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  21579.063 ±(99.9%) 804.864 ns/op [Average]
  (min, avg, max) = (21421.700, 21579.063, 21904.503), stdev = 209.021
  CI (99.9%): [20774.199, 22383.927] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 55.90% complete, ETA 01:04:48
# Fork: 1 of 1
# Warmup Iteration   1: 319775.687 ns/op
# Warmup Iteration   2: 83060.208 ns/op
# Warmup Iteration   3: 47107.651 ns/op
# Warmup Iteration   4: 47390.369 ns/op
# Warmup Iteration   5: 45347.507 ns/op
Iteration   1: 46152.933 ns/op
Iteration   2: 45290.014 ns/op
Iteration   3: 45821.257 ns/op
Iteration   4: 45978.055 ns/op
Iteration   5: 45612.859 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  45771.024 ±(99.9%) 1288.134 ns/op [Average]
  (min, avg, max) = (45290.014, 45771.024, 46152.933), stdev = 334.524
  CI (99.9%): [44482.890, 47059.157] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 56.15% complete, ETA 01:04:26
# Fork: 1 of 1
# Warmup Iteration   1: 1810134.969 ns/op
# Warmup Iteration   2: 560967.456 ns/op
# Warmup Iteration   3: 374719.458 ns/op
# Warmup Iteration   4: 356432.645 ns/op
# Warmup Iteration   5: 347866.097 ns/op
Iteration   1: 346528.753 ns/op
Iteration   2: 346782.452 ns/op
Iteration   3: 349415.287 ns/op
Iteration   4: 346200.971 ns/op
Iteration   5: 346353.205 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  347056.134 ±(99.9%) 5146.069 ns/op [Average]
  (min, avg, max) = (346200.971, 347056.134, 349415.287), stdev = 1336.418
  CI (99.9%): [341910.064, 352202.203] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 56.41% complete, ETA 01:04:03
# Fork: 1 of 1
# Warmup Iteration   1: 29778.382 ns/op
# Warmup Iteration   2: 9950.286 ns/op
# Warmup Iteration   3: 9529.498 ns/op
# Warmup Iteration   4: 9530.485 ns/op
# Warmup Iteration   5: 9449.975 ns/op
Iteration   1: 9473.737 ns/op
Iteration   2: 9594.348 ns/op
Iteration   3: 9643.009 ns/op
Iteration   4: 9486.373 ns/op
Iteration   5: 9502.195 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  9539.933 ±(99.9%) 287.256 ns/op [Average]
  (min, avg, max) = (9473.737, 9539.933, 9643.009), stdev = 74.599
  CI (99.9%): [9252.677, 9827.189] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 56.67% complete, ETA 01:03:40
# Fork: 1 of 1
# Warmup Iteration   1: 64902.836 ns/op
# Warmup Iteration   2: 19232.721 ns/op
# Warmup Iteration   3: 17005.243 ns/op
# Warmup Iteration   4: 16637.570 ns/op
# Warmup Iteration   5: 16596.705 ns/op
Iteration   1: 16738.949 ns/op
Iteration   2: 16620.908 ns/op
Iteration   3: 16604.654 ns/op
Iteration   4: 16609.199 ns/op
Iteration   5: 16781.137 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  16670.969 ±(99.9%) 319.147 ns/op [Average]
  (min, avg, max) = (16604.654, 16670.969, 16781.137), stdev = 82.882
  CI (99.9%): [16351.822, 16990.117] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 56.92% complete, ETA 01:03:18
# Fork: 1 of 1
# Warmup Iteration   1: 99073.477 ns/op
# Warmup Iteration   2: 33907.645 ns/op
# Warmup Iteration   3: 31559.039 ns/op
# Warmup Iteration   4: 30886.559 ns/op
# Warmup Iteration   5: 30764.532 ns/op
Iteration   1: 30722.600 ns/op
Iteration   2: 30746.990 ns/op
Iteration   3: 31448.673 ns/op
Iteration   4: 32075.914 ns/op
Iteration   5: 30713.137 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  31141.463 ±(99.9%) 2343.913 ns/op [Average]
  (min, avg, max) = (30713.137, 31141.463, 32075.914), stdev = 608.707
  CI (99.9%): [28797.550, 33485.376] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 57.18% complete, ETA 01:02:55
# Fork: 1 of 1
# Warmup Iteration   1: 188530.895 ns/op
# Warmup Iteration   2: 70975.081 ns/op
# Warmup Iteration   3: 64753.700 ns/op
# Warmup Iteration   4: 65483.660 ns/op
# Warmup Iteration   5: 66758.215 ns/op
Iteration   1: 64519.200 ns/op
Iteration   2: 64393.224 ns/op
Iteration   3: 66039.199 ns/op
Iteration   4: 64490.096 ns/op
Iteration   5: 64815.595 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  64851.463 ±(99.9%) 2627.886 ns/op [Average]
  (min, avg, max) = (64393.224, 64851.463, 66039.199), stdev = 682.454
  CI (99.9%): [62223.577, 67479.349] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 57.44% complete, ETA 01:02:32
# Fork: 1 of 1
# Warmup Iteration   1: 1414086.605 ns/op
# Warmup Iteration   2: 639567.897 ns/op
# Warmup Iteration   3: 562961.027 ns/op
# Warmup Iteration   4: 556597.053 ns/op
# Warmup Iteration   5: 550783.938 ns/op
Iteration   1: 550925.577 ns/op
Iteration   2: 550421.045 ns/op
Iteration   3: 553823.785 ns/op
Iteration   4: 564137.049 ns/op
Iteration   5: 565277.051 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  556916.901 ±(99.9%) 27879.441 ns/op [Average]
  (min, avg, max) = (550421.045, 556916.901, 565277.051), stdev = 7240.202
  CI (99.9%): [529037.460, 584796.343] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 57.69% complete, ETA 01:02:10
# Fork: 1 of 1
# Warmup Iteration   1: 505658.953 ns/op
# Warmup Iteration   2: 187124.659 ns/op
# Warmup Iteration   3: 129389.434 ns/op
# Warmup Iteration   4: 127836.881 ns/op
# Warmup Iteration   5: 127270.272 ns/op
Iteration   1: 127442.970 ns/op
Iteration   2: 126261.547 ns/op
Iteration   3: 127511.328 ns/op
Iteration   4: 125884.509 ns/op
Iteration   5: 126478.533 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  126715.777 ±(99.9%) 2800.220 ns/op [Average]
  (min, avg, max) = (125884.509, 126715.777, 127511.328), stdev = 727.208
  CI (99.9%): [123915.557, 129515.998] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 57.95% complete, ETA 01:01:47
# Fork: 1 of 1
# Warmup Iteration   1: 656786.089 ns/op
# Warmup Iteration   2: 228567.679 ns/op
# Warmup Iteration   3: 175053.448 ns/op
# Warmup Iteration   4: 175105.904 ns/op
# Warmup Iteration   5: 171456.405 ns/op
Iteration   1: 170957.164 ns/op
Iteration   2: 170096.684 ns/op
Iteration   3: 174494.947 ns/op
Iteration   4: 169765.019 ns/op
Iteration   5: 169347.004 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  170932.163 ±(99.9%) 8000.409 ns/op [Average]
  (min, avg, max) = (169347.004, 170932.163, 174494.947), stdev = 2077.681
  CI (99.9%): [162931.754, 178932.573] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 58.21% complete, ETA 01:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 773556.155 ns/op
# Warmup Iteration   2: 294735.613 ns/op
# Warmup Iteration   3: 233328.241 ns/op
# Warmup Iteration   4: 230857.585 ns/op
# Warmup Iteration   5: 230215.045 ns/op
Iteration   1: 229480.456 ns/op
Iteration   2: 228564.048 ns/op
Iteration   3: 229723.154 ns/op
Iteration   4: 227949.842 ns/op
Iteration   5: 228190.245 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  228781.549 ±(99.9%) 3022.066 ns/op [Average]
  (min, avg, max) = (227949.842, 228781.549, 229723.154), stdev = 784.821
  CI (99.9%): [225759.483, 231803.615] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 58.46% complete, ETA 01:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 1279488.545 ns/op
# Warmup Iteration   2: 417000.212 ns/op
# Warmup Iteration   3: 368871.259 ns/op
# Warmup Iteration   4: 361078.395 ns/op
# Warmup Iteration   5: 356416.980 ns/op
Iteration   1: 355576.193 ns/op
Iteration   2: 354057.746 ns/op
Iteration   3: 357227.551 ns/op
Iteration   4: 355036.174 ns/op
Iteration   5: 370880.019 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  358555.537 ±(99.9%) 26895.924 ns/op [Average]
  (min, avg, max) = (354057.746, 358555.537, 370880.019), stdev = 6984.786
  CI (99.9%): [331659.613, 385451.460] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 58.72% complete, ETA 01:00:39
# Fork: 1 of 1
# Warmup Iteration   1: 6600510.690 ns/op
# Warmup Iteration   2: 2563293.994 ns/op
# Warmup Iteration   3: 2179386.910 ns/op
# Warmup Iteration   4: 2221873.239 ns/op
# Warmup Iteration   5: 2176406.165 ns/op
Iteration   1: 2164716.267 ns/op
Iteration   2: 2170783.046 ns/op
Iteration   3: 2139769.010 ns/op
Iteration   4: 2140493.576 ns/op
Iteration   5: 2135147.606 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  2150181.901 ±(99.9%) 62801.420 ns/op [Average]
  (min, avg, max) = (2135147.606, 2150181.901, 2170783.046), stdev = 16309.329
  CI (99.9%): [2087380.481, 2212983.321] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 58.97% complete, ETA 01:00:16
# Fork: 1 of 1
# Warmup Iteration   1: 14514.020 ns/op
# Warmup Iteration   2: 4514.229 ns/op
# Warmup Iteration   3: 4432.549 ns/op
# Warmup Iteration   4: 4434.708 ns/op
# Warmup Iteration   5: 4417.498 ns/op
Iteration   1: 4414.251 ns/op
Iteration   2: 4511.276 ns/op
Iteration   3: 4417.034 ns/op
Iteration   4: 4440.629 ns/op
Iteration   5: 4424.955 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  4441.629 ±(99.9%) 155.036 ns/op [Average]
  (min, avg, max) = (4414.251, 4441.629, 4511.276), stdev = 40.262
  CI (99.9%): [4286.593, 4596.665] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 59.23% complete, ETA 00:59:54
# Fork: 1 of 1
# Warmup Iteration   1: 21255.676 ns/op
# Warmup Iteration   2: 8222.539 ns/op
# Warmup Iteration   3: 7976.735 ns/op
# Warmup Iteration   4: 8011.780 ns/op
# Warmup Iteration   5: 8284.707 ns/op
Iteration   1: 8281.066 ns/op
Iteration   2: 7955.728 ns/op
Iteration   3: 7973.649 ns/op
Iteration   4: 7974.560 ns/op
Iteration   5: 8054.036 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8047.808 ±(99.9%) 523.007 ns/op [Average]
  (min, avg, max) = (7955.728, 8047.808, 8281.066), stdev = 135.823
  CI (99.9%): [7524.801, 8570.814] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 59.49% complete, ETA 00:59:31
# Fork: 1 of 1
# Warmup Iteration   1: 35935.785 ns/op
# Warmup Iteration   2: 15184.620 ns/op
# Warmup Iteration   3: 14437.200 ns/op
# Warmup Iteration   4: 14280.972 ns/op
# Warmup Iteration   5: 14294.863 ns/op
Iteration   1: 14386.808 ns/op
Iteration   2: 14388.304 ns/op
Iteration   3: 14300.067 ns/op
Iteration   4: 14309.774 ns/op
Iteration   5: 14276.862 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14332.363 ±(99.9%) 199.411 ns/op [Average]
  (min, avg, max) = (14276.862, 14332.363, 14388.304), stdev = 51.786
  CI (99.9%): [14132.953, 14531.774] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 59.74% complete, ETA 00:59:09
# Fork: 1 of 1
# Warmup Iteration   1: 74961.787 ns/op
# Warmup Iteration   2: 29784.159 ns/op
# Warmup Iteration   3: 27046.291 ns/op
# Warmup Iteration   4: 26629.383 ns/op
# Warmup Iteration   5: 26508.094 ns/op
Iteration   1: 26700.892 ns/op
Iteration   2: 26649.321 ns/op
Iteration   3: 26758.582 ns/op
Iteration   4: 26583.464 ns/op
Iteration   5: 26895.786 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  26717.609 ±(99.9%) 457.090 ns/op [Average]
  (min, avg, max) = (26583.464, 26717.609, 26895.786), stdev = 118.705
  CI (99.9%): [26260.519, 27174.699] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 60.00% complete, ETA 00:58:46
# Fork: 1 of 1
# Warmup Iteration   1: 509132.762 ns/op
# Warmup Iteration   2: 281529.542 ns/op
# Warmup Iteration   3: 248123.884 ns/op
# Warmup Iteration   4: 244182.652 ns/op
# Warmup Iteration   5: 244198.780 ns/op
Iteration   1: 246938.074 ns/op
Iteration   2: 243851.584 ns/op
Iteration   3: 247753.677 ns/op
Iteration   4: 247099.986 ns/op
Iteration   5: 243901.817 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  245909.028 ±(99.9%) 7240.342 ns/op [Average]
  (min, avg, max) = (243851.584, 245909.028, 247753.677), stdev = 1880.294
  CI (99.9%): [238668.686, 253149.370] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 60.26% complete, ETA 00:58:23
# Fork: 1 of 1
# Warmup Iteration   1: 23957.711 ns/op
# Warmup Iteration   2: 11567.716 ns/op
# Warmup Iteration   3: 11499.350 ns/op
# Warmup Iteration   4: 11768.102 ns/op
# Warmup Iteration   5: 11757.318 ns/op
Iteration   1: 11732.345 ns/op
Iteration   2: 11815.865 ns/op
Iteration   3: 11722.298 ns/op
Iteration   4: 11638.044 ns/op
Iteration   5: 11733.145 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  11728.339 ±(99.9%) 242.695 ns/op [Average]
  (min, avg, max) = (11638.044, 11728.339, 11815.865), stdev = 63.027
  CI (99.9%): [11485.645, 11971.034] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 60.51% complete, ETA 00:58:01
# Fork: 1 of 1
# Warmup Iteration   1: 41396.474 ns/op
# Warmup Iteration   2: 20166.900 ns/op
# Warmup Iteration   3: 20172.421 ns/op
# Warmup Iteration   4: 20281.340 ns/op
# Warmup Iteration   5: 20149.577 ns/op
Iteration   1: 20295.604 ns/op
Iteration   2: 20279.750 ns/op
Iteration   3: 20286.071 ns/op
Iteration   4: 20370.405 ns/op
Iteration   5: 20426.795 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  20331.725 ±(99.9%) 248.246 ns/op [Average]
  (min, avg, max) = (20279.750, 20331.725, 20426.795), stdev = 64.469
  CI (99.9%): [20083.479, 20579.971] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 60.77% complete, ETA 00:57:38
# Fork: 1 of 1
# Warmup Iteration   1: 96414.235 ns/op
# Warmup Iteration   2: 35621.829 ns/op
# Warmup Iteration   3: 38669.039 ns/op
# Warmup Iteration   4: 34596.924 ns/op
# Warmup Iteration   5: 34182.277 ns/op
Iteration   1: 34868.427 ns/op
Iteration   2: 34508.760 ns/op
Iteration   3: 34281.812 ns/op
Iteration   4: 34282.594 ns/op
Iteration   5: 34055.624 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  34399.443 ±(99.9%) 1183.091 ns/op [Average]
  (min, avg, max) = (34055.624, 34399.443, 34868.427), stdev = 307.245
  CI (99.9%): [33216.352, 35582.535] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 61.03% complete, ETA 00:57:15
# Fork: 1 of 1
# Warmup Iteration   1: 124106.699 ns/op
# Warmup Iteration   2: 68786.657 ns/op
# Warmup Iteration   3: 65571.698 ns/op
# Warmup Iteration   4: 92595.335 ns/op
# Warmup Iteration   5: 91965.740 ns/op
Iteration   1: 89275.042 ns/op
Iteration   2: 90252.542 ns/op
Iteration   3: 94539.482 ns/op
Iteration   4: 99716.832 ns/op
Iteration   5: 104286.250 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  95614.030 ±(99.9%) 24514.676 ns/op [Average]
  (min, avg, max) = (89275.042, 95614.030, 104286.250), stdev = 6366.384
  CI (99.9%): [71099.353, 120128.706] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 61.28% complete, ETA 00:56:53
# Fork: 1 of 1
# Warmup Iteration   1: 1183109.844 ns/op
# Warmup Iteration   2: 751401.715 ns/op
# Warmup Iteration   3: 774267.135 ns/op
# Warmup Iteration   4: 734163.356 ns/op
# Warmup Iteration   5: 729607.830 ns/op
Iteration   1: 728237.067 ns/op
Iteration   2: 727983.589 ns/op
Iteration   3: 726169.122 ns/op
Iteration   4: 732394.440 ns/op
Iteration   5: 732219.657 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  729400.775 ±(99.9%) 10670.234 ns/op [Average]
  (min, avg, max) = (726169.122, 729400.775, 732394.440), stdev = 2771.026
  CI (99.9%): [718730.541, 740071.010] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 61.54% complete, ETA 00:56:30
# Fork: 1 of 1
# Warmup Iteration   1: 24190.278 ns/op
# Warmup Iteration   2: 6793.806 ns/op
# Warmup Iteration   3: 6610.418 ns/op
# Warmup Iteration   4: 6577.860 ns/op
# Warmup Iteration   5: 6590.841 ns/op
Iteration   1: 6585.564 ns/op
Iteration   2: 6582.089 ns/op
Iteration   3: 6592.839 ns/op
Iteration   4: 6582.676 ns/op
Iteration   5: 6599.516 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  6588.537 ±(99.9%) 28.804 ns/op [Average]
  (min, avg, max) = (6582.089, 6588.537, 6599.516), stdev = 7.480
  CI (99.9%): [6559.733, 6617.341] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 61.79% complete, ETA 00:56:08
# Fork: 1 of 1
# Warmup Iteration   1: 42244.091 ns/op
# Warmup Iteration   2: 14804.460 ns/op
# Warmup Iteration   3: 13703.717 ns/op
# Warmup Iteration   4: 13486.840 ns/op
# Warmup Iteration   5: 13471.405 ns/op
Iteration   1: 13480.430 ns/op
Iteration   2: 13491.620 ns/op
Iteration   3: 13458.913 ns/op
Iteration   4: 13440.536 ns/op
Iteration   5: 13465.309 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13467.362 ±(99.9%) 75.909 ns/op [Average]
  (min, avg, max) = (13440.536, 13467.362, 13491.620), stdev = 19.713
  CI (99.9%): [13391.453, 13543.270] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 62.05% complete, ETA 00:55:45
# Fork: 1 of 1
# Warmup Iteration   1: 87343.695 ns/op
# Warmup Iteration   2: 30218.041 ns/op
# Warmup Iteration   3: 25090.946 ns/op
# Warmup Iteration   4: 24729.957 ns/op
# Warmup Iteration   5: 24741.673 ns/op
Iteration   1: 24744.719 ns/op
Iteration   2: 24914.268 ns/op
Iteration   3: 24927.315 ns/op
Iteration   4: 24927.615 ns/op
Iteration   5: 24740.124 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24850.808 ±(99.9%) 381.610 ns/op [Average]
  (min, avg, max) = (24740.124, 24850.808, 24927.615), stdev = 99.103
  CI (99.9%): [24469.198, 25232.419] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 62.31% complete, ETA 00:55:22
# Fork: 1 of 1
# Warmup Iteration   1: 161229.570 ns/op
# Warmup Iteration   2: 60702.454 ns/op
# Warmup Iteration   3: 50709.410 ns/op
# Warmup Iteration   4: 49073.689 ns/op
# Warmup Iteration   5: 48014.427 ns/op
Iteration   1: 48492.456 ns/op
Iteration   2: 48002.231 ns/op
Iteration   3: 50116.125 ns/op
Iteration   4: 48807.471 ns/op
Iteration   5: 49326.371 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  48948.931 ±(99.9%) 3122.005 ns/op [Average]
  (min, avg, max) = (48002.231, 48948.931, 50116.125), stdev = 810.775
  CI (99.9%): [45826.926, 52070.936] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 62.56% complete, ETA 00:55:00
# Fork: 1 of 1
# Warmup Iteration   1: 727639.208 ns/op
# Warmup Iteration   2: 420458.823 ns/op
# Warmup Iteration   3: 378563.229 ns/op
# Warmup Iteration   4: 366019.778 ns/op
# Warmup Iteration   5: 366836.820 ns/op
Iteration   1: 371157.560 ns/op
Iteration   2: 365587.603 ns/op
Iteration   3: 366576.367 ns/op
Iteration   4: 367073.500 ns/op
Iteration   5: 368815.039 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  367842.014 ±(99.9%) 8439.516 ns/op [Average]
  (min, avg, max) = (365587.603, 367842.014, 371157.560), stdev = 2191.716
  CI (99.9%): [359402.498, 376281.530] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 62.82% complete, ETA 00:54:37
# Fork: 1 of 1
# Warmup Iteration   1: 207325.312 ns/op
# Warmup Iteration   2: 70316.069 ns/op
# Warmup Iteration   3: 45907.204 ns/op
# Warmup Iteration   4: 42081.814 ns/op
# Warmup Iteration   5: 41953.827 ns/op
Iteration   1: 41914.222 ns/op
Iteration   2: 42351.625 ns/op
Iteration   3: 41953.935 ns/op
Iteration   4: 41940.729 ns/op
Iteration   5: 42813.159 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  42194.734 ±(99.9%) 1501.571 ns/op [Average]
  (min, avg, max) = (41914.222, 42194.734, 42813.159), stdev = 389.953
  CI (99.9%): [40693.163, 43696.305] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 63.08% complete, ETA 00:54:14
# Fork: 1 of 1
# Warmup Iteration   1: 360987.823 ns/op
# Warmup Iteration   2: 141924.972 ns/op
# Warmup Iteration   3: 78200.697 ns/op
# Warmup Iteration   4: 75809.614 ns/op
# Warmup Iteration   5: 75882.452 ns/op
Iteration   1: 79078.118 ns/op
Iteration   2: 76618.307 ns/op
Iteration   3: 75646.004 ns/op
Iteration   4: 76773.130 ns/op
Iteration   5: 75435.139 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  76710.139 ±(99.9%) 5572.712 ns/op [Average]
  (min, avg, max) = (75435.139, 76710.139, 79078.118), stdev = 1447.216
  CI (99.9%): [71137.427, 82282.852] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 63.33% complete, ETA 00:53:52
# Fork: 1 of 1
# Warmup Iteration   1: 991248.978 ns/op
# Warmup Iteration   2: 255700.708 ns/op
# Warmup Iteration   3: 188118.222 ns/op
# Warmup Iteration   4: 190420.489 ns/op
# Warmup Iteration   5: 169183.347 ns/op
Iteration   1: 174165.520 ns/op
Iteration   2: 168163.943 ns/op
Iteration   3: 174900.145 ns/op
Iteration   4: 168820.609 ns/op
Iteration   5: 170418.388 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  171293.721 ±(99.9%) 11857.783 ns/op [Average]
  (min, avg, max) = (168163.943, 171293.721, 174900.145), stdev = 3079.429
  CI (99.9%): [159435.938, 183151.504] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 63.59% complete, ETA 00:53:30
# Fork: 1 of 1
# Warmup Iteration   1: 1858342.120 ns/op
# Warmup Iteration   2: 535926.260 ns/op
# Warmup Iteration   3: 418026.390 ns/op
# Warmup Iteration   4: 375207.046 ns/op
# Warmup Iteration   5: 373416.587 ns/op
Iteration   1: 371623.605 ns/op
Iteration   2: 371327.421 ns/op
Iteration   3: 373552.838 ns/op
Iteration   4: 372741.705 ns/op
Iteration   5: 384919.084 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  374832.931 ±(99.9%) 21979.953 ns/op [Average]
  (min, avg, max) = (371327.421, 374832.931, 384919.084), stdev = 5708.124
  CI (99.9%): [352852.977, 396812.884] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 63.85% complete, ETA 00:53:07
# Fork: 1 of 1
# Warmup Iteration   1: 13064389.186 ns/op
# Warmup Iteration   2: 4489006.575 ns/op
# Warmup Iteration   3: 3034503.509 ns/op
# Warmup Iteration   4: 3091651.416 ns/op
# Warmup Iteration   5: 3052388.983 ns/op
Iteration   1: 3100014.369 ns/op
Iteration   2: 3165642.541 ns/op
Iteration   3: 3031409.291 ns/op
Iteration   4: 3080804.106 ns/op
Iteration   5: 3074215.205 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  3090417.102 ±(99.9%) 188522.421 ns/op [Average]
  (min, avg, max) = (3031409.291, 3090417.102, 3165642.541), stdev = 48958.674
  CI (99.9%): [2901894.681, 3278939.523] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 64.10% complete, ETA 00:52:45
# Fork: 1 of 1
# Warmup Iteration   1: 79296.367 ns/op
# Warmup Iteration   2: 26787.908 ns/op
# Warmup Iteration   3: 25301.520 ns/op
# Warmup Iteration   4: 24625.013 ns/op
# Warmup Iteration   5: 24732.696 ns/op
Iteration   1: 24873.381 ns/op
Iteration   2: 24713.466 ns/op
Iteration   3: 24644.717 ns/op
Iteration   4: 24695.048 ns/op
Iteration   5: 25219.366 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24829.196 ±(99.9%) 902.248 ns/op [Average]
  (min, avg, max) = (24644.717, 24829.196, 25219.366), stdev = 234.311
  CI (99.9%): [23926.947, 25731.444] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 64.36% complete, ETA 00:52:22
# Fork: 1 of 1
# Warmup Iteration   1: 155774.507 ns/op
# Warmup Iteration   2: 53690.098 ns/op
# Warmup Iteration   3: 51462.010 ns/op
# Warmup Iteration   4: 50576.161 ns/op
# Warmup Iteration   5: 50204.500 ns/op
Iteration   1: 50122.786 ns/op
Iteration   2: 50140.477 ns/op
Iteration   3: 50166.693 ns/op
Iteration   4: 50416.685 ns/op
Iteration   5: 50333.412 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  50236.011 ±(99.9%) 505.307 ns/op [Average]
  (min, avg, max) = (50122.786, 50236.011, 50416.685), stdev = 131.227
  CI (99.9%): [49730.704, 50741.318] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 64.62% complete, ETA 00:51:59
# Fork: 1 of 1
# Warmup Iteration   1: 269313.038 ns/op
# Warmup Iteration   2: 113383.974 ns/op
# Warmup Iteration   3: 109202.063 ns/op
# Warmup Iteration   4: 108929.575 ns/op
# Warmup Iteration   5: 108829.646 ns/op
Iteration   1: 108849.573 ns/op
Iteration   2: 108754.409 ns/op
Iteration   3: 109253.258 ns/op
Iteration   4: 108581.970 ns/op
Iteration   5: 108701.791 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  108828.200 ±(99.9%) 987.719 ns/op [Average]
  (min, avg, max) = (108581.970, 108828.200, 109253.258), stdev = 256.507
  CI (99.9%): [107840.481, 109815.919] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 64.87% complete, ETA 00:51:37
# Fork: 1 of 1
# Warmup Iteration   1: 547438.413 ns/op
# Warmup Iteration   2: 239839.194 ns/op
# Warmup Iteration   3: 227526.276 ns/op
# Warmup Iteration   4: 219704.308 ns/op
# Warmup Iteration   5: 218907.294 ns/op
Iteration   1: 220349.500 ns/op
Iteration   2: 218805.741 ns/op
Iteration   3: 219063.270 ns/op
Iteration   4: 219214.156 ns/op
Iteration   5: 221191.162 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  219724.766 ±(99.9%) 3890.635 ns/op [Average]
  (min, avg, max) = (218805.741, 219724.766, 221191.162), stdev = 1010.385
  CI (99.9%): [215834.131, 223615.400] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 65.13% complete, ETA 00:51:14
# Fork: 1 of 1
# Warmup Iteration   1: 3443127.177 ns/op
# Warmup Iteration   2: 1844198.709 ns/op
# Warmup Iteration   3: 1796069.583 ns/op
# Warmup Iteration   4: 1909388.673 ns/op
# Warmup Iteration   5: 1750309.127 ns/op
Iteration   1: 1766411.271 ns/op
Iteration   2: 1761578.239 ns/op
Iteration   3: 1736454.048 ns/op
Iteration   4: 1741584.579 ns/op
Iteration   5: 1738322.511 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1748870.129 ±(99.9%) 54035.329 ns/op [Average]
  (min, avg, max) = (1736454.048, 1748870.129, 1766411.271), stdev = 14032.803
  CI (99.9%): [1694834.800, 1802905.459] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 65.38% complete, ETA 00:50:51
# Fork: 1 of 1
# Warmup Iteration   1: 22243.950 ns/op
# Warmup Iteration   2: 10659.817 ns/op
# Warmup Iteration   3: 10769.499 ns/op
# Warmup Iteration   4: 10557.785 ns/op
# Warmup Iteration   5: 10596.709 ns/op
Iteration   1: 10562.249 ns/op
Iteration   2: 10543.560 ns/op
Iteration   3: 10560.634 ns/op
Iteration   4: 10643.066 ns/op
Iteration   5: 10496.273 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  10561.156 ±(99.9%) 204.030 ns/op [Average]
  (min, avg, max) = (10496.273, 10561.156, 10643.066), stdev = 52.986
  CI (99.9%): [10357.126, 10765.187] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 65.64% complete, ETA 00:50:29
# Fork: 1 of 1
# Warmup Iteration   1: 40912.889 ns/op
# Warmup Iteration   2: 21232.054 ns/op
# Warmup Iteration   3: 21839.037 ns/op
# Warmup Iteration   4: 22216.021 ns/op
# Warmup Iteration   5: 20991.162 ns/op
Iteration   1: 20934.980 ns/op
Iteration   2: 21677.744 ns/op
Iteration   3: 21000.751 ns/op
Iteration   4: 21481.610 ns/op
Iteration   5: 20987.379 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  21216.493 ±(99.9%) 1307.698 ns/op [Average]
  (min, avg, max) = (20934.980, 21216.493, 21677.744), stdev = 339.605
  CI (99.9%): [19908.794, 22524.191] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 65.90% complete, ETA 00:50:06
# Fork: 1 of 1
# Warmup Iteration   1: 84118.678 ns/op
# Warmup Iteration   2: 43643.448 ns/op
# Warmup Iteration   3: 43431.816 ns/op
# Warmup Iteration   4: 43028.256 ns/op
# Warmup Iteration   5: 42957.131 ns/op
Iteration   1: 43075.047 ns/op
Iteration   2: 42767.539 ns/op
Iteration   3: 44042.539 ns/op
Iteration   4: 44002.781 ns/op
Iteration   5: 43463.398 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  43470.261 ±(99.9%) 2162.145 ns/op [Average]
  (min, avg, max) = (42767.539, 43470.261, 44042.539), stdev = 561.502
  CI (99.9%): [41308.116, 45632.406] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 66.15% complete, ETA 00:49:44
# Fork: 1 of 1
# Warmup Iteration   1: 202945.151 ns/op
# Warmup Iteration   2: 98530.563 ns/op
# Warmup Iteration   3: 93431.482 ns/op
# Warmup Iteration   4: 93254.688 ns/op
# Warmup Iteration   5: 92810.882 ns/op
Iteration   1: 92791.729 ns/op
Iteration   2: 92521.101 ns/op
Iteration   3: 92889.611 ns/op
Iteration   4: 92628.220 ns/op
Iteration   5: 92841.285 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  92734.389 ±(99.9%) 595.208 ns/op [Average]
  (min, avg, max) = (92521.101, 92734.389, 92889.611), stdev = 154.574
  CI (99.9%): [92139.181, 93329.597] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 66.41% complete, ETA 00:49:21
# Fork: 1 of 1
# Warmup Iteration   1: 1367366.328 ns/op
# Warmup Iteration   2: 808375.716 ns/op
# Warmup Iteration   3: 799453.314 ns/op
# Warmup Iteration   4: 786881.920 ns/op
# Warmup Iteration   5: 780353.185 ns/op
Iteration   1: 777427.371 ns/op
Iteration   2: 777075.335 ns/op
Iteration   3: 775370.420 ns/op
Iteration   4: 775138.649 ns/op
Iteration   5: 778842.868 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  776770.929 ±(99.9%) 5916.184 ns/op [Average]
  (min, avg, max) = (775138.649, 776770.929, 778842.868), stdev = 1536.414
  CI (99.9%): [770854.744, 782687.113] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 66.67% complete, ETA 00:48:58
# Fork: 1 of 1
# Warmup Iteration   1: 41643.674 ns/op
# Warmup Iteration   2: 10049.903 ns/op
# Warmup Iteration   3: 9353.771 ns/op
# Warmup Iteration   4: 9191.468 ns/op
# Warmup Iteration   5: 9214.872 ns/op
Iteration   1: 9197.317 ns/op
Iteration   2: 9202.040 ns/op
Iteration   3: 9185.576 ns/op
Iteration   4: 9179.869 ns/op
Iteration   5: 9192.893 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  9191.539 ±(99.9%) 34.292 ns/op [Average]
  (min, avg, max) = (9179.869, 9191.539, 9202.040), stdev = 8.906
  CI (99.9%): [9157.247, 9225.831] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 66.92% complete, ETA 00:48:36
# Fork: 1 of 1
# Warmup Iteration   1: 45052.889 ns/op
# Warmup Iteration   2: 16954.510 ns/op
# Warmup Iteration   3: 16727.841 ns/op
# Warmup Iteration   4: 16004.763 ns/op
# Warmup Iteration   5: 16007.755 ns/op
Iteration   1: 15975.261 ns/op
Iteration   2: 15999.955 ns/op
Iteration   3: 15970.895 ns/op
Iteration   4: 15953.146 ns/op
Iteration   5: 16013.935 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  15982.639 ±(99.9%) 93.164 ns/op [Average]
  (min, avg, max) = (15953.146, 15982.639, 16013.935), stdev = 24.194
  CI (99.9%): [15889.475, 16075.802] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 67.18% complete, ETA 00:48:13
# Fork: 1 of 1
# Warmup Iteration   1: 77351.132 ns/op
# Warmup Iteration   2: 32392.983 ns/op
# Warmup Iteration   3: 31257.188 ns/op
# Warmup Iteration   4: 30987.424 ns/op
# Warmup Iteration   5: 30983.414 ns/op
Iteration   1: 31003.186 ns/op
Iteration   2: 30996.454 ns/op
Iteration   3: 30947.411 ns/op
Iteration   4: 31195.665 ns/op
Iteration   5: 31152.239 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  31058.991 ±(99.9%) 416.733 ns/op [Average]
  (min, avg, max) = (30947.411, 31058.991, 31195.665), stdev = 108.224
  CI (99.9%): [30642.258, 31475.725] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 67.44% complete, ETA 00:47:51
# Fork: 1 of 1
# Warmup Iteration   1: 177598.500 ns/op
# Warmup Iteration   2: 68857.588 ns/op
# Warmup Iteration   3: 67883.662 ns/op
# Warmup Iteration   4: 66864.205 ns/op
# Warmup Iteration   5: 66804.395 ns/op
Iteration   1: 66637.539 ns/op
Iteration   2: 67213.085 ns/op
Iteration   3: 67823.639 ns/op
Iteration   4: 66999.713 ns/op
Iteration   5: 68461.383 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  67427.072 ±(99.9%) 2775.973 ns/op [Average]
  (min, avg, max) = (66637.539, 67427.072, 68461.383), stdev = 720.911
  CI (99.9%): [64651.099, 70203.045] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 67.69% complete, ETA 00:47:28
# Fork: 1 of 1
# Warmup Iteration   1: 2519587.495 ns/op
# Warmup Iteration   2: 569233.961 ns/op
# Warmup Iteration   3: 560216.684 ns/op
# Warmup Iteration   4: 544080.939 ns/op
# Warmup Iteration   5: 542208.362 ns/op
Iteration   1: 547891.975 ns/op
Iteration   2: 546648.516 ns/op
Iteration   3: 540067.575 ns/op
Iteration   4: 544329.642 ns/op
Iteration   5: 542626.479 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  544312.837 ±(99.9%) 12043.956 ns/op [Average]
  (min, avg, max) = (540067.575, 544312.837, 547891.975), stdev = 3127.777
  CI (99.9%): [532268.882, 556356.793] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 67.95% complete, ETA 00:47:05
# Fork: 1 of 1
# Warmup Iteration   1: 21227.630 ns/op
# Warmup Iteration   2: 8086.203 ns/op
# Warmup Iteration   3: 7686.471 ns/op
# Warmup Iteration   4: 7920.998 ns/op
# Warmup Iteration   5: 7664.459 ns/op
Iteration   1: 7748.881 ns/op
Iteration   2: 7723.463 ns/op
Iteration   3: 7686.502 ns/op
Iteration   4: 7662.751 ns/op
Iteration   5: 7662.564 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7696.832 ±(99.9%) 147.395 ns/op [Average]
  (min, avg, max) = (7662.564, 7696.832, 7748.881), stdev = 38.278
  CI (99.9%): [7549.437, 7844.227] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 68.21% complete, ETA 00:46:43
# Fork: 1 of 1
# Warmup Iteration   1: 26380.211 ns/op
# Warmup Iteration   2: 13297.051 ns/op
# Warmup Iteration   3: 13096.545 ns/op
# Warmup Iteration   4: 12986.151 ns/op
# Warmup Iteration   5: 13031.777 ns/op
Iteration   1: 13077.410 ns/op
Iteration   2: 13000.735 ns/op
Iteration   3: 12989.772 ns/op
Iteration   4: 12993.332 ns/op
Iteration   5: 12941.115 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13000.473 ±(99.9%) 188.723 ns/op [Average]
  (min, avg, max) = (12941.115, 13000.473, 13077.410), stdev = 49.011
  CI (99.9%): [12811.749, 13189.196] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 68.46% complete, ETA 00:46:20
# Fork: 1 of 1
# Warmup Iteration   1: 43239.572 ns/op
# Warmup Iteration   2: 25486.230 ns/op
# Warmup Iteration   3: 24994.227 ns/op
# Warmup Iteration   4: 24813.106 ns/op
# Warmup Iteration   5: 24746.237 ns/op
Iteration   1: 24822.423 ns/op
Iteration   2: 24968.858 ns/op
Iteration   3: 24922.655 ns/op
Iteration   4: 24863.425 ns/op
Iteration   5: 24870.578 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  24889.588 ±(99.9%) 218.965 ns/op [Average]
  (min, avg, max) = (24822.423, 24889.588, 24968.858), stdev = 56.864
  CI (99.9%): [24670.623, 25108.553] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 68.72% complete, ETA 00:45:58
# Fork: 1 of 1
# Warmup Iteration   1: 113080.533 ns/op
# Warmup Iteration   2: 54359.327 ns/op
# Warmup Iteration   3: 53432.823 ns/op
# Warmup Iteration   4: 56310.627 ns/op
# Warmup Iteration   5: 52657.800 ns/op
Iteration   1: 52426.327 ns/op
Iteration   2: 52324.632 ns/op
Iteration   3: 52350.577 ns/op
Iteration   4: 52447.558 ns/op
Iteration   5: 52553.119 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  52420.443 ±(99.9%) 346.739 ns/op [Average]
  (min, avg, max) = (52324.632, 52420.443, 52553.119), stdev = 90.047
  CI (99.9%): [52073.704, 52767.182] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 68.97% complete, ETA 00:45:35
# Fork: 1 of 1
# Warmup Iteration   1: 692733.672 ns/op
# Warmup Iteration   2: 446242.100 ns/op
# Warmup Iteration   3: 440264.640 ns/op
# Warmup Iteration   4: 439344.249 ns/op
# Warmup Iteration   5: 439149.181 ns/op
Iteration   1: 439666.443 ns/op
Iteration   2: 438294.484 ns/op
Iteration   3: 437853.148 ns/op
Iteration   4: 450970.871 ns/op
Iteration   5: 438119.330 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  440980.855 ±(99.9%) 21672.966 ns/op [Average]
  (min, avg, max) = (437853.148, 440980.855, 450970.871), stdev = 5628.400
  CI (99.9%): [419307.890, 462653.821] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 69.23% complete, ETA 00:45:12
# Fork: 1 of 1
# Warmup Iteration   1: 18599.617 ns/op
# Warmup Iteration   2: 8737.614 ns/op
# Warmup Iteration   3: 8347.218 ns/op
# Warmup Iteration   4: 8336.888 ns/op
# Warmup Iteration   5: 8357.037 ns/op
Iteration   1: 8461.831 ns/op
Iteration   2: 8334.121 ns/op
Iteration   3: 8389.910 ns/op
Iteration   4: 8443.510 ns/op
Iteration   5: 8406.985 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8407.272 ±(99.9%) 191.977 ns/op [Average]
  (min, avg, max) = (8334.121, 8407.272, 8461.831), stdev = 49.856
  CI (99.9%): [8215.295, 8599.249] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 69.49% complete, ETA 00:44:50
# Fork: 1 of 1
# Warmup Iteration   1: 153517.303 ns/op
# Warmup Iteration   2: 17509.794 ns/op
# Warmup Iteration   3: 14104.959 ns/op
# Warmup Iteration   4: 13617.960 ns/op
# Warmup Iteration   5: 13635.370 ns/op
Iteration   1: 13788.800 ns/op
Iteration   2: 13786.697 ns/op
Iteration   3: 13645.664 ns/op
Iteration   4: 13730.842 ns/op
Iteration   5: 13803.385 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13751.078 ±(99.9%) 250.656 ns/op [Average]
  (min, avg, max) = (13645.664, 13751.078, 13803.385), stdev = 65.095
  CI (99.9%): [13500.421, 14001.734] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 69.74% complete, ETA 00:44:27
# Fork: 1 of 1
# Warmup Iteration   1: 64337.292 ns/op
# Warmup Iteration   2: 25743.053 ns/op
# Warmup Iteration   3: 26287.500 ns/op
# Warmup Iteration   4: 24835.513 ns/op
# Warmup Iteration   5: 24765.605 ns/op
Iteration   1: 24754.034 ns/op
Iteration   2: 24762.002 ns/op
Iteration   3: 24673.057 ns/op
Iteration   4: 24687.552 ns/op
Iteration   5: 25029.096 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  24781.148 ±(99.9%) 554.759 ns/op [Average]
  (min, avg, max) = (24673.057, 24781.148, 25029.096), stdev = 144.069
  CI (99.9%): [24226.389, 25335.907] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 70.00% complete, ETA 00:44:04
# Fork: 1 of 1
# Warmup Iteration   1: 252257.790 ns/op
# Warmup Iteration   2: 51800.959 ns/op
# Warmup Iteration   3: 50139.341 ns/op
# Warmup Iteration   4: 48799.352 ns/op
# Warmup Iteration   5: 48432.872 ns/op
Iteration   1: 48740.188 ns/op
Iteration   2: 48437.397 ns/op
Iteration   3: 48362.742 ns/op
Iteration   4: 48413.155 ns/op
Iteration   5: 48558.133 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  48502.323 ±(99.9%) 581.893 ns/op [Average]
  (min, avg, max) = (48362.742, 48502.323, 48740.188), stdev = 151.116
  CI (99.9%): [47920.430, 49084.216] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 70.26% complete, ETA 00:43:42
# Fork: 1 of 1
# Warmup Iteration   1: 1115087.845 ns/op
# Warmup Iteration   2: 388291.713 ns/op
# Warmup Iteration   3: 399427.657 ns/op
# Warmup Iteration   4: 368368.025 ns/op
# Warmup Iteration   5: 367940.989 ns/op
Iteration   1: 367444.975 ns/op
Iteration   2: 386911.897 ns/op
Iteration   3: 369223.471 ns/op
Iteration   4: 370327.710 ns/op
Iteration   5: 368808.691 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  372543.349 ±(99.9%) 31183.494 ns/op [Average]
  (min, avg, max) = (367444.975, 372543.349, 386911.897), stdev = 8098.254
  CI (99.9%): [341359.855, 403726.843] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 70.51% complete, ETA 00:43:19
# Fork: 1 of 1
# Warmup Iteration   1: 7443.252 ns/op
# Warmup Iteration   2: 2556.996 ns/op
# Warmup Iteration   3: 2304.926 ns/op
# Warmup Iteration   4: 2304.123 ns/op
# Warmup Iteration   5: 2313.325 ns/op
Iteration   1: 2337.614 ns/op
Iteration   2: 2301.960 ns/op
Iteration   3: 2340.764 ns/op
Iteration   4: 2354.248 ns/op
Iteration   5: 2330.534 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2333.024 ±(99.9%) 74.632 ns/op [Average]
  (min, avg, max) = (2301.960, 2333.024, 2354.248), stdev = 19.382
  CI (99.9%): [2258.392, 2407.656] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 70.77% complete, ETA 00:42:57
# Fork: 1 of 1
# Warmup Iteration   1: 13038.961 ns/op
# Warmup Iteration   2: 4866.665 ns/op
# Warmup Iteration   3: 4509.717 ns/op
# Warmup Iteration   4: 4485.304 ns/op
# Warmup Iteration   5: 4496.821 ns/op
Iteration   1: 4482.933 ns/op
Iteration   2: 4486.460 ns/op
Iteration   3: 4535.193 ns/op
Iteration   4: 4629.664 ns/op
Iteration   5: 4513.581 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4529.566 ±(99.9%) 230.553 ns/op [Average]
  (min, avg, max) = (4482.933, 4529.566, 4629.664), stdev = 59.874
  CI (99.9%): [4299.013, 4760.119] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 71.03% complete, ETA 00:42:34
# Fork: 1 of 1
# Warmup Iteration   1: 19033.526 ns/op
# Warmup Iteration   2: 8353.336 ns/op
# Warmup Iteration   3: 8296.553 ns/op
# Warmup Iteration   4: 8326.610 ns/op
# Warmup Iteration   5: 8630.444 ns/op
Iteration   1: 8351.299 ns/op
Iteration   2: 8295.185 ns/op
Iteration   3: 8342.877 ns/op
Iteration   4: 8377.801 ns/op
Iteration   5: 8314.822 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8336.397 ±(99.9%) 123.914 ns/op [Average]
  (min, avg, max) = (8295.185, 8336.397, 8377.801), stdev = 32.180
  CI (99.9%): [8212.483, 8460.311] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 71.28% complete, ETA 00:42:11
# Fork: 1 of 1
# Warmup Iteration   1: 39146.688 ns/op
# Warmup Iteration   2: 15794.909 ns/op
# Warmup Iteration   3: 15322.956 ns/op
# Warmup Iteration   4: 14937.576 ns/op
# Warmup Iteration   5: 14643.623 ns/op
Iteration   1: 14955.784 ns/op
Iteration   2: 14766.085 ns/op
Iteration   3: 14798.784 ns/op
Iteration   4: 14752.504 ns/op
Iteration   5: 14664.604 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14787.552 ±(99.9%) 409.481 ns/op [Average]
  (min, avg, max) = (14664.604, 14787.552, 14955.784), stdev = 106.341
  CI (99.9%): [14378.072, 15197.033] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 71.54% complete, ETA 00:41:49
# Fork: 1 of 1
# Warmup Iteration   1: 301950.860 ns/op
# Warmup Iteration   2: 137922.156 ns/op
# Warmup Iteration   3: 121345.928 ns/op
# Warmup Iteration   4: 121407.857 ns/op
# Warmup Iteration   5: 121632.124 ns/op
Iteration   1: 122460.336 ns/op
Iteration   2: 121021.300 ns/op
Iteration   3: 121165.035 ns/op
Iteration   4: 121249.753 ns/op
Iteration   5: 120962.085 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  121371.702 ±(99.9%) 2384.039 ns/op [Average]
  (min, avg, max) = (120962.085, 121371.702, 122460.336), stdev = 619.127
  CI (99.9%): [118987.663, 123755.741] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 71.79% complete, ETA 00:41:26
# Fork: 1 of 1
# Warmup Iteration   1: 7087.870 ns/op
# Warmup Iteration   2: 3934.330 ns/op
# Warmup Iteration   3: 3864.001 ns/op
# Warmup Iteration   4: 3894.797 ns/op
# Warmup Iteration   5: 3851.038 ns/op
Iteration   1: 3858.412 ns/op
Iteration   2: 3856.470 ns/op
Iteration   3: 3856.533 ns/op
Iteration   4: 3880.067 ns/op
Iteration   5: 3864.308 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3863.158 ±(99.9%) 38.429 ns/op [Average]
  (min, avg, max) = (3856.470, 3863.158, 3880.067), stdev = 9.980
  CI (99.9%): [3824.729, 3901.587] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 72.05% complete, ETA 00:41:04
# Fork: 1 of 1
# Warmup Iteration   1: 16587.051 ns/op
# Warmup Iteration   2: 8179.851 ns/op
# Warmup Iteration   3: 8862.315 ns/op
# Warmup Iteration   4: 8005.596 ns/op
# Warmup Iteration   5: 7993.794 ns/op
Iteration   1: 7958.898 ns/op
Iteration   2: 8090.165 ns/op
Iteration   3: 8049.525 ns/op
Iteration   4: 7969.653 ns/op
Iteration   5: 8053.980 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8024.444 ±(99.9%) 220.523 ns/op [Average]
  (min, avg, max) = (7958.898, 8024.444, 8090.165), stdev = 57.269
  CI (99.9%): [7803.921, 8244.967] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 72.31% complete, ETA 00:40:41
# Fork: 1 of 1
# Warmup Iteration   1: 28546.169 ns/op
# Warmup Iteration   2: 12512.709 ns/op
# Warmup Iteration   3: 12052.807 ns/op
# Warmup Iteration   4: 12076.675 ns/op
# Warmup Iteration   5: 12844.932 ns/op
Iteration   1: 12053.712 ns/op
Iteration   2: 12078.634 ns/op
Iteration   3: 12118.967 ns/op
Iteration   4: 12138.394 ns/op
Iteration   5: 12070.207 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  12091.983 ±(99.9%) 136.130 ns/op [Average]
  (min, avg, max) = (12053.712, 12091.983, 12138.394), stdev = 35.352
  CI (99.9%): [11955.853, 12228.112] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 72.56% complete, ETA 00:40:18
# Fork: 1 of 1
# Warmup Iteration   1: 63101.560 ns/op
# Warmup Iteration   2: 27802.014 ns/op
# Warmup Iteration   3: 27936.348 ns/op
# Warmup Iteration   4: 27138.880 ns/op
# Warmup Iteration   5: 27038.199 ns/op
Iteration   1: 27400.534 ns/op
Iteration   2: 27161.092 ns/op
Iteration   3: 27312.101 ns/op
Iteration   4: 27045.376 ns/op
Iteration   5: 28079.798 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  27399.780 ±(99.9%) 1555.449 ns/op [Average]
  (min, avg, max) = (27045.376, 27399.780, 28079.798), stdev = 403.945
  CI (99.9%): [25844.331, 28955.229] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 72.82% complete, ETA 00:39:56
# Fork: 1 of 1
# Warmup Iteration   1: 441387.740 ns/op
# Warmup Iteration   2: 242497.707 ns/op
# Warmup Iteration   3: 202290.298 ns/op
# Warmup Iteration   4: 207516.624 ns/op
# Warmup Iteration   5: 196662.567 ns/op
Iteration   1: 196721.720 ns/op
Iteration   2: 201125.497 ns/op
Iteration   3: 200822.836 ns/op
Iteration   4: 199323.346 ns/op
Iteration   5: 198434.536 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  199285.587 ±(99.9%) 6954.526 ns/op [Average]
  (min, avg, max) = (196721.720, 199285.587, 201125.497), stdev = 1806.068
  CI (99.9%): [192331.061, 206240.114] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 73.08% complete, ETA 00:39:33
# Fork: 1 of 1
# Warmup Iteration   1: 10109.994 ns/op
# Warmup Iteration   2: 4382.858 ns/op
# Warmup Iteration   3: 4385.450 ns/op
# Warmup Iteration   4: 4389.253 ns/op
# Warmup Iteration   5: 4391.012 ns/op
Iteration   1: 4409.996 ns/op
Iteration   2: 4481.219 ns/op
Iteration   3: 4374.487 ns/op
Iteration   4: 4444.825 ns/op
Iteration   5: 4398.745 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4421.854 ±(99.9%) 160.740 ns/op [Average]
  (min, avg, max) = (4374.487, 4421.854, 4481.219), stdev = 41.744
  CI (99.9%): [4261.114, 4582.595] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 73.33% complete, ETA 00:39:10
# Fork: 1 of 1
# Warmup Iteration   1: 15702.323 ns/op
# Warmup Iteration   2: 6480.556 ns/op
# Warmup Iteration   3: 6241.825 ns/op
# Warmup Iteration   4: 6634.431 ns/op
# Warmup Iteration   5: 6235.256 ns/op
Iteration   1: 6394.749 ns/op
Iteration   2: 6328.406 ns/op
Iteration   3: 6345.858 ns/op
Iteration   4: 6247.924 ns/op
Iteration   5: 6299.990 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  6323.385 ±(99.9%) 209.717 ns/op [Average]
  (min, avg, max) = (6247.924, 6323.385, 6394.749), stdev = 54.463
  CI (99.9%): [6113.668, 6533.102] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 73.59% complete, ETA 00:38:48
# Fork: 1 of 1
# Warmup Iteration   1: 28927.103 ns/op
# Warmup Iteration   2: 12212.815 ns/op
# Warmup Iteration   3: 11943.998 ns/op
# Warmup Iteration   4: 11869.451 ns/op
# Warmup Iteration   5: 12380.580 ns/op
Iteration   1: 12246.450 ns/op
Iteration   2: 12176.143 ns/op
Iteration   3: 11951.001 ns/op
Iteration   4: 11909.936 ns/op
Iteration   5: 11871.814 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  12031.069 ±(99.9%) 649.726 ns/op [Average]
  (min, avg, max) = (11871.814, 12031.069, 12246.450), stdev = 168.732
  CI (99.9%): [11381.343, 12680.795] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 73.85% complete, ETA 00:38:25
# Fork: 1 of 1
# Warmup Iteration   1: 72202.394 ns/op
# Warmup Iteration   2: 24789.080 ns/op
# Warmup Iteration   3: 23923.107 ns/op
# Warmup Iteration   4: 23908.299 ns/op
# Warmup Iteration   5: 23930.140 ns/op
Iteration   1: 23829.186 ns/op
Iteration   2: 24182.490 ns/op
Iteration   3: 23903.543 ns/op
Iteration   4: 23958.628 ns/op
Iteration   5: 23881.171 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  23951.003 ±(99.9%) 529.420 ns/op [Average]
  (min, avg, max) = (23829.186, 23951.003, 24182.490), stdev = 137.489
  CI (99.9%): [23421.583, 24480.424] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 74.10% complete, ETA 00:38:03
# Fork: 1 of 1
# Warmup Iteration   1: 382251.300 ns/op
# Warmup Iteration   2: 200475.145 ns/op
# Warmup Iteration   3: 190315.827 ns/op
# Warmup Iteration   4: 188641.799 ns/op
# Warmup Iteration   5: 197713.079 ns/op
Iteration   1: 183799.335 ns/op
Iteration   2: 181962.892 ns/op
Iteration   3: 183143.653 ns/op
Iteration   4: 181695.134 ns/op
Iteration   5: 181587.896 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  182437.782 ±(99.9%) 3778.458 ns/op [Average]
  (min, avg, max) = (181587.896, 182437.782, 183799.335), stdev = 981.253
  CI (99.9%): [178659.324, 186216.240] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 74.36% complete, ETA 00:37:40
# Fork: 1 of 1
# Warmup Iteration   1: 195693.717 ns/op
# Warmup Iteration   2: 97872.239 ns/op
# Warmup Iteration   3: 96504.075 ns/op
# Warmup Iteration   4: 95552.205 ns/op
# Warmup Iteration   5: 97598.463 ns/op
Iteration   1: 95525.025 ns/op
Iteration   2: 96132.158 ns/op
Iteration   3: 96974.811 ns/op
Iteration   4: 95060.474 ns/op
Iteration   5: 95011.436 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  95740.781 ±(99.9%) 3173.756 ns/op [Average]
  (min, avg, max) = (95011.436, 95740.781, 96974.811), stdev = 824.214
  CI (99.9%): [92567.025, 98914.537] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 74.62% complete, ETA 00:37:17
# Fork: 1 of 1
# Warmup Iteration   1: 328640.376 ns/op
# Warmup Iteration   2: 134903.351 ns/op
# Warmup Iteration   3: 129714.999 ns/op
# Warmup Iteration   4: 129175.976 ns/op
# Warmup Iteration   5: 129331.816 ns/op
Iteration   1: 129430.964 ns/op
Iteration   2: 129076.614 ns/op
Iteration   3: 128942.012 ns/op
Iteration   4: 129950.279 ns/op
Iteration   5: 129204.148 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  129320.804 ±(99.9%) 1522.216 ns/op [Average]
  (min, avg, max) = (128942.012, 129320.804, 129950.279), stdev = 395.315
  CI (99.9%): [127798.587, 130843.020] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 74.87% complete, ETA 00:36:55
# Fork: 1 of 1
# Warmup Iteration   1: 723526.913 ns/op
# Warmup Iteration   2: 174335.444 ns/op
# Warmup Iteration   3: 164851.478 ns/op
# Warmup Iteration   4: 163396.720 ns/op
# Warmup Iteration   5: 162916.671 ns/op
Iteration   1: 163527.882 ns/op
Iteration   2: 163768.348 ns/op
Iteration   3: 163265.408 ns/op
Iteration   4: 163246.319 ns/op
Iteration   5: 162512.066 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  163264.005 ±(99.9%) 1816.059 ns/op [Average]
  (min, avg, max) = (162512.066, 163264.005, 163768.348), stdev = 471.625
  CI (99.9%): [161447.945, 165080.064] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 75.13% complete, ETA 00:36:32
# Fork: 1 of 1
# Warmup Iteration   1: 591620.939 ns/op
# Warmup Iteration   2: 235667.696 ns/op
# Warmup Iteration   3: 223554.847 ns/op
# Warmup Iteration   4: 221373.555 ns/op
# Warmup Iteration   5: 220773.773 ns/op
Iteration   1: 224023.903 ns/op
Iteration   2: 221621.662 ns/op
Iteration   3: 225454.439 ns/op
Iteration   4: 220972.849 ns/op
Iteration   5: 220705.593 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  222555.689 ±(99.9%) 8021.699 ns/op [Average]
  (min, avg, max) = (220705.593, 222555.689, 225454.439), stdev = 2083.210
  CI (99.9%): [214533.990, 230577.388] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 75.38% complete, ETA 00:36:10
# Fork: 1 of 1
# Warmup Iteration   1: 1883661.283 ns/op
# Warmup Iteration   2: 1096281.671 ns/op
# Warmup Iteration   3: 1090668.357 ns/op
# Warmup Iteration   4: 1065229.405 ns/op
# Warmup Iteration   5: 1063247.438 ns/op
Iteration   1: 1064496.208 ns/op
Iteration   2: 1071815.852 ns/op
Iteration   3: 1063997.047 ns/op
Iteration   4: 1060219.860 ns/op
Iteration   5: 1062186.184 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1064543.030 ±(99.9%) 16942.697 ns/op [Average]
  (min, avg, max) = (1060219.860, 1064543.030, 1071815.852), stdev = 4399.965
  CI (99.9%): [1047600.333, 1081485.727] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 75.64% complete, ETA 00:35:47
# Fork: 1 of 1
# Warmup Iteration   1: 3453.769 ns/op
# Warmup Iteration   2: 2064.700 ns/op
# Warmup Iteration   3: 2019.695 ns/op
# Warmup Iteration   4: 2020.182 ns/op
# Warmup Iteration   5: 2018.377 ns/op
Iteration   1: 2018.670 ns/op
Iteration   2: 2023.333 ns/op
Iteration   3: 2020.724 ns/op
Iteration   4: 2019.940 ns/op
Iteration   5: 2034.756 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2023.484 ±(99.9%) 25.134 ns/op [Average]
  (min, avg, max) = (2018.670, 2023.484, 2034.756), stdev = 6.527
  CI (99.9%): [1998.350, 2048.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 75.90% complete, ETA 00:35:24
# Fork: 1 of 1
# Warmup Iteration   1: 6427.659 ns/op
# Warmup Iteration   2: 3878.129 ns/op
# Warmup Iteration   3: 3950.125 ns/op
# Warmup Iteration   4: 4138.768 ns/op
# Warmup Iteration   5: 3836.693 ns/op
Iteration   1: 3968.068 ns/op
Iteration   2: 3827.212 ns/op
Iteration   3: 3841.792 ns/op
Iteration   4: 3828.240 ns/op
Iteration   5: 3833.190 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3859.701 ±(99.9%) 234.324 ns/op [Average]
  (min, avg, max) = (3827.212, 3859.701, 3968.068), stdev = 60.853
  CI (99.9%): [3625.377, 4094.024] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 76.15% complete, ETA 00:35:02
# Fork: 1 of 1
# Warmup Iteration   1: 11156.620 ns/op
# Warmup Iteration   2: 7452.838 ns/op
# Warmup Iteration   3: 6969.312 ns/op
# Warmup Iteration   4: 6976.985 ns/op
# Warmup Iteration   5: 6964.295 ns/op
Iteration   1: 6958.356 ns/op
Iteration   2: 6988.595 ns/op
Iteration   3: 6961.212 ns/op
Iteration   4: 6955.840 ns/op
Iteration   5: 6931.024 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  6959.005 ±(99.9%) 78.770 ns/op [Average]
  (min, avg, max) = (6931.024, 6959.005, 6988.595), stdev = 20.456
  CI (99.9%): [6880.236, 7037.775] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 76.41% complete, ETA 00:34:39
# Fork: 1 of 1
# Warmup Iteration   1: 24565.585 ns/op
# Warmup Iteration   2: 13219.171 ns/op
# Warmup Iteration   3: 13115.744 ns/op
# Warmup Iteration   4: 13123.609 ns/op
# Warmup Iteration   5: 13130.782 ns/op
Iteration   1: 13298.527 ns/op
Iteration   2: 13141.737 ns/op
Iteration   3: 13581.093 ns/op
Iteration   4: 13247.650 ns/op
Iteration   5: 13134.478 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13280.697 ±(99.9%) 700.399 ns/op [Average]
  (min, avg, max) = (13134.478, 13280.697, 13581.093), stdev = 181.891
  CI (99.9%): [12580.298, 13981.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 76.67% complete, ETA 00:34:16
# Fork: 1 of 1
# Warmup Iteration   1: 181198.595 ns/op
# Warmup Iteration   2: 119880.396 ns/op
# Warmup Iteration   3: 126854.784 ns/op
# Warmup Iteration   4: 119543.284 ns/op
# Warmup Iteration   5: 124532.411 ns/op
Iteration   1: 120219.022 ns/op
Iteration   2: 119138.601 ns/op
Iteration   3: 121031.598 ns/op
Iteration   4: 119911.705 ns/op
Iteration   5: 119055.652 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  119871.316 ±(99.9%) 3146.571 ns/op [Average]
  (min, avg, max) = (119055.652, 119871.316, 121031.598), stdev = 817.154
  CI (99.9%): [116724.745, 123017.886] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 76.92% complete, ETA 00:33:54
# Fork: 1 of 1
# Warmup Iteration   1: 13256.548 ns/op
# Warmup Iteration   2: 6289.093 ns/op
# Warmup Iteration   3: 7569.311 ns/op
# Warmup Iteration   4: 8064.627 ns/op
# Warmup Iteration   5: 8238.499 ns/op
Iteration   1: 8171.978 ns/op
Iteration   2: 8336.588 ns/op
Iteration   3: 7992.393 ns/op
Iteration   4: 8159.774 ns/op
Iteration   5: 8613.311 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8254.809 ±(99.9%) 902.987 ns/op [Average]
  (min, avg, max) = (7992.393, 8254.809, 8613.311), stdev = 234.503
  CI (99.9%): [7351.822, 9157.796] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 77.18% complete, ETA 00:33:31
# Fork: 1 of 1
# Warmup Iteration   1: 15703.447 ns/op
# Warmup Iteration   2: 10165.576 ns/op
# Warmup Iteration   3: 9990.279 ns/op
# Warmup Iteration   4: 10440.201 ns/op
# Warmup Iteration   5: 10046.663 ns/op
Iteration   1: 10081.978 ns/op
Iteration   2: 10017.138 ns/op
Iteration   3: 10214.399 ns/op
Iteration   4: 10017.177 ns/op
Iteration   5: 10026.993 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  10071.537 ±(99.9%) 324.559 ns/op [Average]
  (min, avg, max) = (10017.138, 10071.537, 10214.399), stdev = 84.287
  CI (99.9%): [9746.978, 10396.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 77.44% complete, ETA 00:33:09
# Fork: 1 of 1
# Warmup Iteration   1: 23895.663 ns/op
# Warmup Iteration   2: 15902.170 ns/op
# Warmup Iteration   3: 16197.480 ns/op
# Warmup Iteration   4: 16172.950 ns/op
# Warmup Iteration   5: 16230.108 ns/op
Iteration   1: 16120.738 ns/op
Iteration   2: 16435.453 ns/op
Iteration   3: 16147.359 ns/op
Iteration   4: 16148.533 ns/op
Iteration   5: 16132.030 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  16196.823 ±(99.9%) 515.576 ns/op [Average]
  (min, avg, max) = (16120.738, 16196.823, 16435.453), stdev = 133.893
  CI (99.9%): [15681.247, 16712.398] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 77.69% complete, ETA 00:32:46
# Fork: 1 of 1
# Warmup Iteration   1: 55635.585 ns/op
# Warmup Iteration   2: 35759.471 ns/op
# Warmup Iteration   3: 36127.975 ns/op
# Warmup Iteration   4: 30793.184 ns/op
# Warmup Iteration   5: 30759.608 ns/op
Iteration   1: 30795.144 ns/op
Iteration   2: 30810.801 ns/op
Iteration   3: 30726.042 ns/op
Iteration   4: 30868.795 ns/op
Iteration   5: 30799.944 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  30800.145 ±(99.9%) 195.803 ns/op [Average]
  (min, avg, max) = (30726.042, 30800.145, 30868.795), stdev = 50.849
  CI (99.9%): [30604.342, 30995.948] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 77.95% complete, ETA 00:32:23
# Fork: 1 of 1
# Warmup Iteration   1: 404040.929 ns/op
# Warmup Iteration   2: 241534.887 ns/op
# Warmup Iteration   3: 250117.110 ns/op
# Warmup Iteration   4: 249787.237 ns/op
# Warmup Iteration   5: 249632.681 ns/op
Iteration   1: 252847.577 ns/op
Iteration   2: 251614.639 ns/op
Iteration   3: 252655.498 ns/op
Iteration   4: 249731.904 ns/op
Iteration   5: 249850.151 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  251339.954 ±(99.9%) 5738.742 ns/op [Average]
  (min, avg, max) = (249731.904, 251339.954, 252847.577), stdev = 1490.333
  CI (99.9%): [245601.212, 257078.696] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 78.21% complete, ETA 00:32:01
# Fork: 1 of 1
# Warmup Iteration   1: 6485.701 ns/op
# Warmup Iteration   2: 4444.534 ns/op
# Warmup Iteration   3: 4021.114 ns/op
# Warmup Iteration   4: 4005.940 ns/op
# Warmup Iteration   5: 4011.640 ns/op
Iteration   1: 4034.745 ns/op
Iteration   2: 4051.125 ns/op
Iteration   3: 3999.528 ns/op
Iteration   4: 4036.228 ns/op
Iteration   5: 3989.390 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4022.203 ±(99.9%) 101.539 ns/op [Average]
  (min, avg, max) = (3989.390, 4022.203, 4051.125), stdev = 26.369
  CI (99.9%): [3920.665, 4123.742] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 78.46% complete, ETA 00:31:38
# Fork: 1 of 1
# Warmup Iteration   1: 17321.505 ns/op
# Warmup Iteration   2: 8743.287 ns/op
# Warmup Iteration   3: 8417.072 ns/op
# Warmup Iteration   4: 8421.437 ns/op
# Warmup Iteration   5: 8441.344 ns/op
Iteration   1: 8435.519 ns/op
Iteration   2: 8466.181 ns/op
Iteration   3: 8439.239 ns/op
Iteration   4: 8415.865 ns/op
Iteration   5: 8526.816 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8456.724 ±(99.9%) 165.925 ns/op [Average]
  (min, avg, max) = (8415.865, 8456.724, 8526.816), stdev = 43.090
  CI (99.9%): [8290.799, 8622.649] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 78.72% complete, ETA 00:31:16
# Fork: 1 of 1
# Warmup Iteration   1: 31867.605 ns/op
# Warmup Iteration   2: 16800.962 ns/op
# Warmup Iteration   3: 16569.428 ns/op
# Warmup Iteration   4: 16553.678 ns/op
# Warmup Iteration   5: 16512.093 ns/op
Iteration   1: 16545.780 ns/op
Iteration   2: 16548.123 ns/op
Iteration   3: 16596.732 ns/op
Iteration   4: 16726.278 ns/op
Iteration   5: 16520.634 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  16587.509 ±(99.9%) 316.987 ns/op [Average]
  (min, avg, max) = (16520.634, 16587.509, 16726.278), stdev = 82.321
  CI (99.9%): [16270.522, 16904.497] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 78.97% complete, ETA 00:30:53
# Fork: 1 of 1
# Warmup Iteration   1: 66104.078 ns/op
# Warmup Iteration   2: 31962.288 ns/op
# Warmup Iteration   3: 32102.022 ns/op
# Warmup Iteration   4: 31401.763 ns/op
# Warmup Iteration   5: 31487.241 ns/op
Iteration   1: 31418.707 ns/op
Iteration   2: 31432.624 ns/op
Iteration   3: 31486.733 ns/op
Iteration   4: 31486.583 ns/op
Iteration   5: 31910.182 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  31546.966 ±(99.9%) 790.846 ns/op [Average]
  (min, avg, max) = (31418.707, 31546.966, 31910.182), stdev = 205.380
  CI (99.9%): [30756.120, 32337.812] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 79.23% complete, ETA 00:30:30
# Fork: 1 of 1
# Warmup Iteration   1: 374799.247 ns/op
# Warmup Iteration   2: 256187.226 ns/op
# Warmup Iteration   3: 250495.068 ns/op
# Warmup Iteration   4: 249427.208 ns/op
# Warmup Iteration   5: 249740.946 ns/op
Iteration   1: 250415.589 ns/op
Iteration   2: 249058.102 ns/op
Iteration   3: 254811.126 ns/op
Iteration   4: 251009.770 ns/op
Iteration   5: 249163.192 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  250891.556 ±(99.9%) 9020.774 ns/op [Average]
  (min, avg, max) = (249058.102, 250891.556, 254811.126), stdev = 2342.666
  CI (99.9%): [241870.781, 259912.330] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 79.49% complete, ETA 00:30:08
# Fork: 1 of 1
# Warmup Iteration   1: 89068.062 ns/op
# Warmup Iteration   2: 30578.929 ns/op
# Warmup Iteration   3: 22715.708 ns/op
# Warmup Iteration   4: 22611.369 ns/op
# Warmup Iteration   5: 22572.864 ns/op
Iteration   1: 22587.044 ns/op
Iteration   2: 22741.478 ns/op
Iteration   3: 22519.601 ns/op
Iteration   4: 22617.403 ns/op
Iteration   5: 22501.689 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  22593.443 ±(99.9%) 367.332 ns/op [Average]
  (min, avg, max) = (22501.689, 22593.443, 22741.478), stdev = 95.395
  CI (99.9%): [22226.111, 22960.775] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 79.74% complete, ETA 00:29:45
# Fork: 1 of 1
# Warmup Iteration   1: 284182.020 ns/op
# Warmup Iteration   2: 50655.525 ns/op
# Warmup Iteration   3: 40780.144 ns/op
# Warmup Iteration   4: 39933.299 ns/op
# Warmup Iteration   5: 39811.431 ns/op
Iteration   1: 39918.350 ns/op
Iteration   2: 39785.904 ns/op
Iteration   3: 39769.821 ns/op
Iteration   4: 39865.291 ns/op
Iteration   5: 40332.507 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  39934.375 ±(99.9%) 887.864 ns/op [Average]
  (min, avg, max) = (39769.821, 39934.375, 40332.507), stdev = 230.575
  CI (99.9%): [39046.511, 40822.238] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 80.00% complete, ETA 00:29:23
# Fork: 1 of 1
# Warmup Iteration   1: 432363.958 ns/op
# Warmup Iteration   2: 116434.911 ns/op
# Warmup Iteration   3: 91995.737 ns/op
# Warmup Iteration   4: 92423.837 ns/op
# Warmup Iteration   5: 94315.762 ns/op
Iteration   1: 92302.411 ns/op
Iteration   2: 91490.499 ns/op
Iteration   3: 92939.560 ns/op
Iteration   4: 93779.816 ns/op
Iteration   5: 91747.459 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  92451.949 ±(99.9%) 3573.041 ns/op [Average]
  (min, avg, max) = (91490.499, 92451.949, 93779.816), stdev = 927.908
  CI (99.9%): [88878.908, 96024.991] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 80.26% complete, ETA 00:29:00
# Fork: 1 of 1
# Warmup Iteration   1: 1133546.434 ns/op
# Warmup Iteration   2: 253902.090 ns/op
# Warmup Iteration   3: 247319.952 ns/op
# Warmup Iteration   4: 210617.287 ns/op
# Warmup Iteration   5: 212870.936 ns/op
Iteration   1: 213984.717 ns/op
Iteration   2: 210244.322 ns/op
Iteration   3: 209740.247 ns/op
Iteration   4: 211668.941 ns/op
Iteration   5: 212356.105 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  211598.866 ±(99.9%) 6546.055 ns/op [Average]
  (min, avg, max) = (209740.247, 211598.866, 213984.717), stdev = 1699.990
  CI (99.9%): [205052.811, 218144.921] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 80.51% complete, ETA 00:28:38
# Fork: 1 of 1
# Warmup Iteration   1: 6404603.569 ns/op
# Warmup Iteration   2: 1746932.971 ns/op
# Warmup Iteration   3: 1552928.886 ns/op
# Warmup Iteration   4: 1557440.415 ns/op
# Warmup Iteration   5: 1552289.082 ns/op
Iteration   1: 1562052.325 ns/op
Iteration   2: 1548365.396 ns/op
Iteration   3: 1566941.784 ns/op
Iteration   4: 1544047.449 ns/op
Iteration   5: 1542734.538 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1552828.298 ±(99.9%) 42321.097 ns/op [Average]
  (min, avg, max) = (1542734.538, 1552828.298, 1566941.784), stdev = 10990.655
  CI (99.9%): [1510507.201, 1595149.396] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 80.77% complete, ETA 00:28:15
# Fork: 1 of 1
# Warmup Iteration   1: 32572.825 ns/op
# Warmup Iteration   2: 14450.677 ns/op
# Warmup Iteration   3: 14012.312 ns/op
# Warmup Iteration   4: 14872.782 ns/op
# Warmup Iteration   5: 13950.136 ns/op
Iteration   1: 13997.722 ns/op
Iteration   2: 14153.801 ns/op
Iteration   3: 14000.735 ns/op
Iteration   4: 14078.028 ns/op
Iteration   5: 14219.649 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14089.987 ±(99.9%) 372.868 ns/op [Average]
  (min, avg, max) = (13997.722, 14089.987, 14219.649), stdev = 96.833
  CI (99.9%): [13717.119, 14462.855] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 81.03% complete, ETA 00:27:52
# Fork: 1 of 1
# Warmup Iteration   1: 61187.982 ns/op
# Warmup Iteration   2: 30681.165 ns/op
# Warmup Iteration   3: 30077.280 ns/op
# Warmup Iteration   4: 30432.724 ns/op
# Warmup Iteration   5: 29912.164 ns/op
Iteration   1: 30422.074 ns/op
Iteration   2: 29876.835 ns/op
Iteration   3: 30195.705 ns/op
Iteration   4: 29921.083 ns/op
Iteration   5: 29877.756 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  30058.691 ±(99.9%) 934.455 ns/op [Average]
  (min, avg, max) = (29876.835, 30058.691, 30422.074), stdev = 242.675
  CI (99.9%): [29124.235, 30993.146] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 81.28% complete, ETA 00:27:30
# Fork: 1 of 1
# Warmup Iteration   1: 115076.312 ns/op
# Warmup Iteration   2: 66769.258 ns/op
# Warmup Iteration   3: 66355.238 ns/op
# Warmup Iteration   4: 65215.520 ns/op
# Warmup Iteration   5: 64863.587 ns/op
Iteration   1: 64565.225 ns/op
Iteration   2: 65103.030 ns/op
Iteration   3: 65966.242 ns/op
Iteration   4: 65490.178 ns/op
Iteration   5: 65175.353 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  65260.006 ±(99.9%) 1988.101 ns/op [Average]
  (min, avg, max) = (64565.225, 65260.006, 65966.242), stdev = 516.304
  CI (99.9%): [63271.904, 67248.107] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 81.54% complete, ETA 00:27:07
# Fork: 1 of 1
# Warmup Iteration   1: 258354.045 ns/op
# Warmup Iteration   2: 138474.736 ns/op
# Warmup Iteration   3: 135573.609 ns/op
# Warmup Iteration   4: 135625.553 ns/op
# Warmup Iteration   5: 135819.941 ns/op
Iteration   1: 136810.036 ns/op
Iteration   2: 135198.861 ns/op
Iteration   3: 134985.579 ns/op
Iteration   4: 136734.974 ns/op
Iteration   5: 139993.717 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  136744.634 ±(99.9%) 7712.014 ns/op [Average]
  (min, avg, max) = (134985.579, 136744.634, 139993.717), stdev = 2002.786
  CI (99.9%): [129032.619, 144456.648] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 81.79% complete, ETA 00:26:45
# Fork: 1 of 1
# Warmup Iteration   1: 2129459.509 ns/op
# Warmup Iteration   2: 1145294.896 ns/op
# Warmup Iteration   3: 1146695.116 ns/op
# Warmup Iteration   4: 1114765.134 ns/op
# Warmup Iteration   5: 1162206.075 ns/op
Iteration   1: 1102292.792 ns/op
Iteration   2: 1115700.469 ns/op
Iteration   3: 1102622.751 ns/op
Iteration   4: 1101691.820 ns/op
Iteration   5: 1111814.437 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1106824.454 ±(99.9%) 24971.194 ns/op [Average]
  (min, avg, max) = (1101691.820, 1106824.454, 1115700.469), stdev = 6484.940
  CI (99.9%): [1081853.260, 1131795.648] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 82.05% complete, ETA 00:26:22
# Fork: 1 of 1
# Warmup Iteration   1: 8535.882 ns/op
# Warmup Iteration   2: 6928.288 ns/op
# Warmup Iteration   3: 6435.945 ns/op
# Warmup Iteration   4: 6413.640 ns/op
# Warmup Iteration   5: 6432.708 ns/op
Iteration   1: 6438.876 ns/op
Iteration   2: 6432.450 ns/op
Iteration   3: 6430.695 ns/op
Iteration   4: 6501.387 ns/op
Iteration   5: 6422.059 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  6445.093 ±(99.9%) 123.362 ns/op [Average]
  (min, avg, max) = (6422.059, 6445.093, 6501.387), stdev = 32.037
  CI (99.9%): [6321.732, 6568.455] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 82.31% complete, ETA 00:25:59
# Fork: 1 of 1
# Warmup Iteration   1: 21114.239 ns/op
# Warmup Iteration   2: 12311.568 ns/op
# Warmup Iteration   3: 11886.445 ns/op
# Warmup Iteration   4: 11891.799 ns/op
# Warmup Iteration   5: 11901.423 ns/op
Iteration   1: 12821.509 ns/op
Iteration   2: 11875.701 ns/op
Iteration   3: 11877.898 ns/op
Iteration   4: 11836.543 ns/op
Iteration   5: 11844.748 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  12051.280 ±(99.9%) 1659.478 ns/op [Average]
  (min, avg, max) = (11836.543, 12051.280, 12821.509), stdev = 430.961
  CI (99.9%): [10391.802, 13710.757] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 82.56% complete, ETA 00:25:37
# Fork: 1 of 1
# Warmup Iteration   1: 38869.079 ns/op
# Warmup Iteration   2: 30166.813 ns/op
# Warmup Iteration   3: 28019.141 ns/op
# Warmup Iteration   4: 27603.243 ns/op
# Warmup Iteration   5: 27590.315 ns/op
Iteration   1: 27534.968 ns/op
Iteration   2: 27743.656 ns/op
Iteration   3: 27758.441 ns/op
Iteration   4: 27514.012 ns/op
Iteration   5: 27929.381 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  27696.091 ±(99.9%) 666.082 ns/op [Average]
  (min, avg, max) = (27514.012, 27696.091, 27929.381), stdev = 172.979
  CI (99.9%): [27030.010, 28362.173] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 82.82% complete, ETA 00:25:14
# Fork: 1 of 1
# Warmup Iteration   1: 87152.608 ns/op
# Warmup Iteration   2: 61431.683 ns/op
# Warmup Iteration   3: 61269.672 ns/op
# Warmup Iteration   4: 61207.694 ns/op
# Warmup Iteration   5: 60563.616 ns/op
Iteration   1: 60481.837 ns/op
Iteration   2: 60794.832 ns/op
Iteration   3: 60842.734 ns/op
Iteration   4: 61426.752 ns/op
Iteration   5: 61255.932 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  60960.417 ±(99.9%) 1460.080 ns/op [Average]
  (min, avg, max) = (60481.837, 60960.417, 61426.752), stdev = 379.178
  CI (99.9%): [59500.338, 62420.497] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 83.08% complete, ETA 00:24:52
# Fork: 1 of 1
# Warmup Iteration   1: 706334.225 ns/op
# Warmup Iteration   2: 493025.786 ns/op
# Warmup Iteration   3: 479748.721 ns/op
# Warmup Iteration   4: 479116.104 ns/op
# Warmup Iteration   5: 480896.107 ns/op
Iteration   1: 479500.700 ns/op
Iteration   2: 480407.381 ns/op
Iteration   3: 499842.654 ns/op
Iteration   4: 481856.690 ns/op
Iteration   5: 488715.498 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  486064.585 ±(99.9%) 32767.681 ns/op [Average]
  (min, avg, max) = (479500.700, 486064.585, 499842.654), stdev = 8509.663
  CI (99.9%): [453296.904, 518832.266] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 83.33% complete, ETA 00:24:29
# Fork: 1 of 1
# Warmup Iteration   1: 17182.740 ns/op
# Warmup Iteration   2: 5777.843 ns/op
# Warmup Iteration   3: 5665.912 ns/op
# Warmup Iteration   4: 5539.815 ns/op
# Warmup Iteration   5: 5539.657 ns/op
Iteration   1: 5595.780 ns/op
Iteration   2: 5528.022 ns/op
Iteration   3: 5516.560 ns/op
Iteration   4: 5531.363 ns/op
Iteration   5: 5781.651 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5590.675 ±(99.9%) 428.073 ns/op [Average]
  (min, avg, max) = (5516.560, 5590.675, 5781.651), stdev = 111.169
  CI (99.9%): [5162.603, 6018.748] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 83.59% complete, ETA 00:24:06
# Fork: 1 of 1
# Warmup Iteration   1: 31475.400 ns/op
# Warmup Iteration   2: 12439.094 ns/op
# Warmup Iteration   3: 11776.370 ns/op
# Warmup Iteration   4: 11979.012 ns/op
# Warmup Iteration   5: 11739.303 ns/op
Iteration   1: 11793.870 ns/op
Iteration   2: 11754.610 ns/op
Iteration   3: 11739.546 ns/op
Iteration   4: 11766.595 ns/op
Iteration   5: 11733.521 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  11757.628 ±(99.9%) 92.558 ns/op [Average]
  (min, avg, max) = (11733.521, 11757.628, 11793.870), stdev = 24.037
  CI (99.9%): [11665.071, 11850.186] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 83.85% complete, ETA 00:23:44
# Fork: 1 of 1
# Warmup Iteration   1: 112232.990 ns/op
# Warmup Iteration   2: 28097.889 ns/op
# Warmup Iteration   3: 21300.477 ns/op
# Warmup Iteration   4: 20847.359 ns/op
# Warmup Iteration   5: 20884.474 ns/op
Iteration   1: 21056.520 ns/op
Iteration   2: 20834.413 ns/op
Iteration   3: 21011.969 ns/op
Iteration   4: 20841.804 ns/op
Iteration   5: 21121.543 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  20973.250 ±(99.9%) 498.274 ns/op [Average]
  (min, avg, max) = (20834.413, 20973.250, 21121.543), stdev = 129.400
  CI (99.9%): [20474.976, 21471.524] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 84.10% complete, ETA 00:23:21
# Fork: 1 of 1
# Warmup Iteration   1: 470309.280 ns/op
# Warmup Iteration   2: 154319.935 ns/op
# Warmup Iteration   3: 48927.062 ns/op
# Warmup Iteration   4: 41110.945 ns/op
# Warmup Iteration   5: 40666.137 ns/op
Iteration   1: 40627.825 ns/op
Iteration   2: 40910.653 ns/op
Iteration   3: 40632.185 ns/op
Iteration   4: 40580.205 ns/op
Iteration   5: 41196.251 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  40789.424 ±(99.9%) 1009.309 ns/op [Average]
  (min, avg, max) = (40580.205, 40789.424, 41196.251), stdev = 262.114
  CI (99.9%): [39780.115, 41798.733] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 84.36% complete, ETA 00:22:58
# Fork: 1 of 1
# Warmup Iteration   1: 2796470.337 ns/op
# Warmup Iteration   2: 361786.978 ns/op
# Warmup Iteration   3: 321022.186 ns/op
# Warmup Iteration   4: 298946.578 ns/op
# Warmup Iteration   5: 299450.859 ns/op
Iteration   1: 298854.610 ns/op
Iteration   2: 299307.772 ns/op
Iteration   3: 298843.610 ns/op
Iteration   4: 298792.602 ns/op
Iteration   5: 300496.783 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  299259.076 ±(99.9%) 2782.135 ns/op [Average]
  (min, avg, max) = (298792.602, 299259.076, 300496.783), stdev = 722.512
  CI (99.9%): [296476.940, 302041.211] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 84.62% complete, ETA 00:22:36
# Fork: 1 of 1
# Warmup Iteration   1: 6900.987 ns/op
# Warmup Iteration   2: 3532.356 ns/op
# Warmup Iteration   3: 3404.643 ns/op
# Warmup Iteration   4: 3403.191 ns/op
# Warmup Iteration   5: 3395.944 ns/op
Iteration   1: 3394.459 ns/op
Iteration   2: 3412.851 ns/op
Iteration   3: 3440.974 ns/op
Iteration   4: 3411.587 ns/op
Iteration   5: 3413.102 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3414.595 ±(99.9%) 64.307 ns/op [Average]
  (min, avg, max) = (3394.459, 3414.595, 3440.974), stdev = 16.700
  CI (99.9%): [3350.288, 3478.901] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 84.87% complete, ETA 00:22:13
# Fork: 1 of 1
# Warmup Iteration   1: 15153.223 ns/op
# Warmup Iteration   2: 7099.287 ns/op
# Warmup Iteration   3: 6784.772 ns/op
# Warmup Iteration   4: 6758.381 ns/op
# Warmup Iteration   5: 6749.923 ns/op
Iteration   1: 6751.721 ns/op
Iteration   2: 6738.250 ns/op
Iteration   3: 6782.766 ns/op
Iteration   4: 6718.303 ns/op
Iteration   5: 6755.572 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6749.323 ±(99.9%) 91.287 ns/op [Average]
  (min, avg, max) = (6718.303, 6749.323, 6782.766), stdev = 23.707
  CI (99.9%): [6658.036, 6840.609] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 85.13% complete, ETA 00:21:51
# Fork: 1 of 1
# Warmup Iteration   1: 34098.589 ns/op
# Warmup Iteration   2: 14238.663 ns/op
# Warmup Iteration   3: 13953.669 ns/op
# Warmup Iteration   4: 13846.960 ns/op
# Warmup Iteration   5: 13864.282 ns/op
Iteration   1: 13817.041 ns/op
Iteration   2: 13824.252 ns/op
Iteration   3: 13840.290 ns/op
Iteration   4: 13828.011 ns/op
Iteration   5: 13867.956 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  13835.510 ±(99.9%) 77.005 ns/op [Average]
  (min, avg, max) = (13817.041, 13835.510, 13867.956), stdev = 19.998
  CI (99.9%): [13758.505, 13912.515] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 85.38% complete, ETA 00:21:28
# Fork: 1 of 1
# Warmup Iteration   1: 44379.089 ns/op
# Warmup Iteration   2: 27632.574 ns/op
# Warmup Iteration   3: 25382.018 ns/op
# Warmup Iteration   4: 25005.855 ns/op
# Warmup Iteration   5: 25041.178 ns/op
Iteration   1: 26280.583 ns/op
Iteration   2: 25274.488 ns/op
Iteration   3: 24960.949 ns/op
Iteration   4: 25336.801 ns/op
Iteration   5: 25007.357 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  25372.036 ±(99.9%) 2054.056 ns/op [Average]
  (min, avg, max) = (24960.949, 25372.036, 26280.583), stdev = 533.432
  CI (99.9%): [23317.980, 27426.091] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 85.64% complete, ETA 00:21:05
# Fork: 1 of 1
# Warmup Iteration   1: 314500.672 ns/op
# Warmup Iteration   2: 236060.827 ns/op
# Warmup Iteration   3: 217429.479 ns/op
# Warmup Iteration   4: 218139.031 ns/op
# Warmup Iteration   5: 219127.063 ns/op
Iteration   1: 219607.155 ns/op
Iteration   2: 217697.690 ns/op
Iteration   3: 217958.007 ns/op
Iteration   4: 218192.199 ns/op
Iteration   5: 217573.213 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  218205.653 ±(99.9%) 3154.077 ns/op [Average]
  (min, avg, max) = (217573.213, 218205.653, 219607.155), stdev = 819.104
  CI (99.9%): [215051.575, 221359.730] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 85.90% complete, ETA 00:20:43
# Fork: 1 of 1
# Warmup Iteration   1: 13619.960 ns/op
# Warmup Iteration   2: 4492.336 ns/op
# Warmup Iteration   3: 4539.194 ns/op
# Warmup Iteration   4: 4563.112 ns/op
# Warmup Iteration   5: 4362.802 ns/op
Iteration   1: 4408.562 ns/op
Iteration   2: 4355.822 ns/op
Iteration   3: 4392.175 ns/op
Iteration   4: 4399.517 ns/op
Iteration   5: 4383.329 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4387.881 ±(99.9%) 77.733 ns/op [Average]
  (min, avg, max) = (4355.822, 4387.881, 4408.562), stdev = 20.187
  CI (99.9%): [4310.148, 4465.614] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 86.15% complete, ETA 00:20:20
# Fork: 1 of 1
# Warmup Iteration   1: 42240.783 ns/op
# Warmup Iteration   2: 9508.031 ns/op
# Warmup Iteration   3: 7929.858 ns/op
# Warmup Iteration   4: 7740.343 ns/op
# Warmup Iteration   5: 7748.458 ns/op
Iteration   1: 7798.162 ns/op
Iteration   2: 7739.399 ns/op
Iteration   3: 7760.268 ns/op
Iteration   4: 7799.735 ns/op
Iteration   5: 7791.367 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7777.786 ±(99.9%) 102.997 ns/op [Average]
  (min, avg, max) = (7739.399, 7777.786, 7799.735), stdev = 26.748
  CI (99.9%): [7674.789, 7880.783] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 86.41% complete, ETA 00:19:58
# Fork: 1 of 1
# Warmup Iteration   1: 167828.434 ns/op
# Warmup Iteration   2: 37663.800 ns/op
# Warmup Iteration   3: 16144.278 ns/op
# Warmup Iteration   4: 15544.305 ns/op
# Warmup Iteration   5: 15359.469 ns/op
Iteration   1: 15285.938 ns/op
Iteration   2: 16068.115 ns/op
Iteration   3: 15311.442 ns/op
Iteration   4: 15311.137 ns/op
Iteration   5: 15364.395 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15468.205 ±(99.9%) 1296.036 ns/op [Average]
  (min, avg, max) = (15285.938, 15468.205, 16068.115), stdev = 336.577
  CI (99.9%): [14172.169, 16764.241] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 86.67% complete, ETA 00:19:35
# Fork: 1 of 1
# Warmup Iteration   1: 143923.856 ns/op
# Warmup Iteration   2: 34283.184 ns/op
# Warmup Iteration   3: 29004.450 ns/op
# Warmup Iteration   4: 29348.321 ns/op
# Warmup Iteration   5: 28598.665 ns/op
Iteration   1: 28608.101 ns/op
Iteration   2: 28788.790 ns/op
Iteration   3: 28887.912 ns/op
Iteration   4: 28629.470 ns/op
Iteration   5: 28650.341 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  28712.923 ±(99.9%) 464.659 ns/op [Average]
  (min, avg, max) = (28608.101, 28712.923, 28887.912), stdev = 120.670
  CI (99.9%): [28248.264, 29177.582] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 86.92% complete, ETA 00:19:12
# Fork: 1 of 1
# Warmup Iteration   1: 1990353.258 ns/op
# Warmup Iteration   2: 255580.901 ns/op
# Warmup Iteration   3: 225648.819 ns/op
# Warmup Iteration   4: 218550.773 ns/op
# Warmup Iteration   5: 225858.610 ns/op
Iteration   1: 217420.440 ns/op
Iteration   2: 217334.295 ns/op
Iteration   3: 218677.903 ns/op
Iteration   4: 224460.984 ns/op
Iteration   5: 218404.366 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  219259.597 ±(99.9%) 11425.046 ns/op [Average]
  (min, avg, max) = (217334.295, 219259.597, 224460.984), stdev = 2967.048
  CI (99.9%): [207834.551, 230684.643] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 87.18% complete, ETA 00:18:50
# Fork: 1 of 1
# Warmup Iteration   1: 11964.231 ns/op
# Warmup Iteration   2: 6456.060 ns/op
# Warmup Iteration   3: 6301.103 ns/op
# Warmup Iteration   4: 6565.762 ns/op
# Warmup Iteration   5: 6268.952 ns/op
Iteration   1: 6271.975 ns/op
Iteration   2: 6283.872 ns/op
Iteration   3: 6271.954 ns/op
Iteration   4: 6274.512 ns/op
Iteration   5: 6270.432 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6274.549 ±(99.9%) 20.845 ns/op [Average]
  (min, avg, max) = (6270.432, 6274.549, 6283.872), stdev = 5.413
  CI (99.9%): [6253.704, 6295.394] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 87.44% complete, ETA 00:18:27
# Fork: 1 of 1
# Warmup Iteration   1: 45147.246 ns/op
# Warmup Iteration   2: 12673.053 ns/op
# Warmup Iteration   3: 10493.528 ns/op
# Warmup Iteration   4: 9771.562 ns/op
# Warmup Iteration   5: 9814.531 ns/op
Iteration   1: 9747.410 ns/op
Iteration   2: 9753.814 ns/op
Iteration   3: 9777.137 ns/op
Iteration   4: 9778.134 ns/op
Iteration   5: 9738.876 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9759.074 ±(99.9%) 68.376 ns/op [Average]
  (min, avg, max) = (9738.876, 9759.074, 9778.134), stdev = 17.757
  CI (99.9%): [9690.698, 9827.450] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 87.69% complete, ETA 00:18:04
# Fork: 1 of 1
# Warmup Iteration   1: 75320.295 ns/op
# Warmup Iteration   2: 25803.360 ns/op
# Warmup Iteration   3: 18213.386 ns/op
# Warmup Iteration   4: 17990.361 ns/op
# Warmup Iteration   5: 18271.457 ns/op
Iteration   1: 17945.831 ns/op
Iteration   2: 17955.762 ns/op
Iteration   3: 17958.231 ns/op
Iteration   4: 17996.530 ns/op
Iteration   5: 18311.485 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  18033.568 ±(99.9%) 602.835 ns/op [Average]
  (min, avg, max) = (17945.831, 18033.568, 18311.485), stdev = 156.554
  CI (99.9%): [17430.733, 18636.402] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 87.95% complete, ETA 00:17:42
# Fork: 1 of 1
# Warmup Iteration   1: 134319.748 ns/op
# Warmup Iteration   2: 30709.748 ns/op
# Warmup Iteration   3: 27638.775 ns/op
# Warmup Iteration   4: 28068.464 ns/op
# Warmup Iteration   5: 27468.229 ns/op
Iteration   1: 27308.801 ns/op
Iteration   2: 27306.574 ns/op
Iteration   3: 27242.352 ns/op
Iteration   4: 27463.858 ns/op
Iteration   5: 27300.144 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  27324.346 ±(99.9%) 318.289 ns/op [Average]
  (min, avg, max) = (27242.352, 27324.346, 27463.858), stdev = 82.659
  CI (99.9%): [27006.057, 27642.635] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 88.21% complete, ETA 00:17:19
# Fork: 1 of 1
# Warmup Iteration   1: 385354.012 ns/op
# Warmup Iteration   2: 169423.171 ns/op
# Warmup Iteration   3: 184087.015 ns/op
# Warmup Iteration   4: 170158.741 ns/op
# Warmup Iteration   5: 164257.646 ns/op
Iteration   1: 163448.151 ns/op
Iteration   2: 163922.666 ns/op
Iteration   3: 163630.918 ns/op
Iteration   4: 165741.901 ns/op
Iteration   5: 163875.760 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  164123.879 ±(99.9%) 3560.369 ns/op [Average]
  (min, avg, max) = (163448.151, 164123.879, 165741.901), stdev = 924.617
  CI (99.9%): [160563.510, 167684.248] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 88.46% complete, ETA 00:16:57
# Fork: 1 of 1
# Warmup Iteration   1: 9705.015 ns/op
# Warmup Iteration   2: 3116.889 ns/op
# Warmup Iteration   3: 3019.382 ns/op
# Warmup Iteration   4: 2972.653 ns/op
# Warmup Iteration   5: 2909.708 ns/op
Iteration   1: 2906.743 ns/op
Iteration   2: 2920.874 ns/op
Iteration   3: 2929.822 ns/op
Iteration   4: 3005.174 ns/op
Iteration   5: 2933.439 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2939.210 ±(99.9%) 147.423 ns/op [Average]
  (min, avg, max) = (2906.743, 2939.210, 3005.174), stdev = 38.285
  CI (99.9%): [2791.788, 3086.633] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 88.72% complete, ETA 00:16:34
# Fork: 1 of 1
# Warmup Iteration   1: 23179.689 ns/op
# Warmup Iteration   2: 5322.030 ns/op
# Warmup Iteration   3: 4987.568 ns/op
# Warmup Iteration   4: 4967.130 ns/op
# Warmup Iteration   5: 5180.000 ns/op
Iteration   1: 4974.538 ns/op
Iteration   2: 5002.840 ns/op
Iteration   3: 4969.636 ns/op
Iteration   4: 5003.644 ns/op
Iteration   5: 5005.072 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4991.146 ±(99.9%) 67.397 ns/op [Average]
  (min, avg, max) = (4969.636, 4991.146, 5005.072), stdev = 17.503
  CI (99.9%): [4923.749, 5058.543] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 88.97% complete, ETA 00:16:11
# Fork: 1 of 1
# Warmup Iteration   1: 36700.357 ns/op
# Warmup Iteration   2: 9806.932 ns/op
# Warmup Iteration   3: 8638.467 ns/op
# Warmup Iteration   4: 8916.929 ns/op
# Warmup Iteration   5: 8561.290 ns/op
Iteration   1: 8566.051 ns/op
Iteration   2: 8564.024 ns/op
Iteration   3: 8608.762 ns/op
Iteration   4: 8570.423 ns/op
Iteration   5: 8588.755 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8579.603 ±(99.9%) 73.179 ns/op [Average]
  (min, avg, max) = (8564.024, 8579.603, 8608.762), stdev = 19.004
  CI (99.9%): [8506.424, 8652.782] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 89.23% complete, ETA 00:15:49
# Fork: 1 of 1
# Warmup Iteration   1: 95896.019 ns/op
# Warmup Iteration   2: 19446.272 ns/op
# Warmup Iteration   3: 18074.684 ns/op
# Warmup Iteration   4: 17951.231 ns/op
# Warmup Iteration   5: 17961.165 ns/op
Iteration   1: 17966.186 ns/op
Iteration   2: 17964.926 ns/op
Iteration   3: 18099.012 ns/op
Iteration   4: 18093.711 ns/op
Iteration   5: 17969.509 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  18018.669 ±(99.9%) 273.272 ns/op [Average]
  (min, avg, max) = (17964.926, 18018.669, 18099.012), stdev = 70.968
  CI (99.9%): [17745.396, 18291.941] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 89.49% complete, ETA 00:15:26
# Fork: 1 of 1
# Warmup Iteration   1: 652290.641 ns/op
# Warmup Iteration   2: 173902.456 ns/op
# Warmup Iteration   3: 155867.399 ns/op
# Warmup Iteration   4: 150264.733 ns/op
# Warmup Iteration   5: 150009.141 ns/op
Iteration   1: 149821.755 ns/op
Iteration   2: 152669.542 ns/op
Iteration   3: 149527.118 ns/op
Iteration   4: 149595.605 ns/op
Iteration   5: 149614.599 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  150245.724 ±(99.9%) 5234.615 ns/op [Average]
  (min, avg, max) = (149527.118, 150245.724, 152669.542), stdev = 1359.413
  CI (99.9%): [145011.109, 155480.338] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 89.74% complete, ETA 00:15:04
# Fork: 1 of 1
# Warmup Iteration   1: 7936.659 ns/op
# Warmup Iteration   2: 4973.037 ns/op
# Warmup Iteration   3: 4804.859 ns/op
# Warmup Iteration   4: 4838.361 ns/op
# Warmup Iteration   5: 4842.657 ns/op
Iteration   1: 4820.083 ns/op
Iteration   2: 4796.718 ns/op
Iteration   3: 4811.965 ns/op
Iteration   4: 4811.387 ns/op
Iteration   5: 4803.547 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4808.740 ±(99.9%) 34.310 ns/op [Average]
  (min, avg, max) = (4796.718, 4808.740, 4820.083), stdev = 8.910
  CI (99.9%): [4774.430, 4843.050] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 90.00% complete, ETA 00:14:41
# Fork: 1 of 1
# Warmup Iteration   1: 22818.674 ns/op
# Warmup Iteration   2: 9629.267 ns/op
# Warmup Iteration   3: 9316.020 ns/op
# Warmup Iteration   4: 9374.287 ns/op
# Warmup Iteration   5: 9327.936 ns/op
Iteration   1: 9313.044 ns/op
Iteration   2: 9320.173 ns/op
Iteration   3: 9314.894 ns/op
Iteration   4: 9356.518 ns/op
Iteration   5: 9346.918 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9330.309 ±(99.9%) 77.042 ns/op [Average]
  (min, avg, max) = (9313.044, 9330.309, 9356.518), stdev = 20.008
  CI (99.9%): [9253.267, 9407.352] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 90.26% complete, ETA 00:14:18
# Fork: 1 of 1
# Warmup Iteration   1: 35897.817 ns/op
# Warmup Iteration   2: 19539.724 ns/op
# Warmup Iteration   3: 19235.713 ns/op
# Warmup Iteration   4: 19072.974 ns/op
# Warmup Iteration   5: 19079.522 ns/op
Iteration   1: 19182.215 ns/op
Iteration   2: 19067.480 ns/op
Iteration   3: 19145.373 ns/op
Iteration   4: 19138.665 ns/op
Iteration   5: 19104.189 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  19127.584 ±(99.9%) 167.664 ns/op [Average]
  (min, avg, max) = (19067.480, 19127.584, 19182.215), stdev = 43.542
  CI (99.9%): [18959.920, 19295.248] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 90.51% complete, ETA 00:13:56
# Fork: 1 of 1
# Warmup Iteration   1: 91843.275 ns/op
# Warmup Iteration   2: 41427.147 ns/op
# Warmup Iteration   3: 40901.804 ns/op
# Warmup Iteration   4: 39670.541 ns/op
# Warmup Iteration   5: 39590.820 ns/op
Iteration   1: 39554.974 ns/op
Iteration   2: 39573.853 ns/op
Iteration   3: 39601.553 ns/op
Iteration   4: 39535.123 ns/op
Iteration   5: 39562.698 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  39565.640 ±(99.9%) 94.535 ns/op [Average]
  (min, avg, max) = (39535.123, 39565.640, 39601.553), stdev = 24.550
  CI (99.9%): [39471.105, 39660.175] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 90.77% complete, ETA 00:13:33
# Fork: 1 of 1
# Warmup Iteration   1: 903776.995 ns/op
# Warmup Iteration   2: 426522.942 ns/op
# Warmup Iteration   3: 376449.370 ns/op
# Warmup Iteration   4: 376569.662 ns/op
# Warmup Iteration   5: 375509.251 ns/op
Iteration   1: 376503.732 ns/op
Iteration   2: 376617.940 ns/op
Iteration   3: 376504.834 ns/op
Iteration   4: 375800.819 ns/op
Iteration   5: 375904.218 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  376266.309 ±(99.9%) 1472.210 ns/op [Average]
  (min, avg, max) = (375800.819, 376266.309, 376617.940), stdev = 382.328
  CI (99.9%): [374794.099, 377738.518] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 91.03% complete, ETA 00:13:11
# Fork: 1 of 1
# Warmup Iteration   1: 67961.095 ns/op
# Warmup Iteration   2: 33672.974 ns/op
# Warmup Iteration   3: 26940.771 ns/op
# Warmup Iteration   4: 27092.931 ns/op
# Warmup Iteration   5: 26640.095 ns/op
Iteration   1: 26601.753 ns/op
Iteration   2: 26727.513 ns/op
Iteration   3: 26803.952 ns/op
Iteration   4: 26597.687 ns/op
Iteration   5: 26647.491 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  26675.679 ±(99.9%) 341.620 ns/op [Average]
  (min, avg, max) = (26597.687, 26675.679, 26803.952), stdev = 88.718
  CI (99.9%): [26334.059, 27017.299] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 91.28% complete, ETA 00:12:48
# Fork: 1 of 1
# Warmup Iteration   1: 110657.462 ns/op
# Warmup Iteration   2: 47792.146 ns/op
# Warmup Iteration   3: 40198.207 ns/op
# Warmup Iteration   4: 40297.455 ns/op
# Warmup Iteration   5: 39753.256 ns/op
Iteration   1: 39847.348 ns/op
Iteration   2: 39886.288 ns/op
Iteration   3: 39715.706 ns/op
Iteration   4: 39653.461 ns/op
Iteration   5: 39792.540 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  39779.069 ±(99.9%) 365.970 ns/op [Average]
  (min, avg, max) = (39653.461, 39779.069, 39886.288), stdev = 95.041
  CI (99.9%): [39413.098, 40145.039] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 91.54% complete, ETA 00:12:25
# Fork: 1 of 1
# Warmup Iteration   1: 118546.868 ns/op
# Warmup Iteration   2: 73891.130 ns/op
# Warmup Iteration   3: 59323.373 ns/op
# Warmup Iteration   4: 59144.824 ns/op
# Warmup Iteration   5: 59652.724 ns/op
Iteration   1: 58868.277 ns/op
Iteration   2: 58711.888 ns/op
Iteration   3: 58841.957 ns/op
Iteration   4: 58768.799 ns/op
Iteration   5: 58963.180 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  58830.820 ±(99.9%) 370.532 ns/op [Average]
  (min, avg, max) = (58711.888, 58830.820, 58963.180), stdev = 96.226
  CI (99.9%): [58460.288, 59201.352] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 91.79% complete, ETA 00:12:03
# Fork: 1 of 1
# Warmup Iteration   1: 297655.301 ns/op
# Warmup Iteration   2: 140324.132 ns/op
# Warmup Iteration   3: 124893.202 ns/op
# Warmup Iteration   4: 122078.443 ns/op
# Warmup Iteration   5: 126044.019 ns/op
Iteration   1: 122449.667 ns/op
Iteration   2: 121862.074 ns/op
Iteration   3: 121845.265 ns/op
Iteration   4: 122286.764 ns/op
Iteration   5: 126158.106 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  122920.375 ±(99.9%) 7043.047 ns/op [Average]
  (min, avg, max) = (121845.265, 122920.375, 126158.106), stdev = 1829.057
  CI (99.9%): [115877.328, 129963.422] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 92.05% complete, ETA 00:11:40
# Fork: 1 of 1
# Warmup Iteration   1: 1543327.963 ns/op
# Warmup Iteration   2: 1185790.179 ns/op
# Warmup Iteration   3: 981717.418 ns/op
# Warmup Iteration   4: 969731.739 ns/op
# Warmup Iteration   5: 976511.182 ns/op
Iteration   1: 967832.639 ns/op
Iteration   2: 967059.173 ns/op
Iteration   3: 966630.322 ns/op
Iteration   4: 997297.664 ns/op
Iteration   5: 967532.515 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  973270.463 ±(99.9%) 51750.419 ns/op [Average]
  (min, avg, max) = (966630.322, 973270.463, 997297.664), stdev = 13439.419
  CI (99.9%): [921520.044, 1025020.881] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 92.31% complete, ETA 00:11:18
# Fork: 1 of 1
# Warmup Iteration   1: 4927.871 ns/op
# Warmup Iteration   2: 2472.570 ns/op
# Warmup Iteration   3: 2382.458 ns/op
# Warmup Iteration   4: 2383.511 ns/op
# Warmup Iteration   5: 2395.833 ns/op
Iteration   1: 2397.280 ns/op
Iteration   2: 2446.388 ns/op
Iteration   3: 2386.320 ns/op
Iteration   4: 2390.099 ns/op
Iteration   5: 2423.540 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2408.726 ±(99.9%) 98.509 ns/op [Average]
  (min, avg, max) = (2386.320, 2408.726, 2446.388), stdev = 25.583
  CI (99.9%): [2310.216, 2507.235] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 92.56% complete, ETA 00:10:55
# Fork: 1 of 1
# Warmup Iteration   1: 7806.344 ns/op
# Warmup Iteration   2: 3902.280 ns/op
# Warmup Iteration   3: 3880.754 ns/op
# Warmup Iteration   4: 3907.912 ns/op
# Warmup Iteration   5: 3819.798 ns/op
Iteration   1: 3858.730 ns/op
Iteration   2: 3851.924 ns/op
Iteration   3: 3854.236 ns/op
Iteration   4: 3947.051 ns/op
Iteration   5: 3854.205 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3873.229 ±(99.9%) 159.191 ns/op [Average]
  (min, avg, max) = (3851.924, 3873.229, 3947.051), stdev = 41.341
  CI (99.9%): [3714.038, 4032.420] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 92.82% complete, ETA 00:10:32
# Fork: 1 of 1
# Warmup Iteration   1: 12903.006 ns/op
# Warmup Iteration   2: 7189.011 ns/op
# Warmup Iteration   3: 6281.393 ns/op
# Warmup Iteration   4: 6345.131 ns/op
# Warmup Iteration   5: 6254.122 ns/op
Iteration   1: 6394.107 ns/op
Iteration   2: 6265.528 ns/op
Iteration   3: 6364.937 ns/op
Iteration   4: 6326.799 ns/op
Iteration   5: 6527.264 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6375.727 ±(99.9%) 375.094 ns/op [Average]
  (min, avg, max) = (6265.528, 6375.727, 6527.264), stdev = 97.411
  CI (99.9%): [6000.633, 6750.821] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 93.08% complete, ETA 00:10:10
# Fork: 1 of 1
# Warmup Iteration   1: 58026.820 ns/op
# Warmup Iteration   2: 12843.425 ns/op
# Warmup Iteration   3: 13678.705 ns/op
# Warmup Iteration   4: 12254.479 ns/op
# Warmup Iteration   5: 12291.900 ns/op
Iteration   1: 12410.431 ns/op
Iteration   2: 12347.787 ns/op
Iteration   3: 12430.135 ns/op
Iteration   4: 12256.524 ns/op
Iteration   5: 12257.171 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  12340.410 ±(99.9%) 316.208 ns/op [Average]
  (min, avg, max) = (12256.524, 12340.410, 12430.135), stdev = 82.118
  CI (99.9%): [12024.201, 12656.618] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 93.33% complete, ETA 00:09:47
# Fork: 1 of 1
# Warmup Iteration   1: 204575.265 ns/op
# Warmup Iteration   2: 128605.227 ns/op
# Warmup Iteration   3: 119803.527 ns/op
# Warmup Iteration   4: 120094.268 ns/op
# Warmup Iteration   5: 120064.719 ns/op
Iteration   1: 119931.731 ns/op
Iteration   2: 119743.151 ns/op
Iteration   3: 119616.839 ns/op
Iteration   4: 119500.846 ns/op
Iteration   5: 119370.999 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  119632.713 ±(99.9%) 834.230 ns/op [Average]
  (min, avg, max) = (119370.999, 119632.713, 119931.731), stdev = 216.647
  CI (99.9%): [118798.483, 120466.943] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 93.59% complete, ETA 00:09:25
# Fork: 1 of 1
# Warmup Iteration   1: 8913.268 ns/op
# Warmup Iteration   2: 5628.519 ns/op
# Warmup Iteration   3: 5787.110 ns/op
# Warmup Iteration   4: 5932.487 ns/op
# Warmup Iteration   5: 5774.815 ns/op
Iteration   1: 5817.263 ns/op
Iteration   2: 5834.991 ns/op
Iteration   3: 5820.210 ns/op
Iteration   4: 5791.583 ns/op
Iteration   5: 5856.541 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5824.118 ±(99.9%) 92.139 ns/op [Average]
  (min, avg, max) = (5791.583, 5824.118, 5856.541), stdev = 23.928
  CI (99.9%): [5731.978, 5916.257] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 93.85% complete, ETA 00:09:02
# Fork: 1 of 1
# Warmup Iteration   1: 16064.701 ns/op
# Warmup Iteration   2: 10022.484 ns/op
# Warmup Iteration   3: 10446.108 ns/op
# Warmup Iteration   4: 10397.375 ns/op
# Warmup Iteration   5: 10476.309 ns/op
Iteration   1: 10450.724 ns/op
Iteration   2: 10419.114 ns/op
Iteration   3: 10482.019 ns/op
Iteration   4: 10445.237 ns/op
Iteration   5: 10352.756 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  10429.970 ±(99.9%) 187.191 ns/op [Average]
  (min, avg, max) = (10352.756, 10429.970, 10482.019), stdev = 48.613
  CI (99.9%): [10242.779, 10617.161] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 94.10% complete, ETA 00:08:39
# Fork: 1 of 1
# Warmup Iteration   1: 24692.010 ns/op
# Warmup Iteration   2: 18309.921 ns/op
# Warmup Iteration   3: 18286.458 ns/op
# Warmup Iteration   4: 18152.370 ns/op
# Warmup Iteration   5: 18266.784 ns/op
Iteration   1: 19191.598 ns/op
Iteration   2: 19046.441 ns/op
Iteration   3: 19113.791 ns/op
Iteration   4: 19171.450 ns/op
Iteration   5: 19082.031 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  19121.062 ±(99.9%) 233.107 ns/op [Average]
  (min, avg, max) = (19046.441, 19121.062, 19191.598), stdev = 60.537
  CI (99.9%): [18887.955, 19354.169] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 94.36% complete, ETA 00:08:17
# Fork: 1 of 1
# Warmup Iteration   1: 49178.336 ns/op
# Warmup Iteration   2: 33908.727 ns/op
# Warmup Iteration   3: 33532.092 ns/op
# Warmup Iteration   4: 33942.297 ns/op
# Warmup Iteration   5: 33613.054 ns/op
Iteration   1: 34411.347 ns/op
Iteration   2: 34683.040 ns/op
Iteration   3: 34578.773 ns/op
Iteration   4: 34536.460 ns/op
Iteration   5: 34560.114 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  34553.947 ±(99.9%) 375.116 ns/op [Average]
  (min, avg, max) = (34411.347, 34553.947, 34683.040), stdev = 97.416
  CI (99.9%): [34178.831, 34929.062] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 94.62% complete, ETA 00:07:54
# Fork: 1 of 1
# Warmup Iteration   1: 623809.710 ns/op
# Warmup Iteration   2: 556034.265 ns/op
# Warmup Iteration   3: 507721.209 ns/op
# Warmup Iteration   4: 552894.903 ns/op
# Warmup Iteration   5: 497852.887 ns/op
Iteration   1: 495243.095 ns/op
Iteration   2: 493185.215 ns/op
Iteration   3: 493806.523 ns/op
Iteration   4: 496033.324 ns/op
Iteration   5: 493617.087 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  494377.049 ±(99.9%) 4643.497 ns/op [Average]
  (min, avg, max) = (493185.215, 494377.049, 496033.324), stdev = 1205.901
  CI (99.9%): [489733.552, 499020.545] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 94.87% complete, ETA 00:07:32
# Fork: 1 of 1
# Warmup Iteration   1: 4079.249 ns/op
# Warmup Iteration   2: 2448.066 ns/op
# Warmup Iteration   3: 2885.851 ns/op
# Warmup Iteration   4: 2821.434 ns/op
# Warmup Iteration   5: 2818.158 ns/op
Iteration   1: 2825.688 ns/op
Iteration   2: 2819.252 ns/op
Iteration   3: 2825.955 ns/op
Iteration   4: 2861.864 ns/op
Iteration   5: 2853.766 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2837.305 ±(99.9%) 73.662 ns/op [Average]
  (min, avg, max) = (2819.252, 2837.305, 2861.864), stdev = 19.130
  CI (99.9%): [2763.643, 2910.967] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 95.13% complete, ETA 00:07:09
# Fork: 1 of 1
# Warmup Iteration   1: 9177.953 ns/op
# Warmup Iteration   2: 5189.439 ns/op
# Warmup Iteration   3: 4560.245 ns/op
# Warmup Iteration   4: 4429.111 ns/op
# Warmup Iteration   5: 4430.038 ns/op
Iteration   1: 4423.010 ns/op
Iteration   2: 4447.839 ns/op
Iteration   3: 4421.091 ns/op
Iteration   4: 4427.517 ns/op
Iteration   5: 4423.826 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4428.657 ±(99.9%) 42.258 ns/op [Average]
  (min, avg, max) = (4421.091, 4428.657, 4447.839), stdev = 10.974
  CI (99.9%): [4386.398, 4470.915] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 95.38% complete, ETA 00:06:46
# Fork: 1 of 1
# Warmup Iteration   1: 19784.633 ns/op
# Warmup Iteration   2: 10163.308 ns/op
# Warmup Iteration   3: 10613.570 ns/op
# Warmup Iteration   4: 10424.874 ns/op
# Warmup Iteration   5: 10467.452 ns/op
Iteration   1: 10457.361 ns/op
Iteration   2: 10435.347 ns/op
Iteration   3: 10433.485 ns/op
Iteration   4: 10574.712 ns/op
Iteration   5: 10491.680 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  10478.517 ±(99.9%) 225.895 ns/op [Average]
  (min, avg, max) = (10433.485, 10478.517, 10574.712), stdev = 58.664
  CI (99.9%): [10252.622, 10704.412] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 95.64% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: 40646.526 ns/op
# Warmup Iteration   2: 17402.562 ns/op
# Warmup Iteration   3: 20475.611 ns/op
# Warmup Iteration   4: 20518.163 ns/op
# Warmup Iteration   5: 20344.620 ns/op
Iteration   1: 20225.029 ns/op
Iteration   2: 19957.666 ns/op
Iteration   3: 20187.526 ns/op
Iteration   4: 19683.987 ns/op
Iteration   5: 19963.410 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  20003.524 ±(99.9%) 836.435 ns/op [Average]
  (min, avg, max) = (19683.987, 20003.524, 20225.029), stdev = 217.219
  CI (99.9%): [19167.089, 20839.959] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 95.90% complete, ETA 00:06:01
# Fork: 1 of 1
# Warmup Iteration   1: 290052.023 ns/op
# Warmup Iteration   2: 182719.241 ns/op
# Warmup Iteration   3: 148614.331 ns/op
# Warmup Iteration   4: 141333.348 ns/op
# Warmup Iteration   5: 141348.526 ns/op
Iteration   1: 143205.060 ns/op
Iteration   2: 141061.381 ns/op
Iteration   3: 141903.719 ns/op
Iteration   4: 141006.912 ns/op
Iteration   5: 141222.324 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  141679.879 ±(99.9%) 3561.097 ns/op [Average]
  (min, avg, max) = (141006.912, 141679.879, 143205.060), stdev = 924.806
  CI (99.9%): [138118.782, 145240.977] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 96.15% complete, ETA 00:05:39
# Fork: 1 of 1
# Warmup Iteration   1: 33739.373 ns/op
# Warmup Iteration   2: 17240.964 ns/op
# Warmup Iteration   3: 17841.532 ns/op
# Warmup Iteration   4: 17004.038 ns/op
# Warmup Iteration   5: 17002.754 ns/op
Iteration   1: 17002.676 ns/op
Iteration   2: 18076.633 ns/op
Iteration   3: 17051.197 ns/op
Iteration   4: 17212.689 ns/op
Iteration   5: 17448.518 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  17358.342 ±(99.9%) 1685.206 ns/op [Average]
  (min, avg, max) = (17002.676, 17358.342, 18076.633), stdev = 437.643
  CI (99.9%): [15673.136, 19043.549] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 96.41% complete, ETA 00:05:16
# Fork: 1 of 1
# Warmup Iteration   1: 61285.268 ns/op
# Warmup Iteration   2: 34603.371 ns/op
# Warmup Iteration   3: 35270.855 ns/op
# Warmup Iteration   4: 32078.278 ns/op
# Warmup Iteration   5: 32056.535 ns/op
Iteration   1: 31931.898 ns/op
Iteration   2: 32353.271 ns/op
Iteration   3: 32658.355 ns/op
Iteration   4: 32631.069 ns/op
Iteration   5: 32590.131 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  32432.945 ±(99.9%) 1174.552 ns/op [Average]
  (min, avg, max) = (31931.898, 32432.945, 32658.355), stdev = 305.027
  CI (99.9%): [31258.393, 33607.497] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 96.67% complete, ETA 00:04:53
# Fork: 1 of 1
# Warmup Iteration   1: 140643.287 ns/op
# Warmup Iteration   2: 72639.615 ns/op
# Warmup Iteration   3: 71745.526 ns/op
# Warmup Iteration   4: 71681.524 ns/op
# Warmup Iteration   5: 71561.377 ns/op
Iteration   1: 71782.478 ns/op
Iteration   2: 73499.330 ns/op
Iteration   3: 72232.169 ns/op
Iteration   4: 72291.326 ns/op
Iteration   5: 71687.177 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  72298.496 ±(99.9%) 2781.034 ns/op [Average]
  (min, avg, max) = (71687.177, 72298.496, 73499.330), stdev = 722.226
  CI (99.9%): [69517.462, 75079.530] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 96.92% complete, ETA 00:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 337796.813 ns/op
# Warmup Iteration   2: 179579.691 ns/op
# Warmup Iteration   3: 169115.085 ns/op
# Warmup Iteration   4: 162846.123 ns/op
# Warmup Iteration   5: 163000.669 ns/op
Iteration   1: 163945.897 ns/op
Iteration   2: 164376.843 ns/op
Iteration   3: 165378.449 ns/op
Iteration   4: 162698.854 ns/op
Iteration   5: 163568.328 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  163993.674 ±(99.9%) 3813.976 ns/op [Average]
  (min, avg, max) = (162698.854, 163993.674, 165378.449), stdev = 990.477
  CI (99.9%): [160179.698, 167807.650] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 97.18% complete, ETA 00:04:08
# Fork: 1 of 1
# Warmup Iteration   1: 2334388.764 ns/op
# Warmup Iteration   2: 1434188.016 ns/op
# Warmup Iteration   3: 1452177.183 ns/op
# Warmup Iteration   4: 1457391.565 ns/op
# Warmup Iteration   5: 1421864.787 ns/op
Iteration   1: 1419684.432 ns/op
Iteration   2: 1416150.046 ns/op
Iteration   3: 1417941.762 ns/op
Iteration   4: 1448426.560 ns/op
Iteration   5: 1409657.304 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1422372.021 ±(99.9%) 57953.993 ns/op [Average]
  (min, avg, max) = (1409657.304, 1422372.021, 1448426.560), stdev = 15050.468
  CI (99.9%): [1364418.028, 1480326.013] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 97.44% complete, ETA 00:03:46
# Fork: 1 of 1
# Warmup Iteration   1: 15463.812 ns/op
# Warmup Iteration   2: 9683.995 ns/op
# Warmup Iteration   3: 9419.200 ns/op
# Warmup Iteration   4: 9408.938 ns/op
# Warmup Iteration   5: 10210.527 ns/op
Iteration   1: 9400.185 ns/op
Iteration   2: 9522.938 ns/op
Iteration   3: 9438.670 ns/op
Iteration   4: 9489.301 ns/op
Iteration   5: 9473.611 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9464.941 ±(99.9%) 181.795 ns/op [Average]
  (min, avg, max) = (9400.185, 9464.941, 9522.938), stdev = 47.211
  CI (99.9%): [9283.146, 9646.736] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 97.69% complete, ETA 00:03:23
# Fork: 1 of 1
# Warmup Iteration   1: 28410.859 ns/op
# Warmup Iteration   2: 20126.094 ns/op
# Warmup Iteration   3: 19070.062 ns/op
# Warmup Iteration   4: 19149.677 ns/op
# Warmup Iteration   5: 18997.999 ns/op
Iteration   1: 19058.312 ns/op
Iteration   2: 19080.732 ns/op
Iteration   3: 19261.795 ns/op
Iteration   4: 19094.520 ns/op
Iteration   5: 19100.360 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  19119.144 ±(99.9%) 313.329 ns/op [Average]
  (min, avg, max) = (19058.312, 19119.144, 19261.795), stdev = 81.370
  CI (99.9%): [18805.815, 19432.473] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 97.95% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: 69126.809 ns/op
# Warmup Iteration   2: 41861.260 ns/op
# Warmup Iteration   3: 39808.392 ns/op
# Warmup Iteration   4: 39733.659 ns/op
# Warmup Iteration   5: 39640.990 ns/op
Iteration   1: 39585.502 ns/op
Iteration   2: 39757.466 ns/op
Iteration   3: 39760.204 ns/op
Iteration   4: 40007.194 ns/op
Iteration   5: 39657.796 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  39753.633 ±(99.9%) 614.306 ns/op [Average]
  (min, avg, max) = (39585.502, 39753.633, 40007.194), stdev = 159.533
  CI (99.9%): [39139.326, 40367.939] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 98.21% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: 126078.916 ns/op
# Warmup Iteration   2: 82810.961 ns/op
# Warmup Iteration   3: 78538.412 ns/op
# Warmup Iteration   4: 78323.664 ns/op
# Warmup Iteration   5: 78517.498 ns/op
Iteration   1: 77988.613 ns/op
Iteration   2: 78173.675 ns/op
Iteration   3: 79937.762 ns/op
Iteration   4: 78563.888 ns/op
Iteration   5: 78301.222 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  78593.032 ±(99.9%) 3004.664 ns/op [Average]
  (min, avg, max) = (77988.613, 78593.032, 79937.762), stdev = 780.302
  CI (99.9%): [75588.368, 81597.696] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 98.46% complete, ETA 00:02:15
# Fork: 1 of 1
# Warmup Iteration   1: 955262.177 ns/op
# Warmup Iteration   2: 739233.319 ns/op
# Warmup Iteration   3: 662022.190 ns/op
# Warmup Iteration   4: 666404.179 ns/op
# Warmup Iteration   5: 646520.671 ns/op
Iteration   1: 647349.328 ns/op
Iteration   2: 647523.154 ns/op
Iteration   3: 647768.423 ns/op
Iteration   4: 657669.750 ns/op
Iteration   5: 647605.052 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  649583.142 ±(99.9%) 17416.742 ns/op [Average]
  (min, avg, max) = (647349.328, 649583.142, 657669.750), stdev = 4523.073
  CI (99.9%): [632166.399, 666999.884] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 98.72% complete, ETA 00:01:53
# Fork: 1 of 1
# Warmup Iteration   1: 5947.408 ns/op
# Warmup Iteration   2: 3713.873 ns/op
# Warmup Iteration   3: 3555.636 ns/op
# Warmup Iteration   4: 3548.500 ns/op
# Warmup Iteration   5: 3559.641 ns/op
Iteration   1: 3546.926 ns/op
Iteration   2: 3584.247 ns/op
Iteration   3: 3555.764 ns/op
Iteration   4: 3543.049 ns/op
Iteration   5: 3583.054 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3562.608 ±(99.9%) 76.083 ns/op [Average]
  (min, avg, max) = (3543.049, 3562.608, 3584.247), stdev = 19.759
  CI (99.9%): [3486.525, 3638.691] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 98.97% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 11720.975 ns/op
# Warmup Iteration   2: 6495.616 ns/op
# Warmup Iteration   3: 6299.423 ns/op
# Warmup Iteration   4: 6476.492 ns/op
# Warmup Iteration   5: 6327.634 ns/op
Iteration   1: 6420.591 ns/op
Iteration   2: 6405.584 ns/op
Iteration   3: 6453.352 ns/op
Iteration   4: 6284.063 ns/op
Iteration   5: 6307.826 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6374.283 ±(99.9%) 285.131 ns/op [Average]
  (min, avg, max) = (6284.063, 6374.283, 6453.352), stdev = 74.048
  CI (99.9%): [6089.152, 6659.415] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 99.23% complete, ETA 00:01:07
# Fork: 1 of 1
# Warmup Iteration   1: 25114.395 ns/op
# Warmup Iteration   2: 17936.166 ns/op
# Warmup Iteration   3: 15660.626 ns/op
# Warmup Iteration   4: 15691.420 ns/op
# Warmup Iteration   5: 15720.479 ns/op
Iteration   1: 16046.485 ns/op
Iteration   2: 15862.876 ns/op
Iteration   3: 15732.709 ns/op
Iteration   4: 15766.092 ns/op
Iteration   5: 15760.645 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15833.761 ±(99.9%) 495.507 ns/op [Average]
  (min, avg, max) = (15732.709, 15833.761, 16046.485), stdev = 128.682
  CI (99.9%): [15338.255, 16329.268] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 99.49% complete, ETA 00:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 49973.943 ns/op
# Warmup Iteration   2: 35087.774 ns/op
# Warmup Iteration   3: 34494.302 ns/op
# Warmup Iteration   4: 32458.814 ns/op
# Warmup Iteration   5: 34790.464 ns/op
Iteration   1: 32282.698 ns/op
Iteration   2: 32103.460 ns/op
Iteration   3: 32490.103 ns/op
Iteration   4: 33628.012 ns/op
Iteration   5: 32716.407 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  32644.136 ±(99.9%) 2294.229 ns/op [Average]
  (min, avg, max) = (32103.460, 32644.136, 33628.012), stdev = 595.804
  CI (99.9%): [30349.907, 34938.365] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 99.74% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 380925.523 ns/op
# Warmup Iteration   2: 247360.460 ns/op
# Warmup Iteration   3: 219418.857 ns/op
# Warmup Iteration   4: 219886.604 ns/op
# Warmup Iteration   5: 219633.612 ns/op
Iteration   1: 219571.430 ns/op
Iteration   2: 223456.898 ns/op
Iteration   3: 226416.317 ns/op
Iteration   4: 220309.370 ns/op
Iteration   5: 219601.092 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  221871.021 ±(99.9%) 11560.620 ns/op [Average]
  (min, avg, max) = (219571.430, 221871.021, 226416.317), stdev = 3002.256
  CI (99.9%): [210310.402, 233431.641] (assumes normal distribution)


# Run complete. Total time: 02:26:54

Benchmark                       (converterType)  (inputType)  Mode  Cnt         Score        Error  Units
EventBenchmark.both                        JSON         _1_K  avgt    5     28205.154 ±    630.444  ns/op
EventBenchmark.both                        JSON         _2_K  avgt    5     53967.670 ±    500.777  ns/op
EventBenchmark.both                        JSON         _4_K  avgt    5    111909.544 ±   2722.899  ns/op
EventBenchmark.both                        JSON         _8_K  avgt    5    241458.118 ±   8919.643  ns/op
EventBenchmark.both                        JSON        _64_K  avgt    5   2155286.701 ±  57268.388  ns/op
EventBenchmark.both                        CBOR         _1_K  avgt    5     23040.581 ±    748.225  ns/op
EventBenchmark.both                        CBOR         _2_K  avgt    5     41849.005 ±   1945.971  ns/op
EventBenchmark.both                        CBOR         _4_K  avgt    5     87208.024 ±    782.437  ns/op
EventBenchmark.both                        CBOR         _8_K  avgt    5    184807.945 ±   9525.251  ns/op
EventBenchmark.both                        CBOR        _64_K  avgt    5   1820391.913 ±  95972.437  ns/op
EventBenchmark.both                       SMILE         _1_K  avgt    5     24437.114 ±    828.037  ns/op
EventBenchmark.both                       SMILE         _2_K  avgt    5     47258.335 ±    794.390  ns/op
EventBenchmark.both                       SMILE         _4_K  avgt    5     95014.375 ±   5736.616  ns/op
EventBenchmark.both                       SMILE         _8_K  avgt    5    212351.527 ±   8422.370  ns/op
EventBenchmark.both                       SMILE        _64_K  avgt    5   2115925.639 ±  45601.963  ns/op
EventBenchmark.both                    SCALA_PB         _1_K  avgt    5     10842.222 ±    225.855  ns/op
EventBenchmark.both                    SCALA_PB         _2_K  avgt    5     21916.852 ±    481.231  ns/op
EventBenchmark.both                    SCALA_PB         _4_K  avgt    5     35505.915 ±   1330.889  ns/op
EventBenchmark.both                    SCALA_PB         _8_K  avgt    5     67696.850 ±   2240.599  ns/op
EventBenchmark.both                    SCALA_PB        _64_K  avgt    5    620435.052 ±  10606.918  ns/op
EventBenchmark.both                     JAVA_PB         _1_K  avgt    5      6222.196 ±     84.136  ns/op
EventBenchmark.both                     JAVA_PB         _2_K  avgt    5     12336.808 ±    285.672  ns/op
EventBenchmark.both                     JAVA_PB         _4_K  avgt    5     23259.938 ±    569.962  ns/op
EventBenchmark.both                     JAVA_PB         _8_K  avgt    5     49482.390 ±    717.536  ns/op
EventBenchmark.both                     JAVA_PB        _64_K  avgt    5    490515.617 ±  13147.346  ns/op
EventBenchmark.both                 JAVA_THRIFT         _1_K  avgt    5     11081.090 ±    534.592  ns/op
EventBenchmark.both                 JAVA_THRIFT         _2_K  avgt    5     21217.758 ±    724.234  ns/op
EventBenchmark.both                 JAVA_THRIFT         _4_K  avgt    5     42971.871 ±   2257.051  ns/op
EventBenchmark.both                 JAVA_THRIFT         _8_K  avgt    5     93909.569 ±   4324.806  ns/op
EventBenchmark.both                 JAVA_THRIFT        _64_K  avgt    5    966104.646 ±  14773.087  ns/op
EventBenchmark.both                SERIALIZABLE         _1_K  avgt    5    133999.135 ±   2266.751  ns/op
EventBenchmark.both                SERIALIZABLE         _2_K  avgt    5    239574.348 ±   5260.387  ns/op
EventBenchmark.both                SERIALIZABLE         _4_K  avgt    5    561423.007 ±   2761.693  ns/op
EventBenchmark.both                SERIALIZABLE         _8_K  avgt    5   1362599.830 ±  54689.053  ns/op
EventBenchmark.both                SERIALIZABLE        _64_K  avgt    5  12267826.958 ± 201096.039  ns/op
EventBenchmark.both                   BOOPICKLE         _1_K  avgt    5      5966.188 ±    234.212  ns/op
EventBenchmark.both                   BOOPICKLE         _2_K  avgt    5     11408.244 ±    404.324  ns/op
EventBenchmark.both                   BOOPICKLE         _4_K  avgt    5     21142.506 ±    656.147  ns/op
EventBenchmark.both                   BOOPICKLE         _8_K  avgt    5     41710.064 ±   1929.177  ns/op
EventBenchmark.both                   BOOPICKLE        _64_K  avgt    5    405743.841 ±   9121.410  ns/op
EventBenchmark.both                       CHILL         _1_K  avgt    5     67900.532 ±  12241.361  ns/op
EventBenchmark.both                       CHILL         _2_K  avgt    5    133759.504 ±  14964.772  ns/op
EventBenchmark.both                       CHILL         _4_K  avgt    5    282565.774 ±   8132.176  ns/op
EventBenchmark.both                       CHILL         _8_K  avgt    5    625727.044 ± 234602.634  ns/op
EventBenchmark.both                       CHILL        _64_K  avgt    5   6314684.229 ± 953265.695  ns/op
EventBenchmark.both                    JSONITER         _1_K  avgt    5     10241.425 ±    163.858  ns/op
EventBenchmark.both                    JSONITER         _2_K  avgt    5     18427.992 ±    238.199  ns/op
EventBenchmark.both                    JSONITER         _4_K  avgt    5     39923.980 ±   1604.044  ns/op
EventBenchmark.both                    JSONITER         _8_K  avgt    5     79763.318 ±   2879.069  ns/op
EventBenchmark.both                    JSONITER        _64_K  avgt    5    746682.185 ±   8542.097  ns/op
EventBenchmark.both                       CIRCE         _1_K  avgt    5    180256.600 ±   4972.815  ns/op
EventBenchmark.both                       CIRCE         _2_K  avgt    5    267646.008 ±  10240.203  ns/op
EventBenchmark.both                       CIRCE         _4_K  avgt    5    540962.362 ±  35883.897  ns/op
EventBenchmark.both                       CIRCE         _8_K  avgt    5   1222163.434 ±  53405.918  ns/op
EventBenchmark.both                       CIRCE        _64_K  avgt    5  11776586.739 ± 279061.284  ns/op
EventBenchmark.both                UPICKLE_JSON         _1_K  avgt    5     37774.441 ±   2141.284  ns/op
EventBenchmark.both                UPICKLE_JSON         _2_K  avgt    5     77919.806 ±   2145.381  ns/op
EventBenchmark.both                UPICKLE_JSON         _4_K  avgt    5    147053.646 ±   5490.457  ns/op
EventBenchmark.both                UPICKLE_JSON         _8_K  avgt    5    353479.906 ±   5437.638  ns/op
EventBenchmark.both                UPICKLE_JSON        _64_K  avgt    5   3828912.910 ±  52716.076  ns/op
EventBenchmark.both             UPICKLE_MSGPACK         _1_K  avgt    5     17473.323 ±    566.615  ns/op
EventBenchmark.both             UPICKLE_MSGPACK         _2_K  avgt    5     34460.763 ±    766.329  ns/op
EventBenchmark.both             UPICKLE_MSGPACK         _4_K  avgt    5     75514.766 ±   3828.453  ns/op
EventBenchmark.both             UPICKLE_MSGPACK         _8_K  avgt    5    169556.053 ±   5616.215  ns/op
EventBenchmark.both             UPICKLE_MSGPACK        _64_K  avgt    5   1545773.810 ±  47176.162  ns/op
EventBenchmark.deserialization             JSON         _1_K  avgt    5     14944.697 ±    546.303  ns/op
EventBenchmark.deserialization             JSON         _2_K  avgt    5     27296.462 ±    285.639  ns/op
EventBenchmark.deserialization             JSON         _4_K  avgt    5     56691.139 ±    575.074  ns/op
EventBenchmark.deserialization             JSON         _8_K  avgt    5    125353.976 ±   2132.675  ns/op
EventBenchmark.deserialization             JSON        _64_K  avgt    5   1165528.368 ±   7707.384  ns/op
EventBenchmark.deserialization             CBOR         _1_K  avgt    5     13315.601 ±    138.528  ns/op
EventBenchmark.deserialization             CBOR         _2_K  avgt    5     26235.257 ±    346.224  ns/op
EventBenchmark.deserialization             CBOR         _4_K  avgt    5     49924.422 ±   1227.969  ns/op
EventBenchmark.deserialization             CBOR         _8_K  avgt    5    108884.865 ±   3395.330  ns/op
EventBenchmark.deserialization             CBOR        _64_K  avgt    5   1102275.478 ±  46547.755  ns/op
EventBenchmark.deserialization            SMILE         _1_K  avgt    5     13926.158 ±    400.528  ns/op
EventBenchmark.deserialization            SMILE         _2_K  avgt    5     26004.870 ±    274.819  ns/op
EventBenchmark.deserialization            SMILE         _4_K  avgt    5     53000.694 ±   1048.851  ns/op
EventBenchmark.deserialization            SMILE         _8_K  avgt    5    117159.690 ±   1299.368  ns/op
EventBenchmark.deserialization            SMILE        _64_K  avgt    5   1115808.797 ±  77745.778  ns/op
EventBenchmark.deserialization         SCALA_PB         _1_K  avgt    5      5291.576 ±     57.414  ns/op
EventBenchmark.deserialization         SCALA_PB         _2_K  avgt    5      9531.822 ±    326.776  ns/op
EventBenchmark.deserialization         SCALA_PB         _4_K  avgt    5     17306.074 ±    458.108  ns/op
EventBenchmark.deserialization         SCALA_PB         _8_K  avgt    5     40866.088 ±   1311.415  ns/op
EventBenchmark.deserialization         SCALA_PB        _64_K  avgt    5    387140.737 ±  21365.800  ns/op
EventBenchmark.deserialization          JAVA_PB         _1_K  avgt    5      2929.703 ±     45.794  ns/op
EventBenchmark.deserialization          JAVA_PB         _2_K  avgt    5      6372.765 ±    256.907  ns/op
EventBenchmark.deserialization          JAVA_PB         _4_K  avgt    5     13337.169 ±    286.663  ns/op
EventBenchmark.deserialization          JAVA_PB         _8_K  avgt    5     24794.153 ±    760.146  ns/op
EventBenchmark.deserialization          JAVA_PB        _64_K  avgt    5    266518.029 ±  12157.721  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _1_K  avgt    5      3948.544 ±    183.247  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _2_K  avgt    5      8600.435 ±    259.540  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _4_K  avgt    5     15002.860 ±   1535.827  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _8_K  avgt    5     29891.745 ±    903.325  ns/op
EventBenchmark.deserialization      JAVA_THRIFT        _64_K  avgt    5    278333.212 ±  17648.386  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _1_K  avgt    5    104764.077 ±   2621.974  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _2_K  avgt    5    190512.010 ±   1653.052  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _4_K  avgt    5    451980.855 ±   4315.932  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _8_K  avgt    5   1076273.246 ±  38657.187  ns/op
EventBenchmark.deserialization     SERIALIZABLE        _64_K  avgt    5   9526488.476 ± 543959.546  ns/op
EventBenchmark.deserialization        BOOPICKLE         _1_K  avgt    5      2437.547 ±     42.960  ns/op
EventBenchmark.deserialization        BOOPICKLE         _2_K  avgt    5      4740.887 ±    243.366  ns/op
EventBenchmark.deserialization        BOOPICKLE         _4_K  avgt    5      9101.881 ±    307.452  ns/op
EventBenchmark.deserialization        BOOPICKLE         _8_K  avgt    5     17510.471 ±    798.699  ns/op
EventBenchmark.deserialization        BOOPICKLE        _64_K  avgt    5    194599.397 ±   5644.700  ns/op
EventBenchmark.deserialization            CHILL         _1_K  avgt    5     37508.560 ±   3642.664  ns/op
EventBenchmark.deserialization            CHILL         _2_K  avgt    5     67567.200 ±  12679.073  ns/op
EventBenchmark.deserialization            CHILL         _4_K  avgt    5    134901.185 ±  15359.783  ns/op
EventBenchmark.deserialization            CHILL         _8_K  avgt    5    332399.075 ±  12939.507  ns/op
EventBenchmark.deserialization            CHILL        _64_K  avgt    5   2896285.324 ± 632963.116  ns/op
EventBenchmark.deserialization         JSONITER         _1_K  avgt    5      6636.781 ±    275.910  ns/op
EventBenchmark.deserialization         JSONITER         _2_K  avgt    5     13483.672 ±    165.997  ns/op
EventBenchmark.deserialization         JSONITER         _4_K  avgt    5     23844.883 ±    871.840  ns/op
EventBenchmark.deserialization         JSONITER         _8_K  avgt    5     52372.699 ±   2210.296  ns/op
EventBenchmark.deserialization         JSONITER        _64_K  avgt    5    506011.921 ±   4202.080  ns/op
EventBenchmark.deserialization            CIRCE         _1_K  avgt    5    145121.453 ±   6768.683  ns/op
EventBenchmark.deserialization            CIRCE         _2_K  avgt    5    203815.363 ±   6541.530  ns/op
EventBenchmark.deserialization            CIRCE         _4_K  avgt    5    400849.506 ±  18653.576  ns/op
EventBenchmark.deserialization            CIRCE         _8_K  avgt    5    918276.579 ±  49038.564  ns/op
EventBenchmark.deserialization            CIRCE        _64_K  avgt    5   8668975.306 ± 354178.461  ns/op
EventBenchmark.deserialization     UPICKLE_JSON         _1_K  avgt    5     25328.788 ±    550.115  ns/op
EventBenchmark.deserialization     UPICKLE_JSON         _2_K  avgt    5     42306.734 ±    167.303  ns/op
EventBenchmark.deserialization     UPICKLE_JSON         _4_K  avgt    5     75333.760 ±   4238.435  ns/op
EventBenchmark.deserialization     UPICKLE_JSON         _8_K  avgt    5    193652.682 ±  32289.033  ns/op
EventBenchmark.deserialization     UPICKLE_JSON        _64_K  avgt    5   1516588.949 ±  73146.877  ns/op
EventBenchmark.deserialization  UPICKLE_MSGPACK         _1_K  avgt    5      8346.385 ±    202.895  ns/op
EventBenchmark.deserialization  UPICKLE_MSGPACK         _2_K  avgt    5     16215.925 ±    528.094  ns/op
EventBenchmark.deserialization  UPICKLE_MSGPACK         _4_K  avgt    5     35877.176 ±   1414.441  ns/op
EventBenchmark.deserialization  UPICKLE_MSGPACK         _8_K  avgt    5     86634.675 ±    453.206  ns/op
EventBenchmark.deserialization  UPICKLE_MSGPACK        _64_K  avgt    5    788727.076 ±   7455.665  ns/op
EventBenchmark.serialization               JSON         _1_K  avgt    5     10405.412 ±    404.056  ns/op
EventBenchmark.serialization               JSON         _2_K  avgt    5     20899.960 ±     70.095  ns/op
EventBenchmark.serialization               JSON         _4_K  avgt    5     45116.999 ±   5419.189  ns/op
EventBenchmark.serialization               JSON         _8_K  avgt    5     96122.439 ±   1425.913  ns/op
EventBenchmark.serialization               JSON        _64_K  avgt    5    794507.706 ±   7772.841  ns/op
EventBenchmark.serialization               CBOR         _1_K  avgt    5      8301.001 ±    139.435  ns/op
EventBenchmark.serialization               CBOR         _2_K  avgt    5     13931.469 ±    526.000  ns/op
EventBenchmark.serialization               CBOR         _4_K  avgt    5     28054.042 ±    183.820  ns/op
EventBenchmark.serialization               CBOR         _8_K  avgt    5     62972.217 ±   2550.865  ns/op
EventBenchmark.serialization               CBOR        _64_K  avgt    5    622097.921 ±  14619.205  ns/op
EventBenchmark.serialization              SMILE         _1_K  avgt    5      9762.740 ±    261.458  ns/op
EventBenchmark.serialization              SMILE         _2_K  avgt    5     20088.405 ±    663.108  ns/op
EventBenchmark.serialization              SMILE         _4_K  avgt    5     43487.142 ±    464.590  ns/op
EventBenchmark.serialization              SMILE         _8_K  avgt    5     82994.545 ±   1002.823  ns/op
EventBenchmark.serialization              SMILE        _64_K  avgt    5    840355.945 ±  62694.339  ns/op
EventBenchmark.serialization           SCALA_PB         _1_K  avgt    5      5293.861 ±     25.603  ns/op
EventBenchmark.serialization           SCALA_PB         _2_K  avgt    5     11808.617 ±     68.426  ns/op
EventBenchmark.serialization           SCALA_PB         _4_K  avgt    5     18279.461 ±    439.630  ns/op
EventBenchmark.serialization           SCALA_PB         _8_K  avgt    5     27978.225 ±   9315.793  ns/op
EventBenchmark.serialization           SCALA_PB        _64_K  avgt    5    232055.718 ±   2557.150  ns/op
EventBenchmark.serialization            JAVA_PB         _1_K  avgt    5      2630.200 ±     55.341  ns/op
EventBenchmark.serialization            JAVA_PB         _2_K  avgt    5      5476.604 ±     24.499  ns/op
EventBenchmark.serialization            JAVA_PB         _4_K  avgt    5     10400.370 ±    404.994  ns/op
EventBenchmark.serialization            JAVA_PB         _8_K  avgt    5     21638.917 ±    460.386  ns/op
EventBenchmark.serialization            JAVA_PB        _64_K  avgt    5    201279.208 ±   2847.164  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _1_K  avgt    5      6446.136 ±    127.724  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _2_K  avgt    5     12535.367 ±    233.276  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _4_K  avgt    5     26617.542 ±    160.995  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _8_K  avgt    5     59606.443 ±    329.378  ns/op
EventBenchmark.serialization        JAVA_THRIFT        _64_K  avgt    5    626104.581 ±  12549.238  ns/op
EventBenchmark.serialization       SERIALIZABLE         _1_K  avgt    5     25814.749 ±    793.766  ns/op
EventBenchmark.serialization       SERIALIZABLE         _2_K  avgt    5     46189.340 ±    471.315  ns/op
EventBenchmark.serialization       SERIALIZABLE         _4_K  avgt    5    100176.102 ±   2870.597  ns/op
EventBenchmark.serialization       SERIALIZABLE         _8_K  avgt    5    236479.887 ±   7778.004  ns/op
EventBenchmark.serialization       SERIALIZABLE        _64_K  avgt    5   2131029.778 ±  38034.754  ns/op
EventBenchmark.serialization          BOOPICKLE         _1_K  avgt    5      3648.639 ±    178.138  ns/op
EventBenchmark.serialization          BOOPICKLE         _2_K  avgt    5      6186.468 ±    208.235  ns/op
EventBenchmark.serialization          BOOPICKLE         _4_K  avgt    5     11711.454 ±    494.375  ns/op
EventBenchmark.serialization          BOOPICKLE         _8_K  avgt    5     23948.350 ±   1543.589  ns/op
EventBenchmark.serialization          BOOPICKLE        _64_K  avgt    5    212202.164 ±  13425.091  ns/op
EventBenchmark.serialization              CHILL         _1_K  avgt    5     35915.382 ±   1056.532  ns/op
EventBenchmark.serialization              CHILL         _2_K  avgt    5     74989.588 ±   6238.882  ns/op
EventBenchmark.serialization              CHILL         _4_K  avgt    5    131793.168 ±  17195.485  ns/op
EventBenchmark.serialization              CHILL         _8_K  avgt    5    294071.892 ±  18367.181  ns/op
EventBenchmark.serialization              CHILL        _64_K  avgt    5   2731769.004 ± 156113.196  ns/op
EventBenchmark.serialization           JSONITER         _1_K  avgt    5      5067.086 ±    462.467  ns/op
EventBenchmark.serialization           JSONITER         _2_K  avgt    5      6531.001 ±    295.980  ns/op
EventBenchmark.serialization           JSONITER         _4_K  avgt    5     11908.662 ±    579.355  ns/op
EventBenchmark.serialization           JSONITER         _8_K  avgt    5     19964.360 ±    106.822  ns/op
EventBenchmark.serialization           JSONITER        _64_K  avgt    5    252276.022 ±  20274.622  ns/op
EventBenchmark.serialization              CIRCE         _1_K  avgt    5     27777.316 ±   1371.995  ns/op
EventBenchmark.serialization              CIRCE         _2_K  avgt    5     57673.822 ±   1667.559  ns/op
EventBenchmark.serialization              CIRCE         _4_K  avgt    5    114063.016 ±   3352.506  ns/op
EventBenchmark.serialization              CIRCE         _8_K  avgt    5    262274.180 ±  12818.009  ns/op
EventBenchmark.serialization              CIRCE        _64_K  avgt    5   2696371.510 ±  65910.199  ns/op
EventBenchmark.serialization       UPICKLE_JSON         _1_K  avgt    5     16106.874 ±     58.066  ns/op
EventBenchmark.serialization       UPICKLE_JSON         _2_K  avgt    5     35705.928 ±   1429.983  ns/op
EventBenchmark.serialization       UPICKLE_JSON         _4_K  avgt    5     77366.578 ±   2828.716  ns/op
EventBenchmark.serialization       UPICKLE_JSON         _8_K  avgt    5    160905.791 ±   7893.775  ns/op
EventBenchmark.serialization       UPICKLE_JSON        _64_K  avgt    5   1630096.299 ±  84577.746  ns/op
EventBenchmark.serialization    UPICKLE_MSGPACK         _1_K  avgt    5      9521.149 ±    170.959  ns/op
EventBenchmark.serialization    UPICKLE_MSGPACK         _2_K  avgt    5     14613.380 ±    272.199  ns/op
EventBenchmark.serialization    UPICKLE_MSGPACK         _4_K  avgt    5     29826.960 ±    932.034  ns/op
EventBenchmark.serialization    UPICKLE_MSGPACK         _8_K  avgt    5     95114.437 ±   6836.619  ns/op
EventBenchmark.serialization    UPICKLE_MSGPACK        _64_K  avgt    5    902029.781 ±  23187.772  ns/op
SiteBenchmark.both                         JSON         _1_K  avgt    5     16047.215 ±    449.735  ns/op
SiteBenchmark.both                         JSON         _2_K  avgt    5     29755.357 ±    554.720  ns/op
SiteBenchmark.both                         JSON         _4_K  avgt    5     55465.979 ±    250.442  ns/op
SiteBenchmark.both                         JSON         _8_K  avgt    5    115751.745 ±   6494.225  ns/op
SiteBenchmark.both                         JSON        _64_K  avgt    5    862130.368 ±   4746.090  ns/op
SiteBenchmark.both                         CBOR         _1_K  avgt    5     12415.021 ±    315.970  ns/op
SiteBenchmark.both                         CBOR         _2_K  avgt    5     21648.315 ±    786.881  ns/op
SiteBenchmark.both                         CBOR         _4_K  avgt    5     41138.894 ±    124.077  ns/op
SiteBenchmark.both                         CBOR         _8_K  avgt    5     86010.038 ±   1845.565  ns/op
SiteBenchmark.both                         CBOR        _64_K  avgt    5    634988.263 ±   4399.403  ns/op
SiteBenchmark.both                        SMILE         _1_K  avgt    5     14321.595 ±   1575.078  ns/op
SiteBenchmark.both                        SMILE         _2_K  avgt    5     22974.836 ±    160.064  ns/op
SiteBenchmark.both                        SMILE         _4_K  avgt    5     42595.414 ±   2693.848  ns/op
SiteBenchmark.both                        SMILE         _8_K  avgt    5     79636.949 ±   3584.724  ns/op
SiteBenchmark.both                        SMILE        _64_K  avgt    5    582493.476 ±  15233.372  ns/op
SiteBenchmark.both                     SCALA_PB         _1_K  avgt    5      9056.581 ±     42.611  ns/op
SiteBenchmark.both                     SCALA_PB         _2_K  avgt    5     16585.772 ±    409.854  ns/op
SiteBenchmark.both                     SCALA_PB         _4_K  avgt    5     26821.648 ±    520.650  ns/op
SiteBenchmark.both                     SCALA_PB         _8_K  avgt    5     46866.047 ±    392.331  ns/op
SiteBenchmark.both                     SCALA_PB        _64_K  avgt    5    293002.189 ±   9376.583  ns/op
SiteBenchmark.both                      JAVA_PB         _1_K  avgt    5      7014.227 ±    331.062  ns/op
SiteBenchmark.both                      JAVA_PB         _2_K  avgt    5     13346.934 ±    290.880  ns/op
SiteBenchmark.both                      JAVA_PB         _4_K  avgt    5     21579.063 ±    804.864  ns/op
SiteBenchmark.both                      JAVA_PB         _8_K  avgt    5     45771.024 ±   1288.134  ns/op
SiteBenchmark.both                      JAVA_PB        _64_K  avgt    5    347056.134 ±   5146.069  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _1_K  avgt    5      9539.933 ±    287.256  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _2_K  avgt    5     16670.969 ±    319.147  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _4_K  avgt    5     31141.463 ±   2343.913  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _8_K  avgt    5     64851.463 ±   2627.886  ns/op
SiteBenchmark.both                  JAVA_THRIFT        _64_K  avgt    5    556916.901 ±  27879.441  ns/op
SiteBenchmark.both                 SERIALIZABLE         _1_K  avgt    5    126715.777 ±   2800.220  ns/op
SiteBenchmark.both                 SERIALIZABLE         _2_K  avgt    5    170932.163 ±   8000.409  ns/op
SiteBenchmark.both                 SERIALIZABLE         _4_K  avgt    5    228781.549 ±   3022.066  ns/op
SiteBenchmark.both                 SERIALIZABLE         _8_K  avgt    5    358555.537 ±  26895.924  ns/op
SiteBenchmark.both                 SERIALIZABLE        _64_K  avgt    5   2150181.901 ±  62801.420  ns/op
SiteBenchmark.both                    BOOPICKLE         _1_K  avgt    5      4441.629 ±    155.036  ns/op
SiteBenchmark.both                    BOOPICKLE         _2_K  avgt    5      8047.808 ±    523.007  ns/op
SiteBenchmark.both                    BOOPICKLE         _4_K  avgt    5     14332.363 ±    199.411  ns/op
SiteBenchmark.both                    BOOPICKLE         _8_K  avgt    5     26717.609 ±    457.090  ns/op
SiteBenchmark.both                    BOOPICKLE        _64_K  avgt    5    245909.028 ±   7240.342  ns/op
SiteBenchmark.both                        CHILL         _1_K  avgt    5     11728.339 ±    242.695  ns/op
SiteBenchmark.both                        CHILL         _2_K  avgt    5     20331.725 ±    248.246  ns/op
SiteBenchmark.both                        CHILL         _4_K  avgt    5     34399.443 ±   1183.091  ns/op
SiteBenchmark.both                        CHILL         _8_K  avgt    5     95614.030 ±  24514.676  ns/op
SiteBenchmark.both                        CHILL        _64_K  avgt    5    729400.775 ±  10670.234  ns/op
SiteBenchmark.both                     JSONITER         _1_K  avgt    5      6588.537 ±     28.804  ns/op
SiteBenchmark.both                     JSONITER         _2_K  avgt    5     13467.362 ±     75.909  ns/op
SiteBenchmark.both                     JSONITER         _4_K  avgt    5     24850.808 ±    381.610  ns/op
SiteBenchmark.both                     JSONITER         _8_K  avgt    5     48948.931 ±   3122.005  ns/op
SiteBenchmark.both                     JSONITER        _64_K  avgt    5    367842.014 ±   8439.516  ns/op
SiteBenchmark.both                        CIRCE         _1_K  avgt    5     42194.734 ±   1501.571  ns/op
SiteBenchmark.both                        CIRCE         _2_K  avgt    5     76710.139 ±   5572.712  ns/op
SiteBenchmark.both                        CIRCE         _4_K  avgt    5    171293.721 ±  11857.783  ns/op
SiteBenchmark.both                        CIRCE         _8_K  avgt    5    374832.931 ±  21979.953  ns/op
SiteBenchmark.both                        CIRCE        _64_K  avgt    5   3090417.102 ± 188522.421  ns/op
SiteBenchmark.both                 UPICKLE_JSON         _1_K  avgt    5     24829.196 ±    902.248  ns/op
SiteBenchmark.both                 UPICKLE_JSON         _2_K  avgt    5     50236.011 ±    505.307  ns/op
SiteBenchmark.both                 UPICKLE_JSON         _4_K  avgt    5    108828.200 ±    987.719  ns/op
SiteBenchmark.both                 UPICKLE_JSON         _8_K  avgt    5    219724.766 ±   3890.635  ns/op
SiteBenchmark.both                 UPICKLE_JSON        _64_K  avgt    5   1748870.129 ±  54035.329  ns/op
SiteBenchmark.both              UPICKLE_MSGPACK         _1_K  avgt    5     10561.156 ±    204.030  ns/op
SiteBenchmark.both              UPICKLE_MSGPACK         _2_K  avgt    5     21216.493 ±   1307.698  ns/op
SiteBenchmark.both              UPICKLE_MSGPACK         _4_K  avgt    5     43470.261 ±   2162.145  ns/op
SiteBenchmark.both              UPICKLE_MSGPACK         _8_K  avgt    5     92734.389 ±    595.208  ns/op
SiteBenchmark.both              UPICKLE_MSGPACK        _64_K  avgt    5    776770.929 ±   5916.184  ns/op
SiteBenchmark.deserialization              JSON         _1_K  avgt    5      9191.539 ±     34.292  ns/op
SiteBenchmark.deserialization              JSON         _2_K  avgt    5     15982.639 ±     93.164  ns/op
SiteBenchmark.deserialization              JSON         _4_K  avgt    5     31058.991 ±    416.733  ns/op
SiteBenchmark.deserialization              JSON         _8_K  avgt    5     67427.072 ±   2775.973  ns/op
SiteBenchmark.deserialization              JSON        _64_K  avgt    5    544312.837 ±  12043.956  ns/op
SiteBenchmark.deserialization              CBOR         _1_K  avgt    5      7696.832 ±    147.395  ns/op
SiteBenchmark.deserialization              CBOR         _2_K  avgt    5     13000.473 ±    188.723  ns/op
SiteBenchmark.deserialization              CBOR         _4_K  avgt    5     24889.588 ±    218.965  ns/op
SiteBenchmark.deserialization              CBOR         _8_K  avgt    5     52420.443 ±    346.739  ns/op
SiteBenchmark.deserialization              CBOR        _64_K  avgt    5    440980.855 ±  21672.966  ns/op
SiteBenchmark.deserialization             SMILE         _1_K  avgt    5      8407.272 ±    191.977  ns/op
SiteBenchmark.deserialization             SMILE         _2_K  avgt    5     13751.078 ±    250.656  ns/op
SiteBenchmark.deserialization             SMILE         _4_K  avgt    5     24781.148 ±    554.759  ns/op
SiteBenchmark.deserialization             SMILE         _8_K  avgt    5     48502.323 ±    581.893  ns/op
SiteBenchmark.deserialization             SMILE        _64_K  avgt    5    372543.349 ±  31183.494  ns/op
SiteBenchmark.deserialization          SCALA_PB         _1_K  avgt    5      2333.024 ±     74.632  ns/op
SiteBenchmark.deserialization          SCALA_PB         _2_K  avgt    5      4529.566 ±    230.553  ns/op
SiteBenchmark.deserialization          SCALA_PB         _4_K  avgt    5      8336.397 ±    123.914  ns/op
SiteBenchmark.deserialization          SCALA_PB         _8_K  avgt    5     14787.552 ±    409.481  ns/op
SiteBenchmark.deserialization          SCALA_PB        _64_K  avgt    5    121371.702 ±   2384.039  ns/op
SiteBenchmark.deserialization           JAVA_PB         _1_K  avgt    5      3863.158 ±     38.429  ns/op
SiteBenchmark.deserialization           JAVA_PB         _2_K  avgt    5      8024.444 ±    220.523  ns/op
SiteBenchmark.deserialization           JAVA_PB         _4_K  avgt    5     12091.983 ±    136.130  ns/op
SiteBenchmark.deserialization           JAVA_PB         _8_K  avgt    5     27399.780 ±   1555.449  ns/op
SiteBenchmark.deserialization           JAVA_PB        _64_K  avgt    5    199285.587 ±   6954.526  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _1_K  avgt    5      4421.854 ±    160.740  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _2_K  avgt    5      6323.385 ±    209.717  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _4_K  avgt    5     12031.069 ±    649.726  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _8_K  avgt    5     23951.003 ±    529.420  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT        _64_K  avgt    5    182437.782 ±   3778.458  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _1_K  avgt    5     95740.781 ±   3173.756  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _2_K  avgt    5    129320.804 ±   1522.216  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _4_K  avgt    5    163264.005 ±   1816.059  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _8_K  avgt    5    222555.689 ±   8021.699  ns/op
SiteBenchmark.deserialization      SERIALIZABLE        _64_K  avgt    5   1064543.030 ±  16942.697  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _1_K  avgt    5      2023.484 ±     25.134  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _2_K  avgt    5      3859.701 ±    234.324  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _4_K  avgt    5      6959.005 ±     78.770  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _8_K  avgt    5     13280.697 ±    700.399  ns/op
SiteBenchmark.deserialization         BOOPICKLE        _64_K  avgt    5    119871.316 ±   3146.571  ns/op
SiteBenchmark.deserialization             CHILL         _1_K  avgt    5      8254.809 ±    902.987  ns/op
SiteBenchmark.deserialization             CHILL         _2_K  avgt    5     10071.537 ±    324.559  ns/op
SiteBenchmark.deserialization             CHILL         _4_K  avgt    5     16196.823 ±    515.576  ns/op
SiteBenchmark.deserialization             CHILL         _8_K  avgt    5     30800.145 ±    195.803  ns/op
SiteBenchmark.deserialization             CHILL        _64_K  avgt    5    251339.954 ±   5738.742  ns/op
SiteBenchmark.deserialization          JSONITER         _1_K  avgt    5      4022.203 ±    101.539  ns/op
SiteBenchmark.deserialization          JSONITER         _2_K  avgt    5      8456.724 ±    165.925  ns/op
SiteBenchmark.deserialization          JSONITER         _4_K  avgt    5     16587.509 ±    316.987  ns/op
SiteBenchmark.deserialization          JSONITER         _8_K  avgt    5     31546.966 ±    790.846  ns/op
SiteBenchmark.deserialization          JSONITER        _64_K  avgt    5    250891.556 ±   9020.774  ns/op
SiteBenchmark.deserialization             CIRCE         _1_K  avgt    5     22593.443 ±    367.332  ns/op
SiteBenchmark.deserialization             CIRCE         _2_K  avgt    5     39934.375 ±    887.864  ns/op
SiteBenchmark.deserialization             CIRCE         _4_K  avgt    5     92451.949 ±   3573.041  ns/op
SiteBenchmark.deserialization             CIRCE         _8_K  avgt    5    211598.866 ±   6546.055  ns/op
SiteBenchmark.deserialization             CIRCE        _64_K  avgt    5   1552828.298 ±  42321.097  ns/op
SiteBenchmark.deserialization      UPICKLE_JSON         _1_K  avgt    5     14089.987 ±    372.868  ns/op
SiteBenchmark.deserialization      UPICKLE_JSON         _2_K  avgt    5     30058.691 ±    934.455  ns/op
SiteBenchmark.deserialization      UPICKLE_JSON         _4_K  avgt    5     65260.006 ±   1988.101  ns/op
SiteBenchmark.deserialization      UPICKLE_JSON         _8_K  avgt    5    136744.634 ±   7712.014  ns/op
SiteBenchmark.deserialization      UPICKLE_JSON        _64_K  avgt    5   1106824.454 ±  24971.194  ns/op
SiteBenchmark.deserialization   UPICKLE_MSGPACK         _1_K  avgt    5      6445.093 ±    123.362  ns/op
SiteBenchmark.deserialization   UPICKLE_MSGPACK         _2_K  avgt    5     12051.280 ±   1659.478  ns/op
SiteBenchmark.deserialization   UPICKLE_MSGPACK         _4_K  avgt    5     27696.091 ±    666.082  ns/op
SiteBenchmark.deserialization   UPICKLE_MSGPACK         _8_K  avgt    5     60960.417 ±   1460.080  ns/op
SiteBenchmark.deserialization   UPICKLE_MSGPACK        _64_K  avgt    5    486064.585 ±  32767.681  ns/op
SiteBenchmark.serialization                JSON         _1_K  avgt    5      5590.675 ±    428.073  ns/op
SiteBenchmark.serialization                JSON         _2_K  avgt    5     11757.628 ±     92.558  ns/op
SiteBenchmark.serialization                JSON         _4_K  avgt    5     20973.250 ±    498.274  ns/op
SiteBenchmark.serialization                JSON         _8_K  avgt    5     40789.424 ±   1009.309  ns/op
SiteBenchmark.serialization                JSON        _64_K  avgt    5    299259.076 ±   2782.135  ns/op
SiteBenchmark.serialization                CBOR         _1_K  avgt    5      3414.595 ±     64.307  ns/op
SiteBenchmark.serialization                CBOR         _2_K  avgt    5      6749.323 ±     91.287  ns/op
SiteBenchmark.serialization                CBOR         _4_K  avgt    5     13835.510 ±     77.005  ns/op
SiteBenchmark.serialization                CBOR         _8_K  avgt    5     25372.036 ±   2054.056  ns/op
SiteBenchmark.serialization                CBOR        _64_K  avgt    5    218205.653 ±   3154.077  ns/op
SiteBenchmark.serialization               SMILE         _1_K  avgt    5      4387.881 ±     77.733  ns/op
SiteBenchmark.serialization               SMILE         _2_K  avgt    5      7777.786 ±    102.997  ns/op
SiteBenchmark.serialization               SMILE         _4_K  avgt    5     15468.205 ±   1296.036  ns/op
SiteBenchmark.serialization               SMILE         _8_K  avgt    5     28712.923 ±    464.659  ns/op
SiteBenchmark.serialization               SMILE        _64_K  avgt    5    219259.597 ±  11425.046  ns/op
SiteBenchmark.serialization            SCALA_PB         _1_K  avgt    5      6274.549 ±     20.845  ns/op
SiteBenchmark.serialization            SCALA_PB         _2_K  avgt    5      9759.074 ±     68.376  ns/op
SiteBenchmark.serialization            SCALA_PB         _4_K  avgt    5     18033.568 ±    602.835  ns/op
SiteBenchmark.serialization            SCALA_PB         _8_K  avgt    5     27324.346 ±    318.289  ns/op
SiteBenchmark.serialization            SCALA_PB        _64_K  avgt    5    164123.879 ±   3560.369  ns/op
SiteBenchmark.serialization             JAVA_PB         _1_K  avgt    5      2939.210 ±    147.423  ns/op
SiteBenchmark.serialization             JAVA_PB         _2_K  avgt    5      4991.146 ±     67.397  ns/op
SiteBenchmark.serialization             JAVA_PB         _4_K  avgt    5      8579.603 ±     73.179  ns/op
SiteBenchmark.serialization             JAVA_PB         _8_K  avgt    5     18018.669 ±    273.272  ns/op
SiteBenchmark.serialization             JAVA_PB        _64_K  avgt    5    150245.724 ±   5234.615  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _1_K  avgt    5      4808.740 ±     34.310  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _2_K  avgt    5      9330.309 ±     77.042  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _4_K  avgt    5     19127.584 ±    167.664  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _8_K  avgt    5     39565.640 ±     94.535  ns/op
SiteBenchmark.serialization         JAVA_THRIFT        _64_K  avgt    5    376266.309 ±   1472.210  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _1_K  avgt    5     26675.679 ±    341.620  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _2_K  avgt    5     39779.069 ±    365.970  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _4_K  avgt    5     58830.820 ±    370.532  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _8_K  avgt    5    122920.375 ±   7043.047  ns/op
SiteBenchmark.serialization        SERIALIZABLE        _64_K  avgt    5    973270.463 ±  51750.419  ns/op
SiteBenchmark.serialization           BOOPICKLE         _1_K  avgt    5      2408.726 ±     98.509  ns/op
SiteBenchmark.serialization           BOOPICKLE         _2_K  avgt    5      3873.229 ±    159.191  ns/op
SiteBenchmark.serialization           BOOPICKLE         _4_K  avgt    5      6375.727 ±    375.094  ns/op
SiteBenchmark.serialization           BOOPICKLE         _8_K  avgt    5     12340.410 ±    316.208  ns/op
SiteBenchmark.serialization           BOOPICKLE        _64_K  avgt    5    119632.713 ±    834.230  ns/op
SiteBenchmark.serialization               CHILL         _1_K  avgt    5      5824.118 ±     92.139  ns/op
SiteBenchmark.serialization               CHILL         _2_K  avgt    5     10429.970 ±    187.191  ns/op
SiteBenchmark.serialization               CHILL         _4_K  avgt    5     19121.062 ±    233.107  ns/op
SiteBenchmark.serialization               CHILL         _8_K  avgt    5     34553.947 ±    375.116  ns/op
SiteBenchmark.serialization               CHILL        _64_K  avgt    5    494377.049 ±   4643.497  ns/op
SiteBenchmark.serialization            JSONITER         _1_K  avgt    5      2837.305 ±     73.662  ns/op
SiteBenchmark.serialization            JSONITER         _2_K  avgt    5      4428.657 ±     42.258  ns/op
SiteBenchmark.serialization            JSONITER         _4_K  avgt    5     10478.517 ±    225.895  ns/op
SiteBenchmark.serialization            JSONITER         _8_K  avgt    5     20003.524 ±    836.435  ns/op
SiteBenchmark.serialization            JSONITER        _64_K  avgt    5    141679.879 ±   3561.097  ns/op
SiteBenchmark.serialization               CIRCE         _1_K  avgt    5     17358.342 ±   1685.206  ns/op
SiteBenchmark.serialization               CIRCE         _2_K  avgt    5     32432.945 ±   1174.552  ns/op
SiteBenchmark.serialization               CIRCE         _4_K  avgt    5     72298.496 ±   2781.034  ns/op
SiteBenchmark.serialization               CIRCE         _8_K  avgt    5    163993.674 ±   3813.976  ns/op
SiteBenchmark.serialization               CIRCE        _64_K  avgt    5   1422372.021 ±  57953.993  ns/op
SiteBenchmark.serialization        UPICKLE_JSON         _1_K  avgt    5      9464.941 ±    181.795  ns/op
SiteBenchmark.serialization        UPICKLE_JSON         _2_K  avgt    5     19119.144 ±    313.329  ns/op
SiteBenchmark.serialization        UPICKLE_JSON         _4_K  avgt    5     39753.633 ±    614.306  ns/op
SiteBenchmark.serialization        UPICKLE_JSON         _8_K  avgt    5     78593.032 ±   3004.664  ns/op
SiteBenchmark.serialization        UPICKLE_JSON        _64_K  avgt    5    649583.142 ±  17416.742  ns/op
SiteBenchmark.serialization     UPICKLE_MSGPACK         _1_K  avgt    5      3562.608 ±     76.083  ns/op
SiteBenchmark.serialization     UPICKLE_MSGPACK         _2_K  avgt    5      6374.283 ±    285.131  ns/op
SiteBenchmark.serialization     UPICKLE_MSGPACK         _4_K  avgt    5     15833.761 ±    495.507  ns/op
SiteBenchmark.serialization     UPICKLE_MSGPACK         _8_K  avgt    5     32644.136 ±   2294.229  ns/op
SiteBenchmark.serialization     UPICKLE_MSGPACK        _64_K  avgt    5    221871.021 ±  11560.620  ns/op

Benchmark result is saved to /static/data/charts/scala-serialization-2022/jdk17.json
