# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000)

# Run progress: 0.00% complete, ETA 00:22:24
# Fork: 1 of 1
# Warmup Iteration   1: 78.063 ns/op
# Warmup Iteration   2: 77.669 ns/op
Iteration   1: 78.431 ns/op
Iteration   2: 77.247 ns/op
Iteration   3: 77.248 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  77.642 ±(99.9%) 12.469 ns/op [Average]
  (min, avg, max) = (77.247, 77.642, 78.431), stdev = 0.683
  CI (99.9%): [65.173, 90.111] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 10000)

# Run progress: 1.56% complete, ETA 00:23:01
# Fork: 1 of 1
# Warmup Iteration   1: 75.480 ns/op
# Warmup Iteration   2: 74.982 ns/op
Iteration   1: 73.788 ns/op
Iteration   2: 73.479 ns/op
Iteration   3: 73.658 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  73.641 ±(99.9%) 2.826 ns/op [Average]
  (min, avg, max) = (73.479, 73.641, 73.788), stdev = 0.155
  CI (99.9%): [70.815, 76.467] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 100000)

# Run progress: 3.13% complete, ETA 00:22:38
# Fork: 1 of 1
# Warmup Iteration   1: 80.797 ns/op
# Warmup Iteration   2: 80.275 ns/op
Iteration   1: 79.294 ns/op
Iteration   2: 78.746 ns/op
Iteration   3: 78.855 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  78.965 ±(99.9%) 5.289 ns/op [Average]
  (min, avg, max) = (78.746, 78.965, 79.294), stdev = 0.290
  CI (99.9%): [73.676, 84.254] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000000)

# Run progress: 4.69% complete, ETA 00:22:23
# Fork: 1 of 1
# Warmup Iteration   1: 82.737 ns/op
# Warmup Iteration   2: 81.517 ns/op
Iteration   1: 79.530 ns/op
Iteration   2: 79.500 ns/op
Iteration   3: 79.723 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  79.584 ±(99.9%) 2.207 ns/op [Average]
  (min, avg, max) = (79.500, 79.584, 79.723), stdev = 0.121
  CI (99.9%): [77.377, 81.792] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000)

# Run progress: 6.25% complete, ETA 00:23:16
# Fork: 1 of 1
# Warmup Iteration   1: 74.301 ns/op
# Warmup Iteration   2: 76.005 ns/op
Iteration   1: 79.047 ns/op
Iteration   2: 78.988 ns/op
Iteration   3: 79.309 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  79.115 ±(99.9%) 3.118 ns/op [Average]
  (min, avg, max) = (78.988, 79.115, 79.309), stdev = 0.171
  CI (99.9%): [75.997, 82.233] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 10000)

# Run progress: 7.81% complete, ETA 00:22:35
# Fork: 1 of 1
# Warmup Iteration   1: 65.520 ns/op
# Warmup Iteration   2: 65.245 ns/op
Iteration   1: 68.287 ns/op
Iteration   2: 68.261 ns/op
Iteration   3: 68.253 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  68.267 ±(99.9%) 0.317 ns/op [Average]
  (min, avg, max) = (68.253, 68.267, 68.287), stdev = 0.017
  CI (99.9%): [67.950, 68.584] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 100000)

# Run progress: 9.38% complete, ETA 00:22:02
# Fork: 1 of 1
# Warmup Iteration   1: 65.806 ns/op
# Warmup Iteration   2: 65.106 ns/op
Iteration   1: 70.024 ns/op
Iteration   2: 68.573 ns/op
Iteration   3: 68.538 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  69.045 ±(99.9%) 15.475 ns/op [Average]
  (min, avg, max) = (68.538, 69.045, 70.024), stdev = 0.848
  CI (99.9%): [53.570, 84.520] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000000)

# Run progress: 10.94% complete, ETA 00:21:35
# Fork: 1 of 1
# Warmup Iteration   1: 65.426 ns/op
# Warmup Iteration   2: 64.348 ns/op
Iteration   1: 70.326 ns/op
Iteration   2: 70.511 ns/op
Iteration   3: 70.374 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  70.403 ±(99.9%) 1.753 ns/op [Average]
  (min, avg, max) = (70.326, 70.403, 70.511), stdev = 0.096
  CI (99.9%): [68.651, 72.156] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000)

# Run progress: 12.50% complete, ETA 00:21:36
# Fork: 1 of 1
# Warmup Iteration   1: 82.136 ns/op
# Warmup Iteration   2: 79.678 ns/op
Iteration   1: 73.436 ns/op
Iteration   2: 73.483 ns/op
Iteration   3: 73.485 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  73.468 ±(99.9%) 0.506 ns/op [Average]
  (min, avg, max) = (73.436, 73.468, 73.485), stdev = 0.028
  CI (99.9%): [72.962, 73.974] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 10000)

# Run progress: 14.06% complete, ETA 00:21:05
# Fork: 1 of 1
# Warmup Iteration   1: 80.872 ns/op
# Warmup Iteration   2: 77.331 ns/op
Iteration   1: 79.597 ns/op
Iteration   2: 79.684 ns/op
Iteration   3: 79.645 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  79.642 ±(99.9%) 0.793 ns/op [Average]
  (min, avg, max) = (79.597, 79.642, 79.684), stdev = 0.043
  CI (99.9%): [78.849, 80.435] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 100000)

# Run progress: 15.63% complete, ETA 00:20:36
# Fork: 1 of 1
# Warmup Iteration   1: 80.106 ns/op
# Warmup Iteration   2: 78.534 ns/op
Iteration   1: 79.408 ns/op
Iteration   2: 79.438 ns/op
Iteration   3: 85.415 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  81.420 ±(99.9%) 63.117 ns/op [Average]
  (min, avg, max) = (79.408, 81.420, 85.415), stdev = 3.460
  CI (99.9%): [18.304, 144.537] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000000)

# Run progress: 17.19% complete, ETA 00:20:10
# Fork: 1 of 1
# Warmup Iteration   1: 83.082 ns/op
# Warmup Iteration   2: 83.265 ns/op
Iteration   1: 84.651 ns/op
Iteration   2: 84.510 ns/op
Iteration   3: 84.554 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  84.571 ±(99.9%) 1.315 ns/op [Average]
  (min, avg, max) = (84.510, 84.571, 84.651), stdev = 0.072
  CI (99.9%): [83.256, 85.887] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000)

# Run progress: 18.75% complete, ETA 00:20:06
# Fork: 1 of 1
# Warmup Iteration   1: 71.538 ns/op
# Warmup Iteration   2: 73.625 ns/op
Iteration   1: 77.032 ns/op
Iteration   2: 76.452 ns/op
Iteration   3: 76.320 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  76.601 ±(99.9%) 6.914 ns/op [Average]
  (min, avg, max) = (76.320, 76.601, 77.032), stdev = 0.379
  CI (99.9%): [69.687, 83.515] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 10000)

# Run progress: 20.31% complete, ETA 00:19:37
# Fork: 1 of 1
# Warmup Iteration   1: 66.545 ns/op
# Warmup Iteration   2: 68.858 ns/op
Iteration   1: 74.122 ns/op
Iteration   2: 74.029 ns/op
Iteration   3: 74.106 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  74.086 ±(99.9%) 0.911 ns/op [Average]
  (min, avg, max) = (74.029, 74.086, 74.122), stdev = 0.050
  CI (99.9%): [73.175, 74.996] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 100000)

# Run progress: 21.88% complete, ETA 00:19:10
# Fork: 1 of 1
# Warmup Iteration   1: 65.053 ns/op
# Warmup Iteration   2: 66.185 ns/op
Iteration   1: 70.705 ns/op
Iteration   2: 70.704 ns/op
Iteration   3: 70.705 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  70.705 ±(99.9%) 0.008 ns/op [Average]
  (min, avg, max) = (70.704, 70.705, 70.705), stdev = 0.001
  CI (99.9%): [70.697, 70.712] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000000)

# Run progress: 23.44% complete, ETA 00:18:44
# Fork: 1 of 1
# Warmup Iteration   1: 66.672 ns/op
# Warmup Iteration   2: 68.846 ns/op
Iteration   1: 68.936 ns/op
Iteration   2: 68.985 ns/op
Iteration   3: 68.960 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  68.961 ±(99.9%) 0.444 ns/op [Average]
  (min, avg, max) = (68.936, 68.961, 68.985), stdev = 0.024
  CI (99.9%): [68.517, 69.405] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000)

# Run progress: 25.00% complete, ETA 00:18:34
# Fork: 1 of 1
# Warmup Iteration   1: 300.307 ns/op
# Warmup Iteration   2: 279.695 ns/op
Iteration   1: 277.339 ns/op
Iteration   2: 282.561 ns/op
Iteration   3: 277.902 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  279.267 ±(99.9%) 52.291 ns/op [Average]
  (min, avg, max) = (277.339, 279.267, 282.561), stdev = 2.866
  CI (99.9%): [226.976, 331.559] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 10000)

# Run progress: 26.56% complete, ETA 00:18:07
# Fork: 1 of 1
# Warmup Iteration   1: 229.500 ns/op
# Warmup Iteration   2: 205.416 ns/op
Iteration   1: 211.309 ns/op
Iteration   2: 216.493 ns/op
Iteration   3: 213.219 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  213.674 ±(99.9%) 47.827 ns/op [Average]
  (min, avg, max) = (211.309, 213.674, 216.493), stdev = 2.622
  CI (99.9%): [165.847, 261.500] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 100000)

# Run progress: 28.13% complete, ETA 00:17:41
# Fork: 1 of 1
# Warmup Iteration   1: 234.617 ns/op
# Warmup Iteration   2: 219.947 ns/op
Iteration   1: 214.308 ns/op
Iteration   2: 213.242 ns/op
Iteration   3: 210.684 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  212.744 ±(99.9%) 33.980 ns/op [Average]
  (min, avg, max) = (210.684, 212.744, 214.308), stdev = 1.863
  CI (99.9%): [178.764, 246.724] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000000)

# Run progress: 29.69% complete, ETA 00:17:16
# Fork: 1 of 1
# Warmup Iteration   1: 687.161 ns/op
# Warmup Iteration   2: 212.209 ns/op
Iteration   1: 206.292 ns/op
Iteration   2: 206.023 ns/op
Iteration   3: 206.357 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  206.224 ±(99.9%) 3.226 ns/op [Average]
  (min, avg, max) = (206.023, 206.224, 206.357), stdev = 0.177
  CI (99.9%): [202.998, 209.450] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000)

# Run progress: 31.25% complete, ETA 00:17:00
# Fork: 1 of 1
# Warmup Iteration   1: 100.452 ns/op
# Warmup Iteration   2: 94.538 ns/op
Iteration   1: 97.837 ns/op
Iteration   2: 98.132 ns/op
Iteration   3: 98.104 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  98.024 ±(99.9%) 2.971 ns/op [Average]
  (min, avg, max) = (97.837, 98.024, 98.132), stdev = 0.163
  CI (99.9%): [95.053, 100.995] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 10000)

# Run progress: 32.81% complete, ETA 00:16:34
# Fork: 1 of 1
# Warmup Iteration   1: 99.539 ns/op
# Warmup Iteration   2: 97.213 ns/op
Iteration   1: 99.308 ns/op
Iteration   2: 97.135 ns/op
Iteration   3: 96.988 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  97.811 ±(99.9%) 23.703 ns/op [Average]
  (min, avg, max) = (96.988, 97.811, 99.308), stdev = 1.299
  CI (99.9%): [74.108, 121.513] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 100000)

# Run progress: 34.38% complete, ETA 00:16:09
# Fork: 1 of 1
# Warmup Iteration   1: 108.037 ns/op
# Warmup Iteration   2: 101.933 ns/op
Iteration   1: 105.392 ns/op
Iteration   2: 104.264 ns/op
Iteration   3: 104.458 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  104.705 ±(99.9%) 11.002 ns/op [Average]
  (min, avg, max) = (104.264, 104.705, 105.392), stdev = 0.603
  CI (99.9%): [93.703, 115.707] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000000)

# Run progress: 35.94% complete, ETA 00:15:44
# Fork: 1 of 1
# Warmup Iteration   1: 112.554 ns/op
# Warmup Iteration   2: 107.836 ns/op
Iteration   1: 110.118 ns/op
Iteration   2: 109.890 ns/op
Iteration   3: 109.824 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  109.944 ±(99.9%) 2.814 ns/op [Average]
  (min, avg, max) = (109.824, 109.944, 110.118), stdev = 0.154
  CI (99.9%): [107.130, 112.758] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000)

# Run progress: 37.50% complete, ETA 00:15:26
# Fork: 1 of 1
# Warmup Iteration   1: 80.758 ns/op
# Warmup Iteration   2: 80.677 ns/op
Iteration   1: 77.621 ns/op
Iteration   2: 77.074 ns/op
Iteration   3: 76.961 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  77.219 ±(99.9%) 6.445 ns/op [Average]
  (min, avg, max) = (76.961, 77.219, 77.621), stdev = 0.353
  CI (99.9%): [70.774, 83.664] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 10000)

# Run progress: 39.06% complete, ETA 00:15:01
# Fork: 1 of 1
# Warmup Iteration   1: 73.550 ns/op
# Warmup Iteration   2: 71.704 ns/op
Iteration   1: 76.391 ns/op
Iteration   2: 76.522 ns/op
Iteration   3: 78.452 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  77.122 ±(99.9%) 21.055 ns/op [Average]
  (min, avg, max) = (76.391, 77.122, 78.452), stdev = 1.154
  CI (99.9%): [56.067, 98.177] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 100000)

# Run progress: 40.63% complete, ETA 00:14:36
# Fork: 1 of 1
# Warmup Iteration   1: 78.446 ns/op
# Warmup Iteration   2: 75.576 ns/op
Iteration   1: 82.452 ns/op
Iteration   2: 80.651 ns/op
Iteration   3: 81.623 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  81.575 ±(99.9%) 16.440 ns/op [Average]
  (min, avg, max) = (80.651, 81.575, 82.452), stdev = 0.901
  CI (99.9%): [65.136, 98.015] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000000)

# Run progress: 42.19% complete, ETA 00:14:12
# Fork: 1 of 1
# Warmup Iteration   1: 95.229 ns/op
# Warmup Iteration   2: 90.869 ns/op
Iteration   1: 98.029 ns/op
Iteration   2: 95.732 ns/op
Iteration   3: 95.527 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  96.429 ±(99.9%) 25.346 ns/op [Average]
  (min, avg, max) = (95.527, 96.429, 98.029), stdev = 1.389
  CI (99.9%): [71.084, 121.775] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000)

# Run progress: 43.75% complete, ETA 00:13:54
# Fork: 1 of 1
# Warmup Iteration   1: 73.287 ns/op
# Warmup Iteration   2: 70.283 ns/op
Iteration   1: 78.083 ns/op
Iteration   2: 78.209 ns/op
Iteration   3: 78.485 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  78.259 ±(99.9%) 3.752 ns/op [Average]
  (min, avg, max) = (78.083, 78.259, 78.485), stdev = 0.206
  CI (99.9%): [74.508, 82.011] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 10000)

# Run progress: 45.31% complete, ETA 00:13:29
# Fork: 1 of 1
# Warmup Iteration   1: 68.207 ns/op
# Warmup Iteration   2: 67.913 ns/op
Iteration   1: 76.665 ns/op
Iteration   2: 76.487 ns/op
Iteration   3: 76.600 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  76.584 ±(99.9%) 1.646 ns/op [Average]
  (min, avg, max) = (76.487, 76.584, 76.665), stdev = 0.090
  CI (99.9%): [74.938, 78.231] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 100000)

# Run progress: 46.88% complete, ETA 00:13:05
# Fork: 1 of 1
# Warmup Iteration   1: 65.079 ns/op
# Warmup Iteration   2: 65.793 ns/op
Iteration   1: 71.515 ns/op
Iteration   2: 71.507 ns/op
Iteration   3: 71.783 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  71.602 ±(99.9%) 2.866 ns/op [Average]
  (min, avg, max) = (71.507, 71.602, 71.783), stdev = 0.157
  CI (99.9%): [68.736, 74.468] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000000)

# Run progress: 48.44% complete, ETA 00:12:41
# Fork: 1 of 1
# Warmup Iteration   1: 64.978 ns/op
# Warmup Iteration   2: 66.587 ns/op
Iteration   1: 70.723 ns/op
Iteration   2: 70.750 ns/op
Iteration   3: 70.760 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  70.744 ±(99.9%) 0.355 ns/op [Average]
  (min, avg, max) = (70.723, 70.744, 70.760), stdev = 0.019
  CI (99.9%): [70.390, 71.099] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000)

# Run progress: 50.00% complete, ETA 00:12:21
# Fork: 1 of 1
# Warmup Iteration   1: 230.353 ns/op
# Warmup Iteration   2: 223.172 ns/op
Iteration   1: 224.090 ns/op
Iteration   2: 225.345 ns/op
Iteration   3: 224.043 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  224.493 ±(99.9%) 13.476 ns/op [Average]
  (min, avg, max) = (224.043, 224.493, 225.345), stdev = 0.739
  CI (99.9%): [211.017, 237.968] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 10000)

# Run progress: 51.56% complete, ETA 00:11:56
# Fork: 1 of 1
# Warmup Iteration   1: 334.780 ns/op
# Warmup Iteration   2: 330.303 ns/op
Iteration   1: 323.380 ns/op
Iteration   2: 323.211 ns/op
Iteration   3: 323.205 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  323.265 ±(99.9%) 1.808 ns/op [Average]
  (min, avg, max) = (323.205, 323.265, 323.380), stdev = 0.099
  CI (99.9%): [321.457, 325.073] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 100000)

# Run progress: 53.13% complete, ETA 00:11:32
# Fork: 1 of 1
# Warmup Iteration   1: 397.188 ns/op
# Warmup Iteration   2: 387.448 ns/op
Iteration   1: 369.422 ns/op
Iteration   2: 372.856 ns/op
Iteration   3: 373.025 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  371.768 ±(99.9%) 37.097 ns/op [Average]
  (min, avg, max) = (369.422, 371.768, 373.025), stdev = 2.033
  CI (99.9%): [334.670, 408.865] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000000)

# Run progress: 54.69% complete, ETA 00:11:08
# Fork: 1 of 1
# Warmup Iteration   1: 430.014 ns/op
# Warmup Iteration   2: 433.092 ns/op
Iteration   1: 408.046 ns/op
Iteration   2: 405.918 ns/op
Iteration   3: 405.682 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  406.549 ±(99.9%) 23.750 ns/op [Average]
  (min, avg, max) = (405.682, 406.549, 408.046), stdev = 1.302
  CI (99.9%): [382.799, 430.299] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000)

# Run progress: 56.25% complete, ETA 00:10:48
# Fork: 1 of 1
# Warmup Iteration   1: 219.953 ns/op
# Warmup Iteration   2: 220.768 ns/op
Iteration   1: 214.330 ns/op
Iteration   2: 214.090 ns/op
Iteration   3: 214.019 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  214.146 ±(99.9%) 2.972 ns/op [Average]
  (min, avg, max) = (214.019, 214.146, 214.330), stdev = 0.163
  CI (99.9%): [211.174, 217.118] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 10000)

# Run progress: 57.81% complete, ETA 00:10:24
# Fork: 1 of 1
# Warmup Iteration   1: 229.223 ns/op
# Warmup Iteration   2: 187.211 ns/op
Iteration   1: 229.373 ns/op
Iteration   2: 227.385 ns/op
Iteration   3: 227.333 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  228.031 ±(99.9%) 21.221 ns/op [Average]
  (min, avg, max) = (227.333, 228.031, 229.373), stdev = 1.163
  CI (99.9%): [206.810, 249.251] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 100000)

# Run progress: 59.38% complete, ETA 00:10:00
# Fork: 1 of 1
# Warmup Iteration   1: 247.908 ns/op
# Warmup Iteration   2: 239.928 ns/op
Iteration   1: 243.862 ns/op
Iteration   2: 245.479 ns/op
Iteration   3: 242.715 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  244.019 ±(99.9%) 25.334 ns/op [Average]
  (min, avg, max) = (242.715, 244.019, 245.479), stdev = 1.389
  CI (99.9%): [218.685, 269.353] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000000)

# Run progress: 60.94% complete, ETA 00:09:37
# Fork: 1 of 1
# Warmup Iteration   1: 274.894 ns/op
# Warmup Iteration   2: 270.016 ns/op
Iteration   1: 269.263 ns/op
Iteration   2: 269.566 ns/op
Iteration   3: 274.709 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  271.179 ±(99.9%) 55.831 ns/op [Average]
  (min, avg, max) = (269.263, 271.179, 274.709), stdev = 3.060
  CI (99.9%): [215.348, 327.010] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000)

# Run progress: 62.50% complete, ETA 00:09:15
# Fork: 1 of 1
# Warmup Iteration   1: 223.915 ns/op
# Warmup Iteration   2: 215.841 ns/op
Iteration   1: 199.778 ns/op
Iteration   2: 199.752 ns/op
Iteration   3: 199.815 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  199.781 ±(99.9%) 0.582 ns/op [Average]
  (min, avg, max) = (199.752, 199.781, 199.815), stdev = 0.032
  CI (99.9%): [199.199, 200.364] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 10000)

# Run progress: 64.06% complete, ETA 00:08:51
# Fork: 1 of 1
# Warmup Iteration   1: 205.567 ns/op
# Warmup Iteration   2: 203.474 ns/op
Iteration   1: 183.883 ns/op
Iteration   2: 185.679 ns/op
Iteration   3: 184.749 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  184.770 ±(99.9%) 16.387 ns/op [Average]
  (min, avg, max) = (183.883, 184.770, 185.679), stdev = 0.898
  CI (99.9%): [168.383, 201.158] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 100000)

# Run progress: 65.63% complete, ETA 00:08:28
# Fork: 1 of 1
# Warmup Iteration   1: 203.236 ns/op
# Warmup Iteration   2: 201.734 ns/op
Iteration   1: 185.327 ns/op
Iteration   2: 188.033 ns/op
Iteration   3: 184.501 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  185.954 ±(99.9%) 33.713 ns/op [Average]
  (min, avg, max) = (184.501, 185.954, 188.033), stdev = 1.848
  CI (99.9%): [152.240, 219.667] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000000)

# Run progress: 67.19% complete, ETA 00:08:04
# Fork: 1 of 1
# Warmup Iteration   1: 208.010 ns/op
# Warmup Iteration   2: 211.264 ns/op
Iteration   1: 190.097 ns/op
Iteration   2: 189.515 ns/op
Iteration   3: 190.008 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  189.873 ±(99.9%) 5.715 ns/op [Average]
  (min, avg, max) = (189.515, 189.873, 190.097), stdev = 0.313
  CI (99.9%): [184.158, 195.588] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000)

# Run progress: 68.75% complete, ETA 00:07:43
# Fork: 1 of 1
# Warmup Iteration   1: 197.953 ns/op
# Warmup Iteration   2: 195.033 ns/op
Iteration   1: 184.950 ns/op
Iteration   2: 185.189 ns/op
Iteration   3: 185.101 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  185.080 ±(99.9%) 2.205 ns/op [Average]
  (min, avg, max) = (184.950, 185.080, 185.189), stdev = 0.121
  CI (99.9%): [182.874, 187.285] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 10000)

# Run progress: 70.31% complete, ETA 00:07:19
# Fork: 1 of 1
# Warmup Iteration   1: 229.432 ns/op
# Warmup Iteration   2: 217.482 ns/op
Iteration   1: 214.671 ns/op
Iteration   2: 217.639 ns/op
Iteration   3: 214.720 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  215.677 ±(99.9%) 31.005 ns/op [Average]
  (min, avg, max) = (214.671, 215.677, 217.639), stdev = 1.699
  CI (99.9%): [184.672, 246.681] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 100000)

# Run progress: 71.88% complete, ETA 00:06:55
# Fork: 1 of 1
# Warmup Iteration   1: 165.013 ns/op
# Warmup Iteration   2: 172.697 ns/op
Iteration   1: 160.229 ns/op
Iteration   2: 160.230 ns/op
Iteration   3: 160.386 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  160.282 ±(99.9%) 1.650 ns/op [Average]
  (min, avg, max) = (160.229, 160.282, 160.386), stdev = 0.090
  CI (99.9%): [158.632, 161.931] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000000)

# Run progress: 73.44% complete, ETA 00:06:32
# Fork: 1 of 1
# Warmup Iteration   1: 198.556 ns/op
# Warmup Iteration   2: 194.723 ns/op
Iteration   1: 186.872 ns/op
Iteration   2: 185.681 ns/op
Iteration   3: 184.986 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  185.846 ±(99.9%) 17.405 ns/op [Average]
  (min, avg, max) = (184.986, 185.846, 186.872), stdev = 0.954
  CI (99.9%): [168.441, 203.251] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000)

# Run progress: 75.00% complete, ETA 00:06:10
# Fork: 1 of 1
# Warmup Iteration   1: 117.244 ns/op
# Warmup Iteration   2: 113.359 ns/op
Iteration   1: 115.219 ns/op
Iteration   2: 115.192 ns/op
Iteration   3: 115.426 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  115.279 ±(99.9%) 2.337 ns/op [Average]
  (min, avg, max) = (115.192, 115.279, 115.426), stdev = 0.128
  CI (99.9%): [112.942, 117.617] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 10000)

# Run progress: 76.56% complete, ETA 00:05:46
# Fork: 1 of 1
# Warmup Iteration   1: 133.253 ns/op
# Warmup Iteration   2: 137.161 ns/op
Iteration   1: 135.614 ns/op
Iteration   2: 135.458 ns/op
Iteration   3: 135.567 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  135.546 ±(99.9%) 1.454 ns/op [Average]
  (min, avg, max) = (135.458, 135.546, 135.614), stdev = 0.080
  CI (99.9%): [134.092, 137.000] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 100000)

# Run progress: 78.13% complete, ETA 00:05:23
# Fork: 1 of 1
# Warmup Iteration   1: 159.287 ns/op
# Warmup Iteration   2: 167.986 ns/op
Iteration   1: 158.551 ns/op
Iteration   2: 159.300 ns/op
Iteration   3: 158.523 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  158.792 ±(99.9%) 8.038 ns/op [Average]
  (min, avg, max) = (158.523, 158.792, 159.300), stdev = 0.441
  CI (99.9%): [150.753, 166.830] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000000)

# Run progress: 79.69% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 115.020 ns/op
# Warmup Iteration   2: 120.298 ns/op
Iteration   1: 124.596 ns/op
Iteration   2: 123.596 ns/op
Iteration   3: 123.279 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  123.824 ±(99.9%) 12.542 ns/op [Average]
  (min, avg, max) = (123.279, 123.824, 124.596), stdev = 0.687
  CI (99.9%): [111.281, 136.366] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000)

# Run progress: 81.25% complete, ETA 00:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 123.235 ns/op
# Warmup Iteration   2: 126.970 ns/op
Iteration   1: 120.498 ns/op
Iteration   2: 120.757 ns/op
Iteration   3: 120.378 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  120.544 ±(99.9%) 3.539 ns/op [Average]
  (min, avg, max) = (120.378, 120.544, 120.757), stdev = 0.194
  CI (99.9%): [117.005, 124.083] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 10000)

# Run progress: 82.81% complete, ETA 00:04:14
# Fork: 1 of 1
# Warmup Iteration   1: 123.458 ns/op
# Warmup Iteration   2: 127.763 ns/op
Iteration   1: 121.580 ns/op
Iteration   2: 121.394 ns/op
Iteration   3: 121.462 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  121.479 ±(99.9%) 1.719 ns/op [Average]
  (min, avg, max) = (121.394, 121.479, 121.580), stdev = 0.094
  CI (99.9%): [119.760, 123.197] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 100000)

# Run progress: 84.38% complete, ETA 00:03:50
# Fork: 1 of 1
# Warmup Iteration   1: 175.199 ns/op
# Warmup Iteration   2: 178.033 ns/op
Iteration   1: 169.012 ns/op
Iteration   2: 168.936 ns/op
Iteration   3: 168.455 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  168.801 ±(99.9%) 5.505 ns/op [Average]
  (min, avg, max) = (168.455, 168.801, 169.012), stdev = 0.302
  CI (99.9%): [163.296, 174.305] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000000)

# Run progress: 85.94% complete, ETA 00:03:27
# Fork: 1 of 1
# Warmup Iteration   1: 117.602 ns/op
# Warmup Iteration   2: 122.547 ns/op
Iteration   1: 116.673 ns/op
Iteration   2: 116.584 ns/op
Iteration   3: 116.722 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  116.660 ±(99.9%) 1.273 ns/op [Average]
  (min, avg, max) = (116.584, 116.660, 116.722), stdev = 0.070
  CI (99.9%): [115.387, 117.932] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000)

# Run progress: 87.50% complete, ETA 00:03:05
# Fork: 1 of 1
# Warmup Iteration   1: 262.465 ns/op
# Warmup Iteration   2: 262.404 ns/op
Iteration   1: 248.775 ns/op
Iteration   2: 249.184 ns/op
Iteration   3: 249.029 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  248.996 ±(99.9%) 3.772 ns/op [Average]
  (min, avg, max) = (248.775, 248.996, 249.184), stdev = 0.207
  CI (99.9%): [245.223, 252.768] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 10000)

# Run progress: 89.06% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: 336.257 ns/op
# Warmup Iteration   2: 321.473 ns/op
Iteration   1: 311.941 ns/op
Iteration   2: 311.424 ns/op
Iteration   3: 315.246 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  312.870 ±(99.9%) 37.833 ns/op [Average]
  (min, avg, max) = (311.424, 312.870, 315.246), stdev = 2.074
  CI (99.9%): [275.037, 350.704] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 100000)

# Run progress: 90.63% complete, ETA 00:02:18
# Fork: 1 of 1
# Warmup Iteration   1: 404.945 ns/op
# Warmup Iteration   2: 400.539 ns/op
Iteration   1: 378.161 ns/op
Iteration   2: 377.784 ns/op
Iteration   3: 377.715 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  377.887 ±(99.9%) 4.377 ns/op [Average]
  (min, avg, max) = (377.715, 377.887, 378.161), stdev = 0.240
  CI (99.9%): [373.510, 382.264] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000000)

# Run progress: 92.19% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 405.145 ns/op
# Warmup Iteration   2: 400.017 ns/op
Iteration   1: 387.371 ns/op
Iteration   2: 386.988 ns/op
Iteration   3: 393.984 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  389.447 ±(99.9%) 71.755 ns/op [Average]
  (min, avg, max) = (386.988, 389.447, 393.984), stdev = 3.933
  CI (99.9%): [317.692, 461.203] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000)

# Run progress: 93.75% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: 159.130 ns/op
# Warmup Iteration   2: 154.463 ns/op
Iteration   1: 155.703 ns/op
Iteration   2: 155.693 ns/op
Iteration   3: 155.584 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  155.660 ±(99.9%) 1.201 ns/op [Average]
  (min, avg, max) = (155.584, 155.660, 155.703), stdev = 0.066
  CI (99.9%): [154.458, 156.861] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 10000)

# Run progress: 95.31% complete, ETA 00:01:09
# Fork: 1 of 1
# Warmup Iteration   1: 266.173 ns/op
# Warmup Iteration   2: 254.215 ns/op
Iteration   1: 247.396 ns/op
Iteration   2: 247.631 ns/op
Iteration   3: 248.123 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  247.717 ±(99.9%) 6.768 ns/op [Average]
  (min, avg, max) = (247.396, 247.717, 248.123), stdev = 0.371
  CI (99.9%): [240.949, 254.485] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 100000)

# Run progress: 96.88% complete, ETA 00:00:46
# Fork: 1 of 1
# Warmup Iteration   1: 281.970 ns/op
# Warmup Iteration   2: 297.206 ns/op
Iteration   1: 267.586 ns/op
Iteration   2: 267.290 ns/op
Iteration   3: 267.441 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  267.439 ±(99.9%) 2.698 ns/op [Average]
  (min, avg, max) = (267.290, 267.439, 267.586), stdev = 0.148
  CI (99.9%): [264.741, 270.137] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000000)

# Run progress: 98.44% complete, ETA 00:00:23
# Fork: 1 of 1
# Warmup Iteration   1: 319.960 ns/op
# Warmup Iteration   2: 317.170 ns/op
Iteration   1: 304.448 ns/op
Iteration   2: 302.795 ns/op
Iteration   3: 302.736 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  303.326 ±(99.9%) 17.735 ns/op [Average]
  (min, avg, max) = (302.736, 303.326, 304.448), stdev = 0.972
  CI (99.9%): [285.592, 321.061] (assumes normal distribution)


# Run complete. Total time: 00:24:41

Benchmark                                         (size)  Mode  Cnt    Score    Error  Units
SetMapJavaVsScalaBenchmarks.javaMapHit              1000  avgt    3   77.642 ± 12.469  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit             10000  avgt    3   73.641 ±  2.826  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit            100000  avgt    3   78.965 ±  5.289  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit           1000000  avgt    3   79.584 ±  2.207  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss             1000  avgt    3   79.115 ±  3.118  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss            10000  avgt    3   68.267 ±  0.317  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss           100000  avgt    3   69.045 ± 15.475  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss          1000000  avgt    3   70.403 ±  1.753  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit              1000  avgt    3   73.468 ±  0.506  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit             10000  avgt    3   79.642 ±  0.793  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit            100000  avgt    3   81.420 ± 63.117  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit           1000000  avgt    3   84.571 ±  1.315  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss             1000  avgt    3   76.601 ±  6.914  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss            10000  avgt    3   74.086 ±  0.911  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss           100000  avgt    3   70.705 ±  0.008  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss          1000000  avgt    3   68.961 ±  0.444  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit       1000  avgt    3  279.267 ± 52.291  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit      10000  avgt    3  213.674 ± 47.827  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit     100000  avgt    3  212.744 ± 33.980  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit    1000000  avgt    3  206.224 ±  3.226  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss      1000  avgt    3   98.024 ±  2.971  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss     10000  avgt    3   97.811 ± 23.703  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss    100000  avgt    3  104.705 ± 11.002  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss   1000000  avgt    3  109.944 ±  2.814  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit       1000  avgt    3   77.219 ±  6.445  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit      10000  avgt    3   77.122 ± 21.055  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit     100000  avgt    3   81.575 ± 16.440  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit    1000000  avgt    3   96.429 ± 25.346  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss      1000  avgt    3   78.259 ±  3.752  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss     10000  avgt    3   76.584 ±  1.646  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss    100000  avgt    3   71.602 ±  2.866  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss   1000000  avgt    3   70.744 ±  0.355  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit             1000  avgt    3  224.493 ± 13.476  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit            10000  avgt    3  323.265 ±  1.808  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit           100000  avgt    3  371.768 ± 37.097  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit          1000000  avgt    3  406.549 ± 23.750  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss            1000  avgt    3  214.146 ±  2.972  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss           10000  avgt    3  228.031 ± 21.221  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss          100000  avgt    3  244.019 ± 25.334  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss         1000000  avgt    3  271.179 ± 55.831  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit      1000  avgt    3  199.781 ±  0.582  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit     10000  avgt    3  184.770 ± 16.387  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit    100000  avgt    3  185.954 ± 33.713  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit   1000000  avgt    3  189.873 ±  5.715  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss     1000  avgt    3  185.080 ±  2.205  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss    10000  avgt    3  215.677 ± 31.005  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss   100000  avgt    3  160.282 ±  1.650  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss  1000000  avgt    3  185.846 ± 17.405  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit      1000  avgt    3  115.279 ±  2.337  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit     10000  avgt    3  135.546 ±  1.454  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit    100000  avgt    3  158.792 ±  8.038  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit   1000000  avgt    3  123.824 ± 12.542  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss     1000  avgt    3  120.544 ±  3.539  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss    10000  avgt    3  121.479 ±  1.719  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss   100000  avgt    3  168.801 ±  5.505  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss  1000000  avgt    3  116.660 ±  1.273  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit             1000  avgt    3  248.996 ±  3.772  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit            10000  avgt    3  312.870 ± 37.833  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit           100000  avgt    3  377.887 ±  4.377  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit          1000000  avgt    3  389.447 ± 71.755  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss            1000  avgt    3  155.660 ±  1.201  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss           10000  avgt    3  247.717 ±  6.768  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss          100000  avgt    3  267.439 ±  2.698  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss         1000000  avgt    3  303.326 ± 17.735  ns/op

Benchmark result is saved to /static/data/charts/set-map-java-vs-scala-2-12/jdk8.json
