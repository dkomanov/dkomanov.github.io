{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostMeta","render","post","this","props","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","_components__WEBPACK_IMPORTED_MODULE_1__","tags","frontmatter","React","Component","BlogPostTemplate","data","markdownRemark","teaserUrl","cover","title","rawDate","date","description","excerpt","canonicalUrl","itemScope","itemType","html","pageQuery"],"mappings":"wRAOMA,0FAKJC,OAAA,WAAS,IACAC,EAAQC,KAAKC,MAAbF,KAEP,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,KAAMR,EAAKS,YAAYD,OAC7BL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAcP,KAAMA,SAZDU,IAAMC,WAkB3BC,0FACJb,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMW,KAAKC,eAG7B,OACEX,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEQ,UAAWf,EAAKS,YAAYO,MAAOC,MAAOjB,EAAKS,YAAYQ,MAC3DC,QAASlB,EAAKS,YAAYS,QAASC,KAAMnB,EAAKS,YAAYU,MAE1DhB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEU,MAAOjB,EAAKS,YAAYQ,MACxBG,YAAapB,EAAKS,YAAYW,aAAepB,EAAKqB,QAClDC,aAActB,EAAKS,YAAYa,eAEjCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYiB,WAAS,EAACC,SAAS,6BAE1CxB,EAAKS,YAAYO,OACjBb,EAAAC,EAAAC,cAAA,UAAKL,EAAKiB,OAEZd,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUkB,KAAMzB,EAAKyB,QAEvBtB,EAAAC,EAAAC,cAACP,EAAD,CAAcE,KAAMA,SAtBGU,IAAMC,WAgDtBC,YAER,IAAMc,EAAS","file":"component---src-templates-blog-post-js-5ebe4a8f5c351c11de11.js","sourcesContent":["import {graphql} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Layout, Markdown, Seo, ShareButtons, Tags} from '../components';\nimport '../components/fragments';\nimport './BlogPost.css';\n\nclass BlogPostMeta extends React.Component {\n  static propTypes = {\n    post: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {post} = this.props;\n\n    return (\n      <div className=\"blog-post-meta\">\n        <Tags tags={post.frontmatter.tags}/>\n        <hr/>\n        <ShareButtons post={post}/>\n      </div>\n    );\n  }\n}\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    //const {previous, next} = this.props.pageContext;\n\n    return (\n      <Layout\n        teaserUrl={post.frontmatter.cover} title={post.frontmatter.title}\n        rawDate={post.frontmatter.rawDate} date={post.frontmatter.date}\n      >\n        <Seo\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          canonicalUrl={post.frontmatter.canonicalUrl}\n        />\n        <div className=\"blog-post\" itemScope itemType=\"http://schema.org/Article\">\n          {\n            post.frontmatter.cover &&\n            <h1>{post.title}</h1>\n          }\n          <Markdown html={post.html}/>\n        </div>\n        <BlogPostMeta post={post}/>\n      </Layout>\n    );\n  }\n}\n\n/*\n<ul>\n  <li>\n    {previous && (\n      <Link to={previous.fields.slug} rel=\"prev\">\n        ← {previous.frontmatter.title}\n      </Link>\n    )}\n  </li>\n  <li>\n    {next && (\n      <Link to={next.fields.slug} rel=\"next\">\n        {next.frontmatter.title} →\n      </Link>\n    )}\n  </li>\n</ul>\n*/\n\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            fields {\n                slug\n            }\n            frontmatter {\n                rawDate: date\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                description\n                tags\n                canonicalUrl\n                cover {\n                    ...coverUrl\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}