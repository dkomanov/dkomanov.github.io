# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 34.908 ns/op
# Warmup Iteration   2: 32.505 ns/op
# Warmup Iteration   3: 33.054 ns/op
# Warmup Iteration   4: 32.239 ns/op
# Warmup Iteration   5: 32.222 ns/op
Iteration   1: 32.165 ns/op
Iteration   2: 32.218 ns/op
Iteration   3: 32.227 ns/op
Iteration   4: 32.240 ns/op
Iteration   5: 32.218 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  32.214 ±(99.9%) 0.110 ns/op [Average]
  (min, avg, max) = (32.165, 32.214, 32.240), stdev = 0.028
  CI (99.9%): [32.104, 32.323] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.51% complete, ETA 00:34:20
# Fork: 1 of 1
# Warmup Iteration   1: 57.389 ns/op
# Warmup Iteration   2: 56.571 ns/op
# Warmup Iteration   3: 52.073 ns/op
# Warmup Iteration   4: 51.986 ns/op
# Warmup Iteration   5: 51.951 ns/op
Iteration   1: 51.904 ns/op
Iteration   2: 51.865 ns/op
Iteration   3: 52.060 ns/op
Iteration   4: 51.848 ns/op
Iteration   5: 51.826 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  51.900 ±(99.9%) 0.361 ns/op [Average]
  (min, avg, max) = (51.826, 51.900, 52.060), stdev = 0.094
  CI (99.9%): [51.540, 52.261] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 1.02% complete, ETA 00:34:03
# Fork: 1 of 1
# Warmup Iteration   1: 141.447 ns/op
# Warmup Iteration   2: 132.201 ns/op
# Warmup Iteration   3: 129.336 ns/op
# Warmup Iteration   4: 128.836 ns/op
# Warmup Iteration   5: 131.773 ns/op
Iteration   1: 128.607 ns/op
Iteration   2: 129.286 ns/op
Iteration   3: 129.314 ns/op
Iteration   4: 128.729 ns/op
Iteration   5: 128.643 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  128.916 ±(99.9%) 1.362 ns/op [Average]
  (min, avg, max) = (128.607, 128.916, 129.314), stdev = 0.354
  CI (99.9%): [127.554, 130.277] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 1.53% complete, ETA 00:33:49
# Fork: 1 of 1
# Warmup Iteration   1: 254.093 ns/op
# Warmup Iteration   2: 237.327 ns/op
# Warmup Iteration   3: 233.435 ns/op
# Warmup Iteration   4: 232.252 ns/op
# Warmup Iteration   5: 232.361 ns/op
Iteration   1: 233.175 ns/op
Iteration   2: 233.114 ns/op
Iteration   3: 233.352 ns/op
Iteration   4: 232.616 ns/op
Iteration   5: 233.870 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  233.225 ±(99.9%) 1.741 ns/op [Average]
  (min, avg, max) = (232.616, 233.225, 233.870), stdev = 0.452
  CI (99.9%): [231.484, 234.966] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 2.04% complete, ETA 00:33:37
# Fork: 1 of 1
# Warmup Iteration   1: 1064.513 ns/op
# Warmup Iteration   2: 989.825 ns/op
# Warmup Iteration   3: 974.080 ns/op
# Warmup Iteration   4: 971.581 ns/op
# Warmup Iteration   5: 970.825 ns/op
Iteration   1: 971.105 ns/op
Iteration   2: 971.823 ns/op
Iteration   3: 969.233 ns/op
Iteration   4: 971.003 ns/op
Iteration   5: 967.495 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  970.132 ±(99.9%) 6.761 ns/op [Average]
  (min, avg, max) = (967.495, 970.132, 971.823), stdev = 1.756
  CI (99.9%): [963.371, 976.893] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 2.55% complete, ETA 00:33:25
# Fork: 1 of 1
# Warmup Iteration   1: 2086.467 ns/op
# Warmup Iteration   2: 1945.720 ns/op
# Warmup Iteration   3: 1913.001 ns/op
# Warmup Iteration   4: 1906.806 ns/op
# Warmup Iteration   5: 1908.064 ns/op
Iteration   1: 1907.630 ns/op
Iteration   2: 1913.476 ns/op
Iteration   3: 1910.725 ns/op
Iteration   4: 1906.782 ns/op
Iteration   5: 1903.894 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1908.501 ±(99.9%) 14.231 ns/op [Average]
  (min, avg, max) = (1903.894, 1908.501, 1913.476), stdev = 3.696
  CI (99.9%): [1894.270, 1922.733] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 3.06% complete, ETA 00:33:14
# Fork: 1 of 1
# Warmup Iteration   1: 21031.185 ns/op
# Warmup Iteration   2: 19586.429 ns/op
# Warmup Iteration   3: 19431.227 ns/op
# Warmup Iteration   4: 19439.069 ns/op
# Warmup Iteration   5: 19404.385 ns/op
Iteration   1: 19404.409 ns/op
Iteration   2: 19358.944 ns/op
Iteration   3: 19362.621 ns/op
Iteration   4: 19370.644 ns/op
Iteration   5: 19380.403 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  19375.404 ±(99.9%) 70.037 ns/op [Average]
  (min, avg, max) = (19358.944, 19375.404, 19404.409), stdev = 18.188
  CI (99.9%): [19305.367, 19445.441] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1)

# Run progress: 3.57% complete, ETA 00:33:04
# Fork: 1 of 1
# Warmup Iteration   1: 34.857 ns/op
# Warmup Iteration   2: 33.147 ns/op
# Warmup Iteration   3: 32.563 ns/op
# Warmup Iteration   4: 32.560 ns/op
# Warmup Iteration   5: 32.522 ns/op
Iteration   1: 32.466 ns/op
Iteration   2: 32.433 ns/op
Iteration   3: 32.413 ns/op
Iteration   4: 32.542 ns/op
Iteration   5: 32.461 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  32.463 ±(99.9%) 0.190 ns/op [Average]
  (min, avg, max) = (32.413, 32.463, 32.542), stdev = 0.049
  CI (99.9%): [32.273, 32.653] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10)

# Run progress: 4.08% complete, ETA 00:32:51
# Fork: 1 of 1
# Warmup Iteration   1: 56.912 ns/op
# Warmup Iteration   2: 53.242 ns/op
# Warmup Iteration   3: 51.143 ns/op
# Warmup Iteration   4: 51.072 ns/op
# Warmup Iteration   5: 51.026 ns/op
Iteration   1: 51.083 ns/op
Iteration   2: 51.327 ns/op
Iteration   3: 51.273 ns/op
Iteration   4: 51.211 ns/op
Iteration   5: 51.039 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  51.186 ±(99.9%) 0.473 ns/op [Average]
  (min, avg, max) = (51.039, 51.186, 51.327), stdev = 0.123
  CI (99.9%): [50.713, 51.659] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 50)

# Run progress: 4.59% complete, ETA 00:32:39
# Fork: 1 of 1
# Warmup Iteration   1: 148.322 ns/op
# Warmup Iteration   2: 136.445 ns/op
# Warmup Iteration   3: 140.254 ns/op
# Warmup Iteration   4: 133.094 ns/op
# Warmup Iteration   5: 133.319 ns/op
Iteration   1: 132.929 ns/op
Iteration   2: 133.769 ns/op
Iteration   3: 133.687 ns/op
Iteration   4: 133.449 ns/op
Iteration   5: 133.299 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  133.427 ±(99.9%) 1.292 ns/op [Average]
  (min, avg, max) = (132.929, 133.427, 133.769), stdev = 0.335
  CI (99.9%): [132.135, 134.719] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 100)

# Run progress: 5.10% complete, ETA 00:32:27
# Fork: 1 of 1
# Warmup Iteration   1: 253.077 ns/op
# Warmup Iteration   2: 237.317 ns/op
# Warmup Iteration   3: 234.654 ns/op
# Warmup Iteration   4: 233.539 ns/op
# Warmup Iteration   5: 233.667 ns/op
Iteration   1: 250.370 ns/op
Iteration   2: 234.435 ns/op
Iteration   3: 233.834 ns/op
Iteration   4: 233.282 ns/op
Iteration   5: 230.635 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  236.511 ±(99.9%) 30.351 ns/op [Average]
  (min, avg, max) = (230.635, 236.511, 250.370), stdev = 7.882
  CI (99.9%): [206.160, 266.861] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 500)

# Run progress: 5.61% complete, ETA 00:32:15
# Fork: 1 of 1
# Warmup Iteration   1: 1062.348 ns/op
# Warmup Iteration   2: 988.130 ns/op
# Warmup Iteration   3: 971.495 ns/op
# Warmup Iteration   4: 968.934 ns/op
# Warmup Iteration   5: 969.578 ns/op
Iteration   1: 969.157 ns/op
Iteration   2: 971.263 ns/op
Iteration   3: 969.669 ns/op
Iteration   4: 968.498 ns/op
Iteration   5: 972.738 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  970.265 ±(99.9%) 6.619 ns/op [Average]
  (min, avg, max) = (968.498, 970.265, 972.738), stdev = 1.719
  CI (99.9%): [963.647, 976.884] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1000)

# Run progress: 6.12% complete, ETA 00:32:03
# Fork: 1 of 1
# Warmup Iteration   1: 2094.814 ns/op
# Warmup Iteration   2: 1955.898 ns/op
# Warmup Iteration   3: 1911.049 ns/op
# Warmup Iteration   4: 1905.541 ns/op
# Warmup Iteration   5: 1909.154 ns/op
Iteration   1: 1907.056 ns/op
Iteration   2: 1914.881 ns/op
Iteration   3: 1910.761 ns/op
Iteration   4: 1908.873 ns/op
Iteration   5: 1915.904 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1911.495 ±(99.9%) 14.665 ns/op [Average]
  (min, avg, max) = (1907.056, 1911.495, 1915.904), stdev = 3.808
  CI (99.9%): [1896.830, 1926.160] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10000)

# Run progress: 6.63% complete, ETA 00:31:52
# Fork: 1 of 1
# Warmup Iteration   1: 23218.972 ns/op
# Warmup Iteration   2: 19706.953 ns/op
# Warmup Iteration   3: 19627.637 ns/op
# Warmup Iteration   4: 19546.940 ns/op
# Warmup Iteration   5: 20026.882 ns/op
Iteration   1: 19611.759 ns/op
Iteration   2: 19655.010 ns/op
Iteration   3: 19571.964 ns/op
Iteration   4: 19550.152 ns/op
Iteration   5: 19514.320 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  19580.641 ±(99.9%) 210.049 ns/op [Average]
  (min, avg, max) = (19514.320, 19580.641, 19655.010), stdev = 54.549
  CI (99.9%): [19370.592, 19790.690] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 7.14% complete, ETA 00:31:41
# Fork: 1 of 1
# Warmup Iteration   1: 28.336 ns/op
# Warmup Iteration   2: 24.553 ns/op
# Warmup Iteration   3: 22.754 ns/op
# Warmup Iteration   4: 22.718 ns/op
# Warmup Iteration   5: 22.695 ns/op
Iteration   1: 23.076 ns/op
Iteration   2: 22.740 ns/op
Iteration   3: 22.799 ns/op
Iteration   4: 22.790 ns/op
Iteration   5: 22.811 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  22.843 ±(99.9%) 0.512 ns/op [Average]
  (min, avg, max) = (22.740, 22.843, 23.076), stdev = 0.133
  CI (99.9%): [22.332, 23.355] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 7.65% complete, ETA 00:31:31
# Fork: 1 of 1
# Warmup Iteration   1: 52.168 ns/op
# Warmup Iteration   2: 50.563 ns/op
# Warmup Iteration   3: 46.709 ns/op
# Warmup Iteration   4: 46.585 ns/op
# Warmup Iteration   5: 46.557 ns/op
Iteration   1: 48.523 ns/op
Iteration   2: 46.698 ns/op
Iteration   3: 46.714 ns/op
Iteration   4: 47.004 ns/op
Iteration   5: 46.638 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  47.116 ±(99.9%) 3.077 ns/op [Average]
  (min, avg, max) = (46.638, 47.116, 48.523), stdev = 0.799
  CI (99.9%): [44.038, 50.193] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 8.16% complete, ETA 00:31:21
# Fork: 1 of 1
# Warmup Iteration   1: 96.933 ns/op
# Warmup Iteration   2: 90.844 ns/op
# Warmup Iteration   3: 85.836 ns/op
# Warmup Iteration   4: 85.534 ns/op
# Warmup Iteration   5: 85.658 ns/op
Iteration   1: 85.536 ns/op
Iteration   2: 85.521 ns/op
Iteration   3: 85.593 ns/op
Iteration   4: 85.789 ns/op
Iteration   5: 85.879 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  85.664 ±(99.9%) 0.620 ns/op [Average]
  (min, avg, max) = (85.521, 85.664, 85.879), stdev = 0.161
  CI (99.9%): [85.044, 86.284] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 8.67% complete, ETA 00:31:11
# Fork: 1 of 1
# Warmup Iteration   1: 144.019 ns/op
# Warmup Iteration   2: 131.330 ns/op
# Warmup Iteration   3: 128.508 ns/op
# Warmup Iteration   4: 130.112 ns/op
# Warmup Iteration   5: 127.884 ns/op
Iteration   1: 127.809 ns/op
Iteration   2: 128.313 ns/op
Iteration   3: 127.779 ns/op
Iteration   4: 127.836 ns/op
Iteration   5: 128.174 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  127.982 ±(99.9%) 0.941 ns/op [Average]
  (min, avg, max) = (127.779, 127.982, 128.313), stdev = 0.244
  CI (99.9%): [127.041, 128.923] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 9.18% complete, ETA 00:31:01
# Fork: 1 of 1
# Warmup Iteration   1: 511.089 ns/op
# Warmup Iteration   2: 452.294 ns/op
# Warmup Iteration   3: 446.449 ns/op
# Warmup Iteration   4: 451.450 ns/op
# Warmup Iteration   5: 444.950 ns/op
Iteration   1: 444.711 ns/op
Iteration   2: 444.324 ns/op
Iteration   3: 446.018 ns/op
Iteration   4: 445.137 ns/op
Iteration   5: 444.636 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  444.965 ±(99.9%) 2.526 ns/op [Average]
  (min, avg, max) = (444.324, 444.965, 446.018), stdev = 0.656
  CI (99.9%): [442.439, 447.491] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 9.69% complete, ETA 00:30:51
# Fork: 1 of 1
# Warmup Iteration   1: 977.845 ns/op
# Warmup Iteration   2: 870.557 ns/op
# Warmup Iteration   3: 877.719 ns/op
# Warmup Iteration   4: 859.831 ns/op
# Warmup Iteration   5: 853.097 ns/op
Iteration   1: 853.663 ns/op
Iteration   2: 853.031 ns/op
Iteration   3: 854.667 ns/op
Iteration   4: 855.353 ns/op
Iteration   5: 873.235 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  857.990 ±(99.9%) 32.996 ns/op [Average]
  (min, avg, max) = (853.031, 857.990, 873.235), stdev = 8.569
  CI (99.9%): [824.993, 890.986] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 10.20% complete, ETA 00:30:40
# Fork: 1 of 1
# Warmup Iteration   1: 10817.922 ns/op
# Warmup Iteration   2: 9322.684 ns/op
# Warmup Iteration   3: 9259.855 ns/op
# Warmup Iteration   4: 9844.085 ns/op
# Warmup Iteration   5: 9264.927 ns/op
Iteration   1: 9268.619 ns/op
Iteration   2: 9314.421 ns/op
Iteration   3: 9288.352 ns/op
Iteration   4: 9249.936 ns/op
Iteration   5: 9258.685 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  9276.002 ±(99.9%) 99.343 ns/op [Average]
  (min, avg, max) = (9249.936, 9276.002, 9314.421), stdev = 25.799
  CI (99.9%): [9176.659, 9375.345] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1)

# Run progress: 10.71% complete, ETA 00:30:30
# Fork: 1 of 1
# Warmup Iteration   1: 26.376 ns/op
# Warmup Iteration   2: 24.081 ns/op
# Warmup Iteration   3: 22.776 ns/op
# Warmup Iteration   4: 22.764 ns/op
# Warmup Iteration   5: 22.744 ns/op
Iteration   1: 22.689 ns/op
Iteration   2: 23.077 ns/op
Iteration   3: 22.711 ns/op
Iteration   4: 22.722 ns/op
Iteration   5: 22.998 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  22.839 ±(99.9%) 0.706 ns/op [Average]
  (min, avg, max) = (22.689, 22.839, 23.077), stdev = 0.183
  CI (99.9%): [22.134, 23.545] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10)

# Run progress: 11.22% complete, ETA 00:30:19
# Fork: 1 of 1
# Warmup Iteration   1: 52.088 ns/op
# Warmup Iteration   2: 49.706 ns/op
# Warmup Iteration   3: 47.334 ns/op
# Warmup Iteration   4: 49.272 ns/op
# Warmup Iteration   5: 47.443 ns/op
Iteration   1: 47.508 ns/op
Iteration   2: 47.565 ns/op
Iteration   3: 47.337 ns/op
Iteration   4: 47.433 ns/op
Iteration   5: 47.052 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  47.379 ±(99.9%) 0.777 ns/op [Average]
  (min, avg, max) = (47.052, 47.379, 47.565), stdev = 0.202
  CI (99.9%): [46.602, 48.156] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 50)

# Run progress: 11.73% complete, ETA 00:30:08
# Fork: 1 of 1
# Warmup Iteration   1: 102.510 ns/op
# Warmup Iteration   2: 89.250 ns/op
# Warmup Iteration   3: 87.799 ns/op
# Warmup Iteration   4: 88.312 ns/op
# Warmup Iteration   5: 85.635 ns/op
Iteration   1: 85.402 ns/op
Iteration   2: 87.808 ns/op
Iteration   3: 85.317 ns/op
Iteration   4: 85.410 ns/op
Iteration   5: 85.522 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  85.892 ±(99.9%) 4.135 ns/op [Average]
  (min, avg, max) = (85.317, 85.892, 87.808), stdev = 1.074
  CI (99.9%): [81.757, 90.026] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 100)

# Run progress: 12.24% complete, ETA 00:29:57
# Fork: 1 of 1
# Warmup Iteration   1: 143.895 ns/op
# Warmup Iteration   2: 132.027 ns/op
# Warmup Iteration   3: 129.940 ns/op
# Warmup Iteration   4: 128.423 ns/op
# Warmup Iteration   5: 127.864 ns/op
Iteration   1: 128.150 ns/op
Iteration   2: 128.098 ns/op
Iteration   3: 131.004 ns/op
Iteration   4: 131.679 ns/op
Iteration   5: 128.290 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  129.444 ±(99.9%) 6.738 ns/op [Average]
  (min, avg, max) = (128.098, 129.444, 131.679), stdev = 1.750
  CI (99.9%): [122.707, 136.182] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 500)

# Run progress: 12.76% complete, ETA 00:29:46
# Fork: 1 of 1
# Warmup Iteration   1: 517.641 ns/op
# Warmup Iteration   2: 465.174 ns/op
# Warmup Iteration   3: 472.725 ns/op
# Warmup Iteration   4: 456.900 ns/op
# Warmup Iteration   5: 457.069 ns/op
Iteration   1: 457.113 ns/op
Iteration   2: 461.466 ns/op
Iteration   3: 457.032 ns/op
Iteration   4: 457.883 ns/op
Iteration   5: 463.280 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  459.354 ±(99.9%) 10.968 ns/op [Average]
  (min, avg, max) = (457.032, 459.354, 463.280), stdev = 2.848
  CI (99.9%): [448.387, 470.322] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1000)

# Run progress: 13.27% complete, ETA 00:29:36
# Fork: 1 of 1
# Warmup Iteration   1: 993.974 ns/op
# Warmup Iteration   2: 870.707 ns/op
# Warmup Iteration   3: 860.117 ns/op
# Warmup Iteration   4: 857.612 ns/op
# Warmup Iteration   5: 858.617 ns/op
Iteration   1: 857.880 ns/op
Iteration   2: 856.395 ns/op
Iteration   3: 856.348 ns/op
Iteration   4: 859.335 ns/op
Iteration   5: 855.263 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  857.044 ±(99.9%) 6.097 ns/op [Average]
  (min, avg, max) = (855.263, 857.044, 859.335), stdev = 1.583
  CI (99.9%): [850.948, 863.141] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10000)

# Run progress: 13.78% complete, ETA 00:29:25
# Fork: 1 of 1
# Warmup Iteration   1: 11424.765 ns/op
# Warmup Iteration   2: 9331.075 ns/op
# Warmup Iteration   3: 9293.308 ns/op
# Warmup Iteration   4: 9271.294 ns/op
# Warmup Iteration   5: 9223.043 ns/op
Iteration   1: 9967.494 ns/op
Iteration   2: 9475.359 ns/op
Iteration   3: 9236.746 ns/op
Iteration   4: 9244.098 ns/op
Iteration   5: 9294.101 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  9443.560 ±(99.9%) 1187.494 ns/op [Average]
  (min, avg, max) = (9236.746, 9443.560, 9967.494), stdev = 308.388
  CI (99.9%): [8256.066, 10631.053] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 14.29% complete, ETA 00:29:14
# Fork: 1 of 1
# Warmup Iteration   1: 1450.566 ns/op
# Warmup Iteration   2: 1448.980 ns/op
# Warmup Iteration   3: 1415.027 ns/op
# Warmup Iteration   4: 1436.324 ns/op
# Warmup Iteration   5: 1442.298 ns/op
Iteration   1: 1435.650 ns/op
Iteration   2: 1418.529 ns/op
Iteration   3: 1410.784 ns/op
Iteration   4: 1415.087 ns/op
Iteration   5: 1429.327 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1421.875 ±(99.9%) 39.718 ns/op [Average]
  (min, avg, max) = (1410.784, 1421.875, 1435.650), stdev = 10.315
  CI (99.9%): [1382.158, 1461.593] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 14.80% complete, ETA 00:29:04
# Fork: 1 of 1
# Warmup Iteration   1: 1435.911 ns/op
# Warmup Iteration   2: 1424.089 ns/op
# Warmup Iteration   3: 1428.832 ns/op
# Warmup Iteration   4: 1429.108 ns/op
# Warmup Iteration   5: 1415.864 ns/op
Iteration   1: 1393.630 ns/op
Iteration   2: 1397.854 ns/op
Iteration   3: 1398.899 ns/op
Iteration   4: 1398.572 ns/op
Iteration   5: 1391.055 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1396.002 ±(99.9%) 13.412 ns/op [Average]
  (min, avg, max) = (1391.055, 1396.002, 1398.899), stdev = 3.483
  CI (99.9%): [1382.590, 1409.414] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 15.31% complete, ETA 00:28:54
# Fork: 1 of 1
# Warmup Iteration   1: 1525.445 ns/op
# Warmup Iteration   2: 1553.379 ns/op
# Warmup Iteration   3: 1500.610 ns/op
# Warmup Iteration   4: 1473.601 ns/op
# Warmup Iteration   5: 1494.314 ns/op
Iteration   1: 1473.165 ns/op
Iteration   2: 1472.617 ns/op
Iteration   3: 1482.610 ns/op
Iteration   4: 1472.652 ns/op
Iteration   5: 1463.641 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1472.937 ±(99.9%) 25.846 ns/op [Average]
  (min, avg, max) = (1463.641, 1472.937, 1482.610), stdev = 6.712
  CI (99.9%): [1447.091, 1498.784] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 15.82% complete, ETA 00:28:43
# Fork: 1 of 1
# Warmup Iteration   1: 1683.938 ns/op
# Warmup Iteration   2: 1678.917 ns/op
# Warmup Iteration   3: 1673.595 ns/op
# Warmup Iteration   4: 1615.086 ns/op
# Warmup Iteration   5: 1618.744 ns/op
Iteration   1: 1610.946 ns/op
Iteration   2: 1611.317 ns/op
Iteration   3: 1610.479 ns/op
Iteration   4: 1620.335 ns/op
Iteration   5: 1604.479 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1611.511 ±(99.9%) 21.845 ns/op [Average]
  (min, avg, max) = (1604.479, 1611.511, 1620.335), stdev = 5.673
  CI (99.9%): [1589.666, 1633.356] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 16.33% complete, ETA 00:28:33
# Fork: 1 of 1
# Warmup Iteration   1: 2271.086 ns/op
# Warmup Iteration   2: 2141.989 ns/op
# Warmup Iteration   3: 2122.918 ns/op
# Warmup Iteration   4: 2112.444 ns/op
# Warmup Iteration   5: 2106.972 ns/op
Iteration   1: 2095.410 ns/op
Iteration   2: 2096.701 ns/op
Iteration   3: 2097.286 ns/op
Iteration   4: 2099.145 ns/op
Iteration   5: 2138.669 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2105.442 ±(99.9%) 71.710 ns/op [Average]
  (min, avg, max) = (2095.410, 2105.442, 2138.669), stdev = 18.623
  CI (99.9%): [2033.733, 2177.152] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 16.84% complete, ETA 00:28:23
# Fork: 1 of 1
# Warmup Iteration   1: 2966.204 ns/op
# Warmup Iteration   2: 2845.356 ns/op
# Warmup Iteration   3: 2832.748 ns/op
# Warmup Iteration   4: 2862.227 ns/op
# Warmup Iteration   5: 2823.091 ns/op
Iteration   1: 2819.738 ns/op
Iteration   2: 2818.736 ns/op
Iteration   3: 2835.671 ns/op
Iteration   4: 2820.684 ns/op
Iteration   5: 2828.117 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2824.589 ±(99.9%) 27.786 ns/op [Average]
  (min, avg, max) = (2818.736, 2824.589, 2835.671), stdev = 7.216
  CI (99.9%): [2796.803, 2852.376] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 17.35% complete, ETA 00:28:12
# Fork: 1 of 1
# Warmup Iteration   1: 15533.189 ns/op
# Warmup Iteration   2: 14032.376 ns/op
# Warmup Iteration   3: 13620.129 ns/op
# Warmup Iteration   4: 13635.894 ns/op
# Warmup Iteration   5: 13609.510 ns/op
Iteration   1: 13602.128 ns/op
Iteration   2: 13614.308 ns/op
Iteration   3: 13598.357 ns/op
Iteration   4: 13672.410 ns/op
Iteration   5: 14134.639 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  13724.368 ±(99.9%) 890.567 ns/op [Average]
  (min, avg, max) = (13598.357, 13724.368, 14134.639), stdev = 231.277
  CI (99.9%): [12833.802, 14614.935] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 1)

# Run progress: 17.86% complete, ETA 00:28:02
# Fork: 1 of 1
# Warmup Iteration   1: 1450.359 ns/op
# Warmup Iteration   2: 1479.788 ns/op
# Warmup Iteration   3: 1411.294 ns/op
# Warmup Iteration   4: 1440.060 ns/op
# Warmup Iteration   5: 1436.623 ns/op
Iteration   1: 1432.235 ns/op
Iteration   2: 1418.734 ns/op
Iteration   3: 1409.612 ns/op
Iteration   4: 1411.287 ns/op
Iteration   5: 1419.302 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1418.234 ±(99.9%) 34.442 ns/op [Average]
  (min, avg, max) = (1409.612, 1418.234, 1432.235), stdev = 8.944
  CI (99.9%): [1383.792, 1452.675] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 10)

# Run progress: 18.37% complete, ETA 00:27:51
# Fork: 1 of 1
# Warmup Iteration   1: 1437.719 ns/op
# Warmup Iteration   2: 1429.432 ns/op
# Warmup Iteration   3: 1413.299 ns/op
# Warmup Iteration   4: 1423.866 ns/op
# Warmup Iteration   5: 1411.396 ns/op
Iteration   1: 1392.317 ns/op
Iteration   2: 1394.269 ns/op
Iteration   3: 1392.675 ns/op
Iteration   4: 1382.710 ns/op
Iteration   5: 1383.263 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1389.047 ±(99.9%) 21.503 ns/op [Average]
  (min, avg, max) = (1382.710, 1389.047, 1394.269), stdev = 5.584
  CI (99.9%): [1367.543, 1410.550] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 50)

# Run progress: 18.88% complete, ETA 00:27:41
# Fork: 1 of 1
# Warmup Iteration   1: 1556.869 ns/op
# Warmup Iteration   2: 1556.343 ns/op
# Warmup Iteration   3: 1489.031 ns/op
# Warmup Iteration   4: 1480.848 ns/op
# Warmup Iteration   5: 1474.013 ns/op
Iteration   1: 1485.467 ns/op
Iteration   2: 1579.406 ns/op
Iteration   3: 1473.705 ns/op
Iteration   4: 1525.212 ns/op
Iteration   5: 1462.974 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1505.353 ±(99.9%) 183.373 ns/op [Average]
  (min, avg, max) = (1462.974, 1505.353, 1579.406), stdev = 47.621
  CI (99.9%): [1321.980, 1688.726] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 100)

# Run progress: 19.39% complete, ETA 00:27:30
# Fork: 1 of 1
# Warmup Iteration   1: 1675.941 ns/op
# Warmup Iteration   2: 1678.092 ns/op
# Warmup Iteration   3: 1626.612 ns/op
# Warmup Iteration   4: 1607.774 ns/op
# Warmup Iteration   5: 1611.174 ns/op
Iteration   1: 1609.988 ns/op
Iteration   2: 1697.742 ns/op
Iteration   3: 1614.375 ns/op
Iteration   4: 1611.739 ns/op
Iteration   5: 1607.811 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1628.331 ±(99.9%) 149.699 ns/op [Average]
  (min, avg, max) = (1607.811, 1628.331, 1697.742), stdev = 38.876
  CI (99.9%): [1478.632, 1778.030] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 500)

# Run progress: 19.90% complete, ETA 00:27:19
# Fork: 1 of 1
# Warmup Iteration   1: 2298.834 ns/op
# Warmup Iteration   2: 2131.469 ns/op
# Warmup Iteration   3: 2116.662 ns/op
# Warmup Iteration   4: 2114.525 ns/op
# Warmup Iteration   5: 2121.949 ns/op
Iteration   1: 2111.732 ns/op
Iteration   2: 2169.804 ns/op
Iteration   3: 2108.726 ns/op
Iteration   4: 2136.487 ns/op
Iteration   5: 2113.626 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2128.075 ±(99.9%) 99.343 ns/op [Average]
  (min, avg, max) = (2108.726, 2128.075, 2169.804), stdev = 25.799
  CI (99.9%): [2028.732, 2227.418] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 1000)

# Run progress: 20.41% complete, ETA 00:27:09
# Fork: 1 of 1
# Warmup Iteration   1: 2958.659 ns/op
# Warmup Iteration   2: 2859.261 ns/op
# Warmup Iteration   3: 2834.419 ns/op
# Warmup Iteration   4: 2821.162 ns/op
# Warmup Iteration   5: 2814.135 ns/op
Iteration   1: 2820.108 ns/op
Iteration   2: 2923.891 ns/op
Iteration   3: 2830.020 ns/op
Iteration   4: 2826.551 ns/op
Iteration   5: 2866.401 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2853.394 ±(99.9%) 166.892 ns/op [Average]
  (min, avg, max) = (2820.108, 2853.394, 2923.891), stdev = 43.341
  CI (99.9%): [2686.503, 3020.286] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 10000)

# Run progress: 20.92% complete, ETA 00:26:58
# Fork: 1 of 1
# Warmup Iteration   1: 16045.533 ns/op
# Warmup Iteration   2: 13890.869 ns/op
# Warmup Iteration   3: 13642.369 ns/op
# Warmup Iteration   4: 13654.558 ns/op
# Warmup Iteration   5: 13643.263 ns/op
Iteration   1: 14660.132 ns/op
Iteration   2: 13718.615 ns/op
Iteration   3: 13734.566 ns/op
Iteration   4: 13737.183 ns/op
Iteration   5: 14217.646 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  14013.628 ±(99.9%) 1611.898 ns/op [Average]
  (min, avg, max) = (13718.615, 14013.628, 14660.132), stdev = 418.605
  CI (99.9%): [12401.730, 15625.527] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 21.43% complete, ETA 00:26:48
# Fork: 1 of 1
# Warmup Iteration   1: 1234.927 ns/op
# Warmup Iteration   2: 1247.812 ns/op
# Warmup Iteration   3: 1245.433 ns/op
# Warmup Iteration   4: 1257.694 ns/op
# Warmup Iteration   5: 1257.594 ns/op
Iteration   1: 1223.999 ns/op
Iteration   2: 1214.278 ns/op
Iteration   3: 1387.825 ns/op
Iteration   4: 1231.754 ns/op
Iteration   5: 1210.920 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1253.755 ±(99.9%) 290.319 ns/op [Average]
  (min, avg, max) = (1210.920, 1253.755, 1387.825), stdev = 75.395
  CI (99.9%): [963.437, 1544.074] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 21.94% complete, ETA 00:26:37
# Fork: 1 of 1
# Warmup Iteration   1: 1237.400 ns/op
# Warmup Iteration   2: 1225.330 ns/op
# Warmup Iteration   3: 1262.690 ns/op
# Warmup Iteration   4: 1264.512 ns/op
# Warmup Iteration   5: 1186.410 ns/op
Iteration   1: 1211.231 ns/op
Iteration   2: 1195.866 ns/op
Iteration   3: 1186.344 ns/op
Iteration   4: 1194.737 ns/op
Iteration   5: 1179.242 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1193.484 ±(99.9%) 46.208 ns/op [Average]
  (min, avg, max) = (1179.242, 1193.484, 1211.231), stdev = 12.000
  CI (99.9%): [1147.276, 1239.692] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 22.45% complete, ETA 00:26:27
# Fork: 1 of 1
# Warmup Iteration   1: 1326.235 ns/op
# Warmup Iteration   2: 1333.096 ns/op
# Warmup Iteration   3: 1313.490 ns/op
# Warmup Iteration   4: 1263.463 ns/op
# Warmup Iteration   5: 1265.813 ns/op
Iteration   1: 1265.518 ns/op
Iteration   2: 1261.641 ns/op
Iteration   3: 1260.316 ns/op
Iteration   4: 1261.456 ns/op
Iteration   5: 1252.116 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1260.209 ±(99.9%) 18.992 ns/op [Average]
  (min, avg, max) = (1252.116, 1260.209, 1265.518), stdev = 4.932
  CI (99.9%): [1241.217, 1279.201] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 22.96% complete, ETA 00:26:16
# Fork: 1 of 1
# Warmup Iteration   1: 1441.082 ns/op
# Warmup Iteration   2: 1385.253 ns/op
# Warmup Iteration   3: 1348.122 ns/op
# Warmup Iteration   4: 1343.459 ns/op
# Warmup Iteration   5: 1337.521 ns/op
Iteration   1: 1344.548 ns/op
Iteration   2: 1346.923 ns/op
Iteration   3: 1347.528 ns/op
Iteration   4: 1351.848 ns/op
Iteration   5: 1332.446 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1344.659 ±(99.9%) 28.179 ns/op [Average]
  (min, avg, max) = (1332.446, 1344.659, 1351.848), stdev = 7.318
  CI (99.9%): [1316.480, 1372.838] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 23.47% complete, ETA 00:26:06
# Fork: 1 of 1
# Warmup Iteration   1: 2008.164 ns/op
# Warmup Iteration   2: 1869.256 ns/op
# Warmup Iteration   3: 1850.105 ns/op
# Warmup Iteration   4: 1848.482 ns/op
# Warmup Iteration   5: 1836.188 ns/op
Iteration   1: 1846.967 ns/op
Iteration   2: 1853.536 ns/op
Iteration   3: 1847.280 ns/op
Iteration   4: 1848.741 ns/op
Iteration   5: 1854.012 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1850.107 ±(99.9%) 13.161 ns/op [Average]
  (min, avg, max) = (1846.967, 1850.107, 1854.012), stdev = 3.418
  CI (99.9%): [1836.946, 1863.268] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 23.98% complete, ETA 00:25:56
# Fork: 1 of 1
# Warmup Iteration   1: 2802.251 ns/op
# Warmup Iteration   2: 2712.809 ns/op
# Warmup Iteration   3: 2691.048 ns/op
# Warmup Iteration   4: 2656.886 ns/op
# Warmup Iteration   5: 2648.936 ns/op
Iteration   1: 2648.461 ns/op
Iteration   2: 2686.399 ns/op
Iteration   3: 2633.073 ns/op
Iteration   4: 2651.972 ns/op
Iteration   5: 2667.332 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  2657.447 ±(99.9%) 77.988 ns/op [Average]
  (min, avg, max) = (2633.073, 2657.447, 2686.399), stdev = 20.253
  CI (99.9%): [2579.459, 2735.435] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 24.49% complete, ETA 00:25:45
# Fork: 1 of 1
# Warmup Iteration   1: 14519.972 ns/op
# Warmup Iteration   2: 13854.763 ns/op
# Warmup Iteration   3: 13389.385 ns/op
# Warmup Iteration   4: 13394.697 ns/op
# Warmup Iteration   5: 13368.152 ns/op
Iteration   1: 13620.745 ns/op
Iteration   2: 13396.840 ns/op
Iteration   3: 13383.570 ns/op
Iteration   4: 13422.129 ns/op
Iteration   5: 13846.045 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  13533.866 ±(99.9%) 767.366 ns/op [Average]
  (min, avg, max) = (13383.570, 13533.866, 13846.045), stdev = 199.282
  CI (99.9%): [12766.500, 14301.232] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 1)

# Run progress: 25.00% complete, ETA 00:25:35
# Fork: 1 of 1
# Warmup Iteration   1: 1246.726 ns/op
# Warmup Iteration   2: 1229.651 ns/op
# Warmup Iteration   3: 1265.944 ns/op
# Warmup Iteration   4: 1223.789 ns/op
# Warmup Iteration   5: 1226.825 ns/op
Iteration   1: 1219.678 ns/op
Iteration   2: 1202.585 ns/op
Iteration   3: 1201.923 ns/op
Iteration   4: 1206.292 ns/op
Iteration   5: 1197.125 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1205.521 ±(99.9%) 32.960 ns/op [Average]
  (min, avg, max) = (1197.125, 1205.521, 1219.678), stdev = 8.560
  CI (99.9%): [1172.561, 1238.480] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 10)

# Run progress: 25.51% complete, ETA 00:25:24
# Fork: 1 of 1
# Warmup Iteration   1: 1243.500 ns/op
# Warmup Iteration   2: 1214.234 ns/op
# Warmup Iteration   3: 1221.399 ns/op
# Warmup Iteration   4: 1223.113 ns/op
# Warmup Iteration   5: 1188.080 ns/op
Iteration   1: 1189.515 ns/op
Iteration   2: 1189.352 ns/op
Iteration   3: 1188.934 ns/op
Iteration   4: 1186.589 ns/op
Iteration   5: 1188.048 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1188.488 ±(99.9%) 4.636 ns/op [Average]
  (min, avg, max) = (1186.589, 1188.488, 1189.515), stdev = 1.204
  CI (99.9%): [1183.851, 1193.124] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 50)

# Run progress: 26.02% complete, ETA 00:25:14
# Fork: 1 of 1
# Warmup Iteration   1: 1323.376 ns/op
# Warmup Iteration   2: 1335.178 ns/op
# Warmup Iteration   3: 1266.048 ns/op
# Warmup Iteration   4: 1261.373 ns/op
# Warmup Iteration   5: 1272.282 ns/op
Iteration   1: 1266.258 ns/op
Iteration   2: 1267.085 ns/op
Iteration   3: 1264.777 ns/op
Iteration   4: 1266.442 ns/op
Iteration   5: 1259.900 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1264.892 ±(99.9%) 11.228 ns/op [Average]
  (min, avg, max) = (1259.900, 1264.892, 1267.085), stdev = 2.916
  CI (99.9%): [1253.664, 1276.121] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 100)

# Run progress: 26.53% complete, ETA 00:25:03
# Fork: 1 of 1
# Warmup Iteration   1: 1438.979 ns/op
# Warmup Iteration   2: 1397.858 ns/op
# Warmup Iteration   3: 1336.010 ns/op
# Warmup Iteration   4: 1416.612 ns/op
# Warmup Iteration   5: 1336.998 ns/op
Iteration   1: 1332.511 ns/op
Iteration   2: 1330.715 ns/op
Iteration   3: 1331.417 ns/op
Iteration   4: 1337.675 ns/op
Iteration   5: 1325.390 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1331.542 ±(99.9%) 16.905 ns/op [Average]
  (min, avg, max) = (1325.390, 1331.542, 1337.675), stdev = 4.390
  CI (99.9%): [1314.637, 1348.446] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 500)

# Run progress: 27.04% complete, ETA 00:24:53
# Fork: 1 of 1
# Warmup Iteration   1: 2027.252 ns/op
# Warmup Iteration   2: 1885.910 ns/op
# Warmup Iteration   3: 1874.487 ns/op
# Warmup Iteration   4: 1871.339 ns/op
# Warmup Iteration   5: 1877.909 ns/op
Iteration   1: 1874.124 ns/op
Iteration   2: 1867.583 ns/op
Iteration   3: 1870.636 ns/op
Iteration   4: 1881.246 ns/op
Iteration   5: 1878.772 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1874.473 ±(99.9%) 21.669 ns/op [Average]
  (min, avg, max) = (1867.583, 1874.473, 1881.246), stdev = 5.627
  CI (99.9%): [1852.804, 1896.141] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 1000)

# Run progress: 27.55% complete, ETA 00:24:42
# Fork: 1 of 1
# Warmup Iteration   1: 2820.356 ns/op
# Warmup Iteration   2: 2767.247 ns/op
# Warmup Iteration   3: 2680.755 ns/op
# Warmup Iteration   4: 2663.355 ns/op
# Warmup Iteration   5: 2665.658 ns/op
Iteration   1: 2671.645 ns/op
Iteration   2: 2747.811 ns/op
Iteration   3: 2675.937 ns/op
Iteration   4: 2694.549 ns/op
Iteration   5: 2691.517 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  2696.291 ±(99.9%) 117.142 ns/op [Average]
  (min, avg, max) = (2671.645, 2696.291, 2747.811), stdev = 30.421
  CI (99.9%): [2579.150, 2813.433] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 10000)

# Run progress: 28.06% complete, ETA 00:24:32
# Fork: 1 of 1
# Warmup Iteration   1: 14907.317 ns/op
# Warmup Iteration   2: 14090.197 ns/op
# Warmup Iteration   3: 13454.105 ns/op
# Warmup Iteration   4: 13403.969 ns/op
# Warmup Iteration   5: 13408.794 ns/op
Iteration   1: 13632.033 ns/op
Iteration   2: 13401.285 ns/op
Iteration   3: 13382.782 ns/op
Iteration   4: 13357.402 ns/op
Iteration   5: 14344.641 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  13623.628 ±(99.9%) 1608.825 ns/op [Average]
  (min, avg, max) = (13357.402, 13623.628, 14344.641), stdev = 417.807
  CI (99.9%): [12014.804, 15232.453] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 1)

# Run progress: 28.57% complete, ETA 00:24:21
# Fork: 1 of 1
# Warmup Iteration   1: 1095.047 ns/op
# Warmup Iteration   2: 1074.048 ns/op
# Warmup Iteration   3: 1073.963 ns/op
# Warmup Iteration   4: 1077.314 ns/op
# Warmup Iteration   5: 1068.570 ns/op
Iteration   1: 1061.259 ns/op
Iteration   2: 1059.415 ns/op
Iteration   3: 1062.950 ns/op
Iteration   4: 1060.335 ns/op
Iteration   5: 1054.210 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1059.634 ±(99.9%) 12.712 ns/op [Average]
  (min, avg, max) = (1054.210, 1059.634, 1062.950), stdev = 3.301
  CI (99.9%): [1046.922, 1072.346] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 10)

# Run progress: 29.08% complete, ETA 00:24:11
# Fork: 1 of 1
# Warmup Iteration   1: 1077.775 ns/op
# Warmup Iteration   2: 1073.855 ns/op
# Warmup Iteration   3: 1073.611 ns/op
# Warmup Iteration   4: 1078.244 ns/op
# Warmup Iteration   5: 1043.448 ns/op
Iteration   1: 1051.400 ns/op
Iteration   2: 1062.926 ns/op
Iteration   3: 1052.259 ns/op
Iteration   4: 1054.989 ns/op
Iteration   5: 1041.263 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1052.568 ±(99.9%) 29.976 ns/op [Average]
  (min, avg, max) = (1041.263, 1052.568, 1062.926), stdev = 7.785
  CI (99.9%): [1022.592, 1082.544] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 50)

# Run progress: 29.59% complete, ETA 00:24:00
# Fork: 1 of 1
# Warmup Iteration   1: 1174.490 ns/op
# Warmup Iteration   2: 1175.970 ns/op
# Warmup Iteration   3: 1116.011 ns/op
# Warmup Iteration   4: 1117.124 ns/op
# Warmup Iteration   5: 1114.697 ns/op
Iteration   1: 1116.452 ns/op
Iteration   2: 1118.255 ns/op
Iteration   3: 1115.200 ns/op
Iteration   4: 1116.166 ns/op
Iteration   5: 1116.218 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1116.458 ±(99.9%) 4.285 ns/op [Average]
  (min, avg, max) = (1115.200, 1116.458, 1118.255), stdev = 1.113
  CI (99.9%): [1112.173, 1120.743] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 100)

# Run progress: 30.10% complete, ETA 00:23:50
# Fork: 1 of 1
# Warmup Iteration   1: 1282.652 ns/op
# Warmup Iteration   2: 1211.447 ns/op
# Warmup Iteration   3: 1189.072 ns/op
# Warmup Iteration   4: 1190.666 ns/op
# Warmup Iteration   5: 1192.507 ns/op
Iteration   1: 1190.832 ns/op
Iteration   2: 1187.461 ns/op
Iteration   3: 1188.384 ns/op
Iteration   4: 1194.018 ns/op
Iteration   5: 1183.917 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1188.923 ±(99.9%) 14.547 ns/op [Average]
  (min, avg, max) = (1183.917, 1188.923, 1194.018), stdev = 3.778
  CI (99.9%): [1174.376, 1203.469] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 500)

# Run progress: 30.61% complete, ETA 00:23:40
# Fork: 1 of 1
# Warmup Iteration   1: 1832.941 ns/op
# Warmup Iteration   2: 1711.260 ns/op
# Warmup Iteration   3: 1749.467 ns/op
# Warmup Iteration   4: 1682.770 ns/op
# Warmup Iteration   5: 1674.856 ns/op
Iteration   1: 1675.076 ns/op
Iteration   2: 1677.758 ns/op
Iteration   3: 1674.930 ns/op
Iteration   4: 1677.349 ns/op
Iteration   5: 1671.265 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1675.275 ±(99.9%) 9.949 ns/op [Average]
  (min, avg, max) = (1671.265, 1675.275, 1677.758), stdev = 2.584
  CI (99.9%): [1665.327, 1685.224] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 31.12% complete, ETA 00:23:29
# Fork: 1 of 1
# Warmup Iteration   1: 2631.836 ns/op
# Warmup Iteration   2: 2546.125 ns/op
# Warmup Iteration   3: 2504.789 ns/op
# Warmup Iteration   4: 2495.707 ns/op
# Warmup Iteration   5: 2499.620 ns/op
Iteration   1: 2495.457 ns/op
Iteration   2: 2492.842 ns/op
Iteration   3: 2493.317 ns/op
Iteration   4: 2494.105 ns/op
Iteration   5: 2504.527 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  2496.050 ±(99.9%) 18.643 ns/op [Average]
  (min, avg, max) = (2492.842, 2496.050, 2504.527), stdev = 4.841
  CI (99.9%): [2477.407, 2514.692] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 31.63% complete, ETA 00:23:19
# Fork: 1 of 1
# Warmup Iteration   1: 15513.274 ns/op
# Warmup Iteration   2: 13404.113 ns/op
# Warmup Iteration   3: 14683.539 ns/op
# Warmup Iteration   4: 13283.826 ns/op
# Warmup Iteration   5: 13291.409 ns/op
Iteration   1: 13253.373 ns/op
Iteration   2: 13201.695 ns/op
Iteration   3: 13280.811 ns/op
Iteration   4: 13223.862 ns/op
Iteration   5: 13735.233 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  13338.995 ±(99.9%) 860.659 ns/op [Average]
  (min, avg, max) = (13201.695, 13338.995, 13735.233), stdev = 223.510
  CI (99.9%): [12478.336, 14199.654] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 1)

# Run progress: 32.14% complete, ETA 00:23:09
# Fork: 1 of 1
# Warmup Iteration   1: 1090.544 ns/op
# Warmup Iteration   2: 1075.698 ns/op
# Warmup Iteration   3: 1070.416 ns/op
# Warmup Iteration   4: 1075.284 ns/op
# Warmup Iteration   5: 1072.297 ns/op
Iteration   1: 1055.225 ns/op
Iteration   2: 1056.900 ns/op
Iteration   3: 1059.216 ns/op
Iteration   4: 1077.561 ns/op
Iteration   5: 1048.733 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1059.527 ±(99.9%) 41.617 ns/op [Average]
  (min, avg, max) = (1048.733, 1059.527, 1077.561), stdev = 10.808
  CI (99.9%): [1017.910, 1101.144] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 10)

# Run progress: 32.65% complete, ETA 00:22:58
# Fork: 1 of 1
# Warmup Iteration   1: 1085.334 ns/op
# Warmup Iteration   2: 1064.398 ns/op
# Warmup Iteration   3: 1067.845 ns/op
# Warmup Iteration   4: 1054.866 ns/op
# Warmup Iteration   5: 1039.171 ns/op
Iteration   1: 1055.310 ns/op
Iteration   2: 1048.834 ns/op
Iteration   3: 1042.364 ns/op
Iteration   4: 1091.845 ns/op
Iteration   5: 1036.413 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1054.953 ±(99.9%) 83.941 ns/op [Average]
  (min, avg, max) = (1036.413, 1054.953, 1091.845), stdev = 21.799
  CI (99.9%): [971.012, 1138.895] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 50)

# Run progress: 33.16% complete, ETA 00:22:48
# Fork: 1 of 1
# Warmup Iteration   1: 1209.747 ns/op
# Warmup Iteration   2: 1186.911 ns/op
# Warmup Iteration   3: 1123.095 ns/op
# Warmup Iteration   4: 1121.151 ns/op
# Warmup Iteration   5: 1118.736 ns/op
Iteration   1: 1120.738 ns/op
Iteration   2: 1151.477 ns/op
Iteration   3: 1121.465 ns/op
Iteration   4: 1129.597 ns/op
Iteration   5: 1118.488 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1128.353 ±(99.9%) 52.339 ns/op [Average]
  (min, avg, max) = (1118.488, 1128.353, 1151.477), stdev = 13.592
  CI (99.9%): [1076.013, 1180.692] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 100)

# Run progress: 33.67% complete, ETA 00:22:37
# Fork: 1 of 1
# Warmup Iteration   1: 1275.461 ns/op
# Warmup Iteration   2: 1219.592 ns/op
# Warmup Iteration   3: 1190.754 ns/op
# Warmup Iteration   4: 1190.346 ns/op
# Warmup Iteration   5: 1196.306 ns/op
Iteration   1: 1192.646 ns/op
Iteration   2: 1191.281 ns/op
Iteration   3: 1193.137 ns/op
Iteration   4: 1202.816 ns/op
Iteration   5: 1183.991 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1192.774 ±(99.9%) 25.857 ns/op [Average]
  (min, avg, max) = (1183.991, 1192.774, 1202.816), stdev = 6.715
  CI (99.9%): [1166.917, 1218.631] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 500)

# Run progress: 34.18% complete, ETA 00:22:26
# Fork: 1 of 1
# Warmup Iteration   1: 1871.972 ns/op
# Warmup Iteration   2: 1708.058 ns/op
# Warmup Iteration   3: 1690.414 ns/op
# Warmup Iteration   4: 1696.359 ns/op
# Warmup Iteration   5: 1681.751 ns/op
Iteration   1: 1686.807 ns/op
Iteration   2: 1749.872 ns/op
Iteration   3: 1686.101 ns/op
Iteration   4: 1687.414 ns/op
Iteration   5: 1679.639 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1697.966 ±(99.9%) 112.376 ns/op [Average]
  (min, avg, max) = (1679.639, 1697.966, 1749.872), stdev = 29.184
  CI (99.9%): [1585.590, 1810.343] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 1000)

# Run progress: 34.69% complete, ETA 00:22:16
# Fork: 1 of 1
# Warmup Iteration   1: 2633.733 ns/op
# Warmup Iteration   2: 2613.821 ns/op
# Warmup Iteration   3: 2561.922 ns/op
# Warmup Iteration   4: 2492.567 ns/op
# Warmup Iteration   5: 2512.507 ns/op
Iteration   1: 2501.844 ns/op
Iteration   2: 2488.740 ns/op
Iteration   3: 2494.323 ns/op
Iteration   4: 2505.752 ns/op
Iteration   5: 2510.501 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  2500.232 ±(99.9%) 33.652 ns/op [Average]
  (min, avg, max) = (2488.740, 2500.232, 2510.501), stdev = 8.739
  CI (99.9%): [2466.580, 2533.884] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 10000)

# Run progress: 35.20% complete, ETA 00:22:05
# Fork: 1 of 1
# Warmup Iteration   1: 15562.091 ns/op
# Warmup Iteration   2: 14288.830 ns/op
# Warmup Iteration   3: 13164.619 ns/op
# Warmup Iteration   4: 13229.637 ns/op
# Warmup Iteration   5: 13183.549 ns/op
Iteration   1: 13217.816 ns/op
Iteration   2: 13243.386 ns/op
Iteration   3: 13211.636 ns/op
Iteration   4: 13216.699 ns/op
Iteration   5: 13954.746 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  13368.857 ±(99.9%) 1262.066 ns/op [Average]
  (min, avg, max) = (13211.636, 13368.857, 13954.746), stdev = 327.755
  CI (99.9%): [12106.791, 14630.923] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 1)

# Run progress: 35.71% complete, ETA 00:21:55
# Fork: 1 of 1
# Warmup Iteration   1: 1059.157 ns/op
# Warmup Iteration   2: 1034.473 ns/op
# Warmup Iteration   3: 1036.500 ns/op
# Warmup Iteration   4: 1037.194 ns/op
# Warmup Iteration   5: 1027.687 ns/op
Iteration   1: 1013.670 ns/op
Iteration   2: 1013.777 ns/op
Iteration   3: 1015.444 ns/op
Iteration   4: 1013.455 ns/op
Iteration   5: 1004.731 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1012.215 ±(99.9%) 16.398 ns/op [Average]
  (min, avg, max) = (1004.731, 1012.215, 1015.444), stdev = 4.259
  CI (99.9%): [995.817, 1028.613] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 10)

# Run progress: 36.22% complete, ETA 00:21:45
# Fork: 1 of 1
# Warmup Iteration   1: 1031.096 ns/op
# Warmup Iteration   2: 1015.523 ns/op
# Warmup Iteration   3: 1014.175 ns/op
# Warmup Iteration   4: 996.746 ns/op
# Warmup Iteration   5: 991.754 ns/op
Iteration   1: 992.781 ns/op
Iteration   2: 991.759 ns/op
Iteration   3: 991.670 ns/op
Iteration   4: 989.559 ns/op
Iteration   5: 987.641 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  990.682 ±(99.9%) 7.950 ns/op [Average]
  (min, avg, max) = (987.641, 990.682, 992.781), stdev = 2.064
  CI (99.9%): [982.732, 998.632] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 50)

# Run progress: 36.73% complete, ETA 00:21:34
# Fork: 1 of 1
# Warmup Iteration   1: 1120.009 ns/op
# Warmup Iteration   2: 1159.754 ns/op
# Warmup Iteration   3: 1088.039 ns/op
# Warmup Iteration   4: 1062.136 ns/op
# Warmup Iteration   5: 1062.247 ns/op
Iteration   1: 1059.105 ns/op
Iteration   2: 1060.370 ns/op
Iteration   3: 1061.467 ns/op
Iteration   4: 1065.807 ns/op
Iteration   5: 1057.912 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1060.932 ±(99.9%) 11.684 ns/op [Average]
  (min, avg, max) = (1057.912, 1060.932, 1065.807), stdev = 3.034
  CI (99.9%): [1049.248, 1072.615] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 100)

# Run progress: 37.24% complete, ETA 00:21:24
# Fork: 1 of 1
# Warmup Iteration   1: 1264.671 ns/op
# Warmup Iteration   2: 1154.701 ns/op
# Warmup Iteration   3: 1129.778 ns/op
# Warmup Iteration   4: 1133.757 ns/op
# Warmup Iteration   5: 1130.390 ns/op
Iteration   1: 1133.077 ns/op
Iteration   2: 1131.062 ns/op
Iteration   3: 1129.696 ns/op
Iteration   4: 1132.975 ns/op
Iteration   5: 1129.052 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1131.172 ±(99.9%) 7.090 ns/op [Average]
  (min, avg, max) = (1129.052, 1131.172, 1133.077), stdev = 1.841
  CI (99.9%): [1124.082, 1138.263] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 500)

# Run progress: 37.76% complete, ETA 00:21:13
# Fork: 1 of 1
# Warmup Iteration   1: 1803.784 ns/op
# Warmup Iteration   2: 1699.736 ns/op
# Warmup Iteration   3: 1651.197 ns/op
# Warmup Iteration   4: 1648.640 ns/op
# Warmup Iteration   5: 1661.193 ns/op
Iteration   1: 1660.585 ns/op
Iteration   2: 1643.725 ns/op
Iteration   3: 1708.828 ns/op
Iteration   4: 1821.956 ns/op
Iteration   5: 1656.213 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1698.261 ±(99.9%) 282.791 ns/op [Average]
  (min, avg, max) = (1643.725, 1698.261, 1821.956), stdev = 73.440
  CI (99.9%): [1415.471, 1981.052] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 38.27% complete, ETA 00:21:03
# Fork: 1 of 1
# Warmup Iteration   1: 2637.529 ns/op
# Warmup Iteration   2: 2381.613 ns/op
# Warmup Iteration   3: 2581.746 ns/op
# Warmup Iteration   4: 2391.535 ns/op
# Warmup Iteration   5: 2386.527 ns/op
Iteration   1: 2402.920 ns/op
Iteration   2: 2389.599 ns/op
Iteration   3: 2343.621 ns/op
Iteration   4: 2341.542 ns/op
Iteration   5: 2350.602 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  2365.657 ±(99.9%) 109.854 ns/op [Average]
  (min, avg, max) = (2341.542, 2365.657, 2402.920), stdev = 28.529
  CI (99.9%): [2255.803, 2475.511] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 38.78% complete, ETA 00:20:53
# Fork: 1 of 1
# Warmup Iteration   1: 13938.603 ns/op
# Warmup Iteration   2: 12966.981 ns/op
# Warmup Iteration   3: 12919.457 ns/op
# Warmup Iteration   4: 12850.871 ns/op
# Warmup Iteration   5: 12894.310 ns/op
Iteration   1: 12866.077 ns/op
Iteration   2: 12935.766 ns/op
Iteration   3: 12857.386 ns/op
Iteration   4: 12887.882 ns/op
Iteration   5: 13611.374 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  13031.697 ±(99.9%) 1253.273 ns/op [Average]
  (min, avg, max) = (12857.386, 13031.697, 13611.374), stdev = 325.471
  CI (99.9%): [11778.424, 14284.970] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 1)

# Run progress: 39.29% complete, ETA 00:20:42
# Fork: 1 of 1
# Warmup Iteration   1: 1050.189 ns/op
# Warmup Iteration   2: 1024.050 ns/op
# Warmup Iteration   3: 1023.999 ns/op
# Warmup Iteration   4: 1027.996 ns/op
# Warmup Iteration   5: 1018.129 ns/op
Iteration   1: 1007.309 ns/op
Iteration   2: 1009.198 ns/op
Iteration   3: 1014.625 ns/op
Iteration   4: 1013.083 ns/op
Iteration   5: 1003.245 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1009.492 ±(99.9%) 17.554 ns/op [Average]
  (min, avg, max) = (1003.245, 1009.492, 1014.625), stdev = 4.559
  CI (99.9%): [991.938, 1027.046] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 10)

# Run progress: 39.80% complete, ETA 00:20:32
# Fork: 1 of 1
# Warmup Iteration   1: 1027.254 ns/op
# Warmup Iteration   2: 1020.521 ns/op
# Warmup Iteration   3: 1020.975 ns/op
# Warmup Iteration   4: 1005.745 ns/op
# Warmup Iteration   5: 991.986 ns/op
Iteration   1: 998.826 ns/op
Iteration   2: 988.448 ns/op
Iteration   3: 993.073 ns/op
Iteration   4: 999.778 ns/op
Iteration   5: 1029.096 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1001.844 ±(99.9%) 61.261 ns/op [Average]
  (min, avg, max) = (988.448, 1001.844, 1029.096), stdev = 15.909
  CI (99.9%): [940.583, 1063.106] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 50)

# Run progress: 40.31% complete, ETA 00:20:21
# Fork: 1 of 1
# Warmup Iteration   1: 1121.173 ns/op
# Warmup Iteration   2: 1112.197 ns/op
# Warmup Iteration   3: 1059.282 ns/op
# Warmup Iteration   4: 1062.046 ns/op
# Warmup Iteration   5: 1063.120 ns/op
Iteration   1: 1055.846 ns/op
Iteration   2: 1059.722 ns/op
Iteration   3: 1085.588 ns/op
Iteration   4: 1058.690 ns/op
Iteration   5: 1052.028 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1062.375 ±(99.9%) 51.272 ns/op [Average]
  (min, avg, max) = (1052.028, 1062.375, 1085.588), stdev = 13.315
  CI (99.9%): [1011.103, 1113.646] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 100)

# Run progress: 40.82% complete, ETA 00:20:11
# Fork: 1 of 1
# Warmup Iteration   1: 1226.422 ns/op
# Warmup Iteration   2: 1155.914 ns/op
# Warmup Iteration   3: 1130.199 ns/op
# Warmup Iteration   4: 1151.199 ns/op
# Warmup Iteration   5: 1307.976 ns/op
Iteration   1: 1129.528 ns/op
Iteration   2: 1131.561 ns/op
Iteration   3: 1129.841 ns/op
Iteration   4: 1136.795 ns/op
Iteration   5: 1126.382 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1130.821 ±(99.9%) 14.735 ns/op [Average]
  (min, avg, max) = (1126.382, 1130.821, 1136.795), stdev = 3.827
  CI (99.9%): [1116.086, 1145.557] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 500)

# Run progress: 41.33% complete, ETA 00:20:00
# Fork: 1 of 1
# Warmup Iteration   1: 1775.076 ns/op
# Warmup Iteration   2: 1673.915 ns/op
# Warmup Iteration   3: 1643.861 ns/op
# Warmup Iteration   4: 1654.317 ns/op
# Warmup Iteration   5: 1642.976 ns/op
Iteration   1: 1640.995 ns/op
Iteration   2: 1641.580 ns/op
Iteration   3: 1637.754 ns/op
Iteration   4: 1642.391 ns/op
Iteration   5: 1644.073 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1641.359 ±(99.9%) 8.949 ns/op [Average]
  (min, avg, max) = (1637.754, 1641.359, 1644.073), stdev = 2.324
  CI (99.9%): [1632.409, 1650.308] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 1000)

# Run progress: 41.84% complete, ETA 00:19:50
# Fork: 1 of 1
# Warmup Iteration   1: 2477.092 ns/op
# Warmup Iteration   2: 2397.013 ns/op
# Warmup Iteration   3: 2495.954 ns/op
# Warmup Iteration   4: 2402.172 ns/op
# Warmup Iteration   5: 2350.608 ns/op
Iteration   1: 2345.619 ns/op
Iteration   2: 2355.548 ns/op
Iteration   3: 2349.194 ns/op
Iteration   4: 2341.557 ns/op
Iteration   5: 2368.575 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  2352.098 ±(99.9%) 40.612 ns/op [Average]
  (min, avg, max) = (2341.557, 2352.098, 2368.575), stdev = 10.547
  CI (99.9%): [2311.486, 2392.710] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 10000)

# Run progress: 42.35% complete, ETA 00:19:39
# Fork: 1 of 1
# Warmup Iteration   1: 14473.013 ns/op
# Warmup Iteration   2: 13043.854 ns/op
# Warmup Iteration   3: 12820.263 ns/op
# Warmup Iteration   4: 12769.569 ns/op
# Warmup Iteration   5: 12785.473 ns/op
Iteration   1: 12857.708 ns/op
Iteration   2: 12871.929 ns/op
Iteration   3: 12850.730 ns/op
Iteration   4: 13763.907 ns/op
Iteration   5: 13371.040 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  13143.063 ±(99.9%) 1585.115 ns/op [Average]
  (min, avg, max) = (12850.730, 13143.063, 13763.907), stdev = 411.649
  CI (99.9%): [11557.948, 14728.177] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 42.86% complete, ETA 00:19:29
# Fork: 1 of 1
# Warmup Iteration   1: 1028.019 ns/op
# Warmup Iteration   2: 1005.662 ns/op
# Warmup Iteration   3: 1008.919 ns/op
# Warmup Iteration   4: 1009.474 ns/op
# Warmup Iteration   5: 992.547 ns/op
Iteration   1: 985.111 ns/op
Iteration   2: 991.040 ns/op
Iteration   3: 991.245 ns/op
Iteration   4: 1018.823 ns/op
Iteration   5: 990.649 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  995.373 ±(99.9%) 51.423 ns/op [Average]
  (min, avg, max) = (985.111, 995.373, 1018.823), stdev = 13.354
  CI (99.9%): [943.951, 1046.796] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 43.37% complete, ETA 00:19:18
# Fork: 1 of 1
# Warmup Iteration   1: 1067.672 ns/op
# Warmup Iteration   2: 1047.611 ns/op
# Warmup Iteration   3: 1093.281 ns/op
# Warmup Iteration   4: 1035.312 ns/op
# Warmup Iteration   5: 1024.459 ns/op
Iteration   1: 1032.260 ns/op
Iteration   2: 1023.807 ns/op
Iteration   3: 1021.463 ns/op
Iteration   4: 1027.641 ns/op
Iteration   5: 1025.067 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1026.048 ±(99.9%) 15.892 ns/op [Average]
  (min, avg, max) = (1021.463, 1026.048, 1032.260), stdev = 4.127
  CI (99.9%): [1010.156, 1041.939] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 43.88% complete, ETA 00:19:08
# Fork: 1 of 1
# Warmup Iteration   1: 1157.784 ns/op
# Warmup Iteration   2: 1184.349 ns/op
# Warmup Iteration   3: 1107.307 ns/op
# Warmup Iteration   4: 1103.386 ns/op
# Warmup Iteration   5: 1099.592 ns/op
Iteration   1: 1107.485 ns/op
Iteration   2: 1103.921 ns/op
Iteration   3: 1106.810 ns/op
Iteration   4: 1115.424 ns/op
Iteration   5: 1102.685 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1107.265 ±(99.9%) 19.155 ns/op [Average]
  (min, avg, max) = (1102.685, 1107.265, 1115.424), stdev = 4.974
  CI (99.9%): [1088.110, 1126.420] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 44.39% complete, ETA 00:18:57
# Fork: 1 of 1
# Warmup Iteration   1: 1264.847 ns/op
# Warmup Iteration   2: 1248.055 ns/op
# Warmup Iteration   3: 1173.523 ns/op
# Warmup Iteration   4: 1174.848 ns/op
# Warmup Iteration   5: 1177.286 ns/op
Iteration   1: 1173.538 ns/op
Iteration   2: 1177.053 ns/op
Iteration   3: 1249.630 ns/op
Iteration   4: 1173.620 ns/op
Iteration   5: 1163.581 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1187.484 ±(99.9%) 135.172 ns/op [Average]
  (min, avg, max) = (1163.581, 1187.484, 1249.630), stdev = 35.104
  CI (99.9%): [1052.312, 1322.656] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 44.90% complete, ETA 00:18:47
# Fork: 1 of 1
# Warmup Iteration   1: 1804.812 ns/op
# Warmup Iteration   2: 1769.053 ns/op
# Warmup Iteration   3: 1671.414 ns/op
# Warmup Iteration   4: 1678.183 ns/op
# Warmup Iteration   5: 1672.277 ns/op
Iteration   1: 1672.413 ns/op
Iteration   2: 1665.681 ns/op
Iteration   3: 1671.457 ns/op
Iteration   4: 1670.947 ns/op
Iteration   5: 1663.625 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1668.824 ±(99.9%) 15.066 ns/op [Average]
  (min, avg, max) = (1663.625, 1668.824, 1672.413), stdev = 3.913
  CI (99.9%): [1653.759, 1683.890] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 45.41% complete, ETA 00:18:37
# Fork: 1 of 1
# Warmup Iteration   1: 2649.380 ns/op
# Warmup Iteration   2: 2419.053 ns/op
# Warmup Iteration   3: 2369.672 ns/op
# Warmup Iteration   4: 2402.427 ns/op
# Warmup Iteration   5: 2344.928 ns/op
Iteration   1: 2345.959 ns/op
Iteration   2: 2343.955 ns/op
Iteration   3: 2352.807 ns/op
Iteration   4: 2357.205 ns/op
Iteration   5: 2343.531 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  2348.692 ±(99.9%) 23.261 ns/op [Average]
  (min, avg, max) = (2343.531, 2348.692, 2357.205), stdev = 6.041
  CI (99.9%): [2325.431, 2371.952] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 45.92% complete, ETA 00:18:26
# Fork: 1 of 1
# Warmup Iteration   1: 14483.961 ns/op
# Warmup Iteration   2: 13324.446 ns/op
# Warmup Iteration   3: 13159.498 ns/op
# Warmup Iteration   4: 13221.739 ns/op
# Warmup Iteration   5: 13190.632 ns/op
Iteration   1: 13217.788 ns/op
Iteration   2: 13172.134 ns/op
Iteration   3: 13169.792 ns/op
Iteration   4: 15186.420 ns/op
Iteration   5: 13750.117 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  13699.250 ±(99.9%) 3337.114 ns/op [Average]
  (min, avg, max) = (13169.792, 13699.250, 15186.420), stdev = 866.638
  CI (99.9%): [10362.136, 17036.364] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 1)

# Run progress: 46.43% complete, ETA 00:18:16
# Fork: 1 of 1
# Warmup Iteration   1: 1145.952 ns/op
# Warmup Iteration   2: 1099.304 ns/op
# Warmup Iteration   3: 1088.531 ns/op
# Warmup Iteration   4: 1099.370 ns/op
# Warmup Iteration   5: 1097.177 ns/op
Iteration   1: 1076.333 ns/op
Iteration   2: 1146.348 ns/op
Iteration   3: 1080.489 ns/op
Iteration   4: 1068.593 ns/op
Iteration   5: 1065.675 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1087.488 ±(99.9%) 128.735 ns/op [Average]
  (min, avg, max) = (1065.675, 1087.488, 1146.348), stdev = 33.432
  CI (99.9%): [958.753, 1216.222] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 10)

# Run progress: 46.94% complete, ETA 00:18:05
# Fork: 1 of 1
# Warmup Iteration   1: 1069.668 ns/op
# Warmup Iteration   2: 1050.320 ns/op
# Warmup Iteration   3: 1048.968 ns/op
# Warmup Iteration   4: 1039.382 ns/op
# Warmup Iteration   5: 1027.102 ns/op
Iteration   1: 1025.892 ns/op
Iteration   2: 1026.980 ns/op
Iteration   3: 1027.368 ns/op
Iteration   4: 1029.113 ns/op
Iteration   5: 1022.931 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1026.457 ±(99.9%) 8.804 ns/op [Average]
  (min, avg, max) = (1022.931, 1026.457, 1029.113), stdev = 2.286
  CI (99.9%): [1017.653, 1035.261] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 50)

# Run progress: 47.45% complete, ETA 00:17:55
# Fork: 1 of 1
# Warmup Iteration   1: 1213.896 ns/op
# Warmup Iteration   2: 1170.797 ns/op
# Warmup Iteration   3: 1104.202 ns/op
# Warmup Iteration   4: 1109.562 ns/op
# Warmup Iteration   5: 1113.147 ns/op
Iteration   1: 1109.401 ns/op
Iteration   2: 1109.994 ns/op
Iteration   3: 1108.675 ns/op
Iteration   4: 1107.915 ns/op
Iteration   5: 1104.177 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1108.032 ±(99.9%) 8.825 ns/op [Average]
  (min, avg, max) = (1104.177, 1108.032, 1109.994), stdev = 2.292
  CI (99.9%): [1099.208, 1116.857] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 100)

# Run progress: 47.96% complete, ETA 00:17:44
# Fork: 1 of 1
# Warmup Iteration   1: 1271.465 ns/op
# Warmup Iteration   2: 1205.428 ns/op
# Warmup Iteration   3: 1221.782 ns/op
# Warmup Iteration   4: 1173.264 ns/op
# Warmup Iteration   5: 1174.304 ns/op
Iteration   1: 1175.380 ns/op
Iteration   2: 1173.651 ns/op
Iteration   3: 1176.488 ns/op
Iteration   4: 1180.577 ns/op
Iteration   5: 1171.455 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1175.510 ±(99.9%) 13.135 ns/op [Average]
  (min, avg, max) = (1171.455, 1175.510, 1180.577), stdev = 3.411
  CI (99.9%): [1162.376, 1188.645] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 500)

# Run progress: 48.47% complete, ETA 00:17:34
# Fork: 1 of 1
# Warmup Iteration   1: 1874.233 ns/op
# Warmup Iteration   2: 1689.680 ns/op
# Warmup Iteration   3: 1670.598 ns/op
# Warmup Iteration   4: 1669.602 ns/op
# Warmup Iteration   5: 1664.936 ns/op
Iteration   1: 1668.218 ns/op
Iteration   2: 1665.913 ns/op
Iteration   3: 1674.686 ns/op
Iteration   4: 1666.853 ns/op
Iteration   5: 1659.360 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1667.006 ±(99.9%) 21.102 ns/op [Average]
  (min, avg, max) = (1659.360, 1667.006, 1674.686), stdev = 5.480
  CI (99.9%): [1645.904, 1688.108] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 1000)

# Run progress: 48.98% complete, ETA 00:17:23
# Fork: 1 of 1
# Warmup Iteration   1: 2527.657 ns/op
# Warmup Iteration   2: 2383.313 ns/op
# Warmup Iteration   3: 2516.388 ns/op
# Warmup Iteration   4: 2342.493 ns/op
# Warmup Iteration   5: 2345.442 ns/op
Iteration   1: 2330.123 ns/op
Iteration   2: 2398.745 ns/op
Iteration   3: 2327.332 ns/op
Iteration   4: 2324.082 ns/op
Iteration   5: 2318.453 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  2339.747 ±(99.9%) 128.093 ns/op [Average]
  (min, avg, max) = (2318.453, 2339.747, 2398.745), stdev = 33.265
  CI (99.9%): [2211.654, 2467.840] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.49% complete, ETA 00:17:13
# Fork: 1 of 1
# Warmup Iteration   1: 14536.537 ns/op
# Warmup Iteration   2: 13396.177 ns/op
# Warmup Iteration   3: 13186.254 ns/op
# Warmup Iteration   4: 13191.401 ns/op
# Warmup Iteration   5: 13357.202 ns/op
Iteration   1: 13301.550 ns/op
Iteration   2: 13265.967 ns/op
Iteration   3: 13272.914 ns/op
Iteration   4: 13371.940 ns/op
Iteration   5: 13235.811 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  13289.636 ±(99.9%) 198.718 ns/op [Average]
  (min, avg, max) = (13235.811, 13289.636, 13371.940), stdev = 51.606
  CI (99.9%): [13090.918, 13488.354] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:17:02
# Fork: 1 of 1
# Warmup Iteration   1: 530.345 ns/op
# Warmup Iteration   2: 536.664 ns/op
# Warmup Iteration   3: 507.641 ns/op
# Warmup Iteration   4: 502.882 ns/op
# Warmup Iteration   5: 502.706 ns/op
Iteration   1: 503.230 ns/op
Iteration   2: 504.550 ns/op
Iteration   3: 501.594 ns/op
Iteration   4: 502.904 ns/op
Iteration   5: 503.719 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  503.199 ±(99.9%) 4.200 ns/op [Average]
  (min, avg, max) = (501.594, 503.199, 504.550), stdev = 1.091
  CI (99.9%): [498.999, 507.400] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.51% complete, ETA 00:16:52
# Fork: 1 of 1
# Warmup Iteration   1: 595.087 ns/op
# Warmup Iteration   2: 576.059 ns/op
# Warmup Iteration   3: 534.946 ns/op
# Warmup Iteration   4: 538.967 ns/op
# Warmup Iteration   5: 536.254 ns/op
Iteration   1: 536.409 ns/op
Iteration   2: 537.336 ns/op
Iteration   3: 535.432 ns/op
Iteration   4: 555.495 ns/op
Iteration   5: 539.849 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  540.904 ±(99.9%) 32.037 ns/op [Average]
  (min, avg, max) = (535.432, 540.904, 555.495), stdev = 8.320
  CI (99.9%): [508.867, 572.942] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 51.02% complete, ETA 00:16:42
# Fork: 1 of 1
# Warmup Iteration   1: 686.630 ns/op
# Warmup Iteration   2: 634.151 ns/op
# Warmup Iteration   3: 622.599 ns/op
# Warmup Iteration   4: 621.250 ns/op
# Warmup Iteration   5: 622.037 ns/op
Iteration   1: 620.908 ns/op
Iteration   2: 622.381 ns/op
Iteration   3: 621.010 ns/op
Iteration   4: 622.313 ns/op
Iteration   5: 619.797 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  621.282 ±(99.9%) 4.169 ns/op [Average]
  (min, avg, max) = (619.797, 621.282, 622.381), stdev = 1.083
  CI (99.9%): [617.112, 625.451] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 51.53% complete, ETA 00:16:31
# Fork: 1 of 1
# Warmup Iteration   1: 755.674 ns/op
# Warmup Iteration   2: 691.592 ns/op
# Warmup Iteration   3: 685.989 ns/op
# Warmup Iteration   4: 684.468 ns/op
# Warmup Iteration   5: 685.001 ns/op
Iteration   1: 686.382 ns/op
Iteration   2: 682.374 ns/op
Iteration   3: 681.850 ns/op
Iteration   4: 681.417 ns/op
Iteration   5: 680.657 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  682.536 ±(99.9%) 8.625 ns/op [Average]
  (min, avg, max) = (680.657, 682.536, 686.382), stdev = 2.240
  CI (99.9%): [673.911, 691.162] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 52.04% complete, ETA 00:16:21
# Fork: 1 of 1
# Warmup Iteration   1: 1272.168 ns/op
# Warmup Iteration   2: 1210.377 ns/op
# Warmup Iteration   3: 1179.772 ns/op
# Warmup Iteration   4: 1179.943 ns/op
# Warmup Iteration   5: 1194.229 ns/op
Iteration   1: 1171.757 ns/op
Iteration   2: 1175.048 ns/op
Iteration   3: 1173.884 ns/op
Iteration   4: 1175.188 ns/op
Iteration   5: 1182.616 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1175.699 ±(99.9%) 15.802 ns/op [Average]
  (min, avg, max) = (1171.757, 1175.699, 1182.616), stdev = 4.104
  CI (99.9%): [1159.897, 1191.501] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 52.55% complete, ETA 00:16:10
# Fork: 1 of 1
# Warmup Iteration   1: 2002.591 ns/op
# Warmup Iteration   2: 1909.448 ns/op
# Warmup Iteration   3: 1864.339 ns/op
# Warmup Iteration   4: 1866.594 ns/op
# Warmup Iteration   5: 1864.543 ns/op
Iteration   1: 1877.750 ns/op
Iteration   2: 1867.099 ns/op
Iteration   3: 1867.371 ns/op
Iteration   4: 1864.383 ns/op
Iteration   5: 1853.503 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1866.021 ±(99.9%) 33.344 ns/op [Average]
  (min, avg, max) = (1853.503, 1866.021, 1877.750), stdev = 8.659
  CI (99.9%): [1832.678, 1899.365] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 53.06% complete, ETA 00:16:00
# Fork: 1 of 1
# Warmup Iteration   1: 14025.782 ns/op
# Warmup Iteration   2: 12931.029 ns/op
# Warmup Iteration   3: 12636.805 ns/op
# Warmup Iteration   4: 12644.748 ns/op
# Warmup Iteration   5: 12627.502 ns/op
Iteration   1: 12698.704 ns/op
Iteration   2: 12632.155 ns/op
Iteration   3: 12638.558 ns/op
Iteration   4: 12644.790 ns/op
Iteration   5: 12660.058 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  12654.853 ±(99.9%) 102.459 ns/op [Average]
  (min, avg, max) = (12632.155, 12654.853, 12698.704), stdev = 26.608
  CI (99.9%): [12552.394, 12757.312] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1)

# Run progress: 53.57% complete, ETA 00:15:49
# Fork: 1 of 1
# Warmup Iteration   1: 536.461 ns/op
# Warmup Iteration   2: 529.898 ns/op
# Warmup Iteration   3: 513.895 ns/op
# Warmup Iteration   4: 540.759 ns/op
# Warmup Iteration   5: 507.975 ns/op
Iteration   1: 507.259 ns/op
Iteration   2: 500.632 ns/op
Iteration   3: 502.788 ns/op
Iteration   4: 502.174 ns/op
Iteration   5: 502.837 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  503.138 ±(99.9%) 9.511 ns/op [Average]
  (min, avg, max) = (500.632, 503.138, 507.259), stdev = 2.470
  CI (99.9%): [493.627, 512.649] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10)

# Run progress: 54.08% complete, ETA 00:15:39
# Fork: 1 of 1
# Warmup Iteration   1: 574.221 ns/op
# Warmup Iteration   2: 586.940 ns/op
# Warmup Iteration   3: 594.778 ns/op
# Warmup Iteration   4: 537.227 ns/op
# Warmup Iteration   5: 620.731 ns/op
Iteration   1: 536.390 ns/op
Iteration   2: 534.951 ns/op
Iteration   3: 540.275 ns/op
Iteration   4: 571.760 ns/op
Iteration   5: 538.459 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  544.367 ±(99.9%) 59.478 ns/op [Average]
  (min, avg, max) = (534.951, 544.367, 571.760), stdev = 15.446
  CI (99.9%): [484.889, 603.845] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 50)

# Run progress: 54.59% complete, ETA 00:15:29
# Fork: 1 of 1
# Warmup Iteration   1: 695.894 ns/op
# Warmup Iteration   2: 629.339 ns/op
# Warmup Iteration   3: 617.782 ns/op
# Warmup Iteration   4: 614.065 ns/op
# Warmup Iteration   5: 626.800 ns/op
Iteration   1: 614.766 ns/op
Iteration   2: 641.623 ns/op
Iteration   3: 643.309 ns/op
Iteration   4: 619.678 ns/op
Iteration   5: 617.250 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  627.325 ±(99.9%) 53.690 ns/op [Average]
  (min, avg, max) = (614.766, 627.325, 643.309), stdev = 13.943
  CI (99.9%): [573.636, 681.015] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 100)

# Run progress: 55.10% complete, ETA 00:15:18
# Fork: 1 of 1
# Warmup Iteration   1: 749.857 ns/op
# Warmup Iteration   2: 688.530 ns/op
# Warmup Iteration   3: 682.221 ns/op
# Warmup Iteration   4: 677.221 ns/op
# Warmup Iteration   5: 679.971 ns/op
Iteration   1: 676.736 ns/op
Iteration   2: 676.270 ns/op
Iteration   3: 681.630 ns/op
Iteration   4: 687.341 ns/op
Iteration   5: 704.182 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  685.232 ±(99.9%) 44.284 ns/op [Average]
  (min, avg, max) = (676.270, 685.232, 704.182), stdev = 11.500
  CI (99.9%): [640.948, 729.516] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 500)

# Run progress: 55.61% complete, ETA 00:15:08
# Fork: 1 of 1
# Warmup Iteration   1: 1281.306 ns/op
# Warmup Iteration   2: 1199.522 ns/op
# Warmup Iteration   3: 1179.457 ns/op
# Warmup Iteration   4: 1171.484 ns/op
# Warmup Iteration   5: 1177.742 ns/op
Iteration   1: 1179.563 ns/op
Iteration   2: 1173.133 ns/op
Iteration   3: 1183.143 ns/op
Iteration   4: 1186.127 ns/op
Iteration   5: 1189.690 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1182.331 ±(99.9%) 24.468 ns/op [Average]
  (min, avg, max) = (1173.133, 1182.331, 1189.690), stdev = 6.354
  CI (99.9%): [1157.864, 1206.799] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1000)

# Run progress: 56.12% complete, ETA 00:14:57
# Fork: 1 of 1
# Warmup Iteration   1: 2020.982 ns/op
# Warmup Iteration   2: 1913.890 ns/op
# Warmup Iteration   3: 1858.571 ns/op
# Warmup Iteration   4: 1856.470 ns/op
# Warmup Iteration   5: 1852.464 ns/op
Iteration   1: 1853.007 ns/op
Iteration   2: 1850.665 ns/op
Iteration   3: 1851.220 ns/op
Iteration   4: 1849.152 ns/op
Iteration   5: 1852.414 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1851.292 ±(99.9%) 5.834 ns/op [Average]
  (min, avg, max) = (1849.152, 1851.292, 1853.007), stdev = 1.515
  CI (99.9%): [1845.458, 1857.125] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10000)

# Run progress: 56.63% complete, ETA 00:14:47
# Fork: 1 of 1
# Warmup Iteration   1: 14557.708 ns/op
# Warmup Iteration   2: 12946.889 ns/op
# Warmup Iteration   3: 12828.550 ns/op
# Warmup Iteration   4: 12803.659 ns/op
# Warmup Iteration   5: 12794.772 ns/op
Iteration   1: 14037.994 ns/op
Iteration   2: 12853.416 ns/op
Iteration   3: 12804.484 ns/op
Iteration   4: 12796.721 ns/op
Iteration   5: 12828.441 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  13064.211 ±(99.9%) 2097.880 ns/op [Average]
  (min, avg, max) = (12796.721, 13064.211, 14037.994), stdev = 544.813
  CI (99.9%): [10966.331, 15162.091] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 57.14% complete, ETA 00:14:36
# Fork: 1 of 1
# Warmup Iteration   1: 437.220 ns/op
# Warmup Iteration   2: 443.650 ns/op
# Warmup Iteration   3: 419.990 ns/op
# Warmup Iteration   4: 417.764 ns/op
# Warmup Iteration   5: 416.390 ns/op
Iteration   1: 414.628 ns/op
Iteration   2: 418.712 ns/op
Iteration   3: 414.023 ns/op
Iteration   4: 414.377 ns/op
Iteration   5: 433.554 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  419.059 ±(99.9%) 32.052 ns/op [Average]
  (min, avg, max) = (414.023, 419.059, 433.554), stdev = 8.324
  CI (99.9%): [387.007, 451.110] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 57.65% complete, ETA 00:14:26
# Fork: 1 of 1
# Warmup Iteration   1: 483.343 ns/op
# Warmup Iteration   2: 469.026 ns/op
# Warmup Iteration   3: 445.226 ns/op
# Warmup Iteration   4: 445.486 ns/op
# Warmup Iteration   5: 445.267 ns/op
Iteration   1: 446.940 ns/op
Iteration   2: 446.441 ns/op
Iteration   3: 448.479 ns/op
Iteration   4: 448.179 ns/op
Iteration   5: 449.263 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  447.861 ±(99.9%) 4.437 ns/op [Average]
  (min, avg, max) = (446.441, 447.861, 449.263), stdev = 1.152
  CI (99.9%): [443.424, 452.298] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 58.16% complete, ETA 00:14:15
# Fork: 1 of 1
# Warmup Iteration   1: 583.727 ns/op
# Warmup Iteration   2: 540.988 ns/op
# Warmup Iteration   3: 536.330 ns/op
# Warmup Iteration   4: 531.150 ns/op
# Warmup Iteration   5: 528.464 ns/op
Iteration   1: 538.099 ns/op
Iteration   2: 531.071 ns/op
Iteration   3: 534.520 ns/op
Iteration   4: 528.521 ns/op
Iteration   5: 528.964 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  532.235 ±(99.9%) 15.577 ns/op [Average]
  (min, avg, max) = (528.521, 532.235, 538.099), stdev = 4.045
  CI (99.9%): [516.658, 547.812] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 58.67% complete, ETA 00:14:05
# Fork: 1 of 1
# Warmup Iteration   1: 643.702 ns/op
# Warmup Iteration   2: 598.660 ns/op
# Warmup Iteration   3: 590.895 ns/op
# Warmup Iteration   4: 588.196 ns/op
# Warmup Iteration   5: 587.092 ns/op
Iteration   1: 614.685 ns/op
Iteration   2: 594.449 ns/op
Iteration   3: 586.490 ns/op
Iteration   4: 585.901 ns/op
Iteration   5: 588.941 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  594.093 ±(99.9%) 46.193 ns/op [Average]
  (min, avg, max) = (585.901, 594.093, 614.685), stdev = 11.996
  CI (99.9%): [547.900, 640.286] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 59.18% complete, ETA 00:13:55
# Fork: 1 of 1
# Warmup Iteration   1: 1162.741 ns/op
# Warmup Iteration   2: 1094.636 ns/op
# Warmup Iteration   3: 1073.927 ns/op
# Warmup Iteration   4: 1071.757 ns/op
# Warmup Iteration   5: 1070.210 ns/op
Iteration   1: 1070.284 ns/op
Iteration   2: 1070.833 ns/op
Iteration   3: 1072.062 ns/op
Iteration   4: 1071.152 ns/op
Iteration   5: 1070.117 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1070.889 ±(99.9%) 2.989 ns/op [Average]
  (min, avg, max) = (1070.117, 1070.889, 1072.062), stdev = 0.776
  CI (99.9%): [1067.901, 1073.878] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 59.69% complete, ETA 00:13:44
# Fork: 1 of 1
# Warmup Iteration   1: 2032.805 ns/op
# Warmup Iteration   2: 1890.646 ns/op
# Warmup Iteration   3: 1763.083 ns/op
# Warmup Iteration   4: 1761.141 ns/op
# Warmup Iteration   5: 1764.383 ns/op
Iteration   1: 1765.562 ns/op
Iteration   2: 1774.824 ns/op
Iteration   3: 1767.154 ns/op
Iteration   4: 1759.323 ns/op
Iteration   5: 1756.379 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1764.648 ±(99.9%) 27.727 ns/op [Average]
  (min, avg, max) = (1756.379, 1764.648, 1774.824), stdev = 7.201
  CI (99.9%): [1736.921, 1792.376] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 60.20% complete, ETA 00:13:34
# Fork: 1 of 1
# Warmup Iteration   1: 13906.276 ns/op
# Warmup Iteration   2: 12819.782 ns/op
# Warmup Iteration   3: 12618.719 ns/op
# Warmup Iteration   4: 12768.217 ns/op
# Warmup Iteration   5: 12882.665 ns/op
Iteration   1: 12595.083 ns/op
Iteration   2: 12617.197 ns/op
Iteration   3: 12606.599 ns/op
Iteration   4: 12559.460 ns/op
Iteration   5: 12892.342 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  12654.136 ±(99.9%) 519.542 ns/op [Average]
  (min, avg, max) = (12559.460, 12654.136, 12892.342), stdev = 134.923
  CI (99.9%): [12134.594, 13173.678] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 1)

# Run progress: 60.71% complete, ETA 00:13:23
# Fork: 1 of 1
# Warmup Iteration   1: 437.732 ns/op
# Warmup Iteration   2: 440.759 ns/op
# Warmup Iteration   3: 413.402 ns/op
# Warmup Iteration   4: 414.655 ns/op
# Warmup Iteration   5: 433.366 ns/op
Iteration   1: 430.733 ns/op
Iteration   2: 413.890 ns/op
Iteration   3: 414.088 ns/op
Iteration   4: 413.749 ns/op
Iteration   5: 417.696 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  418.031 ±(99.9%) 28.064 ns/op [Average]
  (min, avg, max) = (413.749, 418.031, 430.733), stdev = 7.288
  CI (99.9%): [389.967, 446.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 10)

# Run progress: 61.22% complete, ETA 00:13:13
# Fork: 1 of 1
# Warmup Iteration   1: 479.087 ns/op
# Warmup Iteration   2: 471.908 ns/op
# Warmup Iteration   3: 446.588 ns/op
# Warmup Iteration   4: 447.514 ns/op
# Warmup Iteration   5: 448.724 ns/op
Iteration   1: 448.785 ns/op
Iteration   2: 448.377 ns/op
Iteration   3: 447.494 ns/op
Iteration   4: 447.655 ns/op
Iteration   5: 448.815 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  448.225 ±(99.9%) 2.392 ns/op [Average]
  (min, avg, max) = (447.494, 448.225, 448.815), stdev = 0.621
  CI (99.9%): [445.834, 450.617] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 50)

# Run progress: 61.73% complete, ETA 00:13:02
# Fork: 1 of 1
# Warmup Iteration   1: 588.406 ns/op
# Warmup Iteration   2: 541.522 ns/op
# Warmup Iteration   3: 528.434 ns/op
# Warmup Iteration   4: 530.550 ns/op
# Warmup Iteration   5: 530.778 ns/op
Iteration   1: 528.635 ns/op
Iteration   2: 526.861 ns/op
Iteration   3: 529.381 ns/op
Iteration   4: 527.646 ns/op
Iteration   5: 530.174 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  528.539 ±(99.9%) 5.096 ns/op [Average]
  (min, avg, max) = (526.861, 528.539, 530.174), stdev = 1.323
  CI (99.9%): [523.443, 533.635] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 100)

# Run progress: 62.24% complete, ETA 00:12:52
# Fork: 1 of 1
# Warmup Iteration   1: 652.304 ns/op
# Warmup Iteration   2: 605.395 ns/op
# Warmup Iteration   3: 597.082 ns/op
# Warmup Iteration   4: 599.955 ns/op
# Warmup Iteration   5: 598.703 ns/op
Iteration   1: 598.351 ns/op
Iteration   2: 595.043 ns/op
Iteration   3: 594.461 ns/op
Iteration   4: 600.465 ns/op
Iteration   5: 598.029 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  597.270 ±(99.9%) 9.588 ns/op [Average]
  (min, avg, max) = (594.461, 597.270, 600.465), stdev = 2.490
  CI (99.9%): [587.681, 606.858] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 500)

# Run progress: 62.76% complete, ETA 00:12:41
# Fork: 1 of 1
# Warmup Iteration   1: 1170.800 ns/op
# Warmup Iteration   2: 1110.414 ns/op
# Warmup Iteration   3: 1090.940 ns/op
# Warmup Iteration   4: 1085.855 ns/op
# Warmup Iteration   5: 1083.401 ns/op
Iteration   1: 1084.972 ns/op
Iteration   2: 1088.441 ns/op
Iteration   3: 1089.126 ns/op
Iteration   4: 1086.375 ns/op
Iteration   5: 1084.955 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1086.774 ±(99.9%) 7.463 ns/op [Average]
  (min, avg, max) = (1084.955, 1086.774, 1089.126), stdev = 1.938
  CI (99.9%): [1079.311, 1094.237] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 1000)

# Run progress: 63.27% complete, ETA 00:12:31
# Fork: 1 of 1
# Warmup Iteration   1: 1904.636 ns/op
# Warmup Iteration   2: 1841.261 ns/op
# Warmup Iteration   3: 1788.652 ns/op
# Warmup Iteration   4: 1779.068 ns/op
# Warmup Iteration   5: 1777.008 ns/op
Iteration   1: 1780.526 ns/op
Iteration   2: 1780.061 ns/op
Iteration   3: 1779.090 ns/op
Iteration   4: 1765.396 ns/op
Iteration   5: 1765.234 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1774.061 ±(99.9%) 30.810 ns/op [Average]
  (min, avg, max) = (1765.234, 1774.061, 1780.526), stdev = 8.001
  CI (99.9%): [1743.252, 1804.871] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 10000)

# Run progress: 63.78% complete, ETA 00:12:20
# Fork: 1 of 1
# Warmup Iteration   1: 14048.118 ns/op
# Warmup Iteration   2: 12749.395 ns/op
# Warmup Iteration   3: 12592.603 ns/op
# Warmup Iteration   4: 12578.352 ns/op
# Warmup Iteration   5: 12587.958 ns/op
Iteration   1: 12577.745 ns/op
Iteration   2: 12580.104 ns/op
Iteration   3: 12666.893 ns/op
Iteration   4: 12646.243 ns/op
Iteration   5: 12605.004 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  12615.198 ±(99.9%) 153.717 ns/op [Average]
  (min, avg, max) = (12577.745, 12615.198, 12666.893), stdev = 39.920
  CI (99.9%): [12461.481, 12768.915] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 1)

# Run progress: 64.29% complete, ETA 00:12:10
# Fork: 1 of 1
# Warmup Iteration   1: 71.941 ns/op
# Warmup Iteration   2: 66.940 ns/op
# Warmup Iteration   3: 64.205 ns/op
# Warmup Iteration   4: 64.200 ns/op
# Warmup Iteration   5: 64.065 ns/op
Iteration   1: 63.936 ns/op
Iteration   2: 63.901 ns/op
Iteration   3: 64.064 ns/op
Iteration   4: 64.101 ns/op
Iteration   5: 65.031 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  64.207 ±(99.9%) 1.804 ns/op [Average]
  (min, avg, max) = (63.901, 64.207, 65.031), stdev = 0.469
  CI (99.9%): [62.402, 66.011] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 10)

# Run progress: 64.80% complete, ETA 00:12:00
# Fork: 1 of 1
# Warmup Iteration   1: 99.932 ns/op
# Warmup Iteration   2: 93.486 ns/op
# Warmup Iteration   3: 90.083 ns/op
# Warmup Iteration   4: 89.514 ns/op
# Warmup Iteration   5: 89.498 ns/op
Iteration   1: 89.221 ns/op
Iteration   2: 89.352 ns/op
Iteration   3: 89.335 ns/op
Iteration   4: 89.434 ns/op
Iteration   5: 89.307 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  89.330 ±(99.9%) 0.296 ns/op [Average]
  (min, avg, max) = (89.221, 89.330, 89.434), stdev = 0.077
  CI (99.9%): [89.034, 89.626] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 50)

# Run progress: 65.31% complete, ETA 00:11:49
# Fork: 1 of 1
# Warmup Iteration   1: 154.302 ns/op
# Warmup Iteration   2: 142.831 ns/op
# Warmup Iteration   3: 149.001 ns/op
# Warmup Iteration   4: 141.051 ns/op
# Warmup Iteration   5: 140.946 ns/op
Iteration   1: 141.451 ns/op
Iteration   2: 141.278 ns/op
Iteration   3: 140.699 ns/op
Iteration   4: 140.881 ns/op
Iteration   5: 138.295 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  140.521 ±(99.9%) 4.930 ns/op [Average]
  (min, avg, max) = (138.295, 140.521, 141.451), stdev = 1.280
  CI (99.9%): [135.591, 145.451] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 100)

# Run progress: 65.82% complete, ETA 00:11:39
# Fork: 1 of 1
# Warmup Iteration   1: 203.450 ns/op
# Warmup Iteration   2: 189.811 ns/op
# Warmup Iteration   3: 197.849 ns/op
# Warmup Iteration   4: 189.051 ns/op
# Warmup Iteration   5: 189.005 ns/op
Iteration   1: 189.479 ns/op
Iteration   2: 188.647 ns/op
Iteration   3: 188.774 ns/op
Iteration   4: 189.105 ns/op
Iteration   5: 193.037 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  189.808 ±(99.9%) 7.059 ns/op [Average]
  (min, avg, max) = (188.647, 189.808, 193.037), stdev = 1.833
  CI (99.9%): [182.749, 196.868] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 500)

# Run progress: 66.33% complete, ETA 00:11:28
# Fork: 1 of 1
# Warmup Iteration   1: 701.689 ns/op
# Warmup Iteration   2: 674.120 ns/op
# Warmup Iteration   3: 639.417 ns/op
# Warmup Iteration   4: 638.074 ns/op
# Warmup Iteration   5: 637.979 ns/op
Iteration   1: 639.642 ns/op
Iteration   2: 640.554 ns/op
Iteration   3: 639.619 ns/op
Iteration   4: 640.872 ns/op
Iteration   5: 663.281 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  644.794 ±(99.9%) 39.852 ns/op [Average]
  (min, avg, max) = (639.619, 644.794, 663.281), stdev = 10.349
  CI (99.9%): [604.942, 684.645] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 66.84% complete, ETA 00:11:18
# Fork: 1 of 1
# Warmup Iteration   1: 1388.744 ns/op
# Warmup Iteration   2: 1273.225 ns/op
# Warmup Iteration   3: 1258.248 ns/op
# Warmup Iteration   4: 1252.916 ns/op
# Warmup Iteration   5: 1256.114 ns/op
Iteration   1: 1251.504 ns/op
Iteration   2: 1251.391 ns/op
Iteration   3: 1257.896 ns/op
Iteration   4: 1250.713 ns/op
Iteration   5: 1258.190 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  1253.939 ±(99.9%) 14.479 ns/op [Average]
  (min, avg, max) = (1250.713, 1253.939, 1258.190), stdev = 3.760
  CI (99.9%): [1239.460, 1268.418] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 67.35% complete, ETA 00:11:08
# Fork: 1 of 1
# Warmup Iteration   1: 12843.955 ns/op
# Warmup Iteration   2: 12139.551 ns/op
# Warmup Iteration   3: 11965.383 ns/op
# Warmup Iteration   4: 11877.396 ns/op
# Warmup Iteration   5: 11867.791 ns/op
Iteration   1: 11880.101 ns/op
Iteration   2: 11853.450 ns/op
Iteration   3: 11855.743 ns/op
Iteration   4: 11863.074 ns/op
Iteration   5: 11904.015 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  11871.277 ±(99.9%) 81.139 ns/op [Average]
  (min, avg, max) = (11853.450, 11871.277, 11904.015), stdev = 21.072
  CI (99.9%): [11790.137, 11952.416] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 1)

# Run progress: 67.86% complete, ETA 00:10:57
# Fork: 1 of 1
# Warmup Iteration   1: 72.225 ns/op
# Warmup Iteration   2: 66.337 ns/op
# Warmup Iteration   3: 63.961 ns/op
# Warmup Iteration   4: 63.849 ns/op
# Warmup Iteration   5: 63.572 ns/op
Iteration   1: 63.474 ns/op
Iteration   2: 63.559 ns/op
Iteration   3: 63.839 ns/op
Iteration   4: 63.772 ns/op
Iteration   5: 64.134 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  63.756 ±(99.9%) 0.996 ns/op [Average]
  (min, avg, max) = (63.474, 63.756, 64.134), stdev = 0.259
  CI (99.9%): [62.759, 64.752] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 10)

# Run progress: 68.37% complete, ETA 00:10:47
# Fork: 1 of 1
# Warmup Iteration   1: 98.857 ns/op
# Warmup Iteration   2: 98.229 ns/op
# Warmup Iteration   3: 93.250 ns/op
# Warmup Iteration   4: 94.054 ns/op
# Warmup Iteration   5: 92.751 ns/op
Iteration   1: 90.102 ns/op
Iteration   2: 90.143 ns/op
Iteration   3: 92.427 ns/op
Iteration   4: 90.995 ns/op
Iteration   5: 90.523 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  90.838 ±(99.9%) 3.691 ns/op [Average]
  (min, avg, max) = (90.102, 90.838, 92.427), stdev = 0.958
  CI (99.9%): [87.147, 94.529] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 50)

# Run progress: 68.88% complete, ETA 00:10:36
# Fork: 1 of 1
# Warmup Iteration   1: 154.007 ns/op
# Warmup Iteration   2: 138.522 ns/op
# Warmup Iteration   3: 141.938 ns/op
# Warmup Iteration   4: 142.421 ns/op
# Warmup Iteration   5: 141.149 ns/op
Iteration   1: 141.278 ns/op
Iteration   2: 141.690 ns/op
Iteration   3: 141.328 ns/op
Iteration   4: 141.358 ns/op
Iteration   5: 139.110 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  140.953 ±(99.9%) 4.015 ns/op [Average]
  (min, avg, max) = (139.110, 140.953, 141.690), stdev = 1.043
  CI (99.9%): [136.938, 144.968] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 100)

# Run progress: 69.39% complete, ETA 00:10:26
# Fork: 1 of 1
# Warmup Iteration   1: 203.651 ns/op
# Warmup Iteration   2: 192.615 ns/op
# Warmup Iteration   3: 182.674 ns/op
# Warmup Iteration   4: 182.332 ns/op
# Warmup Iteration   5: 183.017 ns/op
Iteration   1: 183.875 ns/op
Iteration   2: 183.599 ns/op
Iteration   3: 183.222 ns/op
Iteration   4: 191.743 ns/op
Iteration   5: 183.956 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  185.279 ±(99.9%) 13.958 ns/op [Average]
  (min, avg, max) = (183.222, 185.279, 191.743), stdev = 3.625
  CI (99.9%): [171.321, 199.237] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 500)

# Run progress: 69.90% complete, ETA 00:10:15
# Fork: 1 of 1
# Warmup Iteration   1: 705.282 ns/op
# Warmup Iteration   2: 641.433 ns/op
# Warmup Iteration   3: 637.355 ns/op
# Warmup Iteration   4: 633.679 ns/op
# Warmup Iteration   5: 658.610 ns/op
Iteration   1: 634.058 ns/op
Iteration   2: 650.538 ns/op
Iteration   3: 637.761 ns/op
Iteration   4: 637.337 ns/op
Iteration   5: 638.057 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  639.550 ±(99.9%) 24.446 ns/op [Average]
  (min, avg, max) = (634.058, 639.550, 650.538), stdev = 6.349
  CI (99.9%): [615.104, 663.997] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 1000)

# Run progress: 70.41% complete, ETA 00:10:05
# Fork: 1 of 1
# Warmup Iteration   1: 1337.665 ns/op
# Warmup Iteration   2: 1252.503 ns/op
# Warmup Iteration   3: 1214.456 ns/op
# Warmup Iteration   4: 1220.114 ns/op
# Warmup Iteration   5: 1214.732 ns/op
Iteration   1: 1217.383 ns/op
Iteration   2: 1218.721 ns/op
Iteration   3: 1216.526 ns/op
Iteration   4: 1215.052 ns/op
Iteration   5: 1216.104 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  1216.757 ±(99.9%) 5.321 ns/op [Average]
  (min, avg, max) = (1215.052, 1216.757, 1218.721), stdev = 1.382
  CI (99.9%): [1211.437, 1222.078] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 10000)

# Run progress: 70.92% complete, ETA 00:09:54
# Fork: 1 of 1
# Warmup Iteration   1: 13298.723 ns/op
# Warmup Iteration   2: 12010.869 ns/op
# Warmup Iteration   3: 11812.416 ns/op
# Warmup Iteration   4: 11814.870 ns/op
# Warmup Iteration   5: 12927.612 ns/op
Iteration   1: 11826.735 ns/op
Iteration   2: 11814.029 ns/op
Iteration   3: 12259.099 ns/op
Iteration   4: 11803.826 ns/op
Iteration   5: 11782.855 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  11897.309 ±(99.9%) 781.233 ns/op [Average]
  (min, avg, max) = (11782.855, 11897.309, 12259.099), stdev = 202.884
  CI (99.9%): [11116.076, 12678.542] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 1)

# Run progress: 71.43% complete, ETA 00:09:44
# Fork: 1 of 1
# Warmup Iteration   1: 1404.089 ns/op
# Warmup Iteration   2: 1382.262 ns/op
# Warmup Iteration   3: 1360.201 ns/op
# Warmup Iteration   4: 1384.043 ns/op
# Warmup Iteration   5: 1438.570 ns/op
Iteration   1: 1376.693 ns/op
Iteration   2: 1352.553 ns/op
Iteration   3: 1353.714 ns/op
Iteration   4: 1358.382 ns/op
Iteration   5: 1353.992 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1359.067 ±(99.9%) 38.890 ns/op [Average]
  (min, avg, max) = (1352.553, 1359.067, 1376.693), stdev = 10.100
  CI (99.9%): [1320.177, 1397.956] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 10)

# Run progress: 71.94% complete, ETA 00:09:33
# Fork: 1 of 1
# Warmup Iteration   1: 1543.947 ns/op
# Warmup Iteration   2: 1446.993 ns/op
# Warmup Iteration   3: 1420.491 ns/op
# Warmup Iteration   4: 1422.746 ns/op
# Warmup Iteration   5: 1411.899 ns/op
Iteration   1: 1396.287 ns/op
Iteration   2: 1391.006 ns/op
Iteration   3: 1441.163 ns/op
Iteration   4: 1392.753 ns/op
Iteration   5: 1386.130 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1401.468 ±(99.9%) 86.601 ns/op [Average]
  (min, avg, max) = (1386.130, 1401.468, 1441.163), stdev = 22.490
  CI (99.9%): [1314.866, 1488.069] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 50)

# Run progress: 72.45% complete, ETA 00:09:23
# Fork: 1 of 1
# Warmup Iteration   1: 1502.708 ns/op
# Warmup Iteration   2: 1504.026 ns/op
# Warmup Iteration   3: 1426.447 ns/op
# Warmup Iteration   4: 1426.030 ns/op
# Warmup Iteration   5: 1473.444 ns/op
Iteration   1: 1434.328 ns/op
Iteration   2: 1426.577 ns/op
Iteration   3: 1426.905 ns/op
Iteration   4: 1424.061 ns/op
Iteration   5: 1428.907 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1428.156 ±(99.9%) 14.849 ns/op [Average]
  (min, avg, max) = (1424.061, 1428.156, 1434.328), stdev = 3.856
  CI (99.9%): [1413.307, 1443.004] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 100)

# Run progress: 72.96% complete, ETA 00:09:13
# Fork: 1 of 1
# Warmup Iteration   1: 1740.717 ns/op
# Warmup Iteration   2: 1659.689 ns/op
# Warmup Iteration   3: 1582.150 ns/op
# Warmup Iteration   4: 1575.528 ns/op
# Warmup Iteration   5: 1588.758 ns/op
Iteration   1: 1594.590 ns/op
Iteration   2: 1579.564 ns/op
Iteration   3: 1581.341 ns/op
Iteration   4: 1585.194 ns/op
Iteration   5: 1575.075 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1583.153 ±(99.9%) 28.322 ns/op [Average]
  (min, avg, max) = (1575.075, 1583.153, 1594.590), stdev = 7.355
  CI (99.9%): [1554.831, 1611.475] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 500)

# Run progress: 73.47% complete, ETA 00:09:02
# Fork: 1 of 1
# Warmup Iteration   1: 2232.309 ns/op
# Warmup Iteration   2: 2130.389 ns/op
# Warmup Iteration   3: 2101.683 ns/op
# Warmup Iteration   4: 2114.413 ns/op
# Warmup Iteration   5: 2110.694 ns/op
Iteration   1: 2104.328 ns/op
Iteration   2: 2106.940 ns/op
Iteration   3: 2109.975 ns/op
Iteration   4: 2117.313 ns/op
Iteration   5: 2130.844 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2113.880 ±(99.9%) 41.033 ns/op [Average]
  (min, avg, max) = (2104.328, 2113.880, 2130.844), stdev = 10.656
  CI (99.9%): [2072.847, 2154.912] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 73.98% complete, ETA 00:08:52
# Fork: 1 of 1
# Warmup Iteration   1: 2776.367 ns/op
# Warmup Iteration   2: 2671.608 ns/op
# Warmup Iteration   3: 2630.699 ns/op
# Warmup Iteration   4: 2627.758 ns/op
# Warmup Iteration   5: 2619.056 ns/op
Iteration   1: 2618.143 ns/op
Iteration   2: 2636.791 ns/op
Iteration   3: 2626.323 ns/op
Iteration   4: 2633.501 ns/op
Iteration   5: 2615.901 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2626.132 ±(99.9%) 35.315 ns/op [Average]
  (min, avg, max) = (2615.901, 2626.132, 2636.791), stdev = 9.171
  CI (99.9%): [2590.816, 2661.447] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 74.49% complete, ETA 00:08:41
# Fork: 1 of 1
# Warmup Iteration   1: 14515.162 ns/op
# Warmup Iteration   2: 13392.270 ns/op
# Warmup Iteration   3: 13759.197 ns/op
# Warmup Iteration   4: 13298.962 ns/op
# Warmup Iteration   5: 13210.885 ns/op
Iteration   1: 13206.095 ns/op
Iteration   2: 13203.806 ns/op
Iteration   3: 13229.614 ns/op
Iteration   4: 13424.212 ns/op
Iteration   5: 13186.070 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  13249.959 ±(99.9%) 379.802 ns/op [Average]
  (min, avg, max) = (13186.070, 13249.959, 13424.212), stdev = 98.633
  CI (99.9%): [12870.158, 13629.761] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 1)

# Run progress: 75.00% complete, ETA 00:08:31
# Fork: 1 of 1
# Warmup Iteration   1: 1410.882 ns/op
# Warmup Iteration   2: 1393.782 ns/op
# Warmup Iteration   3: 1365.261 ns/op
# Warmup Iteration   4: 1386.496 ns/op
# Warmup Iteration   5: 1384.981 ns/op
Iteration   1: 1387.549 ns/op
Iteration   2: 1369.629 ns/op
Iteration   3: 1359.668 ns/op
Iteration   4: 1357.841 ns/op
Iteration   5: 1357.492 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1366.436 ±(99.9%) 49.298 ns/op [Average]
  (min, avg, max) = (1357.492, 1366.436, 1387.549), stdev = 12.803
  CI (99.9%): [1317.138, 1415.734] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 10)

# Run progress: 75.51% complete, ETA 00:08:20
# Fork: 1 of 1
# Warmup Iteration   1: 1432.169 ns/op
# Warmup Iteration   2: 1443.015 ns/op
# Warmup Iteration   3: 1404.435 ns/op
# Warmup Iteration   4: 1409.986 ns/op
# Warmup Iteration   5: 1479.808 ns/op
Iteration   1: 1376.291 ns/op
Iteration   2: 1393.037 ns/op
Iteration   3: 1389.632 ns/op
Iteration   4: 1377.727 ns/op
Iteration   5: 1379.942 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1383.326 ±(99.9%) 28.968 ns/op [Average]
  (min, avg, max) = (1376.291, 1383.326, 1393.037), stdev = 7.523
  CI (99.9%): [1354.358, 1412.293] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 50)

# Run progress: 76.02% complete, ETA 00:08:10
# Fork: 1 of 1
# Warmup Iteration   1: 1495.927 ns/op
# Warmup Iteration   2: 1512.737 ns/op
# Warmup Iteration   3: 1417.542 ns/op
# Warmup Iteration   4: 1423.464 ns/op
# Warmup Iteration   5: 1424.487 ns/op
Iteration   1: 1425.592 ns/op
Iteration   2: 1424.832 ns/op
Iteration   3: 1426.016 ns/op
Iteration   4: 1423.120 ns/op
Iteration   5: 1426.573 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1425.227 ±(99.9%) 5.153 ns/op [Average]
  (min, avg, max) = (1423.120, 1425.227, 1426.573), stdev = 1.338
  CI (99.9%): [1420.073, 1430.380] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 100)

# Run progress: 76.53% complete, ETA 00:08:00
# Fork: 1 of 1
# Warmup Iteration   1: 1717.533 ns/op
# Warmup Iteration   2: 1609.112 ns/op
# Warmup Iteration   3: 1564.120 ns/op
# Warmup Iteration   4: 1564.074 ns/op
# Warmup Iteration   5: 1562.289 ns/op
Iteration   1: 1566.706 ns/op
Iteration   2: 1620.497 ns/op
Iteration   3: 1560.244 ns/op
Iteration   4: 1557.998 ns/op
Iteration   5: 1548.904 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1570.870 ±(99.9%) 109.613 ns/op [Average]
  (min, avg, max) = (1548.904, 1570.870, 1620.497), stdev = 28.466
  CI (99.9%): [1461.256, 1680.483] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 500)

# Run progress: 77.04% complete, ETA 00:07:49
# Fork: 1 of 1
# Warmup Iteration   1: 2193.401 ns/op
# Warmup Iteration   2: 2080.433 ns/op
# Warmup Iteration   3: 2064.424 ns/op
# Warmup Iteration   4: 2062.112 ns/op
# Warmup Iteration   5: 2046.411 ns/op
Iteration   1: 2043.895 ns/op
Iteration   2: 2050.194 ns/op
Iteration   3: 2042.957 ns/op
Iteration   4: 2081.595 ns/op
Iteration   5: 2056.234 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2054.975 ±(99.9%) 60.892 ns/op [Average]
  (min, avg, max) = (2042.957, 2054.975, 2081.595), stdev = 15.813
  CI (99.9%): [1994.083, 2115.867] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 1000)

# Run progress: 77.55% complete, ETA 00:07:39
# Fork: 1 of 1
# Warmup Iteration   1: 2758.308 ns/op
# Warmup Iteration   2: 2672.098 ns/op
# Warmup Iteration   3: 2631.087 ns/op
# Warmup Iteration   4: 2626.284 ns/op
# Warmup Iteration   5: 2622.710 ns/op
Iteration   1: 2619.557 ns/op
Iteration   2: 2621.871 ns/op
Iteration   3: 2630.479 ns/op
Iteration   4: 2634.307 ns/op
Iteration   5: 2622.428 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2625.729 ±(99.9%) 24.356 ns/op [Average]
  (min, avg, max) = (2619.557, 2625.729, 2634.307), stdev = 6.325
  CI (99.9%): [2601.373, 2650.084] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 10000)

# Run progress: 78.06% complete, ETA 00:07:28
# Fork: 1 of 1
# Warmup Iteration   1: 15514.511 ns/op
# Warmup Iteration   2: 13333.611 ns/op
# Warmup Iteration   3: 13240.625 ns/op
# Warmup Iteration   4: 13212.714 ns/op
# Warmup Iteration   5: 13277.797 ns/op
Iteration   1: 13306.961 ns/op
Iteration   2: 13854.864 ns/op
Iteration   3: 14529.453 ns/op
Iteration   4: 13315.467 ns/op
Iteration   5: 13328.195 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  13666.988 ±(99.9%) 2062.082 ns/op [Average]
  (min, avg, max) = (13306.961, 13666.988, 14529.453), stdev = 535.516
  CI (99.9%): [11604.905, 15729.070] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 78.57% complete, ETA 00:07:18
# Fork: 1 of 1
# Warmup Iteration   1: 424.564 ns/op
# Warmup Iteration   2: 419.511 ns/op
# Warmup Iteration   3: 395.635 ns/op
# Warmup Iteration   4: 395.790 ns/op
# Warmup Iteration   5: 396.205 ns/op
Iteration   1: 395.634 ns/op
Iteration   2: 394.462 ns/op
Iteration   3: 392.823 ns/op
Iteration   4: 394.354 ns/op
Iteration   5: 413.293 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  398.113 ±(99.9%) 32.902 ns/op [Average]
  (min, avg, max) = (392.823, 398.113, 413.293), stdev = 8.545
  CI (99.9%): [365.211, 431.015] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 79.08% complete, ETA 00:07:07
# Fork: 1 of 1
# Warmup Iteration   1: 454.423 ns/op
# Warmup Iteration   2: 433.529 ns/op
# Warmup Iteration   3: 437.975 ns/op
# Warmup Iteration   4: 419.293 ns/op
# Warmup Iteration   5: 417.370 ns/op
Iteration   1: 417.900 ns/op
Iteration   2: 414.380 ns/op
Iteration   3: 423.199 ns/op
Iteration   4: 435.162 ns/op
Iteration   5: 417.388 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  421.606 ±(99.9%) 31.638 ns/op [Average]
  (min, avg, max) = (414.380, 421.606, 435.162), stdev = 8.216
  CI (99.9%): [389.967, 453.244] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 79.59% complete, ETA 00:06:57
# Fork: 1 of 1
# Warmup Iteration   1: 513.799 ns/op
# Warmup Iteration   2: 470.553 ns/op
# Warmup Iteration   3: 458.143 ns/op
# Warmup Iteration   4: 460.575 ns/op
# Warmup Iteration   5: 457.890 ns/op
Iteration   1: 460.043 ns/op
Iteration   2: 462.360 ns/op
Iteration   3: 461.374 ns/op
Iteration   4: 462.615 ns/op
Iteration   5: 459.739 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  461.226 ±(99.9%) 5.038 ns/op [Average]
  (min, avg, max) = (459.739, 461.226, 462.615), stdev = 1.308
  CI (99.9%): [456.188, 466.265] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 80.10% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: 570.234 ns/op
# Warmup Iteration   2: 525.700 ns/op
# Warmup Iteration   3: 520.599 ns/op
# Warmup Iteration   4: 522.265 ns/op
# Warmup Iteration   5: 515.886 ns/op
Iteration   1: 548.124 ns/op
Iteration   2: 514.959 ns/op
Iteration   3: 515.197 ns/op
Iteration   4: 515.217 ns/op
Iteration   5: 537.362 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  526.172 ±(99.9%) 60.066 ns/op [Average]
  (min, avg, max) = (514.959, 526.172, 548.124), stdev = 15.599
  CI (99.9%): [466.106, 586.238] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 80.61% complete, ETA 00:06:36
# Fork: 1 of 1
# Warmup Iteration   1: 1057.979 ns/op
# Warmup Iteration   2: 1007.097 ns/op
# Warmup Iteration   3: 948.066 ns/op
# Warmup Iteration   4: 946.015 ns/op
# Warmup Iteration   5: 945.937 ns/op
Iteration   1: 946.884 ns/op
Iteration   2: 949.224 ns/op
Iteration   3: 949.904 ns/op
Iteration   4: 952.085 ns/op
Iteration   5: 947.401 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  949.099 ±(99.9%) 8.025 ns/op [Average]
  (min, avg, max) = (946.884, 949.099, 952.085), stdev = 2.084
  CI (99.9%): [941.075, 957.124] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 81.12% complete, ETA 00:06:26
# Fork: 1 of 1
# Warmup Iteration   1: 1657.849 ns/op
# Warmup Iteration   2: 1474.085 ns/op
# Warmup Iteration   3: 1455.215 ns/op
# Warmup Iteration   4: 1459.270 ns/op
# Warmup Iteration   5: 1451.128 ns/op
Iteration   1: 1451.526 ns/op
Iteration   2: 1449.610 ns/op
Iteration   3: 1451.823 ns/op
Iteration   4: 1456.911 ns/op
Iteration   5: 1518.623 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  1465.699 ±(99.9%) 114.398 ns/op [Average]
  (min, avg, max) = (1449.610, 1465.699, 1518.623), stdev = 29.709
  CI (99.9%): [1351.300, 1580.097] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 81.63% complete, ETA 00:06:15
# Fork: 1 of 1
# Warmup Iteration   1: 12371.452 ns/op
# Warmup Iteration   2: 11502.543 ns/op
# Warmup Iteration   3: 11919.602 ns/op
# Warmup Iteration   4: 11432.572 ns/op
# Warmup Iteration   5: 11447.012 ns/op
Iteration   1: 11901.342 ns/op
Iteration   2: 11406.759 ns/op
Iteration   3: 12422.284 ns/op
Iteration   4: 11359.268 ns/op
Iteration   5: 11398.000 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  11697.531 ±(99.9%) 1780.788 ns/op [Average]
  (min, avg, max) = (11359.268, 11697.531, 12422.284), stdev = 462.465
  CI (99.9%): [9916.743, 13478.318] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 1)

# Run progress: 82.14% complete, ETA 00:06:05
# Fork: 1 of 1
# Warmup Iteration   1: 424.153 ns/op
# Warmup Iteration   2: 421.952 ns/op
# Warmup Iteration   3: 396.953 ns/op
# Warmup Iteration   4: 397.726 ns/op
# Warmup Iteration   5: 399.732 ns/op
Iteration   1: 395.213 ns/op
Iteration   2: 403.087 ns/op
Iteration   3: 394.229 ns/op
Iteration   4: 398.614 ns/op
Iteration   5: 394.027 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  397.034 ±(99.9%) 14.834 ns/op [Average]
  (min, avg, max) = (394.027, 397.034, 403.087), stdev = 3.852
  CI (99.9%): [382.200, 411.868] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 10)

# Run progress: 82.65% complete, ETA 00:05:54
# Fork: 1 of 1
# Warmup Iteration   1: 451.139 ns/op
# Warmup Iteration   2: 436.773 ns/op
# Warmup Iteration   3: 466.292 ns/op
# Warmup Iteration   4: 415.781 ns/op
# Warmup Iteration   5: 415.512 ns/op
Iteration   1: 414.839 ns/op
Iteration   2: 416.515 ns/op
Iteration   3: 419.587 ns/op
Iteration   4: 417.308 ns/op
Iteration   5: 415.701 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  416.790 ±(99.9%) 6.985 ns/op [Average]
  (min, avg, max) = (414.839, 416.790, 419.587), stdev = 1.814
  CI (99.9%): [409.805, 423.775] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 50)

# Run progress: 83.16% complete, ETA 00:05:44
# Fork: 1 of 1
# Warmup Iteration   1: 517.001 ns/op
# Warmup Iteration   2: 508.855 ns/op
# Warmup Iteration   3: 458.890 ns/op
# Warmup Iteration   4: 457.880 ns/op
# Warmup Iteration   5: 458.315 ns/op
Iteration   1: 459.961 ns/op
Iteration   2: 456.452 ns/op
Iteration   3: 457.657 ns/op
Iteration   4: 456.853 ns/op
Iteration   5: 454.659 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  457.117 ±(99.9%) 7.441 ns/op [Average]
  (min, avg, max) = (454.659, 457.117, 459.961), stdev = 1.932
  CI (99.9%): [449.676, 464.557] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 100)

# Run progress: 83.67% complete, ETA 00:05:33
# Fork: 1 of 1
# Warmup Iteration   1: 570.222 ns/op
# Warmup Iteration   2: 524.225 ns/op
# Warmup Iteration   3: 547.594 ns/op
# Warmup Iteration   4: 513.318 ns/op
# Warmup Iteration   5: 513.680 ns/op
Iteration   1: 515.117 ns/op
Iteration   2: 514.167 ns/op
Iteration   3: 514.459 ns/op
Iteration   4: 514.401 ns/op
Iteration   5: 515.797 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  514.788 ±(99.9%) 2.560 ns/op [Average]
  (min, avg, max) = (514.167, 514.788, 515.797), stdev = 0.665
  CI (99.9%): [512.228, 517.349] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 500)

# Run progress: 84.18% complete, ETA 00:05:23
# Fork: 1 of 1
# Warmup Iteration   1: 1037.655 ns/op
# Warmup Iteration   2: 965.281 ns/op
# Warmup Iteration   3: 949.117 ns/op
# Warmup Iteration   4: 946.885 ns/op
# Warmup Iteration   5: 951.102 ns/op
Iteration   1: 950.891 ns/op
Iteration   2: 953.932 ns/op
Iteration   3: 953.875 ns/op
Iteration   4: 953.606 ns/op
Iteration   5: 953.200 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  953.100 ±(99.9%) 4.886 ns/op [Average]
  (min, avg, max) = (950.891, 953.100, 953.932), stdev = 1.269
  CI (99.9%): [948.215, 957.986] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 1000)

# Run progress: 84.69% complete, ETA 00:05:13
# Fork: 1 of 1
# Warmup Iteration   1: 1587.616 ns/op
# Warmup Iteration   2: 1539.824 ns/op
# Warmup Iteration   3: 1461.658 ns/op
# Warmup Iteration   4: 1459.689 ns/op
# Warmup Iteration   5: 1465.033 ns/op
Iteration   1: 1455.429 ns/op
Iteration   2: 1457.527 ns/op
Iteration   3: 1458.173 ns/op
Iteration   4: 1461.736 ns/op
Iteration   5: 1462.585 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  1459.090 ±(99.9%) 11.537 ns/op [Average]
  (min, avg, max) = (1455.429, 1459.090, 1462.585), stdev = 2.996
  CI (99.9%): [1447.553, 1470.626] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 10000)

# Run progress: 85.20% complete, ETA 00:05:02
# Fork: 1 of 1
# Warmup Iteration   1: 13225.744 ns/op
# Warmup Iteration   2: 12204.067 ns/op
# Warmup Iteration   3: 12197.451 ns/op
# Warmup Iteration   4: 11419.413 ns/op
# Warmup Iteration   5: 11747.698 ns/op
Iteration   1: 11376.713 ns/op
Iteration   2: 11372.544 ns/op
Iteration   3: 11367.324 ns/op
Iteration   4: 11380.582 ns/op
Iteration   5: 11854.798 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  11470.392 ±(99.9%) 827.680 ns/op [Average]
  (min, avg, max) = (11367.324, 11470.392, 11854.798), stdev = 214.946
  CI (99.9%): [10642.712, 12298.073] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 85.71% complete, ETA 00:04:52
# Fork: 1 of 1
# Warmup Iteration   1: 512.081 ns/op
# Warmup Iteration   2: 511.489 ns/op
# Warmup Iteration   3: 482.744 ns/op
# Warmup Iteration   4: 479.333 ns/op
# Warmup Iteration   5: 478.134 ns/op
Iteration   1: 479.746 ns/op
Iteration   2: 479.293 ns/op
Iteration   3: 477.853 ns/op
Iteration   4: 480.170 ns/op
Iteration   5: 480.236 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  479.459 ±(99.9%) 3.753 ns/op [Average]
  (min, avg, max) = (477.853, 479.459, 480.236), stdev = 0.975
  CI (99.9%): [475.706, 483.213] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 86.22% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 544.366 ns/op
# Warmup Iteration   2: 538.058 ns/op
# Warmup Iteration   3: 507.260 ns/op
# Warmup Iteration   4: 506.412 ns/op
# Warmup Iteration   5: 510.640 ns/op
Iteration   1: 505.237 ns/op
Iteration   2: 504.942 ns/op
Iteration   3: 504.320 ns/op
Iteration   4: 504.238 ns/op
Iteration   5: 506.460 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  505.040 ±(99.9%) 3.459 ns/op [Average]
  (min, avg, max) = (504.238, 505.040, 506.460), stdev = 0.898
  CI (99.9%): [501.581, 508.498] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 86.73% complete, ETA 00:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 609.303 ns/op
# Warmup Iteration   2: 553.089 ns/op
# Warmup Iteration   3: 543.537 ns/op
# Warmup Iteration   4: 543.182 ns/op
# Warmup Iteration   5: 544.031 ns/op
Iteration   1: 543.141 ns/op
Iteration   2: 545.916 ns/op
Iteration   3: 542.460 ns/op
Iteration   4: 543.765 ns/op
Iteration   5: 539.345 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  542.925 ±(99.9%) 9.180 ns/op [Average]
  (min, avg, max) = (539.345, 542.925, 545.916), stdev = 2.384
  CI (99.9%): [533.746, 552.105] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 87.24% complete, ETA 00:04:20
# Fork: 1 of 1
# Warmup Iteration   1: 675.183 ns/op
# Warmup Iteration   2: 616.429 ns/op
# Warmup Iteration   3: 609.745 ns/op
# Warmup Iteration   4: 606.648 ns/op
# Warmup Iteration   5: 607.343 ns/op
Iteration   1: 605.312 ns/op
Iteration   2: 604.437 ns/op
Iteration   3: 605.081 ns/op
Iteration   4: 604.456 ns/op
Iteration   5: 603.063 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  604.470 ±(99.9%) 3.370 ns/op [Average]
  (min, avg, max) = (603.063, 604.470, 605.312), stdev = 0.875
  CI (99.9%): [601.099, 607.840] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 87.76% complete, ETA 00:04:10
# Fork: 1 of 1
# Warmup Iteration   1: 1122.773 ns/op
# Warmup Iteration   2: 1052.817 ns/op
# Warmup Iteration   3: 1035.134 ns/op
# Warmup Iteration   4: 1031.174 ns/op
# Warmup Iteration   5: 1032.065 ns/op
Iteration   1: 1031.000 ns/op
Iteration   2: 1029.141 ns/op
Iteration   3: 1048.368 ns/op
Iteration   4: 1047.171 ns/op
Iteration   5: 1039.090 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1038.954 ±(99.9%) 34.210 ns/op [Average]
  (min, avg, max) = (1029.141, 1038.954, 1048.368), stdev = 8.884
  CI (99.9%): [1004.744, 1073.164] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 88.27% complete, ETA 00:04:00
# Fork: 1 of 1
# Warmup Iteration   1: 1813.913 ns/op
# Warmup Iteration   2: 1737.239 ns/op
# Warmup Iteration   3: 1682.590 ns/op
# Warmup Iteration   4: 1764.914 ns/op
# Warmup Iteration   5: 1673.579 ns/op
Iteration   1: 1645.728 ns/op
Iteration   2: 1641.300 ns/op
Iteration   3: 1691.653 ns/op
Iteration   4: 1638.734 ns/op
Iteration   5: 1652.378 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1653.958 ±(99.9%) 83.549 ns/op [Average]
  (min, avg, max) = (1638.734, 1653.958, 1691.653), stdev = 21.698
  CI (99.9%): [1570.409, 1737.508] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 88.78% complete, ETA 00:03:49
# Fork: 1 of 1
# Warmup Iteration   1: 12802.864 ns/op
# Warmup Iteration   2: 11707.175 ns/op
# Warmup Iteration   3: 11684.963 ns/op
# Warmup Iteration   4: 11779.148 ns/op
# Warmup Iteration   5: 11537.882 ns/op
Iteration   1: 11513.595 ns/op
Iteration   2: 11546.111 ns/op
Iteration   3: 11516.180 ns/op
Iteration   4: 11521.932 ns/op
Iteration   5: 11527.749 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  11525.113 ±(99.9%) 49.852 ns/op [Average]
  (min, avg, max) = (11513.595, 11525.113, 11546.111), stdev = 12.946
  CI (99.9%): [11475.262, 11574.965] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1)

# Run progress: 89.29% complete, ETA 00:03:39
# Fork: 1 of 1
# Warmup Iteration   1: 524.390 ns/op
# Warmup Iteration   2: 532.736 ns/op
# Warmup Iteration   3: 485.883 ns/op
# Warmup Iteration   4: 479.970 ns/op
# Warmup Iteration   5: 478.963 ns/op
Iteration   1: 481.898 ns/op
Iteration   2: 481.037 ns/op
Iteration   3: 479.456 ns/op
Iteration   4: 480.410 ns/op
Iteration   5: 480.172 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  480.595 ±(99.9%) 3.552 ns/op [Average]
  (min, avg, max) = (479.456, 480.595, 481.898), stdev = 0.922
  CI (99.9%): [477.043, 484.147] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10)

# Run progress: 89.80% complete, ETA 00:03:28
# Fork: 1 of 1
# Warmup Iteration   1: 542.421 ns/op
# Warmup Iteration   2: 535.900 ns/op
# Warmup Iteration   3: 504.093 ns/op
# Warmup Iteration   4: 505.175 ns/op
# Warmup Iteration   5: 500.124 ns/op
Iteration   1: 501.847 ns/op
Iteration   2: 509.275 ns/op
Iteration   3: 502.197 ns/op
Iteration   4: 510.235 ns/op
Iteration   5: 498.793 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  504.470 ±(99.9%) 19.311 ns/op [Average]
  (min, avg, max) = (498.793, 504.470, 510.235), stdev = 5.015
  CI (99.9%): [485.159, 523.781] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 50)

# Run progress: 90.31% complete, ETA 00:03:18
# Fork: 1 of 1
# Warmup Iteration   1: 613.481 ns/op
# Warmup Iteration   2: 555.451 ns/op
# Warmup Iteration   3: 550.248 ns/op
# Warmup Iteration   4: 548.114 ns/op
# Warmup Iteration   5: 549.603 ns/op
Iteration   1: 551.095 ns/op
Iteration   2: 549.011 ns/op
Iteration   3: 547.906 ns/op
Iteration   4: 576.265 ns/op
Iteration   5: 548.827 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  554.621 ±(99.9%) 46.806 ns/op [Average]
  (min, avg, max) = (547.906, 554.621, 576.265), stdev = 12.155
  CI (99.9%): [507.815, 601.427] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 100)

# Run progress: 90.82% complete, ETA 00:03:07
# Fork: 1 of 1
# Warmup Iteration   1: 674.463 ns/op
# Warmup Iteration   2: 618.868 ns/op
# Warmup Iteration   3: 607.100 ns/op
# Warmup Iteration   4: 604.275 ns/op
# Warmup Iteration   5: 603.713 ns/op
Iteration   1: 603.024 ns/op
Iteration   2: 601.872 ns/op
Iteration   3: 602.655 ns/op
Iteration   4: 603.211 ns/op
Iteration   5: 601.894 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  602.531 ±(99.9%) 2.405 ns/op [Average]
  (min, avg, max) = (601.872, 602.531, 603.211), stdev = 0.625
  CI (99.9%): [600.126, 604.936] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 500)

# Run progress: 91.33% complete, ETA 00:02:57
# Fork: 1 of 1
# Warmup Iteration   1: 1135.783 ns/op
# Warmup Iteration   2: 1115.158 ns/op
# Warmup Iteration   3: 1037.632 ns/op
# Warmup Iteration   4: 1029.860 ns/op
# Warmup Iteration   5: 1027.981 ns/op
Iteration   1: 1029.235 ns/op
Iteration   2: 1029.263 ns/op
Iteration   3: 1027.919 ns/op
Iteration   4: 1090.095 ns/op
Iteration   5: 1026.417 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1040.586 ±(99.9%) 106.667 ns/op [Average]
  (min, avg, max) = (1026.417, 1040.586, 1090.095), stdev = 27.701
  CI (99.9%): [933.919, 1147.253] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1000)

# Run progress: 91.84% complete, ETA 00:02:46
# Fork: 1 of 1
# Warmup Iteration   1: 1786.531 ns/op
# Warmup Iteration   2: 1732.787 ns/op
# Warmup Iteration   3: 1674.835 ns/op
# Warmup Iteration   4: 1689.471 ns/op
# Warmup Iteration   5: 1680.346 ns/op
Iteration   1: 1685.792 ns/op
Iteration   2: 1681.670 ns/op
Iteration   3: 1690.634 ns/op
Iteration   4: 1684.725 ns/op
Iteration   5: 1674.294 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1683.423 ±(99.9%) 23.241 ns/op [Average]
  (min, avg, max) = (1674.294, 1683.423, 1690.634), stdev = 6.036
  CI (99.9%): [1660.182, 1706.664] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10000)

# Run progress: 92.35% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 12937.665 ns/op
# Warmup Iteration   2: 11793.163 ns/op
# Warmup Iteration   3: 11625.454 ns/op
# Warmup Iteration   4: 11618.369 ns/op
# Warmup Iteration   5: 11691.155 ns/op
Iteration   1: 11589.021 ns/op
Iteration   2: 11573.098 ns/op
Iteration   3: 11798.531 ns/op
Iteration   4: 11589.522 ns/op
Iteration   5: 11583.512 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  11626.737 ±(99.9%) 370.674 ns/op [Average]
  (min, avg, max) = (11573.098, 11626.737, 11798.531), stdev = 96.263
  CI (99.9%): [11256.062, 11997.411] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 1)

# Run progress: 92.86% complete, ETA 00:02:26
# Fork: 1 of 1
# Warmup Iteration   1: 61.306 ns/op
# Warmup Iteration   2: 58.123 ns/op
# Warmup Iteration   3: 58.377 ns/op
# Warmup Iteration   4: 56.461 ns/op
# Warmup Iteration   5: 55.011 ns/op
Iteration   1: 54.876 ns/op
Iteration   2: 55.024 ns/op
Iteration   3: 55.150 ns/op
Iteration   4: 54.938 ns/op
Iteration   5: 55.527 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  55.103 ±(99.9%) 0.996 ns/op [Average]
  (min, avg, max) = (54.876, 55.103, 55.527), stdev = 0.259
  CI (99.9%): [54.107, 56.098] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 10)

# Run progress: 93.37% complete, ETA 00:02:15
# Fork: 1 of 1
# Warmup Iteration   1: 76.179 ns/op
# Warmup Iteration   2: 74.260 ns/op
# Warmup Iteration   3: 70.556 ns/op
# Warmup Iteration   4: 67.826 ns/op
# Warmup Iteration   5: 67.670 ns/op
Iteration   1: 73.714 ns/op
Iteration   2: 67.619 ns/op
Iteration   3: 67.675 ns/op
Iteration   4: 67.659 ns/op
Iteration   5: 67.610 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  68.855 ±(99.9%) 10.460 ns/op [Average]
  (min, avg, max) = (67.610, 68.855, 73.714), stdev = 2.716
  CI (99.9%): [58.396, 79.315] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 50)

# Run progress: 93.88% complete, ETA 00:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 121.212 ns/op
# Warmup Iteration   2: 110.767 ns/op
# Warmup Iteration   3: 108.780 ns/op
# Warmup Iteration   4: 118.972 ns/op
# Warmup Iteration   5: 111.434 ns/op
Iteration   1: 114.175 ns/op
Iteration   2: 115.091 ns/op
Iteration   3: 108.784 ns/op
Iteration   4: 111.926 ns/op
Iteration   5: 109.287 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  111.852 ±(99.9%) 10.872 ns/op [Average]
  (min, avg, max) = (108.784, 111.852, 115.091), stdev = 2.823
  CI (99.9%): [100.980, 122.725] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 100)

# Run progress: 94.39% complete, ETA 00:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 177.097 ns/op
# Warmup Iteration   2: 162.576 ns/op
# Warmup Iteration   3: 154.647 ns/op
# Warmup Iteration   4: 154.554 ns/op
# Warmup Iteration   5: 154.530 ns/op
Iteration   1: 154.463 ns/op
Iteration   2: 154.580 ns/op
Iteration   3: 154.202 ns/op
Iteration   4: 154.981 ns/op
Iteration   5: 153.719 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  154.389 ±(99.9%) 1.802 ns/op [Average]
  (min, avg, max) = (153.719, 154.389, 154.981), stdev = 0.468
  CI (99.9%): [152.587, 156.191] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 500)

# Run progress: 94.90% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: 627.016 ns/op
# Warmup Iteration   2: 588.798 ns/op
# Warmup Iteration   3: 557.702 ns/op
# Warmup Iteration   4: 558.223 ns/op
# Warmup Iteration   5: 586.488 ns/op
Iteration   1: 597.079 ns/op
Iteration   2: 566.254 ns/op
Iteration   3: 557.394 ns/op
Iteration   4: 557.457 ns/op
Iteration   5: 558.062 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  567.249 ±(99.9%) 65.807 ns/op [Average]
  (min, avg, max) = (557.394, 567.249, 597.079), stdev = 17.090
  CI (99.9%): [501.443, 633.056] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 95.41% complete, ETA 00:01:33
# Fork: 1 of 1
# Warmup Iteration   1: 1193.435 ns/op
# Warmup Iteration   2: 1098.937 ns/op
# Warmup Iteration   3: 1084.692 ns/op
# Warmup Iteration   4: 1085.690 ns/op
# Warmup Iteration   5: 1080.598 ns/op
Iteration   1: 1084.587 ns/op
Iteration   2: 1080.537 ns/op
Iteration   3: 1079.620 ns/op
Iteration   4: 1078.172 ns/op
Iteration   5: 1083.609 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  1081.305 ±(99.9%) 10.426 ns/op [Average]
  (min, avg, max) = (1078.172, 1081.305, 1084.587), stdev = 2.708
  CI (99.9%): [1070.878, 1091.731] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 95.92% complete, ETA 00:01:23
# Fork: 1 of 1
# Warmup Iteration   1: 11962.586 ns/op
# Warmup Iteration   2: 11202.340 ns/op
# Warmup Iteration   3: 10756.336 ns/op
# Warmup Iteration   4: 10865.523 ns/op
# Warmup Iteration   5: 10756.611 ns/op
Iteration   1: 10741.284 ns/op
Iteration   2: 10706.867 ns/op
Iteration   3: 10726.698 ns/op
Iteration   4: 10728.774 ns/op
Iteration   5: 10695.356 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  10719.796 ±(99.9%) 70.856 ns/op [Average]
  (min, avg, max) = (10695.356, 10719.796, 10741.284), stdev = 18.401
  CI (99.9%): [10648.940, 10790.652] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 1)

# Run progress: 96.43% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 64.232 ns/op
# Warmup Iteration   2: 56.057 ns/op
# Warmup Iteration   3: 53.263 ns/op
# Warmup Iteration   4: 52.692 ns/op
# Warmup Iteration   5: 52.757 ns/op
Iteration   1: 52.694 ns/op
Iteration   2: 52.630 ns/op
Iteration   3: 52.730 ns/op
Iteration   4: 53.058 ns/op
Iteration   5: 52.876 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  52.798 ±(99.9%) 0.659 ns/op [Average]
  (min, avg, max) = (52.630, 52.798, 53.058), stdev = 0.171
  CI (99.9%): [52.139, 53.457] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 10)

# Run progress: 96.94% complete, ETA 00:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 77.787 ns/op
# Warmup Iteration   2: 71.751 ns/op
# Warmup Iteration   3: 68.571 ns/op
# Warmup Iteration   4: 68.111 ns/op
# Warmup Iteration   5: 68.264 ns/op
Iteration   1: 68.008 ns/op
Iteration   2: 67.972 ns/op
Iteration   3: 68.050 ns/op
Iteration   4: 68.258 ns/op
Iteration   5: 68.317 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  68.121 ±(99.9%) 0.601 ns/op [Average]
  (min, avg, max) = (67.972, 68.121, 68.317), stdev = 0.156
  CI (99.9%): [67.520, 68.722] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 50)

# Run progress: 97.45% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 120.252 ns/op
# Warmup Iteration   2: 112.615 ns/op
# Warmup Iteration   3: 107.360 ns/op
# Warmup Iteration   4: 113.686 ns/op
# Warmup Iteration   5: 108.020 ns/op
Iteration   1: 107.308 ns/op
Iteration   2: 107.747 ns/op
Iteration   3: 109.586 ns/op
Iteration   4: 111.615 ns/op
Iteration   5: 111.526 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  109.556 ±(99.9%) 7.808 ns/op [Average]
  (min, avg, max) = (107.308, 109.556, 111.615), stdev = 2.028
  CI (99.9%): [101.749, 117.364] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 100)

# Run progress: 97.96% complete, ETA 00:00:41
# Fork: 1 of 1
# Warmup Iteration   1: 175.587 ns/op
# Warmup Iteration   2: 171.326 ns/op
# Warmup Iteration   3: 155.360 ns/op
# Warmup Iteration   4: 154.915 ns/op
# Warmup Iteration   5: 159.098 ns/op
Iteration   1: 164.736 ns/op
Iteration   2: 158.929 ns/op
Iteration   3: 157.781 ns/op
Iteration   4: 154.989 ns/op
Iteration   5: 157.769 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  158.841 ±(99.9%) 13.866 ns/op [Average]
  (min, avg, max) = (154.989, 158.841, 164.736), stdev = 3.601
  CI (99.9%): [144.975, 172.707] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 500)

# Run progress: 98.47% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 626.894 ns/op
# Warmup Iteration   2: 568.013 ns/op
# Warmup Iteration   3: 569.585 ns/op
# Warmup Iteration   4: 559.571 ns/op
# Warmup Iteration   5: 559.611 ns/op
Iteration   1: 558.902 ns/op
Iteration   2: 559.581 ns/op
Iteration   3: 559.835 ns/op
Iteration   4: 572.111 ns/op
Iteration   5: 560.347 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  562.155 ±(99.9%) 21.524 ns/op [Average]
  (min, avg, max) = (558.902, 562.155, 572.111), stdev = 5.590
  CI (99.9%): [540.631, 583.679] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 1000)

# Run progress: 98.98% complete, ETA 00:00:20
# Fork: 1 of 1
# Warmup Iteration   1: 1223.967 ns/op
# Warmup Iteration   2: 1108.190 ns/op
# Warmup Iteration   3: 1085.084 ns/op
# Warmup Iteration   4: 1087.482 ns/op
# Warmup Iteration   5: 1088.859 ns/op
Iteration   1: 1114.643 ns/op
Iteration   2: 1087.524 ns/op
Iteration   3: 1089.815 ns/op
Iteration   4: 1086.680 ns/op
Iteration   5: 1092.177 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  1094.168 ±(99.9%) 44.838 ns/op [Average]
  (min, avg, max) = (1086.680, 1094.168, 1114.643), stdev = 11.644
  CI (99.9%): [1049.330, 1139.005] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.49% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 12697.056 ns/op
# Warmup Iteration   2: 11027.347 ns/op
# Warmup Iteration   3: 10808.000 ns/op
# Warmup Iteration   4: 10758.097 ns/op
# Warmup Iteration   5: 10737.924 ns/op
Iteration   1: 10741.605 ns/op
Iteration   2: 10792.973 ns/op
Iteration   3: 10767.568 ns/op
Iteration   4: 10807.130 ns/op
Iteration   5: 11723.889 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  10966.633 ±(99.9%) 1632.895 ns/op [Average]
  (min, avg, max) = (10741.605, 10966.633, 11723.889), stdev = 424.058
  CI (99.9%): [9333.738, 12599.528] (assumes normal distribution)


# Run complete. Total time: 00:34:05

Benchmark                                                       (dataset)  (length)  Mode  Cnt      Score      Error  Units
Base64JniBenchmarks.jdk_url_decode                                  fixed         1  avgt    5     32.214 ±    0.110  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed        10  avgt    5     51.900 ±    0.361  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed        50  avgt    5    128.916 ±    1.362  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed       100  avgt    5    233.225 ±    1.741  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed       500  avgt    5    970.132 ±    6.761  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed      1000  avgt    5   1908.501 ±   14.231  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed     10000  avgt    5  19375.404 ±   70.037  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random         1  avgt    5     32.463 ±    0.190  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random        10  avgt    5     51.186 ±    0.473  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random        50  avgt    5    133.427 ±    1.292  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random       100  avgt    5    236.511 ±   30.351  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random       500  avgt    5    970.265 ±    6.619  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random      1000  avgt    5   1911.495 ±   14.665  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random     10000  avgt    5  19580.641 ±  210.049  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed         1  avgt    5     22.843 ±    0.512  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed        10  avgt    5     47.116 ±    3.077  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed        50  avgt    5     85.664 ±    0.620  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed       100  avgt    5    127.982 ±    0.941  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed       500  avgt    5    444.965 ±    2.526  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed      1000  avgt    5    857.990 ±   32.996  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed     10000  avgt    5   9276.002 ±   99.343  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random         1  avgt    5     22.839 ±    0.706  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random        10  avgt    5     47.379 ±    0.777  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random        50  avgt    5     85.892 ±    4.135  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random       100  avgt    5    129.444 ±    6.738  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random       500  avgt    5    459.354 ±   10.968  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random      1000  avgt    5    857.044 ±    6.097  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random     10000  avgt    5   9443.560 ± 1187.494  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed         1  avgt    5   1421.875 ±   39.718  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed        10  avgt    5   1396.002 ±   13.412  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed        50  avgt    5   1472.937 ±   25.846  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed       100  avgt    5   1611.511 ±   21.845  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed       500  avgt    5   2105.442 ±   71.710  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed      1000  avgt    5   2824.589 ±   27.786  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed     10000  avgt    5  13724.368 ±  890.567  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random         1  avgt    5   1418.234 ±   34.442  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random        10  avgt    5   1389.047 ±   21.503  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random        50  avgt    5   1505.353 ±  183.373  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random       100  avgt    5   1628.331 ±  149.699  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random       500  avgt    5   2128.075 ±   99.343  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random      1000  avgt    5   2853.394 ±  166.892  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random     10000  avgt    5  14013.628 ± 1611.898  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed         1  avgt    5   1253.755 ±  290.319  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed        10  avgt    5   1193.484 ±   46.208  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed        50  avgt    5   1260.209 ±   18.992  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed       100  avgt    5   1344.659 ±   28.179  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed       500  avgt    5   1850.107 ±   13.161  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed      1000  avgt    5   2657.447 ±   77.988  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed     10000  avgt    5  13533.866 ±  767.366  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random         1  avgt    5   1205.521 ±   32.960  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random        10  avgt    5   1188.488 ±    4.636  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random        50  avgt    5   1264.892 ±   11.228  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random       100  avgt    5   1331.542 ±   16.905  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random       500  avgt    5   1874.473 ±   21.669  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random      1000  avgt    5   2696.291 ±  117.142  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random     10000  avgt    5  13623.628 ± 1608.825  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed         1  avgt    5   1059.634 ±   12.712  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed        10  avgt    5   1052.568 ±   29.976  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed        50  avgt    5   1116.458 ±    4.285  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed       100  avgt    5   1188.923 ±   14.547  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed       500  avgt    5   1675.275 ±    9.949  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed      1000  avgt    5   2496.050 ±   18.643  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed     10000  avgt    5  13338.995 ±  860.659  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random         1  avgt    5   1059.527 ±   41.617  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random        10  avgt    5   1054.953 ±   83.941  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random        50  avgt    5   1128.353 ±   52.339  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random       100  avgt    5   1192.774 ±   25.857  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random       500  avgt    5   1697.966 ±  112.376  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random      1000  avgt    5   2500.232 ±   33.652  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random     10000  avgt    5  13368.857 ± 1262.066  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed         1  avgt    5   1012.215 ±   16.398  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed        10  avgt    5    990.682 ±    7.950  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed        50  avgt    5   1060.932 ±   11.684  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed       100  avgt    5   1131.172 ±    7.090  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed       500  avgt    5   1698.261 ±  282.791  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed      1000  avgt    5   2365.657 ±  109.854  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed     10000  avgt    5  13031.697 ± 1253.273  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random         1  avgt    5   1009.492 ±   17.554  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random        10  avgt    5   1001.844 ±   61.261  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random        50  avgt    5   1062.375 ±   51.272  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random       100  avgt    5   1130.821 ±   14.735  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random       500  avgt    5   1641.359 ±    8.949  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random      1000  avgt    5   2352.098 ±   40.612  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random     10000  avgt    5  13143.063 ± 1585.115  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed         1  avgt    5    995.373 ±   51.423  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed        10  avgt    5   1026.048 ±   15.892  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed        50  avgt    5   1107.265 ±   19.155  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed       100  avgt    5   1187.484 ±  135.172  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed       500  avgt    5   1668.824 ±   15.066  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed      1000  avgt    5   2348.692 ±   23.261  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed     10000  avgt    5  13699.250 ± 3337.114  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random         1  avgt    5   1087.488 ±  128.735  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random        10  avgt    5   1026.457 ±    8.804  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random        50  avgt    5   1108.032 ±    8.825  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random       100  avgt    5   1175.510 ±   13.135  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random       500  avgt    5   1667.006 ±   21.102  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random      1000  avgt    5   2339.747 ±  128.093  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random     10000  avgt    5  13289.636 ±  198.718  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed         1  avgt    5    503.199 ±    4.200  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed        10  avgt    5    540.904 ±   32.037  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed        50  avgt    5    621.282 ±    4.169  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed       100  avgt    5    682.536 ±    8.625  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed       500  avgt    5   1175.699 ±   15.802  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed      1000  avgt    5   1866.021 ±   33.344  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed     10000  avgt    5  12654.853 ±  102.459  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random         1  avgt    5    503.138 ±    9.511  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random        10  avgt    5    544.367 ±   59.478  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random        50  avgt    5    627.325 ±   53.690  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random       100  avgt    5    685.232 ±   44.284  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random       500  avgt    5   1182.331 ±   24.468  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random      1000  avgt    5   1851.292 ±    5.834  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random     10000  avgt    5  13064.211 ± 2097.880  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed         1  avgt    5    419.059 ±   32.052  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed        10  avgt    5    447.861 ±    4.437  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed        50  avgt    5    532.235 ±   15.577  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed       100  avgt    5    594.093 ±   46.193  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed       500  avgt    5   1070.889 ±    2.989  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed      1000  avgt    5   1764.648 ±   27.727  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed     10000  avgt    5  12654.136 ±  519.542  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random         1  avgt    5    418.031 ±   28.064  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random        10  avgt    5    448.225 ±    2.392  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random        50  avgt    5    528.539 ±    5.096  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random       100  avgt    5    597.270 ±    9.588  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random       500  avgt    5   1086.774 ±    7.463  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random      1000  avgt    5   1774.061 ±   30.810  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random     10000  avgt    5  12615.198 ±  153.717  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed         1  avgt    5     64.207 ±    1.804  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed        10  avgt    5     89.330 ±    0.296  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed        50  avgt    5    140.521 ±    4.930  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed       100  avgt    5    189.808 ±    7.059  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed       500  avgt    5    644.794 ±   39.852  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed      1000  avgt    5   1253.939 ±   14.479  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed     10000  avgt    5  11871.277 ±   81.139  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random         1  avgt    5     63.756 ±    0.996  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random        10  avgt    5     90.838 ±    3.691  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random        50  avgt    5    140.953 ±    4.015  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random       100  avgt    5    185.279 ±   13.958  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random       500  avgt    5    639.550 ±   24.446  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random      1000  avgt    5   1216.757 ±    5.321  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random     10000  avgt    5  11897.309 ±  781.233  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed         1  avgt    5   1359.067 ±   38.890  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed        10  avgt    5   1401.468 ±   86.601  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed        50  avgt    5   1428.156 ±   14.849  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed       100  avgt    5   1583.153 ±   28.322  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed       500  avgt    5   2113.880 ±   41.033  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed      1000  avgt    5   2626.132 ±   35.315  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed     10000  avgt    5  13249.959 ±  379.802  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random         1  avgt    5   1366.436 ±   49.298  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random        10  avgt    5   1383.326 ±   28.968  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random        50  avgt    5   1425.227 ±    5.153  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random       100  avgt    5   1570.870 ±  109.613  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random       500  avgt    5   2054.975 ±   60.892  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random      1000  avgt    5   2625.729 ±   24.356  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random     10000  avgt    5  13666.988 ± 2062.082  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed         1  avgt    5    398.113 ±   32.902  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed        10  avgt    5    421.606 ±   31.638  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed        50  avgt    5    461.226 ±    5.038  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed       100  avgt    5    526.172 ±   60.066  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed       500  avgt    5    949.099 ±    8.025  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed      1000  avgt    5   1465.699 ±  114.398  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed     10000  avgt    5  11697.531 ± 1780.788  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random         1  avgt    5    397.034 ±   14.834  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random        10  avgt    5    416.790 ±    6.985  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random        50  avgt    5    457.117 ±    7.441  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random       100  avgt    5    514.788 ±    2.560  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random       500  avgt    5    953.100 ±    4.886  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random      1000  avgt    5   1459.090 ±   11.537  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random     10000  avgt    5  11470.392 ±  827.680  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed         1  avgt    5    479.459 ±    3.753  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed        10  avgt    5    505.040 ±    3.459  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed        50  avgt    5    542.925 ±    9.180  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed       100  avgt    5    604.470 ±    3.370  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed       500  avgt    5   1038.954 ±   34.210  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed      1000  avgt    5   1653.958 ±   83.549  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed     10000  avgt    5  11525.113 ±   49.852  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random         1  avgt    5    480.595 ±    3.552  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random        10  avgt    5    504.470 ±   19.311  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random        50  avgt    5    554.621 ±   46.806  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random       100  avgt    5    602.531 ±    2.405  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random       500  avgt    5   1040.586 ±  106.667  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random      1000  avgt    5   1683.423 ±   23.241  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random     10000  avgt    5  11626.737 ±  370.674  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed         1  avgt    5     55.103 ±    0.996  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed        10  avgt    5     68.855 ±   10.460  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed        50  avgt    5    111.852 ±   10.872  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed       100  avgt    5    154.389 ±    1.802  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed       500  avgt    5    567.249 ±   65.807  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed      1000  avgt    5   1081.305 ±   10.426  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed     10000  avgt    5  10719.796 ±   70.856  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random         1  avgt    5     52.798 ±    0.659  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random        10  avgt    5     68.121 ±    0.601  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random        50  avgt    5    109.556 ±    7.808  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random       100  avgt    5    158.841 ±   13.866  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random       500  avgt    5    562.155 ±   21.524  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random      1000  avgt    5   1094.168 ±   44.838  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random     10000  avgt    5  10966.633 ± 1632.895  ns/op

Benchmark result is saved to /static/data/charts/base64-jni/jdk17.json
