"use strict";(self.webpackChunkkomanov_com=self.webpackChunkkomanov_com||[]).push([[13],{9294:function(e,t,n){n.r(t);var a=n(2982),r=n(7294),l=n(1597),o=n(9064),u=n(8667),i=["openjdk-17","openjdk-11","openjdk-8"],c={title:"Collection",prop:"method",values:[{name:"java.util.HashSet",value:"javaSet"},{name:"immutable.Set",value:"scalaSet"},{name:"Array[Long]",value:"heapLongArray"},{name:"Array[UUID]",value:"heapUuidArray"},{name:"OffHeap Array",value:"offHeap"},{name:"ByteBuf (netty4)",value:"netty4Single"},{name:"Buffer (netty5)",value:"netty5Single"}]},s={title:"Collection",prop:"method",values:[{name:"OffHeap Array",value:"offHeap"},{name:"CompositeByteBuf (netty4)",value:"netty4Composite"},{name:"ByteBuf (netty4)",value:"netty4Single"},{name:"CompositeBuffer (netty5)",value:"netty5Composite"},{name:"Buffer (netty5)",value:"netty5Single"}]},f={title:"JDK",prop:"jdk",values:i};function m(e,t){return e.map((function(e,n){return{label:e,value:e,default:t(e,n)}}))}var h=function(e){return"/data/charts/offheap-array/"+e},p=(0,o.wZ)((function(e){var t=e.jmhList,n=(0,r.useState)("1000000"),a=n[0],u=n[1],p=(0,r.useState)("openjdk-17"),d=p[0],k=p[1],y=(0,r.useState)({func:null}),v=y[0],j=y[1];return r.createElement("div",{className:"markdown"},r.createElement("h3",null,"Introduction"),r.createElement("p",null,"Here are benchmarking results for"," ",r.createElement(l.Link,{to:"/p/replacing-hash-set-with-sorted-array-in-java"},"«Replacing HashSet with Sorted Array and Binary Search in Java?»")," ","blog post."),r.createElement("p",null,"The performance tests are performed via"," ",r.createElement("a",{href:"https://github.com/openjdk/jmh"},"JMH"),". The configuration of a hardware is Intel® Core™ i7-1165G7 @ 2.80GHz × 8 (4 core + 4 HT) with 16 GB RAM. Scala version: 2.13.6."),r.createElement("h3",null,"Charts"),r.createElement(o.V2,{label:"Collection size:",items:m(["1000","10000","100000","1000000"],(function(e){return"1000000"===e})),onChange:function(e){return u(e)}}),r.createElement(o.J6,{onChange:function(e){return j({func:e})}}),r.createElement("h4",null,"Lookup Performance"),r.createElement("p",null,"Performance of the successful lookup (hit) for all JDKs:"),r.createElement(o.We,{dataTable:t,extractor:v.func,filter:function(e){return"hit"===e.what&&e.size===a},title:"Successful lookup (hit), nanos",xDesc:c,yDesc:f}),r.createElement("p",null,"Performance of the failed lookup (miss) for all JDKs:"),r.createElement(o.We,{dataTable:t,extractor:v.func,filter:function(e){return"miss"===e.what&&e.size===a},title:"Failed lookup (miss), nanos",xDesc:c,yDesc:f}),r.createElement("h4",null,"Performance for different collection size"),r.createElement(o.V2,{label:"JDK:",items:m(i,(function(e,t){return 0===t})),onChange:function(e){return k(e)}}),r.createElement(o.We,{chartType:"LineChart",dataTable:t,extractor:v.func,filter:function(e){return"hit"===e.what&&e.jdk===d},title:"Successful lookup (hit), nanos",xDesc:c,yDesc:{title:"Collection size",prop:"size",values:["1000","10000","100000","1000000"]},options:{hAxis:{title:"Collection size"},vAxis:{title:"time, nanoseconds",maxValue:2e3}}}),r.createElement("h4",null,"Off-Heap only, including Composite buffer"),r.createElement("p",null,"Composite buffer was excluded from the previous graphs, because it's extremely slow. Below only off-heap collections:"),r.createElement(o.We,{dataTable:t,extractor:v.func,filter:function(e){return"hit"===e.what&&e.size===a},title:"Successful lookup for off-heap (hit), nanos",xDesc:s,yDesc:f}),r.createElement("p",null,"Full JMH logs:",r.createElement("a",{href:h("jdk8.log.txt")},"openjdk-8"),","," ",r.createElement("a",{href:h("jdk11.log.txt")},"openjdk-11"),","," ",r.createElement("a",{href:h("jdk17.log.txt")},"openjdk-17"),"."))}),{fetchFunc:function(){return Promise.all([(0,u._l)(h("jdk8.json")),(0,u._l)(h("jdk11.json")),(0,u._l)(h("jdk17.json"))]).then((function(e){function t(t,n){var a=e[t].data;return a.forEach((function(e){return e.params=Object.assign({},e.params,{jdk:n})})),a}return{data:[].concat((0,a.Z)(t(0,"openjdk-8")),(0,a.Z)(t(1,"openjdk-11")),(0,a.Z)(t(2,"openjdk-17")))}}))},exportDimensionsFunc:function(e,t){var n=e.substring(e.lastIndexOf(".")+1),a=n.endsWith("Hit"),r=n.substring(0,n.length-(a?3:4));return Object.assign({method:r,what:a?"hit":"miss"},t)},headerText:"Replacing HashSet with Sorted Array and Binary Search (Charts)"});t.default=p}}]);
//# sourceMappingURL=component---src-pages-charts-offheap-array-index-tsx-024d498f8961da81b4fb.js.map