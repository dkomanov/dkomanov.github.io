{"version":3,"file":"component---src-pages-charts-native-access-index-tsx-e1d5c735dee7b4d9416b.js","mappings":"2KAcMA,EAAQ,CACZC,MAAO,UACPC,KAAM,MACNC,OAAQ,CACN,CACEC,KAAM,QACNC,MAAO,SAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,cACNC,MAAO,cAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,aACNC,MAAO,aAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,mBACNC,MAAO,YAET,CACED,KAAM,MACNC,MAAO,SAKPC,EAAQ,CACZL,MAAO,MACPC,KAAM,MACNC,OA5CyB,CAAC,aAAc,aAAc,cAsGxD,IAAMI,EAAW,SAACH,GAAD,oCAAgDA,CAAjE,EAyBMI,GAAeC,EAAAA,EAAAA,KAhFI,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,QAC1B,GAAkCC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,OAA5CC,EAAP,KAAkBC,EAAlB,KAEA,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,YACbD,EAAAA,cAAAA,KAAAA,KAAAA,gBAEAA,EAAAA,cAAAA,IAAAA,KAAAA,oCACoC,IAClCA,EAAAA,cAACE,EAAAA,KAAD,CAAMC,GAAG,qCAAT,oCAEQ,IAJV,cAQAH,EAAAA,cAAAA,IAAAA,KAAAA,0CAC0C,IACxCA,EAAAA,cAAAA,IAAAA,CAAGI,KAAK,kCAAR,OAFF,oIAOAJ,EAAAA,cAAAA,KAAAA,KAAAA,SAEAA,EAAAA,cAACK,EAAAA,GAAD,CAAWC,SAAU,SAACT,GAAD,OAAeE,EAAa,CAAEF,KAAAA,GAA9B,IAErBG,EAAAA,cAACO,EAAAA,GAAD,CACEC,UAAWb,EACXG,UAAWA,EAAUD,KACrBX,MAAM,qBACND,MAAOA,EACPM,MAAOA,IAGTS,EAAAA,cAAAA,IAAAA,KAAAA,iBAEEA,EAAAA,cAAAA,IAAAA,CAAGI,KAAMZ,EAAS,iBAAlB,aAFF,IAEoD,IAClDQ,EAAAA,cAAAA,IAAAA,CAAGI,KAAMZ,EAAS,kBAAlB,cAHF,IAGsD,IACpDQ,EAAAA,cAAAA,IAAAA,CAAGI,KAAMZ,EAAS,kBAAlB,cAJF,KAlCN,GAgFoD,CAClDiB,UAxB6B,WAC7B,OAAOC,QAAQC,IAAI,EACjBC,EAAAA,EAAAA,IAASpB,EAAS,eAClBoB,EAAAA,EAAAA,IAASpB,EAAS,gBAClBoB,EAAAA,EAAAA,IAASpB,EAAS,iBACjBqB,MAAK,SAACzB,GACP,SAAS0B,EAAOC,EAAeC,GAC7B,IAAMC,EAA0B7B,EAAO2B,GAAOG,KAG9C,OAFAC,QAAQC,IAAIH,GACZA,EAAKI,SAAQ,SAACC,GAAD,OAAQA,EAAEC,OAAFD,OAAAA,OAAAA,CAAAA,EAAgBA,EAAEC,OAAlB,CAA0BP,IAAAA,GAA/C,IACOC,CACR,CAED,MAAO,CACLC,KAAM,GAAF,eACCJ,EAAO,EAAG,eADX,OAECA,EAAO,EAAG,gBAFX,OAGCA,EAAO,EAAG,gBAhBZ,GADT,EAyBEU,qBAtCF,SAA0BC,EAAmBF,GAG3C,IAAMG,EAAMD,EAAUE,UAAUF,EAAUG,YAAY,KAAO,GAE7D,OAAO,OAAP,QACEF,IAAAA,GACGH,EAEN,EA8BCM,WAAY,4CAGd,W","sources":["webpack://komanov.com/./src/pages/charts/native-access/index.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport React, { useState } from 'react';\nimport { JmhBenchmarkRun } from '../../..';\nimport {\n  ChartAndTable,\n  JmhChartComponentProps,\n  JmhChartPage,\n  TimeUnits,\n} from '../../../components';\nimport { loadJson } from '../../../util';\n\ntype JdkVersion = 'openjdk-17' | 'openjdk-11' | 'openjdk-8';\nconst jdks: JdkVersion[] = ['openjdk-17', 'openjdk-11', 'openjdk-8'];\n\nconst xDesc = {\n  title: 'Library',\n  prop: 'lib',\n  values: [\n    {\n      name: 'BridJ',\n      value: 'bridj',\n    },\n    {\n      name: 'JavaCPP',\n      value: 'javaCpp',\n    },\n    {\n      name: 'Java MXBean',\n      value: 'javaMxBean',\n    },\n    {\n      name: 'JNA',\n      value: 'jna',\n    },\n    {\n      name: 'JNA direct',\n      value: 'jnaDirect',\n    },\n    {\n      name: 'JNI',\n      value: 'jni',\n    },\n    {\n      name: 'JNI (empty call)',\n      value: 'jniEmpty',\n    },\n    {\n      name: 'JNR',\n      value: 'jnr',\n    },\n  ],\n};\n\nconst yDesc = {\n  title: 'JDK',\n  prop: 'jdk',\n  values: jdks,\n};\n\nconst NativeAccessImpl = ({ jmhList }: JmhChartComponentProps) => {\n  const [extractor, extractorSet] = useState({ func: null });\n\n  return (\n    <div className=\"markdown\">\n      <h3>Introduction</h3>\n\n      <p>\n        Here are benchmarking results for{' '}\n        <Link to=\"/p/java-native-access-performance\">\n          &laquo;Java Native Access Performance&raquo;\n        </Link>{' '}\n        blog post.\n      </p>\n\n      <p>\n        The performance tests are performed via{' '}\n        <a href=\"https://github.com/openjdk/jmh\">JMH</a>. The configuration of a\n        hardware is Intel® Core™ i7-1165G7 @ 2.80GHz × 8 (4 core + 4 HT) with 16\n        GB RAM. Scala version: 2.13.6.\n      </p>\n\n      <h3>Chart</h3>\n\n      <TimeUnits onChange={(func: any) => extractorSet({ func })} />\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={extractor.func}\n        title=\"Native call, nanos\"\n        xDesc={xDesc}\n        yDesc={yDesc}\n      />\n\n      <p>\n        Full JMH logs:\n        <a href={filePath('jdk8.log.txt')}>openjdk-8</a>,{' '}\n        <a href={filePath('jdk11.log.txt')}>openjdk-11</a>,{' '}\n        <a href={filePath('jdk17.log.txt')}>openjdk-17</a>.\n      </p>\n    </div>\n  );\n};\n\nfunction exportDimensions(benchmark: string, params: any) {\n  //'com.komanov.nativeaccess.jmh.NativeBenchmarks.bridj'\n\n  const lib = benchmark.substring(benchmark.lastIndexOf('.') + 1); // bridj\n\n  return {\n    lib,\n    ...params,\n  };\n}\n\nconst filePath = (name: string) => `/data/charts/native-access/${name}`;\n\nconst fetchAndCombineResults = () => {\n  return Promise.all([\n    loadJson(filePath('jdk8.json')),\n    loadJson(filePath('jdk11.json')),\n    loadJson(filePath('jdk17.json')),\n  ]).then((values: any[]) => {\n    function setJdk(index: number, jdk: JdkVersion) {\n      const list: JmhBenchmarkRun[] = values[index].data;\n      console.log(list);\n      list.forEach((v) => (v.params = { ...v.params, jdk }));\n      return list;\n    }\n\n    return {\n      data: [\n        ...setJdk(0, 'openjdk-8'),\n        ...setJdk(1, 'openjdk-11'),\n        ...setJdk(2, 'openjdk-17'),\n      ],\n    };\n  });\n};\n\nconst NativeAccess = JmhChartPage(NativeAccessImpl, {\n  fetchFunc: fetchAndCombineResults,\n  exportDimensionsFunc: exportDimensions,\n  headerText: 'Java Native Access Performance (Charts)',\n});\n\nexport default NativeAccess;\n"],"names":["xDesc","title","prop","values","name","value","yDesc","filePath","NativeAccess","JmhChartPage","jmhList","useState","func","extractor","extractorSet","React","className","Link","to","href","TimeUnits","onChange","ChartAndTable","dataTable","fetchFunc","Promise","all","loadJson","then","setJdk","index","jdk","list","data","console","log","forEach","v","params","exportDimensionsFunc","benchmark","lib","substring","lastIndexOf","headerText"],"sourceRoot":""}