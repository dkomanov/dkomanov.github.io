# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:52:16
# Fork: 1 of 1
# Warmup Iteration   1: 1340.972 ns/op
# Warmup Iteration   2: 1050.042 ns/op
# Warmup Iteration   3: 995.394 ns/op
# Warmup Iteration   4: 1027.041 ns/op
# Warmup Iteration   5: 1008.475 ns/op
Iteration   1: 1028.211 ns/op
Iteration   2: 1013.560 ns/op
Iteration   3: 997.522 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1013.098 ±(99.9%) 280.039 ns/op [Average]
  (min, avg, max) = (997.522, 1013.098, 1028.211), stdev = 15.350
  CI (99.9%): [733.058, 1293.137] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.45% complete, ETA 00:54:21
# Fork: 1 of 1
# Warmup Iteration   1: 1517.355 ns/op
# Warmup Iteration   2: 1351.893 ns/op
# Warmup Iteration   3: 1112.859 ns/op
# Warmup Iteration   4: 1118.655 ns/op
# Warmup Iteration   5: 1119.918 ns/op
Iteration   1: 1110.096 ns/op
Iteration   2: 1109.792 ns/op
Iteration   3: 1122.140 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1114.009 ±(99.9%) 128.496 ns/op [Average]
  (min, avg, max) = (1109.792, 1114.009, 1122.140), stdev = 7.043
  CI (99.9%): [985.514, 1242.505] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 0.89% complete, ETA 00:53:59
# Fork: 1 of 1
# Warmup Iteration   1: 2015.951 ns/op
# Warmup Iteration   2: 1707.329 ns/op
# Warmup Iteration   3: 1682.714 ns/op
# Warmup Iteration   4: 1679.711 ns/op
# Warmup Iteration   5: 1670.466 ns/op
Iteration   1: 1759.618 ns/op
Iteration   2: 1661.110 ns/op
Iteration   3: 1678.503 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1699.743 ±(99.9%) 959.203 ns/op [Average]
  (min, avg, max) = (1661.110, 1699.743, 1759.618), stdev = 52.577
  CI (99.9%): [740.541, 2658.946] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 1.34% complete, ETA 00:53:38
# Fork: 1 of 1
# Warmup Iteration   1: 2932.248 ns/op
# Warmup Iteration   2: 2905.664 ns/op
# Warmup Iteration   3: 2432.371 ns/op
# Warmup Iteration   4: 2413.136 ns/op
# Warmup Iteration   5: 2431.456 ns/op
Iteration   1: 2412.752 ns/op
Iteration   2: 2410.869 ns/op
Iteration   3: 2419.275 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  2414.299 ±(99.9%) 80.478 ns/op [Average]
  (min, avg, max) = (2410.869, 2414.299, 2419.275), stdev = 4.411
  CI (99.9%): [2333.821, 2494.776] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 1.79% complete, ETA 00:53:20
# Fork: 1 of 1
# Warmup Iteration   1: 10482.071 ns/op
# Warmup Iteration   2: 8766.035 ns/op
# Warmup Iteration   3: 8665.102 ns/op
# Warmup Iteration   4: 8678.942 ns/op
# Warmup Iteration   5: 8688.369 ns/op
Iteration   1: 8663.313 ns/op
Iteration   2: 8599.830 ns/op
Iteration   3: 8600.393 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  8621.179 ±(99.9%) 665.723 ns/op [Average]
  (min, avg, max) = (8599.830, 8621.179, 8663.313), stdev = 36.491
  CI (99.9%): [7955.456, 9286.902] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 2.23% complete, ETA 00:53:04
# Fork: 1 of 1
# Warmup Iteration   1: 16255.756 ns/op
# Warmup Iteration   2: 14833.538 ns/op
# Warmup Iteration   3: 14581.421 ns/op
# Warmup Iteration   4: 14576.871 ns/op
# Warmup Iteration   5: 14556.974 ns/op
Iteration   1: 14774.709 ns/op
Iteration   2: 14503.672 ns/op
Iteration   3: 14548.168 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  14608.850 ±(99.9%) 2651.747 ns/op [Average]
  (min, avg, max) = (14503.672, 14608.850, 14774.709), stdev = 145.351
  CI (99.9%): [11957.103, 17260.596] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 2.68% complete, ETA 00:52:47
# Fork: 1 of 1
# Warmup Iteration   1: 134450.550 ns/op
# Warmup Iteration   2: 122561.932 ns/op
# Warmup Iteration   3: 122509.625 ns/op
# Warmup Iteration   4: 122837.414 ns/op
# Warmup Iteration   5: 121536.370 ns/op
Iteration   1: 122294.329 ns/op
Iteration   2: 123849.999 ns/op
Iteration   3: 123767.030 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  123303.786 ±(99.9%) 15966.887 ns/op [Average]
  (min, avg, max) = (122294.329, 123303.786, 123849.999), stdev = 875.199
  CI (99.9%): [107336.899, 139270.674] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 3.13% complete, ETA 00:52:30
# Fork: 1 of 1
# Warmup Iteration   1: 1230.106 ns/op
# Warmup Iteration   2: 977.434 ns/op
# Warmup Iteration   3: 989.200 ns/op
# Warmup Iteration   4: 970.327 ns/op
# Warmup Iteration   5: 979.924 ns/op
Iteration   1: 988.442 ns/op
Iteration   2: 970.850 ns/op
Iteration   3: 966.363 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  975.218 ±(99.9%) 212.901 ns/op [Average]
  (min, avg, max) = (966.363, 975.218, 988.442), stdev = 11.670
  CI (99.9%): [762.317, 1188.119] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 3.57% complete, ETA 00:52:16
# Fork: 1 of 1
# Warmup Iteration   1: 1453.416 ns/op
# Warmup Iteration   2: 1007.138 ns/op
# Warmup Iteration   3: 989.711 ns/op
# Warmup Iteration   4: 994.092 ns/op
# Warmup Iteration   5: 992.336 ns/op
Iteration   1: 993.251 ns/op
Iteration   2: 1007.116 ns/op
Iteration   3: 1003.687 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1001.351 ±(99.9%) 131.750 ns/op [Average]
  (min, avg, max) = (993.251, 1001.351, 1007.116), stdev = 7.222
  CI (99.9%): [869.602, 1133.101] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 4.02% complete, ETA 00:52:02
# Fork: 1 of 1
# Warmup Iteration   1: 1849.864 ns/op
# Warmup Iteration   2: 1317.921 ns/op
# Warmup Iteration   3: 1323.991 ns/op
# Warmup Iteration   4: 1307.514 ns/op
# Warmup Iteration   5: 1383.448 ns/op
Iteration   1: 1290.936 ns/op
Iteration   2: 1390.539 ns/op
Iteration   3: 1333.274 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1338.250 ±(99.9%) 911.957 ns/op [Average]
  (min, avg, max) = (1290.936, 1338.250, 1390.539), stdev = 49.987
  CI (99.9%): [426.293, 2250.207] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 4.46% complete, ETA 00:51:47
# Fork: 1 of 1
# Warmup Iteration   1: 2071.383 ns/op
# Warmup Iteration   2: 1706.014 ns/op
# Warmup Iteration   3: 1703.733 ns/op
# Warmup Iteration   4: 1732.168 ns/op
# Warmup Iteration   5: 1751.047 ns/op
Iteration   1: 1719.183 ns/op
Iteration   2: 1754.297 ns/op
Iteration   3: 1695.437 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1722.972 ±(99.9%) 540.236 ns/op [Average]
  (min, avg, max) = (1695.437, 1722.972, 1754.297), stdev = 29.612
  CI (99.9%): [1182.736, 2263.208] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 4.91% complete, ETA 00:51:32
# Fork: 1 of 1
# Warmup Iteration   1: 6307.937 ns/op
# Warmup Iteration   2: 5269.563 ns/op
# Warmup Iteration   3: 5087.003 ns/op
# Warmup Iteration   4: 5059.605 ns/op
# Warmup Iteration   5: 5094.798 ns/op
Iteration   1: 5094.107 ns/op
Iteration   2: 5118.191 ns/op
Iteration   3: 5066.097 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  5092.798 ±(99.9%) 475.646 ns/op [Average]
  (min, avg, max) = (5066.097, 5092.798, 5118.191), stdev = 26.072
  CI (99.9%): [4617.152, 5568.444] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 5.36% complete, ETA 00:51:18
# Fork: 1 of 1
# Warmup Iteration   1: 10643.567 ns/op
# Warmup Iteration   2: 9481.811 ns/op
# Warmup Iteration   3: 9489.288 ns/op
# Warmup Iteration   4: 11416.529 ns/op
# Warmup Iteration   5: 9353.148 ns/op
Iteration   1: 9347.534 ns/op
Iteration   2: 9352.574 ns/op
Iteration   3: 9361.360 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  9353.822 ±(99.9%) 127.650 ns/op [Average]
  (min, avg, max) = (9347.534, 9353.822, 9361.360), stdev = 6.997
  CI (99.9%): [9226.172, 9481.472] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 5.80% complete, ETA 00:51:03
# Fork: 1 of 1
# Warmup Iteration   1: 102404.377 ns/op
# Warmup Iteration   2: 87509.869 ns/op
# Warmup Iteration   3: 87859.494 ns/op
# Warmup Iteration   4: 87914.021 ns/op
# Warmup Iteration   5: 88588.912 ns/op
Iteration   1: 87777.813 ns/op
Iteration   2: 87595.210 ns/op
Iteration   3: 87663.256 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  87678.760 ±(99.9%) 1683.595 ns/op [Average]
  (min, avg, max) = (87595.210, 87678.760, 87777.813), stdev = 92.284
  CI (99.9%): [85995.165, 89362.354] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 6.25% complete, ETA 00:50:49
# Fork: 1 of 1
# Warmup Iteration   1: 1228.261 ns/op
# Warmup Iteration   2: 1034.221 ns/op
# Warmup Iteration   3: 984.234 ns/op
# Warmup Iteration   4: 973.499 ns/op
# Warmup Iteration   5: 973.852 ns/op
Iteration   1: 972.314 ns/op
Iteration   2: 1000.397 ns/op
Iteration   3: 967.772 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  980.161 ±(99.9%) 322.387 ns/op [Average]
  (min, avg, max) = (967.772, 980.161, 1000.397), stdev = 17.671
  CI (99.9%): [657.774, 1302.548] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 6.70% complete, ETA 00:50:34
# Fork: 1 of 1
# Warmup Iteration   1: 1305.962 ns/op
# Warmup Iteration   2: 1041.248 ns/op
# Warmup Iteration   3: 1030.888 ns/op
# Warmup Iteration   4: 1034.092 ns/op
# Warmup Iteration   5: 1029.402 ns/op
Iteration   1: 1012.097 ns/op
Iteration   2: 1017.445 ns/op
Iteration   3: 1014.767 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1014.770 ±(99.9%) 48.778 ns/op [Average]
  (min, avg, max) = (1012.097, 1014.770, 1017.445), stdev = 2.674
  CI (99.9%): [965.992, 1063.547] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 7.14% complete, ETA 00:50:20
# Fork: 1 of 1
# Warmup Iteration   1: 1863.161 ns/op
# Warmup Iteration   2: 1591.767 ns/op
# Warmup Iteration   3: 1486.951 ns/op
# Warmup Iteration   4: 1483.625 ns/op
# Warmup Iteration   5: 1483.973 ns/op
Iteration   1: 1482.954 ns/op
Iteration   2: 1484.465 ns/op
Iteration   3: 1517.243 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1494.887 ±(99.9%) 353.474 ns/op [Average]
  (min, avg, max) = (1482.954, 1494.887, 1517.243), stdev = 19.375
  CI (99.9%): [1141.414, 1848.361] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 7.59% complete, ETA 00:50:05
# Fork: 1 of 1
# Warmup Iteration   1: 2607.782 ns/op
# Warmup Iteration   2: 2173.927 ns/op
# Warmup Iteration   3: 2149.665 ns/op
# Warmup Iteration   4: 2148.110 ns/op
# Warmup Iteration   5: 2149.891 ns/op
Iteration   1: 2152.845 ns/op
Iteration   2: 2142.852 ns/op
Iteration   3: 2149.615 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  2148.437 ±(99.9%) 93.039 ns/op [Average]
  (min, avg, max) = (2142.852, 2148.437, 2152.845), stdev = 5.100
  CI (99.9%): [2055.399, 2241.476] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 8.04% complete, ETA 00:49:50
# Fork: 1 of 1
# Warmup Iteration   1: 8385.869 ns/op
# Warmup Iteration   2: 8029.356 ns/op
# Warmup Iteration   3: 7474.105 ns/op
# Warmup Iteration   4: 7423.391 ns/op
# Warmup Iteration   5: 7409.615 ns/op
Iteration   1: 7492.192 ns/op
Iteration   2: 7434.615 ns/op
Iteration   3: 7404.918 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  7443.908 ±(99.9%) 809.527 ns/op [Average]
  (min, avg, max) = (7404.918, 7443.908, 7492.192), stdev = 44.373
  CI (99.9%): [6634.382, 8253.435] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 8.48% complete, ETA 00:49:36
# Fork: 1 of 1
# Warmup Iteration   1: 15939.555 ns/op
# Warmup Iteration   2: 14435.323 ns/op
# Warmup Iteration   3: 14307.292 ns/op
# Warmup Iteration   4: 14439.430 ns/op
# Warmup Iteration   5: 14285.258 ns/op
Iteration   1: 14341.701 ns/op
Iteration   2: 14330.410 ns/op
Iteration   3: 14378.558 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  14350.223 ±(99.9%) 459.378 ns/op [Average]
  (min, avg, max) = (14330.410, 14350.223, 14378.558), stdev = 25.180
  CI (99.9%): [13890.845, 14809.601] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 8.93% complete, ETA 00:49:21
# Fork: 1 of 1
# Warmup Iteration   1: 145472.648 ns/op
# Warmup Iteration   2: 133787.039 ns/op
# Warmup Iteration   3: 143041.691 ns/op
# Warmup Iteration   4: 132885.043 ns/op
# Warmup Iteration   5: 132429.364 ns/op
Iteration   1: 132147.465 ns/op
Iteration   2: 131829.539 ns/op
Iteration   3: 131931.418 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  131969.474 ±(99.9%) 2961.745 ns/op [Average]
  (min, avg, max) = (131829.539, 131969.474, 132147.465), stdev = 162.343
  CI (99.9%): [129007.729, 134931.219] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 9.38% complete, ETA 00:49:06
# Fork: 1 of 1
# Warmup Iteration   1: 1393.517 ns/op
# Warmup Iteration   2: 1028.769 ns/op
# Warmup Iteration   3: 1007.061 ns/op
# Warmup Iteration   4: 970.490 ns/op
# Warmup Iteration   5: 1007.402 ns/op
Iteration   1: 988.922 ns/op
Iteration   2: 973.287 ns/op
Iteration   3: 986.369 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  982.859 ±(99.9%) 153.019 ns/op [Average]
  (min, avg, max) = (973.287, 982.859, 988.922), stdev = 8.387
  CI (99.9%): [829.840, 1135.878] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 9.82% complete, ETA 00:48:51
# Fork: 1 of 1
# Warmup Iteration   1: 1271.235 ns/op
# Warmup Iteration   2: 1017.534 ns/op
# Warmup Iteration   3: 1021.407 ns/op
# Warmup Iteration   4: 1009.462 ns/op
# Warmup Iteration   5: 1010.373 ns/op
Iteration   1: 1016.742 ns/op
Iteration   2: 1011.567 ns/op
Iteration   3: 995.266 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1007.858 ±(99.9%) 204.479 ns/op [Average]
  (min, avg, max) = (995.266, 1007.858, 1016.742), stdev = 11.208
  CI (99.9%): [803.380, 1212.337] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 10.27% complete, ETA 00:48:37
# Fork: 1 of 1
# Warmup Iteration   1: 1676.470 ns/op
# Warmup Iteration   2: 1346.880 ns/op
# Warmup Iteration   3: 1349.988 ns/op
# Warmup Iteration   4: 1366.932 ns/op
# Warmup Iteration   5: 1386.252 ns/op
Iteration   1: 1332.246 ns/op
Iteration   2: 1333.503 ns/op
Iteration   3: 1356.886 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1340.878 ±(99.9%) 253.170 ns/op [Average]
  (min, avg, max) = (1332.246, 1340.878, 1356.886), stdev = 13.877
  CI (99.9%): [1087.708, 1594.049] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 10.71% complete, ETA 00:48:23
# Fork: 1 of 1
# Warmup Iteration   1: 2370.563 ns/op
# Warmup Iteration   2: 1866.359 ns/op
# Warmup Iteration   3: 1873.148 ns/op
# Warmup Iteration   4: 1855.806 ns/op
# Warmup Iteration   5: 1845.828 ns/op
Iteration   1: 1839.052 ns/op
Iteration   2: 1834.546 ns/op
Iteration   3: 1863.694 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1845.764 ±(99.9%) 286.254 ns/op [Average]
  (min, avg, max) = (1834.546, 1845.764, 1863.694), stdev = 15.691
  CI (99.9%): [1559.509, 2132.018] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 11.16% complete, ETA 00:48:08
# Fork: 1 of 1
# Warmup Iteration   1: 6500.851 ns/op
# Warmup Iteration   2: 5950.462 ns/op
# Warmup Iteration   3: 5728.252 ns/op
# Warmup Iteration   4: 5731.625 ns/op
# Warmup Iteration   5: 5752.546 ns/op
Iteration   1: 5728.214 ns/op
Iteration   2: 5765.580 ns/op
Iteration   3: 5923.225 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  5805.673 ±(99.9%) 1888.285 ns/op [Average]
  (min, avg, max) = (5728.214, 5805.673, 5923.225), stdev = 103.503
  CI (99.9%): [3917.388, 7693.958] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 11.61% complete, ETA 00:47:53
# Fork: 1 of 1
# Warmup Iteration   1: 12288.084 ns/op
# Warmup Iteration   2: 11052.575 ns/op
# Warmup Iteration   3: 10922.913 ns/op
# Warmup Iteration   4: 10898.399 ns/op
# Warmup Iteration   5: 10890.202 ns/op
Iteration   1: 11025.459 ns/op
Iteration   2: 10946.277 ns/op
Iteration   3: 10912.393 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  10961.376 ±(99.9%) 1058.603 ns/op [Average]
  (min, avg, max) = (10912.393, 10961.376, 11025.459), stdev = 58.026
  CI (99.9%): [9902.773, 12019.979] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 12.05% complete, ETA 00:47:39
# Fork: 1 of 1
# Warmup Iteration   1: 111222.403 ns/op
# Warmup Iteration   2: 97074.799 ns/op
# Warmup Iteration   3: 97097.832 ns/op
# Warmup Iteration   4: 96498.829 ns/op
# Warmup Iteration   5: 97241.464 ns/op
Iteration   1: 97095.759 ns/op
Iteration   2: 96470.251 ns/op
Iteration   3: 96500.922 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  96688.977 ±(99.9%) 6433.053 ns/op [Average]
  (min, avg, max) = (96470.251, 96688.977, 97095.759), stdev = 352.617
  CI (99.9%): [90255.924, 103122.030] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 12.50% complete, ETA 00:47:24
# Fork: 1 of 1
# Warmup Iteration   1: 1260.918 ns/op
# Warmup Iteration   2: 1014.734 ns/op
# Warmup Iteration   3: 997.049 ns/op
# Warmup Iteration   4: 993.000 ns/op
# Warmup Iteration   5: 991.948 ns/op
Iteration   1: 987.484 ns/op
Iteration   2: 1020.685 ns/op
Iteration   3: 1006.097 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1004.755 ±(99.9%) 303.590 ns/op [Average]
  (min, avg, max) = (987.484, 1004.755, 1020.685), stdev = 16.641
  CI (99.9%): [701.165, 1308.346] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 12.95% complete, ETA 00:47:09
# Fork: 1 of 1
# Warmup Iteration   1: 1432.419 ns/op
# Warmup Iteration   2: 1142.614 ns/op
# Warmup Iteration   3: 1122.145 ns/op
# Warmup Iteration   4: 1126.562 ns/op
# Warmup Iteration   5: 1135.381 ns/op
Iteration   1: 1126.851 ns/op
Iteration   2: 1129.440 ns/op
Iteration   3: 1151.582 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1135.958 ±(99.9%) 247.983 ns/op [Average]
  (min, avg, max) = (1126.851, 1135.958, 1151.582), stdev = 13.593
  CI (99.9%): [887.975, 1383.942] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 13.39% complete, ETA 00:46:55
# Fork: 1 of 1
# Warmup Iteration   1: 2214.321 ns/op
# Warmup Iteration   2: 1769.226 ns/op
# Warmup Iteration   3: 1748.626 ns/op
# Warmup Iteration   4: 1749.179 ns/op
# Warmup Iteration   5: 1750.531 ns/op
Iteration   1: 1764.427 ns/op
Iteration   2: 1754.762 ns/op
Iteration   3: 1777.046 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1765.412 ±(99.9%) 203.859 ns/op [Average]
  (min, avg, max) = (1754.762, 1765.412, 1777.046), stdev = 11.174
  CI (99.9%): [1561.553, 1969.271] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 13.84% complete, ETA 00:46:41
# Fork: 1 of 1
# Warmup Iteration   1: 3065.102 ns/op
# Warmup Iteration   2: 2618.486 ns/op
# Warmup Iteration   3: 2585.227 ns/op
# Warmup Iteration   4: 2588.678 ns/op
# Warmup Iteration   5: 2570.128 ns/op
Iteration   1: 2653.707 ns/op
Iteration   2: 2562.471 ns/op
Iteration   3: 2581.126 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  2599.101 ±(99.9%) 879.363 ns/op [Average]
  (min, avg, max) = (2562.471, 2599.101, 2653.707), stdev = 48.201
  CI (99.9%): [1719.738, 3478.465] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 14.29% complete, ETA 00:46:26
# Fork: 1 of 1
# Warmup Iteration   1: 10661.487 ns/op
# Warmup Iteration   2: 9620.654 ns/op
# Warmup Iteration   3: 9477.653 ns/op
# Warmup Iteration   4: 9463.762 ns/op
# Warmup Iteration   5: 9452.766 ns/op
Iteration   1: 9416.643 ns/op
Iteration   2: 9413.920 ns/op
Iteration   3: 9417.866 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  9416.143 ±(99.9%) 36.851 ns/op [Average]
  (min, avg, max) = (9413.920, 9416.143, 9417.866), stdev = 2.020
  CI (99.9%): [9379.292, 9452.994] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 14.73% complete, ETA 00:46:11
# Fork: 1 of 1
# Warmup Iteration   1: 14782.765 ns/op
# Warmup Iteration   2: 13452.588 ns/op
# Warmup Iteration   3: 13317.299 ns/op
# Warmup Iteration   4: 13249.688 ns/op
# Warmup Iteration   5: 13246.946 ns/op
Iteration   1: 13247.557 ns/op
Iteration   2: 13276.040 ns/op
Iteration   3: 13268.717 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  13264.105 ±(99.9%) 269.841 ns/op [Average]
  (min, avg, max) = (13247.557, 13264.105, 13276.040), stdev = 14.791
  CI (99.9%): [12994.264, 13533.945] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 15.18% complete, ETA 00:45:57
# Fork: 1 of 1
# Warmup Iteration   1: 133586.006 ns/op
# Warmup Iteration   2: 127829.043 ns/op
# Warmup Iteration   3: 122885.847 ns/op
# Warmup Iteration   4: 123211.140 ns/op
# Warmup Iteration   5: 122826.830 ns/op
Iteration   1: 122492.763 ns/op
Iteration   2: 121635.861 ns/op
Iteration   3: 121259.884 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  121796.169 ±(99.9%) 11527.836 ns/op [Average]
  (min, avg, max) = (121259.884, 121796.169, 122492.763), stdev = 631.880
  CI (99.9%): [110268.333, 133324.005] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 15.63% complete, ETA 00:45:42
# Fork: 1 of 1
# Warmup Iteration   1: 1223.827 ns/op
# Warmup Iteration   2: 985.524 ns/op
# Warmup Iteration   3: 982.720 ns/op
# Warmup Iteration   4: 975.153 ns/op
# Warmup Iteration   5: 970.539 ns/op
Iteration   1: 967.263 ns/op
Iteration   2: 992.571 ns/op
Iteration   3: 994.812 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  984.882 ±(99.9%) 279.116 ns/op [Average]
  (min, avg, max) = (967.263, 984.882, 994.812), stdev = 15.299
  CI (99.9%): [705.766, 1263.998] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 16.07% complete, ETA 00:45:27
# Fork: 1 of 1
# Warmup Iteration   1: 1254.944 ns/op
# Warmup Iteration   2: 1032.081 ns/op
# Warmup Iteration   3: 999.344 ns/op
# Warmup Iteration   4: 996.936 ns/op
# Warmup Iteration   5: 990.717 ns/op
Iteration   1: 988.218 ns/op
Iteration   2: 1003.170 ns/op
Iteration   3: 1005.851 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  999.080 ±(99.9%) 173.337 ns/op [Average]
  (min, avg, max) = (988.218, 999.080, 1005.851), stdev = 9.501
  CI (99.9%): [825.742, 1172.417] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 16.52% complete, ETA 00:45:13
# Fork: 1 of 1
# Warmup Iteration   1: 1639.279 ns/op
# Warmup Iteration   2: 1310.759 ns/op
# Warmup Iteration   3: 1292.031 ns/op
# Warmup Iteration   4: 1299.179 ns/op
# Warmup Iteration   5: 1296.109 ns/op
Iteration   1: 1310.579 ns/op
Iteration   2: 1292.621 ns/op
Iteration   3: 1291.166 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1298.122 ±(99.9%) 197.253 ns/op [Average]
  (min, avg, max) = (1291.166, 1298.122, 1310.579), stdev = 10.812
  CI (99.9%): [1100.869, 1495.375] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 16.96% complete, ETA 00:44:59
# Fork: 1 of 1
# Warmup Iteration   1: 2089.679 ns/op
# Warmup Iteration   2: 1710.546 ns/op
# Warmup Iteration   3: 1743.667 ns/op
# Warmup Iteration   4: 1697.587 ns/op
# Warmup Iteration   5: 1727.532 ns/op
Iteration   1: 1711.606 ns/op
Iteration   2: 1727.080 ns/op
Iteration   3: 1720.209 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1719.632 ±(99.9%) 141.449 ns/op [Average]
  (min, avg, max) = (1711.606, 1719.632, 1727.080), stdev = 7.753
  CI (99.9%): [1578.182, 1861.081] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 17.41% complete, ETA 00:44:44
# Fork: 1 of 1
# Warmup Iteration   1: 5864.512 ns/op
# Warmup Iteration   2: 5129.808 ns/op
# Warmup Iteration   3: 5062.377 ns/op
# Warmup Iteration   4: 5051.409 ns/op
# Warmup Iteration   5: 5046.281 ns/op
Iteration   1: 5049.621 ns/op
Iteration   2: 5055.295 ns/op
Iteration   3: 5035.608 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  5046.841 ±(99.9%) 184.877 ns/op [Average]
  (min, avg, max) = (5035.608, 5046.841, 5055.295), stdev = 10.134
  CI (99.9%): [4861.964, 5231.718] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 17.86% complete, ETA 00:44:29
# Fork: 1 of 1
# Warmup Iteration   1: 10522.155 ns/op
# Warmup Iteration   2: 9467.181 ns/op
# Warmup Iteration   3: 9411.536 ns/op
# Warmup Iteration   4: 9436.927 ns/op
# Warmup Iteration   5: 9599.030 ns/op
Iteration   1: 9356.848 ns/op
Iteration   2: 9366.727 ns/op
Iteration   3: 9611.716 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  9445.097 ±(99.9%) 2634.046 ns/op [Average]
  (min, avg, max) = (9356.848, 9445.097, 9611.716), stdev = 144.381
  CI (99.9%): [6811.050, 12079.143] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 18.30% complete, ETA 00:44:15
# Fork: 1 of 1
# Warmup Iteration   1: 100482.316 ns/op
# Warmup Iteration   2: 88432.214 ns/op
# Warmup Iteration   3: 88434.279 ns/op
# Warmup Iteration   4: 88049.206 ns/op
# Warmup Iteration   5: 88210.198 ns/op
Iteration   1: 88056.991 ns/op
Iteration   2: 87741.089 ns/op
Iteration   3: 87305.363 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  87701.148 ±(99.9%) 6885.226 ns/op [Average]
  (min, avg, max) = (87305.363, 87701.148, 88056.991), stdev = 377.402
  CI (99.9%): [80815.921, 94586.374] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 18.75% complete, ETA 00:44:00
# Fork: 1 of 1
# Warmup Iteration   1: 1335.934 ns/op
# Warmup Iteration   2: 1004.518 ns/op
# Warmup Iteration   3: 1060.877 ns/op
# Warmup Iteration   4: 970.038 ns/op
# Warmup Iteration   5: 979.444 ns/op
Iteration   1: 970.663 ns/op
Iteration   2: 972.962 ns/op
Iteration   3: 974.080 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  972.568 ±(99.9%) 31.785 ns/op [Average]
  (min, avg, max) = (970.663, 972.568, 974.080), stdev = 1.742
  CI (99.9%): [940.783, 1004.354] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 19.20% complete, ETA 00:43:46
# Fork: 1 of 1
# Warmup Iteration   1: 1300.432 ns/op
# Warmup Iteration   2: 1037.209 ns/op
# Warmup Iteration   3: 1017.264 ns/op
# Warmup Iteration   4: 1032.875 ns/op
# Warmup Iteration   5: 1050.566 ns/op
Iteration   1: 1012.670 ns/op
Iteration   2: 1009.066 ns/op
Iteration   3: 1014.787 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1012.174 ±(99.9%) 52.766 ns/op [Average]
  (min, avg, max) = (1009.066, 1012.174, 1014.787), stdev = 2.892
  CI (99.9%): [959.408, 1064.941] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 19.64% complete, ETA 00:43:31
# Fork: 1 of 1
# Warmup Iteration   1: 1948.629 ns/op
# Warmup Iteration   2: 1528.747 ns/op
# Warmup Iteration   3: 1498.022 ns/op
# Warmup Iteration   4: 1495.991 ns/op
# Warmup Iteration   5: 1493.812 ns/op
Iteration   1: 1496.193 ns/op
Iteration   2: 1490.420 ns/op
Iteration   3: 1489.932 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1492.182 ±(99.9%) 63.536 ns/op [Average]
  (min, avg, max) = (1489.932, 1492.182, 1496.193), stdev = 3.483
  CI (99.9%): [1428.646, 1555.718] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 20.09% complete, ETA 00:43:17
# Fork: 1 of 1
# Warmup Iteration   1: 2592.588 ns/op
# Warmup Iteration   2: 2254.451 ns/op
# Warmup Iteration   3: 2144.468 ns/op
# Warmup Iteration   4: 2160.400 ns/op
# Warmup Iteration   5: 2230.121 ns/op
Iteration   1: 2190.215 ns/op
Iteration   2: 2165.386 ns/op
Iteration   3: 2140.760 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  2165.453 ±(99.9%) 451.127 ns/op [Average]
  (min, avg, max) = (2140.760, 2165.453, 2190.215), stdev = 24.728
  CI (99.9%): [1714.326, 2616.581] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 20.54% complete, ETA 00:43:02
# Fork: 1 of 1
# Warmup Iteration   1: 8388.175 ns/op
# Warmup Iteration   2: 7423.343 ns/op
# Warmup Iteration   3: 7404.584 ns/op
# Warmup Iteration   4: 7346.447 ns/op
# Warmup Iteration   5: 7592.393 ns/op
Iteration   1: 7347.792 ns/op
Iteration   2: 7553.321 ns/op
Iteration   3: 7348.865 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  7416.659 ±(99.9%) 2159.211 ns/op [Average]
  (min, avg, max) = (7347.792, 7416.659, 7553.321), stdev = 118.354
  CI (99.9%): [5257.449, 9575.870] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 20.98% complete, ETA 00:42:47
# Fork: 1 of 1
# Warmup Iteration   1: 16171.145 ns/op
# Warmup Iteration   2: 14640.641 ns/op
# Warmup Iteration   3: 14543.559 ns/op
# Warmup Iteration   4: 14582.540 ns/op
# Warmup Iteration   5: 14314.838 ns/op
Iteration   1: 14385.085 ns/op
Iteration   2: 14263.195 ns/op
Iteration   3: 14434.250 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  14360.843 ±(99.9%) 1606.656 ns/op [Average]
  (min, avg, max) = (14263.195, 14360.843, 14434.250), stdev = 88.066
  CI (99.9%): [12754.187, 15967.500] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 21.43% complete, ETA 00:42:33
# Fork: 1 of 1
# Warmup Iteration   1: 146694.125 ns/op
# Warmup Iteration   2: 133851.138 ns/op
# Warmup Iteration   3: 133535.087 ns/op
# Warmup Iteration   4: 131835.599 ns/op
# Warmup Iteration   5: 133505.779 ns/op
Iteration   1: 133047.784 ns/op
Iteration   2: 132076.856 ns/op
Iteration   3: 132404.703 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  132509.781 ±(99.9%) 9010.931 ns/op [Average]
  (min, avg, max) = (132076.856, 132509.781, 133047.784), stdev = 493.920
  CI (99.9%): [123498.850, 141520.713] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 21.88% complete, ETA 00:42:18
# Fork: 1 of 1
# Warmup Iteration   1: 1219.504 ns/op
# Warmup Iteration   2: 984.410 ns/op
# Warmup Iteration   3: 1017.554 ns/op
# Warmup Iteration   4: 980.168 ns/op
# Warmup Iteration   5: 983.125 ns/op
Iteration   1: 1009.450 ns/op
Iteration   2: 970.744 ns/op
Iteration   3: 971.244 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  983.813 ±(99.9%) 405.093 ns/op [Average]
  (min, avg, max) = (970.744, 983.813, 1009.450), stdev = 22.204
  CI (99.9%): [578.720, 1388.905] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 22.32% complete, ETA 00:42:04
# Fork: 1 of 1
# Warmup Iteration   1: 1276.526 ns/op
# Warmup Iteration   2: 1081.824 ns/op
# Warmup Iteration   3: 1015.537 ns/op
# Warmup Iteration   4: 1016.675 ns/op
# Warmup Iteration   5: 998.831 ns/op
Iteration   1: 1014.672 ns/op
Iteration   2: 992.069 ns/op
Iteration   3: 995.822 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1000.854 ±(99.9%) 220.986 ns/op [Average]
  (min, avg, max) = (992.069, 1000.854, 1014.672), stdev = 12.113
  CI (99.9%): [779.868, 1221.840] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 22.77% complete, ETA 00:41:49
# Fork: 1 of 1
# Warmup Iteration   1: 1778.361 ns/op
# Warmup Iteration   2: 1395.522 ns/op
# Warmup Iteration   3: 1366.496 ns/op
# Warmup Iteration   4: 1339.657 ns/op
# Warmup Iteration   5: 1603.147 ns/op
Iteration   1: 1331.680 ns/op
Iteration   2: 1350.993 ns/op
Iteration   3: 1341.886 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1341.519 ±(99.9%) 176.264 ns/op [Average]
  (min, avg, max) = (1331.680, 1341.519, 1350.993), stdev = 9.662
  CI (99.9%): [1165.255, 1517.784] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 23.21% complete, ETA 00:41:35
# Fork: 1 of 1
# Warmup Iteration   1: 2229.913 ns/op
# Warmup Iteration   2: 1844.058 ns/op
# Warmup Iteration   3: 1830.621 ns/op
# Warmup Iteration   4: 1847.531 ns/op
# Warmup Iteration   5: 1842.442 ns/op
Iteration   1: 1836.347 ns/op
Iteration   2: 1826.187 ns/op
Iteration   3: 1862.556 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1841.696 ±(99.9%) 342.349 ns/op [Average]
  (min, avg, max) = (1826.187, 1841.696, 1862.556), stdev = 18.765
  CI (99.9%): [1499.347, 2184.046] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 23.66% complete, ETA 00:41:20
# Fork: 1 of 1
# Warmup Iteration   1: 6767.592 ns/op
# Warmup Iteration   2: 5828.274 ns/op
# Warmup Iteration   3: 5759.777 ns/op
# Warmup Iteration   4: 5779.096 ns/op
# Warmup Iteration   5: 5805.493 ns/op
Iteration   1: 5803.219 ns/op
Iteration   2: 5782.676 ns/op
Iteration   3: 5785.817 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  5790.571 ±(99.9%) 201.884 ns/op [Average]
  (min, avg, max) = (5782.676, 5790.571, 5803.219), stdev = 11.066
  CI (99.9%): [5588.686, 5992.455] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 24.11% complete, ETA 00:41:06
# Fork: 1 of 1
# Warmup Iteration   1: 12178.711 ns/op
# Warmup Iteration   2: 11036.392 ns/op
# Warmup Iteration   3: 11026.366 ns/op
# Warmup Iteration   4: 10975.810 ns/op
# Warmup Iteration   5: 10928.727 ns/op
Iteration   1: 10961.273 ns/op
Iteration   2: 10951.177 ns/op
Iteration   3: 10975.381 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  10962.610 ±(99.9%) 221.791 ns/op [Average]
  (min, avg, max) = (10951.177, 10962.610, 10975.381), stdev = 12.157
  CI (99.9%): [10740.820, 11184.401] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 24.55% complete, ETA 00:40:51
# Fork: 1 of 1
# Warmup Iteration   1: 114769.504 ns/op
# Warmup Iteration   2: 102277.163 ns/op
# Warmup Iteration   3: 102003.964 ns/op
# Warmup Iteration   4: 102592.249 ns/op
# Warmup Iteration   5: 102539.298 ns/op
Iteration   1: 102784.278 ns/op
Iteration   2: 104778.965 ns/op
Iteration   3: 104024.498 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  103862.580 ±(99.9%) 18374.221 ns/op [Average]
  (min, avg, max) = (102784.278, 103862.580, 104778.965), stdev = 1007.153
  CI (99.9%): [85488.359, 122236.802] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 25.00% complete, ETA 00:40:37
# Fork: 1 of 1
# Warmup Iteration   1: 48.248 ns/op
# Warmup Iteration   2: 45.500 ns/op
# Warmup Iteration   3: 42.754 ns/op
# Warmup Iteration   4: 42.739 ns/op
# Warmup Iteration   5: 42.712 ns/op
Iteration   1: 43.015 ns/op
Iteration   2: 42.693 ns/op
Iteration   3: 42.740 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  42.816 ±(99.9%) 3.171 ns/op [Average]
  (min, avg, max) = (42.693, 42.816, 43.015), stdev = 0.174
  CI (99.9%): [39.645, 45.986] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 25.45% complete, ETA 00:40:22
# Fork: 1 of 1
# Warmup Iteration   1: 71.287 ns/op
# Warmup Iteration   2: 67.662 ns/op
# Warmup Iteration   3: 64.402 ns/op
# Warmup Iteration   4: 64.396 ns/op
# Warmup Iteration   5: 63.865 ns/op
Iteration   1: 63.879 ns/op
Iteration   2: 63.994 ns/op
Iteration   3: 63.949 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  63.940 ±(99.9%) 1.051 ns/op [Average]
  (min, avg, max) = (63.879, 63.940, 63.994), stdev = 0.058
  CI (99.9%): [62.889, 64.992] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 25.89% complete, ETA 00:40:07
# Fork: 1 of 1
# Warmup Iteration   1: 209.859 ns/op
# Warmup Iteration   2: 190.361 ns/op
# Warmup Iteration   3: 185.988 ns/op
# Warmup Iteration   4: 185.189 ns/op
# Warmup Iteration   5: 185.261 ns/op
Iteration   1: 184.859 ns/op
Iteration   2: 184.675 ns/op
Iteration   3: 184.995 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  184.843 ±(99.9%) 2.935 ns/op [Average]
  (min, avg, max) = (184.675, 184.843, 184.995), stdev = 0.161
  CI (99.9%): [181.908, 187.778] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 26.34% complete, ETA 00:39:53
# Fork: 1 of 1
# Warmup Iteration   1: 331.309 ns/op
# Warmup Iteration   2: 311.538 ns/op
# Warmup Iteration   3: 307.347 ns/op
# Warmup Iteration   4: 307.245 ns/op
# Warmup Iteration   5: 306.633 ns/op
Iteration   1: 305.694 ns/op
Iteration   2: 312.447 ns/op
Iteration   3: 315.846 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  311.329 ±(99.9%) 94.276 ns/op [Average]
  (min, avg, max) = (305.694, 311.329, 315.846), stdev = 5.168
  CI (99.9%): [217.053, 405.605] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 26.79% complete, ETA 00:39:38
# Fork: 1 of 1
# Warmup Iteration   1: 1273.694 ns/op
# Warmup Iteration   2: 1190.436 ns/op
# Warmup Iteration   3: 1163.913 ns/op
# Warmup Iteration   4: 1162.596 ns/op
# Warmup Iteration   5: 1162.948 ns/op
Iteration   1: 1159.291 ns/op
Iteration   2: 1159.135 ns/op
Iteration   3: 1159.494 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  1159.307 ±(99.9%) 3.282 ns/op [Average]
  (min, avg, max) = (1159.135, 1159.307, 1159.494), stdev = 0.180
  CI (99.9%): [1156.024, 1162.589] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 27.23% complete, ETA 00:39:24
# Fork: 1 of 1
# Warmup Iteration   1: 2790.552 ns/op
# Warmup Iteration   2: 2803.983 ns/op
# Warmup Iteration   3: 2589.904 ns/op
# Warmup Iteration   4: 2614.715 ns/op
# Warmup Iteration   5: 2566.804 ns/op
Iteration   1: 2567.483 ns/op
Iteration   2: 2576.237 ns/op
Iteration   3: 2564.138 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  2569.286 ±(99.9%) 113.985 ns/op [Average]
  (min, avg, max) = (2564.138, 2569.286, 2576.237), stdev = 6.248
  CI (99.9%): [2455.301, 2683.271] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 27.68% complete, ETA 00:39:09
# Fork: 1 of 1
# Warmup Iteration   1: 25218.878 ns/op
# Warmup Iteration   2: 26438.856 ns/op
# Warmup Iteration   3: 23134.570 ns/op
# Warmup Iteration   4: 23297.046 ns/op
# Warmup Iteration   5: 23293.711 ns/op
Iteration   1: 23083.015 ns/op
Iteration   2: 23098.262 ns/op
Iteration   3: 23090.986 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  23090.754 ±(99.9%) 139.127 ns/op [Average]
  (min, avg, max) = (23083.015, 23090.754, 23098.262), stdev = 7.626
  CI (99.9%): [22951.627, 23229.881] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 28.13% complete, ETA 00:38:54
# Fork: 1 of 1
# Warmup Iteration   1: 38.490 ns/op
# Warmup Iteration   2: 36.647 ns/op
# Warmup Iteration   3: 35.146 ns/op
# Warmup Iteration   4: 34.969 ns/op
# Warmup Iteration   5: 34.993 ns/op
Iteration   1: 35.033 ns/op
Iteration   2: 35.096 ns/op
Iteration   3: 34.995 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  35.041 ±(99.9%) 0.932 ns/op [Average]
  (min, avg, max) = (34.995, 35.041, 35.096), stdev = 0.051
  CI (99.9%): [34.109, 35.974] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 28.57% complete, ETA 00:38:40
# Fork: 1 of 1
# Warmup Iteration   1: 52.281 ns/op
# Warmup Iteration   2: 49.679 ns/op
# Warmup Iteration   3: 48.141 ns/op
# Warmup Iteration   4: 48.115 ns/op
# Warmup Iteration   5: 48.094 ns/op
Iteration   1: 47.888 ns/op
Iteration   2: 48.134 ns/op
Iteration   3: 47.948 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  47.990 ±(99.9%) 2.340 ns/op [Average]
  (min, avg, max) = (47.888, 47.990, 48.134), stdev = 0.128
  CI (99.9%): [45.650, 50.331] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 29.02% complete, ETA 00:38:25
# Fork: 1 of 1
# Warmup Iteration   1: 124.678 ns/op
# Warmup Iteration   2: 117.949 ns/op
# Warmup Iteration   3: 115.600 ns/op
# Warmup Iteration   4: 119.412 ns/op
# Warmup Iteration   5: 115.441 ns/op
Iteration   1: 115.360 ns/op
Iteration   2: 115.260 ns/op
Iteration   3: 115.195 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  115.272 ±(99.9%) 1.514 ns/op [Average]
  (min, avg, max) = (115.195, 115.272, 115.360), stdev = 0.083
  CI (99.9%): [113.758, 116.786] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 29.46% complete, ETA 00:38:11
# Fork: 1 of 1
# Warmup Iteration   1: 229.201 ns/op
# Warmup Iteration   2: 215.228 ns/op
# Warmup Iteration   3: 210.864 ns/op
# Warmup Iteration   4: 210.151 ns/op
# Warmup Iteration   5: 210.175 ns/op
Iteration   1: 210.585 ns/op
Iteration   2: 210.472 ns/op
Iteration   3: 210.660 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  210.572 ±(99.9%) 1.729 ns/op [Average]
  (min, avg, max) = (210.472, 210.572, 210.660), stdev = 0.095
  CI (99.9%): [208.843, 212.302] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 29.91% complete, ETA 00:37:56
# Fork: 1 of 1
# Warmup Iteration   1: 953.357 ns/op
# Warmup Iteration   2: 891.502 ns/op
# Warmup Iteration   3: 882.072 ns/op
# Warmup Iteration   4: 875.487 ns/op
# Warmup Iteration   5: 873.292 ns/op
Iteration   1: 875.411 ns/op
Iteration   2: 875.496 ns/op
Iteration   3: 876.150 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  875.685 ±(99.9%) 7.381 ns/op [Average]
  (min, avg, max) = (875.411, 875.685, 876.150), stdev = 0.405
  CI (99.9%): [868.304, 883.067] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 30.36% complete, ETA 00:37:42
# Fork: 1 of 1
# Warmup Iteration   1: 1885.254 ns/op
# Warmup Iteration   2: 1774.464 ns/op
# Warmup Iteration   3: 1739.749 ns/op
# Warmup Iteration   4: 1746.066 ns/op
# Warmup Iteration   5: 1738.443 ns/op
Iteration   1: 1735.910 ns/op
Iteration   2: 1739.693 ns/op
Iteration   3: 1737.921 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  1737.841 ±(99.9%) 34.535 ns/op [Average]
  (min, avg, max) = (1735.910, 1737.841, 1739.693), stdev = 1.893
  CI (99.9%): [1703.306, 1772.377] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 30.80% complete, ETA 00:37:27
# Fork: 1 of 1
# Warmup Iteration   1: 20340.586 ns/op
# Warmup Iteration   2: 17957.185 ns/op
# Warmup Iteration   3: 17764.066 ns/op
# Warmup Iteration   4: 17709.636 ns/op
# Warmup Iteration   5: 17626.536 ns/op
Iteration   1: 18110.206 ns/op
Iteration   2: 17637.136 ns/op
Iteration   3: 17871.271 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  17872.871 ±(99.9%) 4315.345 ns/op [Average]
  (min, avg, max) = (17637.136, 17872.871, 18110.206), stdev = 236.539
  CI (99.9%): [13557.526, 22188.216] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 31.25% complete, ETA 00:37:13
# Fork: 1 of 1
# Warmup Iteration   1: 41.857 ns/op
# Warmup Iteration   2: 39.201 ns/op
# Warmup Iteration   3: 37.179 ns/op
# Warmup Iteration   4: 37.251 ns/op
# Warmup Iteration   5: 37.463 ns/op
Iteration   1: 37.234 ns/op
Iteration   2: 37.199 ns/op
Iteration   3: 38.333 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  37.589 ±(99.9%) 11.765 ns/op [Average]
  (min, avg, max) = (37.199, 37.589, 38.333), stdev = 0.645
  CI (99.9%): [25.824, 49.353] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 31.70% complete, ETA 00:36:58
# Fork: 1 of 1
# Warmup Iteration   1: 62.092 ns/op
# Warmup Iteration   2: 58.160 ns/op
# Warmup Iteration   3: 56.325 ns/op
# Warmup Iteration   4: 56.318 ns/op
# Warmup Iteration   5: 56.132 ns/op
Iteration   1: 55.981 ns/op
Iteration   2: 55.987 ns/op
Iteration   3: 55.960 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  55.976 ±(99.9%) 0.262 ns/op [Average]
  (min, avg, max) = (55.960, 55.976, 55.987), stdev = 0.014
  CI (99.9%): [55.714, 56.238] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 32.14% complete, ETA 00:36:43
# Fork: 1 of 1
# Warmup Iteration   1: 107.710 ns/op
# Warmup Iteration   2: 101.201 ns/op
# Warmup Iteration   3: 96.995 ns/op
# Warmup Iteration   4: 95.482 ns/op
# Warmup Iteration   5: 96.535 ns/op
Iteration   1: 96.262 ns/op
Iteration   2: 95.532 ns/op
Iteration   3: 95.401 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  95.732 ±(99.9%) 8.462 ns/op [Average]
  (min, avg, max) = (95.401, 95.732, 96.262), stdev = 0.464
  CI (99.9%): [87.270, 104.194] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 32.59% complete, ETA 00:36:29
# Fork: 1 of 1
# Warmup Iteration   1: 171.216 ns/op
# Warmup Iteration   2: 153.485 ns/op
# Warmup Iteration   3: 153.235 ns/op
# Warmup Iteration   4: 149.312 ns/op
# Warmup Iteration   5: 149.190 ns/op
Iteration   1: 149.196 ns/op
Iteration   2: 149.328 ns/op
Iteration   3: 148.863 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  149.129 ±(99.9%) 4.369 ns/op [Average]
  (min, avg, max) = (148.863, 149.129, 149.328), stdev = 0.239
  CI (99.9%): [144.760, 153.498] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 33.04% complete, ETA 00:36:14
# Fork: 1 of 1
# Warmup Iteration   1: 660.868 ns/op
# Warmup Iteration   2: 593.475 ns/op
# Warmup Iteration   3: 590.840 ns/op
# Warmup Iteration   4: 602.158 ns/op
# Warmup Iteration   5: 588.750 ns/op
Iteration   1: 591.299 ns/op
Iteration   2: 592.859 ns/op
Iteration   3: 590.334 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  591.497 ±(99.9%) 23.240 ns/op [Average]
  (min, avg, max) = (590.334, 591.497, 592.859), stdev = 1.274
  CI (99.9%): [568.258, 614.737] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 33.48% complete, ETA 00:36:00
# Fork: 1 of 1
# Warmup Iteration   1: 1288.460 ns/op
# Warmup Iteration   2: 1153.309 ns/op
# Warmup Iteration   3: 1168.380 ns/op
# Warmup Iteration   4: 1145.156 ns/op
# Warmup Iteration   5: 1142.430 ns/op
Iteration   1: 1141.819 ns/op
Iteration   2: 1144.462 ns/op
Iteration   3: 1159.547 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  1148.609 ±(99.9%) 174.483 ns/op [Average]
  (min, avg, max) = (1141.819, 1148.609, 1159.547), stdev = 9.564
  CI (99.9%): [974.126, 1323.092] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 33.93% complete, ETA 00:35:45
# Fork: 1 of 1
# Warmup Iteration   1: 14630.392 ns/op
# Warmup Iteration   2: 12545.876 ns/op
# Warmup Iteration   3: 12395.045 ns/op
# Warmup Iteration   4: 12374.875 ns/op
# Warmup Iteration   5: 12430.356 ns/op
Iteration   1: 12385.772 ns/op
Iteration   2: 12416.927 ns/op
Iteration   3: 12403.434 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  12402.045 ±(99.9%) 285.040 ns/op [Average]
  (min, avg, max) = (12385.772, 12402.045, 12416.927), stdev = 15.624
  CI (99.9%): [12117.004, 12687.085] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 34.38% complete, ETA 00:35:31
# Fork: 1 of 1
# Warmup Iteration   1: 39.751 ns/op
# Warmup Iteration   2: 34.153 ns/op
# Warmup Iteration   3: 34.363 ns/op
# Warmup Iteration   4: 32.935 ns/op
# Warmup Iteration   5: 32.930 ns/op
Iteration   1: 32.883 ns/op
Iteration   2: 32.950 ns/op
Iteration   3: 33.152 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  32.995 ±(99.9%) 2.553 ns/op [Average]
  (min, avg, max) = (32.883, 32.995, 33.152), stdev = 0.140
  CI (99.9%): [30.443, 35.548] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 34.82% complete, ETA 00:35:16
# Fork: 1 of 1
# Warmup Iteration   1: 52.935 ns/op
# Warmup Iteration   2: 49.451 ns/op
# Warmup Iteration   3: 48.125 ns/op
# Warmup Iteration   4: 48.204 ns/op
# Warmup Iteration   5: 48.284 ns/op
Iteration   1: 48.410 ns/op
Iteration   2: 48.259 ns/op
Iteration   3: 48.262 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  48.310 ±(99.9%) 1.574 ns/op [Average]
  (min, avg, max) = (48.259, 48.310, 48.410), stdev = 0.086
  CI (99.9%): [46.736, 49.884] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 35.27% complete, ETA 00:35:02
# Fork: 1 of 1
# Warmup Iteration   1: 93.551 ns/op
# Warmup Iteration   2: 88.941 ns/op
# Warmup Iteration   3: 84.329 ns/op
# Warmup Iteration   4: 84.272 ns/op
# Warmup Iteration   5: 84.290 ns/op
Iteration   1: 84.484 ns/op
Iteration   2: 84.457 ns/op
Iteration   3: 84.526 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  84.489 ±(99.9%) 0.626 ns/op [Average]
  (min, avg, max) = (84.457, 84.489, 84.526), stdev = 0.034
  CI (99.9%): [83.863, 85.115] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 35.71% complete, ETA 00:34:47
# Fork: 1 of 1
# Warmup Iteration   1: 143.592 ns/op
# Warmup Iteration   2: 138.840 ns/op
# Warmup Iteration   3: 130.968 ns/op
# Warmup Iteration   4: 127.459 ns/op
# Warmup Iteration   5: 127.250 ns/op
Iteration   1: 127.109 ns/op
Iteration   2: 127.188 ns/op
Iteration   3: 129.592 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  127.963 ±(99.9%) 25.752 ns/op [Average]
  (min, avg, max) = (127.109, 127.963, 129.592), stdev = 1.412
  CI (99.9%): [102.211, 153.715] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 36.16% complete, ETA 00:34:33
# Fork: 1 of 1
# Warmup Iteration   1: 507.189 ns/op
# Warmup Iteration   2: 466.162 ns/op
# Warmup Iteration   3: 469.870 ns/op
# Warmup Iteration   4: 457.603 ns/op
# Warmup Iteration   5: 457.908 ns/op
Iteration   1: 457.197 ns/op
Iteration   2: 456.683 ns/op
Iteration   3: 463.380 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  459.086 ±(99.9%) 67.990 ns/op [Average]
  (min, avg, max) = (456.683, 459.086, 463.380), stdev = 3.727
  CI (99.9%): [391.096, 527.077] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 36.61% complete, ETA 00:34:18
# Fork: 1 of 1
# Warmup Iteration   1: 972.840 ns/op
# Warmup Iteration   2: 882.101 ns/op
# Warmup Iteration   3: 907.959 ns/op
# Warmup Iteration   4: 875.932 ns/op
# Warmup Iteration   5: 869.599 ns/op
Iteration   1: 870.475 ns/op
Iteration   2: 873.819 ns/op
Iteration   3: 872.497 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  872.264 ±(99.9%) 30.726 ns/op [Average]
  (min, avg, max) = (870.475, 872.264, 873.819), stdev = 1.684
  CI (99.9%): [841.537, 902.990] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 37.05% complete, ETA 00:34:04
# Fork: 1 of 1
# Warmup Iteration   1: 11997.644 ns/op
# Warmup Iteration   2: 9426.376 ns/op
# Warmup Iteration   3: 9463.283 ns/op
# Warmup Iteration   4: 9268.823 ns/op
# Warmup Iteration   5: 9284.396 ns/op
Iteration   1: 9225.084 ns/op
Iteration   2: 9222.054 ns/op
Iteration   3: 9218.593 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  9221.910 ±(99.9%) 59.248 ns/op [Average]
  (min, avg, max) = (9218.593, 9221.910, 9225.084), stdev = 3.248
  CI (99.9%): [9162.662, 9281.159] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 37.50% complete, ETA 00:33:49
# Fork: 1 of 1
# Warmup Iteration   1: 45.702 ns/op
# Warmup Iteration   2: 42.066 ns/op
# Warmup Iteration   3: 40.374 ns/op
# Warmup Iteration   4: 41.820 ns/op
# Warmup Iteration   5: 40.341 ns/op
Iteration   1: 40.380 ns/op
Iteration   2: 40.446 ns/op
Iteration   3: 40.448 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  40.425 ±(99.9%) 0.702 ns/op [Average]
  (min, avg, max) = (40.380, 40.425, 40.448), stdev = 0.038
  CI (99.9%): [39.723, 41.126] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 37.95% complete, ETA 00:33:34
# Fork: 1 of 1
# Warmup Iteration   1: 70.737 ns/op
# Warmup Iteration   2: 66.972 ns/op
# Warmup Iteration   3: 65.171 ns/op
# Warmup Iteration   4: 64.873 ns/op
# Warmup Iteration   5: 66.085 ns/op
Iteration   1: 64.511 ns/op
Iteration   2: 64.468 ns/op
Iteration   3: 64.559 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  64.512 ±(99.9%) 0.834 ns/op [Average]
  (min, avg, max) = (64.468, 64.512, 64.559), stdev = 0.046
  CI (99.9%): [63.679, 65.346] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 38.39% complete, ETA 00:33:20
# Fork: 1 of 1
# Warmup Iteration   1: 190.522 ns/op
# Warmup Iteration   2: 180.448 ns/op
# Warmup Iteration   3: 174.821 ns/op
# Warmup Iteration   4: 174.983 ns/op
# Warmup Iteration   5: 174.473 ns/op
Iteration   1: 174.525 ns/op
Iteration   2: 174.691 ns/op
Iteration   3: 176.369 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  175.195 ±(99.9%) 18.605 ns/op [Average]
  (min, avg, max) = (174.525, 175.195, 176.369), stdev = 1.020
  CI (99.9%): [156.590, 193.800] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 38.84% complete, ETA 00:33:05
# Fork: 1 of 1
# Warmup Iteration   1: 323.324 ns/op
# Warmup Iteration   2: 303.615 ns/op
# Warmup Iteration   3: 312.762 ns/op
# Warmup Iteration   4: 297.066 ns/op
# Warmup Iteration   5: 297.076 ns/op
Iteration   1: 296.870 ns/op
Iteration   2: 296.250 ns/op
Iteration   3: 296.512 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  296.544 ±(99.9%) 5.674 ns/op [Average]
  (min, avg, max) = (296.250, 296.544, 296.870), stdev = 0.311
  CI (99.9%): [290.870, 302.218] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 39.29% complete, ETA 00:32:51
# Fork: 1 of 1
# Warmup Iteration   1: 1398.736 ns/op
# Warmup Iteration   2: 1301.281 ns/op
# Warmup Iteration   3: 1281.233 ns/op
# Warmup Iteration   4: 1283.137 ns/op
# Warmup Iteration   5: 1283.077 ns/op
Iteration   1: 1280.798 ns/op
Iteration   2: 1280.783 ns/op
Iteration   3: 1279.653 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  1280.411 ±(99.9%) 11.977 ns/op [Average]
  (min, avg, max) = (1279.653, 1280.411, 1280.798), stdev = 0.657
  CI (99.9%): [1268.434, 1292.389] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 39.73% complete, ETA 00:32:36
# Fork: 1 of 1
# Warmup Iteration   1: 2785.814 ns/op
# Warmup Iteration   2: 2806.829 ns/op
# Warmup Iteration   3: 2573.176 ns/op
# Warmup Iteration   4: 2548.925 ns/op
# Warmup Iteration   5: 2548.939 ns/op
Iteration   1: 2547.722 ns/op
Iteration   2: 2549.327 ns/op
Iteration   3: 2549.029 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  2548.693 ±(99.9%) 15.583 ns/op [Average]
  (min, avg, max) = (2547.722, 2548.693, 2549.327), stdev = 0.854
  CI (99.9%): [2533.109, 2564.276] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 40.18% complete, ETA 00:32:22
# Fork: 1 of 1
# Warmup Iteration   1: 27957.723 ns/op
# Warmup Iteration   2: 26108.698 ns/op
# Warmup Iteration   3: 25900.281 ns/op
# Warmup Iteration   4: 25776.257 ns/op
# Warmup Iteration   5: 25909.659 ns/op
Iteration   1: 25765.819 ns/op
Iteration   2: 25814.145 ns/op
Iteration   3: 25761.397 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  25780.454 ±(99.9%) 533.836 ns/op [Average]
  (min, avg, max) = (25761.397, 25780.454, 25814.145), stdev = 29.261
  CI (99.9%): [25246.618, 26314.290] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 40.63% complete, ETA 00:32:07
# Fork: 1 of 1
# Warmup Iteration   1: 38.813 ns/op
# Warmup Iteration   2: 35.743 ns/op
# Warmup Iteration   3: 34.464 ns/op
# Warmup Iteration   4: 34.408 ns/op
# Warmup Iteration   5: 34.401 ns/op
Iteration   1: 34.308 ns/op
Iteration   2: 34.464 ns/op
Iteration   3: 34.446 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  34.406 ±(99.9%) 1.560 ns/op [Average]
  (min, avg, max) = (34.308, 34.406, 34.464), stdev = 0.085
  CI (99.9%): [32.847, 35.966] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 41.07% complete, ETA 00:31:53
# Fork: 1 of 1
# Warmup Iteration   1: 52.323 ns/op
# Warmup Iteration   2: 49.978 ns/op
# Warmup Iteration   3: 47.898 ns/op
# Warmup Iteration   4: 47.929 ns/op
# Warmup Iteration   5: 47.800 ns/op
Iteration   1: 48.007 ns/op
Iteration   2: 48.523 ns/op
Iteration   3: 48.002 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  48.177 ±(99.9%) 5.456 ns/op [Average]
  (min, avg, max) = (48.002, 48.177, 48.523), stdev = 0.299
  CI (99.9%): [42.721, 53.633] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 41.52% complete, ETA 00:31:38
# Fork: 1 of 1
# Warmup Iteration   1: 123.863 ns/op
# Warmup Iteration   2: 117.343 ns/op
# Warmup Iteration   3: 114.194 ns/op
# Warmup Iteration   4: 113.338 ns/op
# Warmup Iteration   5: 119.590 ns/op
Iteration   1: 115.157 ns/op
Iteration   2: 113.610 ns/op
Iteration   3: 113.346 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  114.038 ±(99.9%) 17.843 ns/op [Average]
  (min, avg, max) = (113.346, 114.038, 115.157), stdev = 0.978
  CI (99.9%): [96.195, 131.881] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 41.96% complete, ETA 00:31:24
# Fork: 1 of 1
# Warmup Iteration   1: 228.645 ns/op
# Warmup Iteration   2: 214.620 ns/op
# Warmup Iteration   3: 211.363 ns/op
# Warmup Iteration   4: 211.514 ns/op
# Warmup Iteration   5: 210.714 ns/op
Iteration   1: 210.432 ns/op
Iteration   2: 210.639 ns/op
Iteration   3: 211.116 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  210.729 ±(99.9%) 6.402 ns/op [Average]
  (min, avg, max) = (210.432, 210.729, 211.116), stdev = 0.351
  CI (99.9%): [204.326, 217.131] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 42.41% complete, ETA 00:31:09
# Fork: 1 of 1
# Warmup Iteration   1: 952.846 ns/op
# Warmup Iteration   2: 910.350 ns/op
# Warmup Iteration   3: 874.604 ns/op
# Warmup Iteration   4: 873.011 ns/op
# Warmup Iteration   5: 871.963 ns/op
Iteration   1: 872.948 ns/op
Iteration   2: 872.509 ns/op
Iteration   3: 875.633 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  873.697 ±(99.9%) 30.859 ns/op [Average]
  (min, avg, max) = (872.509, 873.697, 875.633), stdev = 1.692
  CI (99.9%): [842.837, 904.556] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 42.86% complete, ETA 00:30:55
# Fork: 1 of 1
# Warmup Iteration   1: 1891.330 ns/op
# Warmup Iteration   2: 1774.546 ns/op
# Warmup Iteration   3: 1739.281 ns/op
# Warmup Iteration   4: 1731.375 ns/op
# Warmup Iteration   5: 1730.496 ns/op
Iteration   1: 1736.940 ns/op
Iteration   2: 1736.569 ns/op
Iteration   3: 1772.013 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  1748.507 ±(99.9%) 371.403 ns/op [Average]
  (min, avg, max) = (1736.569, 1748.507, 1772.013), stdev = 20.358
  CI (99.9%): [1377.104, 2119.910] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 43.30% complete, ETA 00:30:40
# Fork: 1 of 1
# Warmup Iteration   1: 19623.046 ns/op
# Warmup Iteration   2: 17969.665 ns/op
# Warmup Iteration   3: 17792.579 ns/op
# Warmup Iteration   4: 17752.322 ns/op
# Warmup Iteration   5: 17876.502 ns/op
Iteration   1: 17661.956 ns/op
Iteration   2: 17617.941 ns/op
Iteration   3: 17617.251 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  17632.383 ±(99.9%) 467.295 ns/op [Average]
  (min, avg, max) = (17617.251, 17632.383, 17661.956), stdev = 25.614
  CI (99.9%): [17165.088, 18099.677] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 43.75% complete, ETA 00:30:26
# Fork: 1 of 1
# Warmup Iteration   1: 41.190 ns/op
# Warmup Iteration   2: 38.971 ns/op
# Warmup Iteration   3: 36.822 ns/op
# Warmup Iteration   4: 36.732 ns/op
# Warmup Iteration   5: 36.960 ns/op
Iteration   1: 36.587 ns/op
Iteration   2: 36.557 ns/op
Iteration   3: 36.763 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  36.636 ±(99.9%) 2.027 ns/op [Average]
  (min, avg, max) = (36.557, 36.636, 36.763), stdev = 0.111
  CI (99.9%): [34.609, 38.662] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 44.20% complete, ETA 00:30:11
# Fork: 1 of 1
# Warmup Iteration   1: 63.353 ns/op
# Warmup Iteration   2: 60.631 ns/op
# Warmup Iteration   3: 56.769 ns/op
# Warmup Iteration   4: 56.826 ns/op
# Warmup Iteration   5: 57.884 ns/op
Iteration   1: 56.733 ns/op
Iteration   2: 57.169 ns/op
Iteration   3: 56.888 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  56.930 ±(99.9%) 4.026 ns/op [Average]
  (min, avg, max) = (56.733, 56.930, 57.169), stdev = 0.221
  CI (99.9%): [52.904, 60.956] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 44.64% complete, ETA 00:29:57
# Fork: 1 of 1
# Warmup Iteration   1: 111.031 ns/op
# Warmup Iteration   2: 107.646 ns/op
# Warmup Iteration   3: 99.095 ns/op
# Warmup Iteration   4: 98.801 ns/op
# Warmup Iteration   5: 98.765 ns/op
Iteration   1: 98.780 ns/op
Iteration   2: 99.552 ns/op
Iteration   3: 99.199 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  99.177 ±(99.9%) 7.052 ns/op [Average]
  (min, avg, max) = (98.780, 99.177, 99.552), stdev = 0.387
  CI (99.9%): [92.125, 106.229] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 45.09% complete, ETA 00:29:42
# Fork: 1 of 1
# Warmup Iteration   1: 169.134 ns/op
# Warmup Iteration   2: 155.703 ns/op
# Warmup Iteration   3: 151.325 ns/op
# Warmup Iteration   4: 152.549 ns/op
# Warmup Iteration   5: 151.666 ns/op
Iteration   1: 151.442 ns/op
Iteration   2: 151.904 ns/op
Iteration   3: 151.536 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  151.627 ±(99.9%) 4.453 ns/op [Average]
  (min, avg, max) = (151.442, 151.627, 151.904), stdev = 0.244
  CI (99.9%): [147.175, 156.080] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 45.54% complete, ETA 00:29:28
# Fork: 1 of 1
# Warmup Iteration   1: 664.007 ns/op
# Warmup Iteration   2: 596.420 ns/op
# Warmup Iteration   3: 586.876 ns/op
# Warmup Iteration   4: 586.084 ns/op
# Warmup Iteration   5: 600.706 ns/op
Iteration   1: 594.246 ns/op
Iteration   2: 590.518 ns/op
Iteration   3: 587.001 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  590.588 ±(99.9%) 66.100 ns/op [Average]
  (min, avg, max) = (587.001, 590.588, 594.246), stdev = 3.623
  CI (99.9%): [524.488, 656.689] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 45.98% complete, ETA 00:29:13
# Fork: 1 of 1
# Warmup Iteration   1: 1310.423 ns/op
# Warmup Iteration   2: 1153.056 ns/op
# Warmup Iteration   3: 1171.846 ns/op
# Warmup Iteration   4: 1183.366 ns/op
# Warmup Iteration   5: 1143.283 ns/op
Iteration   1: 1140.640 ns/op
Iteration   2: 1143.327 ns/op
Iteration   3: 1146.437 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  1143.468 ±(99.9%) 52.932 ns/op [Average]
  (min, avg, max) = (1140.640, 1143.468, 1146.437), stdev = 2.901
  CI (99.9%): [1090.536, 1196.400] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 46.43% complete, ETA 00:28:59
# Fork: 1 of 1
# Warmup Iteration   1: 14776.224 ns/op
# Warmup Iteration   2: 12542.030 ns/op
# Warmup Iteration   3: 12467.532 ns/op
# Warmup Iteration   4: 12367.045 ns/op
# Warmup Iteration   5: 12376.655 ns/op
Iteration   1: 12443.903 ns/op
Iteration   2: 12379.006 ns/op
Iteration   3: 12388.577 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  12403.828 ±(99.9%) 639.148 ns/op [Average]
  (min, avg, max) = (12379.006, 12403.828, 12443.903), stdev = 35.034
  CI (99.9%): [11764.680, 13042.976] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 46.88% complete, ETA 00:28:44
# Fork: 1 of 1
# Warmup Iteration   1: 35.764 ns/op
# Warmup Iteration   2: 33.965 ns/op
# Warmup Iteration   3: 31.317 ns/op
# Warmup Iteration   4: 31.284 ns/op
# Warmup Iteration   5: 31.373 ns/op
Iteration   1: 31.634 ns/op
Iteration   2: 31.532 ns/op
Iteration   3: 31.254 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  31.473 ±(99.9%) 3.581 ns/op [Average]
  (min, avg, max) = (31.254, 31.473, 31.634), stdev = 0.196
  CI (99.9%): [27.892, 35.054] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 47.32% complete, ETA 00:28:30
# Fork: 1 of 1
# Warmup Iteration   1: 50.629 ns/op
# Warmup Iteration   2: 48.413 ns/op
# Warmup Iteration   3: 52.434 ns/op
# Warmup Iteration   4: 51.025 ns/op
# Warmup Iteration   5: 49.951 ns/op
Iteration   1: 49.995 ns/op
Iteration   2: 50.488 ns/op
Iteration   3: 50.181 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  50.221 ±(99.9%) 4.544 ns/op [Average]
  (min, avg, max) = (49.995, 50.221, 50.488), stdev = 0.249
  CI (99.9%): [45.678, 54.765] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 47.77% complete, ETA 00:28:15
# Fork: 1 of 1
# Warmup Iteration   1: 92.723 ns/op
# Warmup Iteration   2: 86.271 ns/op
# Warmup Iteration   3: 83.171 ns/op
# Warmup Iteration   4: 82.758 ns/op
# Warmup Iteration   5: 82.838 ns/op
Iteration   1: 83.340 ns/op
Iteration   2: 87.580 ns/op
Iteration   3: 82.616 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  84.512 ±(99.9%) 48.923 ns/op [Average]
  (min, avg, max) = (82.616, 84.512, 87.580), stdev = 2.682
  CI (99.9%): [35.589, 133.435] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 48.21% complete, ETA 00:28:01
# Fork: 1 of 1
# Warmup Iteration   1: 143.746 ns/op
# Warmup Iteration   2: 136.330 ns/op
# Warmup Iteration   3: 129.488 ns/op
# Warmup Iteration   4: 129.117 ns/op
# Warmup Iteration   5: 133.353 ns/op
Iteration   1: 129.572 ns/op
Iteration   2: 131.792 ns/op
Iteration   3: 129.242 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  130.202 ±(99.9%) 25.304 ns/op [Average]
  (min, avg, max) = (129.242, 130.202, 131.792), stdev = 1.387
  CI (99.9%): [104.898, 155.506] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 48.66% complete, ETA 00:27:46
# Fork: 1 of 1
# Warmup Iteration   1: 504.781 ns/op
# Warmup Iteration   2: 467.543 ns/op
# Warmup Iteration   3: 439.380 ns/op
# Warmup Iteration   4: 446.275 ns/op
# Warmup Iteration   5: 440.075 ns/op
Iteration   1: 440.473 ns/op
Iteration   2: 439.393 ns/op
Iteration   3: 441.317 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  440.394 ±(99.9%) 17.598 ns/op [Average]
  (min, avg, max) = (439.393, 440.394, 441.317), stdev = 0.965
  CI (99.9%): [422.796, 457.992] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 49.11% complete, ETA 00:27:32
# Fork: 1 of 1
# Warmup Iteration   1: 975.894 ns/op
# Warmup Iteration   2: 876.996 ns/op
# Warmup Iteration   3: 864.417 ns/op
# Warmup Iteration   4: 863.560 ns/op
# Warmup Iteration   5: 862.298 ns/op
Iteration   1: 859.575 ns/op
Iteration   2: 860.793 ns/op
Iteration   3: 861.287 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  860.552 ±(99.9%) 16.077 ns/op [Average]
  (min, avg, max) = (859.575, 860.552, 861.287), stdev = 0.881
  CI (99.9%): [844.475, 876.628] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.55% complete, ETA 00:27:17
# Fork: 1 of 1
# Warmup Iteration   1: 11600.480 ns/op
# Warmup Iteration   2: 10592.487 ns/op
# Warmup Iteration   3: 9312.256 ns/op
# Warmup Iteration   4: 9267.240 ns/op
# Warmup Iteration   5: 9229.746 ns/op
Iteration   1: 9239.522 ns/op
Iteration   2: 9240.800 ns/op
Iteration   3: 9235.134 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  9238.485 ±(99.9%) 54.212 ns/op [Average]
  (min, avg, max) = (9235.134, 9238.485, 9240.800), stdev = 2.972
  CI (99.9%): [9184.273, 9292.698] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:27:03
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.45% complete, ETA 00:26:34
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 50.89% complete, ETA 00:26:07
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 51.34% complete, ETA 00:25:39
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 51.79% complete, ETA 00:25:12
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 52.23% complete, ETA 00:24:46
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 52.68% complete, ETA 00:24:20
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 53.13% complete, ETA 00:23:54
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 53.57% complete, ETA 00:23:29
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 54.02% complete, ETA 00:23:04
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 54.46% complete, ETA 00:22:40
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 54.91% complete, ETA 00:22:16
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 55.36% complete, ETA 00:21:53
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 55.80% complete, ETA 00:21:29
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 56.25% complete, ETA 00:21:07
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 56.70% complete, ETA 00:20:44
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 57.14% complete, ETA 00:20:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 57.59% complete, ETA 00:20:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 58.04% complete, ETA 00:19:39
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 58.48% complete, ETA 00:19:18
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 58.93% complete, ETA 00:18:57
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 59.38% complete, ETA 00:18:36
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 59.82% complete, ETA 00:18:16
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 60.27% complete, ETA 00:17:56
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 60.71% complete, ETA 00:17:36
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 61.16% complete, ETA 00:17:17
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 61.61% complete, ETA 00:16:58
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 62.05% complete, ETA 00:16:39
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 62.50% complete, ETA 00:16:21
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 62.95% complete, ETA 00:16:02
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 63.39% complete, ETA 00:15:44
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 63.84% complete, ETA 00:15:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 64.29% complete, ETA 00:15:09
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 64.73% complete, ETA 00:14:52
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 65.18% complete, ETA 00:14:34
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 65.63% complete, ETA 00:14:18
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 66.07% complete, ETA 00:14:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 66.52% complete, ETA 00:13:45
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 66.96% complete, ETA 00:13:28
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 67.41% complete, ETA 00:13:12
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 67.86% complete, ETA 00:12:56
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 68.30% complete, ETA 00:12:41
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 68.75% complete, ETA 00:12:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 69.20% complete, ETA 00:12:10
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 69.64% complete, ETA 00:11:55
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 70.09% complete, ETA 00:11:40
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 70.54% complete, ETA 00:11:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 70.98% complete, ETA 00:11:11
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 71.43% complete, ETA 00:10:57
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 1)

# Run progress: 71.88% complete, ETA 00:10:43
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 10)

# Run progress: 72.32% complete, ETA 00:10:29
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 50)

# Run progress: 72.77% complete, ETA 00:10:15
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 100)

# Run progress: 73.21% complete, ETA 00:10:02
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 500)

# Run progress: 73.66% complete, ETA 00:09:48
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 1000)

# Run progress: 74.11% complete, ETA 00:09:35
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 10000)

# Run progress: 74.55% complete, ETA 00:09:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 75.00% complete, ETA 00:09:09
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 75.45% complete, ETA 00:08:56
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 75.89% complete, ETA 00:08:43
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 76.34% complete, ETA 00:08:30
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 76.79% complete, ETA 00:08:18
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 77.23% complete, ETA 00:08:06
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 77.68% complete, ETA 00:07:54
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 1)

# Run progress: 78.13% complete, ETA 00:07:42
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 10)

# Run progress: 78.57% complete, ETA 00:07:30
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 50)

# Run progress: 79.02% complete, ETA 00:07:18
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 100)

# Run progress: 79.46% complete, ETA 00:07:06
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 500)

# Run progress: 79.91% complete, ETA 00:06:55
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 1000)

# Run progress: 80.36% complete, ETA 00:06:43
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 10000)

# Run progress: 80.80% complete, ETA 00:06:32
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 1)

# Run progress: 81.25% complete, ETA 00:06:21
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 10)

# Run progress: 81.70% complete, ETA 00:06:10
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 50)

# Run progress: 82.14% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 100)

# Run progress: 82.59% complete, ETA 00:05:48
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 500)

# Run progress: 83.04% complete, ETA 00:05:38
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 83.48% complete, ETA 00:05:27
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 83.93% complete, ETA 00:05:17
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 1)

# Run progress: 84.38% complete, ETA 00:05:06
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 10)

# Run progress: 84.82% complete, ETA 00:04:56
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 50)

# Run progress: 85.27% complete, ETA 00:04:46
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 100)

# Run progress: 85.71% complete, ETA 00:04:36
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 500)

# Run progress: 86.16% complete, ETA 00:04:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 1000)

# Run progress: 86.61% complete, ETA 00:04:16
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 10000)

# Run progress: 87.05% complete, ETA 00:04:06
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 1)

# Run progress: 87.50% complete, ETA 00:03:57
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 10)

# Run progress: 87.95% complete, ETA 00:03:47
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 50)

# Run progress: 88.39% complete, ETA 00:03:38
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 100)

# Run progress: 88.84% complete, ETA 00:03:28
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 500)

# Run progress: 89.29% complete, ETA 00:03:19
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 89.73% complete, ETA 00:03:10
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 90.18% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 1)

# Run progress: 90.63% complete, ETA 00:02:51
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 10)

# Run progress: 91.07% complete, ETA 00:02:43
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 50)

# Run progress: 91.52% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 100)

# Run progress: 91.96% complete, ETA 00:02:25
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 500)

# Run progress: 92.41% complete, ETA 00:02:16
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 1000)

# Run progress: 92.86% complete, ETA 00:02:08
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 10000)

# Run progress: 93.30% complete, ETA 00:01:59
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 93.75% complete, ETA 00:01:51
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 94.20% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 94.64% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 95.09% complete, ETA 00:01:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 95.54% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 95.98% complete, ETA 00:01:09
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 96.43% complete, ETA 00:01:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 96.88% complete, ETA 00:00:53
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 97.32% complete, ETA 00:00:45
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 97.77% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 98.21% complete, ETA 00:00:30
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 98.66% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 99.11% complete, ETA 00:00:15
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.55% complete, ETA 00:00:07
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: rs/base64
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2429)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:818)
	at java.base/java.lang.System.loadLibrary(System.java:1989)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# Run complete. Total time: 00:27:51

Benchmark                          (dataset)  (length)  Mode  Cnt       Score       Error  Units
Base64Benchmarks.commonsDecode         fixed         1  avgt    3    1013.098 ±   280.039  ns/op
Base64Benchmarks.commonsDecode         fixed        10  avgt    3    1114.009 ±   128.496  ns/op
Base64Benchmarks.commonsDecode         fixed        50  avgt    3    1699.743 ±   959.203  ns/op
Base64Benchmarks.commonsDecode         fixed       100  avgt    3    2414.299 ±    80.478  ns/op
Base64Benchmarks.commonsDecode         fixed       500  avgt    3    8621.179 ±   665.723  ns/op
Base64Benchmarks.commonsDecode         fixed      1000  avgt    3   14608.850 ±  2651.747  ns/op
Base64Benchmarks.commonsDecode         fixed     10000  avgt    3  123303.786 ± 15966.887  ns/op
Base64Benchmarks.commonsDecode        random         1  avgt    3     975.218 ±   212.901  ns/op
Base64Benchmarks.commonsDecode        random        10  avgt    3    1001.351 ±   131.750  ns/op
Base64Benchmarks.commonsDecode        random        50  avgt    3    1338.250 ±   911.957  ns/op
Base64Benchmarks.commonsDecode        random       100  avgt    3    1722.972 ±   540.236  ns/op
Base64Benchmarks.commonsDecode        random       500  avgt    3    5092.798 ±   475.646  ns/op
Base64Benchmarks.commonsDecode        random      1000  avgt    3    9353.822 ±   127.650  ns/op
Base64Benchmarks.commonsDecode        random     10000  avgt    3   87678.760 ±  1683.595  ns/op
Base64Benchmarks.commonsEncode         fixed         1  avgt    3     980.161 ±   322.387  ns/op
Base64Benchmarks.commonsEncode         fixed        10  avgt    3    1014.770 ±    48.778  ns/op
Base64Benchmarks.commonsEncode         fixed        50  avgt    3    1494.887 ±   353.474  ns/op
Base64Benchmarks.commonsEncode         fixed       100  avgt    3    2148.437 ±    93.039  ns/op
Base64Benchmarks.commonsEncode         fixed       500  avgt    3    7443.908 ±   809.527  ns/op
Base64Benchmarks.commonsEncode         fixed      1000  avgt    3   14350.223 ±   459.378  ns/op
Base64Benchmarks.commonsEncode         fixed     10000  avgt    3  131969.474 ±  2961.745  ns/op
Base64Benchmarks.commonsEncode        random         1  avgt    3     982.859 ±   153.019  ns/op
Base64Benchmarks.commonsEncode        random        10  avgt    3    1007.858 ±   204.479  ns/op
Base64Benchmarks.commonsEncode        random        50  avgt    3    1340.878 ±   253.170  ns/op
Base64Benchmarks.commonsEncode        random       100  avgt    3    1845.764 ±   286.254  ns/op
Base64Benchmarks.commonsEncode        random       500  avgt    3    5805.673 ±  1888.285  ns/op
Base64Benchmarks.commonsEncode        random      1000  avgt    3   10961.376 ±  1058.603  ns/op
Base64Benchmarks.commonsEncode        random     10000  avgt    3   96688.977 ±  6433.053  ns/op
Base64Benchmarks.commonsUrlDecode      fixed         1  avgt    3    1004.755 ±   303.590  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        10  avgt    3    1135.958 ±   247.983  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        50  avgt    3    1765.412 ±   203.859  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       100  avgt    3    2599.101 ±   879.363  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       500  avgt    3    9416.143 ±    36.851  ns/op
Base64Benchmarks.commonsUrlDecode      fixed      1000  avgt    3   13264.105 ±   269.841  ns/op
Base64Benchmarks.commonsUrlDecode      fixed     10000  avgt    3  121796.169 ± 11527.836  ns/op
Base64Benchmarks.commonsUrlDecode     random         1  avgt    3     984.882 ±   279.116  ns/op
Base64Benchmarks.commonsUrlDecode     random        10  avgt    3     999.080 ±   173.337  ns/op
Base64Benchmarks.commonsUrlDecode     random        50  avgt    3    1298.122 ±   197.253  ns/op
Base64Benchmarks.commonsUrlDecode     random       100  avgt    3    1719.632 ±   141.449  ns/op
Base64Benchmarks.commonsUrlDecode     random       500  avgt    3    5046.841 ±   184.877  ns/op
Base64Benchmarks.commonsUrlDecode     random      1000  avgt    3    9445.097 ±  2634.046  ns/op
Base64Benchmarks.commonsUrlDecode     random     10000  avgt    3   87701.148 ±  6885.226  ns/op
Base64Benchmarks.commonsUrlEncode      fixed         1  avgt    3     972.568 ±    31.785  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        10  avgt    3    1012.174 ±    52.766  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        50  avgt    3    1492.182 ±    63.536  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       100  avgt    3    2165.453 ±   451.127  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       500  avgt    3    7416.659 ±  2159.211  ns/op
Base64Benchmarks.commonsUrlEncode      fixed      1000  avgt    3   14360.843 ±  1606.656  ns/op
Base64Benchmarks.commonsUrlEncode      fixed     10000  avgt    3  132509.781 ±  9010.931  ns/op
Base64Benchmarks.commonsUrlEncode     random         1  avgt    3     983.813 ±   405.093  ns/op
Base64Benchmarks.commonsUrlEncode     random        10  avgt    3    1000.854 ±   220.986  ns/op
Base64Benchmarks.commonsUrlEncode     random        50  avgt    3    1341.519 ±   176.264  ns/op
Base64Benchmarks.commonsUrlEncode     random       100  avgt    3    1841.696 ±   342.349  ns/op
Base64Benchmarks.commonsUrlEncode     random       500  avgt    3    5790.571 ±   201.884  ns/op
Base64Benchmarks.commonsUrlEncode     random      1000  avgt    3   10962.610 ±   221.791  ns/op
Base64Benchmarks.commonsUrlEncode     random     10000  avgt    3  103862.580 ± 18374.221  ns/op
Base64Benchmarks.jdkDecode             fixed         1  avgt    3      42.816 ±     3.171  ns/op
Base64Benchmarks.jdkDecode             fixed        10  avgt    3      63.940 ±     1.051  ns/op
Base64Benchmarks.jdkDecode             fixed        50  avgt    3     184.843 ±     2.935  ns/op
Base64Benchmarks.jdkDecode             fixed       100  avgt    3     311.329 ±    94.276  ns/op
Base64Benchmarks.jdkDecode             fixed       500  avgt    3    1159.307 ±     3.282  ns/op
Base64Benchmarks.jdkDecode             fixed      1000  avgt    3    2569.286 ±   113.985  ns/op
Base64Benchmarks.jdkDecode             fixed     10000  avgt    3   23090.754 ±   139.127  ns/op
Base64Benchmarks.jdkDecode            random         1  avgt    3      35.041 ±     0.932  ns/op
Base64Benchmarks.jdkDecode            random        10  avgt    3      47.990 ±     2.340  ns/op
Base64Benchmarks.jdkDecode            random        50  avgt    3     115.272 ±     1.514  ns/op
Base64Benchmarks.jdkDecode            random       100  avgt    3     210.572 ±     1.729  ns/op
Base64Benchmarks.jdkDecode            random       500  avgt    3     875.685 ±     7.381  ns/op
Base64Benchmarks.jdkDecode            random      1000  avgt    3    1737.841 ±    34.535  ns/op
Base64Benchmarks.jdkDecode            random     10000  avgt    3   17872.871 ±  4315.345  ns/op
Base64Benchmarks.jdkEncode             fixed         1  avgt    3      37.589 ±    11.765  ns/op
Base64Benchmarks.jdkEncode             fixed        10  avgt    3      55.976 ±     0.262  ns/op
Base64Benchmarks.jdkEncode             fixed        50  avgt    3      95.732 ±     8.462  ns/op
Base64Benchmarks.jdkEncode             fixed       100  avgt    3     149.129 ±     4.369  ns/op
Base64Benchmarks.jdkEncode             fixed       500  avgt    3     591.497 ±    23.240  ns/op
Base64Benchmarks.jdkEncode             fixed      1000  avgt    3    1148.609 ±   174.483  ns/op
Base64Benchmarks.jdkEncode             fixed     10000  avgt    3   12402.045 ±   285.040  ns/op
Base64Benchmarks.jdkEncode            random         1  avgt    3      32.995 ±     2.553  ns/op
Base64Benchmarks.jdkEncode            random        10  avgt    3      48.310 ±     1.574  ns/op
Base64Benchmarks.jdkEncode            random        50  avgt    3      84.489 ±     0.626  ns/op
Base64Benchmarks.jdkEncode            random       100  avgt    3     127.963 ±    25.752  ns/op
Base64Benchmarks.jdkEncode            random       500  avgt    3     459.086 ±    67.990  ns/op
Base64Benchmarks.jdkEncode            random      1000  avgt    3     872.264 ±    30.726  ns/op
Base64Benchmarks.jdkEncode            random     10000  avgt    3    9221.910 ±    59.248  ns/op
Base64Benchmarks.jdkUrlDecode          fixed         1  avgt    3      40.425 ±     0.702  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        10  avgt    3      64.512 ±     0.834  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        50  avgt    3     175.195 ±    18.605  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       100  avgt    3     296.544 ±     5.674  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       500  avgt    3    1280.411 ±    11.977  ns/op
Base64Benchmarks.jdkUrlDecode          fixed      1000  avgt    3    2548.693 ±    15.583  ns/op
Base64Benchmarks.jdkUrlDecode          fixed     10000  avgt    3   25780.454 ±   533.836  ns/op
Base64Benchmarks.jdkUrlDecode         random         1  avgt    3      34.406 ±     1.560  ns/op
Base64Benchmarks.jdkUrlDecode         random        10  avgt    3      48.177 ±     5.456  ns/op
Base64Benchmarks.jdkUrlDecode         random        50  avgt    3     114.038 ±    17.843  ns/op
Base64Benchmarks.jdkUrlDecode         random       100  avgt    3     210.729 ±     6.402  ns/op
Base64Benchmarks.jdkUrlDecode         random       500  avgt    3     873.697 ±    30.859  ns/op
Base64Benchmarks.jdkUrlDecode         random      1000  avgt    3    1748.507 ±   371.403  ns/op
Base64Benchmarks.jdkUrlDecode         random     10000  avgt    3   17632.383 ±   467.295  ns/op
Base64Benchmarks.jdkUrlEncode          fixed         1  avgt    3      36.636 ±     2.027  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        10  avgt    3      56.930 ±     4.026  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        50  avgt    3      99.177 ±     7.052  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       100  avgt    3     151.627 ±     4.453  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       500  avgt    3     590.588 ±    66.100  ns/op
Base64Benchmarks.jdkUrlEncode          fixed      1000  avgt    3    1143.468 ±    52.932  ns/op
Base64Benchmarks.jdkUrlEncode          fixed     10000  avgt    3   12403.828 ±   639.148  ns/op
Base64Benchmarks.jdkUrlEncode         random         1  avgt    3      31.473 ±     3.581  ns/op
Base64Benchmarks.jdkUrlEncode         random        10  avgt    3      50.221 ±     4.544  ns/op
Base64Benchmarks.jdkUrlEncode         random        50  avgt    3      84.512 ±    48.923  ns/op
Base64Benchmarks.jdkUrlEncode         random       100  avgt    3     130.202 ±    25.304  ns/op
Base64Benchmarks.jdkUrlEncode         random       500  avgt    3     440.394 ±    17.598  ns/op
Base64Benchmarks.jdkUrlEncode         random      1000  avgt    3     860.552 ±    16.077  ns/op
Base64Benchmarks.jdkUrlEncode         random     10000  avgt    3    9238.485 ±    54.212  ns/op

Benchmark result is saved to /static/data/charts/base64-jdk-vs-commons/jdk17.json
