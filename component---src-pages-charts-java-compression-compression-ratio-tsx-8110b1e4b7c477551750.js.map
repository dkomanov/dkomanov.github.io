{"version":3,"file":"component---src-pages-charts-java-compression-compression-ratio-tsx-8110b1e4b7c477551750.js","mappings":"yWAGaA,EAAuB,CAClC,CACEC,KAAM,MACNC,MAAO,uBAET,CACED,KAAM,SACNC,MAAO,0BAET,CACED,KAAM,OACNC,MAAO,wBAET,CACED,KAAM,QACNC,MAAO,+BAIEC,EAA0B,yBAE1BC,EAAa,SAACC,GACzB,GAAIA,EAAMC,QAAU,EAClB,MAAM,IAAIC,MAAM,eAElB,GAAIF,EAAMG,MAAK,SAACC,GAAD,OAAOA,EAAEH,SAAWD,EAAM,GAAGC,MAAxC,IACF,MAAM,IAAIC,MAAM,qBAIlB,IADA,IAAMG,EAAI,GACDC,EAAI,EAAGA,EAAIN,EAAM,GAAGC,SAAUK,EACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAMC,SAAUM,EAClCF,EAAEG,KAAKR,EAAMO,GAAGD,IAGpB,OAAOD,CAdF,EAiBMI,EAAmB,SAACb,EAAcC,GAC7C,OAAOF,EAAqBe,QACzBC,UACAC,KAAI,SAACP,GAAD,MAAQ,CAAET,KAASA,EAAL,KAAcS,EAAET,KAAhB,IAAyBC,MAAUA,EAAL,IAAcQ,EAAER,MAF5D,GADF,EAMMgB,EAAkC,SAAC,GAA6E,IAA3EhB,EAA2E,EAA3EA,MAAOiB,EAAoE,EAApEA,SACvD,OACEC,EAAAA,cAACC,EAAAA,GAAD,CACEC,MAAM,qBACNpB,MAAOA,EACPqB,MAAOvB,EAAqBiB,KAAI,SAACN,GAAD,MAAQ,CACtCW,MAAOX,EAAEV,KACTC,MAAOS,EAAET,MAFJ,IAIPiB,SAAUA,GATT,EAcP,W","sources":["webpack://komanov.com/./src/pages/charts/java-compression/CompressionRatio.tsx"],"sourcesContent":["import React from 'react';\nimport { StatelessChoose } from '../../../components';\n\nexport const AllCompressionRatios = [\n  {\n    name: 'low',\n    value: 'LOW_COMPRESSION_1_3',\n  },\n  {\n    name: 'medium',\n    value: 'MEDIUM_COMPRESSION_2_1',\n  },\n  {\n    name: 'high',\n    value: 'HIGH_COMPRESSION_3_4',\n  },\n  {\n    name: 'extra',\n    value: 'EXTRA_HIGH_COMPRESSION_6_2',\n  },\n];\n\nexport const DefaultCompressionRatio = 'MEDIUM_COMPRESSION_2_1';\n\nexport const sideBySide = (lists: any[][]): any[] => {\n  if (lists.length <= 0) {\n    throw new Error('empty array');\n  }\n  if (lists.find((v) => v.length !== lists[0].length)) {\n    throw new Error('different lengths');\n  }\n\n  const r = [];\n  for (let i = 0; i < lists[0].length; ++i) {\n    for (let j = 0; j < lists.length; ++j) {\n      r.push(lists[j][i]);\n    }\n  }\n  return r;\n};\n\nexport const comparisonValues = (name: string, value: string) => {\n  return AllCompressionRatios.slice()\n    .reverse()\n    .map((r) => ({ name: `${name} [${r.name}]`, value: `${value}-${r.value}` }));\n};\n\nexport const CompressionRatioChooseComponent = ({ value, onChange }: { value: string; onChange: (value: string) => any }) => {\n  return (\n    <StatelessChoose\n      label=\"Compression Ratio:\"\n      value={value}\n      items={AllCompressionRatios.map((i) => ({\n        label: i.name,\n        value: i.value,\n      }))}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default CompressionRatioChooseComponent;\n"],"names":["AllCompressionRatios","name","value","DefaultCompressionRatio","sideBySide","lists","length","Error","find","v","r","i","j","push","comparisonValues","slice","reverse","map","CompressionRatioChooseComponent","onChange","React","StatelessChoose","label","items"],"sourceRoot":""}