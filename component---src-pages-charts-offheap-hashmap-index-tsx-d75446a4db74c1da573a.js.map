{"version":3,"file":"component---src-pages-charts-offheap-hashmap-index-tsx-d75446a4db74c1da573a.js","mappings":"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","sources":["webpack://komanov.com/./src/pages/charts/offheap-hashmap/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport { JmhBenchmarkRun } from '../../..';\nimport {\n  ChartAndTable,\n  Choose,\n  JmhChartComponentProps,\n  JmhChartPage,\n  TimeUnits,\n} from '../../../components';\nimport { loadJson } from '../../../util';\n\ntype JdkVersion = 'openjdk-17' | 'openjdk-11' | 'openjdk-8';\nconst jdks: JdkVersion[] = ['openjdk-17', 'openjdk-11', 'openjdk-8'];\nconst allSizes = ['100', '1000', '10000', '100000', '1000000'];\n\nconst xDesc = {\n  title: 'Collection',\n  prop: 'method',\n  values: [\n    {\n      name: 'baseline',\n      value: 'baselineEmptyMap',\n    },\n    {\n      name: 'java.util.HashMap',\n      value: 'javaMap',\n    },\n    {\n      name: 'immutable.Map',\n      value: 'scalaMap',\n    },\n    {\n      name: 'On-Heap',\n      value: 'onHeap',\n    },\n    {\n      name: 'Off-Heap',\n      value: 'offHeap',\n    },\n  ],\n};\n\nconst yDesc = {\n  title: 'JDK',\n  prop: 'jdk',\n  values: jdks,\n};\n\nfunction getChooseItems(\n  values: string[],\n  isDefault: (value: string, index: number) => boolean\n) {\n  return values.map((v, index) => {\n    return {\n      label: v,\n      value: v,\n      default: isDefault(v, index),\n    };\n  });\n}\n\nconst OffheapMapImpl = ({ jmhList }: JmhChartComponentProps) => {\n  const [size, sizeSet] = useState('1000000');\n  const [jdk, jdkSet] = useState<JdkVersion>('openjdk-17');\n  const [extractor, extractorSet] = useState({ func: null });\n\n  return (\n    <div className=\"markdown\">\n      <h3>Introduction</h3>\n\n      <p>\n        Here are benchmarking results for{' '}\n        <Link to=\"/p/replacing-hash-map-with-off-heap-hash-map-in-java\">\n          &laquo;Replacing HashMap with Off-Heap HashMap in Java?&raquo;\n        </Link>{' '}\n        blog post.\n      </p>\n\n      <p>\n        The performance tests are performed via{' '}\n        <a href=\"https://github.com/openjdk/jmh\">JMH</a>. The configuration of a\n        hardware is Intel® Core™ i7-1165G7 @ 2.80GHz × 8 (4 core + 4 HT) with 16\n        GB RAM. Scala version: 2.13.6.\n      </p>\n\n      <h3>Charts</h3>\n\n      <Choose\n        label=\"Collection size:\"\n        items={getChooseItems(allSizes, (v) => v === '1000000')}\n        onChange={(value: string) => sizeSet(value)}\n      />\n      <TimeUnits onChange={(func: any) => extractorSet({ func })} />\n\n      <h4>Lookup Performance</h4>\n\n      <p>Performance of the successful lookup (hit) for all JDKs:</p>\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={extractor.func}\n        filter={(p: any) => p.what === 'hit' && p.size === size}\n        title=\"Successful lookup (hit), nanos\"\n        xDesc={xDesc}\n        yDesc={yDesc}\n      />\n\n      <p>Performance of the failed lookup (miss) for all JDKs:</p>\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={extractor.func}\n        filter={(p: any) => p.what === 'miss' && p.size === size}\n        title=\"Failed lookup (miss), nanos\"\n        xDesc={xDesc}\n        yDesc={yDesc}\n      />\n\n      <h4>Performance for different collection size</h4>\n\n      <Choose\n        label=\"JDK:\"\n        items={getChooseItems(jdks, (_, index) => index === 0)}\n        onChange={(value: JdkVersion) => jdkSet(value)}\n      />\n\n      <h5>Hits</h5>\n\n      <ChartAndTable\n        chartType=\"LineChart\"\n        dataTable={jmhList}\n        extractor={extractor.func}\n        filter={(p: any) => p.what === 'hit' && p.jdk === jdk}\n        title=\"Successful lookup (hit), nanos\"\n        xDesc={xDesc}\n        yDesc={{\n          title: 'Collection size',\n          prop: 'size',\n          values: allSizes,\n        }}\n        options={{\n          hAxis: {\n            title: 'Collection size',\n          },\n          vAxis: {\n            title: 'time, nanoseconds',\n            maxValue: 3000,\n          },\n        }}\n      />\n\n      <h5>Misses</h5>\n\n      <ChartAndTable\n        chartType=\"LineChart\"\n        dataTable={jmhList}\n        extractor={extractor.func}\n        filter={(p: any) => p.what === 'miss' && p.jdk === jdk}\n        title=\"Failed lookup (miss), nanos\"\n        xDesc={xDesc}\n        yDesc={{\n          title: 'Collection size',\n          prop: 'size',\n          values: allSizes,\n        }}\n        options={{\n          hAxis: {\n            title: 'Collection size',\n          },\n          vAxis: {\n            title: 'time, nanoseconds',\n            maxValue: 600,\n          },\n        }}\n      />\n\n      <p>\n        Full JMH logs:\n        <a href={filePath('jdk8.log.txt')}>openjdk-8</a>,{' '}\n        <a href={filePath('jdk11.log.txt')}>openjdk-11</a>,{' '}\n        <a href={filePath('jdk17.log.txt')}>openjdk-17</a>.\n      </p>\n    </div>\n  );\n};\n\nfunction exportDimensions(benchmark: string, params: any) {\n  //'com.komanov.offheap.uuidhashmap.jmh.ScalaImmutableMapBenchmark.scalaMapMiss'\n\n  const method = benchmark.substring(benchmark.lastIndexOf('.') + 1);\n  const hit = method === 'baselineEmptyMap' || method.endsWith('Hit');\n  const name = method === 'baselineEmptyMap' ? method : method.substring(0, method.length - (hit ? 3 : 4));\n\n  return {\n    method: name,\n    what: hit ? 'hit' : 'miss',\n    ...params,\n  };\n}\n\nconst filePath = (name: string) => `/data/charts/offheap-hashmap/${name}`;\n\nconst fetchAndCombineResults = () => {\n  return Promise.all([\n    loadJson(filePath('jdk8.json')),\n    loadJson(filePath('jdk11.json')),\n    loadJson(filePath('jdk17.json')),\n  ]).then((values: any[]) => {\n    function setJdk(index: number, jdk: JdkVersion) {\n      const list: JmhBenchmarkRun[] = values[index].data;\n      list.forEach((v) => (v.params = { ...v.params, jdk }));\n      return list;\n    }\n\n    return {\n      data: [\n        ...setJdk(0, 'openjdk-8'),\n        ...setJdk(1, 'openjdk-11'),\n        ...setJdk(2, 'openjdk-17'),\n      ],\n    };\n  });\n};\n\nconst OffheapMap = JmhChartPage(OffheapMapImpl, {\n  fetchFunc: fetchAndCombineResults,\n  exportDimensionsFunc: exportDimensions,\n  headerText: 'Replacing HashMap with Off-Heap HashMap in Java (Charts)',\n});\n\nexport default OffheapMap;\n"],"names":["jdks","allSizes","xDesc","title","prop","values","name","value","yDesc","getChooseItems","isDefault","map","v","index","label","default","filePath","OffheapMap","JmhChartPage","jmhList","useState","size","sizeSet","jdk","jdkSet","func","extractor","extractorSet","React","className","Link","to","href","Choose","items","onChange","TimeUnits","ChartAndTable","dataTable","filter","p","what","_","chartType","options","hAxis","vAxis","maxValue","fetchFunc","Promise","all","loadJson","then","setJdk","list","data","forEach","params","exportDimensionsFunc","benchmark","method","substring","lastIndexOf","hit","endsWith","length","headerText"],"sourceRoot":""}