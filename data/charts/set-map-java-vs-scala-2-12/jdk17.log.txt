# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000)

# Run progress: 0.00% complete, ETA 00:22:24
# Fork: 1 of 1
# Warmup Iteration   1: 119.989 ns/op
# Warmup Iteration   2: 119.179 ns/op
Iteration   1: 110.691 ns/op
Iteration   2: 109.122 ns/op
Iteration   3: 109.514 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  109.776 ±(99.9%) 14.894 ns/op [Average]
  (min, avg, max) = (109.122, 109.776, 110.691), stdev = 0.816
  CI (99.9%): [94.882, 124.670] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 10000)

# Run progress: 1.56% complete, ETA 00:22:46
# Fork: 1 of 1
# Warmup Iteration   1: 117.278 ns/op
# Warmup Iteration   2: 116.751 ns/op
Iteration   1: 73.475 ns/op
Iteration   2: 80.796 ns/op
Iteration   3: 82.021 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  78.764 ±(99.9%) 84.309 ns/op [Average]
  (min, avg, max) = (73.475, 78.764, 82.021), stdev = 4.621
  CI (99.9%): [≈ 0, 163.073] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 100000)

# Run progress: 3.13% complete, ETA 00:22:29
# Fork: 1 of 1
# Warmup Iteration   1: 124.295 ns/op
# Warmup Iteration   2: 128.525 ns/op
Iteration   1: 97.296 ns/op
Iteration   2: 96.070 ns/op
Iteration   3: 96.147 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  96.505 ±(99.9%) 12.525 ns/op [Average]
  (min, avg, max) = (96.070, 96.505, 97.296), stdev = 0.687
  CI (99.9%): [83.979, 109.030] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000000)

# Run progress: 4.69% complete, ETA 00:22:15
# Fork: 1 of 1
# Warmup Iteration   1: 129.559 ns/op
# Warmup Iteration   2: 127.060 ns/op
Iteration   1: 124.764 ns/op
Iteration   2: 118.018 ns/op
Iteration   3: 117.939 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  120.241 ±(99.9%) 71.471 ns/op [Average]
  (min, avg, max) = (117.939, 120.241, 124.764), stdev = 3.918
  CI (99.9%): [48.770, 191.711] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000)

# Run progress: 6.25% complete, ETA 00:22:42
# Fork: 1 of 1
# Warmup Iteration   1: 115.614 ns/op
# Warmup Iteration   2: 106.225 ns/op
Iteration   1: 92.794 ns/op
Iteration   2: 91.024 ns/op
Iteration   3: 90.858 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  91.559 ±(99.9%) 19.571 ns/op [Average]
  (min, avg, max) = (90.858, 91.559, 92.794), stdev = 1.073
  CI (99.9%): [71.987, 111.130] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 10000)

# Run progress: 7.81% complete, ETA 00:22:07
# Fork: 1 of 1
# Warmup Iteration   1: 109.286 ns/op
# Warmup Iteration   2: 101.537 ns/op
Iteration   1: 89.977 ns/op
Iteration   2: 88.993 ns/op
Iteration   3: 89.025 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  89.332 ±(99.9%) 10.203 ns/op [Average]
  (min, avg, max) = (88.993, 89.332, 89.977), stdev = 0.559
  CI (99.9%): [79.129, 99.534] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 100000)

# Run progress: 9.38% complete, ETA 00:21:37
# Fork: 1 of 1
# Warmup Iteration   1: 105.701 ns/op
# Warmup Iteration   2: 102.197 ns/op
Iteration   1: 88.652 ns/op
Iteration   2: 87.332 ns/op
Iteration   3: 88.103 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  88.029 ±(99.9%) 12.091 ns/op [Average]
  (min, avg, max) = (87.332, 88.029, 88.652), stdev = 0.663
  CI (99.9%): [75.938, 100.120] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000000)

# Run progress: 10.94% complete, ETA 00:21:12
# Fork: 1 of 1
# Warmup Iteration   1: 107.661 ns/op
# Warmup Iteration   2: 101.197 ns/op
Iteration   1: 90.643 ns/op
Iteration   2: 85.343 ns/op
Iteration   3: 85.652 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  87.213 ±(99.9%) 54.278 ns/op [Average]
  (min, avg, max) = (85.343, 87.213, 90.643), stdev = 2.975
  CI (99.9%): [32.935, 141.491] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000)

# Run progress: 12.50% complete, ETA 00:21:11
# Fork: 1 of 1
# Warmup Iteration   1: 109.610 ns/op
# Warmup Iteration   2: 112.177 ns/op
Iteration   1: 78.043 ns/op
Iteration   2: 77.521 ns/op
Iteration   3: 76.667 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  77.410 ±(99.9%) 12.676 ns/op [Average]
  (min, avg, max) = (76.667, 77.410, 78.043), stdev = 0.695
  CI (99.9%): [64.734, 90.086] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 10000)

# Run progress: 14.06% complete, ETA 00:20:41
# Fork: 1 of 1
# Warmup Iteration   1: 121.234 ns/op
# Warmup Iteration   2: 125.949 ns/op
Iteration   1: 93.690 ns/op
Iteration   2: 92.564 ns/op
Iteration   3: 92.894 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  93.049 ±(99.9%) 10.555 ns/op [Average]
  (min, avg, max) = (92.564, 93.049, 93.690), stdev = 0.579
  CI (99.9%): [82.494, 103.604] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 100000)

# Run progress: 15.63% complete, ETA 00:20:14
# Fork: 1 of 1
# Warmup Iteration   1: 119.775 ns/op
# Warmup Iteration   2: 117.276 ns/op
Iteration   1: 85.507 ns/op
Iteration   2: 84.732 ns/op
Iteration   3: 86.194 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  85.477 ±(99.9%) 13.338 ns/op [Average]
  (min, avg, max) = (84.732, 85.477, 86.194), stdev = 0.731
  CI (99.9%): [72.139, 98.816] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000000)

# Run progress: 17.19% complete, ETA 00:19:50
# Fork: 1 of 1
# Warmup Iteration   1: 121.260 ns/op
# Warmup Iteration   2: 119.874 ns/op
Iteration   1: 94.166 ns/op
Iteration   2: 88.497 ns/op
Iteration   3: 88.116 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  90.260 ±(99.9%) 61.824 ns/op [Average]
  (min, avg, max) = (88.116, 90.260, 94.166), stdev = 3.389
  CI (99.9%): [28.436, 152.084] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000)

# Run progress: 18.75% complete, ETA 00:19:40
# Fork: 1 of 1
# Warmup Iteration   1: 104.302 ns/op
# Warmup Iteration   2: 106.174 ns/op
Iteration   1: 86.700 ns/op
Iteration   2: 83.911 ns/op
Iteration   3: 83.911 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  84.840 ±(99.9%) 29.378 ns/op [Average]
  (min, avg, max) = (83.911, 84.840, 86.700), stdev = 1.610
  CI (99.9%): [55.463, 114.218] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 10000)

# Run progress: 20.31% complete, ETA 00:19:13
# Fork: 1 of 1
# Warmup Iteration   1: 113.157 ns/op
# Warmup Iteration   2: 109.118 ns/op
Iteration   1: 97.687 ns/op
Iteration   2: 96.111 ns/op
Iteration   3: 95.863 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  96.554 ±(99.9%) 18.053 ns/op [Average]
  (min, avg, max) = (95.863, 96.554, 97.687), stdev = 0.990
  CI (99.9%): [78.501, 114.607] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 100000)

# Run progress: 21.88% complete, ETA 00:18:48
# Fork: 1 of 1
# Warmup Iteration   1: 104.238 ns/op
# Warmup Iteration   2: 99.070 ns/op
Iteration   1: 83.384 ns/op
Iteration   2: 82.220 ns/op
Iteration   3: 82.235 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  82.613 ±(99.9%) 12.182 ns/op [Average]
  (min, avg, max) = (82.220, 82.613, 83.384), stdev = 0.668
  CI (99.9%): [70.431, 94.795] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000000)

# Run progress: 23.44% complete, ETA 00:18:24
# Fork: 1 of 1
# Warmup Iteration   1: 112.850 ns/op
# Warmup Iteration   2: 110.389 ns/op
Iteration   1: 101.451 ns/op
Iteration   2: 94.998 ns/op
Iteration   3: 95.277 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  97.242 ±(99.9%) 66.543 ns/op [Average]
  (min, avg, max) = (94.998, 97.242, 101.451), stdev = 3.647
  CI (99.9%): [30.699, 163.785] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000)

# Run progress: 25.00% complete, ETA 00:18:09
# Fork: 1 of 1
# Warmup Iteration   1: 141.454 ns/op
# Warmup Iteration   2: 142.131 ns/op
Iteration   1: 128.952 ns/op
Iteration   2: 128.986 ns/op
Iteration   3: 128.916 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  128.951 ±(99.9%) 0.645 ns/op [Average]
  (min, avg, max) = (128.916, 128.951, 128.986), stdev = 0.035
  CI (99.9%): [128.306, 129.596] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 10000)

# Run progress: 26.56% complete, ETA 00:17:44
# Fork: 1 of 1
# Warmup Iteration   1: 151.873 ns/op
# Warmup Iteration   2: 155.380 ns/op
Iteration   1: 133.433 ns/op
Iteration   2: 131.896 ns/op
Iteration   3: 132.850 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  132.727 ±(99.9%) 14.151 ns/op [Average]
  (min, avg, max) = (131.896, 132.727, 133.433), stdev = 0.776
  CI (99.9%): [118.575, 146.878] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 100000)

# Run progress: 28.13% complete, ETA 00:17:19
# Fork: 1 of 1
# Warmup Iteration   1: 150.156 ns/op
# Warmup Iteration   2: 155.871 ns/op
Iteration   1: 133.171 ns/op
Iteration   2: 131.654 ns/op
Iteration   3: 131.914 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  132.246 ±(99.9%) 14.801 ns/op [Average]
  (min, avg, max) = (131.654, 132.246, 133.171), stdev = 0.811
  CI (99.9%): [117.445, 147.047] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000000)

# Run progress: 29.69% complete, ETA 00:16:55
# Fork: 1 of 1
# Warmup Iteration   1: 146.317 ns/op
# Warmup Iteration   2: 151.302 ns/op
Iteration   1: 143.603 ns/op
Iteration   2: 134.272 ns/op
Iteration   3: 135.099 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  137.658 ±(99.9%) 94.235 ns/op [Average]
  (min, avg, max) = (134.272, 137.658, 143.603), stdev = 5.165
  CI (99.9%): [43.423, 231.893] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000)

# Run progress: 31.25% complete, ETA 00:16:39
# Fork: 1 of 1
# Warmup Iteration   1: 145.929 ns/op
# Warmup Iteration   2: 136.508 ns/op
Iteration   1: 152.888 ns/op
Iteration   2: 148.171 ns/op
Iteration   3: 148.159 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  149.740 ±(99.9%) 49.750 ns/op [Average]
  (min, avg, max) = (148.159, 149.740, 152.888), stdev = 2.727
  CI (99.9%): [99.990, 199.489] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 10000)

# Run progress: 32.81% complete, ETA 00:16:14
# Fork: 1 of 1
# Warmup Iteration   1: 151.999 ns/op
# Warmup Iteration   2: 149.821 ns/op
Iteration   1: 176.987 ns/op
Iteration   2: 174.290 ns/op
Iteration   3: 174.179 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  175.152 ±(99.9%) 29.008 ns/op [Average]
  (min, avg, max) = (174.179, 175.152, 176.987), stdev = 1.590
  CI (99.9%): [146.143, 204.160] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 100000)

# Run progress: 34.38% complete, ETA 00:15:49
# Fork: 1 of 1
# Warmup Iteration   1: 127.393 ns/op
# Warmup Iteration   2: 126.377 ns/op
Iteration   1: 151.453 ns/op
Iteration   2: 134.120 ns/op
Iteration   3: 134.605 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  140.060 ±(99.9%) 180.069 ns/op [Average]
  (min, avg, max) = (134.120, 140.060, 151.453), stdev = 9.870
  CI (99.9%): [≈ 0, 320.129] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000000)

# Run progress: 35.94% complete, ETA 00:15:26
# Fork: 1 of 1
# Warmup Iteration   1: 131.570 ns/op
# Warmup Iteration   2: 130.852 ns/op
Iteration   1: 149.593 ns/op
Iteration   2: 141.425 ns/op
Iteration   3: 141.108 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  144.042 ±(99.9%) 87.752 ns/op [Average]
  (min, avg, max) = (141.108, 144.042, 149.593), stdev = 4.810
  CI (99.9%): [56.290, 231.794] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000)

# Run progress: 37.50% complete, ETA 00:15:08
# Fork: 1 of 1
# Warmup Iteration   1: 119.011 ns/op
# Warmup Iteration   2: 117.313 ns/op
Iteration   1: 86.639 ns/op
Iteration   2: 84.584 ns/op
Iteration   3: 84.490 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  85.237 ±(99.9%) 22.156 ns/op [Average]
  (min, avg, max) = (84.490, 85.237, 86.639), stdev = 1.214
  CI (99.9%): [63.081, 107.393] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 10000)

# Run progress: 39.06% complete, ETA 00:14:44
# Fork: 1 of 1
# Warmup Iteration   1: 136.814 ns/op
# Warmup Iteration   2: 136.940 ns/op
Iteration   1: 99.348 ns/op
Iteration   2: 98.449 ns/op
Iteration   3: 98.245 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  98.681 ±(99.9%) 10.706 ns/op [Average]
  (min, avg, max) = (98.245, 98.681, 99.348), stdev = 0.587
  CI (99.9%): [87.975, 109.387] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 100000)

# Run progress: 40.63% complete, ETA 00:14:20
# Fork: 1 of 1
# Warmup Iteration   1: 121.350 ns/op
# Warmup Iteration   2: 116.582 ns/op
Iteration   1: 91.292 ns/op
Iteration   2: 90.576 ns/op
Iteration   3: 89.754 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  90.540 ±(99.9%) 14.042 ns/op [Average]
  (min, avg, max) = (89.754, 90.540, 91.292), stdev = 0.770
  CI (99.9%): [76.499, 104.582] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000000)

# Run progress: 42.19% complete, ETA 00:13:56
# Fork: 1 of 1
# Warmup Iteration   1: 131.074 ns/op
# Warmup Iteration   2: 126.729 ns/op
Iteration   1: 102.997 ns/op
Iteration   2: 100.169 ns/op
Iteration   3: 100.277 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  101.148 ±(99.9%) 29.231 ns/op [Average]
  (min, avg, max) = (100.169, 101.148, 102.997), stdev = 1.602
  CI (99.9%): [71.916, 130.379] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000)

# Run progress: 43.75% complete, ETA 00:13:37
# Fork: 1 of 1
# Warmup Iteration   1: 114.406 ns/op
# Warmup Iteration   2: 114.391 ns/op
Iteration   1: 98.367 ns/op
Iteration   2: 95.234 ns/op
Iteration   3: 95.493 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  96.365 ±(99.9%) 31.724 ns/op [Average]
  (min, avg, max) = (95.234, 96.365, 98.367), stdev = 1.739
  CI (99.9%): [64.641, 128.088] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 10000)

# Run progress: 45.31% complete, ETA 00:13:13
# Fork: 1 of 1
# Warmup Iteration   1: 122.255 ns/op
# Warmup Iteration   2: 123.311 ns/op
Iteration   1: 76.736 ns/op
Iteration   2: 77.330 ns/op
Iteration   3: 76.065 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  76.710 ±(99.9%) 11.550 ns/op [Average]
  (min, avg, max) = (76.065, 76.710, 77.330), stdev = 0.633
  CI (99.9%): [65.160, 88.261] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 100000)

# Run progress: 46.88% complete, ETA 00:12:49
# Fork: 1 of 1
# Warmup Iteration   1: 111.292 ns/op
# Warmup Iteration   2: 110.916 ns/op
Iteration   1: 94.695 ns/op
Iteration   2: 93.913 ns/op
Iteration   3: 93.849 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  94.153 ±(99.9%) 8.596 ns/op [Average]
  (min, avg, max) = (93.849, 94.153, 94.695), stdev = 0.471
  CI (99.9%): [85.556, 102.749] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000000)

# Run progress: 48.44% complete, ETA 00:12:26
# Fork: 1 of 1
# Warmup Iteration   1: 120.400 ns/op
# Warmup Iteration   2: 117.898 ns/op
Iteration   1: 108.648 ns/op
Iteration   2: 100.725 ns/op
Iteration   3: 100.679 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  103.351 ±(99.9%) 83.701 ns/op [Average]
  (min, avg, max) = (100.679, 103.351, 108.648), stdev = 4.588
  CI (99.9%): [19.650, 187.052] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000)

# Run progress: 50.00% complete, ETA 00:12:06
# Fork: 1 of 1
# Warmup Iteration   1: 219.031 ns/op
# Warmup Iteration   2: 211.734 ns/op
Iteration   1: 213.985 ns/op
Iteration   2: 213.910 ns/op
Iteration   3: 214.780 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  214.225 ±(99.9%) 8.799 ns/op [Average]
  (min, avg, max) = (213.910, 214.225, 214.780), stdev = 0.482
  CI (99.9%): [205.426, 223.024] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 10000)

# Run progress: 51.56% complete, ETA 00:11:43
# Fork: 1 of 1
# Warmup Iteration   1: 280.178 ns/op
# Warmup Iteration   2: 280.053 ns/op
Iteration   1: 278.871 ns/op
Iteration   2: 284.882 ns/op
Iteration   3: 275.874 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  279.876 ±(99.9%) 83.698 ns/op [Average]
  (min, avg, max) = (275.874, 279.876, 284.882), stdev = 4.588
  CI (99.9%): [196.177, 363.574] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 100000)

# Run progress: 53.13% complete, ETA 00:11:19
# Fork: 1 of 1
# Warmup Iteration   1: 390.872 ns/op
# Warmup Iteration   2: 376.998 ns/op
Iteration   1: 383.207 ns/op
Iteration   2: 379.834 ns/op
Iteration   3: 379.326 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  380.789 ±(99.9%) 38.481 ns/op [Average]
  (min, avg, max) = (379.326, 380.789, 383.207), stdev = 2.109
  CI (99.9%): [342.308, 419.270] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000000)

# Run progress: 54.69% complete, ETA 00:10:56
# Fork: 1 of 1
# Warmup Iteration   1: 408.300 ns/op
# Warmup Iteration   2: 389.822 ns/op
Iteration   1: 389.912 ns/op
Iteration   2: 402.383 ns/op
Iteration   3: 390.350 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  394.215 ±(99.9%) 129.115 ns/op [Average]
  (min, avg, max) = (389.912, 394.215, 402.383), stdev = 7.077
  CI (99.9%): [265.100, 523.330] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000)

# Run progress: 56.25% complete, ETA 00:10:35
# Fork: 1 of 1
# Warmup Iteration   1: 157.247 ns/op
# Warmup Iteration   2: 161.436 ns/op
Iteration   1: 167.530 ns/op
Iteration   2: 167.132 ns/op
Iteration   3: 167.671 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  167.444 ±(99.9%) 5.101 ns/op [Average]
  (min, avg, max) = (167.132, 167.444, 167.671), stdev = 0.280
  CI (99.9%): [162.344, 172.545] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 10000)

# Run progress: 57.81% complete, ETA 00:10:12
# Fork: 1 of 1
# Warmup Iteration   1: 179.521 ns/op
# Warmup Iteration   2: 182.116 ns/op
Iteration   1: 196.102 ns/op
Iteration   2: 195.954 ns/op
Iteration   3: 195.909 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  195.988 ±(99.9%) 1.843 ns/op [Average]
  (min, avg, max) = (195.909, 195.988, 196.102), stdev = 0.101
  CI (99.9%): [194.146, 197.831] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 100000)

# Run progress: 59.38% complete, ETA 00:09:49
# Fork: 1 of 1
# Warmup Iteration   1: 255.936 ns/op
# Warmup Iteration   2: 260.140 ns/op
Iteration   1: 264.969 ns/op
Iteration   2: 264.715 ns/op
Iteration   3: 264.616 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  264.767 ±(99.9%) 3.328 ns/op [Average]
  (min, avg, max) = (264.616, 264.767, 264.969), stdev = 0.182
  CI (99.9%): [261.439, 268.095] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000000)

# Run progress: 60.94% complete, ETA 00:09:26
# Fork: 1 of 1
# Warmup Iteration   1: 270.103 ns/op
# Warmup Iteration   2: 272.319 ns/op
Iteration   1: 271.258 ns/op
Iteration   2: 270.223 ns/op
Iteration   3: 271.422 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  270.968 ±(99.9%) 11.862 ns/op [Average]
  (min, avg, max) = (270.223, 270.968, 271.422), stdev = 0.650
  CI (99.9%): [259.106, 282.829] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000)

# Run progress: 62.50% complete, ETA 00:09:04
# Fork: 1 of 1
# Warmup Iteration   1: 120.998 ns/op
# Warmup Iteration   2: 119.071 ns/op
Iteration   1: 112.031 ns/op
Iteration   2: 111.920 ns/op
Iteration   3: 111.917 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  111.956 ±(99.9%) 1.190 ns/op [Average]
  (min, avg, max) = (111.917, 111.956, 112.031), stdev = 0.065
  CI (99.9%): [110.766, 113.146] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 10000)

# Run progress: 64.06% complete, ETA 00:08:41
# Fork: 1 of 1
# Warmup Iteration   1: 116.808 ns/op
# Warmup Iteration   2: 118.035 ns/op
Iteration   1: 109.333 ns/op
Iteration   2: 109.293 ns/op
Iteration   3: 109.368 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  109.331 ±(99.9%) 0.684 ns/op [Average]
  (min, avg, max) = (109.293, 109.331, 109.368), stdev = 0.037
  CI (99.9%): [108.647, 110.015] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 100000)

# Run progress: 65.63% complete, ETA 00:08:18
# Fork: 1 of 1
# Warmup Iteration   1: 120.863 ns/op
# Warmup Iteration   2: 121.582 ns/op
Iteration   1: 114.078 ns/op
Iteration   2: 114.557 ns/op
Iteration   3: 114.701 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  114.446 ±(99.9%) 5.948 ns/op [Average]
  (min, avg, max) = (114.078, 114.446, 114.701), stdev = 0.326
  CI (99.9%): [108.498, 120.393] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000000)

# Run progress: 67.19% complete, ETA 00:07:55
# Fork: 1 of 1
# Warmup Iteration   1: 132.165 ns/op
# Warmup Iteration   2: 129.728 ns/op
Iteration   1: 120.042 ns/op
Iteration   2: 120.093 ns/op
Iteration   3: 120.250 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  120.128 ±(99.9%) 1.972 ns/op [Average]
  (min, avg, max) = (120.042, 120.128, 120.250), stdev = 0.108
  CI (99.9%): [118.157, 122.100] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000)

# Run progress: 68.75% complete, ETA 00:07:34
# Fork: 1 of 1
# Warmup Iteration   1: 113.518 ns/op
# Warmup Iteration   2: 113.498 ns/op
Iteration   1: 113.186 ns/op
Iteration   2: 112.689 ns/op
Iteration   3: 112.711 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  112.862 ±(99.9%) 5.129 ns/op [Average]
  (min, avg, max) = (112.689, 112.862, 113.186), stdev = 0.281
  CI (99.9%): [107.733, 117.991] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 10000)

# Run progress: 70.31% complete, ETA 00:07:10
# Fork: 1 of 1
# Warmup Iteration   1: 95.945 ns/op
# Warmup Iteration   2: 100.319 ns/op
Iteration   1: 99.453 ns/op
Iteration   2: 99.285 ns/op
Iteration   3: 100.155 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  99.631 ±(99.9%) 8.416 ns/op [Average]
  (min, avg, max) = (99.285, 99.631, 100.155), stdev = 0.461
  CI (99.9%): [91.214, 108.047] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 100000)

# Run progress: 71.88% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: 92.699 ns/op
# Warmup Iteration   2: 93.931 ns/op
Iteration   1: 92.985 ns/op
Iteration   2: 95.130 ns/op
Iteration   3: 92.948 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  93.688 ±(99.9%) 22.790 ns/op [Average]
  (min, avg, max) = (92.948, 93.688, 95.130), stdev = 1.249
  CI (99.9%): [70.897, 116.478] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000000)

# Run progress: 73.44% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: 96.631 ns/op
# Warmup Iteration   2: 96.440 ns/op
Iteration   1: 96.511 ns/op
Iteration   2: 96.166 ns/op
Iteration   3: 96.295 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  96.324 ±(99.9%) 3.180 ns/op [Average]
  (min, avg, max) = (96.166, 96.324, 96.511), stdev = 0.174
  CI (99.9%): [93.144, 99.504] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000)

# Run progress: 75.00% complete, ETA 00:06:03
# Fork: 1 of 1
# Warmup Iteration   1: 82.370 ns/op
# Warmup Iteration   2: 80.739 ns/op
Iteration   1: 78.287 ns/op
Iteration   2: 78.170 ns/op
Iteration   3: 78.267 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  78.241 ±(99.9%) 1.145 ns/op [Average]
  (min, avg, max) = (78.170, 78.241, 78.287), stdev = 0.063
  CI (99.9%): [77.096, 79.387] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 10000)

# Run progress: 76.56% complete, ETA 00:05:40
# Fork: 1 of 1
# Warmup Iteration   1: 83.803 ns/op
# Warmup Iteration   2: 83.445 ns/op
Iteration   1: 81.449 ns/op
Iteration   2: 81.380 ns/op
Iteration   3: 81.453 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  81.427 ±(99.9%) 0.745 ns/op [Average]
  (min, avg, max) = (81.380, 81.427, 81.453), stdev = 0.041
  CI (99.9%): [80.683, 82.172] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 100000)

# Run progress: 78.13% complete, ETA 00:05:17
# Fork: 1 of 1
# Warmup Iteration   1: 145.739 ns/op
# Warmup Iteration   2: 148.115 ns/op
Iteration   1: 145.475 ns/op
Iteration   2: 145.012 ns/op
Iteration   3: 145.098 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  145.195 ±(99.9%) 4.493 ns/op [Average]
  (min, avg, max) = (145.012, 145.195, 145.475), stdev = 0.246
  CI (99.9%): [140.702, 149.689] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000000)

# Run progress: 79.69% complete, ETA 00:04:54
# Fork: 1 of 1
# Warmup Iteration   1: 79.161 ns/op
# Warmup Iteration   2: 77.260 ns/op
Iteration   1: 102.179 ns/op
Iteration   2: 102.243 ns/op
Iteration   3: 102.253 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  102.225 ±(99.9%) 0.729 ns/op [Average]
  (min, avg, max) = (102.179, 102.225, 102.253), stdev = 0.040
  CI (99.9%): [101.496, 102.955] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000)

# Run progress: 81.25% complete, ETA 00:04:32
# Fork: 1 of 1
# Warmup Iteration   1: 111.840 ns/op
# Warmup Iteration   2: 107.626 ns/op
Iteration   1: 113.910 ns/op
Iteration   2: 113.123 ns/op
Iteration   3: 113.222 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  113.418 ±(99.9%) 7.821 ns/op [Average]
  (min, avg, max) = (113.123, 113.418, 113.910), stdev = 0.429
  CI (99.9%): [105.598, 121.239] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 10000)

# Run progress: 82.81% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: 152.906 ns/op
# Warmup Iteration   2: 151.640 ns/op
Iteration   1: 150.810 ns/op
Iteration   2: 150.689 ns/op
Iteration   3: 150.715 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  150.738 ±(99.9%) 1.160 ns/op [Average]
  (min, avg, max) = (150.689, 150.738, 150.810), stdev = 0.064
  CI (99.9%): [149.579, 151.898] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 100000)

# Run progress: 84.38% complete, ETA 00:03:46
# Fork: 1 of 1
# Warmup Iteration   1: 163.788 ns/op
# Warmup Iteration   2: 163.293 ns/op
Iteration   1: 158.945 ns/op
Iteration   2: 158.636 ns/op
Iteration   3: 158.135 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  158.572 ±(99.9%) 7.459 ns/op [Average]
  (min, avg, max) = (158.135, 158.572, 158.945), stdev = 0.409
  CI (99.9%): [151.113, 166.031] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000000)

# Run progress: 85.94% complete, ETA 00:03:23
# Fork: 1 of 1
# Warmup Iteration   1: 133.739 ns/op
# Warmup Iteration   2: 130.809 ns/op
Iteration   1: 136.620 ns/op
Iteration   2: 136.082 ns/op
Iteration   3: 136.059 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  136.254 ±(99.9%) 5.791 ns/op [Average]
  (min, avg, max) = (136.059, 136.254, 136.620), stdev = 0.317
  CI (99.9%): [130.462, 142.045] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000)

# Run progress: 87.50% complete, ETA 00:03:01
# Fork: 1 of 1
# Warmup Iteration   1: 214.945 ns/op
# Warmup Iteration   2: 214.159 ns/op
Iteration   1: 211.123 ns/op
Iteration   2: 211.028 ns/op
Iteration   3: 210.994 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  211.049 ±(99.9%) 1.221 ns/op [Average]
  (min, avg, max) = (210.994, 211.049, 211.123), stdev = 0.067
  CI (99.9%): [209.827, 212.270] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 10000)

# Run progress: 89.06% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: 318.176 ns/op
# Warmup Iteration   2: 303.883 ns/op
Iteration   1: 309.163 ns/op
Iteration   2: 306.582 ns/op
Iteration   3: 305.781 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  307.175 ±(99.9%) 32.246 ns/op [Average]
  (min, avg, max) = (305.781, 307.175, 309.163), stdev = 1.768
  CI (99.9%): [274.929, 339.421] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 100000)

# Run progress: 90.63% complete, ETA 00:02:15
# Fork: 1 of 1
# Warmup Iteration   1: 360.621 ns/op
# Warmup Iteration   2: 354.274 ns/op
Iteration   1: 344.761 ns/op
Iteration   2: 339.679 ns/op
Iteration   3: 341.387 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  341.942 ±(99.9%) 47.174 ns/op [Average]
  (min, avg, max) = (339.679, 341.942, 344.761), stdev = 2.586
  CI (99.9%): [294.768, 389.117] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000000)

# Run progress: 92.19% complete, ETA 00:01:53
# Fork: 1 of 1
# Warmup Iteration   1: 435.077 ns/op
# Warmup Iteration   2: 427.742 ns/op
Iteration   1: 430.851 ns/op
Iteration   2: 434.631 ns/op
Iteration   3: 426.374 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  430.619 ±(99.9%) 75.401 ns/op [Average]
  (min, avg, max) = (426.374, 430.619, 434.631), stdev = 4.133
  CI (99.9%): [355.218, 506.019] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000)

# Run progress: 93.75% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 144.441 ns/op
# Warmup Iteration   2: 150.548 ns/op
Iteration   1: 154.068 ns/op
Iteration   2: 154.070 ns/op
Iteration   3: 154.058 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  154.065 ±(99.9%) 0.118 ns/op [Average]
  (min, avg, max) = (154.058, 154.065, 154.070), stdev = 0.006
  CI (99.9%): [153.947, 154.183] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 10000)

# Run progress: 95.31% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 179.694 ns/op
# Warmup Iteration   2: 182.166 ns/op
Iteration   1: 192.592 ns/op
Iteration   2: 192.849 ns/op
Iteration   3: 192.471 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  192.638 ±(99.9%) 3.522 ns/op [Average]
  (min, avg, max) = (192.471, 192.638, 192.849), stdev = 0.193
  CI (99.9%): [189.116, 196.159] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 100000)

# Run progress: 96.88% complete, ETA 00:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 300.502 ns/op
# Warmup Iteration   2: 286.119 ns/op
Iteration   1: 278.770 ns/op
Iteration   2: 278.613 ns/op
Iteration   3: 279.129 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  278.838 ±(99.9%) 4.822 ns/op [Average]
  (min, avg, max) = (278.613, 278.838, 279.129), stdev = 0.264
  CI (99.9%): [274.015, 283.660] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000000)

# Run progress: 98.44% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 253.413 ns/op
# Warmup Iteration   2: 261.581 ns/op
Iteration   1: 267.914 ns/op
Iteration   2: 267.637 ns/op
Iteration   3: 267.836 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  267.796 ±(99.9%) 2.603 ns/op [Average]
  (min, avg, max) = (267.637, 267.796, 267.914), stdev = 0.143
  CI (99.9%): [265.193, 270.399] (assumes normal distribution)


# Run complete. Total time: 00:24:12

Benchmark                                         (size)  Mode  Cnt    Score     Error  Units
SetMapJavaVsScalaBenchmarks.javaMapHit              1000  avgt    3  109.776 ±  14.894  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit             10000  avgt    3   78.764 ±  84.309  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit            100000  avgt    3   96.505 ±  12.525  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit           1000000  avgt    3  120.241 ±  71.471  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss             1000  avgt    3   91.559 ±  19.571  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss            10000  avgt    3   89.332 ±  10.203  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss           100000  avgt    3   88.029 ±  12.091  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss          1000000  avgt    3   87.213 ±  54.278  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit              1000  avgt    3   77.410 ±  12.676  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit             10000  avgt    3   93.049 ±  10.555  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit            100000  avgt    3   85.477 ±  13.338  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit           1000000  avgt    3   90.260 ±  61.824  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss             1000  avgt    3   84.840 ±  29.378  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss            10000  avgt    3   96.554 ±  18.053  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss           100000  avgt    3   82.613 ±  12.182  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss          1000000  avgt    3   97.242 ±  66.543  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit       1000  avgt    3  128.951 ±   0.645  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit      10000  avgt    3  132.727 ±  14.151  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit     100000  avgt    3  132.246 ±  14.801  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit    1000000  avgt    3  137.658 ±  94.235  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss      1000  avgt    3  149.740 ±  49.750  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss     10000  avgt    3  175.152 ±  29.008  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss    100000  avgt    3  140.060 ± 180.069  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss   1000000  avgt    3  144.042 ±  87.752  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit       1000  avgt    3   85.237 ±  22.156  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit      10000  avgt    3   98.681 ±  10.706  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit     100000  avgt    3   90.540 ±  14.042  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit    1000000  avgt    3  101.148 ±  29.231  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss      1000  avgt    3   96.365 ±  31.724  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss     10000  avgt    3   76.710 ±  11.550  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss    100000  avgt    3   94.153 ±   8.596  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss   1000000  avgt    3  103.351 ±  83.701  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit             1000  avgt    3  214.225 ±   8.799  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit            10000  avgt    3  279.876 ±  83.698  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit           100000  avgt    3  380.789 ±  38.481  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit          1000000  avgt    3  394.215 ± 129.115  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss            1000  avgt    3  167.444 ±   5.101  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss           10000  avgt    3  195.988 ±   1.843  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss          100000  avgt    3  264.767 ±   3.328  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss         1000000  avgt    3  270.968 ±  11.862  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit      1000  avgt    3  111.956 ±   1.190  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit     10000  avgt    3  109.331 ±   0.684  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit    100000  avgt    3  114.446 ±   5.948  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit   1000000  avgt    3  120.128 ±   1.972  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss     1000  avgt    3  112.862 ±   5.129  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss    10000  avgt    3   99.631 ±   8.416  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss   100000  avgt    3   93.688 ±  22.790  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss  1000000  avgt    3   96.324 ±   3.180  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit      1000  avgt    3   78.241 ±   1.145  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit     10000  avgt    3   81.427 ±   0.745  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit    100000  avgt    3  145.195 ±   4.493  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit   1000000  avgt    3  102.225 ±   0.729  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss     1000  avgt    3  113.418 ±   7.821  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss    10000  avgt    3  150.738 ±   1.160  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss   100000  avgt    3  158.572 ±   7.459  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss  1000000  avgt    3  136.254 ±   5.791  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit             1000  avgt    3  211.049 ±   1.221  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit            10000  avgt    3  307.175 ±  32.246  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit           100000  avgt    3  341.942 ±  47.174  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit          1000000  avgt    3  430.619 ±  75.401  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss            1000  avgt    3  154.065 ±   0.118  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss           10000  avgt    3  192.638 ±   3.522  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss          100000  avgt    3  278.838 ±   4.822  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss         1000000  avgt    3  267.796 ±   2.603  ns/op

Benchmark result is saved to /static/data/charts/set-map-java-vs-scala-2-12/jdk17.json
