# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:18:40
# Fork: 1 of 1
# Warmup Iteration   1: 1246.630 ns/op
# Warmup Iteration   2: 1040.845 ns/op
# Warmup Iteration   3: 965.156 ns/op
# Warmup Iteration   4: 970.786 ns/op
# Warmup Iteration   5: 968.189 ns/op
Iteration   1: 967.140 ns/op
Iteration   2: 997.340 ns/op
Iteration   3: 967.352 ns/op
Iteration   4: 969.561 ns/op
Iteration   5: 1059.230 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  992.125 ±(99.9%) 152.544 ns/op [Average]
  (min, avg, max) = (967.140, 992.125, 1059.230), stdev = 39.615
  CI (99.9%): [839.581, 1144.668] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.89% complete, ETA 00:19:37
# Fork: 1 of 1
# Warmup Iteration   1: 1420.925 ns/op
# Warmup Iteration   2: 1067.414 ns/op
# Warmup Iteration   3: 1057.702 ns/op
# Warmup Iteration   4: 1064.128 ns/op
# Warmup Iteration   5: 1059.166 ns/op
Iteration   1: 1068.216 ns/op
Iteration   2: 1061.944 ns/op
Iteration   3: 1064.541 ns/op
Iteration   4: 1070.903 ns/op
Iteration   5: 1056.417 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1064.405 ±(99.9%) 21.666 ns/op [Average]
  (min, avg, max) = (1056.417, 1064.405, 1070.903), stdev = 5.626
  CI (99.9%): [1042.739, 1086.070] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 1.79% complete, ETA 00:19:24
# Fork: 1 of 1
# Warmup Iteration   1: 1805.653 ns/op
# Warmup Iteration   2: 1550.472 ns/op
# Warmup Iteration   3: 1488.326 ns/op
# Warmup Iteration   4: 1487.365 ns/op
# Warmup Iteration   5: 1584.446 ns/op
Iteration   1: 1482.973 ns/op
Iteration   2: 1479.013 ns/op
Iteration   3: 1487.613 ns/op
Iteration   4: 1489.673 ns/op
Iteration   5: 1478.957 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1483.646 ±(99.9%) 18.861 ns/op [Average]
  (min, avg, max) = (1478.957, 1483.646, 1489.673), stdev = 4.898
  CI (99.9%): [1464.785, 1502.507] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 2.68% complete, ETA 00:19:11
# Fork: 1 of 1
# Warmup Iteration   1: 2534.788 ns/op
# Warmup Iteration   2: 2042.560 ns/op
# Warmup Iteration   3: 2075.360 ns/op
# Warmup Iteration   4: 2084.538 ns/op
# Warmup Iteration   5: 2185.222 ns/op
Iteration   1: 2032.219 ns/op
Iteration   2: 2017.493 ns/op
Iteration   3: 2025.232 ns/op
Iteration   4: 2079.411 ns/op
Iteration   5: 2020.498 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  2034.970 ±(99.9%) 98.026 ns/op [Average]
  (min, avg, max) = (2017.493, 2034.970, 2079.411), stdev = 25.457
  CI (99.9%): [1936.944, 2132.997] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 3.57% complete, ETA 00:18:59
# Fork: 1 of 1
# Warmup Iteration   1: 7566.348 ns/op
# Warmup Iteration   2: 6737.275 ns/op
# Warmup Iteration   3: 6511.117 ns/op
# Warmup Iteration   4: 6540.878 ns/op
# Warmup Iteration   5: 6744.621 ns/op
Iteration   1: 6629.826 ns/op
Iteration   2: 6531.321 ns/op
Iteration   3: 6559.779 ns/op
Iteration   4: 6570.630 ns/op
Iteration   5: 6539.755 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  6566.262 ±(99.9%) 149.445 ns/op [Average]
  (min, avg, max) = (6531.321, 6566.262, 6629.826), stdev = 38.810
  CI (99.9%): [6416.817, 6715.707] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 4.46% complete, ETA 00:18:47
# Fork: 1 of 1
# Warmup Iteration   1: 12464.046 ns/op
# Warmup Iteration   2: 11326.422 ns/op
# Warmup Iteration   3: 11282.088 ns/op
# Warmup Iteration   4: 11294.463 ns/op
# Warmup Iteration   5: 11239.995 ns/op
Iteration   1: 11177.548 ns/op
Iteration   2: 11141.853 ns/op
Iteration   3: 11247.259 ns/op
Iteration   4: 11156.614 ns/op
Iteration   5: 11394.843 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  11223.624 ±(99.9%) 400.052 ns/op [Average]
  (min, avg, max) = (11141.853, 11223.624, 11394.843), stdev = 103.892
  CI (99.9%): [10823.572, 11623.675] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 5.36% complete, ETA 00:18:36
# Fork: 1 of 1
# Warmup Iteration   1: 99984.154 ns/op
# Warmup Iteration   2: 91061.157 ns/op
# Warmup Iteration   3: 91384.648 ns/op
# Warmup Iteration   4: 90314.639 ns/op
# Warmup Iteration   5: 90470.627 ns/op
Iteration   1: 90669.689 ns/op
Iteration   2: 95626.999 ns/op
Iteration   3: 90279.896 ns/op
Iteration   4: 90010.968 ns/op
Iteration   5: 90453.213 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  91408.153 ±(99.9%) 9128.746 ns/op [Average]
  (min, avg, max) = (90010.968, 91408.153, 95626.999), stdev = 2370.706
  CI (99.9%): [82279.407, 100536.899] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 6.25% complete, ETA 00:18:24
# Fork: 1 of 1
# Warmup Iteration   1: 1222.850 ns/op
# Warmup Iteration   2: 995.373 ns/op
# Warmup Iteration   3: 974.866 ns/op
# Warmup Iteration   4: 989.468 ns/op
# Warmup Iteration   5: 974.451 ns/op
Iteration   1: 966.310 ns/op
Iteration   2: 991.948 ns/op
Iteration   3: 979.709 ns/op
Iteration   4: 970.873 ns/op
Iteration   5: 997.635 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  981.295 ±(99.9%) 51.524 ns/op [Average]
  (min, avg, max) = (966.310, 981.295, 997.635), stdev = 13.381
  CI (99.9%): [929.770, 1032.819] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 7.14% complete, ETA 00:18:13
# Fork: 1 of 1
# Warmup Iteration   1: 1394.384 ns/op
# Warmup Iteration   2: 1080.606 ns/op
# Warmup Iteration   3: 1061.715 ns/op
# Warmup Iteration   4: 1082.584 ns/op
# Warmup Iteration   5: 1065.393 ns/op
Iteration   1: 1084.216 ns/op
Iteration   2: 1059.710 ns/op
Iteration   3: 1063.449 ns/op
Iteration   4: 1066.362 ns/op
Iteration   5: 1064.862 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1067.720 ±(99.9%) 36.760 ns/op [Average]
  (min, avg, max) = (1059.710, 1067.720, 1084.216), stdev = 9.546
  CI (99.9%): [1030.960, 1104.480] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 8.04% complete, ETA 00:18:01
# Fork: 1 of 1
# Warmup Iteration   1: 2133.805 ns/op
# Warmup Iteration   2: 1487.237 ns/op
# Warmup Iteration   3: 1479.351 ns/op
# Warmup Iteration   4: 1490.502 ns/op
# Warmup Iteration   5: 1476.719 ns/op
Iteration   1: 1481.664 ns/op
Iteration   2: 1482.084 ns/op
Iteration   3: 1510.910 ns/op
Iteration   4: 1481.319 ns/op
Iteration   5: 1481.350 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1487.465 ±(99.9%) 50.480 ns/op [Average]
  (min, avg, max) = (1481.319, 1487.465, 1510.910), stdev = 13.110
  CI (99.9%): [1436.985, 1537.946] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 8.93% complete, ETA 00:17:50
# Fork: 1 of 1
# Warmup Iteration   1: 2462.997 ns/op
# Warmup Iteration   2: 2072.239 ns/op
# Warmup Iteration   3: 2072.776 ns/op
# Warmup Iteration   4: 2023.194 ns/op
# Warmup Iteration   5: 2087.291 ns/op
Iteration   1: 2151.929 ns/op
Iteration   2: 2019.466 ns/op
Iteration   3: 2060.073 ns/op
Iteration   4: 2069.035 ns/op
Iteration   5: 2011.626 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  2062.426 ±(99.9%) 215.140 ns/op [Average]
  (min, avg, max) = (2011.626, 2062.426, 2151.929), stdev = 55.871
  CI (99.9%): [1847.286, 2277.566] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 9.82% complete, ETA 00:17:39
# Fork: 1 of 1
# Warmup Iteration   1: 7410.383 ns/op
# Warmup Iteration   2: 6753.534 ns/op
# Warmup Iteration   3: 6548.201 ns/op
# Warmup Iteration   4: 6498.580 ns/op
# Warmup Iteration   5: 6546.035 ns/op
Iteration   1: 6547.531 ns/op
Iteration   2: 6822.200 ns/op
Iteration   3: 6787.867 ns/op
Iteration   4: 6545.729 ns/op
Iteration   5: 6517.345 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  6644.135 ±(99.9%) 569.380 ns/op [Average]
  (min, avg, max) = (6517.345, 6644.135, 6822.200), stdev = 147.866
  CI (99.9%): [6074.755, 7213.515] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 10.71% complete, ETA 00:17:28
# Fork: 1 of 1
# Warmup Iteration   1: 13470.907 ns/op
# Warmup Iteration   2: 11287.935 ns/op
# Warmup Iteration   3: 11990.907 ns/op
# Warmup Iteration   4: 11224.720 ns/op
# Warmup Iteration   5: 11195.620 ns/op
Iteration   1: 11195.316 ns/op
Iteration   2: 11177.797 ns/op
Iteration   3: 11148.389 ns/op
Iteration   4: 11205.341 ns/op
Iteration   5: 11950.186 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  11335.406 ±(99.9%) 1325.977 ns/op [Average]
  (min, avg, max) = (11148.389, 11335.406, 11950.186), stdev = 344.352
  CI (99.9%): [10009.429, 12661.383] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 11.61% complete, ETA 00:17:17
# Fork: 1 of 1
# Warmup Iteration   1: 107983.589 ns/op
# Warmup Iteration   2: 95014.934 ns/op
# Warmup Iteration   3: 94942.184 ns/op
# Warmup Iteration   4: 94685.694 ns/op
# Warmup Iteration   5: 94613.558 ns/op
Iteration   1: 94291.411 ns/op
Iteration   2: 94223.831 ns/op
Iteration   3: 94512.317 ns/op
Iteration   4: 94344.232 ns/op
Iteration   5: 94566.764 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  94387.711 ±(99.9%) 563.326 ns/op [Average]
  (min, avg, max) = (94223.831, 94387.711, 94566.764), stdev = 146.294
  CI (99.9%): [93824.385, 94951.037] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 12.50% complete, ETA 00:17:06
# Fork: 1 of 1
# Warmup Iteration   1: 1321.999 ns/op
# Warmup Iteration   2: 974.457 ns/op
# Warmup Iteration   3: 970.828 ns/op
# Warmup Iteration   4: 971.714 ns/op
# Warmup Iteration   5: 968.164 ns/op
Iteration   1: 972.992 ns/op
Iteration   2: 968.351 ns/op
Iteration   3: 967.456 ns/op
Iteration   4: 969.258 ns/op
Iteration   5: 965.290 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  968.670 ±(99.9%) 10.895 ns/op [Average]
  (min, avg, max) = (965.290, 968.670, 972.992), stdev = 2.830
  CI (99.9%): [957.774, 979.565] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 13.39% complete, ETA 00:16:56
# Fork: 1 of 1
# Warmup Iteration   1: 1354.914 ns/op
# Warmup Iteration   2: 1087.405 ns/op
# Warmup Iteration   3: 984.152 ns/op
# Warmup Iteration   4: 990.121 ns/op
# Warmup Iteration   5: 986.010 ns/op
Iteration   1: 989.491 ns/op
Iteration   2: 997.500 ns/op
Iteration   3: 986.632 ns/op
Iteration   4: 987.329 ns/op
Iteration   5: 1042.744 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1000.739 ±(99.9%) 91.939 ns/op [Average]
  (min, avg, max) = (986.632, 1000.739, 1042.744), stdev = 23.876
  CI (99.9%): [908.800, 1092.679] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 14.29% complete, ETA 00:16:46
# Fork: 1 of 1
# Warmup Iteration   1: 1644.680 ns/op
# Warmup Iteration   2: 1336.607 ns/op
# Warmup Iteration   3: 1399.049 ns/op
# Warmup Iteration   4: 1314.306 ns/op
# Warmup Iteration   5: 1327.281 ns/op
Iteration   1: 1323.554 ns/op
Iteration   2: 1323.724 ns/op
Iteration   3: 1319.590 ns/op
Iteration   4: 1320.377 ns/op
Iteration   5: 1325.197 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1322.488 ±(99.9%) 9.205 ns/op [Average]
  (min, avg, max) = (1319.590, 1322.488, 1325.197), stdev = 2.390
  CI (99.9%): [1313.284, 1331.693] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 15.18% complete, ETA 00:16:35
# Fork: 1 of 1
# Warmup Iteration   1: 2219.039 ns/op
# Warmup Iteration   2: 1824.599 ns/op
# Warmup Iteration   3: 1824.136 ns/op
# Warmup Iteration   4: 1796.224 ns/op
# Warmup Iteration   5: 1803.228 ns/op
Iteration   1: 1796.291 ns/op
Iteration   2: 1806.038 ns/op
Iteration   3: 1800.122 ns/op
Iteration   4: 1794.874 ns/op
Iteration   5: 1832.636 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1805.992 ±(99.9%) 59.718 ns/op [Average]
  (min, avg, max) = (1794.874, 1805.992, 1832.636), stdev = 15.509
  CI (99.9%): [1746.274, 1865.710] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 16.07% complete, ETA 00:16:25
# Fork: 1 of 1
# Warmup Iteration   1: 6975.346 ns/op
# Warmup Iteration   2: 5737.778 ns/op
# Warmup Iteration   3: 5697.236 ns/op
# Warmup Iteration   4: 5685.568 ns/op
# Warmup Iteration   5: 5688.534 ns/op
Iteration   1: 5707.770 ns/op
Iteration   2: 5723.918 ns/op
Iteration   3: 5721.337 ns/op
Iteration   4: 5716.204 ns/op
Iteration   5: 5719.642 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  5717.774 ±(99.9%) 24.084 ns/op [Average]
  (min, avg, max) = (5707.770, 5717.774, 5723.918), stdev = 6.255
  CI (99.9%): [5693.690, 5741.859] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 16.96% complete, ETA 00:16:14
# Fork: 1 of 1
# Warmup Iteration   1: 12165.405 ns/op
# Warmup Iteration   2: 10965.364 ns/op
# Warmup Iteration   3: 10914.467 ns/op
# Warmup Iteration   4: 10921.845 ns/op
# Warmup Iteration   5: 10898.752 ns/op
Iteration   1: 10927.761 ns/op
Iteration   2: 10881.161 ns/op
Iteration   3: 10893.985 ns/op
Iteration   4: 11456.852 ns/op
Iteration   5: 10873.172 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  11006.586 ±(99.9%) 972.550 ns/op [Average]
  (min, avg, max) = (10873.172, 11006.586, 11456.852), stdev = 252.568
  CI (99.9%): [10034.036, 11979.136] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 17.86% complete, ETA 00:16:04
# Fork: 1 of 1
# Warmup Iteration   1: 106007.577 ns/op
# Warmup Iteration   2: 98128.034 ns/op
# Warmup Iteration   3: 97465.184 ns/op
# Warmup Iteration   4: 97141.918 ns/op
# Warmup Iteration   5: 97030.823 ns/op
Iteration   1: 96960.156 ns/op
Iteration   2: 96421.190 ns/op
Iteration   3: 96937.821 ns/op
Iteration   4: 96268.159 ns/op
Iteration   5: 96801.208 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  96677.707 ±(99.9%) 1211.912 ns/op [Average]
  (min, avg, max) = (96268.159, 96677.707, 96960.156), stdev = 314.730
  CI (99.9%): [95465.794, 97889.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 18.75% complete, ETA 00:15:53
# Fork: 1 of 1
# Warmup Iteration   1: 1235.894 ns/op
# Warmup Iteration   2: 979.593 ns/op
# Warmup Iteration   3: 974.102 ns/op
# Warmup Iteration   4: 964.392 ns/op
# Warmup Iteration   5: 964.977 ns/op
Iteration   1: 977.811 ns/op
Iteration   2: 966.004 ns/op
Iteration   3: 970.931 ns/op
Iteration   4: 970.854 ns/op
Iteration   5: 970.213 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  971.163 ±(99.9%) 16.320 ns/op [Average]
  (min, avg, max) = (966.004, 971.163, 977.811), stdev = 4.238
  CI (99.9%): [954.842, 987.483] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 19.64% complete, ETA 00:15:43
# Fork: 1 of 1
# Warmup Iteration   1: 1246.750 ns/op
# Warmup Iteration   2: 1004.428 ns/op
# Warmup Iteration   3: 994.694 ns/op
# Warmup Iteration   4: 994.214 ns/op
# Warmup Iteration   5: 990.901 ns/op
Iteration   1: 992.925 ns/op
Iteration   2: 986.237 ns/op
Iteration   3: 992.217 ns/op
Iteration   4: 993.853 ns/op
Iteration   5: 999.834 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  993.013 ±(99.9%) 18.646 ns/op [Average]
  (min, avg, max) = (986.237, 993.013, 999.834), stdev = 4.842
  CI (99.9%): [974.368, 1011.659] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 20.54% complete, ETA 00:15:32
# Fork: 1 of 1
# Warmup Iteration   1: 1655.178 ns/op
# Warmup Iteration   2: 1337.245 ns/op
# Warmup Iteration   3: 1322.097 ns/op
# Warmup Iteration   4: 1316.195 ns/op
# Warmup Iteration   5: 1334.412 ns/op
Iteration   1: 1322.612 ns/op
Iteration   2: 1335.085 ns/op
Iteration   3: 1313.783 ns/op
Iteration   4: 1312.794 ns/op
Iteration   5: 1327.076 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1322.270 ±(99.9%) 35.981 ns/op [Average]
  (min, avg, max) = (1312.794, 1322.270, 1335.085), stdev = 9.344
  CI (99.9%): [1286.288, 1358.251] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 21.43% complete, ETA 00:15:22
# Fork: 1 of 1
# Warmup Iteration   1: 2313.577 ns/op
# Warmup Iteration   2: 1923.894 ns/op
# Warmup Iteration   3: 1798.117 ns/op
# Warmup Iteration   4: 1850.280 ns/op
# Warmup Iteration   5: 1794.488 ns/op
Iteration   1: 1832.823 ns/op
Iteration   2: 1794.883 ns/op
Iteration   3: 1804.051 ns/op
Iteration   4: 1818.548 ns/op
Iteration   5: 1791.647 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1808.391 ±(99.9%) 66.187 ns/op [Average]
  (min, avg, max) = (1791.647, 1808.391, 1832.823), stdev = 17.189
  CI (99.9%): [1742.204, 1874.577] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 22.32% complete, ETA 00:15:11
# Fork: 1 of 1
# Warmup Iteration   1: 6509.276 ns/op
# Warmup Iteration   2: 5804.721 ns/op
# Warmup Iteration   3: 5696.404 ns/op
# Warmup Iteration   4: 5698.584 ns/op
# Warmup Iteration   5: 5727.312 ns/op
Iteration   1: 5714.558 ns/op
Iteration   2: 5726.829 ns/op
Iteration   3: 5716.483 ns/op
Iteration   4: 5712.694 ns/op
Iteration   5: 5697.076 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  5713.528 ±(99.9%) 41.206 ns/op [Average]
  (min, avg, max) = (5697.076, 5713.528, 5726.829), stdev = 10.701
  CI (99.9%): [5672.322, 5754.734] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 23.21% complete, ETA 00:15:00
# Fork: 1 of 1
# Warmup Iteration   1: 12444.660 ns/op
# Warmup Iteration   2: 10910.758 ns/op
# Warmup Iteration   3: 10873.798 ns/op
# Warmup Iteration   4: 10824.247 ns/op
# Warmup Iteration   5: 10828.579 ns/op
Iteration   1: 10852.248 ns/op
Iteration   2: 10754.416 ns/op
Iteration   3: 10774.759 ns/op
Iteration   4: 10848.454 ns/op
Iteration   5: 10835.474 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  10813.070 ±(99.9%) 174.312 ns/op [Average]
  (min, avg, max) = (10754.416, 10813.070, 10852.248), stdev = 45.268
  CI (99.9%): [10638.758, 10987.382] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 24.11% complete, ETA 00:14:50
# Fork: 1 of 1
# Warmup Iteration   1: 113015.002 ns/op
# Warmup Iteration   2: 99481.436 ns/op
# Warmup Iteration   3: 99534.266 ns/op
# Warmup Iteration   4: 100080.172 ns/op
# Warmup Iteration   5: 98692.513 ns/op
Iteration   1: 99523.510 ns/op
Iteration   2: 98652.490 ns/op
Iteration   3: 98784.217 ns/op
Iteration   4: 98655.281 ns/op
Iteration   5: 98120.644 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  98747.228 ±(99.9%) 1938.771 ns/op [Average]
  (min, avg, max) = (98120.644, 98747.228, 99523.510), stdev = 503.493
  CI (99.9%): [96808.457, 100686.000] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 25.00% complete, ETA 00:14:39
# Fork: 1 of 1
# Warmup Iteration   1: 1227.052 ns/op
# Warmup Iteration   2: 981.241 ns/op
# Warmup Iteration   3: 1012.804 ns/op
# Warmup Iteration   4: 985.280 ns/op
# Warmup Iteration   5: 998.781 ns/op
Iteration   1: 968.023 ns/op
Iteration   2: 968.453 ns/op
Iteration   3: 973.763 ns/op
Iteration   4: 967.727 ns/op
Iteration   5: 969.266 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  969.446 ±(99.9%) 9.556 ns/op [Average]
  (min, avg, max) = (967.727, 969.446, 973.763), stdev = 2.482
  CI (99.9%): [959.891, 979.002] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 25.89% complete, ETA 00:14:29
# Fork: 1 of 1
# Warmup Iteration   1: 1396.732 ns/op
# Warmup Iteration   2: 1077.522 ns/op
# Warmup Iteration   3: 1059.790 ns/op
# Warmup Iteration   4: 1063.707 ns/op
# Warmup Iteration   5: 1058.113 ns/op
Iteration   1: 1092.531 ns/op
Iteration   2: 1060.009 ns/op
Iteration   3: 1061.169 ns/op
Iteration   4: 1086.412 ns/op
Iteration   5: 1083.664 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1076.757 ±(99.9%) 58.182 ns/op [Average]
  (min, avg, max) = (1060.009, 1076.757, 1092.531), stdev = 15.110
  CI (99.9%): [1018.575, 1134.939] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 26.79% complete, ETA 00:14:18
# Fork: 1 of 1
# Warmup Iteration   1: 1887.640 ns/op
# Warmup Iteration   2: 1596.510 ns/op
# Warmup Iteration   3: 1544.942 ns/op
# Warmup Iteration   4: 1558.703 ns/op
# Warmup Iteration   5: 1536.047 ns/op
Iteration   1: 1542.338 ns/op
Iteration   2: 1540.320 ns/op
Iteration   3: 1565.799 ns/op
Iteration   4: 1577.456 ns/op
Iteration   5: 1539.489 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1553.080 ±(99.9%) 67.219 ns/op [Average]
  (min, avg, max) = (1539.489, 1553.080, 1577.456), stdev = 17.456
  CI (99.9%): [1485.862, 1620.299] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 27.68% complete, ETA 00:14:08
# Fork: 1 of 1
# Warmup Iteration   1: 2582.807 ns/op
# Warmup Iteration   2: 2149.636 ns/op
# Warmup Iteration   3: 2125.941 ns/op
# Warmup Iteration   4: 2134.905 ns/op
# Warmup Iteration   5: 2252.626 ns/op
Iteration   1: 2137.403 ns/op
Iteration   2: 2115.936 ns/op
Iteration   3: 2269.007 ns/op
Iteration   4: 2179.371 ns/op
Iteration   5: 2118.112 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  2163.966 ±(99.9%) 246.457 ns/op [Average]
  (min, avg, max) = (2115.936, 2163.966, 2269.007), stdev = 64.004
  CI (99.9%): [1917.509, 2410.422] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 28.57% complete, ETA 00:13:58
# Fork: 1 of 1
# Warmup Iteration   1: 8491.385 ns/op
# Warmup Iteration   2: 7123.284 ns/op
# Warmup Iteration   3: 7047.223 ns/op
# Warmup Iteration   4: 7043.266 ns/op
# Warmup Iteration   5: 7027.751 ns/op
Iteration   1: 7064.459 ns/op
Iteration   2: 7066.256 ns/op
Iteration   3: 7045.911 ns/op
Iteration   4: 7034.221 ns/op
Iteration   5: 7132.311 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  7068.632 ±(99.9%) 146.355 ns/op [Average]
  (min, avg, max) = (7034.221, 7068.632, 7132.311), stdev = 38.008
  CI (99.9%): [6922.277, 7214.987] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 29.46% complete, ETA 00:13:47
# Fork: 1 of 1
# Warmup Iteration   1: 16082.264 ns/op
# Warmup Iteration   2: 14117.383 ns/op
# Warmup Iteration   3: 13817.889 ns/op
# Warmup Iteration   4: 13848.952 ns/op
# Warmup Iteration   5: 13855.395 ns/op
Iteration   1: 13941.744 ns/op
Iteration   2: 13821.924 ns/op
Iteration   3: 13817.177 ns/op
Iteration   4: 13822.431 ns/op
Iteration   5: 13838.826 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  13848.420 ±(99.9%) 203.347 ns/op [Average]
  (min, avg, max) = (13817.177, 13848.420, 13941.744), stdev = 52.809
  CI (99.9%): [13645.073, 14051.767] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 30.36% complete, ETA 00:13:37
# Fork: 1 of 1
# Warmup Iteration   1: 97409.177 ns/op
# Warmup Iteration   2: 89171.819 ns/op
# Warmup Iteration   3: 94050.968 ns/op
# Warmup Iteration   4: 88941.632 ns/op
# Warmup Iteration   5: 88727.394 ns/op
Iteration   1: 88635.727 ns/op
Iteration   2: 88649.746 ns/op
Iteration   3: 88786.329 ns/op
Iteration   4: 88810.141 ns/op
Iteration   5: 88403.713 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  88657.131 ±(99.9%) 623.392 ns/op [Average]
  (min, avg, max) = (88403.713, 88657.131, 88810.141), stdev = 161.893
  CI (99.9%): [88033.739, 89280.523] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 31.25% complete, ETA 00:13:26
# Fork: 1 of 1
# Warmup Iteration   1: 1226.676 ns/op
# Warmup Iteration   2: 981.551 ns/op
# Warmup Iteration   3: 971.499 ns/op
# Warmup Iteration   4: 976.796 ns/op
# Warmup Iteration   5: 975.015 ns/op
Iteration   1: 967.048 ns/op
Iteration   2: 970.192 ns/op
Iteration   3: 967.818 ns/op
Iteration   4: 975.734 ns/op
Iteration   5: 969.601 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  970.079 ±(99.9%) 13.132 ns/op [Average]
  (min, avg, max) = (967.048, 970.079, 975.734), stdev = 3.410
  CI (99.9%): [956.947, 983.210] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 32.14% complete, ETA 00:13:16
# Fork: 1 of 1
# Warmup Iteration   1: 1351.212 ns/op
# Warmup Iteration   2: 1069.691 ns/op
# Warmup Iteration   3: 1064.927 ns/op
# Warmup Iteration   4: 1157.744 ns/op
# Warmup Iteration   5: 1072.023 ns/op
Iteration   1: 1061.030 ns/op
Iteration   2: 1067.751 ns/op
Iteration   3: 1111.633 ns/op
Iteration   4: 1070.352 ns/op
Iteration   5: 1125.958 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1087.345 ±(99.9%) 113.021 ns/op [Average]
  (min, avg, max) = (1061.030, 1087.345, 1125.958), stdev = 29.351
  CI (99.9%): [974.324, 1200.366] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 33.04% complete, ETA 00:13:05
# Fork: 1 of 1
# Warmup Iteration   1: 1869.078 ns/op
# Warmup Iteration   2: 1559.107 ns/op
# Warmup Iteration   3: 1549.918 ns/op
# Warmup Iteration   4: 1540.207 ns/op
# Warmup Iteration   5: 1669.845 ns/op
Iteration   1: 1547.643 ns/op
Iteration   2: 1550.065 ns/op
Iteration   3: 1545.293 ns/op
Iteration   4: 1544.460 ns/op
Iteration   5: 1543.523 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1546.197 ±(99.9%) 10.195 ns/op [Average]
  (min, avg, max) = (1543.523, 1546.197, 1550.065), stdev = 2.648
  CI (99.9%): [1536.002, 1556.392] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 33.93% complete, ETA 00:12:54
# Fork: 1 of 1
# Warmup Iteration   1: 2586.486 ns/op
# Warmup Iteration   2: 2160.029 ns/op
# Warmup Iteration   3: 2124.966 ns/op
# Warmup Iteration   4: 2127.892 ns/op
# Warmup Iteration   5: 2136.508 ns/op
Iteration   1: 2131.938 ns/op
Iteration   2: 2129.469 ns/op
Iteration   3: 2130.738 ns/op
Iteration   4: 2136.887 ns/op
Iteration   5: 2119.569 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  2129.720 ±(99.9%) 24.387 ns/op [Average]
  (min, avg, max) = (2119.569, 2129.720, 2136.887), stdev = 6.333
  CI (99.9%): [2105.334, 2154.107] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 34.82% complete, ETA 00:12:44
# Fork: 1 of 1
# Warmup Iteration   1: 8240.437 ns/op
# Warmup Iteration   2: 7437.193 ns/op
# Warmup Iteration   3: 7216.145 ns/op
# Warmup Iteration   4: 7230.141 ns/op
# Warmup Iteration   5: 7377.945 ns/op
Iteration   1: 7237.512 ns/op
Iteration   2: 7225.769 ns/op
Iteration   3: 7212.995 ns/op
Iteration   4: 7221.549 ns/op
Iteration   5: 7273.635 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  7234.292 ±(99.9%) 91.263 ns/op [Average]
  (min, avg, max) = (7212.995, 7234.292, 7273.635), stdev = 23.701
  CI (99.9%): [7143.029, 7325.555] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 35.71% complete, ETA 00:12:33
# Fork: 1 of 1
# Warmup Iteration   1: 11471.628 ns/op
# Warmup Iteration   2: 10325.751 ns/op
# Warmup Iteration   3: 10291.534 ns/op
# Warmup Iteration   4: 10261.398 ns/op
# Warmup Iteration   5: 10229.423 ns/op
Iteration   1: 10252.535 ns/op
Iteration   2: 10210.201 ns/op
Iteration   3: 10210.662 ns/op
Iteration   4: 10286.332 ns/op
Iteration   5: 10437.262 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  10279.399 ±(99.9%) 361.241 ns/op [Average]
  (min, avg, max) = (10210.201, 10279.399, 10437.262), stdev = 93.813
  CI (99.9%): [9918.158, 10640.639] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 36.61% complete, ETA 00:12:23
# Fork: 1 of 1
# Warmup Iteration   1: 106135.116 ns/op
# Warmup Iteration   2: 90927.800 ns/op
# Warmup Iteration   3: 90461.952 ns/op
# Warmup Iteration   4: 90344.922 ns/op
# Warmup Iteration   5: 90278.602 ns/op
Iteration   1: 89900.417 ns/op
Iteration   2: 89992.617 ns/op
Iteration   3: 90493.576 ns/op
Iteration   4: 90076.022 ns/op
Iteration   5: 89955.848 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  90083.696 ±(99.9%) 915.879 ns/op [Average]
  (min, avg, max) = (89900.417, 90083.696, 90493.576), stdev = 237.851
  CI (99.9%): [89167.817, 90999.575] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 37.50% complete, ETA 00:12:12
# Fork: 1 of 1
# Warmup Iteration   1: 1224.913 ns/op
# Warmup Iteration   2: 976.636 ns/op
# Warmup Iteration   3: 968.771 ns/op
# Warmup Iteration   4: 965.189 ns/op
# Warmup Iteration   5: 979.479 ns/op
Iteration   1: 971.459 ns/op
Iteration   2: 967.203 ns/op
Iteration   3: 1000.200 ns/op
Iteration   4: 1008.534 ns/op
Iteration   5: 1099.443 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1009.368 ±(99.9%) 205.687 ns/op [Average]
  (min, avg, max) = (967.203, 1009.368, 1099.443), stdev = 53.416
  CI (99.9%): [803.681, 1215.055] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 38.39% complete, ETA 00:12:02
# Fork: 1 of 1
# Warmup Iteration   1: 1252.528 ns/op
# Warmup Iteration   2: 1001.226 ns/op
# Warmup Iteration   3: 986.871 ns/op
# Warmup Iteration   4: 988.297 ns/op
# Warmup Iteration   5: 994.820 ns/op
Iteration   1: 988.421 ns/op
Iteration   2: 1003.824 ns/op
Iteration   3: 1014.926 ns/op
Iteration   4: 991.619 ns/op
Iteration   5: 992.488 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  998.256 ±(99.9%) 42.311 ns/op [Average]
  (min, avg, max) = (988.421, 998.256, 1014.926), stdev = 10.988
  CI (99.9%): [955.945, 1040.566] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 39.29% complete, ETA 00:11:51
# Fork: 1 of 1
# Warmup Iteration   1: 1803.034 ns/op
# Warmup Iteration   2: 1398.712 ns/op
# Warmup Iteration   3: 1343.629 ns/op
# Warmup Iteration   4: 1329.802 ns/op
# Warmup Iteration   5: 1328.888 ns/op
Iteration   1: 1352.531 ns/op
Iteration   2: 1328.963 ns/op
Iteration   3: 1329.033 ns/op
Iteration   4: 1333.982 ns/op
Iteration   5: 1326.228 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1334.147 ±(99.9%) 41.011 ns/op [Average]
  (min, avg, max) = (1326.228, 1334.147, 1352.531), stdev = 10.651
  CI (99.9%): [1293.136, 1375.158] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 40.18% complete, ETA 00:11:41
# Fork: 1 of 1
# Warmup Iteration   1: 2267.015 ns/op
# Warmup Iteration   2: 1791.464 ns/op
# Warmup Iteration   3: 1844.221 ns/op
# Warmup Iteration   4: 1770.311 ns/op
# Warmup Iteration   5: 1770.228 ns/op
Iteration   1: 1772.599 ns/op
Iteration   2: 1784.451 ns/op
Iteration   3: 1780.249 ns/op
Iteration   4: 1779.387 ns/op
Iteration   5: 1819.783 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1787.294 ±(99.9%) 71.825 ns/op [Average]
  (min, avg, max) = (1772.599, 1787.294, 1819.783), stdev = 18.653
  CI (99.9%): [1715.468, 1859.119] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 41.07% complete, ETA 00:11:31
# Fork: 1 of 1
# Warmup Iteration   1: 6437.682 ns/op
# Warmup Iteration   2: 5799.470 ns/op
# Warmup Iteration   3: 5665.290 ns/op
# Warmup Iteration   4: 5683.343 ns/op
# Warmup Iteration   5: 5678.903 ns/op
Iteration   1: 5686.329 ns/op
Iteration   2: 5662.935 ns/op
Iteration   3: 5729.137 ns/op
Iteration   4: 5645.070 ns/op
Iteration   5: 5696.532 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  5684.001 ±(99.9%) 124.165 ns/op [Average]
  (min, avg, max) = (5645.070, 5684.001, 5729.137), stdev = 32.245
  CI (99.9%): [5559.835, 5808.166] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 41.96% complete, ETA 00:11:20
# Fork: 1 of 1
# Warmup Iteration   1: 11832.280 ns/op
# Warmup Iteration   2: 10904.433 ns/op
# Warmup Iteration   3: 10790.465 ns/op
# Warmup Iteration   4: 11013.143 ns/op
# Warmup Iteration   5: 10935.077 ns/op
Iteration   1: 11361.981 ns/op
Iteration   2: 10915.540 ns/op
Iteration   3: 10845.971 ns/op
Iteration   4: 10791.147 ns/op
Iteration   5: 10784.921 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  10939.912 ±(99.9%) 930.778 ns/op [Average]
  (min, avg, max) = (10784.921, 10939.912, 11361.981), stdev = 241.720
  CI (99.9%): [10009.134, 11870.690] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 42.86% complete, ETA 00:11:10
# Fork: 1 of 1
# Warmup Iteration   1: 110127.698 ns/op
# Warmup Iteration   2: 101011.496 ns/op
# Warmup Iteration   3: 101347.039 ns/op
# Warmup Iteration   4: 100889.641 ns/op
# Warmup Iteration   5: 100442.791 ns/op
Iteration   1: 100229.308 ns/op
Iteration   2: 100570.750 ns/op
Iteration   3: 100498.152 ns/op
Iteration   4: 100482.695 ns/op
Iteration   5: 100376.593 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  100431.500 ±(99.9%) 510.665 ns/op [Average]
  (min, avg, max) = (100229.308, 100431.500, 100570.750), stdev = 132.618
  CI (99.9%): [99920.834, 100942.165] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 43.75% complete, ETA 00:10:59
# Fork: 1 of 1
# Warmup Iteration   1: 1229.811 ns/op
# Warmup Iteration   2: 983.152 ns/op
# Warmup Iteration   3: 966.666 ns/op
# Warmup Iteration   4: 967.151 ns/op
# Warmup Iteration   5: 988.001 ns/op
Iteration   1: 967.298 ns/op
Iteration   2: 969.590 ns/op
Iteration   3: 965.374 ns/op
Iteration   4: 971.084 ns/op
Iteration   5: 966.694 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  968.008 ±(99.9%) 8.852 ns/op [Average]
  (min, avg, max) = (965.374, 968.008, 971.084), stdev = 2.299
  CI (99.9%): [959.156, 976.860] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 44.64% complete, ETA 00:10:49
# Fork: 1 of 1
# Warmup Iteration   1: 1256.580 ns/op
# Warmup Iteration   2: 1007.872 ns/op
# Warmup Iteration   3: 985.292 ns/op
# Warmup Iteration   4: 993.512 ns/op
# Warmup Iteration   5: 999.215 ns/op
Iteration   1: 998.694 ns/op
Iteration   2: 999.083 ns/op
Iteration   3: 1005.671 ns/op
Iteration   4: 1001.591 ns/op
Iteration   5: 1002.297 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1001.467 ±(99.9%) 10.849 ns/op [Average]
  (min, avg, max) = (998.694, 1001.467, 1005.671), stdev = 2.817
  CI (99.9%): [990.618, 1012.316] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 45.54% complete, ETA 00:10:38
# Fork: 1 of 1
# Warmup Iteration   1: 1635.610 ns/op
# Warmup Iteration   2: 1334.471 ns/op
# Warmup Iteration   3: 1353.636 ns/op
# Warmup Iteration   4: 1315.953 ns/op
# Warmup Iteration   5: 1329.085 ns/op
Iteration   1: 1323.978 ns/op
Iteration   2: 1328.622 ns/op
Iteration   3: 1331.845 ns/op
Iteration   4: 1446.942 ns/op
Iteration   5: 1328.070 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1351.891 ±(99.9%) 204.886 ns/op [Average]
  (min, avg, max) = (1323.978, 1351.891, 1446.942), stdev = 53.208
  CI (99.9%): [1147.005, 1556.778] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 46.43% complete, ETA 00:10:28
# Fork: 1 of 1
# Warmup Iteration   1: 2190.074 ns/op
# Warmup Iteration   2: 1814.897 ns/op
# Warmup Iteration   3: 1785.242 ns/op
# Warmup Iteration   4: 1785.868 ns/op
# Warmup Iteration   5: 1784.589 ns/op
Iteration   1: 1827.750 ns/op
Iteration   2: 1819.295 ns/op
Iteration   3: 1783.874 ns/op
Iteration   4: 1786.234 ns/op
Iteration   5: 1786.360 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1800.703 ±(99.9%) 81.127 ns/op [Average]
  (min, avg, max) = (1783.874, 1800.703, 1827.750), stdev = 21.068
  CI (99.9%): [1719.575, 1881.830] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 47.32% complete, ETA 00:10:17
# Fork: 1 of 1
# Warmup Iteration   1: 6683.376 ns/op
# Warmup Iteration   2: 5776.628 ns/op
# Warmup Iteration   3: 5744.723 ns/op
# Warmup Iteration   4: 5735.853 ns/op
# Warmup Iteration   5: 5727.176 ns/op
Iteration   1: 5869.616 ns/op
Iteration   2: 5786.327 ns/op
Iteration   3: 5739.001 ns/op
Iteration   4: 5794.237 ns/op
Iteration   5: 5754.714 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  5788.779 ±(99.9%) 194.531 ns/op [Average]
  (min, avg, max) = (5739.001, 5788.779, 5869.616), stdev = 50.519
  CI (99.9%): [5594.248, 5983.310] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 48.21% complete, ETA 00:10:07
# Fork: 1 of 1
# Warmup Iteration   1: 12145.273 ns/op
# Warmup Iteration   2: 10922.490 ns/op
# Warmup Iteration   3: 10833.225 ns/op
# Warmup Iteration   4: 11013.867 ns/op
# Warmup Iteration   5: 10782.788 ns/op
Iteration   1: 10934.614 ns/op
Iteration   2: 10786.544 ns/op
Iteration   3: 10822.596 ns/op
Iteration   4: 10848.528 ns/op
Iteration   5: 10811.109 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  10840.678 ±(99.9%) 219.667 ns/op [Average]
  (min, avg, max) = (10786.544, 10840.678, 10934.614), stdev = 57.047
  CI (99.9%): [10621.011, 11060.345] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.11% complete, ETA 00:09:56
# Fork: 1 of 1
# Warmup Iteration   1: 114865.978 ns/op
# Warmup Iteration   2: 100764.524 ns/op
# Warmup Iteration   3: 99642.971 ns/op
# Warmup Iteration   4: 100830.758 ns/op
# Warmup Iteration   5: 98965.975 ns/op
Iteration   1: 101759.137 ns/op
Iteration   2: 100090.937 ns/op
Iteration   3: 99847.183 ns/op
Iteration   4: 100000.767 ns/op
Iteration   5: 99592.454 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  100258.096 ±(99.9%) 3312.008 ns/op [Average]
  (min, avg, max) = (99592.454, 100258.096, 101759.137), stdev = 860.118
  CI (99.9%): [96946.088, 103570.104] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:09:46
# Fork: 1 of 1
# Warmup Iteration   1: 37.385 ns/op
# Warmup Iteration   2: 36.188 ns/op
# Warmup Iteration   3: 34.889 ns/op
# Warmup Iteration   4: 35.209 ns/op
# Warmup Iteration   5: 36.474 ns/op
Iteration   1: 35.898 ns/op
Iteration   2: 34.750 ns/op
Iteration   3: 34.823 ns/op
Iteration   4: 34.871 ns/op
Iteration   5: 34.646 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  34.998 ±(99.9%) 1.966 ns/op [Average]
  (min, avg, max) = (34.646, 34.998, 35.898), stdev = 0.511
  CI (99.9%): [33.032, 36.964] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.89% complete, ETA 00:09:35
# Fork: 1 of 1
# Warmup Iteration   1: 60.151 ns/op
# Warmup Iteration   2: 57.413 ns/op
# Warmup Iteration   3: 55.298 ns/op
# Warmup Iteration   4: 55.422 ns/op
# Warmup Iteration   5: 55.495 ns/op
Iteration   1: 55.454 ns/op
Iteration   2: 55.369 ns/op
Iteration   3: 55.605 ns/op
Iteration   4: 55.437 ns/op
Iteration   5: 55.571 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  55.487 ±(99.9%) 0.377 ns/op [Average]
  (min, avg, max) = (55.369, 55.487, 55.605), stdev = 0.098
  CI (99.9%): [55.110, 55.865] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 51.79% complete, ETA 00:09:25
# Fork: 1 of 1
# Warmup Iteration   1: 143.959 ns/op
# Warmup Iteration   2: 134.971 ns/op
# Warmup Iteration   3: 131.821 ns/op
# Warmup Iteration   4: 131.598 ns/op
# Warmup Iteration   5: 131.879 ns/op
Iteration   1: 131.491 ns/op
Iteration   2: 131.785 ns/op
Iteration   3: 137.936 ns/op
Iteration   4: 131.680 ns/op
Iteration   5: 132.636 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  133.106 ±(99.9%) 10.535 ns/op [Average]
  (min, avg, max) = (131.491, 133.106, 137.936), stdev = 2.736
  CI (99.9%): [122.571, 143.640] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 52.68% complete, ETA 00:09:14
# Fork: 1 of 1
# Warmup Iteration   1: 246.864 ns/op
# Warmup Iteration   2: 232.464 ns/op
# Warmup Iteration   3: 227.656 ns/op
# Warmup Iteration   4: 225.628 ns/op
# Warmup Iteration   5: 225.207 ns/op
Iteration   1: 225.829 ns/op
Iteration   2: 225.801 ns/op
Iteration   3: 226.278 ns/op
Iteration   4: 234.385 ns/op
Iteration   5: 226.619 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  227.782 ±(99.9%) 14.273 ns/op [Average]
  (min, avg, max) = (225.801, 227.782, 234.385), stdev = 3.707
  CI (99.9%): [213.510, 242.055] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 53.57% complete, ETA 00:09:04
# Fork: 1 of 1
# Warmup Iteration   1: 966.475 ns/op
# Warmup Iteration   2: 917.338 ns/op
# Warmup Iteration   3: 888.566 ns/op
# Warmup Iteration   4: 889.695 ns/op
# Warmup Iteration   5: 890.400 ns/op
Iteration   1: 905.169 ns/op
Iteration   2: 892.138 ns/op
Iteration   3: 892.791 ns/op
Iteration   4: 886.956 ns/op
Iteration   5: 890.422 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  893.495 ±(99.9%) 26.597 ns/op [Average]
  (min, avg, max) = (886.956, 893.495, 905.169), stdev = 6.907
  CI (99.9%): [866.898, 920.092] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 54.46% complete, ETA 00:08:53
# Fork: 1 of 1
# Warmup Iteration   1: 1910.265 ns/op
# Warmup Iteration   2: 1794.772 ns/op
# Warmup Iteration   3: 1745.835 ns/op
# Warmup Iteration   4: 1739.334 ns/op
# Warmup Iteration   5: 1781.820 ns/op
Iteration   1: 1729.623 ns/op
Iteration   2: 1736.429 ns/op
Iteration   3: 1733.506 ns/op
Iteration   4: 1739.200 ns/op
Iteration   5: 1736.931 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  1735.138 ±(99.9%) 14.209 ns/op [Average]
  (min, avg, max) = (1729.623, 1735.138, 1739.200), stdev = 3.690
  CI (99.9%): [1720.929, 1749.346] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 55.36% complete, ETA 00:08:43
# Fork: 1 of 1
# Warmup Iteration   1: 20650.425 ns/op
# Warmup Iteration   2: 19446.535 ns/op
# Warmup Iteration   3: 19268.259 ns/op
# Warmup Iteration   4: 19181.097 ns/op
# Warmup Iteration   5: 19186.917 ns/op
Iteration   1: 19177.141 ns/op
Iteration   2: 19189.070 ns/op
Iteration   3: 19180.918 ns/op
Iteration   4: 19205.271 ns/op
Iteration   5: 19217.976 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  19194.075 ±(99.9%) 66.180 ns/op [Average]
  (min, avg, max) = (19177.141, 19194.075, 19217.976), stdev = 17.187
  CI (99.9%): [19127.896, 19260.255] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 56.25% complete, ETA 00:08:32
# Fork: 1 of 1
# Warmup Iteration   1: 38.189 ns/op
# Warmup Iteration   2: 35.560 ns/op
# Warmup Iteration   3: 34.766 ns/op
# Warmup Iteration   4: 34.713 ns/op
# Warmup Iteration   5: 35.151 ns/op
Iteration   1: 34.644 ns/op
Iteration   2: 34.760 ns/op
Iteration   3: 34.774 ns/op
Iteration   4: 34.727 ns/op
Iteration   5: 34.657 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  34.713 ±(99.9%) 0.228 ns/op [Average]
  (min, avg, max) = (34.644, 34.713, 34.774), stdev = 0.059
  CI (99.9%): [34.484, 34.941] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 57.14% complete, ETA 00:08:22
# Fork: 1 of 1
# Warmup Iteration   1: 63.594 ns/op
# Warmup Iteration   2: 60.912 ns/op
# Warmup Iteration   3: 57.632 ns/op
# Warmup Iteration   4: 57.389 ns/op
# Warmup Iteration   5: 57.355 ns/op
Iteration   1: 57.315 ns/op
Iteration   2: 57.501 ns/op
Iteration   3: 57.339 ns/op
Iteration   4: 57.413 ns/op
Iteration   5: 57.300 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  57.374 ±(99.9%) 0.321 ns/op [Average]
  (min, avg, max) = (57.300, 57.374, 57.501), stdev = 0.083
  CI (99.9%): [57.053, 57.695] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 58.04% complete, ETA 00:08:11
# Fork: 1 of 1
# Warmup Iteration   1: 144.106 ns/op
# Warmup Iteration   2: 135.391 ns/op
# Warmup Iteration   3: 132.813 ns/op
# Warmup Iteration   4: 132.044 ns/op
# Warmup Iteration   5: 132.262 ns/op
Iteration   1: 135.512 ns/op
Iteration   2: 140.181 ns/op
Iteration   3: 132.692 ns/op
Iteration   4: 132.285 ns/op
Iteration   5: 131.626 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  134.459 ±(99.9%) 13.576 ns/op [Average]
  (min, avg, max) = (131.626, 134.459, 140.181), stdev = 3.526
  CI (99.9%): [120.883, 148.035] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 58.93% complete, ETA 00:08:01
# Fork: 1 of 1
# Warmup Iteration   1: 248.497 ns/op
# Warmup Iteration   2: 231.809 ns/op
# Warmup Iteration   3: 230.088 ns/op
# Warmup Iteration   4: 227.286 ns/op
# Warmup Iteration   5: 227.921 ns/op
Iteration   1: 227.248 ns/op
Iteration   2: 227.321 ns/op
Iteration   3: 228.001 ns/op
Iteration   4: 227.602 ns/op
Iteration   5: 229.719 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  227.978 ±(99.9%) 3.917 ns/op [Average]
  (min, avg, max) = (227.248, 227.978, 229.719), stdev = 1.017
  CI (99.9%): [224.061, 231.895] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 59.82% complete, ETA 00:07:50
# Fork: 1 of 1
# Warmup Iteration   1: 968.894 ns/op
# Warmup Iteration   2: 901.438 ns/op
# Warmup Iteration   3: 883.836 ns/op
# Warmup Iteration   4: 884.796 ns/op
# Warmup Iteration   5: 884.684 ns/op
Iteration   1: 886.334 ns/op
Iteration   2: 888.305 ns/op
Iteration   3: 886.348 ns/op
Iteration   4: 887.499 ns/op
Iteration   5: 884.498 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  886.597 ±(99.9%) 5.536 ns/op [Average]
  (min, avg, max) = (884.498, 886.597, 888.305), stdev = 1.438
  CI (99.9%): [881.060, 892.133] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 60.71% complete, ETA 00:07:40
# Fork: 1 of 1
# Warmup Iteration   1: 1920.640 ns/op
# Warmup Iteration   2: 1818.587 ns/op
# Warmup Iteration   3: 1725.517 ns/op
# Warmup Iteration   4: 1731.198 ns/op
# Warmup Iteration   5: 1732.244 ns/op
Iteration   1: 1731.839 ns/op
Iteration   2: 1727.823 ns/op
Iteration   3: 1726.950 ns/op
Iteration   4: 1728.055 ns/op
Iteration   5: 1733.852 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  1729.704 ±(99.9%) 11.489 ns/op [Average]
  (min, avg, max) = (1726.950, 1729.704, 1733.852), stdev = 2.984
  CI (99.9%): [1718.215, 1741.193] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 61.61% complete, ETA 00:07:29
# Fork: 1 of 1
# Warmup Iteration   1: 20331.587 ns/op
# Warmup Iteration   2: 17952.772 ns/op
# Warmup Iteration   3: 18289.587 ns/op
# Warmup Iteration   4: 17772.027 ns/op
# Warmup Iteration   5: 17819.215 ns/op
Iteration   1: 17904.105 ns/op
Iteration   2: 18176.448 ns/op
Iteration   3: 18168.400 ns/op
Iteration   4: 17757.680 ns/op
Iteration   5: 17755.780 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  17952.483 ±(99.9%) 807.170 ns/op [Average]
  (min, avg, max) = (17755.780, 17952.483, 18176.448), stdev = 209.619
  CI (99.9%): [17145.313, 18759.652] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 62.50% complete, ETA 00:07:19
# Fork: 1 of 1
# Warmup Iteration   1: 24.325 ns/op
# Warmup Iteration   2: 22.025 ns/op
# Warmup Iteration   3: 21.837 ns/op
# Warmup Iteration   4: 21.871 ns/op
# Warmup Iteration   5: 22.620 ns/op
Iteration   1: 21.898 ns/op
Iteration   2: 21.814 ns/op
Iteration   3: 21.808 ns/op
Iteration   4: 21.925 ns/op
Iteration   5: 22.262 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  21.941 ±(99.9%) 0.717 ns/op [Average]
  (min, avg, max) = (21.808, 21.941, 22.262), stdev = 0.186
  CI (99.9%): [21.225, 22.658] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 63.39% complete, ETA 00:07:08
# Fork: 1 of 1
# Warmup Iteration   1: 52.865 ns/op
# Warmup Iteration   2: 49.226 ns/op
# Warmup Iteration   3: 47.122 ns/op
# Warmup Iteration   4: 47.767 ns/op
# Warmup Iteration   5: 47.063 ns/op
Iteration   1: 47.102 ns/op
Iteration   2: 47.097 ns/op
Iteration   3: 47.118 ns/op
Iteration   4: 47.115 ns/op
Iteration   5: 47.209 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  47.128 ±(99.9%) 0.178 ns/op [Average]
  (min, avg, max) = (47.097, 47.128, 47.209), stdev = 0.046
  CI (99.9%): [46.951, 47.306] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 64.29% complete, ETA 00:06:58
# Fork: 1 of 1
# Warmup Iteration   1: 94.264 ns/op
# Warmup Iteration   2: 88.066 ns/op
# Warmup Iteration   3: 83.972 ns/op
# Warmup Iteration   4: 87.417 ns/op
# Warmup Iteration   5: 87.492 ns/op
Iteration   1: 83.787 ns/op
Iteration   2: 84.052 ns/op
Iteration   3: 83.948 ns/op
Iteration   4: 84.086 ns/op
Iteration   5: 84.041 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  83.983 ±(99.9%) 0.465 ns/op [Average]
  (min, avg, max) = (83.787, 83.983, 84.086), stdev = 0.121
  CI (99.9%): [83.518, 84.448] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 65.18% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: 142.194 ns/op
# Warmup Iteration   2: 138.555 ns/op
# Warmup Iteration   3: 127.001 ns/op
# Warmup Iteration   4: 126.876 ns/op
# Warmup Iteration   5: 126.884 ns/op
Iteration   1: 126.700 ns/op
Iteration   2: 127.063 ns/op
Iteration   3: 131.405 ns/op
Iteration   4: 126.734 ns/op
Iteration   5: 126.639 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  127.708 ±(99.9%) 7.983 ns/op [Average]
  (min, avg, max) = (126.639, 127.708, 131.405), stdev = 2.073
  CI (99.9%): [119.726, 135.691] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 66.07% complete, ETA 00:06:37
# Fork: 1 of 1
# Warmup Iteration   1: 503.135 ns/op
# Warmup Iteration   2: 463.703 ns/op
# Warmup Iteration   3: 477.814 ns/op
# Warmup Iteration   4: 465.537 ns/op
# Warmup Iteration   5: 461.223 ns/op
Iteration   1: 460.194 ns/op
Iteration   2: 459.438 ns/op
Iteration   3: 460.458 ns/op
Iteration   4: 460.341 ns/op
Iteration   5: 472.047 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  462.496 ±(99.9%) 20.617 ns/op [Average]
  (min, avg, max) = (459.438, 462.496, 472.047), stdev = 5.354
  CI (99.9%): [441.879, 483.113] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 66.96% complete, ETA 00:06:27
# Fork: 1 of 1
# Warmup Iteration   1: 987.644 ns/op
# Warmup Iteration   2: 878.962 ns/op
# Warmup Iteration   3: 871.413 ns/op
# Warmup Iteration   4: 872.242 ns/op
# Warmup Iteration   5: 873.616 ns/op
Iteration   1: 872.372 ns/op
Iteration   2: 873.224 ns/op
Iteration   3: 871.762 ns/op
Iteration   4: 873.302 ns/op
Iteration   5: 870.147 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  872.161 ±(99.9%) 4.980 ns/op [Average]
  (min, avg, max) = (870.147, 872.161, 873.302), stdev = 1.293
  CI (99.9%): [867.181, 877.142] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 67.86% complete, ETA 00:06:16
# Fork: 1 of 1
# Warmup Iteration   1: 11000.954 ns/op
# Warmup Iteration   2: 9406.267 ns/op
# Warmup Iteration   3: 9887.051 ns/op
# Warmup Iteration   4: 9259.632 ns/op
# Warmup Iteration   5: 9246.835 ns/op
Iteration   1: 9224.542 ns/op
Iteration   2: 9238.112 ns/op
Iteration   3: 9250.090 ns/op
Iteration   4: 9237.673 ns/op
Iteration   5: 9263.533 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  9242.790 ±(99.9%) 56.612 ns/op [Average]
  (min, avg, max) = (9224.542, 9242.790, 9263.533), stdev = 14.702
  CI (99.9%): [9186.178, 9299.403] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 68.75% complete, ETA 00:06:06
# Fork: 1 of 1
# Warmup Iteration   1: 24.361 ns/op
# Warmup Iteration   2: 24.348 ns/op
# Warmup Iteration   3: 21.991 ns/op
# Warmup Iteration   4: 22.026 ns/op
# Warmup Iteration   5: 21.989 ns/op
Iteration   1: 22.048 ns/op
Iteration   2: 22.049 ns/op
Iteration   3: 22.060 ns/op
Iteration   4: 22.598 ns/op
Iteration   5: 22.023 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  22.156 ±(99.9%) 0.954 ns/op [Average]
  (min, avg, max) = (22.023, 22.156, 22.598), stdev = 0.248
  CI (99.9%): [21.202, 23.109] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 69.64% complete, ETA 00:05:55
# Fork: 1 of 1
# Warmup Iteration   1: 52.188 ns/op
# Warmup Iteration   2: 49.317 ns/op
# Warmup Iteration   3: 49.257 ns/op
# Warmup Iteration   4: 47.165 ns/op
# Warmup Iteration   5: 47.299 ns/op
Iteration   1: 48.320 ns/op
Iteration   2: 47.069 ns/op
Iteration   3: 49.133 ns/op
Iteration   4: 47.190 ns/op
Iteration   5: 47.699 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  47.882 ±(99.9%) 3.297 ns/op [Average]
  (min, avg, max) = (47.069, 47.882, 49.133), stdev = 0.856
  CI (99.9%): [44.586, 51.179] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 70.54% complete, ETA 00:05:45
# Fork: 1 of 1
# Warmup Iteration   1: 96.484 ns/op
# Warmup Iteration   2: 86.903 ns/op
# Warmup Iteration   3: 84.735 ns/op
# Warmup Iteration   4: 84.548 ns/op
# Warmup Iteration   5: 84.679 ns/op
Iteration   1: 85.836 ns/op
Iteration   2: 87.069 ns/op
Iteration   3: 85.366 ns/op
Iteration   4: 84.728 ns/op
Iteration   5: 84.650 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  85.530 ±(99.9%) 3.805 ns/op [Average]
  (min, avg, max) = (84.650, 85.530, 87.069), stdev = 0.988
  CI (99.9%): [81.725, 89.335] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 71.43% complete, ETA 00:05:34
# Fork: 1 of 1
# Warmup Iteration   1: 143.728 ns/op
# Warmup Iteration   2: 130.604 ns/op
# Warmup Iteration   3: 127.503 ns/op
# Warmup Iteration   4: 127.041 ns/op
# Warmup Iteration   5: 126.928 ns/op
Iteration   1: 127.342 ns/op
Iteration   2: 127.389 ns/op
Iteration   3: 127.213 ns/op
Iteration   4: 128.363 ns/op
Iteration   5: 127.581 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  127.578 ±(99.9%) 1.765 ns/op [Average]
  (min, avg, max) = (127.213, 127.578, 128.363), stdev = 0.458
  CI (99.9%): [125.812, 129.343] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 72.32% complete, ETA 00:05:24
# Fork: 1 of 1
# Warmup Iteration   1: 511.351 ns/op
# Warmup Iteration   2: 457.894 ns/op
# Warmup Iteration   3: 447.874 ns/op
# Warmup Iteration   4: 446.925 ns/op
# Warmup Iteration   5: 446.596 ns/op
Iteration   1: 447.944 ns/op
Iteration   2: 448.477 ns/op
Iteration   3: 447.656 ns/op
Iteration   4: 457.541 ns/op
Iteration   5: 463.195 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  452.962 ±(99.9%) 27.169 ns/op [Average]
  (min, avg, max) = (447.656, 452.962, 463.195), stdev = 7.056
  CI (99.9%): [425.794, 480.131] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 73.21% complete, ETA 00:05:13
# Fork: 1 of 1
# Warmup Iteration   1: 979.765 ns/op
# Warmup Iteration   2: 864.625 ns/op
# Warmup Iteration   3: 859.047 ns/op
# Warmup Iteration   4: 877.572 ns/op
# Warmup Iteration   5: 861.489 ns/op
Iteration   1: 859.291 ns/op
Iteration   2: 898.166 ns/op
Iteration   3: 898.496 ns/op
Iteration   4: 856.765 ns/op
Iteration   5: 856.464 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  873.836 ±(99.9%) 86.206 ns/op [Average]
  (min, avg, max) = (856.464, 873.836, 898.496), stdev = 22.387
  CI (99.9%): [787.630, 960.043] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 74.11% complete, ETA 00:05:03
# Fork: 1 of 1
# Warmup Iteration   1: 11365.011 ns/op
# Warmup Iteration   2: 9362.496 ns/op
# Warmup Iteration   3: 9272.466 ns/op
# Warmup Iteration   4: 9250.957 ns/op
# Warmup Iteration   5: 9268.480 ns/op
Iteration   1: 9253.046 ns/op
Iteration   2: 9252.354 ns/op
Iteration   3: 9255.513 ns/op
Iteration   4: 9272.601 ns/op
Iteration   5: 9289.657 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  9264.634 ±(99.9%) 62.622 ns/op [Average]
  (min, avg, max) = (9252.354, 9264.634, 9289.657), stdev = 16.263
  CI (99.9%): [9202.013, 9327.256] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 75.00% complete, ETA 00:04:52
# Fork: 1 of 1
# Warmup Iteration   1: 35.048 ns/op
# Warmup Iteration   2: 34.385 ns/op
# Warmup Iteration   3: 32.199 ns/op
# Warmup Iteration   4: 33.223 ns/op
# Warmup Iteration   5: 32.137 ns/op
Iteration   1: 32.185 ns/op
Iteration   2: 32.204 ns/op
Iteration   3: 32.304 ns/op
Iteration   4: 32.314 ns/op
Iteration   5: 32.270 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  32.255 ±(99.9%) 0.224 ns/op [Average]
  (min, avg, max) = (32.185, 32.255, 32.314), stdev = 0.058
  CI (99.9%): [32.031, 32.480] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 75.89% complete, ETA 00:04:42
# Fork: 1 of 1
# Warmup Iteration   1: 58.873 ns/op
# Warmup Iteration   2: 56.109 ns/op
# Warmup Iteration   3: 53.533 ns/op
# Warmup Iteration   4: 53.356 ns/op
# Warmup Iteration   5: 53.303 ns/op
Iteration   1: 53.490 ns/op
Iteration   2: 53.427 ns/op
Iteration   3: 53.600 ns/op
Iteration   4: 53.349 ns/op
Iteration   5: 53.850 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  53.543 ±(99.9%) 0.750 ns/op [Average]
  (min, avg, max) = (53.349, 53.543, 53.850), stdev = 0.195
  CI (99.9%): [52.793, 54.293] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 76.79% complete, ETA 00:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 146.284 ns/op
# Warmup Iteration   2: 132.089 ns/op
# Warmup Iteration   3: 129.284 ns/op
# Warmup Iteration   4: 133.603 ns/op
# Warmup Iteration   5: 128.726 ns/op
Iteration   1: 128.826 ns/op
Iteration   2: 128.613 ns/op
Iteration   3: 128.750 ns/op
Iteration   4: 129.550 ns/op
Iteration   5: 128.742 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  128.896 ±(99.9%) 1.437 ns/op [Average]
  (min, avg, max) = (128.613, 128.896, 129.550), stdev = 0.373
  CI (99.9%): [127.459, 130.333] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 77.68% complete, ETA 00:04:21
# Fork: 1 of 1
# Warmup Iteration   1: 251.715 ns/op
# Warmup Iteration   2: 237.345 ns/op
# Warmup Iteration   3: 231.856 ns/op
# Warmup Iteration   4: 233.988 ns/op
# Warmup Iteration   5: 230.716 ns/op
Iteration   1: 231.234 ns/op
Iteration   2: 231.662 ns/op
Iteration   3: 231.159 ns/op
Iteration   4: 230.772 ns/op
Iteration   5: 230.984 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  231.162 ±(99.9%) 1.275 ns/op [Average]
  (min, avg, max) = (230.772, 231.162, 231.662), stdev = 0.331
  CI (99.9%): [229.887, 232.437] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 78.57% complete, ETA 00:04:10
# Fork: 1 of 1
# Warmup Iteration   1: 1062.543 ns/op
# Warmup Iteration   2: 989.941 ns/op
# Warmup Iteration   3: 971.295 ns/op
# Warmup Iteration   4: 1009.445 ns/op
# Warmup Iteration   5: 972.049 ns/op
Iteration   1: 970.805 ns/op
Iteration   2: 971.780 ns/op
Iteration   3: 989.815 ns/op
Iteration   4: 972.785 ns/op
Iteration   5: 980.848 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  977.207 ±(99.9%) 31.177 ns/op [Average]
  (min, avg, max) = (970.805, 977.207, 989.815), stdev = 8.097
  CI (99.9%): [946.030, 1008.383] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 79.46% complete, ETA 00:04:00
# Fork: 1 of 1
# Warmup Iteration   1: 2082.161 ns/op
# Warmup Iteration   2: 1949.278 ns/op
# Warmup Iteration   3: 1917.646 ns/op
# Warmup Iteration   4: 1970.908 ns/op
# Warmup Iteration   5: 1916.045 ns/op
Iteration   1: 1909.690 ns/op
Iteration   2: 1958.037 ns/op
Iteration   3: 1968.552 ns/op
Iteration   4: 1906.719 ns/op
Iteration   5: 1911.637 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  1930.927 ±(99.9%) 114.872 ns/op [Average]
  (min, avg, max) = (1906.719, 1930.927, 1968.552), stdev = 29.832
  CI (99.9%): [1816.055, 2045.799] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 80.36% complete, ETA 00:03:50
# Fork: 1 of 1
# Warmup Iteration   1: 21788.823 ns/op
# Warmup Iteration   2: 19668.847 ns/op
# Warmup Iteration   3: 19494.401 ns/op
# Warmup Iteration   4: 19383.880 ns/op
# Warmup Iteration   5: 19369.469 ns/op
Iteration   1: 19583.067 ns/op
Iteration   2: 19475.482 ns/op
Iteration   3: 19460.040 ns/op
Iteration   4: 19410.686 ns/op
Iteration   5: 19430.615 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  19471.978 ±(99.9%) 258.044 ns/op [Average]
  (min, avg, max) = (19410.686, 19471.978, 19583.067), stdev = 67.013
  CI (99.9%): [19213.934, 19730.022] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 81.25% complete, ETA 00:03:39
# Fork: 1 of 1
# Warmup Iteration   1: 35.302 ns/op
# Warmup Iteration   2: 32.525 ns/op
# Warmup Iteration   3: 32.627 ns/op
# Warmup Iteration   4: 32.567 ns/op
# Warmup Iteration   5: 34.752 ns/op
Iteration   1: 32.938 ns/op
Iteration   2: 32.576 ns/op
Iteration   3: 32.567 ns/op
Iteration   4: 33.146 ns/op
Iteration   5: 33.426 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  32.931 ±(99.9%) 1.427 ns/op [Average]
  (min, avg, max) = (32.567, 32.931, 33.426), stdev = 0.371
  CI (99.9%): [31.503, 34.358] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 82.14% complete, ETA 00:03:29
# Fork: 1 of 1
# Warmup Iteration   1: 58.133 ns/op
# Warmup Iteration   2: 54.401 ns/op
# Warmup Iteration   3: 52.582 ns/op
# Warmup Iteration   4: 52.543 ns/op
# Warmup Iteration   5: 52.993 ns/op
Iteration   1: 52.594 ns/op
Iteration   2: 52.676 ns/op
Iteration   3: 53.356 ns/op
Iteration   4: 52.610 ns/op
Iteration   5: 53.078 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  52.863 ±(99.9%) 1.306 ns/op [Average]
  (min, avg, max) = (52.594, 52.863, 53.356), stdev = 0.339
  CI (99.9%): [51.557, 54.169] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 83.04% complete, ETA 00:03:18
# Fork: 1 of 1
# Warmup Iteration   1: 146.007 ns/op
# Warmup Iteration   2: 136.810 ns/op
# Warmup Iteration   3: 133.371 ns/op
# Warmup Iteration   4: 133.085 ns/op
# Warmup Iteration   5: 133.175 ns/op
Iteration   1: 133.481 ns/op
Iteration   2: 133.480 ns/op
Iteration   3: 133.141 ns/op
Iteration   4: 133.412 ns/op
Iteration   5: 135.029 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  133.709 ±(99.9%) 2.893 ns/op [Average]
  (min, avg, max) = (133.141, 133.709, 135.029), stdev = 0.751
  CI (99.9%): [130.816, 136.602] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 83.93% complete, ETA 00:03:08
# Fork: 1 of 1
# Warmup Iteration   1: 252.051 ns/op
# Warmup Iteration   2: 236.033 ns/op
# Warmup Iteration   3: 231.525 ns/op
# Warmup Iteration   4: 231.201 ns/op
# Warmup Iteration   5: 230.699 ns/op
Iteration   1: 230.969 ns/op
Iteration   2: 230.752 ns/op
Iteration   3: 231.110 ns/op
Iteration   4: 231.660 ns/op
Iteration   5: 231.214 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  231.141 ±(99.9%) 1.301 ns/op [Average]
  (min, avg, max) = (230.752, 231.141, 231.660), stdev = 0.338
  CI (99.9%): [229.840, 232.442] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 84.82% complete, ETA 00:02:57
# Fork: 1 of 1
# Warmup Iteration   1: 1058.258 ns/op
# Warmup Iteration   2: 995.171 ns/op
# Warmup Iteration   3: 972.008 ns/op
# Warmup Iteration   4: 969.891 ns/op
# Warmup Iteration   5: 969.180 ns/op
Iteration   1: 968.439 ns/op
Iteration   2: 966.315 ns/op
Iteration   3: 969.688 ns/op
Iteration   4: 969.018 ns/op
Iteration   5: 969.049 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  968.502 ±(99.9%) 5.006 ns/op [Average]
  (min, avg, max) = (966.315, 968.502, 969.688), stdev = 1.300
  CI (99.9%): [963.497, 973.508] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 85.71% complete, ETA 00:02:47
# Fork: 1 of 1
# Warmup Iteration   1: 2091.643 ns/op
# Warmup Iteration   2: 1952.924 ns/op
# Warmup Iteration   3: 1912.866 ns/op
# Warmup Iteration   4: 1908.430 ns/op
# Warmup Iteration   5: 1905.451 ns/op
Iteration   1: 1901.981 ns/op
Iteration   2: 1903.087 ns/op
Iteration   3: 1911.517 ns/op
Iteration   4: 1911.650 ns/op
Iteration   5: 1905.548 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  1906.757 ±(99.9%) 17.683 ns/op [Average]
  (min, avg, max) = (1901.981, 1906.757, 1911.650), stdev = 4.592
  CI (99.9%): [1889.074, 1924.439] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 86.61% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 22225.928 ns/op
# Warmup Iteration   2: 19793.869 ns/op
# Warmup Iteration   3: 19629.833 ns/op
# Warmup Iteration   4: 19527.532 ns/op
# Warmup Iteration   5: 19590.557 ns/op
Iteration   1: 19603.752 ns/op
Iteration   2: 19599.721 ns/op
Iteration   3: 19572.334 ns/op
Iteration   4: 19818.040 ns/op
Iteration   5: 19532.246 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  19625.219 ±(99.9%) 429.358 ns/op [Average]
  (min, avg, max) = (19532.246, 19625.219, 19818.040), stdev = 111.503
  CI (99.9%): [19195.860, 20054.577] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 87.50% complete, ETA 00:02:26
# Fork: 1 of 1
# Warmup Iteration   1: 25.898 ns/op
# Warmup Iteration   2: 24.196 ns/op
# Warmup Iteration   3: 22.828 ns/op
# Warmup Iteration   4: 22.811 ns/op
# Warmup Iteration   5: 22.757 ns/op
Iteration   1: 22.740 ns/op
Iteration   2: 24.121 ns/op
Iteration   3: 22.752 ns/op
Iteration   4: 22.787 ns/op
Iteration   5: 23.112 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  23.102 ±(99.9%) 2.271 ns/op [Average]
  (min, avg, max) = (22.740, 23.102, 24.121), stdev = 0.590
  CI (99.9%): [20.832, 25.373] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 88.39% complete, ETA 00:02:15
# Fork: 1 of 1
# Warmup Iteration   1: 51.885 ns/op
# Warmup Iteration   2: 49.408 ns/op
# Warmup Iteration   3: 46.761 ns/op
# Warmup Iteration   4: 46.699 ns/op
# Warmup Iteration   5: 46.643 ns/op
Iteration   1: 46.661 ns/op
Iteration   2: 47.128 ns/op
Iteration   3: 46.518 ns/op
Iteration   4: 46.581 ns/op
Iteration   5: 46.547 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  46.687 ±(99.9%) 0.971 ns/op [Average]
  (min, avg, max) = (46.518, 46.687, 47.128), stdev = 0.252
  CI (99.9%): [45.715, 47.658] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 89.29% complete, ETA 00:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 96.925 ns/op
# Warmup Iteration   2: 88.795 ns/op
# Warmup Iteration   3: 85.943 ns/op
# Warmup Iteration   4: 85.884 ns/op
# Warmup Iteration   5: 85.797 ns/op
Iteration   1: 85.914 ns/op
Iteration   2: 85.837 ns/op
Iteration   3: 85.638 ns/op
Iteration   4: 85.657 ns/op
Iteration   5: 87.136 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  86.036 ±(99.9%) 2.410 ns/op [Average]
  (min, avg, max) = (85.638, 86.036, 87.136), stdev = 0.626
  CI (99.9%): [83.626, 88.446] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 90.18% complete, ETA 00:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 143.276 ns/op
# Warmup Iteration   2: 132.706 ns/op
# Warmup Iteration   3: 128.115 ns/op
# Warmup Iteration   4: 127.892 ns/op
# Warmup Iteration   5: 136.002 ns/op
Iteration   1: 128.059 ns/op
Iteration   2: 128.044 ns/op
Iteration   3: 128.298 ns/op
Iteration   4: 128.229 ns/op
Iteration   5: 127.889 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  128.104 ±(99.9%) 0.624 ns/op [Average]
  (min, avg, max) = (127.889, 128.104, 128.298), stdev = 0.162
  CI (99.9%): [127.480, 128.728] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 91.07% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: 504.739 ns/op
# Warmup Iteration   2: 453.398 ns/op
# Warmup Iteration   3: 445.974 ns/op
# Warmup Iteration   4: 446.545 ns/op
# Warmup Iteration   5: 450.656 ns/op
Iteration   1: 447.571 ns/op
Iteration   2: 446.060 ns/op
Iteration   3: 446.906 ns/op
Iteration   4: 447.804 ns/op
Iteration   5: 446.012 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  446.870 ±(99.9%) 3.196 ns/op [Average]
  (min, avg, max) = (446.012, 446.870, 447.804), stdev = 0.830
  CI (99.9%): [443.674, 450.067] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 91.96% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 985.272 ns/op
# Warmup Iteration   2: 892.351 ns/op
# Warmup Iteration   3: 878.629 ns/op
# Warmup Iteration   4: 866.152 ns/op
# Warmup Iteration   5: 863.298 ns/op
Iteration   1: 863.883 ns/op
Iteration   2: 867.856 ns/op
Iteration   3: 865.491 ns/op
Iteration   4: 863.357 ns/op
Iteration   5: 901.231 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  872.363 ±(99.9%) 62.503 ns/op [Average]
  (min, avg, max) = (863.357, 872.363, 901.231), stdev = 16.232
  CI (99.9%): [809.860, 934.867] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 92.86% complete, ETA 00:01:23
# Fork: 1 of 1
# Warmup Iteration   1: 11929.318 ns/op
# Warmup Iteration   2: 9338.827 ns/op
# Warmup Iteration   3: 9258.063 ns/op
# Warmup Iteration   4: 9245.252 ns/op
# Warmup Iteration   5: 9259.384 ns/op
Iteration   1: 9244.698 ns/op
Iteration   2: 9224.304 ns/op
Iteration   3: 9249.832 ns/op
Iteration   4: 9251.104 ns/op
Iteration   5: 9261.504 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  9246.288 ±(99.9%) 52.836 ns/op [Average]
  (min, avg, max) = (9224.304, 9246.288, 9261.504), stdev = 13.721
  CI (99.9%): [9193.452, 9299.124] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 93.75% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 26.386 ns/op
# Warmup Iteration   2: 25.859 ns/op
# Warmup Iteration   3: 25.411 ns/op
# Warmup Iteration   4: 24.804 ns/op
# Warmup Iteration   5: 24.747 ns/op
Iteration   1: 24.811 ns/op
Iteration   2: 25.607 ns/op
Iteration   3: 24.812 ns/op
Iteration   4: 24.809 ns/op
Iteration   5: 22.743 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  24.556 ±(99.9%) 4.122 ns/op [Average]
  (min, avg, max) = (22.743, 24.556, 25.607), stdev = 1.070
  CI (99.9%): [20.434, 28.678] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 94.64% complete, ETA 00:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 52.294 ns/op
# Warmup Iteration   2: 49.586 ns/op
# Warmup Iteration   3: 46.535 ns/op
# Warmup Iteration   4: 46.617 ns/op
# Warmup Iteration   5: 46.553 ns/op
Iteration   1: 46.659 ns/op
Iteration   2: 46.741 ns/op
Iteration   3: 46.724 ns/op
Iteration   4: 46.656 ns/op
Iteration   5: 46.671 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  46.690 ±(99.9%) 0.152 ns/op [Average]
  (min, avg, max) = (46.656, 46.690, 46.741), stdev = 0.040
  CI (99.9%): [46.538, 46.842] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 95.54% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 98.087 ns/op
# Warmup Iteration   2: 91.257 ns/op
# Warmup Iteration   3: 85.577 ns/op
# Warmup Iteration   4: 85.563 ns/op
# Warmup Iteration   5: 85.814 ns/op
Iteration   1: 85.630 ns/op
Iteration   2: 85.613 ns/op
Iteration   3: 85.418 ns/op
Iteration   4: 85.629 ns/op
Iteration   5: 85.579 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  85.574 ±(99.9%) 0.345 ns/op [Average]
  (min, avg, max) = (85.418, 85.574, 85.630), stdev = 0.090
  CI (99.9%): [85.229, 85.919] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 96.43% complete, ETA 00:00:41
# Fork: 1 of 1
# Warmup Iteration   1: 144.947 ns/op
# Warmup Iteration   2: 131.627 ns/op
# Warmup Iteration   3: 127.417 ns/op
# Warmup Iteration   4: 127.846 ns/op
# Warmup Iteration   5: 127.571 ns/op
Iteration   1: 127.437 ns/op
Iteration   2: 127.564 ns/op
Iteration   3: 127.514 ns/op
Iteration   4: 127.551 ns/op
Iteration   5: 127.380 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  127.489 ±(99.9%) 0.303 ns/op [Average]
  (min, avg, max) = (127.380, 127.489, 127.564), stdev = 0.079
  CI (99.9%): [127.187, 127.792] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 97.32% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 510.803 ns/op
# Warmup Iteration   2: 455.526 ns/op
# Warmup Iteration   3: 449.990 ns/op
# Warmup Iteration   4: 449.975 ns/op
# Warmup Iteration   5: 449.372 ns/op
Iteration   1: 449.524 ns/op
Iteration   2: 449.606 ns/op
Iteration   3: 450.008 ns/op
Iteration   4: 454.459 ns/op
Iteration   5: 449.449 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  450.609 ±(99.9%) 8.328 ns/op [Average]
  (min, avg, max) = (449.449, 450.609, 454.459), stdev = 2.163
  CI (99.9%): [442.281, 458.937] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 98.21% complete, ETA 00:00:20
# Fork: 1 of 1
# Warmup Iteration   1: 982.453 ns/op
# Warmup Iteration   2: 881.442 ns/op
# Warmup Iteration   3: 869.217 ns/op
# Warmup Iteration   4: 870.683 ns/op
# Warmup Iteration   5: 882.722 ns/op
Iteration   1: 868.452 ns/op
Iteration   2: 873.140 ns/op
Iteration   3: 869.068 ns/op
Iteration   4: 869.244 ns/op
Iteration   5: 868.973 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  869.775 ±(99.9%) 7.331 ns/op [Average]
  (min, avg, max) = (868.452, 869.775, 873.140), stdev = 1.904
  CI (99.9%): [862.444, 877.107] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.11% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 11819.932 ns/op
# Warmup Iteration   2: 9504.888 ns/op
# Warmup Iteration   3: 9630.145 ns/op
# Warmup Iteration   4: 9276.379 ns/op
# Warmup Iteration   5: 9270.661 ns/op
Iteration   1: 9284.178 ns/op
Iteration   2: 9458.308 ns/op
Iteration   3: 9275.112 ns/op
Iteration   4: 9263.775 ns/op
Iteration   5: 9243.961 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  9305.067 ±(99.9%) 334.893 ns/op [Average]
  (min, avg, max) = (9243.961, 9305.067, 9458.308), stdev = 86.971
  CI (99.9%): [8970.174, 9639.960] (assumes normal distribution)


# Run complete. Total time: 00:19:30

Benchmark                          (dataset)  (length)  Mode  Cnt       Score      Error  Units
Base64Benchmarks.commonsDecode         fixed         1  avgt    5     992.125 ±  152.544  ns/op
Base64Benchmarks.commonsDecode         fixed        10  avgt    5    1064.405 ±   21.666  ns/op
Base64Benchmarks.commonsDecode         fixed        50  avgt    5    1483.646 ±   18.861  ns/op
Base64Benchmarks.commonsDecode         fixed       100  avgt    5    2034.970 ±   98.026  ns/op
Base64Benchmarks.commonsDecode         fixed       500  avgt    5    6566.262 ±  149.445  ns/op
Base64Benchmarks.commonsDecode         fixed      1000  avgt    5   11223.624 ±  400.052  ns/op
Base64Benchmarks.commonsDecode         fixed     10000  avgt    5   91408.153 ± 9128.746  ns/op
Base64Benchmarks.commonsDecode        random         1  avgt    5     981.295 ±   51.524  ns/op
Base64Benchmarks.commonsDecode        random        10  avgt    5    1067.720 ±   36.760  ns/op
Base64Benchmarks.commonsDecode        random        50  avgt    5    1487.465 ±   50.480  ns/op
Base64Benchmarks.commonsDecode        random       100  avgt    5    2062.426 ±  215.140  ns/op
Base64Benchmarks.commonsDecode        random       500  avgt    5    6644.135 ±  569.380  ns/op
Base64Benchmarks.commonsDecode        random      1000  avgt    5   11335.406 ± 1325.977  ns/op
Base64Benchmarks.commonsDecode        random     10000  avgt    5   94387.711 ±  563.326  ns/op
Base64Benchmarks.commonsEncode         fixed         1  avgt    5     968.670 ±   10.895  ns/op
Base64Benchmarks.commonsEncode         fixed        10  avgt    5    1000.739 ±   91.939  ns/op
Base64Benchmarks.commonsEncode         fixed        50  avgt    5    1322.488 ±    9.205  ns/op
Base64Benchmarks.commonsEncode         fixed       100  avgt    5    1805.992 ±   59.718  ns/op
Base64Benchmarks.commonsEncode         fixed       500  avgt    5    5717.774 ±   24.084  ns/op
Base64Benchmarks.commonsEncode         fixed      1000  avgt    5   11006.586 ±  972.550  ns/op
Base64Benchmarks.commonsEncode         fixed     10000  avgt    5   96677.707 ± 1211.912  ns/op
Base64Benchmarks.commonsEncode        random         1  avgt    5     971.163 ±   16.320  ns/op
Base64Benchmarks.commonsEncode        random        10  avgt    5     993.013 ±   18.646  ns/op
Base64Benchmarks.commonsEncode        random        50  avgt    5    1322.270 ±   35.981  ns/op
Base64Benchmarks.commonsEncode        random       100  avgt    5    1808.391 ±   66.187  ns/op
Base64Benchmarks.commonsEncode        random       500  avgt    5    5713.528 ±   41.206  ns/op
Base64Benchmarks.commonsEncode        random      1000  avgt    5   10813.070 ±  174.312  ns/op
Base64Benchmarks.commonsEncode        random     10000  avgt    5   98747.228 ± 1938.771  ns/op
Base64Benchmarks.commonsUrlDecode      fixed         1  avgt    5     969.446 ±    9.556  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        10  avgt    5    1076.757 ±   58.182  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        50  avgt    5    1553.080 ±   67.219  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       100  avgt    5    2163.966 ±  246.457  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       500  avgt    5    7068.632 ±  146.355  ns/op
Base64Benchmarks.commonsUrlDecode      fixed      1000  avgt    5   13848.420 ±  203.347  ns/op
Base64Benchmarks.commonsUrlDecode      fixed     10000  avgt    5   88657.131 ±  623.392  ns/op
Base64Benchmarks.commonsUrlDecode     random         1  avgt    5     970.079 ±   13.132  ns/op
Base64Benchmarks.commonsUrlDecode     random        10  avgt    5    1087.345 ±  113.021  ns/op
Base64Benchmarks.commonsUrlDecode     random        50  avgt    5    1546.197 ±   10.195  ns/op
Base64Benchmarks.commonsUrlDecode     random       100  avgt    5    2129.720 ±   24.387  ns/op
Base64Benchmarks.commonsUrlDecode     random       500  avgt    5    7234.292 ±   91.263  ns/op
Base64Benchmarks.commonsUrlDecode     random      1000  avgt    5   10279.399 ±  361.241  ns/op
Base64Benchmarks.commonsUrlDecode     random     10000  avgt    5   90083.696 ±  915.879  ns/op
Base64Benchmarks.commonsUrlEncode      fixed         1  avgt    5    1009.368 ±  205.687  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        10  avgt    5     998.256 ±   42.311  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        50  avgt    5    1334.147 ±   41.011  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       100  avgt    5    1787.294 ±   71.825  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       500  avgt    5    5684.001 ±  124.165  ns/op
Base64Benchmarks.commonsUrlEncode      fixed      1000  avgt    5   10939.912 ±  930.778  ns/op
Base64Benchmarks.commonsUrlEncode      fixed     10000  avgt    5  100431.500 ±  510.665  ns/op
Base64Benchmarks.commonsUrlEncode     random         1  avgt    5     968.008 ±    8.852  ns/op
Base64Benchmarks.commonsUrlEncode     random        10  avgt    5    1001.467 ±   10.849  ns/op
Base64Benchmarks.commonsUrlEncode     random        50  avgt    5    1351.891 ±  204.886  ns/op
Base64Benchmarks.commonsUrlEncode     random       100  avgt    5    1800.703 ±   81.127  ns/op
Base64Benchmarks.commonsUrlEncode     random       500  avgt    5    5788.779 ±  194.531  ns/op
Base64Benchmarks.commonsUrlEncode     random      1000  avgt    5   10840.678 ±  219.667  ns/op
Base64Benchmarks.commonsUrlEncode     random     10000  avgt    5  100258.096 ± 3312.008  ns/op
Base64Benchmarks.jdkDecode             fixed         1  avgt    5      34.998 ±    1.966  ns/op
Base64Benchmarks.jdkDecode             fixed        10  avgt    5      55.487 ±    0.377  ns/op
Base64Benchmarks.jdkDecode             fixed        50  avgt    5     133.106 ±   10.535  ns/op
Base64Benchmarks.jdkDecode             fixed       100  avgt    5     227.782 ±   14.273  ns/op
Base64Benchmarks.jdkDecode             fixed       500  avgt    5     893.495 ±   26.597  ns/op
Base64Benchmarks.jdkDecode             fixed      1000  avgt    5    1735.138 ±   14.209  ns/op
Base64Benchmarks.jdkDecode             fixed     10000  avgt    5   19194.075 ±   66.180  ns/op
Base64Benchmarks.jdkDecode            random         1  avgt    5      34.713 ±    0.228  ns/op
Base64Benchmarks.jdkDecode            random        10  avgt    5      57.374 ±    0.321  ns/op
Base64Benchmarks.jdkDecode            random        50  avgt    5     134.459 ±   13.576  ns/op
Base64Benchmarks.jdkDecode            random       100  avgt    5     227.978 ±    3.917  ns/op
Base64Benchmarks.jdkDecode            random       500  avgt    5     886.597 ±    5.536  ns/op
Base64Benchmarks.jdkDecode            random      1000  avgt    5    1729.704 ±   11.489  ns/op
Base64Benchmarks.jdkDecode            random     10000  avgt    5   17952.483 ±  807.170  ns/op
Base64Benchmarks.jdkEncode             fixed         1  avgt    5      21.941 ±    0.717  ns/op
Base64Benchmarks.jdkEncode             fixed        10  avgt    5      47.128 ±    0.178  ns/op
Base64Benchmarks.jdkEncode             fixed        50  avgt    5      83.983 ±    0.465  ns/op
Base64Benchmarks.jdkEncode             fixed       100  avgt    5     127.708 ±    7.983  ns/op
Base64Benchmarks.jdkEncode             fixed       500  avgt    5     462.496 ±   20.617  ns/op
Base64Benchmarks.jdkEncode             fixed      1000  avgt    5     872.161 ±    4.980  ns/op
Base64Benchmarks.jdkEncode             fixed     10000  avgt    5    9242.790 ±   56.612  ns/op
Base64Benchmarks.jdkEncode            random         1  avgt    5      22.156 ±    0.954  ns/op
Base64Benchmarks.jdkEncode            random        10  avgt    5      47.882 ±    3.297  ns/op
Base64Benchmarks.jdkEncode            random        50  avgt    5      85.530 ±    3.805  ns/op
Base64Benchmarks.jdkEncode            random       100  avgt    5     127.578 ±    1.765  ns/op
Base64Benchmarks.jdkEncode            random       500  avgt    5     452.962 ±   27.169  ns/op
Base64Benchmarks.jdkEncode            random      1000  avgt    5     873.836 ±   86.206  ns/op
Base64Benchmarks.jdkEncode            random     10000  avgt    5    9264.634 ±   62.622  ns/op
Base64Benchmarks.jdkUrlDecode          fixed         1  avgt    5      32.255 ±    0.224  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        10  avgt    5      53.543 ±    0.750  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        50  avgt    5     128.896 ±    1.437  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       100  avgt    5     231.162 ±    1.275  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       500  avgt    5     977.207 ±   31.177  ns/op
Base64Benchmarks.jdkUrlDecode          fixed      1000  avgt    5    1930.927 ±  114.872  ns/op
Base64Benchmarks.jdkUrlDecode          fixed     10000  avgt    5   19471.978 ±  258.044  ns/op
Base64Benchmarks.jdkUrlDecode         random         1  avgt    5      32.931 ±    1.427  ns/op
Base64Benchmarks.jdkUrlDecode         random        10  avgt    5      52.863 ±    1.306  ns/op
Base64Benchmarks.jdkUrlDecode         random        50  avgt    5     133.709 ±    2.893  ns/op
Base64Benchmarks.jdkUrlDecode         random       100  avgt    5     231.141 ±    1.301  ns/op
Base64Benchmarks.jdkUrlDecode         random       500  avgt    5     968.502 ±    5.006  ns/op
Base64Benchmarks.jdkUrlDecode         random      1000  avgt    5    1906.757 ±   17.683  ns/op
Base64Benchmarks.jdkUrlDecode         random     10000  avgt    5   19625.219 ±  429.358  ns/op
Base64Benchmarks.jdkUrlEncode          fixed         1  avgt    5      23.102 ±    2.271  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        10  avgt    5      46.687 ±    0.971  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        50  avgt    5      86.036 ±    2.410  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       100  avgt    5     128.104 ±    0.624  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       500  avgt    5     446.870 ±    3.196  ns/op
Base64Benchmarks.jdkUrlEncode          fixed      1000  avgt    5     872.363 ±   62.503  ns/op
Base64Benchmarks.jdkUrlEncode          fixed     10000  avgt    5    9246.288 ±   52.836  ns/op
Base64Benchmarks.jdkUrlEncode         random         1  avgt    5      24.556 ±    4.122  ns/op
Base64Benchmarks.jdkUrlEncode         random        10  avgt    5      46.690 ±    0.152  ns/op
Base64Benchmarks.jdkUrlEncode         random        50  avgt    5      85.574 ±    0.345  ns/op
Base64Benchmarks.jdkUrlEncode         random       100  avgt    5     127.489 ±    0.303  ns/op
Base64Benchmarks.jdkUrlEncode         random       500  avgt    5     450.609 ±    8.328  ns/op
Base64Benchmarks.jdkUrlEncode         random      1000  avgt    5     869.775 ±    7.331  ns/op
Base64Benchmarks.jdkUrlEncode         random     10000  avgt    5    9305.067 ±  334.893  ns/op

Benchmark result is saved to /static/data/charts/base64-jdk-vs-apache-commons/jdk17.json
