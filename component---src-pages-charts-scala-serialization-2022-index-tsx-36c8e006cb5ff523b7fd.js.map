{"version":3,"file":"component---src-pages-charts-scala-serialization-2022-index-tsx-36c8e006cb5ff523b7fd.js","mappings":"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","sources":["webpack://komanov.com/./src/pages/charts/scala-serialization-2022/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport { JmhBenchmarkRun } from '../../..';\nimport {\n  ChartAndTable,\n  Choose,\n  getChooseItems,\n  JmhChartComponentProps,\n  JmhChartPage,\n  TimeUnits,\n  JdkVersion,\n  Jdks,\n} from '../../../components';\nimport { loadJson } from '../../../util';\n\nconst xDesc = {\n  title: 'Converter',\n  prop: 'library',\n  values: [\n    {\n      name: 'Jackson (JSON)',\n      value: 'JSON',\n    },\n    {\n      name: 'Jackson (Cbor)',\n      value: 'CBOR',\n    },\n    {\n      name: 'Jackson (Smile)',\n      value: 'SMILE',\n    },\n    {\n      name: 'ScalaPb',\n      value: 'SCALA_PB',\n    },\n    {\n      name: 'JavaPb',\n      value: 'JAVA_PB',\n    },\n    {\n      name: 'JavaThrift',\n      value: 'JAVA_THRIFT',\n    },\n    {\n      name: 'BooPickle',\n      value: 'BOOPICKLE',\n    },\n    {\n      name: 'Chill',\n      value: 'CHILL',\n    },\n    {\n      name: 'Jsoniter',\n      value: 'JSONITER',\n    },\n    {\n      name: 'Circe',\n      value: 'CIRCE',\n    },\n    {\n      name: 'JavaSerialization',\n      value: 'SERIALIZABLE',\n    },\n  ],\n};\n\nconst xDescNoSlow = {\n  title: 'Converter',\n  prop: 'library',\n  values: xDesc.values.filter(\n    (v) =>\n      v.value !== 'CIRCE' && v.value !== 'SERIALIZABLE' && v.value !== 'CHILL'\n  ),\n};\n\nconst yDesc = {\n  title: 'JDK',\n  prop: 'jdk',\n  values: Jdks,\n};\n\nconst DataSizes = [\n  {\n    name: '1K',\n    value: 1000,\n  },\n  {\n    name: '2K',\n    value: 2000,\n  },\n  {\n    name: '4K',\n    value: 4000,\n  },\n  {\n    name: '8K',\n    value: 8000,\n  },\n  {\n    name: '64K',\n    value: 64000,\n  },\n];\n\ntype Action = 'both' | 'serialization' | 'deserialization';\nconst Actions = [\n  {\n    label: 'parse + serialize',\n    value: 'both',\n    default: true,\n  },\n  {\n    label: 'serialize only',\n    value: 'serialization',\n  },\n  {\n    label: 'parse only',\n    value: 'deserialization',\n  },\n];\nfunction actionToLabel(action: Action) {\n  return Actions.find((v) => v.value === action)?.label;\n}\n\nconst ScalaSerialization2022Impl = ({ jmhList }: JmhChartComponentProps) => {\n  const [excludeSlow, excludeSlowSet] = useState(false);\n  const [dataSize, dataSizeSet] = useState(4000);\n  const [action, actionSet] = useState<Action>('both');\n  const [extractor, extractorSet] = useState({ func: null });\n  const [jdk, jdkSet] = useState<JdkVersion>('openjdk-17');\n\n  const microExtractor = (pm: any) => {\n    return extractor.func(pm) / 1000;\n  };\n\n  return (\n    <div className=\"markdown\">\n      <h3>Introduction</h3>\n\n      <p>\n        Here are benchmarking results for{' '}\n        <Link to=\"/p/scala-serialization-2022\">\n          &laquo;Scala Serialization 2022&raquo;\n        </Link>{' '}\n        blog post. Graphs from the previous runs (2016-2018) are{' '}\n        <Link to=\"/charts/scala-serialization\">here</Link>.\n      </p>\n\n      <p>\n        The performance tests are performed via{' '}\n        <a href=\"https://github.com/openjdk/jmh\">JMH</a>. The configuration of a\n        hardware is Intel® Core™ i7-1165G7 @ 2.80GHz × 8 (4 core + 4 HT) with 16\n        GB RAM. Scala version: 2.13.6.\n      </p>\n\n      <h3>Misc</h3>\n\n      <ul>\n        <li>\n          Latest versions of protobuf (both Java and ScalaPB) and thrift stopped\n          working on openjdk-8 (see exceptions in logs).\n        </li>\n        <li>\n          Chill doesn't work on openjdk-17, and{' '}\n          <code>--add-opens java.base/java.util=ALL-UNNAMED</code> doesn't help\n          :(\n        </li>\n        <li>Latest version of jsoniter doesn't work on openjdk-8.</li>\n        <li>\n          Java Serialization, circe and chill are by far the slowest. You may\n          turn it off on charts to make it more readable.\n        </li>\n      </ul>\n\n      <h3>Charts</h3>\n\n      <Choose\n        label=\"Data Size:\"\n        items={DataSizes.map(({ name, value }) => ({\n          label: name,\n          value,\n          default: value === 4000,\n        }))}\n        onChange={(value: number) => dataSizeSet(value)}\n      />\n      <Choose\n        label=\"Action:\"\n        items={Actions}\n        onChange={(value: Action) => actionSet(value)}\n      />\n      <Choose\n        label=\"Exclude slowest:\"\n        items={[\n          {\n            label: 'No',\n            value: false,\n            default: true,\n          },\n          {\n            label: 'Yes, please',\n            value: true,\n          },\n        ]}\n        onChange={(value: boolean) => excludeSlowSet(value)}\n      />\n      <TimeUnits onChange={(func: any) => extractorSet({ func })} />\n\n      <h3 id=\"site\">Site DTO</h3>\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={microExtractor}\n        filter={(d: any) =>\n          d.dataType === 'Site' &&\n          d.action === action &&\n          d.dataSize === dataSize\n        }\n        title={`Times of ${actionToLabel(\n          action\n        )} for Site class (DTO), microseconds`}\n        xDesc={excludeSlow ? xDescNoSlow : xDesc}\n        yDesc={yDesc}\n        options={{}}\n      />\n\n      <h3 id=\"events\">Events</h3>\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={microExtractor}\n        filter={(d: any) =>\n          d.dataType === 'Event' &&\n          d.action === action &&\n          d.dataSize === dataSize\n        }\n        title={`Times of ${actionToLabel(\n          action\n        )} for list of Events, microseconds`}\n        xDesc={excludeSlow ? xDescNoSlow : xDesc}\n        yDesc={yDesc}\n      />\n\n      <h3 id=\"progression\">Progression depending on data size</h3>\n\n      <p>It doesn't show anything unusual, which is a good sign.</p>\n\n      <Choose\n        label=\"JDK:\"\n        items={getChooseItems(Jdks, (_, index) => index === 0)}\n        onChange={(value: JdkVersion) => jdkSet(value)}\n      />\n\n      <h4>Site DTO</h4>\n\n      <ChartAndTable\n        chartType=\"LineChart\"\n        dataTable={jmhList}\n        extractor={microExtractor}\n        filter={(d: any) =>\n          d.dataType === 'Site' && d.action === action && d.jdk === jdk\n        }\n        title={`Times of ${actionToLabel(\n          action\n        )} for Site class (DTO), microseconds`}\n        xDesc={excludeSlow ? xDescNoSlow : xDesc}\n        yDesc={{\n          title: 'Data Size',\n          prop: 'dataSize',\n          values: [1000, 2000, 4000, 8000, 64000],\n        }}\n        options={{\n          hAxis: {\n            title: 'Data Size, bytes',\n          },\n          vAxis: {\n            title: 'time, microseconds',\n          },\n        }}\n      />\n\n      <h4>Events</h4>\n\n      <ChartAndTable\n        chartType=\"LineChart\"\n        dataTable={jmhList}\n        extractor={microExtractor}\n        filter={(d: any) =>\n          d.dataType === 'Event' && d.action === action && d.jdk === jdk\n        }\n        title={`Times of ${actionToLabel(\n          action\n        )} for list of Events, microseconds`}\n        xDesc={excludeSlow ? xDescNoSlow : xDesc}\n        yDesc={{\n          title: 'Data Size',\n          prop: 'dataSize',\n          values: [1000, 2000, 4000, 8000, 64000],\n        }}\n        options={{\n          hAxis: {\n            title: 'Data Size, bytes',\n          },\n          vAxis: {\n            title: 'time, microseconds',\n          },\n        }}\n      />\n\n      <p>\n        Full JMH logs:\n        <a href={filePath('jdk8.log.txt')}>openjdk-8</a>,{' '}\n        <a href={filePath('jdk11.log.txt')}>openjdk-11</a>,{' '}\n        <a href={filePath('jdk17.log.txt')}>openjdk-17</a>.\n      </p>\n    </div>\n  );\n};\n\nfunction exportDimensions(benchmark: string, params: any) {\n  //'com.komanov.serialization.jmh.EventBenchmark.both'\n\n  const [dataTypePart, action, ...otherBenchmark] =\n    benchmark.split('Benchmark.');\n  if (!action || otherBenchmark.length > 0) {\n    throw new Error('Expected 2 parts in a benchmark: ' + benchmark);\n  }\n\n  const dataType = dataTypePart.substring(dataTypePart.lastIndexOf('.') + 1);\n  const dataSize =\n    parseInt((/_(\\d+)_K/.exec(params.inputType) || [])[1], 10) * 1000;\n\n  return {\n    library: params.converterType,\n    action,\n    dataType,\n    dataSize,\n    jdk: params.jdk,\n  };\n}\n\nconst filePath = (name: string) =>\n  `/data/charts/scala-serialization-2022/${name}`;\n\nconst fetchAndCombineResults = () => {\n  return Promise.all([\n    loadJson(filePath('jdk8.json')),\n    loadJson(filePath('jdk11.json')),\n    loadJson(filePath('jdk17.json')),\n  ]).then((values: any[]) => {\n    function setJdk(index: number, jdk: JdkVersion) {\n      const list: JmhBenchmarkRun[] = values[index].data;\n      list.forEach((v) => (v.params = { ...v.params, jdk }));\n      return list;\n    }\n\n    return {\n      data: [\n        ...setJdk(0, 'openjdk-8'),\n        ...setJdk(1, 'openjdk-11'),\n        ...setJdk(2, 'openjdk-17'),\n      ],\n    };\n  });\n};\n\nconst ScalaSerialization2022 = JmhChartPage(ScalaSerialization2022Impl, {\n  fetchFunc: fetchAndCombineResults,\n  exportDimensionsFunc: exportDimensions,\n  headerText: 'Scala Serialization 2022 (Charts)',\n});\n\nexport default ScalaSerialization2022;\n"],"names":["xDesc","title","prop","values","name","value","xDescNoSlow","filter","v","yDesc","Jdks","DataSizes","Actions","label","default","actionToLabel","action","find","_Actions$find","filePath","ScalaSerialization2022","JmhChartPage","jmhList","useState","excludeSlow","excludeSlowSet","dataSize","dataSizeSet","actionSet","func","extractor","extractorSet","jdk","jdkSet","microExtractor","pm","React","className","Link","to","href","Choose","items","map","onChange","TimeUnits","id","ChartAndTable","dataTable","d","dataType","options","getChooseItems","_","index","chartType","hAxis","vAxis","fetchFunc","Promise","all","loadJson","then","setJdk","list","data","forEach","params","exportDimensionsFunc","benchmark","split","dataTypePart","otherBenchmark","length","Error","substring","lastIndexOf","parseInt","exec","inputType","library","converterType","headerText"],"sourceRoot":""}