# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 64.600 ns/op
# Warmup Iteration   2: 63.184 ns/op
# Warmup Iteration   3: 54.548 ns/op
# Warmup Iteration   4: 54.117 ns/op
# Warmup Iteration   5: 54.272 ns/op
Iteration   1: 54.327 ns/op
Iteration   2: 54.820 ns/op
Iteration   3: 54.394 ns/op
Iteration   4: 55.327 ns/op
Iteration   5: 54.922 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  54.758 ±(99.9%) 1.578 ns/op [Average]
  (min, avg, max) = (54.327, 54.758, 55.327), stdev = 0.410
  CI (99.9%): [53.180, 56.336] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.51% complete, ETA 00:34:45
# Fork: 1 of 1
# Warmup Iteration   1: 89.055 ns/op
# Warmup Iteration   2: 86.907 ns/op
# Warmup Iteration   3: 79.336 ns/op
# Warmup Iteration   4: 77.194 ns/op
# Warmup Iteration   5: 77.257 ns/op
Iteration   1: 77.276 ns/op
Iteration   2: 77.629 ns/op
Iteration   3: 77.481 ns/op
Iteration   4: 77.394 ns/op
Iteration   5: 77.931 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  77.542 ±(99.9%) 0.973 ns/op [Average]
  (min, avg, max) = (77.276, 77.542, 77.931), stdev = 0.253
  CI (99.9%): [76.569, 78.515] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 1.02% complete, ETA 00:34:26
# Fork: 1 of 1
# Warmup Iteration   1: 234.379 ns/op
# Warmup Iteration   2: 213.099 ns/op
# Warmup Iteration   3: 203.861 ns/op
# Warmup Iteration   4: 203.729 ns/op
# Warmup Iteration   5: 204.983 ns/op
Iteration   1: 205.023 ns/op
Iteration   2: 208.273 ns/op
Iteration   3: 217.427 ns/op
Iteration   4: 221.427 ns/op
Iteration   5: 203.485 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  211.127 ±(99.9%) 30.416 ns/op [Average]
  (min, avg, max) = (203.485, 211.127, 221.427), stdev = 7.899
  CI (99.9%): [180.710, 241.543] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 1.53% complete, ETA 00:34:09
# Fork: 1 of 1
# Warmup Iteration   1: 368.201 ns/op
# Warmup Iteration   2: 363.635 ns/op
# Warmup Iteration   3: 369.701 ns/op
# Warmup Iteration   4: 345.877 ns/op
# Warmup Iteration   5: 345.169 ns/op
Iteration   1: 364.474 ns/op
Iteration   2: 353.017 ns/op
Iteration   3: 349.004 ns/op
Iteration   4: 345.899 ns/op
Iteration   5: 347.064 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  351.891 ±(99.9%) 29.017 ns/op [Average]
  (min, avg, max) = (345.899, 351.891, 364.474), stdev = 7.536
  CI (99.9%): [322.875, 380.908] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 2.04% complete, ETA 00:33:56
# Fork: 1 of 1
# Warmup Iteration   1: 1786.281 ns/op
# Warmup Iteration   2: 1650.977 ns/op
# Warmup Iteration   3: 1714.699 ns/op
# Warmup Iteration   4: 1711.670 ns/op
# Warmup Iteration   5: 1687.437 ns/op
Iteration   1: 1576.781 ns/op
Iteration   2: 1580.997 ns/op
Iteration   3: 1573.221 ns/op
Iteration   4: 1572.134 ns/op
Iteration   5: 1577.566 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1576.140 ±(99.9%) 13.696 ns/op [Average]
  (min, avg, max) = (1572.134, 1576.140, 1580.997), stdev = 3.557
  CI (99.9%): [1562.444, 1589.836] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 2.55% complete, ETA 00:33:44
# Fork: 1 of 1
# Warmup Iteration   1: 3475.296 ns/op
# Warmup Iteration   2: 3260.641 ns/op
# Warmup Iteration   3: 3137.355 ns/op
# Warmup Iteration   4: 3143.888 ns/op
# Warmup Iteration   5: 3135.887 ns/op
Iteration   1: 3124.849 ns/op
Iteration   2: 3130.212 ns/op
Iteration   3: 3110.398 ns/op
Iteration   4: 3189.501 ns/op
Iteration   5: 3122.280 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  3135.448 ±(99.9%) 119.655 ns/op [Average]
  (min, avg, max) = (3110.398, 3135.448, 3189.501), stdev = 31.074
  CI (99.9%): [3015.793, 3255.102] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 3.06% complete, ETA 00:33:33
# Fork: 1 of 1
# Warmup Iteration   1: 32191.659 ns/op
# Warmup Iteration   2: 30761.744 ns/op
# Warmup Iteration   3: 29655.809 ns/op
# Warmup Iteration   4: 29821.281 ns/op
# Warmup Iteration   5: 29969.014 ns/op
Iteration   1: 30031.187 ns/op
Iteration   2: 29669.073 ns/op
Iteration   3: 29855.782 ns/op
Iteration   4: 31000.546 ns/op
Iteration   5: 30091.165 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  30129.551 ±(99.9%) 1979.218 ns/op [Average]
  (min, avg, max) = (29669.073, 30129.551, 31000.546), stdev = 513.997
  CI (99.9%): [28150.333, 32108.769] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1)

# Run progress: 3.57% complete, ETA 00:33:22
# Fork: 1 of 1
# Warmup Iteration   1: 64.251 ns/op
# Warmup Iteration   2: 63.107 ns/op
# Warmup Iteration   3: 54.858 ns/op
# Warmup Iteration   4: 54.092 ns/op
# Warmup Iteration   5: 54.049 ns/op
Iteration   1: 54.092 ns/op
Iteration   2: 54.125 ns/op
Iteration   3: 54.072 ns/op
Iteration   4: 54.276 ns/op
Iteration   5: 54.149 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  54.143 ±(99.9%) 0.309 ns/op [Average]
  (min, avg, max) = (54.072, 54.143, 54.276), stdev = 0.080
  CI (99.9%): [53.834, 54.452] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10)

# Run progress: 4.08% complete, ETA 00:33:09
# Fork: 1 of 1
# Warmup Iteration   1: 89.493 ns/op
# Warmup Iteration   2: 87.267 ns/op
# Warmup Iteration   3: 80.901 ns/op
# Warmup Iteration   4: 79.781 ns/op
# Warmup Iteration   5: 76.954 ns/op
Iteration   1: 77.091 ns/op
Iteration   2: 77.676 ns/op
Iteration   3: 77.209 ns/op
Iteration   4: 77.701 ns/op
Iteration   5: 77.345 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  77.404 ±(99.9%) 1.059 ns/op [Average]
  (min, avg, max) = (77.091, 77.404, 77.701), stdev = 0.275
  CI (99.9%): [76.346, 78.463] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 50)

# Run progress: 4.59% complete, ETA 00:32:56
# Fork: 1 of 1
# Warmup Iteration   1: 219.803 ns/op
# Warmup Iteration   2: 219.185 ns/op
# Warmup Iteration   3: 215.990 ns/op
# Warmup Iteration   4: 200.431 ns/op
# Warmup Iteration   5: 200.480 ns/op
Iteration   1: 204.261 ns/op
Iteration   2: 201.445 ns/op
Iteration   3: 200.233 ns/op
Iteration   4: 200.476 ns/op
Iteration   5: 199.566 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  201.196 ±(99.9%) 7.090 ns/op [Average]
  (min, avg, max) = (199.566, 201.196, 204.261), stdev = 1.841
  CI (99.9%): [194.106, 208.286] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 100)

# Run progress: 5.10% complete, ETA 00:32:44
# Fork: 1 of 1
# Warmup Iteration   1: 367.588 ns/op
# Warmup Iteration   2: 364.977 ns/op
# Warmup Iteration   3: 400.024 ns/op
# Warmup Iteration   4: 344.519 ns/op
# Warmup Iteration   5: 344.792 ns/op
Iteration   1: 353.623 ns/op
Iteration   2: 344.765 ns/op
Iteration   3: 345.081 ns/op
Iteration   4: 345.560 ns/op
Iteration   5: 343.810 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  346.568 ±(99.9%) 15.386 ns/op [Average]
  (min, avg, max) = (343.810, 346.568, 353.623), stdev = 3.996
  CI (99.9%): [331.182, 361.954] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 500)

# Run progress: 5.61% complete, ETA 00:32:32
# Fork: 1 of 1
# Warmup Iteration   1: 1742.452 ns/op
# Warmup Iteration   2: 1659.636 ns/op
# Warmup Iteration   3: 1578.076 ns/op
# Warmup Iteration   4: 1576.111 ns/op
# Warmup Iteration   5: 1750.552 ns/op
Iteration   1: 1609.813 ns/op
Iteration   2: 1590.742 ns/op
Iteration   3: 1589.056 ns/op
Iteration   4: 1591.378 ns/op
Iteration   5: 1588.931 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1593.984 ±(99.9%) 34.316 ns/op [Average]
  (min, avg, max) = (1588.931, 1593.984, 1609.813), stdev = 8.912
  CI (99.9%): [1559.668, 1628.300] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1000)

# Run progress: 6.12% complete, ETA 00:32:20
# Fork: 1 of 1
# Warmup Iteration   1: 3427.669 ns/op
# Warmup Iteration   2: 3478.135 ns/op
# Warmup Iteration   3: 3427.019 ns/op
# Warmup Iteration   4: 3073.902 ns/op
# Warmup Iteration   5: 3090.174 ns/op
Iteration   1: 3170.753 ns/op
Iteration   2: 3098.412 ns/op
Iteration   3: 3100.592 ns/op
Iteration   4: 3100.771 ns/op
Iteration   5: 3115.038 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  3117.113 ±(99.9%) 118.235 ns/op [Average]
  (min, avg, max) = (3098.412, 3117.113, 3170.753), stdev = 30.705
  CI (99.9%): [2998.878, 3235.348] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10000)

# Run progress: 6.63% complete, ETA 00:32:08
# Fork: 1 of 1
# Warmup Iteration   1: 36609.570 ns/op
# Warmup Iteration   2: 32281.512 ns/op
# Warmup Iteration   3: 31076.049 ns/op
# Warmup Iteration   4: 31018.409 ns/op
# Warmup Iteration   5: 30986.622 ns/op
Iteration   1: 31031.862 ns/op
Iteration   2: 31201.810 ns/op
Iteration   3: 31427.408 ns/op
Iteration   4: 31161.164 ns/op
Iteration   5: 31362.923 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  31237.034 ±(99.9%) 612.430 ns/op [Average]
  (min, avg, max) = (31031.862, 31237.034, 31427.408), stdev = 159.046
  CI (99.9%): [30624.603, 31849.464] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 7.14% complete, ETA 00:31:57
# Fork: 1 of 1
# Warmup Iteration   1: 59.109 ns/op
# Warmup Iteration   2: 58.739 ns/op
# Warmup Iteration   3: 50.838 ns/op
# Warmup Iteration   4: 51.170 ns/op
# Warmup Iteration   5: 50.944 ns/op
Iteration   1: 51.154 ns/op
Iteration   2: 51.043 ns/op
Iteration   3: 51.044 ns/op
Iteration   4: 51.112 ns/op
Iteration   5: 51.224 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  51.115 ±(99.9%) 0.297 ns/op [Average]
  (min, avg, max) = (51.043, 51.115, 51.224), stdev = 0.077
  CI (99.9%): [50.819, 51.412] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 7.65% complete, ETA 00:31:47
# Fork: 1 of 1
# Warmup Iteration   1: 90.428 ns/op
# Warmup Iteration   2: 88.085 ns/op
# Warmup Iteration   3: 81.316 ns/op
# Warmup Iteration   4: 78.290 ns/op
# Warmup Iteration   5: 82.844 ns/op
Iteration   1: 79.102 ns/op
Iteration   2: 78.375 ns/op
Iteration   3: 78.266 ns/op
Iteration   4: 78.053 ns/op
Iteration   5: 79.639 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  78.687 ±(99.9%) 2.550 ns/op [Average]
  (min, avg, max) = (78.053, 78.687, 79.639), stdev = 0.662
  CI (99.9%): [76.137, 81.237] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 8.16% complete, ETA 00:31:37
# Fork: 1 of 1
# Warmup Iteration   1: 178.487 ns/op
# Warmup Iteration   2: 176.708 ns/op
# Warmup Iteration   3: 160.610 ns/op
# Warmup Iteration   4: 157.691 ns/op
# Warmup Iteration   5: 156.331 ns/op
Iteration   1: 156.360 ns/op
Iteration   2: 157.199 ns/op
Iteration   3: 158.760 ns/op
Iteration   4: 158.807 ns/op
Iteration   5: 159.551 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  158.135 ±(99.9%) 5.047 ns/op [Average]
  (min, avg, max) = (156.360, 158.135, 159.551), stdev = 1.311
  CI (99.9%): [153.088, 163.183] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 8.67% complete, ETA 00:31:26
# Fork: 1 of 1
# Warmup Iteration   1: 267.180 ns/op
# Warmup Iteration   2: 259.505 ns/op
# Warmup Iteration   3: 240.711 ns/op
# Warmup Iteration   4: 230.853 ns/op
# Warmup Iteration   5: 229.275 ns/op
Iteration   1: 234.493 ns/op
Iteration   2: 230.893 ns/op
Iteration   3: 229.476 ns/op
Iteration   4: 236.697 ns/op
Iteration   5: 232.342 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  232.780 ±(99.9%) 11.052 ns/op [Average]
  (min, avg, max) = (229.476, 232.780, 236.697), stdev = 2.870
  CI (99.9%): [221.729, 243.832] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 9.18% complete, ETA 00:31:16
# Fork: 1 of 1
# Warmup Iteration   1: 1039.244 ns/op
# Warmup Iteration   2: 1001.932 ns/op
# Warmup Iteration   3: 921.546 ns/op
# Warmup Iteration   4: 908.780 ns/op
# Warmup Iteration   5: 911.007 ns/op
Iteration   1: 898.893 ns/op
Iteration   2: 888.641 ns/op
Iteration   3: 895.447 ns/op
Iteration   4: 893.009 ns/op
Iteration   5: 900.917 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  895.381 ±(99.9%) 18.671 ns/op [Average]
  (min, avg, max) = (888.641, 895.381, 900.917), stdev = 4.849
  CI (99.9%): [876.710, 914.053] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 9.69% complete, ETA 00:31:06
# Fork: 1 of 1
# Warmup Iteration   1: 2034.346 ns/op
# Warmup Iteration   2: 1986.632 ns/op
# Warmup Iteration   3: 1787.547 ns/op
# Warmup Iteration   4: 1764.692 ns/op
# Warmup Iteration   5: 1832.451 ns/op
Iteration   1: 1765.648 ns/op
Iteration   2: 1772.964 ns/op
Iteration   3: 1773.579 ns/op
Iteration   4: 1773.315 ns/op
Iteration   5: 1771.984 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  1771.498 ±(99.9%) 12.805 ns/op [Average]
  (min, avg, max) = (1765.648, 1771.498, 1773.579), stdev = 3.326
  CI (99.9%): [1758.692, 1784.303] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 10.20% complete, ETA 00:30:56
# Fork: 1 of 1
# Warmup Iteration   1: 22059.516 ns/op
# Warmup Iteration   2: 20895.706 ns/op
# Warmup Iteration   3: 20102.473 ns/op
# Warmup Iteration   4: 18956.394 ns/op
# Warmup Iteration   5: 19937.431 ns/op
Iteration   1: 18989.906 ns/op
Iteration   2: 19023.458 ns/op
Iteration   3: 19122.467 ns/op
Iteration   4: 19417.074 ns/op
Iteration   5: 19163.889 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  19143.359 ±(99.9%) 649.213 ns/op [Average]
  (min, avg, max) = (18989.906, 19143.359, 19417.074), stdev = 168.599
  CI (99.9%): [18494.146, 19792.572] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1)

# Run progress: 10.71% complete, ETA 00:30:46
# Fork: 1 of 1
# Warmup Iteration   1: 59.663 ns/op
# Warmup Iteration   2: 58.951 ns/op
# Warmup Iteration   3: 51.037 ns/op
# Warmup Iteration   4: 51.039 ns/op
# Warmup Iteration   5: 51.055 ns/op
Iteration   1: 51.104 ns/op
Iteration   2: 51.231 ns/op
Iteration   3: 51.745 ns/op
Iteration   4: 51.153 ns/op
Iteration   5: 51.223 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  51.291 ±(99.9%) 0.998 ns/op [Average]
  (min, avg, max) = (51.104, 51.291, 51.745), stdev = 0.259
  CI (99.9%): [50.293, 52.289] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10)

# Run progress: 11.22% complete, ETA 00:30:35
# Fork: 1 of 1
# Warmup Iteration   1: 89.684 ns/op
# Warmup Iteration   2: 87.896 ns/op
# Warmup Iteration   3: 81.392 ns/op
# Warmup Iteration   4: 78.483 ns/op
# Warmup Iteration   5: 81.218 ns/op
Iteration   1: 78.883 ns/op
Iteration   2: 80.361 ns/op
Iteration   3: 78.509 ns/op
Iteration   4: 79.035 ns/op
Iteration   5: 78.794 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  79.116 ±(99.9%) 2.779 ns/op [Average]
  (min, avg, max) = (78.509, 79.116, 80.361), stdev = 0.722
  CI (99.9%): [76.337, 81.895] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 50)

# Run progress: 11.73% complete, ETA 00:30:24
# Fork: 1 of 1
# Warmup Iteration   1: 188.573 ns/op
# Warmup Iteration   2: 172.462 ns/op
# Warmup Iteration   3: 158.699 ns/op
# Warmup Iteration   4: 156.791 ns/op
# Warmup Iteration   5: 165.447 ns/op
Iteration   1: 159.629 ns/op
Iteration   2: 158.867 ns/op
Iteration   3: 160.548 ns/op
Iteration   4: 159.029 ns/op
Iteration   5: 159.589 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  159.532 ±(99.9%) 2.540 ns/op [Average]
  (min, avg, max) = (158.867, 159.532, 160.548), stdev = 0.660
  CI (99.9%): [156.992, 162.072] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 100)

# Run progress: 12.24% complete, ETA 00:30:13
# Fork: 1 of 1
# Warmup Iteration   1: 260.088 ns/op
# Warmup Iteration   2: 250.560 ns/op
# Warmup Iteration   3: 242.498 ns/op
# Warmup Iteration   4: 228.316 ns/op
# Warmup Iteration   5: 231.161 ns/op
Iteration   1: 229.427 ns/op
Iteration   2: 231.234 ns/op
Iteration   3: 231.952 ns/op
Iteration   4: 230.555 ns/op
Iteration   5: 230.745 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  230.783 ±(99.9%) 3.583 ns/op [Average]
  (min, avg, max) = (229.427, 230.783, 231.952), stdev = 0.931
  CI (99.9%): [227.200, 234.366] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 500)

# Run progress: 12.76% complete, ETA 00:30:02
# Fork: 1 of 1
# Warmup Iteration   1: 1044.744 ns/op
# Warmup Iteration   2: 992.720 ns/op
# Warmup Iteration   3: 919.330 ns/op
# Warmup Iteration   4: 915.935 ns/op
# Warmup Iteration   5: 921.595 ns/op
Iteration   1: 887.981 ns/op
Iteration   2: 921.976 ns/op
Iteration   3: 896.684 ns/op
Iteration   4: 899.388 ns/op
Iteration   5: 902.984 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  901.803 ±(99.9%) 48.381 ns/op [Average]
  (min, avg, max) = (887.981, 901.803, 921.976), stdev = 12.564
  CI (99.9%): [853.422, 950.183] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1000)

# Run progress: 13.27% complete, ETA 00:29:51
# Fork: 1 of 1
# Warmup Iteration   1: 2032.535 ns/op
# Warmup Iteration   2: 1988.184 ns/op
# Warmup Iteration   3: 1838.786 ns/op
# Warmup Iteration   4: 1767.370 ns/op
# Warmup Iteration   5: 1762.567 ns/op
Iteration   1: 1791.780 ns/op
Iteration   2: 1759.656 ns/op
Iteration   3: 1762.025 ns/op
Iteration   4: 1762.313 ns/op
Iteration   5: 1772.189 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  1769.593 ±(99.9%) 51.230 ns/op [Average]
  (min, avg, max) = (1759.656, 1769.593, 1791.780), stdev = 13.304
  CI (99.9%): [1718.363, 1820.822] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10000)

# Run progress: 13.78% complete, ETA 00:29:41
# Fork: 1 of 1
# Warmup Iteration   1: 21872.622 ns/op
# Warmup Iteration   2: 18840.103 ns/op
# Warmup Iteration   3: 18775.144 ns/op
# Warmup Iteration   4: 17018.779 ns/op
# Warmup Iteration   5: 17019.631 ns/op
Iteration   1: 17063.763 ns/op
Iteration   2: 17024.525 ns/op
Iteration   3: 17050.717 ns/op
Iteration   4: 17070.551 ns/op
Iteration   5: 17062.354 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  17054.382 ±(99.9%) 69.894 ns/op [Average]
  (min, avg, max) = (17024.525, 17054.382, 17070.551), stdev = 18.151
  CI (99.9%): [16984.488, 17124.276] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 14.29% complete, ETA 00:29:30
# Fork: 1 of 1
# Warmup Iteration   1: 1439.782 ns/op
# Warmup Iteration   2: 1402.616 ns/op
# Warmup Iteration   3: 1362.957 ns/op
# Warmup Iteration   4: 1370.945 ns/op
# Warmup Iteration   5: 1375.567 ns/op
Iteration   1: 1356.477 ns/op
Iteration   2: 1363.084 ns/op
Iteration   3: 1369.025 ns/op
Iteration   4: 1364.182 ns/op
Iteration   5: 1343.895 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1359.333 ±(99.9%) 37.432 ns/op [Average]
  (min, avg, max) = (1343.895, 1359.333, 1369.025), stdev = 9.721
  CI (99.9%): [1321.901, 1396.764] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 14.80% complete, ETA 00:29:20
# Fork: 1 of 1
# Warmup Iteration   1: 1424.238 ns/op
# Warmup Iteration   2: 1365.999 ns/op
# Warmup Iteration   3: 1347.932 ns/op
# Warmup Iteration   4: 1385.062 ns/op
# Warmup Iteration   5: 1348.414 ns/op
Iteration   1: 1349.107 ns/op
Iteration   2: 1350.985 ns/op
Iteration   3: 1353.649 ns/op
Iteration   4: 1352.375 ns/op
Iteration   5: 1328.979 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1347.019 ±(99.9%) 39.372 ns/op [Average]
  (min, avg, max) = (1328.979, 1347.019, 1353.649), stdev = 10.225
  CI (99.9%): [1307.647, 1386.391] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 15.31% complete, ETA 00:29:09
# Fork: 1 of 1
# Warmup Iteration   1: 1506.415 ns/op
# Warmup Iteration   2: 1463.468 ns/op
# Warmup Iteration   3: 1434.862 ns/op
# Warmup Iteration   4: 1434.224 ns/op
# Warmup Iteration   5: 1434.585 ns/op
Iteration   1: 1431.136 ns/op
Iteration   2: 1437.705 ns/op
Iteration   3: 1433.712 ns/op
Iteration   4: 1429.902 ns/op
Iteration   5: 1413.461 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1429.183 ±(99.9%) 35.743 ns/op [Average]
  (min, avg, max) = (1413.461, 1429.183, 1437.705), stdev = 9.282
  CI (99.9%): [1393.441, 1464.926] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 15.82% complete, ETA 00:28:58
# Fork: 1 of 1
# Warmup Iteration   1: 1662.388 ns/op
# Warmup Iteration   2: 1594.689 ns/op
# Warmup Iteration   3: 1605.873 ns/op
# Warmup Iteration   4: 1567.850 ns/op
# Warmup Iteration   5: 1563.253 ns/op
Iteration   1: 1562.937 ns/op
Iteration   2: 1574.165 ns/op
Iteration   3: 1560.481 ns/op
Iteration   4: 1713.541 ns/op
Iteration   5: 1551.214 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1592.468 ±(99.9%) 262.514 ns/op [Average]
  (min, avg, max) = (1551.214, 1592.468, 1713.541), stdev = 68.174
  CI (99.9%): [1329.953, 1854.982] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 16.33% complete, ETA 00:28:48
# Fork: 1 of 1
# Warmup Iteration   1: 2323.479 ns/op
# Warmup Iteration   2: 2286.796 ns/op
# Warmup Iteration   3: 2138.282 ns/op
# Warmup Iteration   4: 2145.336 ns/op
# Warmup Iteration   5: 2148.401 ns/op
Iteration   1: 2141.410 ns/op
Iteration   2: 2310.196 ns/op
Iteration   3: 2311.469 ns/op
Iteration   4: 2132.815 ns/op
Iteration   5: 2117.261 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2202.630 ±(99.9%) 381.808 ns/op [Average]
  (min, avg, max) = (2117.261, 2202.630, 2311.469), stdev = 99.154
  CI (99.9%): [1820.823, 2584.438] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 16.84% complete, ETA 00:28:37
# Fork: 1 of 1
# Warmup Iteration   1: 3102.998 ns/op
# Warmup Iteration   2: 3002.257 ns/op
# Warmup Iteration   3: 2985.175 ns/op
# Warmup Iteration   4: 2794.764 ns/op
# Warmup Iteration   5: 2791.131 ns/op
Iteration   1: 2797.174 ns/op
Iteration   2: 2792.681 ns/op
Iteration   3: 2801.145 ns/op
Iteration   4: 2821.289 ns/op
Iteration   5: 2781.645 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2798.787 ±(99.9%) 55.988 ns/op [Average]
  (min, avg, max) = (2781.645, 2798.787, 2821.289), stdev = 14.540
  CI (99.9%): [2742.798, 2854.775] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 17.35% complete, ETA 00:28:27
# Fork: 1 of 1
# Warmup Iteration   1: 15429.986 ns/op
# Warmup Iteration   2: 15214.688 ns/op
# Warmup Iteration   3: 14603.364 ns/op
# Warmup Iteration   4: 13737.509 ns/op
# Warmup Iteration   5: 13703.348 ns/op
Iteration   1: 13729.375 ns/op
Iteration   2: 13701.139 ns/op
Iteration   3: 13757.642 ns/op
Iteration   4: 13759.127 ns/op
Iteration   5: 13768.599 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  13743.176 ±(99.9%) 106.636 ns/op [Average]
  (min, avg, max) = (13701.139, 13743.176, 13768.599), stdev = 27.693
  CI (99.9%): [13636.541, 13849.812] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 1)

# Run progress: 17.86% complete, ETA 00:28:17
# Fork: 1 of 1
# Warmup Iteration   1: 1435.798 ns/op
# Warmup Iteration   2: 1396.944 ns/op
# Warmup Iteration   3: 1359.418 ns/op
# Warmup Iteration   4: 1368.093 ns/op
# Warmup Iteration   5: 1363.008 ns/op
Iteration   1: 1368.160 ns/op
Iteration   2: 1360.154 ns/op
Iteration   3: 1357.333 ns/op
Iteration   4: 1363.263 ns/op
Iteration   5: 1340.293 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1357.841 ±(99.9%) 40.816 ns/op [Average]
  (min, avg, max) = (1340.293, 1357.841, 1368.160), stdev = 10.600
  CI (99.9%): [1317.025, 1398.656] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 10)

# Run progress: 18.37% complete, ETA 00:28:06
# Fork: 1 of 1
# Warmup Iteration   1: 1425.105 ns/op
# Warmup Iteration   2: 1378.459 ns/op
# Warmup Iteration   3: 1360.849 ns/op
# Warmup Iteration   4: 1358.258 ns/op
# Warmup Iteration   5: 1354.966 ns/op
Iteration   1: 1355.967 ns/op
Iteration   2: 1359.545 ns/op
Iteration   3: 1401.872 ns/op
Iteration   4: 1354.498 ns/op
Iteration   5: 1380.193 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1370.415 ±(99.9%) 78.570 ns/op [Average]
  (min, avg, max) = (1354.498, 1370.415, 1401.872), stdev = 20.404
  CI (99.9%): [1291.845, 1448.986] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 50)

# Run progress: 18.88% complete, ETA 00:27:55
# Fork: 1 of 1
# Warmup Iteration   1: 1506.141 ns/op
# Warmup Iteration   2: 1461.632 ns/op
# Warmup Iteration   3: 1433.627 ns/op
# Warmup Iteration   4: 1433.442 ns/op
# Warmup Iteration   5: 1439.804 ns/op
Iteration   1: 1435.484 ns/op
Iteration   2: 1437.034 ns/op
Iteration   3: 1436.833 ns/op
Iteration   4: 1436.027 ns/op
Iteration   5: 1411.222 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1431.320 ±(99.9%) 43.329 ns/op [Average]
  (min, avg, max) = (1411.222, 1431.320, 1437.034), stdev = 11.252
  CI (99.9%): [1387.991, 1474.649] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 100)

# Run progress: 19.39% complete, ETA 00:27:44
# Fork: 1 of 1
# Warmup Iteration   1: 1676.850 ns/op
# Warmup Iteration   2: 1598.271 ns/op
# Warmup Iteration   3: 1567.197 ns/op
# Warmup Iteration   4: 1575.126 ns/op
# Warmup Iteration   5: 1568.909 ns/op
Iteration   1: 1562.493 ns/op
Iteration   2: 1573.945 ns/op
Iteration   3: 1569.532 ns/op
Iteration   4: 1573.656 ns/op
Iteration   5: 1551.575 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1566.240 ±(99.9%) 36.241 ns/op [Average]
  (min, avg, max) = (1551.575, 1566.240, 1573.945), stdev = 9.412
  CI (99.9%): [1530.000, 1602.481] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 500)

# Run progress: 19.90% complete, ETA 00:27:33
# Fork: 1 of 1
# Warmup Iteration   1: 2293.026 ns/op
# Warmup Iteration   2: 2259.372 ns/op
# Warmup Iteration   3: 2205.447 ns/op
# Warmup Iteration   4: 2104.385 ns/op
# Warmup Iteration   5: 2114.839 ns/op
Iteration   1: 2116.704 ns/op
Iteration   2: 2115.196 ns/op
Iteration   3: 2112.730 ns/op
Iteration   4: 2129.478 ns/op
Iteration   5: 2129.372 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2120.696 ±(99.9%) 31.165 ns/op [Average]
  (min, avg, max) = (2112.730, 2120.696, 2129.478), stdev = 8.094
  CI (99.9%): [2089.531, 2151.861] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 1000)

# Run progress: 20.41% complete, ETA 00:27:22
# Fork: 1 of 1
# Warmup Iteration   1: 3067.360 ns/op
# Warmup Iteration   2: 3077.255 ns/op
# Warmup Iteration   3: 3086.574 ns/op
# Warmup Iteration   4: 2874.553 ns/op
# Warmup Iteration   5: 2875.334 ns/op
Iteration   1: 2867.501 ns/op
Iteration   2: 2875.375 ns/op
Iteration   3: 2876.894 ns/op
Iteration   4: 2887.460 ns/op
Iteration   5: 2851.580 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2871.762 ±(99.9%) 51.348 ns/op [Average]
  (min, avg, max) = (2851.580, 2871.762, 2887.460), stdev = 13.335
  CI (99.9%): [2820.414, 2923.110] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 10000)

# Run progress: 20.92% complete, ETA 00:27:11
# Fork: 1 of 1
# Warmup Iteration   1: 16217.840 ns/op
# Warmup Iteration   2: 15078.655 ns/op
# Warmup Iteration   3: 14515.722 ns/op
# Warmup Iteration   4: 13726.409 ns/op
# Warmup Iteration   5: 13730.305 ns/op
Iteration   1: 13792.404 ns/op
Iteration   2: 13799.480 ns/op
Iteration   3: 13833.150 ns/op
Iteration   4: 13945.550 ns/op
Iteration   5: 13738.893 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  13821.895 ±(99.9%) 296.266 ns/op [Average]
  (min, avg, max) = (13738.893, 13821.895, 13945.550), stdev = 76.939
  CI (99.9%): [13525.629, 14118.161] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 21.43% complete, ETA 00:27:01
# Fork: 1 of 1
# Warmup Iteration   1: 1222.310 ns/op
# Warmup Iteration   2: 1197.748 ns/op
# Warmup Iteration   3: 1187.493 ns/op
# Warmup Iteration   4: 1175.125 ns/op
# Warmup Iteration   5: 1198.769 ns/op
Iteration   1: 1176.348 ns/op
Iteration   2: 1169.756 ns/op
Iteration   3: 1177.326 ns/op
Iteration   4: 1176.124 ns/op
Iteration   5: 1188.600 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1177.631 ±(99.9%) 26.282 ns/op [Average]
  (min, avg, max) = (1169.756, 1177.631, 1188.600), stdev = 6.825
  CI (99.9%): [1151.348, 1203.913] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 21.94% complete, ETA 00:26:50
# Fork: 1 of 1
# Warmup Iteration   1: 1204.723 ns/op
# Warmup Iteration   2: 1160.605 ns/op
# Warmup Iteration   3: 1141.379 ns/op
# Warmup Iteration   4: 1145.952 ns/op
# Warmup Iteration   5: 1147.032 ns/op
Iteration   1: 1153.010 ns/op
Iteration   2: 1147.849 ns/op
Iteration   3: 1146.368 ns/op
Iteration   4: 1149.590 ns/op
Iteration   5: 1149.192 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1149.202 ±(99.9%) 9.532 ns/op [Average]
  (min, avg, max) = (1146.368, 1149.202, 1153.010), stdev = 2.475
  CI (99.9%): [1139.670, 1158.734] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 22.45% complete, ETA 00:26:40
# Fork: 1 of 1
# Warmup Iteration   1: 1330.908 ns/op
# Warmup Iteration   2: 1260.655 ns/op
# Warmup Iteration   3: 1224.910 ns/op
# Warmup Iteration   4: 1221.136 ns/op
# Warmup Iteration   5: 1265.297 ns/op
Iteration   1: 1220.455 ns/op
Iteration   2: 1217.391 ns/op
Iteration   3: 1219.131 ns/op
Iteration   4: 1239.452 ns/op
Iteration   5: 1238.588 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1227.004 ±(99.9%) 42.463 ns/op [Average]
  (min, avg, max) = (1217.391, 1227.004, 1239.452), stdev = 11.027
  CI (99.9%): [1184.541, 1269.466] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 22.96% complete, ETA 00:26:29
# Fork: 1 of 1
# Warmup Iteration   1: 1373.558 ns/op
# Warmup Iteration   2: 1327.133 ns/op
# Warmup Iteration   3: 1313.216 ns/op
# Warmup Iteration   4: 1311.088 ns/op
# Warmup Iteration   5: 1385.780 ns/op
Iteration   1: 1311.551 ns/op
Iteration   2: 1329.588 ns/op
Iteration   3: 1406.698 ns/op
Iteration   4: 1314.047 ns/op
Iteration   5: 1317.564 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1335.890 ±(99.9%) 154.732 ns/op [Average]
  (min, avg, max) = (1311.551, 1335.890, 1406.698), stdev = 40.184
  CI (99.9%): [1181.157, 1490.622] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 23.47% complete, ETA 00:26:19
# Fork: 1 of 1
# Warmup Iteration   1: 1974.836 ns/op
# Warmup Iteration   2: 1950.194 ns/op
# Warmup Iteration   3: 1826.913 ns/op
# Warmup Iteration   4: 1889.232 ns/op
# Warmup Iteration   5: 1838.987 ns/op
Iteration   1: 1831.337 ns/op
Iteration   2: 1833.008 ns/op
Iteration   3: 1833.334 ns/op
Iteration   4: 1849.890 ns/op
Iteration   5: 1845.298 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1838.574 ±(99.9%) 32.451 ns/op [Average]
  (min, avg, max) = (1831.337, 1838.574, 1849.890), stdev = 8.427
  CI (99.9%): [1806.122, 1871.025] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 23.98% complete, ETA 00:26:08
# Fork: 1 of 1
# Warmup Iteration   1: 2895.379 ns/op
# Warmup Iteration   2: 2854.119 ns/op
# Warmup Iteration   3: 3067.025 ns/op
# Warmup Iteration   4: 2645.595 ns/op
# Warmup Iteration   5: 2727.380 ns/op
Iteration   1: 2794.925 ns/op
Iteration   2: 2652.273 ns/op
Iteration   3: 2730.335 ns/op
Iteration   4: 2651.740 ns/op
Iteration   5: 2620.078 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  2689.870 ±(99.9%) 275.074 ns/op [Average]
  (min, avg, max) = (2620.078, 2689.870, 2794.925), stdev = 71.436
  CI (99.9%): [2414.796, 2964.945] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 24.49% complete, ETA 00:25:58
# Fork: 1 of 1
# Warmup Iteration   1: 15272.300 ns/op
# Warmup Iteration   2: 15121.803 ns/op
# Warmup Iteration   3: 13755.561 ns/op
# Warmup Iteration   4: 13358.585 ns/op
# Warmup Iteration   5: 13331.775 ns/op
Iteration   1: 14151.756 ns/op
Iteration   2: 15029.944 ns/op
Iteration   3: 14132.006 ns/op
Iteration   4: 13411.941 ns/op
Iteration   5: 13400.874 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  14025.304 ±(99.9%) 2585.102 ns/op [Average]
  (min, avg, max) = (13400.874, 14025.304, 15029.944), stdev = 671.343
  CI (99.9%): [11440.202, 16610.407] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 1)

# Run progress: 25.00% complete, ETA 00:25:47
# Fork: 1 of 1
# Warmup Iteration   1: 1222.640 ns/op
# Warmup Iteration   2: 1215.304 ns/op
# Warmup Iteration   3: 1175.232 ns/op
# Warmup Iteration   4: 1172.318 ns/op
# Warmup Iteration   5: 1172.561 ns/op
Iteration   1: 1181.731 ns/op
Iteration   2: 1175.865 ns/op
Iteration   3: 1213.400 ns/op
Iteration   4: 1183.002 ns/op
Iteration   5: 1200.248 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1190.849 ±(99.9%) 59.843 ns/op [Average]
  (min, avg, max) = (1175.865, 1190.849, 1213.400), stdev = 15.541
  CI (99.9%): [1131.006, 1250.692] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 10)

# Run progress: 25.51% complete, ETA 00:25:37
# Fork: 1 of 1
# Warmup Iteration   1: 1211.109 ns/op
# Warmup Iteration   2: 1186.947 ns/op
# Warmup Iteration   3: 1148.207 ns/op
# Warmup Iteration   4: 1147.047 ns/op
# Warmup Iteration   5: 1149.020 ns/op
Iteration   1: 1143.623 ns/op
Iteration   2: 1143.140 ns/op
Iteration   3: 1146.140 ns/op
Iteration   4: 1145.192 ns/op
Iteration   5: 1151.242 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1145.867 ±(99.9%) 12.461 ns/op [Average]
  (min, avg, max) = (1143.140, 1145.867, 1151.242), stdev = 3.236
  CI (99.9%): [1133.406, 1158.328] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 50)

# Run progress: 26.02% complete, ETA 00:25:26
# Fork: 1 of 1
# Warmup Iteration   1: 1284.716 ns/op
# Warmup Iteration   2: 1234.657 ns/op
# Warmup Iteration   3: 1227.217 ns/op
# Warmup Iteration   4: 1227.419 ns/op
# Warmup Iteration   5: 1249.046 ns/op
Iteration   1: 1225.873 ns/op
Iteration   2: 1224.582 ns/op
Iteration   3: 1250.136 ns/op
Iteration   4: 1232.424 ns/op
Iteration   5: 1229.907 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1232.584 ±(99.9%) 39.660 ns/op [Average]
  (min, avg, max) = (1224.582, 1232.584, 1250.136), stdev = 10.300
  CI (99.9%): [1192.924, 1272.245] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 100)

# Run progress: 26.53% complete, ETA 00:25:15
# Fork: 1 of 1
# Warmup Iteration   1: 1418.099 ns/op
# Warmup Iteration   2: 1390.668 ns/op
# Warmup Iteration   3: 1334.165 ns/op
# Warmup Iteration   4: 1336.185 ns/op
# Warmup Iteration   5: 1328.474 ns/op
Iteration   1: 1332.446 ns/op
Iteration   2: 1333.412 ns/op
Iteration   3: 1332.192 ns/op
Iteration   4: 1331.752 ns/op
Iteration   5: 1329.960 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1331.952 ±(99.9%) 4.887 ns/op [Average]
  (min, avg, max) = (1329.960, 1331.952, 1333.412), stdev = 1.269
  CI (99.9%): [1327.065, 1336.840] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 500)

# Run progress: 27.04% complete, ETA 00:25:04
# Fork: 1 of 1
# Warmup Iteration   1: 1966.191 ns/op
# Warmup Iteration   2: 1953.619 ns/op
# Warmup Iteration   3: 1813.919 ns/op
# Warmup Iteration   4: 1819.773 ns/op
# Warmup Iteration   5: 1819.852 ns/op
Iteration   1: 1876.880 ns/op
Iteration   2: 1825.284 ns/op
Iteration   3: 1826.672 ns/op
Iteration   4: 1847.441 ns/op
Iteration   5: 1879.393 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1851.134 ±(99.9%) 100.811 ns/op [Average]
  (min, avg, max) = (1825.284, 1851.134, 1879.393), stdev = 26.180
  CI (99.9%): [1750.323, 1951.945] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 1000)

# Run progress: 27.55% complete, ETA 00:24:54
# Fork: 1 of 1
# Warmup Iteration   1: 2893.335 ns/op
# Warmup Iteration   2: 2850.142 ns/op
# Warmup Iteration   3: 2736.641 ns/op
# Warmup Iteration   4: 2629.714 ns/op
# Warmup Iteration   5: 2791.317 ns/op
Iteration   1: 2744.868 ns/op
Iteration   2: 2630.041 ns/op
Iteration   3: 2630.424 ns/op
Iteration   4: 2608.900 ns/op
Iteration   5: 2627.123 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  2648.271 ±(99.9%) 210.725 ns/op [Average]
  (min, avg, max) = (2608.900, 2648.271, 2744.868), stdev = 54.725
  CI (99.9%): [2437.546, 2858.996] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 10000)

# Run progress: 28.06% complete, ETA 00:24:43
# Fork: 1 of 1
# Warmup Iteration   1: 15695.852 ns/op
# Warmup Iteration   2: 14899.817 ns/op
# Warmup Iteration   3: 13880.817 ns/op
# Warmup Iteration   4: 13331.649 ns/op
# Warmup Iteration   5: 13309.515 ns/op
Iteration   1: 13379.875 ns/op
Iteration   2: 13360.823 ns/op
Iteration   3: 13619.835 ns/op
Iteration   4: 13415.384 ns/op
Iteration   5: 13477.193 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  13450.622 ±(99.9%) 402.248 ns/op [Average]
  (min, avg, max) = (13360.823, 13450.622, 13619.835), stdev = 104.463
  CI (99.9%): [13048.374, 13852.870] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 1)

# Run progress: 28.57% complete, ETA 00:24:32
# Fork: 1 of 1
# Warmup Iteration   1: 1089.696 ns/op
# Warmup Iteration   2: 1070.130 ns/op
# Warmup Iteration   3: 1021.473 ns/op
# Warmup Iteration   4: 1022.916 ns/op
# Warmup Iteration   5: 1017.408 ns/op
Iteration   1: 1020.267 ns/op
Iteration   2: 1021.215 ns/op
Iteration   3: 1021.138 ns/op
Iteration   4: 1014.764 ns/op
Iteration   5: 1031.258 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1021.728 ±(99.9%) 22.948 ns/op [Average]
  (min, avg, max) = (1014.764, 1021.728, 1031.258), stdev = 5.960
  CI (99.9%): [998.780, 1044.677] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 10)

# Run progress: 29.08% complete, ETA 00:24:22
# Fork: 1 of 1
# Warmup Iteration   1: 1143.849 ns/op
# Warmup Iteration   2: 1050.416 ns/op
# Warmup Iteration   3: 1010.705 ns/op
# Warmup Iteration   4: 1013.186 ns/op
# Warmup Iteration   5: 1013.127 ns/op
Iteration   1: 1010.853 ns/op
Iteration   2: 1013.381 ns/op
Iteration   3: 1050.368 ns/op
Iteration   4: 1013.469 ns/op
Iteration   5: 1017.024 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1021.019 ±(99.9%) 63.739 ns/op [Average]
  (min, avg, max) = (1010.853, 1021.019, 1050.368), stdev = 16.553
  CI (99.9%): [957.280, 1084.758] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 50)

# Run progress: 29.59% complete, ETA 00:24:11
# Fork: 1 of 1
# Warmup Iteration   1: 1165.525 ns/op
# Warmup Iteration   2: 1101.454 ns/op
# Warmup Iteration   3: 1089.224 ns/op
# Warmup Iteration   4: 1086.496 ns/op
# Warmup Iteration   5: 1086.349 ns/op
Iteration   1: 1088.621 ns/op
Iteration   2: 1088.406 ns/op
Iteration   3: 1089.021 ns/op
Iteration   4: 1083.491 ns/op
Iteration   5: 1096.200 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1089.148 ±(99.9%) 17.496 ns/op [Average]
  (min, avg, max) = (1083.491, 1089.148, 1096.200), stdev = 4.544
  CI (99.9%): [1071.652, 1106.643] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 100)

# Run progress: 30.10% complete, ETA 00:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 1215.669 ns/op
# Warmup Iteration   2: 1175.627 ns/op
# Warmup Iteration   3: 1151.959 ns/op
# Warmup Iteration   4: 1152.220 ns/op
# Warmup Iteration   5: 1167.318 ns/op
Iteration   1: 1182.313 ns/op
Iteration   2: 1155.877 ns/op
Iteration   3: 1152.288 ns/op
Iteration   4: 1152.039 ns/op
Iteration   5: 1163.922 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1161.288 ±(99.9%) 48.890 ns/op [Average]
  (min, avg, max) = (1152.039, 1161.288, 1182.313), stdev = 12.697
  CI (99.9%): [1112.398, 1210.178] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 500)

# Run progress: 30.61% complete, ETA 00:23:50
# Fork: 1 of 1
# Warmup Iteration   1: 1851.832 ns/op
# Warmup Iteration   2: 1822.229 ns/op
# Warmup Iteration   3: 1714.525 ns/op
# Warmup Iteration   4: 1710.548 ns/op
# Warmup Iteration   5: 1716.046 ns/op
Iteration   1: 1711.869 ns/op
Iteration   2: 1724.762 ns/op
Iteration   3: 1727.246 ns/op
Iteration   4: 1718.149 ns/op
Iteration   5: 1736.589 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1723.723 ±(99.9%) 36.051 ns/op [Average]
  (min, avg, max) = (1711.869, 1723.723, 1736.589), stdev = 9.362
  CI (99.9%): [1687.672, 1759.775] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 31.12% complete, ETA 00:23:40
# Fork: 1 of 1
# Warmup Iteration   1: 3068.860 ns/op
# Warmup Iteration   2: 3198.435 ns/op
# Warmup Iteration   3: 3104.626 ns/op
# Warmup Iteration   4: 2863.924 ns/op
# Warmup Iteration   5: 2854.680 ns/op
Iteration   1: 2856.794 ns/op
Iteration   2: 2860.355 ns/op
Iteration   3: 2859.993 ns/op
Iteration   4: 2912.083 ns/op
Iteration   5: 2908.616 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  2879.568 ±(99.9%) 108.435 ns/op [Average]
  (min, avg, max) = (2856.794, 2879.568, 2912.083), stdev = 28.160
  CI (99.9%): [2771.134, 2988.003] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 31.63% complete, ETA 00:23:30
# Fork: 1 of 1
# Warmup Iteration   1: 15484.742 ns/op
# Warmup Iteration   2: 14930.989 ns/op
# Warmup Iteration   3: 13778.080 ns/op
# Warmup Iteration   4: 13274.591 ns/op
# Warmup Iteration   5: 13309.081 ns/op
Iteration   1: 13374.018 ns/op
Iteration   2: 13352.149 ns/op
Iteration   3: 13387.336 ns/op
Iteration   4: 13641.385 ns/op
Iteration   5: 13456.346 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  13442.247 ±(99.9%) 454.159 ns/op [Average]
  (min, avg, max) = (13352.149, 13442.247, 13641.385), stdev = 117.944
  CI (99.9%): [12988.088, 13896.405] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 1)

# Run progress: 32.14% complete, ETA 00:23:19
# Fork: 1 of 1
# Warmup Iteration   1: 1069.189 ns/op
# Warmup Iteration   2: 1073.763 ns/op
# Warmup Iteration   3: 1029.139 ns/op
# Warmup Iteration   4: 1027.695 ns/op
# Warmup Iteration   5: 1027.187 ns/op
Iteration   1: 1057.142 ns/op
Iteration   2: 1027.572 ns/op
Iteration   3: 1024.548 ns/op
Iteration   4: 1021.022 ns/op
Iteration   5: 1048.906 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1035.838 ±(99.9%) 62.088 ns/op [Average]
  (min, avg, max) = (1021.022, 1035.838, 1057.142), stdev = 16.124
  CI (99.9%): [973.750, 1097.926] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 10)

# Run progress: 32.65% complete, ETA 00:23:08
# Fork: 1 of 1
# Warmup Iteration   1: 1044.898 ns/op
# Warmup Iteration   2: 1016.026 ns/op
# Warmup Iteration   3: 997.294 ns/op
# Warmup Iteration   4: 998.850 ns/op
# Warmup Iteration   5: 1002.631 ns/op
Iteration   1: 1001.406 ns/op
Iteration   2: 1000.007 ns/op
Iteration   3: 1010.086 ns/op
Iteration   4: 1000.767 ns/op
Iteration   5: 1007.733 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1004.000 ±(99.9%) 17.656 ns/op [Average]
  (min, avg, max) = (1000.007, 1004.000, 1010.086), stdev = 4.585
  CI (99.9%): [986.344, 1021.656] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 50)

# Run progress: 33.16% complete, ETA 00:22:58
# Fork: 1 of 1
# Warmup Iteration   1: 1179.761 ns/op
# Warmup Iteration   2: 1100.844 ns/op
# Warmup Iteration   3: 1092.036 ns/op
# Warmup Iteration   4: 1157.822 ns/op
# Warmup Iteration   5: 1079.919 ns/op
Iteration   1: 1121.570 ns/op
Iteration   2: 1084.408 ns/op
Iteration   3: 1078.326 ns/op
Iteration   4: 1083.993 ns/op
Iteration   5: 1089.006 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1091.461 ±(99.9%) 66.434 ns/op [Average]
  (min, avg, max) = (1078.326, 1091.461, 1121.570), stdev = 17.253
  CI (99.9%): [1025.027, 1157.894] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 100)

# Run progress: 33.67% complete, ETA 00:22:47
# Fork: 1 of 1
# Warmup Iteration   1: 1214.712 ns/op
# Warmup Iteration   2: 1171.734 ns/op
# Warmup Iteration   3: 1153.579 ns/op
# Warmup Iteration   4: 1157.661 ns/op
# Warmup Iteration   5: 1157.567 ns/op
Iteration   1: 1154.415 ns/op
Iteration   2: 1155.617 ns/op
Iteration   3: 1167.905 ns/op
Iteration   4: 1157.176 ns/op
Iteration   5: 1166.663 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1160.355 ±(99.9%) 24.703 ns/op [Average]
  (min, avg, max) = (1154.415, 1160.355, 1167.905), stdev = 6.415
  CI (99.9%): [1135.652, 1185.058] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 500)

# Run progress: 34.18% complete, ETA 00:22:36
# Fork: 1 of 1
# Warmup Iteration   1: 1821.124 ns/op
# Warmup Iteration   2: 1772.481 ns/op
# Warmup Iteration   3: 1664.131 ns/op
# Warmup Iteration   4: 1665.956 ns/op
# Warmup Iteration   5: 1658.383 ns/op
Iteration   1: 1662.162 ns/op
Iteration   2: 1661.849 ns/op
Iteration   3: 1666.272 ns/op
Iteration   4: 1672.327 ns/op
Iteration   5: 1798.380 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1692.198 ±(99.9%) 229.144 ns/op [Average]
  (min, avg, max) = (1661.849, 1692.198, 1798.380), stdev = 59.508
  CI (99.9%): [1463.053, 1921.342] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 1000)

# Run progress: 34.69% complete, ETA 00:22:26
# Fork: 1 of 1
# Warmup Iteration   1: 2823.027 ns/op
# Warmup Iteration   2: 2711.820 ns/op
# Warmup Iteration   3: 2529.345 ns/op
# Warmup Iteration   4: 2473.562 ns/op
# Warmup Iteration   5: 2479.745 ns/op
Iteration   1: 2594.667 ns/op
Iteration   2: 2469.339 ns/op
Iteration   3: 2573.169 ns/op
Iteration   4: 2472.670 ns/op
Iteration   5: 2484.804 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  2518.930 ±(99.9%) 231.375 ns/op [Average]
  (min, avg, max) = (2469.339, 2518.930, 2594.667), stdev = 60.087
  CI (99.9%): [2287.555, 2750.304] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 10000)

# Run progress: 35.20% complete, ETA 00:22:15
# Fork: 1 of 1
# Warmup Iteration   1: 15582.434 ns/op
# Warmup Iteration   2: 14825.882 ns/op
# Warmup Iteration   3: 13581.029 ns/op
# Warmup Iteration   4: 13213.941 ns/op
# Warmup Iteration   5: 13233.944 ns/op
Iteration   1: 13247.491 ns/op
Iteration   2: 13301.568 ns/op
Iteration   3: 13275.635 ns/op
Iteration   4: 13297.563 ns/op
Iteration   5: 13346.430 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  13293.737 ±(99.9%) 140.416 ns/op [Average]
  (min, avg, max) = (13247.491, 13293.737, 13346.430), stdev = 36.465
  CI (99.9%): [13153.322, 13434.153] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 1)

# Run progress: 35.71% complete, ETA 00:22:05
# Fork: 1 of 1
# Warmup Iteration   1: 1002.728 ns/op
# Warmup Iteration   2: 971.371 ns/op
# Warmup Iteration   3: 953.178 ns/op
# Warmup Iteration   4: 954.440 ns/op
# Warmup Iteration   5: 953.364 ns/op
Iteration   1: 953.744 ns/op
Iteration   2: 951.548 ns/op
Iteration   3: 954.769 ns/op
Iteration   4: 953.213 ns/op
Iteration   5: 974.619 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  957.579 ±(99.9%) 36.953 ns/op [Average]
  (min, avg, max) = (951.548, 957.579, 974.619), stdev = 9.597
  CI (99.9%): [920.625, 994.532] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 10)

# Run progress: 36.22% complete, ETA 00:21:54
# Fork: 1 of 1
# Warmup Iteration   1: 1011.898 ns/op
# Warmup Iteration   2: 967.761 ns/op
# Warmup Iteration   3: 956.643 ns/op
# Warmup Iteration   4: 955.089 ns/op
# Warmup Iteration   5: 954.394 ns/op
Iteration   1: 954.550 ns/op
Iteration   2: 952.909 ns/op
Iteration   3: 954.732 ns/op
Iteration   4: 970.185 ns/op
Iteration   5: 963.619 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  959.199 ±(99.9%) 28.646 ns/op [Average]
  (min, avg, max) = (952.909, 959.199, 970.185), stdev = 7.439
  CI (99.9%): [930.554, 987.845] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 50)

# Run progress: 36.73% complete, ETA 00:21:44
# Fork: 1 of 1
# Warmup Iteration   1: 1097.591 ns/op
# Warmup Iteration   2: 1071.239 ns/op
# Warmup Iteration   3: 1075.097 ns/op
# Warmup Iteration   4: 1027.793 ns/op
# Warmup Iteration   5: 1030.137 ns/op
Iteration   1: 1026.809 ns/op
Iteration   2: 1033.411 ns/op
Iteration   3: 1034.458 ns/op
Iteration   4: 1031.450 ns/op
Iteration   5: 1037.328 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1032.691 ±(99.9%) 15.072 ns/op [Average]
  (min, avg, max) = (1026.809, 1032.691, 1037.328), stdev = 3.914
  CI (99.9%): [1017.619, 1047.764] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 100)

# Run progress: 37.24% complete, ETA 00:21:33
# Fork: 1 of 1
# Warmup Iteration   1: 1159.458 ns/op
# Warmup Iteration   2: 1127.289 ns/op
# Warmup Iteration   3: 1104.223 ns/op
# Warmup Iteration   4: 1092.708 ns/op
# Warmup Iteration   5: 1096.235 ns/op
Iteration   1: 1098.047 ns/op
Iteration   2: 1119.193 ns/op
Iteration   3: 1096.127 ns/op
Iteration   4: 1102.775 ns/op
Iteration   5: 1101.632 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1103.555 ±(99.9%) 35.205 ns/op [Average]
  (min, avg, max) = (1096.127, 1103.555, 1119.193), stdev = 9.143
  CI (99.9%): [1068.350, 1138.760] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 500)

# Run progress: 37.76% complete, ETA 00:21:23
# Fork: 1 of 1
# Warmup Iteration   1: 1739.981 ns/op
# Warmup Iteration   2: 1715.221 ns/op
# Warmup Iteration   3: 1659.600 ns/op
# Warmup Iteration   4: 1635.996 ns/op
# Warmup Iteration   5: 1635.965 ns/op
Iteration   1: 1637.029 ns/op
Iteration   2: 1642.981 ns/op
Iteration   3: 1644.277 ns/op
Iteration   4: 1642.570 ns/op
Iteration   5: 1630.712 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1639.514 ±(99.9%) 21.757 ns/op [Average]
  (min, avg, max) = (1630.712, 1639.514, 1644.277), stdev = 5.650
  CI (99.9%): [1617.757, 1661.270] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 38.27% complete, ETA 00:21:12
# Fork: 1 of 1
# Warmup Iteration   1: 2653.776 ns/op
# Warmup Iteration   2: 2589.768 ns/op
# Warmup Iteration   3: 2311.451 ns/op
# Warmup Iteration   4: 2319.984 ns/op
# Warmup Iteration   5: 2319.294 ns/op
Iteration   1: 2448.011 ns/op
Iteration   2: 2332.313 ns/op
Iteration   3: 2508.938 ns/op
Iteration   4: 2308.847 ns/op
Iteration   5: 2324.213 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  2384.464 ±(99.9%) 342.251 ns/op [Average]
  (min, avg, max) = (2308.847, 2384.464, 2508.938), stdev = 88.882
  CI (99.9%): [2042.213, 2726.716] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 38.78% complete, ETA 00:21:02
# Fork: 1 of 1
# Warmup Iteration   1: 14734.596 ns/op
# Warmup Iteration   2: 14497.935 ns/op
# Warmup Iteration   3: 12707.347 ns/op
# Warmup Iteration   4: 12773.551 ns/op
# Warmup Iteration   5: 12798.964 ns/op
Iteration   1: 13821.891 ns/op
Iteration   2: 12868.788 ns/op
Iteration   3: 14163.407 ns/op
Iteration   4: 12932.262 ns/op
Iteration   5: 13429.105 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  13443.091 ±(99.9%) 2155.424 ns/op [Average]
  (min, avg, max) = (12868.788, 13443.091, 14163.407), stdev = 559.757
  CI (99.9%): [11287.666, 15598.515] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 1)

# Run progress: 39.29% complete, ETA 00:20:51
# Fork: 1 of 1
# Warmup Iteration   1: 1002.573 ns/op
# Warmup Iteration   2: 973.456 ns/op
# Warmup Iteration   3: 954.633 ns/op
# Warmup Iteration   4: 951.887 ns/op
# Warmup Iteration   5: 952.170 ns/op
Iteration   1: 949.815 ns/op
Iteration   2: 953.170 ns/op
Iteration   3: 956.821 ns/op
Iteration   4: 951.504 ns/op
Iteration   5: 962.328 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  954.728 ±(99.9%) 19.166 ns/op [Average]
  (min, avg, max) = (949.815, 954.728, 962.328), stdev = 4.977
  CI (99.9%): [935.561, 973.894] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 10)

# Run progress: 39.80% complete, ETA 00:20:41
# Fork: 1 of 1
# Warmup Iteration   1: 985.238 ns/op
# Warmup Iteration   2: 953.003 ns/op
# Warmup Iteration   3: 941.250 ns/op
# Warmup Iteration   4: 940.148 ns/op
# Warmup Iteration   5: 976.296 ns/op
Iteration   1: 935.003 ns/op
Iteration   2: 934.701 ns/op
Iteration   3: 936.960 ns/op
Iteration   4: 938.008 ns/op
Iteration   5: 946.785 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  938.292 ±(99.9%) 19.031 ns/op [Average]
  (min, avg, max) = (934.701, 938.292, 946.785), stdev = 4.942
  CI (99.9%): [919.261, 957.322] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 50)

# Run progress: 40.31% complete, ETA 00:20:30
# Fork: 1 of 1
# Warmup Iteration   1: 1072.487 ns/op
# Warmup Iteration   2: 1036.030 ns/op
# Warmup Iteration   3: 1021.918 ns/op
# Warmup Iteration   4: 1026.154 ns/op
# Warmup Iteration   5: 1095.249 ns/op
Iteration   1: 1029.521 ns/op
Iteration   2: 1021.800 ns/op
Iteration   3: 1058.254 ns/op
Iteration   4: 1022.139 ns/op
Iteration   5: 1035.974 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1033.537 ±(99.9%) 57.780 ns/op [Average]
  (min, avg, max) = (1021.800, 1033.537, 1058.254), stdev = 15.005
  CI (99.9%): [975.757, 1091.318] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 100)

# Run progress: 40.82% complete, ETA 00:20:19
# Fork: 1 of 1
# Warmup Iteration   1: 1150.776 ns/op
# Warmup Iteration   2: 1151.462 ns/op
# Warmup Iteration   3: 1099.089 ns/op
# Warmup Iteration   4: 1096.922 ns/op
# Warmup Iteration   5: 1137.375 ns/op
Iteration   1: 1093.550 ns/op
Iteration   2: 1095.836 ns/op
Iteration   3: 1095.834 ns/op
Iteration   4: 1106.131 ns/op
Iteration   5: 1110.103 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1100.291 ±(99.9%) 28.265 ns/op [Average]
  (min, avg, max) = (1093.550, 1100.291, 1110.103), stdev = 7.340
  CI (99.9%): [1072.025, 1128.556] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 500)

# Run progress: 41.33% complete, ETA 00:20:09
# Fork: 1 of 1
# Warmup Iteration   1: 1737.342 ns/op
# Warmup Iteration   2: 1692.635 ns/op
# Warmup Iteration   3: 1757.262 ns/op
# Warmup Iteration   4: 1597.455 ns/op
# Warmup Iteration   5: 1727.473 ns/op
Iteration   1: 1596.328 ns/op
Iteration   2: 1604.515 ns/op
Iteration   3: 1597.205 ns/op
Iteration   4: 1597.685 ns/op
Iteration   5: 1611.875 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1601.521 ±(99.9%) 25.578 ns/op [Average]
  (min, avg, max) = (1596.328, 1601.521, 1611.875), stdev = 6.643
  CI (99.9%): [1575.943, 1627.099] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 1000)

# Run progress: 41.84% complete, ETA 00:19:58
# Fork: 1 of 1
# Warmup Iteration   1: 2566.501 ns/op
# Warmup Iteration   2: 2622.653 ns/op
# Warmup Iteration   3: 2290.380 ns/op
# Warmup Iteration   4: 2292.115 ns/op
# Warmup Iteration   5: 2335.423 ns/op
Iteration   1: 2294.716 ns/op
Iteration   2: 2295.981 ns/op
Iteration   3: 2385.866 ns/op
Iteration   4: 2303.038 ns/op
Iteration   5: 2386.110 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  2333.142 ±(99.9%) 186.162 ns/op [Average]
  (min, avg, max) = (2294.716, 2333.142, 2386.110), stdev = 48.346
  CI (99.9%): [2146.980, 2519.305] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 10000)

# Run progress: 42.35% complete, ETA 00:19:48
# Fork: 1 of 1
# Warmup Iteration   1: 15623.875 ns/op
# Warmup Iteration   2: 14295.142 ns/op
# Warmup Iteration   3: 12824.430 ns/op
# Warmup Iteration   4: 12756.390 ns/op
# Warmup Iteration   5: 12952.836 ns/op
Iteration   1: 13626.654 ns/op
Iteration   2: 12955.446 ns/op
Iteration   3: 12953.581 ns/op
Iteration   4: 12922.537 ns/op
Iteration   5: 12980.912 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  13087.826 ±(99.9%) 1162.603 ns/op [Average]
  (min, avg, max) = (12922.537, 13087.826, 13626.654), stdev = 301.924
  CI (99.9%): [11925.223, 14250.428] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 42.86% complete, ETA 00:19:37
# Fork: 1 of 1
# Warmup Iteration   1: 1004.323 ns/op
# Warmup Iteration   2: 961.354 ns/op
# Warmup Iteration   3: 948.144 ns/op
# Warmup Iteration   4: 948.862 ns/op
# Warmup Iteration   5: 996.635 ns/op
Iteration   1: 1003.579 ns/op
Iteration   2: 954.202 ns/op
Iteration   3: 947.449 ns/op
Iteration   4: 992.106 ns/op
Iteration   5: 961.762 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  971.820 ±(99.9%) 94.823 ns/op [Average]
  (min, avg, max) = (947.449, 971.820, 1003.579), stdev = 24.625
  CI (99.9%): [876.996, 1066.643] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 43.37% complete, ETA 00:19:27
# Fork: 1 of 1
# Warmup Iteration   1: 1062.553 ns/op
# Warmup Iteration   2: 1031.593 ns/op
# Warmup Iteration   3: 1021.706 ns/op
# Warmup Iteration   4: 1019.614 ns/op
# Warmup Iteration   5: 1018.327 ns/op
Iteration   1: 1015.076 ns/op
Iteration   2: 1019.902 ns/op
Iteration   3: 1030.448 ns/op
Iteration   4: 1020.104 ns/op
Iteration   5: 1054.712 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1028.048 ±(99.9%) 61.323 ns/op [Average]
  (min, avg, max) = (1015.076, 1028.048, 1054.712), stdev = 15.925
  CI (99.9%): [966.725, 1089.371] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 43.88% complete, ETA 00:19:16
# Fork: 1 of 1
# Warmup Iteration   1: 1147.992 ns/op
# Warmup Iteration   2: 1204.028 ns/op
# Warmup Iteration   3: 1086.808 ns/op
# Warmup Iteration   4: 1135.760 ns/op
# Warmup Iteration   5: 1102.078 ns/op
Iteration   1: 1107.329 ns/op
Iteration   2: 1103.395 ns/op
Iteration   3: 1104.057 ns/op
Iteration   4: 1201.697 ns/op
Iteration   5: 1100.656 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1123.427 ±(99.9%) 168.731 ns/op [Average]
  (min, avg, max) = (1100.656, 1123.427, 1201.697), stdev = 43.819
  CI (99.9%): [954.696, 1292.157] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 44.39% complete, ETA 00:19:06
# Fork: 1 of 1
# Warmup Iteration   1: 1207.806 ns/op
# Warmup Iteration   2: 1156.895 ns/op
# Warmup Iteration   3: 1143.136 ns/op
# Warmup Iteration   4: 1138.340 ns/op
# Warmup Iteration   5: 1138.195 ns/op
Iteration   1: 1139.743 ns/op
Iteration   2: 1136.693 ns/op
Iteration   3: 1141.635 ns/op
Iteration   4: 1155.460 ns/op
Iteration   5: 1154.178 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1145.542 ±(99.9%) 33.356 ns/op [Average]
  (min, avg, max) = (1136.693, 1145.542, 1155.460), stdev = 8.662
  CI (99.9%): [1112.186, 1178.898] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 44.90% complete, ETA 00:18:55
# Fork: 1 of 1
# Warmup Iteration   1: 1809.267 ns/op
# Warmup Iteration   2: 1798.931 ns/op
# Warmup Iteration   3: 1652.699 ns/op
# Warmup Iteration   4: 1714.263 ns/op
# Warmup Iteration   5: 1655.490 ns/op
Iteration   1: 1735.984 ns/op
Iteration   2: 1657.613 ns/op
Iteration   3: 1663.936 ns/op
Iteration   4: 1663.282 ns/op
Iteration   5: 1680.318 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1680.227 ±(99.9%) 124.370 ns/op [Average]
  (min, avg, max) = (1657.613, 1680.227, 1735.984), stdev = 32.298
  CI (99.9%): [1555.857, 1804.597] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 45.41% complete, ETA 00:18:45
# Fork: 1 of 1
# Warmup Iteration   1: 2638.318 ns/op
# Warmup Iteration   2: 2579.125 ns/op
# Warmup Iteration   3: 2336.255 ns/op
# Warmup Iteration   4: 2331.134 ns/op
# Warmup Iteration   5: 2332.380 ns/op
Iteration   1: 2341.852 ns/op
Iteration   2: 2330.296 ns/op
Iteration   3: 2340.178 ns/op
Iteration   4: 2327.913 ns/op
Iteration   5: 2360.837 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  2340.215 ±(99.9%) 50.121 ns/op [Average]
  (min, avg, max) = (2327.913, 2340.215, 2360.837), stdev = 13.016
  CI (99.9%): [2290.095, 2390.336] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 45.92% complete, ETA 00:18:34
# Fork: 1 of 1
# Warmup Iteration   1: 14955.484 ns/op
# Warmup Iteration   2: 15043.293 ns/op
# Warmup Iteration   3: 13373.165 ns/op
# Warmup Iteration   4: 13093.821 ns/op
# Warmup Iteration   5: 13119.486 ns/op
Iteration   1: 13143.605 ns/op
Iteration   2: 13185.204 ns/op
Iteration   3: 13193.376 ns/op
Iteration   4: 13207.996 ns/op
Iteration   5: 13224.609 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  13190.958 ±(99.9%) 117.174 ns/op [Average]
  (min, avg, max) = (13143.605, 13190.958, 13224.609), stdev = 30.430
  CI (99.9%): [13073.783, 13308.132] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 1)

# Run progress: 46.43% complete, ETA 00:18:24
# Fork: 1 of 1
# Warmup Iteration   1: 999.670 ns/op
# Warmup Iteration   2: 1018.373 ns/op
# Warmup Iteration   3: 946.658 ns/op
# Warmup Iteration   4: 982.525 ns/op
# Warmup Iteration   5: 950.066 ns/op
Iteration   1: 976.885 ns/op
Iteration   2: 949.202 ns/op
Iteration   3: 951.644 ns/op
Iteration   4: 954.688 ns/op
Iteration   5: 963.577 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  959.199 ±(99.9%) 43.452 ns/op [Average]
  (min, avg, max) = (949.202, 959.199, 976.885), stdev = 11.284
  CI (99.9%): [915.747, 1002.651] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 10)

# Run progress: 46.94% complete, ETA 00:18:13
# Fork: 1 of 1
# Warmup Iteration   1: 1039.912 ns/op
# Warmup Iteration   2: 1001.306 ns/op
# Warmup Iteration   3: 995.570 ns/op
# Warmup Iteration   4: 985.800 ns/op
# Warmup Iteration   5: 990.358 ns/op
Iteration   1: 999.665 ns/op
Iteration   2: 1002.818 ns/op
Iteration   3: 992.194 ns/op
Iteration   4: 987.851 ns/op
Iteration   5: 1002.967 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  997.099 ±(99.9%) 26.067 ns/op [Average]
  (min, avg, max) = (987.851, 997.099, 1002.967), stdev = 6.769
  CI (99.9%): [971.032, 1023.166] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 50)

# Run progress: 47.45% complete, ETA 00:18:03
# Fork: 1 of 1
# Warmup Iteration   1: 1127.158 ns/op
# Warmup Iteration   2: 1088.588 ns/op
# Warmup Iteration   3: 1067.329 ns/op
# Warmup Iteration   4: 1075.111 ns/op
# Warmup Iteration   5: 1281.704 ns/op
Iteration   1: 1083.464 ns/op
Iteration   2: 1081.925 ns/op
Iteration   3: 1079.274 ns/op
Iteration   4: 1104.595 ns/op
Iteration   5: 1097.209 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1089.293 ±(99.9%) 42.421 ns/op [Average]
  (min, avg, max) = (1079.274, 1089.293, 1104.595), stdev = 11.017
  CI (99.9%): [1046.872, 1131.715] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 100)

# Run progress: 47.96% complete, ETA 00:17:52
# Fork: 1 of 1
# Warmup Iteration   1: 1234.609 ns/op
# Warmup Iteration   2: 1205.929 ns/op
# Warmup Iteration   3: 1179.056 ns/op
# Warmup Iteration   4: 1171.899 ns/op
# Warmup Iteration   5: 1177.357 ns/op
Iteration   1: 1173.725 ns/op
Iteration   2: 1172.533 ns/op
Iteration   3: 1249.701 ns/op
Iteration   4: 1171.986 ns/op
Iteration   5: 1187.366 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1191.062 ±(99.9%) 128.579 ns/op [Average]
  (min, avg, max) = (1171.986, 1191.062, 1249.701), stdev = 33.392
  CI (99.9%): [1062.483, 1319.641] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 500)

# Run progress: 48.47% complete, ETA 00:17:41
# Fork: 1 of 1
# Warmup Iteration   1: 1778.907 ns/op
# Warmup Iteration   2: 1746.522 ns/op
# Warmup Iteration   3: 1656.828 ns/op
# Warmup Iteration   4: 1642.041 ns/op
# Warmup Iteration   5: 1642.319 ns/op
Iteration   1: 1653.057 ns/op
Iteration   2: 1649.488 ns/op
Iteration   3: 1653.379 ns/op
Iteration   4: 1654.545 ns/op
Iteration   5: 1698.306 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1661.755 ±(99.9%) 79.015 ns/op [Average]
  (min, avg, max) = (1649.488, 1661.755, 1698.306), stdev = 20.520
  CI (99.9%): [1582.740, 1740.770] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 1000)

# Run progress: 48.98% complete, ETA 00:17:31
# Fork: 1 of 1
# Warmup Iteration   1: 2639.642 ns/op
# Warmup Iteration   2: 2587.830 ns/op
# Warmup Iteration   3: 2326.857 ns/op
# Warmup Iteration   4: 2331.366 ns/op
# Warmup Iteration   5: 2423.535 ns/op
Iteration   1: 2322.745 ns/op
Iteration   2: 2320.439 ns/op
Iteration   3: 2322.897 ns/op
Iteration   4: 2343.706 ns/op
Iteration   5: 2352.430 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  2332.443 ±(99.9%) 56.318 ns/op [Average]
  (min, avg, max) = (2320.439, 2332.443, 2352.430), stdev = 14.626
  CI (99.9%): [2276.125, 2388.761] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.49% complete, ETA 00:17:20
# Fork: 1 of 1
# Warmup Iteration   1: 15587.517 ns/op
# Warmup Iteration   2: 14952.945 ns/op
# Warmup Iteration   3: 13111.780 ns/op
# Warmup Iteration   4: 13707.440 ns/op
# Warmup Iteration   5: 13062.257 ns/op
Iteration   1: 13134.522 ns/op
Iteration   2: 13353.251 ns/op
Iteration   3: 13175.326 ns/op
Iteration   4: 13280.128 ns/op
Iteration   5: 13286.553 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  13245.956 ±(99.9%) 342.979 ns/op [Average]
  (min, avg, max) = (13134.522, 13245.956, 13353.251), stdev = 89.071
  CI (99.9%): [12902.977, 13588.935] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:17:10
# Fork: 1 of 1
# Warmup Iteration   1: 585.971 ns/op
# Warmup Iteration   2: 534.750 ns/op
# Warmup Iteration   3: 527.756 ns/op
# Warmup Iteration   4: 526.827 ns/op
# Warmup Iteration   5: 539.215 ns/op
Iteration   1: 527.719 ns/op
Iteration   2: 528.602 ns/op
Iteration   3: 528.477 ns/op
Iteration   4: 530.890 ns/op
Iteration   5: 531.012 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  529.340 ±(99.9%) 5.813 ns/op [Average]
  (min, avg, max) = (527.719, 529.340, 531.012), stdev = 1.509
  CI (99.9%): [523.528, 535.153] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.51% complete, ETA 00:16:59
# Fork: 1 of 1
# Warmup Iteration   1: 595.024 ns/op
# Warmup Iteration   2: 566.710 ns/op
# Warmup Iteration   3: 560.619 ns/op
# Warmup Iteration   4: 560.152 ns/op
# Warmup Iteration   5: 558.248 ns/op
Iteration   1: 570.227 ns/op
Iteration   2: 580.203 ns/op
Iteration   3: 557.880 ns/op
Iteration   4: 558.288 ns/op
Iteration   5: 561.582 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  565.636 ±(99.9%) 36.726 ns/op [Average]
  (min, avg, max) = (557.880, 565.636, 580.203), stdev = 9.538
  CI (99.9%): [528.910, 602.362] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 51.02% complete, ETA 00:16:49
# Fork: 1 of 1
# Warmup Iteration   1: 679.756 ns/op
# Warmup Iteration   2: 655.567 ns/op
# Warmup Iteration   3: 637.951 ns/op
# Warmup Iteration   4: 638.391 ns/op
# Warmup Iteration   5: 639.965 ns/op
Iteration   1: 638.232 ns/op
Iteration   2: 640.605 ns/op
Iteration   3: 641.160 ns/op
Iteration   4: 644.583 ns/op
Iteration   5: 644.553 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  641.827 ±(99.9%) 10.526 ns/op [Average]
  (min, avg, max) = (638.232, 641.827, 644.583), stdev = 2.734
  CI (99.9%): [631.301, 652.353] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 51.53% complete, ETA 00:16:38
# Fork: 1 of 1
# Warmup Iteration   1: 749.522 ns/op
# Warmup Iteration   2: 722.396 ns/op
# Warmup Iteration   3: 720.436 ns/op
# Warmup Iteration   4: 717.530 ns/op
# Warmup Iteration   5: 718.803 ns/op
Iteration   1: 729.145 ns/op
Iteration   2: 717.022 ns/op
Iteration   3: 716.824 ns/op
Iteration   4: 717.038 ns/op
Iteration   5: 734.904 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  722.987 ±(99.9%) 32.724 ns/op [Average]
  (min, avg, max) = (716.824, 722.987, 734.904), stdev = 8.498
  CI (99.9%): [690.263, 755.710] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 52.04% complete, ETA 00:16:28
# Fork: 1 of 1
# Warmup Iteration   1: 1496.486 ns/op
# Warmup Iteration   2: 1318.599 ns/op
# Warmup Iteration   3: 1193.744 ns/op
# Warmup Iteration   4: 1177.078 ns/op
# Warmup Iteration   5: 1181.157 ns/op
Iteration   1: 1175.557 ns/op
Iteration   2: 1209.692 ns/op
Iteration   3: 1177.900 ns/op
Iteration   4: 1182.225 ns/op
Iteration   5: 1185.189 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1186.113 ±(99.9%) 52.757 ns/op [Average]
  (min, avg, max) = (1175.557, 1186.113, 1209.692), stdev = 13.701
  CI (99.9%): [1133.356, 1238.869] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 52.55% complete, ETA 00:16:17
# Fork: 1 of 1
# Warmup Iteration   1: 2143.109 ns/op
# Warmup Iteration   2: 2080.768 ns/op
# Warmup Iteration   3: 1886.046 ns/op
# Warmup Iteration   4: 1904.597 ns/op
# Warmup Iteration   5: 1893.724 ns/op
Iteration   1: 1889.956 ns/op
Iteration   2: 1888.170 ns/op
Iteration   3: 1897.123 ns/op
Iteration   4: 1896.180 ns/op
Iteration   5: 1974.939 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1909.274 ±(99.9%) 142.130 ns/op [Average]
  (min, avg, max) = (1888.170, 1909.274, 1974.939), stdev = 36.911
  CI (99.9%): [1767.144, 2051.403] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 53.06% complete, ETA 00:16:07
# Fork: 1 of 1
# Warmup Iteration   1: 14671.855 ns/op
# Warmup Iteration   2: 14186.068 ns/op
# Warmup Iteration   3: 12590.660 ns/op
# Warmup Iteration   4: 12703.722 ns/op
# Warmup Iteration   5: 12874.096 ns/op
Iteration   1: 14208.876 ns/op
Iteration   2: 13423.359 ns/op
Iteration   3: 12648.710 ns/op
Iteration   4: 12717.353 ns/op
Iteration   5: 12706.976 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  13141.055 ±(99.9%) 2604.733 ns/op [Average]
  (min, avg, max) = (12648.710, 13141.055, 14208.876), stdev = 676.441
  CI (99.9%): [10536.321, 15745.788] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1)

# Run progress: 53.57% complete, ETA 00:15:56
# Fork: 1 of 1
# Warmup Iteration   1: 573.189 ns/op
# Warmup Iteration   2: 535.613 ns/op
# Warmup Iteration   3: 538.311 ns/op
# Warmup Iteration   4: 525.154 ns/op
# Warmup Iteration   5: 526.737 ns/op
Iteration   1: 521.435 ns/op
Iteration   2: 525.129 ns/op
Iteration   3: 524.011 ns/op
Iteration   4: 525.522 ns/op
Iteration   5: 526.149 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  524.449 ±(99.9%) 7.147 ns/op [Average]
  (min, avg, max) = (521.435, 524.449, 526.149), stdev = 1.856
  CI (99.9%): [517.302, 531.596] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10)

# Run progress: 54.08% complete, ETA 00:15:46
# Fork: 1 of 1
# Warmup Iteration   1: 594.084 ns/op
# Warmup Iteration   2: 565.895 ns/op
# Warmup Iteration   3: 557.992 ns/op
# Warmup Iteration   4: 558.027 ns/op
# Warmup Iteration   5: 554.791 ns/op
Iteration   1: 554.957 ns/op
Iteration   2: 556.144 ns/op
Iteration   3: 557.581 ns/op
Iteration   4: 557.596 ns/op
Iteration   5: 559.291 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  557.114 ±(99.9%) 6.324 ns/op [Average]
  (min, avg, max) = (554.957, 557.114, 559.291), stdev = 1.642
  CI (99.9%): [550.790, 563.437] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 50)

# Run progress: 54.59% complete, ETA 00:15:35
# Fork: 1 of 1
# Warmup Iteration   1: 680.770 ns/op
# Warmup Iteration   2: 673.697 ns/op
# Warmup Iteration   3: 644.160 ns/op
# Warmup Iteration   4: 641.998 ns/op
# Warmup Iteration   5: 641.693 ns/op
Iteration   1: 670.283 ns/op
Iteration   2: 644.951 ns/op
Iteration   3: 644.061 ns/op
Iteration   4: 644.164 ns/op
Iteration   5: 645.993 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  649.891 ±(99.9%) 43.998 ns/op [Average]
  (min, avg, max) = (644.061, 649.891, 670.283), stdev = 11.426
  CI (99.9%): [605.893, 693.888] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 100)

# Run progress: 55.10% complete, ETA 00:15:25
# Fork: 1 of 1
# Warmup Iteration   1: 751.914 ns/op
# Warmup Iteration   2: 734.509 ns/op
# Warmup Iteration   3: 706.197 ns/op
# Warmup Iteration   4: 731.506 ns/op
# Warmup Iteration   5: 707.486 ns/op
Iteration   1: 720.729 ns/op
Iteration   2: 707.453 ns/op
Iteration   3: 709.062 ns/op
Iteration   4: 732.994 ns/op
Iteration   5: 727.786 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  719.605 ±(99.9%) 43.321 ns/op [Average]
  (min, avg, max) = (707.453, 719.605, 732.994), stdev = 11.250
  CI (99.9%): [676.284, 762.925] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 500)

# Run progress: 55.61% complete, ETA 00:15:14
# Fork: 1 of 1
# Warmup Iteration   1: 1371.375 ns/op
# Warmup Iteration   2: 1331.425 ns/op
# Warmup Iteration   3: 1169.778 ns/op
# Warmup Iteration   4: 1171.235 ns/op
# Warmup Iteration   5: 1174.305 ns/op
Iteration   1: 1176.393 ns/op
Iteration   2: 1171.641 ns/op
Iteration   3: 1275.974 ns/op
Iteration   4: 1189.601 ns/op
Iteration   5: 1191.609 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1201.044 ±(99.9%) 164.575 ns/op [Average]
  (min, avg, max) = (1171.641, 1201.044, 1275.974), stdev = 42.740
  CI (99.9%): [1036.469, 1365.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1000)

# Run progress: 56.12% complete, ETA 00:15:03
# Fork: 1 of 1
# Warmup Iteration   1: 2119.770 ns/op
# Warmup Iteration   2: 2090.594 ns/op
# Warmup Iteration   3: 2009.476 ns/op
# Warmup Iteration   4: 1886.648 ns/op
# Warmup Iteration   5: 1897.460 ns/op
Iteration   1: 1887.205 ns/op
Iteration   2: 1897.664 ns/op
Iteration   3: 1897.162 ns/op
Iteration   4: 2014.177 ns/op
Iteration   5: 1894.853 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1918.212 ±(99.9%) 207.199 ns/op [Average]
  (min, avg, max) = (1887.205, 1918.212, 2014.177), stdev = 53.809
  CI (99.9%): [1711.013, 2125.411] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10000)

# Run progress: 56.63% complete, ETA 00:14:53
# Fork: 1 of 1
# Warmup Iteration   1: 15726.440 ns/op
# Warmup Iteration   2: 14045.819 ns/op
# Warmup Iteration   3: 12603.940 ns/op
# Warmup Iteration   4: 12586.963 ns/op
# Warmup Iteration   5: 12644.712 ns/op
Iteration   1: 12718.050 ns/op
Iteration   2: 13008.285 ns/op
Iteration   3: 12677.899 ns/op
Iteration   4: 12778.460 ns/op
Iteration   5: 12768.606 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  12790.260 ±(99.9%) 494.558 ns/op [Average]
  (min, avg, max) = (12677.899, 12790.260, 13008.285), stdev = 128.435
  CI (99.9%): [12295.702, 13284.818] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 57.14% complete, ETA 00:14:42
# Fork: 1 of 1
# Warmup Iteration   1: 464.275 ns/op
# Warmup Iteration   2: 449.334 ns/op
# Warmup Iteration   3: 433.133 ns/op
# Warmup Iteration   4: 431.893 ns/op
# Warmup Iteration   5: 429.120 ns/op
Iteration   1: 431.798 ns/op
Iteration   2: 429.087 ns/op
Iteration   3: 432.035 ns/op
Iteration   4: 445.638 ns/op
Iteration   5: 433.525 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  434.416 ±(99.9%) 24.929 ns/op [Average]
  (min, avg, max) = (429.087, 434.416, 445.638), stdev = 6.474
  CI (99.9%): [409.487, 459.346] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 57.65% complete, ETA 00:14:32
# Fork: 1 of 1
# Warmup Iteration   1: 495.453 ns/op
# Warmup Iteration   2: 474.136 ns/op
# Warmup Iteration   3: 463.627 ns/op
# Warmup Iteration   4: 465.420 ns/op
# Warmup Iteration   5: 464.433 ns/op
Iteration   1: 464.498 ns/op
Iteration   2: 463.440 ns/op
Iteration   3: 465.602 ns/op
Iteration   4: 465.115 ns/op
Iteration   5: 463.874 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  464.506 ±(99.9%) 3.395 ns/op [Average]
  (min, avg, max) = (463.440, 464.506, 465.602), stdev = 0.882
  CI (99.9%): [461.111, 467.901] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 58.16% complete, ETA 00:14:21
# Fork: 1 of 1
# Warmup Iteration   1: 586.242 ns/op
# Warmup Iteration   2: 566.859 ns/op
# Warmup Iteration   3: 570.354 ns/op
# Warmup Iteration   4: 536.555 ns/op
# Warmup Iteration   5: 547.449 ns/op
Iteration   1: 537.728 ns/op
Iteration   2: 543.046 ns/op
Iteration   3: 540.277 ns/op
Iteration   4: 547.512 ns/op
Iteration   5: 541.465 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  542.006 ±(99.9%) 14.014 ns/op [Average]
  (min, avg, max) = (537.728, 542.006, 547.512), stdev = 3.639
  CI (99.9%): [527.991, 556.020] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 58.67% complete, ETA 00:14:11
# Fork: 1 of 1
# Warmup Iteration   1: 678.752 ns/op
# Warmup Iteration   2: 622.395 ns/op
# Warmup Iteration   3: 605.343 ns/op
# Warmup Iteration   4: 604.846 ns/op
# Warmup Iteration   5: 605.798 ns/op
Iteration   1: 611.540 ns/op
Iteration   2: 608.503 ns/op
Iteration   3: 613.882 ns/op
Iteration   4: 695.425 ns/op
Iteration   5: 760.901 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  658.050 ±(99.9%) 262.183 ns/op [Average]
  (min, avg, max) = (608.503, 658.050, 760.901), stdev = 68.088
  CI (99.9%): [395.867, 920.233] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 59.18% complete, ETA 00:14:00
# Fork: 1 of 1
# Warmup Iteration   1: 1220.588 ns/op
# Warmup Iteration   2: 1195.070 ns/op
# Warmup Iteration   3: 1067.252 ns/op
# Warmup Iteration   4: 1069.489 ns/op
# Warmup Iteration   5: 1071.093 ns/op
Iteration   1: 1073.615 ns/op
Iteration   2: 1073.967 ns/op
Iteration   3: 1116.698 ns/op
Iteration   4: 1070.773 ns/op
Iteration   5: 1078.034 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1082.617 ±(99.9%) 74.034 ns/op [Average]
  (min, avg, max) = (1070.773, 1082.617, 1116.698), stdev = 19.226
  CI (99.9%): [1008.583, 1156.652] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 59.69% complete, ETA 00:13:50
# Fork: 1 of 1
# Warmup Iteration   1: 2003.835 ns/op
# Warmup Iteration   2: 1950.233 ns/op
# Warmup Iteration   3: 1876.073 ns/op
# Warmup Iteration   4: 1765.219 ns/op
# Warmup Iteration   5: 1765.384 ns/op
Iteration   1: 1767.812 ns/op
Iteration   2: 1766.813 ns/op
Iteration   3: 1771.566 ns/op
Iteration   4: 1870.680 ns/op
Iteration   5: 1825.364 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1800.447 ±(99.9%) 178.380 ns/op [Average]
  (min, avg, max) = (1766.813, 1800.447, 1870.680), stdev = 46.325
  CI (99.9%): [1622.067, 1978.828] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 60.20% complete, ETA 00:13:40
# Fork: 1 of 1
# Warmup Iteration   1: 14430.801 ns/op
# Warmup Iteration   2: 13941.306 ns/op
# Warmup Iteration   3: 12315.716 ns/op
# Warmup Iteration   4: 12288.098 ns/op
# Warmup Iteration   5: 12310.693 ns/op
Iteration   1: 12379.335 ns/op
Iteration   2: 12404.972 ns/op
Iteration   3: 12402.411 ns/op
Iteration   4: 12423.273 ns/op
Iteration   5: 12443.085 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  12410.615 ±(99.9%) 92.176 ns/op [Average]
  (min, avg, max) = (12379.335, 12410.615, 12443.085), stdev = 23.938
  CI (99.9%): [12318.439, 12502.791] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 1)

# Run progress: 60.71% complete, ETA 00:13:29
# Fork: 1 of 1
# Warmup Iteration   1: 466.584 ns/op
# Warmup Iteration   2: 446.473 ns/op
# Warmup Iteration   3: 432.246 ns/op
# Warmup Iteration   4: 433.749 ns/op
# Warmup Iteration   5: 431.659 ns/op
Iteration   1: 454.008 ns/op
Iteration   2: 431.754 ns/op
Iteration   3: 441.230 ns/op
Iteration   4: 450.120 ns/op
Iteration   5: 445.230 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  444.468 ±(99.9%) 33.105 ns/op [Average]
  (min, avg, max) = (431.754, 444.468, 454.008), stdev = 8.597
  CI (99.9%): [411.363, 477.573] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 10)

# Run progress: 61.22% complete, ETA 00:13:18
# Fork: 1 of 1
# Warmup Iteration   1: 497.543 ns/op
# Warmup Iteration   2: 481.075 ns/op
# Warmup Iteration   3: 462.008 ns/op
# Warmup Iteration   4: 465.797 ns/op
# Warmup Iteration   5: 469.934 ns/op
Iteration   1: 482.170 ns/op
Iteration   2: 470.229 ns/op
Iteration   3: 469.570 ns/op
Iteration   4: 473.267 ns/op
Iteration   5: 473.643 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  473.776 ±(99.9%) 19.350 ns/op [Average]
  (min, avg, max) = (469.570, 473.776, 482.170), stdev = 5.025
  CI (99.9%): [454.426, 493.125] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 50)

# Run progress: 61.73% complete, ETA 00:13:08
# Fork: 1 of 1
# Warmup Iteration   1: 579.870 ns/op
# Warmup Iteration   2: 558.951 ns/op
# Warmup Iteration   3: 537.504 ns/op
# Warmup Iteration   4: 536.958 ns/op
# Warmup Iteration   5: 540.556 ns/op
Iteration   1: 544.909 ns/op
Iteration   2: 536.506 ns/op
Iteration   3: 536.855 ns/op
Iteration   4: 536.632 ns/op
Iteration   5: 541.103 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  539.201 ±(99.9%) 14.353 ns/op [Average]
  (min, avg, max) = (536.506, 539.201, 544.909), stdev = 3.727
  CI (99.9%): [524.849, 553.554] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 100)

# Run progress: 62.24% complete, ETA 00:12:57
# Fork: 1 of 1
# Warmup Iteration   1: 682.662 ns/op
# Warmup Iteration   2: 648.006 ns/op
# Warmup Iteration   3: 635.073 ns/op
# Warmup Iteration   4: 667.971 ns/op
# Warmup Iteration   5: 685.000 ns/op
Iteration   1: 636.687 ns/op
Iteration   2: 635.034 ns/op
Iteration   3: 633.794 ns/op
Iteration   4: 636.645 ns/op
Iteration   5: 621.105 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  632.653 ±(99.9%) 25.290 ns/op [Average]
  (min, avg, max) = (621.105, 632.653, 636.687), stdev = 6.568
  CI (99.9%): [607.363, 657.943] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 500)

# Run progress: 62.76% complete, ETA 00:12:47
# Fork: 1 of 1
# Warmup Iteration   1: 1413.517 ns/op
# Warmup Iteration   2: 1192.192 ns/op
# Warmup Iteration   3: 1071.227 ns/op
# Warmup Iteration   4: 1070.511 ns/op
# Warmup Iteration   5: 1067.513 ns/op
Iteration   1: 1070.655 ns/op
Iteration   2: 1068.607 ns/op
Iteration   3: 1072.155 ns/op
Iteration   4: 1079.534 ns/op
Iteration   5: 1075.901 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1073.370 ±(99.9%) 16.777 ns/op [Average]
  (min, avg, max) = (1068.607, 1073.370, 1079.534), stdev = 4.357
  CI (99.9%): [1056.593, 1090.148] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 1000)

# Run progress: 63.27% complete, ETA 00:12:36
# Fork: 1 of 1
# Warmup Iteration   1: 1991.111 ns/op
# Warmup Iteration   2: 2016.749 ns/op
# Warmup Iteration   3: 1896.073 ns/op
# Warmup Iteration   4: 1782.572 ns/op
# Warmup Iteration   5: 1773.631 ns/op
Iteration   1: 1776.560 ns/op
Iteration   2: 1777.171 ns/op
Iteration   3: 1772.548 ns/op
Iteration   4: 1790.514 ns/op
Iteration   5: 1791.767 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1781.712 ±(99.9%) 33.885 ns/op [Average]
  (min, avg, max) = (1772.548, 1781.712, 1791.767), stdev = 8.800
  CI (99.9%): [1747.828, 1815.597] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 10000)

# Run progress: 63.78% complete, ETA 00:12:26
# Fork: 1 of 1
# Warmup Iteration   1: 15219.223 ns/op
# Warmup Iteration   2: 13517.263 ns/op
# Warmup Iteration   3: 12322.236 ns/op
# Warmup Iteration   4: 12342.064 ns/op
# Warmup Iteration   5: 12419.252 ns/op
Iteration   1: 12918.992 ns/op
Iteration   2: 12603.262 ns/op
Iteration   3: 12515.704 ns/op
Iteration   4: 12601.279 ns/op
Iteration   5: 12589.352 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  12645.718 ±(99.9%) 604.370 ns/op [Average]
  (min, avg, max) = (12515.704, 12645.718, 12918.992), stdev = 156.953
  CI (99.9%): [12041.348, 13250.088] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 1)

# Run progress: 64.29% complete, ETA 00:12:15
# Fork: 1 of 1
# Warmup Iteration   1: 92.254 ns/op
# Warmup Iteration   2: 89.980 ns/op
# Warmup Iteration   3: 82.756 ns/op
# Warmup Iteration   4: 82.608 ns/op
# Warmup Iteration   5: 82.573 ns/op
Iteration   1: 82.584 ns/op
Iteration   2: 82.747 ns/op
Iteration   3: 82.687 ns/op
Iteration   4: 90.604 ns/op
Iteration   5: 82.846 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  84.294 ±(99.9%) 13.588 ns/op [Average]
  (min, avg, max) = (82.584, 84.294, 90.604), stdev = 3.529
  CI (99.9%): [70.706, 97.882] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 10)

# Run progress: 64.80% complete, ETA 00:12:05
# Fork: 1 of 1
# Warmup Iteration   1: 117.800 ns/op
# Warmup Iteration   2: 113.428 ns/op
# Warmup Iteration   3: 105.793 ns/op
# Warmup Iteration   4: 105.558 ns/op
# Warmup Iteration   5: 105.555 ns/op
Iteration   1: 109.793 ns/op
Iteration   2: 105.456 ns/op
Iteration   3: 105.879 ns/op
Iteration   4: 106.028 ns/op
Iteration   5: 106.428 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  106.717 ±(99.9%) 6.756 ns/op [Average]
  (min, avg, max) = (105.456, 106.717, 109.793), stdev = 1.754
  CI (99.9%): [99.961, 113.473] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 50)

# Run progress: 65.31% complete, ETA 00:11:54
# Fork: 1 of 1
# Warmup Iteration   1: 172.580 ns/op
# Warmup Iteration   2: 172.705 ns/op
# Warmup Iteration   3: 149.948 ns/op
# Warmup Iteration   4: 149.890 ns/op
# Warmup Iteration   5: 150.324 ns/op
Iteration   1: 150.159 ns/op
Iteration   2: 149.962 ns/op
Iteration   3: 163.481 ns/op
Iteration   4: 164.584 ns/op
Iteration   5: 155.371 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  156.711 ±(99.9%) 27.098 ns/op [Average]
  (min, avg, max) = (149.962, 156.711, 164.584), stdev = 7.037
  CI (99.9%): [129.614, 183.809] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 100)

# Run progress: 65.82% complete, ETA 00:11:44
# Fork: 1 of 1
# Warmup Iteration   1: 230.262 ns/op
# Warmup Iteration   2: 222.439 ns/op
# Warmup Iteration   3: 216.219 ns/op
# Warmup Iteration   4: 213.241 ns/op
# Warmup Iteration   5: 200.791 ns/op
Iteration   1: 200.916 ns/op
Iteration   2: 201.041 ns/op
Iteration   3: 201.087 ns/op
Iteration   4: 202.158 ns/op
Iteration   5: 201.595 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  201.359 ±(99.9%) 1.987 ns/op [Average]
  (min, avg, max) = (200.916, 201.359, 202.158), stdev = 0.516
  CI (99.9%): [199.372, 203.347] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 500)

# Run progress: 66.33% complete, ETA 00:11:33
# Fork: 1 of 1
# Warmup Iteration   1: 763.858 ns/op
# Warmup Iteration   2: 725.392 ns/op
# Warmup Iteration   3: 639.502 ns/op
# Warmup Iteration   4: 639.381 ns/op
# Warmup Iteration   5: 640.248 ns/op
Iteration   1: 638.345 ns/op
Iteration   2: 655.483 ns/op
Iteration   3: 642.463 ns/op
Iteration   4: 670.845 ns/op
Iteration   5: 646.988 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  650.825 ±(99.9%) 49.571 ns/op [Average]
  (min, avg, max) = (638.345, 650.825, 670.845), stdev = 12.873
  CI (99.9%): [601.254, 700.396] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 66.84% complete, ETA 00:11:23
# Fork: 1 of 1
# Warmup Iteration   1: 1434.543 ns/op
# Warmup Iteration   2: 1346.410 ns/op
# Warmup Iteration   3: 1228.037 ns/op
# Warmup Iteration   4: 1206.186 ns/op
# Warmup Iteration   5: 1206.879 ns/op
Iteration   1: 1211.578 ns/op
Iteration   2: 1211.209 ns/op
Iteration   3: 1208.540 ns/op
Iteration   4: 1215.179 ns/op
Iteration   5: 1218.299 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  1212.961 ±(99.9%) 14.655 ns/op [Average]
  (min, avg, max) = (1208.540, 1212.961, 1218.299), stdev = 3.806
  CI (99.9%): [1198.306, 1227.616] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 67.35% complete, ETA 00:11:12
# Fork: 1 of 1
# Warmup Iteration   1: 14133.930 ns/op
# Warmup Iteration   2: 13207.588 ns/op
# Warmup Iteration   3: 12405.859 ns/op
# Warmup Iteration   4: 11900.854 ns/op
# Warmup Iteration   5: 11944.928 ns/op
Iteration   1: 12385.755 ns/op
Iteration   2: 11901.005 ns/op
Iteration   3: 11942.516 ns/op
Iteration   4: 11968.883 ns/op
Iteration   5: 12244.480 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  12088.528 ±(99.9%) 824.668 ns/op [Average]
  (min, avg, max) = (11901.005, 12088.528, 12385.755), stdev = 214.164
  CI (99.9%): [11263.860, 12913.196] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 1)

# Run progress: 67.86% complete, ETA 00:11:02
# Fork: 1 of 1
# Warmup Iteration   1: 93.730 ns/op
# Warmup Iteration   2: 90.732 ns/op
# Warmup Iteration   3: 82.128 ns/op
# Warmup Iteration   4: 84.609 ns/op
# Warmup Iteration   5: 82.567 ns/op
Iteration   1: 82.539 ns/op
Iteration   2: 83.659 ns/op
Iteration   3: 82.708 ns/op
Iteration   4: 82.671 ns/op
Iteration   5: 88.350 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  83.985 ±(99.9%) 9.551 ns/op [Average]
  (min, avg, max) = (82.539, 83.985, 88.350), stdev = 2.480
  CI (99.9%): [74.434, 93.537] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 10)

# Run progress: 68.37% complete, ETA 00:10:51
# Fork: 1 of 1
# Warmup Iteration   1: 116.870 ns/op
# Warmup Iteration   2: 116.758 ns/op
# Warmup Iteration   3: 105.162 ns/op
# Warmup Iteration   4: 105.385 ns/op
# Warmup Iteration   5: 105.480 ns/op
Iteration   1: 105.698 ns/op
Iteration   2: 105.623 ns/op
Iteration   3: 105.899 ns/op
Iteration   4: 109.720 ns/op
Iteration   5: 105.910 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  106.570 ±(99.9%) 6.798 ns/op [Average]
  (min, avg, max) = (105.623, 106.570, 109.720), stdev = 1.766
  CI (99.9%): [99.772, 113.368] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 50)

# Run progress: 68.88% complete, ETA 00:10:41
# Fork: 1 of 1
# Warmup Iteration   1: 171.498 ns/op
# Warmup Iteration   2: 166.864 ns/op
# Warmup Iteration   3: 150.189 ns/op
# Warmup Iteration   4: 150.075 ns/op
# Warmup Iteration   5: 149.968 ns/op
Iteration   1: 150.459 ns/op
Iteration   2: 150.627 ns/op
Iteration   3: 150.296 ns/op
Iteration   4: 153.276 ns/op
Iteration   5: 152.042 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  151.340 ±(99.9%) 4.953 ns/op [Average]
  (min, avg, max) = (150.296, 151.340, 153.276), stdev = 1.286
  CI (99.9%): [146.387, 156.293] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 100)

# Run progress: 69.39% complete, ETA 00:10:30
# Fork: 1 of 1
# Warmup Iteration   1: 232.307 ns/op
# Warmup Iteration   2: 220.642 ns/op
# Warmup Iteration   3: 213.708 ns/op
# Warmup Iteration   4: 201.148 ns/op
# Warmup Iteration   5: 200.763 ns/op
Iteration   1: 201.070 ns/op
Iteration   2: 202.549 ns/op
Iteration   3: 201.247 ns/op
Iteration   4: 200.884 ns/op
Iteration   5: 201.135 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  201.377 ±(99.9%) 2.573 ns/op [Average]
  (min, avg, max) = (200.884, 201.377, 202.549), stdev = 0.668
  CI (99.9%): [198.803, 203.950] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 500)

# Run progress: 69.90% complete, ETA 00:10:20
# Fork: 1 of 1
# Warmup Iteration   1: 754.624 ns/op
# Warmup Iteration   2: 725.155 ns/op
# Warmup Iteration   3: 648.397 ns/op
# Warmup Iteration   4: 691.750 ns/op
# Warmup Iteration   5: 646.373 ns/op
Iteration   1: 662.332 ns/op
Iteration   2: 678.862 ns/op
Iteration   3: 648.334 ns/op
Iteration   4: 670.342 ns/op
Iteration   5: 642.010 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  660.376 ±(99.9%) 58.626 ns/op [Average]
  (min, avg, max) = (642.010, 660.376, 678.862), stdev = 15.225
  CI (99.9%): [601.750, 719.002] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 1000)

# Run progress: 70.41% complete, ETA 00:10:09
# Fork: 1 of 1
# Warmup Iteration   1: 1439.494 ns/op
# Warmup Iteration   2: 1361.132 ns/op
# Warmup Iteration   3: 1230.416 ns/op
# Warmup Iteration   4: 1225.352 ns/op
# Warmup Iteration   5: 1226.848 ns/op
Iteration   1: 1269.121 ns/op
Iteration   2: 1230.164 ns/op
Iteration   3: 1238.392 ns/op
Iteration   4: 1227.317 ns/op
Iteration   5: 1241.136 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  1241.226 ±(99.9%) 63.913 ns/op [Average]
  (min, avg, max) = (1227.317, 1241.226, 1269.121), stdev = 16.598
  CI (99.9%): [1177.313, 1305.139] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 10000)

# Run progress: 70.92% complete, ETA 00:09:59
# Fork: 1 of 1
# Warmup Iteration   1: 14636.629 ns/op
# Warmup Iteration   2: 12908.087 ns/op
# Warmup Iteration   3: 11871.167 ns/op
# Warmup Iteration   4: 11899.032 ns/op
# Warmup Iteration   5: 11914.291 ns/op
Iteration   1: 11867.959 ns/op
Iteration   2: 11877.896 ns/op
Iteration   3: 11886.924 ns/op
Iteration   4: 11942.797 ns/op
Iteration   5: 11966.952 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  11908.505 ±(99.9%) 168.271 ns/op [Average]
  (min, avg, max) = (11867.959, 11908.505, 11966.952), stdev = 43.699
  CI (99.9%): [11740.235, 12076.776] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 1)

# Run progress: 71.43% complete, ETA 00:09:48
# Fork: 1 of 1
# Warmup Iteration   1: 1515.828 ns/op
# Warmup Iteration   2: 1395.189 ns/op
# Warmup Iteration   3: 1320.957 ns/op
# Warmup Iteration   4: 1329.758 ns/op
# Warmup Iteration   5: 1326.284 ns/op
Iteration   1: 1324.505 ns/op
Iteration   2: 1332.318 ns/op
Iteration   3: 1320.658 ns/op
Iteration   4: 1328.054 ns/op
Iteration   5: 1322.940 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1325.695 ±(99.9%) 17.626 ns/op [Average]
  (min, avg, max) = (1320.658, 1325.695, 1332.318), stdev = 4.577
  CI (99.9%): [1308.069, 1343.320] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 10)

# Run progress: 71.94% complete, ETA 00:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 1431.782 ns/op
# Warmup Iteration   2: 1368.834 ns/op
# Warmup Iteration   3: 1344.692 ns/op
# Warmup Iteration   4: 1346.402 ns/op
# Warmup Iteration   5: 1346.804 ns/op
Iteration   1: 1349.232 ns/op
Iteration   2: 1345.545 ns/op
Iteration   3: 1344.142 ns/op
Iteration   4: 1350.257 ns/op
Iteration   5: 1341.436 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1346.123 ±(99.9%) 14.014 ns/op [Average]
  (min, avg, max) = (1341.436, 1346.123, 1350.257), stdev = 3.639
  CI (99.9%): [1332.108, 1360.137] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 50)

# Run progress: 72.45% complete, ETA 00:09:27
# Fork: 1 of 1
# Warmup Iteration   1: 1635.694 ns/op
# Warmup Iteration   2: 1422.483 ns/op
# Warmup Iteration   3: 1386.431 ns/op
# Warmup Iteration   4: 1389.758 ns/op
# Warmup Iteration   5: 1381.538 ns/op
Iteration   1: 1386.376 ns/op
Iteration   2: 1382.828 ns/op
Iteration   3: 1387.777 ns/op
Iteration   4: 1395.454 ns/op
Iteration   5: 1402.893 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1391.065 ±(99.9%) 31.033 ns/op [Average]
  (min, avg, max) = (1382.828, 1391.065, 1402.893), stdev = 8.059
  CI (99.9%): [1360.033, 1422.098] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 100)

# Run progress: 72.96% complete, ETA 00:09:17
# Fork: 1 of 1
# Warmup Iteration   1: 1651.319 ns/op
# Warmup Iteration   2: 1554.316 ns/op
# Warmup Iteration   3: 1579.541 ns/op
# Warmup Iteration   4: 1534.193 ns/op
# Warmup Iteration   5: 1531.882 ns/op
Iteration   1: 1532.313 ns/op
Iteration   2: 1535.808 ns/op
Iteration   3: 1535.126 ns/op
Iteration   4: 1624.984 ns/op
Iteration   5: 1640.445 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1573.735 ±(99.9%) 208.447 ns/op [Average]
  (min, avg, max) = (1532.313, 1573.735, 1640.445), stdev = 54.133
  CI (99.9%): [1365.289, 1782.182] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 500)

# Run progress: 73.47% complete, ETA 00:09:06
# Fork: 1 of 1
# Warmup Iteration   1: 2191.334 ns/op
# Warmup Iteration   2: 2150.004 ns/op
# Warmup Iteration   3: 2231.007 ns/op
# Warmup Iteration   4: 2041.568 ns/op
# Warmup Iteration   5: 2028.018 ns/op
Iteration   1: 2031.880 ns/op
Iteration   2: 2032.402 ns/op
Iteration   3: 2027.715 ns/op
Iteration   4: 2139.065 ns/op
Iteration   5: 2079.105 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2062.033 ±(99.9%) 184.573 ns/op [Average]
  (min, avg, max) = (2027.715, 2062.033, 2139.065), stdev = 47.933
  CI (99.9%): [1877.461, 2246.606] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 73.98% complete, ETA 00:08:56
# Fork: 1 of 1
# Warmup Iteration   1: 2878.191 ns/op
# Warmup Iteration   2: 2811.544 ns/op
# Warmup Iteration   3: 2586.795 ns/op
# Warmup Iteration   4: 2583.600 ns/op
# Warmup Iteration   5: 2581.814 ns/op
Iteration   1: 2584.428 ns/op
Iteration   2: 2581.099 ns/op
Iteration   3: 2593.248 ns/op
Iteration   4: 2601.020 ns/op
Iteration   5: 2594.624 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2590.884 ±(99.9%) 31.030 ns/op [Average]
  (min, avg, max) = (2581.099, 2590.884, 2601.020), stdev = 8.058
  CI (99.9%): [2559.854, 2621.914] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 74.49% complete, ETA 00:08:45
# Fork: 1 of 1
# Warmup Iteration   1: 15922.136 ns/op
# Warmup Iteration   2: 13972.314 ns/op
# Warmup Iteration   3: 13213.449 ns/op
# Warmup Iteration   4: 13161.788 ns/op
# Warmup Iteration   5: 13178.824 ns/op
Iteration   1: 13934.210 ns/op
Iteration   2: 13183.810 ns/op
Iteration   3: 13285.419 ns/op
Iteration   4: 13448.646 ns/op
Iteration   5: 13706.320 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  13511.681 ±(99.9%) 1185.414 ns/op [Average]
  (min, avg, max) = (13183.810, 13511.681, 13934.210), stdev = 307.848
  CI (99.9%): [12326.266, 14697.095] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 1)

# Run progress: 75.00% complete, ETA 00:08:35
# Fork: 1 of 1
# Warmup Iteration   1: 1382.125 ns/op
# Warmup Iteration   2: 1351.963 ns/op
# Warmup Iteration   3: 1341.473 ns/op
# Warmup Iteration   4: 1315.687 ns/op
# Warmup Iteration   5: 1317.353 ns/op
Iteration   1: 1308.422 ns/op
Iteration   2: 1312.484 ns/op
Iteration   3: 1313.221 ns/op
Iteration   4: 1315.111 ns/op
Iteration   5: 1320.523 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1313.952 ±(99.9%) 16.982 ns/op [Average]
  (min, avg, max) = (1308.422, 1313.952, 1320.523), stdev = 4.410
  CI (99.9%): [1296.970, 1330.934] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 10)

# Run progress: 75.51% complete, ETA 00:08:24
# Fork: 1 of 1
# Warmup Iteration   1: 1452.534 ns/op
# Warmup Iteration   2: 1364.370 ns/op
# Warmup Iteration   3: 1334.157 ns/op
# Warmup Iteration   4: 1335.408 ns/op
# Warmup Iteration   5: 1337.653 ns/op
Iteration   1: 1339.217 ns/op
Iteration   2: 1338.929 ns/op
Iteration   3: 1337.352 ns/op
Iteration   4: 1334.269 ns/op
Iteration   5: 1331.048 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1336.163 ±(99.9%) 13.359 ns/op [Average]
  (min, avg, max) = (1331.048, 1336.163, 1339.217), stdev = 3.469
  CI (99.9%): [1322.804, 1349.522] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 50)

# Run progress: 76.02% complete, ETA 00:08:14
# Fork: 1 of 1
# Warmup Iteration   1: 1466.470 ns/op
# Warmup Iteration   2: 1420.342 ns/op
# Warmup Iteration   3: 1395.756 ns/op
# Warmup Iteration   4: 1397.235 ns/op
# Warmup Iteration   5: 1394.920 ns/op
Iteration   1: 1395.303 ns/op
Iteration   2: 1397.771 ns/op
Iteration   3: 1402.124 ns/op
Iteration   4: 1391.798 ns/op
Iteration   5: 1395.778 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1396.555 ±(99.9%) 14.572 ns/op [Average]
  (min, avg, max) = (1391.798, 1396.555, 1402.124), stdev = 3.784
  CI (99.9%): [1381.982, 1411.127] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 100)

# Run progress: 76.53% complete, ETA 00:08:03
# Fork: 1 of 1
# Warmup Iteration   1: 1674.122 ns/op
# Warmup Iteration   2: 1571.658 ns/op
# Warmup Iteration   3: 1626.308 ns/op
# Warmup Iteration   4: 1541.286 ns/op
# Warmup Iteration   5: 1553.266 ns/op
Iteration   1: 1546.622 ns/op
Iteration   2: 1547.285 ns/op
Iteration   3: 1554.862 ns/op
Iteration   4: 1544.982 ns/op
Iteration   5: 1563.853 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1551.521 ±(99.9%) 30.316 ns/op [Average]
  (min, avg, max) = (1544.982, 1551.521, 1563.853), stdev = 7.873
  CI (99.9%): [1521.205, 1581.837] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 500)

# Run progress: 77.04% complete, ETA 00:07:53
# Fork: 1 of 1
# Warmup Iteration   1: 2180.089 ns/op
# Warmup Iteration   2: 2154.759 ns/op
# Warmup Iteration   3: 2233.568 ns/op
# Warmup Iteration   4: 2035.664 ns/op
# Warmup Iteration   5: 2038.262 ns/op
Iteration   1: 2264.025 ns/op
Iteration   2: 2042.564 ns/op
Iteration   3: 2045.118 ns/op
Iteration   4: 2092.449 ns/op
Iteration   5: 2216.942 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2132.220 ±(99.9%) 393.431 ns/op [Average]
  (min, avg, max) = (2042.564, 2132.220, 2264.025), stdev = 102.173
  CI (99.9%): [1738.789, 2525.650] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 1000)

# Run progress: 77.55% complete, ETA 00:07:42
# Fork: 1 of 1
# Warmup Iteration   1: 2861.282 ns/op
# Warmup Iteration   2: 2826.682 ns/op
# Warmup Iteration   3: 2685.710 ns/op
# Warmup Iteration   4: 2629.990 ns/op
# Warmup Iteration   5: 2832.994 ns/op
Iteration   1: 2681.309 ns/op
Iteration   2: 2589.874 ns/op
Iteration   3: 2595.909 ns/op
Iteration   4: 2689.281 ns/op
Iteration   5: 2599.261 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2631.127 ±(99.9%) 191.157 ns/op [Average]
  (min, avg, max) = (2589.874, 2631.127, 2689.281), stdev = 49.643
  CI (99.9%): [2439.970, 2822.284] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 10000)

# Run progress: 78.06% complete, ETA 00:07:31
# Fork: 1 of 1
# Warmup Iteration   1: 16211.960 ns/op
# Warmup Iteration   2: 13918.897 ns/op
# Warmup Iteration   3: 14305.407 ns/op
# Warmup Iteration   4: 13089.877 ns/op
# Warmup Iteration   5: 13155.925 ns/op
Iteration   1: 13225.664 ns/op
Iteration   2: 13549.500 ns/op
Iteration   3: 13201.773 ns/op
Iteration   4: 13197.406 ns/op
Iteration   5: 13295.483 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  13293.965 ±(99.9%) 570.455 ns/op [Average]
  (min, avg, max) = (13197.406, 13293.965, 13549.500), stdev = 148.145
  CI (99.9%): [12723.510, 13864.420] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 78.57% complete, ETA 00:07:21
# Fork: 1 of 1
# Warmup Iteration   1: 447.547 ns/op
# Warmup Iteration   2: 445.486 ns/op
# Warmup Iteration   3: 418.112 ns/op
# Warmup Iteration   4: 419.799 ns/op
# Warmup Iteration   5: 420.899 ns/op
Iteration   1: 424.382 ns/op
Iteration   2: 416.730 ns/op
Iteration   3: 417.718 ns/op
Iteration   4: 432.851 ns/op
Iteration   5: 426.922 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  423.721 ±(99.9%) 25.756 ns/op [Average]
  (min, avg, max) = (416.730, 423.721, 432.851), stdev = 6.689
  CI (99.9%): [397.965, 449.476] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 79.08% complete, ETA 00:07:10
# Fork: 1 of 1
# Warmup Iteration   1: 464.593 ns/op
# Warmup Iteration   2: 443.455 ns/op
# Warmup Iteration   3: 446.325 ns/op
# Warmup Iteration   4: 459.875 ns/op
# Warmup Iteration   5: 436.042 ns/op
Iteration   1: 437.007 ns/op
Iteration   2: 449.692 ns/op
Iteration   3: 438.912 ns/op
Iteration   4: 440.964 ns/op
Iteration   5: 448.662 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  443.047 ±(99.9%) 22.254 ns/op [Average]
  (min, avg, max) = (437.007, 443.047, 449.692), stdev = 5.779
  CI (99.9%): [420.794, 465.301] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 79.59% complete, ETA 00:07:00
# Fork: 1 of 1
# Warmup Iteration   1: 510.217 ns/op
# Warmup Iteration   2: 485.278 ns/op
# Warmup Iteration   3: 475.505 ns/op
# Warmup Iteration   4: 473.446 ns/op
# Warmup Iteration   5: 474.270 ns/op
Iteration   1: 493.795 ns/op
Iteration   2: 475.265 ns/op
Iteration   3: 476.659 ns/op
Iteration   4: 476.570 ns/op
Iteration   5: 504.921 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  485.442 ±(99.9%) 51.251 ns/op [Average]
  (min, avg, max) = (475.265, 485.442, 504.921), stdev = 13.310
  CI (99.9%): [434.191, 536.693] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 80.10% complete, ETA 00:06:49
# Fork: 1 of 1
# Warmup Iteration   1: 642.524 ns/op
# Warmup Iteration   2: 608.772 ns/op
# Warmup Iteration   3: 578.822 ns/op
# Warmup Iteration   4: 575.774 ns/op
# Warmup Iteration   5: 576.598 ns/op
Iteration   1: 575.683 ns/op
Iteration   2: 577.689 ns/op
Iteration   3: 578.452 ns/op
Iteration   4: 576.783 ns/op
Iteration   5: 565.802 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  574.882 ±(99.9%) 19.946 ns/op [Average]
  (min, avg, max) = (565.802, 574.882, 578.452), stdev = 5.180
  CI (99.9%): [554.936, 594.828] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 80.61% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: 1080.458 ns/op
# Warmup Iteration   2: 1070.090 ns/op
# Warmup Iteration   3: 1000.444 ns/op
# Warmup Iteration   4: 956.237 ns/op
# Warmup Iteration   5: 948.493 ns/op
Iteration   1: 950.348 ns/op
Iteration   2: 950.228 ns/op
Iteration   3: 951.715 ns/op
Iteration   4: 1090.206 ns/op
Iteration   5: 1267.451 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  1041.989 ±(99.9%) 538.146 ns/op [Average]
  (min, avg, max) = (950.228, 1041.989, 1267.451), stdev = 139.755
  CI (99.9%): [503.843, 1580.136] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 81.12% complete, ETA 00:06:28
# Fork: 1 of 1
# Warmup Iteration   1: 1823.926 ns/op
# Warmup Iteration   2: 1619.830 ns/op
# Warmup Iteration   3: 1493.705 ns/op
# Warmup Iteration   4: 1499.243 ns/op
# Warmup Iteration   5: 1500.710 ns/op
Iteration   1: 1498.504 ns/op
Iteration   2: 1501.603 ns/op
Iteration   3: 1648.341 ns/op
Iteration   4: 1725.142 ns/op
Iteration   5: 1507.173 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  1576.153 ±(99.9%) 402.730 ns/op [Average]
  (min, avg, max) = (1498.504, 1576.153, 1725.142), stdev = 104.588
  CI (99.9%): [1173.422, 1978.883] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 81.63% complete, ETA 00:06:18
# Fork: 1 of 1
# Warmup Iteration   1: 13506.536 ns/op
# Warmup Iteration   2: 11775.493 ns/op
# Warmup Iteration   3: 11029.684 ns/op
# Warmup Iteration   4: 11094.599 ns/op
# Warmup Iteration   5: 11073.524 ns/op
Iteration   1: 11144.275 ns/op
Iteration   2: 12591.268 ns/op
Iteration   3: 11132.967 ns/op
Iteration   4: 11133.421 ns/op
Iteration   5: 11162.946 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  11432.976 ±(99.9%) 2493.752 ns/op [Average]
  (min, avg, max) = (11132.967, 11432.976, 12591.268), stdev = 647.619
  CI (99.9%): [8939.224, 13926.727] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 1)

# Run progress: 82.14% complete, ETA 00:06:07
# Fork: 1 of 1
# Warmup Iteration   1: 446.566 ns/op
# Warmup Iteration   2: 425.054 ns/op
# Warmup Iteration   3: 416.187 ns/op
# Warmup Iteration   4: 416.887 ns/op
# Warmup Iteration   5: 421.722 ns/op
Iteration   1: 426.789 ns/op
Iteration   2: 423.068 ns/op
Iteration   3: 422.137 ns/op
Iteration   4: 421.747 ns/op
Iteration   5: 430.617 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  424.872 ±(99.9%) 14.559 ns/op [Average]
  (min, avg, max) = (421.747, 424.872, 430.617), stdev = 3.781
  CI (99.9%): [410.313, 439.430] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 10)

# Run progress: 82.65% complete, ETA 00:05:57
# Fork: 1 of 1
# Warmup Iteration   1: 467.304 ns/op
# Warmup Iteration   2: 450.470 ns/op
# Warmup Iteration   3: 432.003 ns/op
# Warmup Iteration   4: 444.148 ns/op
# Warmup Iteration   5: 430.950 ns/op
Iteration   1: 432.102 ns/op
Iteration   2: 432.030 ns/op
Iteration   3: 432.643 ns/op
Iteration   4: 432.917 ns/op
Iteration   5: 443.823 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  434.703 ±(99.9%) 19.684 ns/op [Average]
  (min, avg, max) = (432.030, 434.703, 443.823), stdev = 5.112
  CI (99.9%): [415.019, 454.387] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 50)

# Run progress: 83.16% complete, ETA 00:05:46
# Fork: 1 of 1
# Warmup Iteration   1: 512.957 ns/op
# Warmup Iteration   2: 501.602 ns/op
# Warmup Iteration   3: 476.344 ns/op
# Warmup Iteration   4: 477.188 ns/op
# Warmup Iteration   5: 475.560 ns/op
Iteration   1: 503.977 ns/op
Iteration   2: 476.513 ns/op
Iteration   3: 499.077 ns/op
Iteration   4: 498.607 ns/op
Iteration   5: 508.372 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  497.309 ±(99.9%) 47.323 ns/op [Average]
  (min, avg, max) = (476.513, 497.309, 508.372), stdev = 12.290
  CI (99.9%): [449.987, 544.632] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 100)

# Run progress: 83.67% complete, ETA 00:05:36
# Fork: 1 of 1
# Warmup Iteration   1: 629.150 ns/op
# Warmup Iteration   2: 611.418 ns/op
# Warmup Iteration   3: 577.654 ns/op
# Warmup Iteration   4: 589.416 ns/op
# Warmup Iteration   5: 576.954 ns/op
Iteration   1: 578.857 ns/op
Iteration   2: 578.429 ns/op
Iteration   3: 577.583 ns/op
Iteration   4: 579.177 ns/op
Iteration   5: 556.919 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  574.193 ±(99.9%) 37.255 ns/op [Average]
  (min, avg, max) = (556.919, 574.193, 579.177), stdev = 9.675
  CI (99.9%): [536.938, 611.448] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 500)

# Run progress: 84.18% complete, ETA 00:05:25
# Fork: 1 of 1
# Warmup Iteration   1: 1100.539 ns/op
# Warmup Iteration   2: 1068.442 ns/op
# Warmup Iteration   3: 1027.092 ns/op
# Warmup Iteration   4: 973.472 ns/op
# Warmup Iteration   5: 971.909 ns/op
Iteration   1: 998.922 ns/op
Iteration   2: 970.740 ns/op
Iteration   3: 972.577 ns/op
Iteration   4: 976.945 ns/op
Iteration   5: 987.863 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  981.409 ±(99.9%) 45.565 ns/op [Average]
  (min, avg, max) = (970.740, 981.409, 998.922), stdev = 11.833
  CI (99.9%): [935.844, 1026.975] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 1000)

# Run progress: 84.69% complete, ETA 00:05:15
# Fork: 1 of 1
# Warmup Iteration   1: 1791.704 ns/op
# Warmup Iteration   2: 1593.929 ns/op
# Warmup Iteration   3: 1495.739 ns/op
# Warmup Iteration   4: 1503.993 ns/op
# Warmup Iteration   5: 1493.282 ns/op
Iteration   1: 1498.446 ns/op
Iteration   2: 1502.048 ns/op
Iteration   3: 1560.116 ns/op
Iteration   4: 1511.188 ns/op
Iteration   5: 1509.532 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  1516.266 ±(99.9%) 96.529 ns/op [Average]
  (min, avg, max) = (1498.446, 1516.266, 1560.116), stdev = 25.068
  CI (99.9%): [1419.737, 1612.795] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 10000)

# Run progress: 85.20% complete, ETA 00:05:04
# Fork: 1 of 1
# Warmup Iteration   1: 13757.246 ns/op
# Warmup Iteration   2: 11765.822 ns/op
# Warmup Iteration   3: 11107.776 ns/op
# Warmup Iteration   4: 11070.235 ns/op
# Warmup Iteration   5: 11109.097 ns/op
Iteration   1: 11142.292 ns/op
Iteration   2: 11321.858 ns/op
Iteration   3: 11473.404 ns/op
Iteration   4: 11134.105 ns/op
Iteration   5: 11103.080 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  11234.948 ±(99.9%) 610.537 ns/op [Average]
  (min, avg, max) = (11103.080, 11234.948, 11473.404), stdev = 158.555
  CI (99.9%): [10624.410, 11845.485] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 85.71% complete, ETA 00:04:54
# Fork: 1 of 1
# Warmup Iteration   1: 543.838 ns/op
# Warmup Iteration   2: 517.538 ns/op
# Warmup Iteration   3: 502.476 ns/op
# Warmup Iteration   4: 503.221 ns/op
# Warmup Iteration   5: 501.674 ns/op
Iteration   1: 502.398 ns/op
Iteration   2: 502.598 ns/op
Iteration   3: 554.948 ns/op
Iteration   4: 518.926 ns/op
Iteration   5: 506.050 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  516.984 ±(99.9%) 85.764 ns/op [Average]
  (min, avg, max) = (502.398, 516.984, 554.948), stdev = 22.273
  CI (99.9%): [431.220, 602.748] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 86.22% complete, ETA 00:04:43
# Fork: 1 of 1
# Warmup Iteration   1: 569.929 ns/op
# Warmup Iteration   2: 543.783 ns/op
# Warmup Iteration   3: 527.403 ns/op
# Warmup Iteration   4: 524.580 ns/op
# Warmup Iteration   5: 526.027 ns/op
Iteration   1: 524.010 ns/op
Iteration   2: 526.680 ns/op
Iteration   3: 531.326 ns/op
Iteration   4: 535.728 ns/op
Iteration   5: 527.504 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  529.049 ±(99.9%) 17.559 ns/op [Average]
  (min, avg, max) = (524.010, 529.049, 535.728), stdev = 4.560
  CI (99.9%): [511.490, 546.609] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 86.73% complete, ETA 00:04:33
# Fork: 1 of 1
# Warmup Iteration   1: 629.012 ns/op
# Warmup Iteration   2: 588.472 ns/op
# Warmup Iteration   3: 564.227 ns/op
# Warmup Iteration   4: 609.060 ns/op
# Warmup Iteration   5: 636.953 ns/op
Iteration   1: 566.978 ns/op
Iteration   2: 570.052 ns/op
Iteration   3: 566.345 ns/op
Iteration   4: 565.044 ns/op
Iteration   5: 568.228 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  567.329 ±(99.9%) 7.340 ns/op [Average]
  (min, avg, max) = (565.044, 567.329, 570.052), stdev = 1.906
  CI (99.9%): [559.989, 574.670] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 87.24% complete, ETA 00:04:22
# Fork: 1 of 1
# Warmup Iteration   1: 679.663 ns/op
# Warmup Iteration   2: 663.074 ns/op
# Warmup Iteration   3: 617.528 ns/op
# Warmup Iteration   4: 617.187 ns/op
# Warmup Iteration   5: 619.509 ns/op
Iteration   1: 632.706 ns/op
Iteration   2: 635.776 ns/op
Iteration   3: 620.205 ns/op
Iteration   4: 618.055 ns/op
Iteration   5: 652.678 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  631.884 ±(99.9%) 53.628 ns/op [Average]
  (min, avg, max) = (618.055, 631.884, 652.678), stdev = 13.927
  CI (99.9%): [578.256, 685.511] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 87.76% complete, ETA 00:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 1196.934 ns/op
# Warmup Iteration   2: 1157.045 ns/op
# Warmup Iteration   3: 1151.168 ns/op
# Warmup Iteration   4: 1048.597 ns/op
# Warmup Iteration   5: 1053.428 ns/op
Iteration   1: 1054.705 ns/op
Iteration   2: 1056.297 ns/op
Iteration   3: 1103.577 ns/op
Iteration   4: 1050.750 ns/op
Iteration   5: 1040.636 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1061.193 ±(99.9%) 94.205 ns/op [Average]
  (min, avg, max) = (1040.636, 1061.193, 1103.577), stdev = 24.465
  CI (99.9%): [966.988, 1155.398] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 88.27% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 1929.157 ns/op
# Warmup Iteration   2: 1870.637 ns/op
# Warmup Iteration   3: 1684.436 ns/op
# Warmup Iteration   4: 1693.861 ns/op
# Warmup Iteration   5: 1689.064 ns/op
Iteration   1: 1683.213 ns/op
Iteration   2: 1681.943 ns/op
Iteration   3: 1689.948 ns/op
Iteration   4: 1705.246 ns/op
Iteration   5: 1777.157 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1707.501 ±(99.9%) 154.125 ns/op [Average]
  (min, avg, max) = (1681.943, 1707.501, 1777.157), stdev = 40.026
  CI (99.9%): [1553.376, 1861.626] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 88.78% complete, ETA 00:03:51
# Fork: 1 of 1
# Warmup Iteration   1: 13709.366 ns/op
# Warmup Iteration   2: 11988.843 ns/op
# Warmup Iteration   3: 11200.712 ns/op
# Warmup Iteration   4: 11737.007 ns/op
# Warmup Iteration   5: 11307.790 ns/op
Iteration   1: 11278.893 ns/op
Iteration   2: 11680.315 ns/op
Iteration   3: 11303.127 ns/op
Iteration   4: 11300.090 ns/op
Iteration   5: 11255.389 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  11363.563 ±(99.9%) 685.815 ns/op [Average]
  (min, avg, max) = (11255.389, 11363.563, 11680.315), stdev = 178.104
  CI (99.9%): [10677.748, 12049.378] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1)

# Run progress: 89.29% complete, ETA 00:03:40
# Fork: 1 of 1
# Warmup Iteration   1: 541.452 ns/op
# Warmup Iteration   2: 514.384 ns/op
# Warmup Iteration   3: 499.985 ns/op
# Warmup Iteration   4: 500.863 ns/op
# Warmup Iteration   5: 501.523 ns/op
Iteration   1: 501.219 ns/op
Iteration   2: 500.271 ns/op
Iteration   3: 499.542 ns/op
Iteration   4: 504.801 ns/op
Iteration   5: 502.021 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  501.571 ±(99.9%) 7.836 ns/op [Average]
  (min, avg, max) = (499.542, 501.571, 504.801), stdev = 2.035
  CI (99.9%): [493.735, 509.407] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10)

# Run progress: 89.80% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: 584.150 ns/op
# Warmup Iteration   2: 556.965 ns/op
# Warmup Iteration   3: 543.182 ns/op
# Warmup Iteration   4: 542.466 ns/op
# Warmup Iteration   5: 545.529 ns/op
Iteration   1: 542.239 ns/op
Iteration   2: 540.669 ns/op
Iteration   3: 543.318 ns/op
Iteration   4: 542.735 ns/op
Iteration   5: 524.578 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  538.708 ±(99.9%) 30.650 ns/op [Average]
  (min, avg, max) = (524.578, 538.708, 543.318), stdev = 7.960
  CI (99.9%): [508.058, 569.358] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 50)

# Run progress: 90.31% complete, ETA 00:03:19
# Fork: 1 of 1
# Warmup Iteration   1: 600.939 ns/op
# Warmup Iteration   2: 579.802 ns/op
# Warmup Iteration   3: 565.839 ns/op
# Warmup Iteration   4: 566.023 ns/op
# Warmup Iteration   5: 565.632 ns/op
Iteration   1: 567.090 ns/op
Iteration   2: 567.586 ns/op
Iteration   3: 568.471 ns/op
Iteration   4: 569.801 ns/op
Iteration   5: 579.382 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  570.466 ±(99.9%) 19.598 ns/op [Average]
  (min, avg, max) = (567.090, 570.466, 579.382), stdev = 5.090
  CI (99.9%): [550.868, 590.064] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 100)

# Run progress: 90.82% complete, ETA 00:03:09
# Fork: 1 of 1
# Warmup Iteration   1: 682.353 ns/op
# Warmup Iteration   2: 674.154 ns/op
# Warmup Iteration   3: 617.715 ns/op
# Warmup Iteration   4: 615.965 ns/op
# Warmup Iteration   5: 615.958 ns/op
Iteration   1: 616.728 ns/op
Iteration   2: 618.065 ns/op
Iteration   3: 619.013 ns/op
Iteration   4: 630.302 ns/op
Iteration   5: 635.315 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  623.885 ±(99.9%) 32.254 ns/op [Average]
  (min, avg, max) = (616.728, 623.885, 635.315), stdev = 8.376
  CI (99.9%): [591.631, 656.139] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 500)

# Run progress: 91.33% complete, ETA 00:02:58
# Fork: 1 of 1
# Warmup Iteration   1: 1225.127 ns/op
# Warmup Iteration   2: 1184.670 ns/op
# Warmup Iteration   3: 1136.727 ns/op
# Warmup Iteration   4: 1074.372 ns/op
# Warmup Iteration   5: 1078.076 ns/op
Iteration   1: 1079.376 ns/op
Iteration   2: 1076.945 ns/op
Iteration   3: 1084.003 ns/op
Iteration   4: 1083.670 ns/op
Iteration   5: 1079.167 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1080.632 ±(99.9%) 11.855 ns/op [Average]
  (min, avg, max) = (1076.945, 1080.632, 1084.003), stdev = 3.079
  CI (99.9%): [1068.777, 1092.487] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1000)

# Run progress: 91.84% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: 1978.832 ns/op
# Warmup Iteration   2: 1915.026 ns/op
# Warmup Iteration   3: 1849.019 ns/op
# Warmup Iteration   4: 1720.547 ns/op
# Warmup Iteration   5: 1719.894 ns/op
Iteration   1: 1725.958 ns/op
Iteration   2: 1733.064 ns/op
Iteration   3: 1735.683 ns/op
Iteration   4: 1713.391 ns/op
Iteration   5: 1746.430 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1730.905 ±(99.9%) 47.150 ns/op [Average]
  (min, avg, max) = (1713.391, 1730.905, 1746.430), stdev = 12.245
  CI (99.9%): [1683.755, 1778.056] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10000)

# Run progress: 92.35% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: 14406.663 ns/op
# Warmup Iteration   2: 11963.485 ns/op
# Warmup Iteration   3: 11232.974 ns/op
# Warmup Iteration   4: 11255.105 ns/op
# Warmup Iteration   5: 11595.257 ns/op
Iteration   1: 11396.541 ns/op
Iteration   2: 11677.852 ns/op
Iteration   3: 11401.073 ns/op
Iteration   4: 11538.072 ns/op
Iteration   5: 12170.035 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  11636.715 ±(99.9%) 1231.398 ns/op [Average]
  (min, avg, max) = (11396.541, 11636.715, 12170.035), stdev = 319.790
  CI (99.9%): [10405.316, 12868.113] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 1)

# Run progress: 92.86% complete, ETA 00:02:27
# Fork: 1 of 1
# Warmup Iteration   1: 80.275 ns/op
# Warmup Iteration   2: 78.581 ns/op
# Warmup Iteration   3: 73.271 ns/op
# Warmup Iteration   4: 73.477 ns/op
# Warmup Iteration   5: 73.577 ns/op
Iteration   1: 73.458 ns/op
Iteration   2: 73.710 ns/op
Iteration   3: 73.679 ns/op
Iteration   4: 73.692 ns/op
Iteration   5: 73.596 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  73.627 ±(99.9%) 0.401 ns/op [Average]
  (min, avg, max) = (73.458, 73.627, 73.710), stdev = 0.104
  CI (99.9%): [73.226, 74.028] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 10)

# Run progress: 93.37% complete, ETA 00:02:16
# Fork: 1 of 1
# Warmup Iteration   1: 97.361 ns/op
# Warmup Iteration   2: 94.450 ns/op
# Warmup Iteration   3: 98.100 ns/op
# Warmup Iteration   4: 85.309 ns/op
# Warmup Iteration   5: 89.493 ns/op
Iteration   1: 85.039 ns/op
Iteration   2: 85.164 ns/op
Iteration   3: 85.356 ns/op
Iteration   4: 85.209 ns/op
Iteration   5: 85.406 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  85.235 ±(99.9%) 0.572 ns/op [Average]
  (min, avg, max) = (85.039, 85.235, 85.406), stdev = 0.148
  CI (99.9%): [84.663, 85.806] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 50)

# Run progress: 93.88% complete, ETA 00:02:06
# Fork: 1 of 1
# Warmup Iteration   1: 136.372 ns/op
# Warmup Iteration   2: 133.154 ns/op
# Warmup Iteration   3: 124.599 ns/op
# Warmup Iteration   4: 120.759 ns/op
# Warmup Iteration   5: 120.502 ns/op
Iteration   1: 120.291 ns/op
Iteration   2: 120.312 ns/op
Iteration   3: 120.431 ns/op
Iteration   4: 133.461 ns/op
Iteration   5: 120.860 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  123.071 ±(99.9%) 22.382 ns/op [Average]
  (min, avg, max) = (120.291, 123.071, 133.461), stdev = 5.812
  CI (99.9%): [100.690, 145.453] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 100)

# Run progress: 94.39% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 201.197 ns/op
# Warmup Iteration   2: 177.146 ns/op
# Warmup Iteration   3: 165.544 ns/op
# Warmup Iteration   4: 165.727 ns/op
# Warmup Iteration   5: 166.734 ns/op
Iteration   1: 166.216 ns/op
Iteration   2: 166.406 ns/op
Iteration   3: 167.439 ns/op
Iteration   4: 167.728 ns/op
Iteration   5: 166.210 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  166.800 ±(99.9%) 2.800 ns/op [Average]
  (min, avg, max) = (166.210, 166.800, 167.728), stdev = 0.727
  CI (99.9%): [164.000, 169.599] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 500)

# Run progress: 94.90% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: 695.988 ns/op
# Warmup Iteration   2: 616.711 ns/op
# Warmup Iteration   3: 574.388 ns/op
# Warmup Iteration   4: 576.848 ns/op
# Warmup Iteration   5: 588.537 ns/op
Iteration   1: 580.725 ns/op
Iteration   2: 576.245 ns/op
Iteration   3: 574.982 ns/op
Iteration   4: 575.410 ns/op
Iteration   5: 576.670 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  576.806 ±(99.9%) 8.815 ns/op [Average]
  (min, avg, max) = (574.982, 576.806, 580.725), stdev = 2.289
  CI (99.9%): [567.991, 585.622] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 95.41% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 1390.796 ns/op
# Warmup Iteration   2: 1193.876 ns/op
# Warmup Iteration   3: 1119.982 ns/op
# Warmup Iteration   4: 1151.250 ns/op
# Warmup Iteration   5: 1183.695 ns/op
Iteration   1: 1178.152 ns/op
Iteration   2: 1244.215 ns/op
Iteration   3: 1120.983 ns/op
Iteration   4: 1122.794 ns/op
Iteration   5: 1156.848 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  1164.598 ±(99.9%) 194.757 ns/op [Average]
  (min, avg, max) = (1120.983, 1164.598, 1244.215), stdev = 50.578
  CI (99.9%): [969.842, 1359.355] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 95.92% complete, ETA 00:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 13374.524 ns/op
# Warmup Iteration   2: 11035.992 ns/op
# Warmup Iteration   3: 10382.174 ns/op
# Warmup Iteration   4: 10604.015 ns/op
# Warmup Iteration   5: 10391.932 ns/op
Iteration   1: 10443.120 ns/op
Iteration   2: 10877.229 ns/op
Iteration   3: 10411.338 ns/op
Iteration   4: 10449.416 ns/op
Iteration   5: 10429.462 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  10522.113 ±(99.9%) 766.480 ns/op [Average]
  (min, avg, max) = (10411.338, 10522.113, 10877.229), stdev = 199.052
  CI (99.9%): [9755.633, 11288.593] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 1)

# Run progress: 96.43% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 80.934 ns/op
# Warmup Iteration   2: 78.823 ns/op
# Warmup Iteration   3: 81.248 ns/op
# Warmup Iteration   4: 71.983 ns/op
# Warmup Iteration   5: 72.140 ns/op
Iteration   1: 71.991 ns/op
Iteration   2: 72.083 ns/op
Iteration   3: 72.120 ns/op
Iteration   4: 71.759 ns/op
Iteration   5: 71.504 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  71.892 ±(99.9%) 0.993 ns/op [Average]
  (min, avg, max) = (71.504, 71.892, 72.120), stdev = 0.258
  CI (99.9%): [70.898, 72.885] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 10)

# Run progress: 96.94% complete, ETA 00:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 96.221 ns/op
# Warmup Iteration   2: 94.756 ns/op
# Warmup Iteration   3: 92.569 ns/op
# Warmup Iteration   4: 85.844 ns/op
# Warmup Iteration   5: 87.730 ns/op
Iteration   1: 85.683 ns/op
Iteration   2: 85.763 ns/op
Iteration   3: 88.866 ns/op
Iteration   4: 85.633 ns/op
Iteration   5: 89.876 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  87.164 ±(99.9%) 7.881 ns/op [Average]
  (min, avg, max) = (85.633, 87.164, 89.876), stdev = 2.047
  CI (99.9%): [79.284, 95.045] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 50)

# Run progress: 97.45% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 138.072 ns/op
# Warmup Iteration   2: 134.386 ns/op
# Warmup Iteration   3: 126.007 ns/op
# Warmup Iteration   4: 119.841 ns/op
# Warmup Iteration   5: 119.668 ns/op
Iteration   1: 121.396 ns/op
Iteration   2: 124.622 ns/op
Iteration   3: 120.319 ns/op
Iteration   4: 121.796 ns/op
Iteration   5: 120.577 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  121.742 ±(99.9%) 6.613 ns/op [Average]
  (min, avg, max) = (120.319, 121.742, 124.622), stdev = 1.717
  CI (99.9%): [115.129, 128.355] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 100)

# Run progress: 97.96% complete, ETA 00:00:42
# Fork: 1 of 1
# Warmup Iteration   1: 202.310 ns/op
# Warmup Iteration   2: 178.543 ns/op
# Warmup Iteration   3: 166.393 ns/op
# Warmup Iteration   4: 166.157 ns/op
# Warmup Iteration   5: 166.366 ns/op
Iteration   1: 166.758 ns/op
Iteration   2: 166.478 ns/op
Iteration   3: 178.416 ns/op
Iteration   4: 167.596 ns/op
Iteration   5: 166.679 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  169.185 ±(99.9%) 19.937 ns/op [Average]
  (min, avg, max) = (166.478, 169.185, 178.416), stdev = 5.178
  CI (99.9%): [149.248, 189.123] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 500)

# Run progress: 98.47% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 697.932 ns/op
# Warmup Iteration   2: 612.269 ns/op
# Warmup Iteration   3: 572.665 ns/op
# Warmup Iteration   4: 573.623 ns/op
# Warmup Iteration   5: 575.179 ns/op
Iteration   1: 588.310 ns/op
Iteration   2: 576.460 ns/op
Iteration   3: 574.426 ns/op
Iteration   4: 574.831 ns/op
Iteration   5: 577.305 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  578.266 ±(99.9%) 22.088 ns/op [Average]
  (min, avg, max) = (574.426, 578.266, 588.310), stdev = 5.736
  CI (99.9%): [556.178, 600.354] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 1000)

# Run progress: 98.98% complete, ETA 00:00:21
# Fork: 1 of 1
# Warmup Iteration   1: 1349.994 ns/op
# Warmup Iteration   2: 1263.537 ns/op
# Warmup Iteration   3: 1126.093 ns/op
# Warmup Iteration   4: 1121.783 ns/op
# Warmup Iteration   5: 1131.267 ns/op
Iteration   1: 1157.151 ns/op
Iteration   2: 1128.380 ns/op
Iteration   3: 1203.152 ns/op
Iteration   4: 1126.455 ns/op
Iteration   5: 1246.781 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  1172.384 ±(99.9%) 199.710 ns/op [Average]
  (min, avg, max) = (1126.455, 1172.384, 1246.781), stdev = 51.864
  CI (99.9%): [972.674, 1372.094] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_342, VM 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.49% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 13091.645 ns/op
# Warmup Iteration   2: 11237.017 ns/op
# Warmup Iteration   3: 10829.749 ns/op
# Warmup Iteration   4: 10604.533 ns/op
# Warmup Iteration   5: 10624.675 ns/op
Iteration   1: 10677.170 ns/op
Iteration   2: 10645.976 ns/op
Iteration   3: 10628.549 ns/op
Iteration   4: 11628.520 ns/op
Iteration   5: 10686.125 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  10853.268 ±(99.9%) 1671.188 ns/op [Average]
  (min, avg, max) = (10628.549, 10853.268, 11628.520), stdev = 434.002
  CI (99.9%): [9182.080, 12524.456] (assumes normal distribution)


# Run complete. Total time: 00:34:20

Benchmark                                                       (dataset)  (length)  Mode  Cnt      Score      Error  Units
Base64JniBenchmarks.jdk_url_decode                                  fixed         1  avgt    5     54.758 ±    1.578  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed        10  avgt    5     77.542 ±    0.973  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed        50  avgt    5    211.127 ±   30.416  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed       100  avgt    5    351.891 ±   29.017  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed       500  avgt    5   1576.140 ±   13.696  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed      1000  avgt    5   3135.448 ±  119.655  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed     10000  avgt    5  30129.551 ± 1979.218  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random         1  avgt    5     54.143 ±    0.309  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random        10  avgt    5     77.404 ±    1.059  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random        50  avgt    5    201.196 ±    7.090  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random       100  avgt    5    346.568 ±   15.386  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random       500  avgt    5   1593.984 ±   34.316  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random      1000  avgt    5   3117.113 ±  118.235  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random     10000  avgt    5  31237.034 ±  612.430  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed         1  avgt    5     51.115 ±    0.297  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed        10  avgt    5     78.687 ±    2.550  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed        50  avgt    5    158.135 ±    5.047  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed       100  avgt    5    232.780 ±   11.052  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed       500  avgt    5    895.381 ±   18.671  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed      1000  avgt    5   1771.498 ±   12.805  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed     10000  avgt    5  19143.359 ±  649.213  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random         1  avgt    5     51.291 ±    0.998  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random        10  avgt    5     79.116 ±    2.779  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random        50  avgt    5    159.532 ±    2.540  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random       100  avgt    5    230.783 ±    3.583  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random       500  avgt    5    901.803 ±   48.381  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random      1000  avgt    5   1769.593 ±   51.230  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random     10000  avgt    5  17054.382 ±   69.894  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed         1  avgt    5   1359.333 ±   37.432  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed        10  avgt    5   1347.019 ±   39.372  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed        50  avgt    5   1429.183 ±   35.743  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed       100  avgt    5   1592.468 ±  262.514  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed       500  avgt    5   2202.630 ±  381.808  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed      1000  avgt    5   2798.787 ±   55.988  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed     10000  avgt    5  13743.176 ±  106.636  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random         1  avgt    5   1357.841 ±   40.816  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random        10  avgt    5   1370.415 ±   78.570  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random        50  avgt    5   1431.320 ±   43.329  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random       100  avgt    5   1566.240 ±   36.241  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random       500  avgt    5   2120.696 ±   31.165  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random      1000  avgt    5   2871.762 ±   51.348  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random     10000  avgt    5  13821.895 ±  296.266  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed         1  avgt    5   1177.631 ±   26.282  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed        10  avgt    5   1149.202 ±    9.532  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed        50  avgt    5   1227.004 ±   42.463  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed       100  avgt    5   1335.890 ±  154.732  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed       500  avgt    5   1838.574 ±   32.451  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed      1000  avgt    5   2689.870 ±  275.074  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed     10000  avgt    5  14025.304 ± 2585.102  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random         1  avgt    5   1190.849 ±   59.843  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random        10  avgt    5   1145.867 ±   12.461  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random        50  avgt    5   1232.584 ±   39.660  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random       100  avgt    5   1331.952 ±    4.887  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random       500  avgt    5   1851.134 ±  100.811  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random      1000  avgt    5   2648.271 ±  210.725  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random     10000  avgt    5  13450.622 ±  402.248  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed         1  avgt    5   1021.728 ±   22.948  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed        10  avgt    5   1021.019 ±   63.739  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed        50  avgt    5   1089.148 ±   17.496  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed       100  avgt    5   1161.288 ±   48.890  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed       500  avgt    5   1723.723 ±   36.051  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed      1000  avgt    5   2879.568 ±  108.435  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed     10000  avgt    5  13442.247 ±  454.159  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random         1  avgt    5   1035.838 ±   62.088  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random        10  avgt    5   1004.000 ±   17.656  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random        50  avgt    5   1091.461 ±   66.434  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random       100  avgt    5   1160.355 ±   24.703  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random       500  avgt    5   1692.198 ±  229.144  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random      1000  avgt    5   2518.930 ±  231.375  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random     10000  avgt    5  13293.737 ±  140.416  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed         1  avgt    5    957.579 ±   36.953  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed        10  avgt    5    959.199 ±   28.646  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed        50  avgt    5   1032.691 ±   15.072  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed       100  avgt    5   1103.555 ±   35.205  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed       500  avgt    5   1639.514 ±   21.757  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed      1000  avgt    5   2384.464 ±  342.251  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed     10000  avgt    5  13443.091 ± 2155.424  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random         1  avgt    5    954.728 ±   19.166  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random        10  avgt    5    938.292 ±   19.031  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random        50  avgt    5   1033.537 ±   57.780  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random       100  avgt    5   1100.291 ±   28.265  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random       500  avgt    5   1601.521 ±   25.578  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random      1000  avgt    5   2333.142 ±  186.162  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random     10000  avgt    5  13087.826 ± 1162.603  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed         1  avgt    5    971.820 ±   94.823  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed        10  avgt    5   1028.048 ±   61.323  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed        50  avgt    5   1123.427 ±  168.731  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed       100  avgt    5   1145.542 ±   33.356  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed       500  avgt    5   1680.227 ±  124.370  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed      1000  avgt    5   2340.215 ±   50.121  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed     10000  avgt    5  13190.958 ±  117.174  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random         1  avgt    5    959.199 ±   43.452  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random        10  avgt    5    997.099 ±   26.067  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random        50  avgt    5   1089.293 ±   42.421  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random       100  avgt    5   1191.062 ±  128.579  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random       500  avgt    5   1661.755 ±   79.015  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random      1000  avgt    5   2332.443 ±   56.318  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random     10000  avgt    5  13245.956 ±  342.979  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed         1  avgt    5    529.340 ±    5.813  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed        10  avgt    5    565.636 ±   36.726  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed        50  avgt    5    641.827 ±   10.526  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed       100  avgt    5    722.987 ±   32.724  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed       500  avgt    5   1186.113 ±   52.757  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed      1000  avgt    5   1909.274 ±  142.130  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed     10000  avgt    5  13141.055 ± 2604.733  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random         1  avgt    5    524.449 ±    7.147  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random        10  avgt    5    557.114 ±    6.324  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random        50  avgt    5    649.891 ±   43.998  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random       100  avgt    5    719.605 ±   43.321  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random       500  avgt    5   1201.044 ±  164.575  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random      1000  avgt    5   1918.212 ±  207.199  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random     10000  avgt    5  12790.260 ±  494.558  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed         1  avgt    5    434.416 ±   24.929  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed        10  avgt    5    464.506 ±    3.395  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed        50  avgt    5    542.006 ±   14.014  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed       100  avgt    5    658.050 ±  262.183  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed       500  avgt    5   1082.617 ±   74.034  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed      1000  avgt    5   1800.447 ±  178.380  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed     10000  avgt    5  12410.615 ±   92.176  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random         1  avgt    5    444.468 ±   33.105  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random        10  avgt    5    473.776 ±   19.350  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random        50  avgt    5    539.201 ±   14.353  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random       100  avgt    5    632.653 ±   25.290  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random       500  avgt    5   1073.370 ±   16.777  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random      1000  avgt    5   1781.712 ±   33.885  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random     10000  avgt    5  12645.718 ±  604.370  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed         1  avgt    5     84.294 ±   13.588  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed        10  avgt    5    106.717 ±    6.756  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed        50  avgt    5    156.711 ±   27.098  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed       100  avgt    5    201.359 ±    1.987  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed       500  avgt    5    650.825 ±   49.571  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed      1000  avgt    5   1212.961 ±   14.655  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed     10000  avgt    5  12088.528 ±  824.668  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random         1  avgt    5     83.985 ±    9.551  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random        10  avgt    5    106.570 ±    6.798  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random        50  avgt    5    151.340 ±    4.953  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random       100  avgt    5    201.377 ±    2.573  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random       500  avgt    5    660.376 ±   58.626  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random      1000  avgt    5   1241.226 ±   63.913  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random     10000  avgt    5  11908.505 ±  168.271  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed         1  avgt    5   1325.695 ±   17.626  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed        10  avgt    5   1346.123 ±   14.014  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed        50  avgt    5   1391.065 ±   31.033  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed       100  avgt    5   1573.735 ±  208.447  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed       500  avgt    5   2062.033 ±  184.573  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed      1000  avgt    5   2590.884 ±   31.030  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed     10000  avgt    5  13511.681 ± 1185.414  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random         1  avgt    5   1313.952 ±   16.982  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random        10  avgt    5   1336.163 ±   13.359  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random        50  avgt    5   1396.555 ±   14.572  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random       100  avgt    5   1551.521 ±   30.316  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random       500  avgt    5   2132.220 ±  393.431  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random      1000  avgt    5   2631.127 ±  191.157  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random     10000  avgt    5  13293.965 ±  570.455  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed         1  avgt    5    423.721 ±   25.756  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed        10  avgt    5    443.047 ±   22.254  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed        50  avgt    5    485.442 ±   51.251  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed       100  avgt    5    574.882 ±   19.946  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed       500  avgt    5   1041.989 ±  538.146  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed      1000  avgt    5   1576.153 ±  402.730  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed     10000  avgt    5  11432.976 ± 2493.752  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random         1  avgt    5    424.872 ±   14.559  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random        10  avgt    5    434.703 ±   19.684  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random        50  avgt    5    497.309 ±   47.323  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random       100  avgt    5    574.193 ±   37.255  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random       500  avgt    5    981.409 ±   45.565  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random      1000  avgt    5   1516.266 ±   96.529  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random     10000  avgt    5  11234.948 ±  610.537  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed         1  avgt    5    516.984 ±   85.764  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed        10  avgt    5    529.049 ±   17.559  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed        50  avgt    5    567.329 ±    7.340  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed       100  avgt    5    631.884 ±   53.628  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed       500  avgt    5   1061.193 ±   94.205  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed      1000  avgt    5   1707.501 ±  154.125  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed     10000  avgt    5  11363.563 ±  685.815  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random         1  avgt    5    501.571 ±    7.836  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random        10  avgt    5    538.708 ±   30.650  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random        50  avgt    5    570.466 ±   19.598  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random       100  avgt    5    623.885 ±   32.254  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random       500  avgt    5   1080.632 ±   11.855  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random      1000  avgt    5   1730.905 ±   47.150  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random     10000  avgt    5  11636.715 ± 1231.398  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed         1  avgt    5     73.627 ±    0.401  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed        10  avgt    5     85.235 ±    0.572  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed        50  avgt    5    123.071 ±   22.382  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed       100  avgt    5    166.800 ±    2.800  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed       500  avgt    5    576.806 ±    8.815  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed      1000  avgt    5   1164.598 ±  194.757  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed     10000  avgt    5  10522.113 ±  766.480  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random         1  avgt    5     71.892 ±    0.993  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random        10  avgt    5     87.164 ±    7.881  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random        50  avgt    5    121.742 ±    6.613  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random       100  avgt    5    169.185 ±   19.937  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random       500  avgt    5    578.266 ±   22.088  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random      1000  avgt    5   1172.384 ±  199.710  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random     10000  avgt    5  10853.268 ± 1671.188  ns/op

Benchmark result is saved to /static/data/charts/base64-jni/jdk8.json
