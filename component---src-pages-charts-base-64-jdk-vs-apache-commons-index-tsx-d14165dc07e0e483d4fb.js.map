{"version":3,"file":"component---src-pages-charts-base-64-jdk-vs-apache-commons-index-tsx-d14165dc07e0e483d4fb.js","mappings":"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","sources":["webpack://komanov.com/./src/pages/charts/base64-jdk-vs-apache-commons/index.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport React, { useState } from 'react';\nimport { JmhBenchmarkRun } from '../../..';\nimport {\n  ChartAndTable,\n  Choose, getChooseItems, JmhChartComponentProps,\n  JmhChartPage,\n  TimeUnits\n} from '../../../components';\nimport { loadJson } from '../../../util';\n\ntype JdkVersion = 'openjdk-17' | 'openjdk-11' | 'openjdk-8';\nconst jdks: JdkVersion[] = ['openjdk-17', 'openjdk-11', 'openjdk-8'];\nconst Lengths = ['1', '10', '50', '100', '500', '1000', '10000'];\nconst DefaultLength = '10000';\ntype Dataset = 'fixed' | 'random';\nconst DefaultDataset: Dataset = 'fixed';\n\nconst xDesc = {\n  title: 'Library and Operation',\n  prop: 'method',\n  values: [\n    {\n      name: 'j.u.Base64 regular decode',\n      value: 'jdkDecode',\n    },\n    {\n      name: 'j.u.Base64 urlSafe decode',\n      value: 'jdkUrlDecode',\n    },\n    {\n      name: 'Commons regular decode',\n      value: 'commonsDecode',\n    },\n    {\n      name: 'Commons urlSafe decode',\n      value: 'commonsUrlDecode',\n    },\n    {\n      name: 'j.u.Base64 regular encode',\n      value: 'jdkEncode',\n    },\n    {\n      name: 'j.u.Base64 urlSafe encode',\n      value: 'jdkUrlEncode',\n    },\n    {\n      name: 'Commons regular encode',\n      value: 'commonsEncode',\n    },\n    {\n      name: 'Commons urlSafe encode',\n      value: 'commonsUrlEncode',\n    },\n  ],\n};\n\nconst yDesc = {\n  title: 'JDK',\n  prop: 'jdk',\n  values: jdks,\n};\n\nconst Base64PerformanceImpl = ({ jmhList }: JmhChartComponentProps) => {\n  const [length, lengthSet] = useState(DefaultLength);\n  const [dataset, datasetSet] = useState<Dataset>(DefaultDataset);\n  const [jdk, jdkSet] = useState<JdkVersion>('openjdk-17');\n  const [extractor, extractorSet] = useState({ func: null });\n\n  return (\n    <div className=\"markdown\">\n      <h3>Introduction</h3>\n\n      <p>\n        Here are benchmarking results for{' '}\n        <Link to=\"/p/base64-encoding-performance-jdk-vs-apache-commons\">\n          &laquo;Base64 Encoding Performance: JDK vs Apache Commons&raquo;\n        </Link>{' '}\n        blog post.\n      </p>\n\n      <p>\n        The performance tests are performed via{' '}\n        <a href=\"https://github.com/openjdk/jmh\">JMH</a>. The configuration of a\n        hardware is Intel® Core™ i7-1165G7 @ 2.80GHz × 8 (4 core + 4 HT) with 16\n        GB RAM. Scala version: 2.13.6.\n      </p>\n\n      <h3>Charts</h3>\n\n      <Choose\n        label=\"Data length:\"\n        items={getChooseItems(Lengths, (v) => v === DefaultLength)}\n        onChange={(value: string) => lengthSet(value)}\n      />\n      <Choose\n        label=\"Data set:\"\n        items={getChooseItems(['fixed', 'random'], (v) => v === DefaultDataset)}\n        onChange={(value: Dataset) => datasetSet(value)}\n      />\n      <TimeUnits onChange={(func: any) => extractorSet({ func })} />\n\n      <h4>Encoding/Decoding Performance for various JDKs</h4>\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={extractor.func}\n        filter={(p: any) => p.length === length && p.dataset === dataset}\n        title=\"Encoding/Decoding, nanos\"\n        xDesc={xDesc}\n        yDesc={yDesc}\n      />\n\n      <h4>Performance for different data sizes</h4>\n\n      <Choose\n        label=\"JDK:\"\n        items={getChooseItems(jdks, (_, index) => index === 0)}\n        onChange={(value: JdkVersion) => jdkSet(value)}\n      />\n\n      <ChartAndTable\n        chartType=\"LineChart\"\n        dataTable={jmhList}\n        extractor={extractor.func}\n        filter={(p: any) => p.jdk === jdk && p.dataset === dataset}\n        title=\"Encoding/Decoding, nanos\"\n        xDesc={xDesc}\n        yDesc={{\n          title: 'Data length',\n          prop: 'length',\n          values: Lengths,\n        }}\n        options={{\n          hAxis: {\n            title: 'Data length',\n          },\n          vAxis: {\n            title: 'time, nanoseconds',\n            //maxValue: 2000,\n          },\n        }}\n      />\n\n      <p>\n        Full JMH logs:\n        <a href={filePath('jdk8.log.txt')}>openjdk-8</a>,{' '}\n        <a href={filePath('jdk11.log.txt')}>openjdk-11</a>,{' '}\n        <a href={filePath('jdk17.log.txt')}>openjdk-17</a>.\n      </p>\n    </div>\n  );\n};\n\nfunction exportDimensions(benchmark: string, params: any) {\n  //'com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode'\n\n  const method = benchmark.substring(benchmark.lastIndexOf('.') + 1); // jdkUrlEncode\n\n  return {\n    method,\n    ...params,\n  };\n}\n\nconst filePath = (name: string) => `/data/charts/base64-jdk-vs-apache-commons/${name}`;\n\nconst fetchAndCombineResults = () => {\n  return Promise.all([\n    loadJson(filePath('jdk8.json')),\n    loadJson(filePath('jdk11.json')),\n    loadJson(filePath('jdk17.json')),\n  ]).then((values: any[]) => {\n    function setJdk(index: number, jdk: JdkVersion) {\n      const list: JmhBenchmarkRun[] = values[index].data;\n      list.forEach((v) => (v.params = { ...v.params, jdk }));\n      return list;\n    }\n\n    return {\n      data: [\n        ...setJdk(0, 'openjdk-8'),\n        ...setJdk(1, 'openjdk-11'),\n        ...setJdk(2, 'openjdk-17'),\n      ],\n    };\n  });\n};\n\nconst Base64Performance = JmhChartPage(Base64PerformanceImpl, {\n  fetchFunc: fetchAndCombineResults,\n  exportDimensionsFunc: exportDimensions,\n  headerText: 'Base64 Encoding Performance: JDK vs Apache Commons (Charts)',\n});\n\nexport default Base64Performance;\n"],"names":["jdks","Lengths","DefaultLength","DefaultDataset","xDesc","title","prop","values","name","value","yDesc","filePath","Base64Performance","JmhChartPage","jmhList","useState","length","lengthSet","dataset","datasetSet","jdk","jdkSet","func","extractor","extractorSet","React","className","Link","to","href","Choose","label","items","getChooseItems","v","onChange","TimeUnits","ChartAndTable","dataTable","filter","p","_","index","chartType","options","hAxis","vAxis","fetchFunc","Promise","all","loadJson","then","setJdk","list","data","forEach","params","exportDimensionsFunc","benchmark","method","substring","lastIndexOf","headerText"],"sourceRoot":""}