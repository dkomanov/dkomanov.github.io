{"version":3,"file":"component---src-pages-charts-set-map-java-vs-scala-index-tsx-d87f544860bc5416cbe7.js","mappings":"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","sources":["webpack://komanov.com/./src/pages/charts/set-map-java-vs-scala/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport { JmhBenchmarkRun } from '../../..';\nimport {\n  ChartAndTable,\n  Choose,\n  JmhChartComponentProps,\n  JmhChartPage,\n  TimeUnits,\n} from '../../../components';\nimport { loadJson } from '../../../util';\n\nconst jdks = ['openjdk-17', 'openjdk-11', 'openjdk-8'];\n\nconst xDesc = (kind: 'Set' | 'Map') => {\n  return {\n  title: 'Collection',\n  prop: 'method',\n  values: [\n    {\n      name: `java.util.Hash${kind}`,\n      value: `java${kind}`,\n    },\n    {\n      name: `WrappedHash${kind}`,\n      value: `javaWrapped${kind}`,\n    },\n    {\n      name: `immutable.${kind}`,\n      value: `scala${kind}`,\n    },\n    {\n      name: `mutable.${kind}`,\n      value: `scalaMutable${kind}`,\n    },\n  ],\n};\n};\n\nconst yDesc = {\n  title: 'JDK',\n  prop: 'jdk',\n  values: jdks,\n};\n\nconst SetMapJavaVsScalaImpl = ({ jmhList }: JmhChartComponentProps) => {\n  const [size, sizeSet] = useState('1000000');\n  const [extractor, extractorSet] = useState({ func: null });\n\n  return (\n    <div className=\"markdown\">\n      <h3>Introduction</h3>\n\n      <p>\n        Here are benchmarking results for{' '}\n        <Link to=\"/p/set-map-lookup-performance-java-vs-scala\">\n          &laquo;Set/Map lookup performance: Java vs Scala&raquo;\n        </Link>{' '}\n        blog post.\n      </p>\n\n      <p>\n        The performance tests are performed via{' '}\n        <a href=\"http://openjdk.java.net/projects/code-tools/jmh/\">JMH</a>. The\n        configuration of a hardware is Intel® Core™ i7-1165G7 @ 2.80GHz × 8 (4\n        core + 4 HT) with 16 GB RAM.\n      </p>\n\n      <h3>Charts</h3>\n\n      <TimeUnits onChange={(func: any) => extractorSet({ func })} />\n      <Choose\n        label=\"Size\"\n        items={[\n          {\n            label: '1000',\n            value: '1000',\n          },\n          {\n            label: '10000',\n            value: '10000',\n          },\n          {\n            label: '100000',\n            value: '100000',\n          },\n          {\n            label: '1000000',\n            value: '1000000',\n            default: true,\n          },\n        ]}\n        onChange={(value: string) => sizeSet(value)}\n      />\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={extractor.func}\n        filter={(p: any) => p.what === 'hit' && p.size === size}\n        title=\"Set successful lookup (hit), nanos\"\n        xDesc={xDesc('Set')}\n        yDesc={yDesc}\n      />\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={extractor.func}\n        filter={(p: any) => p.what === 'hit' && p.size === size}\n        title=\"Map successful lookup (hit), nanos\"\n        xDesc={xDesc('Map')}\n        yDesc={yDesc}\n      />\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={extractor.func}\n        filter={(p: any) => p.what === 'miss' && p.size === size}\n        title=\"Set failed lookup (miss), nanos\"\n        xDesc={xDesc('Set')}\n        yDesc={yDesc}\n      />\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={extractor.func}\n        filter={(p: any) => p.what === 'miss' && p.size === size}\n        title=\"Map failed lookup (miss), nanos\"\n        xDesc={xDesc('Map')}\n        yDesc={yDesc}\n      />\n\n      <p>\n        Full JMH logs:{' '}\n        <a href={`/data/charts/set-map-java-vs-scala-2-12/jdk8.log.txt`}>openjdk-8</a>,{' '}\n        <a href={`/data/charts/set-map-java-vs-scala-2-12/jdk11.log.txt`}>openjdk-11</a>,{' '}\n        <a href={`/data/charts/set-map-java-vs-scala-2-12/jdk17.log.txt`}>openjdk-17</a>.\n      </p>\n    </div>\n  );\n};\n\nfunction exportDimensions(benchmark: string, params: any) {\n  //'com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit'\n\n  const method = benchmark.substring(benchmark.lastIndexOf('.') + 1);\n  const hit = method.endsWith('Hit');\n  const name = method.substring(0, method.length - (hit ? 3 : 4));\n\n  return {\n    method: name,\n    what: hit ? 'hit' : 'miss',\n    ...params,\n  };\n}\n\nconst fetchAndCombineResults = () => {\n  return Promise.all([\n    loadJson('/data/charts/set-map-java-vs-scala-2-12/jdk8.json'),\n    loadJson('/data/charts/set-map-java-vs-scala-2-12/jdk11.json'),\n    loadJson('/data/charts/set-map-java-vs-scala-2-12/jdk17.json'),\n  ]).then((values: any[]) => {\n    function setJdk(index: number, jdk: string, scala: string) {\n      const list: JmhBenchmarkRun[] = values[index].data;\n      list.forEach((v) => (v.params = { jdk, scala }));\n      return list;\n    }\n\n    return {\n      data: [\n        ...setJdk(0, 'openjdk-8', '2.12'),\n        ...setJdk(1, 'openjdk-11', '2.12'),\n        ...setJdk(2, 'openjdk-17', '2.12'),\n      ],\n    };\n  });\n};\n\nconst SetMapJavaVsScala = JmhChartPage(SetMapJavaVsScalaImpl, {\n  fetchFunc: fetchAndCombineResults,\n  exportDimensionsFunc: exportDimensions,\n  headerText: 'Set/Map lookup performance: Java vs Scala (Charts)',\n});\n\nexport default SetMapJavaVsScala;\n"],"names":["xDesc","kind","title","prop","values","name","value","yDesc","SetMapJavaVsScala","JmhChartPage","jmhList","useState","size","sizeSet","func","extractor","extractorSet","React","className","Link","to","href","TimeUnits","onChange","Choose","label","items","default","ChartAndTable","dataTable","filter","p","what","fetchFunc","Promise","all","loadJson","then","setJdk","index","jdk","scala","list","data","forEach","v","params","exportDimensionsFunc","benchmark","method","substring","lastIndexOf","hit","endsWith","length","headerText"],"sourceRoot":""}