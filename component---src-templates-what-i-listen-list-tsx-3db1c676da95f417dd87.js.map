{"version":3,"file":"component---src-templates-what-i-listen-list-tsx-3db1c676da95f417dd87.js","mappings":"2KAgDA,UAlCoB,SAAC,GAGI,IAFvBA,EAEsB,EAFtBA,SAEsB,IADtBC,YAAeC,EACO,EADPA,IAGTC,EAFgB,EADFC,MAGGC,KAAI,SAACC,GAAD,OAAUC,EAAAA,EAAAA,GAA8BD,EAAlD,IAEjB,OACEE,EAAAA,cAACC,EAAAA,GAAD,CAAQT,SAAUA,EAAUU,UAAWC,EAAAA,GACrCH,EAAAA,cAACI,EAAAA,GAAD,CACEC,MAAK,gBACLC,YAAW,uDAEbN,EAAAA,cAAAA,IAAAA,CAAGO,UAAU,cACXP,EAAAA,cAAAA,SAAAA,KAAAA,eADF,yPAMCN,GAAOM,EAAAA,cAAAA,KAAAA,KAAAA,kBAAoBN,EAApB,UACRM,EAAAA,cAAAA,MAAAA,CAAKO,UAAU,YACZZ,EAASE,KAAI,SAACW,GAAD,OACZR,EAAAA,cAACS,EAAAA,GAAD,CAAaC,IAAKF,EAAQG,KAAMH,QAASA,GAD1C,KAIFd,GACCM,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAACY,EAAAA,KAAD,CAAMC,GAAG,uBAAT,uBADF,KA1BR,C,qECDO,SAASd,EACdD,GAEA,MAAO,CACLa,KAAMb,EAAKgB,OAAOH,KAClBI,KAAMjB,EAAKkB,YAAYD,KACvBV,MAAOP,EAAKkB,YAAYX,MACxBY,YAAanB,EAAKkB,YAAYC,YAC9BC,IAAKpB,EAAKkB,YAAYE,IACtBC,QAAQC,EAAAA,EAAAA,GAAStB,EAAKkB,YAAYG,QAClCE,KAAMvB,EAAKkB,YAAYK,MAAQ,GAC/BC,MAAOxB,EAAKkB,YAAYM,MAE3B,C,uBC1BD,IAAe,IAA0B,mD","sources":["webpack://komanov.com/./src/templates/what-i-listen/list.tsx","webpack://komanov.com/./src/util/gql.ts","webpack://komanov.com/./src/templates/what-i-listen/cover.jpg"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport { EpisodeCard, Layout, Seo } from '../../components';\nimport { listenedPodcastEpisodeFromGql } from '../../util/gql';\nimport cover from './cover.jpg';\n\ninterface EpisodeListProps {\n  location: any;\n  pageContext: {\n    nodes: any[];\n    tag?: string;\n  };\n}\n\nconst EpisodeList = ({\n  location,\n  pageContext: { tag, nodes },\n}: EpisodeListProps) => {\n  // TODO PAGINATION\n  const episodes = nodes.map((node) => listenedPodcastEpisodeFromGql(node));\n\n  return (\n    <Layout location={location} teaserUrl={cover}>\n      <Seo\n        title={`What I Listen`}\n        description={`Short Reviews/Impressions about podcasts I listen.`}\n      />\n      <p className=\"disclaimer\">\n        <strong>Disclaimer:</strong> these are my quick notes, not full reviews\n        on podcasts that I listen. I decided to do it to be more aware of what I\n        listen to, to be more involved and forget less. Even if I write a lot,\n        it's for sure doesn't represent episodes in its entirety.\n      </p>\n      {tag && <h1>Podcasts with '{tag}'' tag</h1>}\n      <div className=\"episodes\">\n        {episodes.map((episode) => (\n          <EpisodeCard key={episode.slug} episode={episode} />\n        ))}\n      </div>\n      {tag && (\n        <p>\n          <Link to=\"/what-i-listen/tags\">&larr; Back to tag cloud</Link>.\n        </p>\n      )}\n    </Layout>\n  );\n};\n\nexport default EpisodeList;\n","import { getImage } from 'gatsby-plugin-image';\n\nexport interface ListenedPodcastEpisode {\n  slug: string;\n  title: string;\n  date: Date;\n  podcastDate: Date;\n  url: string;\n  teaser?: any;\n  tags: string[];\n  draft: boolean;\n}\n\nexport function listenedPodcastEpisodeFromGql(\n  node: any\n): ListenedPodcastEpisode {\n  return {\n    slug: node.fields.slug,\n    date: node.frontmatter.date,\n    title: node.frontmatter.title,\n    podcastDate: node.frontmatter.podcastDate,\n    url: node.frontmatter.url,\n    teaser: getImage(node.frontmatter.teaser),\n    tags: node.frontmatter.tags || [],\n    draft: node.frontmatter.draft,\n  };\n}\n","export default __webpack_public_path__ + \"static/cover-d399302c760767e2db4e9060f08e0b10.jpg\";"],"names":["location","pageContext","tag","episodes","nodes","map","node","listenedPodcastEpisodeFromGql","React","Layout","teaserUrl","cover","Seo","title","description","className","episode","EpisodeCard","key","slug","Link","to","fields","date","frontmatter","podcastDate","url","teaser","getImage","tags","draft"],"sourceRoot":""}