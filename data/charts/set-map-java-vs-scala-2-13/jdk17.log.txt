# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000)

# Run progress: 0.00% complete, ETA 00:22:24
# Fork: 1 of 1
# Warmup Iteration   1: 131.606 ns/op
# Warmup Iteration   2: 131.580 ns/op
Iteration   1: 91.940 ns/op
Iteration   2: 96.978 ns/op
Iteration   3: 97.035 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  95.318 ±(99.9%) 53.363 ns/op [Average]
  (min, avg, max) = (91.940, 95.318, 97.035), stdev = 2.925
  CI (99.9%): [41.955, 148.681] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 10000)

# Run progress: 1.56% complete, ETA 00:22:40
# Fork: 1 of 1
# Warmup Iteration   1: 119.469 ns/op
# Warmup Iteration   2: 118.983 ns/op
Iteration   1: 111.685 ns/op
Iteration   2: 108.251 ns/op
Iteration   3: 108.381 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  109.439 ±(99.9%) 35.512 ns/op [Average]
  (min, avg, max) = (108.251, 109.439, 111.685), stdev = 1.947
  CI (99.9%): [73.927, 144.951] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 100000)

# Run progress: 3.13% complete, ETA 00:22:22
# Fork: 1 of 1
# Warmup Iteration   1: 125.351 ns/op
# Warmup Iteration   2: 124.103 ns/op
Iteration   1: 116.187 ns/op
Iteration   2: 113.369 ns/op
Iteration   3: 113.466 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  114.341 ±(99.9%) 29.184 ns/op [Average]
  (min, avg, max) = (113.369, 114.341, 116.187), stdev = 1.600
  CI (99.9%): [85.157, 143.525] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000000)

# Run progress: 4.69% complete, ETA 00:22:09
# Fork: 1 of 1
# Warmup Iteration   1: 126.337 ns/op
# Warmup Iteration   2: 132.262 ns/op
Iteration   1: 91.779 ns/op
Iteration   2: 89.980 ns/op
Iteration   3: 89.875 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  90.545 ±(99.9%) 19.529 ns/op [Average]
  (min, avg, max) = (89.875, 90.545, 91.779), stdev = 1.070
  CI (99.9%): [71.016, 110.074] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000)

# Run progress: 6.25% complete, ETA 00:22:31
# Fork: 1 of 1
# Warmup Iteration   1: 109.193 ns/op
# Warmup Iteration   2: 109.352 ns/op
Iteration   1: 84.414 ns/op
Iteration   2: 82.130 ns/op
Iteration   3: 82.246 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  82.930 ±(99.9%) 23.468 ns/op [Average]
  (min, avg, max) = (82.130, 82.930, 84.414), stdev = 1.286
  CI (99.9%): [59.462, 106.397] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 10000)

# Run progress: 7.81% complete, ETA 00:21:57
# Fork: 1 of 1
# Warmup Iteration   1: 113.037 ns/op
# Warmup Iteration   2: 130.024 ns/op
Iteration   1: 91.574 ns/op
Iteration   2: 87.832 ns/op
Iteration   3: 87.855 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  89.087 ±(99.9%) 39.302 ns/op [Average]
  (min, avg, max) = (87.832, 89.087, 91.574), stdev = 2.154
  CI (99.9%): [49.785, 128.389] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 100000)

# Run progress: 9.38% complete, ETA 00:21:28
# Fork: 1 of 1
# Warmup Iteration   1: 105.121 ns/op
# Warmup Iteration   2: 104.304 ns/op
Iteration   1: 90.749 ns/op
Iteration   2: 88.877 ns/op
Iteration   3: 89.084 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  89.570 ±(99.9%) 18.720 ns/op [Average]
  (min, avg, max) = (88.877, 89.570, 90.749), stdev = 1.026
  CI (99.9%): [70.850, 108.290] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000000)

# Run progress: 10.94% complete, ETA 00:21:04
# Fork: 1 of 1
# Warmup Iteration   1: 107.637 ns/op
# Warmup Iteration   2: 105.408 ns/op
Iteration   1: 95.017 ns/op
Iteration   2: 90.213 ns/op
Iteration   3: 90.863 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  92.031 ±(99.9%) 47.545 ns/op [Average]
  (min, avg, max) = (90.213, 92.031, 95.017), stdev = 2.606
  CI (99.9%): [44.486, 139.576] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000)

# Run progress: 12.50% complete, ETA 00:20:58
# Fork: 1 of 1
# Warmup Iteration   1: 110.919 ns/op
# Warmup Iteration   2: 114.884 ns/op
Iteration   1: 80.674 ns/op
Iteration   2: 80.399 ns/op
Iteration   3: 79.498 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  80.191 ±(99.9%) 11.223 ns/op [Average]
  (min, avg, max) = (79.498, 80.191, 80.674), stdev = 0.615
  CI (99.9%): [68.967, 91.414] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 10000)

# Run progress: 14.06% complete, ETA 00:20:30
# Fork: 1 of 1
# Warmup Iteration   1: 115.007 ns/op
# Warmup Iteration   2: 116.934 ns/op
Iteration   1: 89.071 ns/op
Iteration   2: 85.113 ns/op
Iteration   3: 84.977 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  86.387 ±(99.9%) 42.422 ns/op [Average]
  (min, avg, max) = (84.977, 86.387, 89.071), stdev = 2.325
  CI (99.9%): [43.965, 128.809] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 100000)

# Run progress: 15.63% complete, ETA 00:20:04
# Fork: 1 of 1
# Warmup Iteration   1: 114.812 ns/op
# Warmup Iteration   2: 118.465 ns/op
Iteration   1: 83.549 ns/op
Iteration   2: 84.476 ns/op
Iteration   3: 82.749 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  83.591 ±(99.9%) 15.767 ns/op [Average]
  (min, avg, max) = (82.749, 83.591, 84.476), stdev = 0.864
  CI (99.9%): [67.824, 99.359] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000000)

# Run progress: 17.19% complete, ETA 00:19:41
# Fork: 1 of 1
# Warmup Iteration   1: 117.072 ns/op
# Warmup Iteration   2: 121.287 ns/op
Iteration   1: 91.036 ns/op
Iteration   2: 89.192 ns/op
Iteration   3: 89.625 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  89.951 ±(99.9%) 17.596 ns/op [Average]
  (min, avg, max) = (89.192, 89.951, 91.036), stdev = 0.965
  CI (99.9%): [72.355, 107.547] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000)

# Run progress: 18.75% complete, ETA 00:19:29
# Fork: 1 of 1
# Warmup Iteration   1: 111.631 ns/op
# Warmup Iteration   2: 105.131 ns/op
Iteration   1: 92.429 ns/op
Iteration   2: 90.468 ns/op
Iteration   3: 90.421 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  91.106 ±(99.9%) 20.903 ns/op [Average]
  (min, avg, max) = (90.421, 91.106, 92.429), stdev = 1.146
  CI (99.9%): [70.203, 112.008] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 10000)

# Run progress: 20.31% complete, ETA 00:19:03
# Fork: 1 of 1
# Warmup Iteration   1: 111.231 ns/op
# Warmup Iteration   2: 109.679 ns/op
Iteration   1: 91.608 ns/op
Iteration   2: 89.487 ns/op
Iteration   3: 89.434 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  90.176 ±(99.9%) 22.625 ns/op [Average]
  (min, avg, max) = (89.434, 90.176, 91.608), stdev = 1.240
  CI (99.9%): [67.552, 112.801] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 100000)

# Run progress: 21.88% complete, ETA 00:18:38
# Fork: 1 of 1
# Warmup Iteration   1: 112.536 ns/op
# Warmup Iteration   2: 110.248 ns/op
Iteration   1: 93.875 ns/op
Iteration   2: 93.500 ns/op
Iteration   3: 93.365 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  93.580 ±(99.9%) 4.822 ns/op [Average]
  (min, avg, max) = (93.365, 93.580, 93.875), stdev = 0.264
  CI (99.9%): [88.759, 98.402] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000000)

# Run progress: 23.44% complete, ETA 00:18:14
# Fork: 1 of 1
# Warmup Iteration   1: 125.153 ns/op
# Warmup Iteration   2: 109.192 ns/op
Iteration   1: 98.590 ns/op
Iteration   2: 94.967 ns/op
Iteration   3: 95.024 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  96.194 ±(99.9%) 37.862 ns/op [Average]
  (min, avg, max) = (94.967, 96.194, 98.590), stdev = 2.075
  CI (99.9%): [58.332, 134.055] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000)

# Run progress: 25.00% complete, ETA 00:17:59
# Fork: 1 of 1
# Warmup Iteration   1: 143.159 ns/op
# Warmup Iteration   2: 148.803 ns/op
Iteration   1: 90.549 ns/op
Iteration   2: 88.736 ns/op
Iteration   3: 88.744 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  89.343 ±(99.9%) 19.059 ns/op [Average]
  (min, avg, max) = (88.736, 89.343, 90.549), stdev = 1.045
  CI (99.9%): [70.284, 108.402] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 10000)

# Run progress: 26.56% complete, ETA 00:17:34
# Fork: 1 of 1
# Warmup Iteration   1: 146.138 ns/op
# Warmup Iteration   2: 148.297 ns/op
Iteration   1: 87.012 ns/op
Iteration   2: 85.229 ns/op
Iteration   3: 85.391 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  85.877 ±(99.9%) 17.992 ns/op [Average]
  (min, avg, max) = (85.229, 85.877, 87.012), stdev = 0.986
  CI (99.9%): [67.885, 103.869] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 100000)

# Run progress: 28.13% complete, ETA 00:17:09
# Fork: 1 of 1
# Warmup Iteration   1: 145.851 ns/op
# Warmup Iteration   2: 150.328 ns/op
Iteration   1: 97.568 ns/op
Iteration   2: 95.807 ns/op
Iteration   3: 96.143 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  96.506 ±(99.9%) 17.052 ns/op [Average]
  (min, avg, max) = (95.807, 96.506, 97.568), stdev = 0.935
  CI (99.9%): [79.454, 113.558] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000000)

# Run progress: 29.69% complete, ETA 00:16:46
# Fork: 1 of 1
# Warmup Iteration   1: 140.844 ns/op
# Warmup Iteration   2: 148.681 ns/op
Iteration   1: 145.174 ns/op
Iteration   2: 138.728 ns/op
Iteration   3: 138.868 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  140.923 ±(99.9%) 67.170 ns/op [Average]
  (min, avg, max) = (138.728, 140.923, 145.174), stdev = 3.682
  CI (99.9%): [73.754, 208.093] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000)

# Run progress: 31.25% complete, ETA 00:16:29
# Fork: 1 of 1
# Warmup Iteration   1: 173.002 ns/op
# Warmup Iteration   2: 152.350 ns/op
Iteration   1: 151.427 ns/op
Iteration   2: 148.483 ns/op
Iteration   3: 148.519 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  149.476 ±(99.9%) 30.819 ns/op [Average]
  (min, avg, max) = (148.483, 149.476, 151.427), stdev = 1.689
  CI (99.9%): [118.658, 180.295] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 10000)

# Run progress: 32.81% complete, ETA 00:16:04
# Fork: 1 of 1
# Warmup Iteration   1: 158.210 ns/op
# Warmup Iteration   2: 154.328 ns/op
Iteration   1: 156.966 ns/op
Iteration   2: 154.518 ns/op
Iteration   3: 154.262 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  155.249 ±(99.9%) 27.231 ns/op [Average]
  (min, avg, max) = (154.262, 155.249, 156.966), stdev = 1.493
  CI (99.9%): [128.017, 182.480] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 100000)

# Run progress: 34.38% complete, ETA 00:15:40
# Fork: 1 of 1
# Warmup Iteration   1: 164.960 ns/op
# Warmup Iteration   2: 154.440 ns/op
Iteration   1: 158.750 ns/op
Iteration   2: 160.502 ns/op
Iteration   3: 157.709 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  158.987 ±(99.9%) 25.757 ns/op [Average]
  (min, avg, max) = (157.709, 158.987, 160.502), stdev = 1.412
  CI (99.9%): [133.230, 184.744] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000000)

# Run progress: 35.94% complete, ETA 00:15:17
# Fork: 1 of 1
# Warmup Iteration   1: 167.469 ns/op
# Warmup Iteration   2: 153.349 ns/op
Iteration   1: 114.104 ns/op
Iteration   2: 110.452 ns/op
Iteration   3: 110.449 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  111.668 ±(99.9%) 38.480 ns/op [Average]
  (min, avg, max) = (110.449, 111.668, 114.104), stdev = 2.109
  CI (99.9%): [73.188, 150.148] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000)

# Run progress: 37.50% complete, ETA 00:14:58
# Fork: 1 of 1
# Warmup Iteration   1: 117.890 ns/op
# Warmup Iteration   2: 114.880 ns/op
Iteration   1: 84.663 ns/op
Iteration   2: 84.892 ns/op
Iteration   3: 84.863 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  84.806 ±(99.9%) 2.271 ns/op [Average]
  (min, avg, max) = (84.663, 84.806, 84.892), stdev = 0.125
  CI (99.9%): [82.535, 87.078] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 10000)

# Run progress: 39.06% complete, ETA 00:14:34
# Fork: 1 of 1
# Warmup Iteration   1: 120.965 ns/op
# Warmup Iteration   2: 115.229 ns/op
Iteration   1: 92.137 ns/op
Iteration   2: 93.261 ns/op
Iteration   3: 92.868 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  92.755 ±(99.9%) 10.404 ns/op [Average]
  (min, avg, max) = (92.137, 92.755, 93.261), stdev = 0.570
  CI (99.9%): [82.352, 103.159] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 100000)

# Run progress: 40.63% complete, ETA 00:14:11
# Fork: 1 of 1
# Warmup Iteration   1: 135.744 ns/op
# Warmup Iteration   2: 140.008 ns/op
Iteration   1: 83.808 ns/op
Iteration   2: 83.292 ns/op
Iteration   3: 83.242 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  83.447 ±(99.9%) 5.710 ns/op [Average]
  (min, avg, max) = (83.242, 83.447, 83.808), stdev = 0.313
  CI (99.9%): [77.737, 89.158] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000000)

# Run progress: 42.19% complete, ETA 00:13:48
# Fork: 1 of 1
# Warmup Iteration   1: 120.511 ns/op
# Warmup Iteration   2: 116.286 ns/op
Iteration   1: 95.579 ns/op
Iteration   2: 91.978 ns/op
Iteration   3: 91.277 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  92.945 ±(99.9%) 42.114 ns/op [Average]
  (min, avg, max) = (91.277, 92.945, 95.579), stdev = 2.308
  CI (99.9%): [50.831, 135.058] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000)

# Run progress: 43.75% complete, ETA 00:13:28
# Fork: 1 of 1
# Warmup Iteration   1: 114.287 ns/op
# Warmup Iteration   2: 111.555 ns/op
Iteration   1: 93.574 ns/op
Iteration   2: 91.795 ns/op
Iteration   3: 91.969 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  92.446 ±(99.9%) 17.896 ns/op [Average]
  (min, avg, max) = (91.795, 92.446, 93.574), stdev = 0.981
  CI (99.9%): [74.550, 110.342] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 10000)

# Run progress: 45.31% complete, ETA 00:13:05
# Fork: 1 of 1
# Warmup Iteration   1: 110.781 ns/op
# Warmup Iteration   2: 113.868 ns/op
Iteration   1: 102.485 ns/op
Iteration   2: 100.171 ns/op
Iteration   3: 101.243 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  101.300 ±(99.9%) 21.129 ns/op [Average]
  (min, avg, max) = (100.171, 101.300, 102.485), stdev = 1.158
  CI (99.9%): [80.170, 122.429] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 100000)

# Run progress: 46.88% complete, ETA 00:12:41
# Fork: 1 of 1
# Warmup Iteration   1: 114.926 ns/op
# Warmup Iteration   2: 111.957 ns/op
Iteration   1: 96.130 ns/op
Iteration   2: 95.681 ns/op
Iteration   3: 96.488 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  96.100 ±(99.9%) 7.376 ns/op [Average]
  (min, avg, max) = (95.681, 96.100, 96.488), stdev = 0.404
  CI (99.9%): [88.724, 103.476] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000000)

# Run progress: 48.44% complete, ETA 00:12:19
# Fork: 1 of 1
# Warmup Iteration   1: 115.152 ns/op
# Warmup Iteration   2: 115.472 ns/op
Iteration   1: 102.812 ns/op
Iteration   2: 97.178 ns/op
Iteration   3: 99.105 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  99.698 ±(99.9%) 52.244 ns/op [Average]
  (min, avg, max) = (97.178, 99.698, 102.812), stdev = 2.864
  CI (99.9%): [47.454, 151.942] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000)

# Run progress: 50.00% complete, ETA 00:11:58
# Fork: 1 of 1
# Warmup Iteration   1: 274.512 ns/op
# Warmup Iteration   2: 271.240 ns/op
Iteration   1: 272.810 ns/op
Iteration   2: 275.384 ns/op
Iteration   3: 272.623 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  273.606 ±(99.9%) 28.148 ns/op [Average]
  (min, avg, max) = (272.623, 273.606, 275.384), stdev = 1.543
  CI (99.9%): [245.458, 301.754] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 10000)

# Run progress: 51.56% complete, ETA 00:11:35
# Fork: 1 of 1
# Warmup Iteration   1: 359.265 ns/op
# Warmup Iteration   2: 349.862 ns/op
Iteration   1: 320.202 ns/op
Iteration   2: 319.341 ns/op
Iteration   3: 320.485 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  320.009 ±(99.9%) 10.867 ns/op [Average]
  (min, avg, max) = (319.341, 320.009, 320.485), stdev = 0.596
  CI (99.9%): [309.143, 330.876] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 100000)

# Run progress: 53.13% complete, ETA 00:11:12
# Fork: 1 of 1
# Warmup Iteration   1: 492.929 ns/op
# Warmup Iteration   2: 491.913 ns/op
Iteration   1: 495.063 ns/op
Iteration   2: 493.813 ns/op
Iteration   3: 499.674 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  496.183 ±(99.9%) 56.322 ns/op [Average]
  (min, avg, max) = (493.813, 496.183, 499.674), stdev = 3.087
  CI (99.9%): [439.862, 552.505] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000000)

# Run progress: 54.69% complete, ETA 00:10:49
# Fork: 1 of 1
# Warmup Iteration   1: 590.191 ns/op
# Warmup Iteration   2: 582.717 ns/op
Iteration   1: 581.743 ns/op
Iteration   2: 595.349 ns/op
Iteration   3: 596.076 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  591.056 ±(99.9%) 147.294 ns/op [Average]
  (min, avg, max) = (581.743, 591.056, 596.076), stdev = 8.074
  CI (99.9%): [443.762, 738.350] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000)

# Run progress: 56.25% complete, ETA 00:10:28
# Fork: 1 of 1
# Warmup Iteration   1: 184.752 ns/op
# Warmup Iteration   2: 182.305 ns/op
Iteration   1: 187.296 ns/op
Iteration   2: 185.323 ns/op
Iteration   3: 184.150 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  185.589 ±(99.9%) 29.002 ns/op [Average]
  (min, avg, max) = (184.150, 185.589, 187.296), stdev = 1.590
  CI (99.9%): [156.587, 214.592] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 10000)

# Run progress: 57.81% complete, ETA 00:10:05
# Fork: 1 of 1
# Warmup Iteration   1: 267.071 ns/op
# Warmup Iteration   2: 266.098 ns/op
Iteration   1: 272.406 ns/op
Iteration   2: 272.867 ns/op
Iteration   3: 270.392 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  271.888 ±(99.9%) 24.015 ns/op [Average]
  (min, avg, max) = (270.392, 271.888, 272.867), stdev = 1.316
  CI (99.9%): [247.873, 295.903] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 100000)

# Run progress: 59.38% complete, ETA 00:09:42
# Fork: 1 of 1
# Warmup Iteration   1: 349.347 ns/op
# Warmup Iteration   2: 348.696 ns/op
Iteration   1: 359.701 ns/op
Iteration   2: 351.833 ns/op
Iteration   3: 351.811 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  354.449 ±(99.9%) 82.990 ns/op [Average]
  (min, avg, max) = (351.811, 354.449, 359.701), stdev = 4.549
  CI (99.9%): [271.458, 437.439] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000000)

# Run progress: 60.94% complete, ETA 00:09:20
# Fork: 1 of 1
# Warmup Iteration   1: 457.608 ns/op
# Warmup Iteration   2: 446.021 ns/op
Iteration   1: 463.587 ns/op
Iteration   2: 467.286 ns/op
Iteration   3: 458.185 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  463.019 ±(99.9%) 83.502 ns/op [Average]
  (min, avg, max) = (458.185, 463.019, 467.286), stdev = 4.577
  CI (99.9%): [379.518, 546.521] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000)

# Run progress: 62.50% complete, ETA 00:08:58
# Fork: 1 of 1
# Warmup Iteration   1: 115.838 ns/op
# Warmup Iteration   2: 113.833 ns/op
Iteration   1: 76.191 ns/op
Iteration   2: 76.175 ns/op
Iteration   3: 76.122 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  76.163 ±(99.9%) 0.656 ns/op [Average]
  (min, avg, max) = (76.122, 76.163, 76.191), stdev = 0.036
  CI (99.9%): [75.507, 76.819] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 10000)

# Run progress: 64.06% complete, ETA 00:08:36
# Fork: 1 of 1
# Warmup Iteration   1: 117.021 ns/op
# Warmup Iteration   2: 113.936 ns/op
Iteration   1: 80.307 ns/op
Iteration   2: 80.022 ns/op
Iteration   3: 80.023 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  80.117 ±(99.9%) 3.001 ns/op [Average]
  (min, avg, max) = (80.022, 80.117, 80.307), stdev = 0.165
  CI (99.9%): [77.116, 83.118] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 100000)

# Run progress: 65.63% complete, ETA 00:08:13
# Fork: 1 of 1
# Warmup Iteration   1: 114.633 ns/op
# Warmup Iteration   2: 113.509 ns/op
Iteration   1: 82.842 ns/op
Iteration   2: 82.916 ns/op
Iteration   3: 82.782 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  82.846 ±(99.9%) 1.224 ns/op [Average]
  (min, avg, max) = (82.782, 82.846, 82.916), stdev = 0.067
  CI (99.9%): [81.623, 84.070] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000000)

# Run progress: 67.19% complete, ETA 00:07:50
# Fork: 1 of 1
# Warmup Iteration   1: 121.301 ns/op
# Warmup Iteration   2: 123.510 ns/op
Iteration   1: 78.021 ns/op
Iteration   2: 77.640 ns/op
Iteration   3: 77.698 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  77.787 ±(99.9%) 3.743 ns/op [Average]
  (min, avg, max) = (77.640, 77.787, 78.021), stdev = 0.205
  CI (99.9%): [74.043, 81.530] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000)

# Run progress: 68.75% complete, ETA 00:07:29
# Fork: 1 of 1
# Warmup Iteration   1: 61.034 ns/op
# Warmup Iteration   2: 60.774 ns/op
Iteration   1: 59.035 ns/op
Iteration   2: 58.902 ns/op
Iteration   3: 59.542 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  59.160 ±(99.9%) 6.160 ns/op [Average]
  (min, avg, max) = (58.902, 59.160, 59.542), stdev = 0.338
  CI (99.9%): [52.999, 65.320] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 10000)

# Run progress: 70.31% complete, ETA 00:07:06
# Fork: 1 of 1
# Warmup Iteration   1: 59.304 ns/op
# Warmup Iteration   2: 61.577 ns/op
Iteration   1: 55.467 ns/op
Iteration   2: 55.363 ns/op
Iteration   3: 55.431 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  55.420 ±(99.9%) 0.958 ns/op [Average]
  (min, avg, max) = (55.363, 55.420, 55.467), stdev = 0.053
  CI (99.9%): [54.462, 56.378] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 100000)

# Run progress: 71.88% complete, ETA 00:06:43
# Fork: 1 of 1
# Warmup Iteration   1: 51.044 ns/op
# Warmup Iteration   2: 51.735 ns/op
Iteration   1: 49.375 ns/op
Iteration   2: 49.439 ns/op
Iteration   3: 49.433 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  49.415 ±(99.9%) 0.637 ns/op [Average]
  (min, avg, max) = (49.375, 49.415, 49.439), stdev = 0.035
  CI (99.9%): [48.778, 50.053] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000000)

# Run progress: 73.44% complete, ETA 00:06:21
# Fork: 1 of 1
# Warmup Iteration   1: 59.576 ns/op
# Warmup Iteration   2: 60.085 ns/op
Iteration   1: 52.091 ns/op
Iteration   2: 52.118 ns/op
Iteration   3: 52.149 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  52.119 ±(99.9%) 0.536 ns/op [Average]
  (min, avg, max) = (52.091, 52.119, 52.149), stdev = 0.029
  CI (99.9%): [51.583, 52.656] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000)

# Run progress: 75.00% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: 105.145 ns/op
# Warmup Iteration   2: 99.119 ns/op
Iteration   1: 65.528 ns/op
Iteration   2: 65.486 ns/op
Iteration   3: 65.344 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  65.453 ±(99.9%) 1.760 ns/op [Average]
  (min, avg, max) = (65.344, 65.453, 65.528), stdev = 0.096
  CI (99.9%): [63.693, 67.212] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 10000)

# Run progress: 76.56% complete, ETA 00:05:36
# Fork: 1 of 1
# Warmup Iteration   1: 119.887 ns/op
# Warmup Iteration   2: 115.443 ns/op
Iteration   1: 78.705 ns/op
Iteration   2: 77.124 ns/op
Iteration   3: 77.030 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  77.620 ±(99.9%) 17.163 ns/op [Average]
  (min, avg, max) = (77.030, 77.620, 78.705), stdev = 0.941
  CI (99.9%): [60.456, 94.783] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 100000)

# Run progress: 78.13% complete, ETA 00:05:13
# Fork: 1 of 1
# Warmup Iteration   1: 118.056 ns/op
# Warmup Iteration   2: 114.957 ns/op
Iteration   1: 83.256 ns/op
Iteration   2: 83.185 ns/op
Iteration   3: 83.258 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  83.233 ±(99.9%) 0.761 ns/op [Average]
  (min, avg, max) = (83.185, 83.233, 83.258), stdev = 0.042
  CI (99.9%): [82.472, 83.994] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000000)

# Run progress: 79.69% complete, ETA 00:04:51
# Fork: 1 of 1
# Warmup Iteration   1: 132.137 ns/op
# Warmup Iteration   2: 132.658 ns/op
Iteration   1: 87.423 ns/op
Iteration   2: 87.700 ns/op
Iteration   3: 88.882 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  88.002 ±(99.9%) 14.134 ns/op [Average]
  (min, avg, max) = (87.423, 88.002, 88.882), stdev = 0.775
  CI (99.9%): [73.868, 102.136] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000)

# Run progress: 81.25% complete, ETA 00:04:29
# Fork: 1 of 1
# Warmup Iteration   1: 51.841 ns/op
# Warmup Iteration   2: 53.050 ns/op
Iteration   1: 51.195 ns/op
Iteration   2: 51.197 ns/op
Iteration   3: 51.175 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  51.189 ±(99.9%) 0.222 ns/op [Average]
  (min, avg, max) = (51.175, 51.189, 51.197), stdev = 0.012
  CI (99.9%): [50.967, 51.411] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 10000)

# Run progress: 82.81% complete, ETA 00:04:06
# Fork: 1 of 1
# Warmup Iteration   1: 61.119 ns/op
# Warmup Iteration   2: 63.455 ns/op
Iteration   1: 61.528 ns/op
Iteration   2: 61.446 ns/op
Iteration   3: 61.519 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  61.498 ±(99.9%) 0.819 ns/op [Average]
  (min, avg, max) = (61.446, 61.498, 61.528), stdev = 0.045
  CI (99.9%): [60.679, 62.317] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 100000)

# Run progress: 84.38% complete, ETA 00:03:44
# Fork: 1 of 1
# Warmup Iteration   1: 51.364 ns/op
# Warmup Iteration   2: 51.519 ns/op
Iteration   1: 48.625 ns/op
Iteration   2: 48.628 ns/op
Iteration   3: 48.638 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  48.630 ±(99.9%) 0.127 ns/op [Average]
  (min, avg, max) = (48.625, 48.630, 48.638), stdev = 0.007
  CI (99.9%): [48.504, 48.757] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000000)

# Run progress: 85.94% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 59.664 ns/op
# Warmup Iteration   2: 59.636 ns/op
Iteration   1: 57.784 ns/op
Iteration   2: 57.659 ns/op
Iteration   3: 57.697 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  57.713 ±(99.9%) 1.170 ns/op [Average]
  (min, avg, max) = (57.659, 57.713, 57.784), stdev = 0.064
  CI (99.9%): [56.543, 58.883] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000)

# Run progress: 87.50% complete, ETA 00:02:59
# Fork: 1 of 1
# Warmup Iteration   1: 257.992 ns/op
# Warmup Iteration   2: 251.803 ns/op
Iteration   1: 253.209 ns/op
Iteration   2: 253.447 ns/op
Iteration   3: 253.687 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  253.448 ±(99.9%) 4.359 ns/op [Average]
  (min, avg, max) = (253.209, 253.448, 253.687), stdev = 0.239
  CI (99.9%): [249.089, 257.807] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 10000)

# Run progress: 89.06% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: 355.741 ns/op
# Warmup Iteration   2: 357.382 ns/op
Iteration   1: 333.252 ns/op
Iteration   2: 335.303 ns/op
Iteration   3: 333.087 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  333.881 ±(99.9%) 22.523 ns/op [Average]
  (min, avg, max) = (333.087, 333.881, 335.303), stdev = 1.235
  CI (99.9%): [311.358, 356.404] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 100000)

# Run progress: 90.63% complete, ETA 00:02:14
# Fork: 1 of 1
# Warmup Iteration   1: 400.938 ns/op
# Warmup Iteration   2: 393.998 ns/op
Iteration   1: 392.250 ns/op
Iteration   2: 393.960 ns/op
Iteration   3: 392.456 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  392.889 ±(99.9%) 17.035 ns/op [Average]
  (min, avg, max) = (392.250, 392.889, 393.960), stdev = 0.934
  CI (99.9%): [375.854, 409.923] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000000)

# Run progress: 92.19% complete, ETA 00:01:52
# Fork: 1 of 1
# Warmup Iteration   1: 482.551 ns/op
# Warmup Iteration   2: 479.651 ns/op
Iteration   1: 481.934 ns/op
Iteration   2: 476.208 ns/op
Iteration   3: 475.377 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  477.840 ±(99.9%) 65.137 ns/op [Average]
  (min, avg, max) = (475.377, 477.840, 481.934), stdev = 3.570
  CI (99.9%): [412.703, 542.976] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000)

# Run progress: 93.75% complete, ETA 00:01:29
# Fork: 1 of 1
# Warmup Iteration   1: 191.724 ns/op
# Warmup Iteration   2: 192.361 ns/op
Iteration   1: 193.322 ns/op
Iteration   2: 190.569 ns/op
Iteration   3: 190.258 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  191.383 ±(99.9%) 30.768 ns/op [Average]
  (min, avg, max) = (190.258, 191.383, 193.322), stdev = 1.687
  CI (99.9%): [160.615, 222.151] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 10000)

# Run progress: 95.31% complete, ETA 00:01:07
# Fork: 1 of 1
# Warmup Iteration   1: 267.732 ns/op
# Warmup Iteration   2: 264.665 ns/op
Iteration   1: 275.049 ns/op
Iteration   2: 271.803 ns/op
Iteration   3: 270.607 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  272.486 ±(99.9%) 41.934 ns/op [Average]
  (min, avg, max) = (270.607, 272.486, 275.049), stdev = 2.299
  CI (99.9%): [230.553, 314.420] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 100000)

# Run progress: 96.88% complete, ETA 00:00:44
# Fork: 1 of 1
# Warmup Iteration   1: 327.751 ns/op
# Warmup Iteration   2: 325.753 ns/op
Iteration   1: 335.767 ns/op
Iteration   2: 331.651 ns/op
Iteration   3: 331.899 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  333.106 ±(99.9%) 42.113 ns/op [Average]
  (min, avg, max) = (331.651, 333.106, 335.767), stdev = 2.308
  CI (99.9%): [290.993, 375.219] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000000)

# Run progress: 98.44% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 409.818 ns/op
# Warmup Iteration   2: 401.684 ns/op
Iteration   1: 419.618 ns/op
Iteration   2: 415.802 ns/op
Iteration   3: 408.682 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  414.700 ±(99.9%) 101.260 ns/op [Average]
  (min, avg, max) = (408.682, 414.700, 419.618), stdev = 5.550
  CI (99.9%): [313.440, 515.961] (assumes normal distribution)


# Run complete. Total time: 00:23:57

Benchmark                                         (size)  Mode  Cnt    Score     Error  Units
SetMapJavaVsScalaBenchmarks.javaMapHit              1000  avgt    3   95.318 ±  53.363  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit             10000  avgt    3  109.439 ±  35.512  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit            100000  avgt    3  114.341 ±  29.184  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit           1000000  avgt    3   90.545 ±  19.529  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss             1000  avgt    3   82.930 ±  23.468  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss            10000  avgt    3   89.087 ±  39.302  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss           100000  avgt    3   89.570 ±  18.720  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss          1000000  avgt    3   92.031 ±  47.545  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit              1000  avgt    3   80.191 ±  11.223  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit             10000  avgt    3   86.387 ±  42.422  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit            100000  avgt    3   83.591 ±  15.767  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit           1000000  avgt    3   89.951 ±  17.596  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss             1000  avgt    3   91.106 ±  20.903  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss            10000  avgt    3   90.176 ±  22.625  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss           100000  avgt    3   93.580 ±   4.822  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss          1000000  avgt    3   96.194 ±  37.862  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit       1000  avgt    3   89.343 ±  19.059  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit      10000  avgt    3   85.877 ±  17.992  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit     100000  avgt    3   96.506 ±  17.052  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit    1000000  avgt    3  140.923 ±  67.170  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss      1000  avgt    3  149.476 ±  30.819  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss     10000  avgt    3  155.249 ±  27.231  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss    100000  avgt    3  158.987 ±  25.757  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss   1000000  avgt    3  111.668 ±  38.480  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit       1000  avgt    3   84.806 ±   2.271  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit      10000  avgt    3   92.755 ±  10.404  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit     100000  avgt    3   83.447 ±   5.710  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit    1000000  avgt    3   92.945 ±  42.114  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss      1000  avgt    3   92.446 ±  17.896  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss     10000  avgt    3  101.300 ±  21.129  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss    100000  avgt    3   96.100 ±   7.376  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss   1000000  avgt    3   99.698 ±  52.244  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit             1000  avgt    3  273.606 ±  28.148  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit            10000  avgt    3  320.009 ±  10.867  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit           100000  avgt    3  496.183 ±  56.322  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit          1000000  avgt    3  591.056 ± 147.294  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss            1000  avgt    3  185.589 ±  29.002  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss           10000  avgt    3  271.888 ±  24.015  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss          100000  avgt    3  354.449 ±  82.990  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss         1000000  avgt    3  463.019 ±  83.502  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit      1000  avgt    3   76.163 ±   0.656  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit     10000  avgt    3   80.117 ±   3.001  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit    100000  avgt    3   82.846 ±   1.224  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit   1000000  avgt    3   77.787 ±   3.743  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss     1000  avgt    3   59.160 ±   6.160  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss    10000  avgt    3   55.420 ±   0.958  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss   100000  avgt    3   49.415 ±   0.637  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss  1000000  avgt    3   52.119 ±   0.536  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit      1000  avgt    3   65.453 ±   1.760  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit     10000  avgt    3   77.620 ±  17.163  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit    100000  avgt    3   83.233 ±   0.761  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit   1000000  avgt    3   88.002 ±  14.134  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss     1000  avgt    3   51.189 ±   0.222  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss    10000  avgt    3   61.498 ±   0.819  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss   100000  avgt    3   48.630 ±   0.127  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss  1000000  avgt    3   57.713 ±   1.170  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit             1000  avgt    3  253.448 ±   4.359  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit            10000  avgt    3  333.881 ±  22.523  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit           100000  avgt    3  392.889 ±  17.035  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit          1000000  avgt    3  477.840 ±  65.137  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss            1000  avgt    3  191.383 ±  30.768  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss           10000  avgt    3  272.486 ±  41.934  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss          100000  avgt    3  333.106 ±  42.113  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss         1000000  avgt    3  414.700 ± 101.260  ns/op

Benchmark result is saved to /static/data/charts/set-map-java-vs-scala-2-13/jdk17.json
