# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1)

# Run progress: 0.00% complete, ETA 04:12:00
# Fork: 1 of 1
# Warmup Iteration   1: 3.161 ns/op
Iteration   1: 3.157 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  3.157 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10)

# Run progress: 0.13% complete, ETA 04:16:59
# Fork: 1 of 1
# Warmup Iteration   1: 23.336 ns/op
Iteration   1: 22.992 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22.992 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100)

# Run progress: 0.26% complete, ETA 04:16:53
# Fork: 1 of 1
# Warmup Iteration   1: 232.558 ns/op
Iteration   1: 231.100 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  231.100 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000)

# Run progress: 0.40% complete, ETA 04:16:43
# Fork: 1 of 1
# Warmup Iteration   1: 2224.381 ns/op
Iteration   1: 2215.656 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2215.656 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10000)

# Run progress: 0.53% complete, ETA 04:16:32
# Fork: 1 of 1
# Warmup Iteration   1: 22377.877 ns/op
Iteration   1: 22245.291 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22245.291 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100000)

# Run progress: 0.66% complete, ETA 04:16:29
# Fork: 1 of 1
# Warmup Iteration   1: 224552.901 ns/op
Iteration   1: 239839.463 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  239839.463 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000000)

# Run progress: 0.79% complete, ETA 04:17:30
# Fork: 1 of 1
# Warmup Iteration   1: 2532032.069 ns/op
Iteration   1: 2311683.987 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2311683.987 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 0.93% complete, ETA 04:25:13
# Fork: 1 of 1
# Warmup Iteration   1: 3.159 ns/op
Iteration   1: 3.154 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  3.154 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 1.06% complete, ETA 04:23:39
# Fork: 1 of 1
# Warmup Iteration   1: 23.352 ns/op
Iteration   1: 23.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  23.000 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 1.19% complete, ETA 04:22:22
# Fork: 1 of 1
# Warmup Iteration   1: 232.855 ns/op
Iteration   1: 230.630 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  230.630 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 1.32% complete, ETA 04:21:14
# Fork: 1 of 1
# Warmup Iteration   1: 2222.312 ns/op
Iteration   1: 2222.707 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2222.707 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 1.46% complete, ETA 04:20:18
# Fork: 1 of 1
# Warmup Iteration   1: 22326.877 ns/op
Iteration   1: 22244.021 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22244.021 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 1.59% complete, ETA 04:19:35
# Fork: 1 of 1
# Warmup Iteration   1: 225361.420 ns/op
Iteration   1: 239508.518 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  239508.518 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 1.72% complete, ETA 04:19:32
# Fork: 1 of 1
# Warmup Iteration   1: 2525495.158 ns/op
Iteration   1: 2311231.033 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2311231.033 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1)

# Run progress: 1.85% complete, ETA 04:23:48
# Fork: 1 of 1
# Warmup Iteration   1: 3.152 ns/op
Iteration   1: 3.153 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  3.153 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10)

# Run progress: 1.98% complete, ETA 04:22:43
# Fork: 1 of 1
# Warmup Iteration   1: 23.380 ns/op
Iteration   1: 23.025 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  23.025 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100)

# Run progress: 2.12% complete, ETA 04:21:43
# Fork: 1 of 1
# Warmup Iteration   1: 232.626 ns/op
Iteration   1: 230.704 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  230.704 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000)

# Run progress: 2.25% complete, ETA 04:20:50
# Fork: 1 of 1
# Warmup Iteration   1: 2222.696 ns/op
Iteration   1: 2224.703 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2224.703 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10000)

# Run progress: 2.38% complete, ETA 04:20:01
# Fork: 1 of 1
# Warmup Iteration   1: 22332.793 ns/op
Iteration   1: 22272.350 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22272.350 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100000)

# Run progress: 2.51% complete, ETA 04:19:18
# Fork: 1 of 1
# Warmup Iteration   1: 224638.783 ns/op
Iteration   1: 239727.147 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  239727.147 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000000)

# Run progress: 2.65% complete, ETA 04:18:57
# Fork: 1 of 1
# Warmup Iteration   1: 2531300.364 ns/op
Iteration   1: 2310196.855 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2310196.855 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1)

# Run progress: 2.78% complete, ETA 04:21:01
# Fork: 1 of 1
# Warmup Iteration   1: 3.030 ns/op
Iteration   1: 3.092 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  3.092 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10)

# Run progress: 2.91% complete, ETA 04:20:11
# Fork: 1 of 1
# Warmup Iteration   1: 23.753 ns/op
Iteration   1: 23.189 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  23.189 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100)

# Run progress: 3.04% complete, ETA 04:19:23
# Fork: 1 of 1
# Warmup Iteration   1: 242.943 ns/op
Iteration   1: 231.414 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  231.414 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000)

# Run progress: 3.17% complete, ETA 04:18:39
# Fork: 1 of 1
# Warmup Iteration   1: 2306.793 ns/op
Iteration   1: 2220.111 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2220.111 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10000)

# Run progress: 3.31% complete, ETA 04:17:57
# Fork: 1 of 1
# Warmup Iteration   1: 22948.070 ns/op
Iteration   1: 22266.381 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22266.381 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100000)

# Run progress: 3.44% complete, ETA 04:17:19
# Fork: 1 of 1
# Warmup Iteration   1: 222878.067 ns/op
Iteration   1: 231072.803 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  231072.803 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000000)

# Run progress: 3.57% complete, ETA 04:16:58
# Fork: 1 of 1
# Warmup Iteration   1: 2433127.597 ns/op
Iteration   1: 2290859.907 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2290859.907 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 3.70% complete, ETA 04:18:22
# Fork: 1 of 1
# Warmup Iteration   1: 3.032 ns/op
Iteration   1: 3.089 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  3.089 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 3.84% complete, ETA 04:17:39
# Fork: 1 of 1
# Warmup Iteration   1: 23.802 ns/op
Iteration   1: 23.214 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  23.214 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 3.97% complete, ETA 04:16:58
# Fork: 1 of 1
# Warmup Iteration   1: 241.011 ns/op
Iteration   1: 231.698 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  231.698 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 4.10% complete, ETA 04:16:18
# Fork: 1 of 1
# Warmup Iteration   1: 2313.077 ns/op
Iteration   1: 2217.796 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2217.796 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 4.23% complete, ETA 04:15:41
# Fork: 1 of 1
# Warmup Iteration   1: 22930.297 ns/op
Iteration   1: 22208.657 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22208.657 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 4.37% complete, ETA 04:15:07
# Fork: 1 of 1
# Warmup Iteration   1: 225133.427 ns/op
Iteration   1: 230726.036 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  230726.036 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 4.50% complete, ETA 04:14:48
# Fork: 1 of 1
# Warmup Iteration   1: 2379962.125 ns/op
Iteration   1: 2253917.707 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2253917.707 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1)

# Run progress: 4.63% complete, ETA 04:16:09
# Fork: 1 of 1
# Warmup Iteration   1: 3.030 ns/op
Iteration   1: 3.090 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  3.090 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10)

# Run progress: 4.76% complete, ETA 04:15:30
# Fork: 1 of 1
# Warmup Iteration   1: 23.896 ns/op
Iteration   1: 23.205 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  23.205 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100)

# Run progress: 4.89% complete, ETA 04:14:52
# Fork: 1 of 1
# Warmup Iteration   1: 240.396 ns/op
Iteration   1: 230.829 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  230.829 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000)

# Run progress: 5.03% complete, ETA 04:14:15
# Fork: 1 of 1
# Warmup Iteration   1: 2310.253 ns/op
Iteration   1: 2214.663 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2214.663 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10000)

# Run progress: 5.16% complete, ETA 04:13:40
# Fork: 1 of 1
# Warmup Iteration   1: 22948.816 ns/op
Iteration   1: 22185.262 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22185.262 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100000)

# Run progress: 5.29% complete, ETA 04:13:08
# Fork: 1 of 1
# Warmup Iteration   1: 223446.565 ns/op
Iteration   1: 230997.880 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  230997.880 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000000)

# Run progress: 5.42% complete, ETA 04:12:45
# Fork: 1 of 1
# Warmup Iteration   1: 2377407.742 ns/op
Iteration   1: 2251523.314 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2251523.314 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1)

# Run progress: 5.56% complete, ETA 04:13:34
# Fork: 1 of 1
# Warmup Iteration   1: 14.984 ns/op
Iteration   1: 15.034 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  15.034 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10)

# Run progress: 5.69% complete, ETA 04:12:59
# Fork: 1 of 1
# Warmup Iteration   1: 149.172 ns/op
Iteration   1: 146.994 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  146.994 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100)

# Run progress: 5.82% complete, ETA 04:12:24
# Fork: 1 of 1
# Warmup Iteration   1: 1423.584 ns/op
Iteration   1: 1398.757 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1398.757 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000)

# Run progress: 5.95% complete, ETA 04:11:49
# Fork: 1 of 1
# Warmup Iteration   1: 14148.131 ns/op
Iteration   1: 14205.686 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  14205.686 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10000)

# Run progress: 6.08% complete, ETA 04:11:16
# Fork: 1 of 1
# Warmup Iteration   1: 141981.624 ns/op
Iteration   1: 141185.479 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  141185.479 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100000)

# Run progress: 6.22% complete, ETA 04:10:47
# Fork: 1 of 1
# Warmup Iteration   1: 1422202.839 ns/op
Iteration   1: 1396253.462 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1396253.462 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000000)

# Run progress: 6.35% complete, ETA 04:10:24
# Fork: 1 of 1
# Warmup Iteration   1: 14495781.371 ns/op
Iteration   1: 14324688.432 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  14324688.432 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 6.48% complete, ETA 04:11:00
# Fork: 1 of 1
# Warmup Iteration   1: 14.997 ns/op
Iteration   1: 15.075 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  15.075 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 6.61% complete, ETA 04:10:26
# Fork: 1 of 1
# Warmup Iteration   1: 149.117 ns/op
Iteration   1: 146.967 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  146.967 ns/op


# JMH 1.17.4 (released 343 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 6.75% complete, ETA 04:09:54
# Fork: 1 of 1
# Warmup Iteration   1: 1437.012 ns/op
Iteration   1: 1415.305 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1415.305 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 6.88% complete, ETA 04:09:22
# Fork: 1 of 1
# Warmup Iteration   1: 14173.306 ns/op
Iteration   1: 13995.079 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  13995.079 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 7.01% complete, ETA 04:08:50
# Fork: 1 of 1
# Warmup Iteration   1: 141473.536 ns/op
Iteration   1: 141904.940 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  141904.940 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 7.14% complete, ETA 04:08:21
# Fork: 1 of 1
# Warmup Iteration   1: 1424949.481 ns/op
Iteration   1: 1506096.634 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1506096.634 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 7.28% complete, ETA 04:08:00
# Fork: 1 of 1
# Warmup Iteration   1: 14371631.925 ns/op
Iteration   1: 14289362.161 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  14289362.161 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1)

# Run progress: 7.41% complete, ETA 04:08:41
# Fork: 1 of 1
# Warmup Iteration   1: 15.004 ns/op
Iteration   1: 15.105 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  15.105 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10)

# Run progress: 7.54% complete, ETA 04:08:09
# Fork: 1 of 1
# Warmup Iteration   1: 150.045 ns/op
Iteration   1: 152.362 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  152.362 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100)

# Run progress: 7.67% complete, ETA 04:07:38
# Fork: 1 of 1
# Warmup Iteration   1: 1429.495 ns/op
Iteration   1: 1404.199 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1404.199 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000)

# Run progress: 7.80% complete, ETA 04:07:07
# Fork: 1 of 1
# Warmup Iteration   1: 14211.824 ns/op
Iteration   1: 14050.619 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  14050.619 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10000)

# Run progress: 7.94% complete, ETA 04:06:36
# Fork: 1 of 1
# Warmup Iteration   1: 145768.734 ns/op
Iteration   1: 142743.376 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  142743.376 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100000)

# Run progress: 8.07% complete, ETA 04:06:07
# Fork: 1 of 1
# Warmup Iteration   1: 1423853.772 ns/op
Iteration   1: 1393431.241 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1393431.241 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000000)

# Run progress: 8.20% complete, ETA 04:05:45
# Fork: 1 of 1
# Warmup Iteration   1: 14317303.911 ns/op
Iteration   1: 14290385.561 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  14290385.561 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1)

# Run progress: 8.33% complete, ETA 04:06:07
# Fork: 1 of 1
# Warmup Iteration   1: 215.454 ns/op
Iteration   1: 215.220 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  215.220 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10)

# Run progress: 8.47% complete, ETA 04:05:37
# Fork: 1 of 1
# Warmup Iteration   1: 2151.269 ns/op
Iteration   1: 2143.731 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2143.731 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100)

# Run progress: 8.60% complete, ETA 04:05:06
# Fork: 1 of 1
# Warmup Iteration   1: 21384.980 ns/op
Iteration   1: 21373.212 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  21373.212 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000)

# Run progress: 8.73% complete, ETA 04:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 214220.967 ns/op
Iteration   1: 213704.061 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  213704.061 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10000)

# Run progress: 8.86% complete, ETA 04:04:08
# Fork: 1 of 1
# Warmup Iteration   1: 2143131.735 ns/op
Iteration   1: 2135233.001 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2135233.001 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100000)

# Run progress: 8.99% complete, ETA 04:03:41
# Fork: 1 of 1
# Warmup Iteration   1: 21395426.897 ns/op
Iteration   1: 21414938.914 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  21414938.914 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000000)

# Run progress: 9.13% complete, ETA 04:03:19
# Fork: 1 of 1
# Warmup Iteration   1: 215793275.298 ns/op
Iteration   1: 213481545.064 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  213481545.064 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 9.26% complete, ETA 04:03:38
# Fork: 1 of 1
# Warmup Iteration   1: 215.549 ns/op
Iteration   1: 215.015 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  215.015 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 9.39% complete, ETA 04:03:08
# Fork: 1 of 1
# Warmup Iteration   1: 2145.834 ns/op
Iteration   1: 2142.769 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2142.769 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 9.52% complete, ETA 04:02:39
# Fork: 1 of 1
# Warmup Iteration   1: 21370.577 ns/op
Iteration   1: 21413.414 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  21413.414 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 9.66% complete, ETA 04:02:10
# Fork: 1 of 1
# Warmup Iteration   1: 213927.697 ns/op
Iteration   1: 213699.652 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  213699.652 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 9.79% complete, ETA 04:01:42
# Fork: 1 of 1
# Warmup Iteration   1: 2145967.270 ns/op
Iteration   1: 2136256.571 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2136256.571 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 9.92% complete, ETA 04:01:15
# Fork: 1 of 1
# Warmup Iteration   1: 21376497.733 ns/op
Iteration   1: 21329007.881 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  21329007.881 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 10.05% complete, ETA 04:00:54
# Fork: 1 of 1
# Warmup Iteration   1: 214998119.021 ns/op
Iteration   1: 213716283.851 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  213716283.851 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1)

# Run progress: 10.19% complete, ETA 04:01:17
# Fork: 1 of 1
# Warmup Iteration   1: 215.860 ns/op
Iteration   1: 215.388 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  215.388 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10)

# Run progress: 10.32% complete, ETA 04:00:48
# Fork: 1 of 1
# Warmup Iteration   1: 2154.575 ns/op
Iteration   1: 2145.016 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2145.016 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100)

# Run progress: 10.45% complete, ETA 04:00:19
# Fork: 1 of 1
# Warmup Iteration   1: 21391.299 ns/op
Iteration   1: 21384.739 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  21384.739 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000)

# Run progress: 10.58% complete, ETA 03:59:51
# Fork: 1 of 1
# Warmup Iteration   1: 213969.090 ns/op
Iteration   1: 213504.370 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  213504.370 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10000)

# Run progress: 10.71% complete, ETA 03:59:23
# Fork: 1 of 1
# Warmup Iteration   1: 2147267.851 ns/op
Iteration   1: 2134137.893 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2134137.893 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100000)

# Run progress: 10.85% complete, ETA 03:58:56
# Fork: 1 of 1
# Warmup Iteration   1: 21416422.747 ns/op
Iteration   1: 21358820.207 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  21358820.207 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000000)

# Run progress: 10.98% complete, ETA 03:58:34
# Fork: 1 of 1
# Warmup Iteration   1: 214779240.191 ns/op
Iteration   1: 213646577.617 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  213646577.617 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1)

# Run progress: 11.11% complete, ETA 03:58:45
# Fork: 1 of 1
# Warmup Iteration   1: 2973.592 ns/op
Iteration   1: 2748.029 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  2748.029 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10)

# Run progress: 11.24% complete, ETA 03:58:17
# Fork: 1 of 1
# Warmup Iteration   1: 12692.896 ns/op
Iteration   1: 9492.715 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  9492.715 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100)

# Run progress: 11.38% complete, ETA 03:57:49
# Fork: 1 of 1
# Warmup Iteration   1: 114831.896 ns/op
Iteration   1: 84477.525 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  84477.525 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000)

# Run progress: 11.51% complete, ETA 03:57:21
# Fork: 1 of 1
# Warmup Iteration   1: 1136369.085 ns/op
Iteration   1: 837570.670 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  837570.670 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10000)

# Run progress: 11.64% complete, ETA 03:56:54
# Fork: 1 of 1
# Warmup Iteration   1: 11268266.675 ns/op
Iteration   1: 8345107.379 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  8345107.379 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100000)

# Run progress: 11.77% complete, ETA 03:56:27
# Fork: 1 of 1
# Warmup Iteration   1: 109107131.207 ns/op
Iteration   1: 84187546.008 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  84187546.008 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000000)

# Run progress: 11.90% complete, ETA 03:56:06
# Fork: 1 of 1
# Warmup Iteration   1: 850355360.083 ns/op
Iteration   1: 841275235.417 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  841275235.417 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 12.04% complete, ETA 03:56:14
# Fork: 1 of 1
# Warmup Iteration   1: 3087.481 ns/op
Iteration   1: 2774.194 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  2774.194 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 12.17% complete, ETA 03:55:46
# Fork: 1 of 1
# Warmup Iteration   1: 22344.871 ns/op
Iteration   1: 16796.626 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  16796.626 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 12.30% complete, ETA 03:55:19
# Fork: 1 of 1
# Warmup Iteration   1: 300799.419 ns/op
Iteration   1: 226885.885 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  226885.885 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 12.43% complete, ETA 03:54:51
# Fork: 1 of 1
# Warmup Iteration   1: 2452454.006 ns/op
Iteration   1: 1723624.344 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1723624.344 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 12.57% complete, ETA 03:54:25
# Fork: 1 of 1
# Warmup Iteration   1: 23828578.843 ns/op
Iteration   1: 17323945.024 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  17323945.024 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 12.70% complete, ETA 03:53:59
# Fork: 1 of 1
# Warmup Iteration   1: 227699593.500 ns/op
Iteration   1: 173904046.224 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  173904046.224 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 12.83% complete, ETA 03:53:38
# Fork: 1 of 1
# Warmup Iteration   1: 1927337379.333 ns/op
Iteration   1: 1722763565.667 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1722763565.667 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1)

# Run progress: 12.96% complete, ETA 03:53:59
# Fork: 1 of 1
# Warmup Iteration   1: 2929.402 ns/op
Iteration   1: 2723.077 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  2723.077 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10)

# Run progress: 13.10% complete, ETA 03:53:32
# Fork: 1 of 1
# Warmup Iteration   1: 17891.535 ns/op
Iteration   1: 13447.251 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  13447.251 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100)

# Run progress: 13.23% complete, ETA 03:53:05
# Fork: 1 of 1
# Warmup Iteration   1: 220659.069 ns/op
Iteration   1: 173371.627 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  173371.627 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000)

# Run progress: 13.36% complete, ETA 03:52:38
# Fork: 1 of 1
# Warmup Iteration   1: 1738071.445 ns/op
Iteration   1: 1311206.027 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1311206.027 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10000)

# Run progress: 13.49% complete, ETA 03:52:11
# Fork: 1 of 1
# Warmup Iteration   1: 17038079.187 ns/op
Iteration   1: 13059207.923 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  13059207.923 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100000)

# Run progress: 13.62% complete, ETA 03:51:46
# Fork: 1 of 1
# Warmup Iteration   1: 165155604.934 ns/op
Iteration   1: 131359780.364 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  131359780.364 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000000)

# Run progress: 13.76% complete, ETA 03:51:25
# Fork: 1 of 1
# Warmup Iteration   1: 1345212011.625 ns/op
Iteration   1: 1293878818.250 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1293878818.250 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1)

# Run progress: 13.89% complete, ETA 03:51:34
# Fork: 1 of 1
# Warmup Iteration   1: 2914.395 ns/op
Iteration   1: 2716.090 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  2716.090 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10)

# Run progress: 14.02% complete, ETA 03:51:07
# Fork: 1 of 1
# Warmup Iteration   1: 10210.364 ns/op
Iteration   1: 7550.411 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  7550.411 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100)

# Run progress: 14.15% complete, ETA 03:50:40
# Fork: 1 of 1
# Warmup Iteration   1: 87258.079 ns/op
Iteration   1: 62523.957 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  62523.957 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000)

# Run progress: 14.29% complete, ETA 03:50:14
# Fork: 1 of 1
# Warmup Iteration   1: 844942.992 ns/op
Iteration   1: 604862.667 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  604862.667 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10000)

# Run progress: 14.42% complete, ETA 03:49:48
# Fork: 1 of 1
# Warmup Iteration   1: 8423023.691 ns/op
Iteration   1: 6057536.997 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  6057536.997 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100000)

# Run progress: 14.55% complete, ETA 03:49:22
# Fork: 1 of 1
# Warmup Iteration   1: 78920978.567 ns/op
Iteration   1: 60008154.060 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  60008154.060 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000000)

# Run progress: 14.68% complete, ETA 03:49:00
# Fork: 1 of 1
# Warmup Iteration   1: 615457527.118 ns/op
Iteration   1: 600859334.235 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  600859334.235 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 14.81% complete, ETA 03:49:04
# Fork: 1 of 1
# Warmup Iteration   1: 3089.997 ns/op
Iteration   1: 2826.138 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  2826.138 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 14.95% complete, ETA 03:48:37
# Fork: 1 of 1
# Warmup Iteration   1: 20353.249 ns/op
Iteration   1: 14983.918 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  14983.918 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 15.08% complete, ETA 03:48:11
# Fork: 1 of 1
# Warmup Iteration   1: 268042.187 ns/op
Iteration   1: 196857.429 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  196857.429 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 15.21% complete, ETA 03:47:45
# Fork: 1 of 1
# Warmup Iteration   1: 2097953.995 ns/op
Iteration   1: 1491690.062 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1491690.062 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 15.34% complete, ETA 03:47:19
# Fork: 1 of 1
# Warmup Iteration   1: 20930529.563 ns/op
Iteration   1: 14926982.925 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  14926982.925 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 15.48% complete, ETA 03:46:54
# Fork: 1 of 1
# Warmup Iteration   1: 196362827.745 ns/op
Iteration   1: 150211083.388 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  150211083.388 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 15.61% complete, ETA 03:46:33
# Fork: 1 of 1
# Warmup Iteration   1: 1594585539.857 ns/op
Iteration   1: 1494990771.429 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1494990771.429 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1)

# Run progress: 15.74% complete, ETA 03:46:44
# Fork: 1 of 1
# Warmup Iteration   1: 2937.673 ns/op
Iteration   1: 2740.118 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  2740.118 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10)

# Run progress: 15.87% complete, ETA 03:46:18
# Fork: 1 of 1
# Warmup Iteration   1: 15200.968 ns/op
Iteration   1: 11520.574 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  11520.574 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100)

# Run progress: 16.01% complete, ETA 03:45:51
# Fork: 1 of 1
# Warmup Iteration   1: 192952.702 ns/op
Iteration   1: 149620.046 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  149620.046 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000)

# Run progress: 16.14% complete, ETA 03:45:26
# Fork: 1 of 1
# Warmup Iteration   1: 1468185.486 ns/op
Iteration   1: 1091382.781 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1091382.781 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10000)

# Run progress: 16.27% complete, ETA 03:45:00
# Fork: 1 of 1
# Warmup Iteration   1: 14694764.969 ns/op
Iteration   1: 10965854.904 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  10965854.904 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100000)

# Run progress: 16.40% complete, ETA 03:44:35
# Fork: 1 of 1
# Warmup Iteration   1: 143238031.914 ns/op
Iteration   1: 109774794.109 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  109774794.109 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000000)

# Run progress: 16.53% complete, ETA 03:44:13
# Fork: 1 of 1
# Warmup Iteration   1: 1159517834.889 ns/op
Iteration   1: 1093104956.300 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1093104956.300 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1)

# Run progress: 16.67% complete, ETA 03:44:17
# Fork: 1 of 1
# Warmup Iteration   1: 2888.561 ns/op
Iteration   1: 2686.242 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  2686.242 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10)

# Run progress: 16.80% complete, ETA 03:43:51
# Fork: 1 of 1
# Warmup Iteration   1: 10418.235 ns/op
Iteration   1: 7748.787 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  7748.787 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100)

# Run progress: 16.93% complete, ETA 03:43:26
# Fork: 1 of 1
# Warmup Iteration   1: 88708.979 ns/op
Iteration   1: 63525.351 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  63525.351 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000)

# Run progress: 17.06% complete, ETA 03:43:00
# Fork: 1 of 1
# Warmup Iteration   1: 855192.612 ns/op
Iteration   1: 613070.019 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  613070.019 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10000)

# Run progress: 17.20% complete, ETA 03:42:35
# Fork: 1 of 1
# Warmup Iteration   1: 8435727.068 ns/op
Iteration   1: 6093142.027 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  6093142.027 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100000)

# Run progress: 17.33% complete, ETA 03:42:10
# Fork: 1 of 1
# Warmup Iteration   1: 80138999.832 ns/op
Iteration   1: 61240558.482 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  61240558.482 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000000)

# Run progress: 17.46% complete, ETA 03:41:48
# Fork: 1 of 1
# Warmup Iteration   1: 616442607.353 ns/op
Iteration   1: 610958307.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  610958307.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 17.59% complete, ETA 03:41:47
# Fork: 1 of 1
# Warmup Iteration   1: 3092.793 ns/op
Iteration   1: 2816.667 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  2816.667 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 17.72% complete, ETA 03:41:22
# Fork: 1 of 1
# Warmup Iteration   1: 20196.420 ns/op
Iteration   1: 14927.088 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  14927.088 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 17.86% complete, ETA 03:40:56
# Fork: 1 of 1
# Warmup Iteration   1: 275303.033 ns/op
Iteration   1: 203995.176 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  203995.176 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 17.99% complete, ETA 03:40:31
# Fork: 1 of 1
# Warmup Iteration   1: 2107619.275 ns/op
Iteration   1: 1491122.722 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1491122.722 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 18.12% complete, ETA 03:40:06
# Fork: 1 of 1
# Warmup Iteration   1: 21099357.065 ns/op
Iteration   1: 15030738.691 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  15030738.691 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 18.25% complete, ETA 03:39:41
# Fork: 1 of 1
# Warmup Iteration   1: 195113350.346 ns/op
Iteration   1: 150063864.791 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  150063864.791 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 18.39% complete, ETA 03:39:20
# Fork: 1 of 1
# Warmup Iteration   1: 1616192879.714 ns/op
Iteration   1: 1544563193.857 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1544563193.857 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1)

# Run progress: 18.52% complete, ETA 03:39:27
# Fork: 1 of 1
# Warmup Iteration   1: 2965.860 ns/op
Iteration   1: 2744.099 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  2744.099 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10)

# Run progress: 18.65% complete, ETA 03:39:02
# Fork: 1 of 1
# Warmup Iteration   1: 15799.698 ns/op
Iteration   1: 11944.344 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  11944.344 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100)

# Run progress: 18.78% complete, ETA 03:38:36
# Fork: 1 of 1
# Warmup Iteration   1: 197440.591 ns/op
Iteration   1: 154193.653 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  154193.653 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000)

# Run progress: 18.92% complete, ETA 03:38:11
# Fork: 1 of 1
# Warmup Iteration   1: 1501873.389 ns/op
Iteration   1: 1121473.029 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1121473.029 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10000)

# Run progress: 19.05% complete, ETA 03:37:46
# Fork: 1 of 1
# Warmup Iteration   1: 15055048.708 ns/op
Iteration   1: 11383776.411 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  11383776.411 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100000)

# Run progress: 19.18% complete, ETA 03:37:22
# Fork: 1 of 1
# Warmup Iteration   1: 141984598.986 ns/op
Iteration   1: 112473045.101 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  112473045.101 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000000)

# Run progress: 19.31% complete, ETA 03:37:00
# Fork: 1 of 1
# Warmup Iteration   1: 1162148852.222 ns/op
Iteration   1: 1127343147.111 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1127343147.111 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1)

# Run progress: 19.44% complete, ETA 03:36:57
# Fork: 1 of 1
# Warmup Iteration   1: 3094.859 ns/op
Iteration   1: 2886.140 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  2886.140 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10)

# Run progress: 19.58% complete, ETA 03:36:32
# Fork: 1 of 1
# Warmup Iteration   1: 12801.160 ns/op
Iteration   1: 9744.626 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  9744.626 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100)

# Run progress: 19.71% complete, ETA 03:36:07
# Fork: 1 of 1
# Warmup Iteration   1: 114089.628 ns/op
Iteration   1: 83911.345 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  83911.345 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000)

# Run progress: 19.84% complete, ETA 03:35:42
# Fork: 1 of 1
# Warmup Iteration   1: 1104637.308 ns/op
Iteration   1: 815663.973 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  815663.973 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10000)

# Run progress: 19.97% complete, ETA 03:35:17
# Fork: 1 of 1
# Warmup Iteration   1: 11087911.874 ns/op
Iteration   1: 8220169.903 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  8220169.903 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100000)

# Run progress: 20.11% complete, ETA 03:34:52
# Fork: 1 of 1
# Warmup Iteration   1: 106506043.383 ns/op
Iteration   1: 81079873.742 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  81079873.742 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000000)

# Run progress: 20.24% complete, ETA 03:34:30
# Fork: 1 of 1
# Warmup Iteration   1: 816866136.308 ns/op
Iteration   1: 806897666.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  806897666.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 20.37% complete, ETA 03:34:28
# Fork: 1 of 1
# Warmup Iteration   1: 3253.663 ns/op
Iteration   1: 2944.807 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  2944.807 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 20.50% complete, ETA 03:34:03
# Fork: 1 of 1
# Warmup Iteration   1: 22642.551 ns/op
Iteration   1: 17022.273 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  17022.273 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 20.63% complete, ETA 03:33:38
# Fork: 1 of 1
# Warmup Iteration   1: 301045.169 ns/op
Iteration   1: 222705.214 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  222705.214 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 20.77% complete, ETA 03:33:13
# Fork: 1 of 1
# Warmup Iteration   1: 2354336.119 ns/op
Iteration   1: 1689636.432 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1689636.432 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 20.90% complete, ETA 03:32:48
# Fork: 1 of 1
# Warmup Iteration   1: 23444705.770 ns/op
Iteration   1: 16996428.774 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  16996428.774 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 21.03% complete, ETA 03:32:24
# Fork: 1 of 1
# Warmup Iteration   1: 223668897.844 ns/op
Iteration   1: 170715095.220 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  170715095.220 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 21.16% complete, ETA 03:32:03
# Fork: 1 of 1
# Warmup Iteration   1: 1815542658.833 ns/op
Iteration   1: 1700919699.333 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1700919699.333 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1)

# Run progress: 21.30% complete, ETA 03:32:02
# Fork: 1 of 1
# Warmup Iteration   1: 3617.833 ns/op
Iteration   1: 3413.046 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  3413.046 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10)

# Run progress: 21.43% complete, ETA 03:31:37
# Fork: 1 of 1
# Warmup Iteration   1: 21934.729 ns/op
Iteration   1: 17504.927 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  17504.927 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100)

# Run progress: 21.56% complete, ETA 03:31:13
# Fork: 1 of 1
# Warmup Iteration   1: 258728.716 ns/op
Iteration   1: 210180.043 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  210180.043 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000)

# Run progress: 21.69% complete, ETA 03:30:48
# Fork: 1 of 1
# Warmup Iteration   1: 2133800.832 ns/op
Iteration   1: 1661919.763 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1661919.763 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10000)

# Run progress: 21.83% complete, ETA 03:30:23
# Fork: 1 of 1
# Warmup Iteration   1: 21197430.193 ns/op
Iteration   1: 16603470.327 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  16603470.327 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100000)

# Run progress: 21.96% complete, ETA 03:29:59
# Fork: 1 of 1
# Warmup Iteration   1: 208673840.563 ns/op
Iteration   1: 166807794.817 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  166807794.817 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000000)

# Run progress: 22.09% complete, ETA 03:29:37
# Fork: 1 of 1
# Warmup Iteration   1: 1724568215.000 ns/op
Iteration   1: 1655728601.429 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder":
  1655728601.429 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1)

# Run progress: 22.22% complete, ETA 03:29:36
# Fork: 1 of 1
# Warmup Iteration   1: 4744.704 ns/op
Iteration   1: 4541.836 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4541.836 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10)

# Run progress: 22.35% complete, ETA 03:29:11
# Fork: 1 of 1
# Warmup Iteration   1: 7862.281 ns/op
Iteration   1: 7522.483 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  7522.483 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100)

# Run progress: 22.49% complete, ETA 03:28:47
# Fork: 1 of 1
# Warmup Iteration   1: 42864.488 ns/op
Iteration   1: 41895.050 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  41895.050 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000)

# Run progress: 22.62% complete, ETA 03:28:22
# Fork: 1 of 1
# Warmup Iteration   1: 392221.505 ns/op
Iteration   1: 383983.049 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  383983.049 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10000)

# Run progress: 22.75% complete, ETA 03:27:58
# Fork: 1 of 1
# Warmup Iteration   1: 3902348.354 ns/op
Iteration   1: 3828039.230 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  3828039.230 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100000)

# Run progress: 22.88% complete, ETA 03:27:34
# Fork: 1 of 1
# Warmup Iteration   1: 39404649.713 ns/op
Iteration   1: 38600212.396 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  38600212.396 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000000)

# Run progress: 23.02% complete, ETA 03:27:12
# Fork: 1 of 1
# Warmup Iteration   1: 393235761.423 ns/op
Iteration   1: 385315444.462 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  385315444.462 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 23.15% complete, ETA 03:27:03
# Fork: 1 of 1
# Warmup Iteration   1: 4742.368 ns/op
Iteration   1: 4516.174 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4516.174 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 23.28% complete, ETA 03:26:39
# Fork: 1 of 1
# Warmup Iteration   1: 12400.080 ns/op
Iteration   1: 12034.096 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  12034.096 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 23.41% complete, ETA 03:26:14
# Fork: 1 of 1
# Warmup Iteration   1: 121734.060 ns/op
Iteration   1: 119637.363 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  119637.363 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 23.54% complete, ETA 03:25:50
# Fork: 1 of 1
# Warmup Iteration   1: 1316467.337 ns/op
Iteration   1: 1295134.442 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1295134.442 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 23.68% complete, ETA 03:25:26
# Fork: 1 of 1
# Warmup Iteration   1: 14330151.168 ns/op
Iteration   1: 14086699.137 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  14086699.137 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 23.81% complete, ETA 03:25:02
# Fork: 1 of 1
# Warmup Iteration   1: 128409801.128 ns/op
Iteration   1: 126726660.924 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  126726660.924 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 23.94% complete, ETA 03:24:40
# Fork: 1 of 1
# Warmup Iteration   1: 1300649723.750 ns/op
Iteration   1: 1259709677.875 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1259709677.875 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1)

# Run progress: 24.07% complete, ETA 03:24:34
# Fork: 1 of 1
# Warmup Iteration   1: 4750.361 ns/op
Iteration   1: 4537.412 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4537.412 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10)

# Run progress: 24.21% complete, ETA 03:24:10
# Fork: 1 of 1
# Warmup Iteration   1: 9887.529 ns/op
Iteration   1: 9335.846 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  9335.846 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100)

# Run progress: 24.34% complete, ETA 03:23:46
# Fork: 1 of 1
# Warmup Iteration   1: 91292.973 ns/op
Iteration   1: 89148.154 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  89148.154 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000)

# Run progress: 24.47% complete, ETA 03:23:21
# Fork: 1 of 1
# Warmup Iteration   1: 949086.708 ns/op
Iteration   1: 932613.929 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  932613.929 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10000)

# Run progress: 24.60% complete, ETA 03:22:58
# Fork: 1 of 1
# Warmup Iteration   1: 9734677.801 ns/op
Iteration   1: 9526982.845 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  9526982.845 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100000)

# Run progress: 24.74% complete, ETA 03:22:34
# Fork: 1 of 1
# Warmup Iteration   1: 95897014.590 ns/op
Iteration   1: 94047231.196 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  94047231.196 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000000)

# Run progress: 24.87% complete, ETA 03:22:12
# Fork: 1 of 1
# Warmup Iteration   1: 966907084.000 ns/op
Iteration   1: 953956634.727 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  953956634.727 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1)

# Run progress: 25.00% complete, ETA 03:22:06
# Fork: 1 of 1
# Warmup Iteration   1: 4626.398 ns/op
Iteration   1: 4395.633 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4395.633 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10)

# Run progress: 25.13% complete, ETA 03:21:42
# Fork: 1 of 1
# Warmup Iteration   1: 5846.892 ns/op
Iteration   1: 5572.257 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  5572.257 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100)

# Run progress: 25.26% complete, ETA 03:21:17
# Fork: 1 of 1
# Warmup Iteration   1: 19374.366 ns/op
Iteration   1: 18443.205 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  18443.205 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000)

# Run progress: 25.40% complete, ETA 03:20:53
# Fork: 1 of 1
# Warmup Iteration   1: 154889.162 ns/op
Iteration   1: 146120.041 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  146120.041 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10000)

# Run progress: 25.53% complete, ETA 03:20:29
# Fork: 1 of 1
# Warmup Iteration   1: 1515989.059 ns/op
Iteration   1: 1431179.403 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1431179.403 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100000)

# Run progress: 25.66% complete, ETA 03:20:06
# Fork: 1 of 1
# Warmup Iteration   1: 15768001.817 ns/op
Iteration   1: 15197151.947 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  15197151.947 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000000)

# Run progress: 25.79% complete, ETA 03:19:44
# Fork: 1 of 1
# Warmup Iteration   1: 154254196.892 ns/op
Iteration   1: 149988724.119 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  149988724.119 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 25.93% complete, ETA 03:19:33
# Fork: 1 of 1
# Warmup Iteration   1: 4668.151 ns/op
Iteration   1: 4466.903 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4466.903 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 26.06% complete, ETA 03:19:09
# Fork: 1 of 1
# Warmup Iteration   1: 10239.336 ns/op
Iteration   1: 9880.738 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  9880.738 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 26.19% complete, ETA 03:18:45
# Fork: 1 of 1
# Warmup Iteration   1: 96526.854 ns/op
Iteration   1: 94526.153 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  94526.153 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 26.32% complete, ETA 03:18:21
# Fork: 1 of 1
# Warmup Iteration   1: 1082199.540 ns/op
Iteration   1: 1058357.801 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1058357.801 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 26.46% complete, ETA 03:17:57
# Fork: 1 of 1
# Warmup Iteration   1: 11889197.919 ns/op
Iteration   1: 11657898.566 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  11657898.566 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 26.59% complete, ETA 03:17:34
# Fork: 1 of 1
# Warmup Iteration   1: 104582404.104 ns/op
Iteration   1: 103263359.134 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  103263359.134 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 26.72% complete, ETA 03:17:13
# Fork: 1 of 1
# Warmup Iteration   1: 1087812425.000 ns/op
Iteration   1: 1067704698.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1067704698.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1)

# Run progress: 26.85% complete, ETA 03:17:07
# Fork: 1 of 1
# Warmup Iteration   1: 4691.841 ns/op
Iteration   1: 4492.392 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4492.392 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10)

# Run progress: 26.98% complete, ETA 03:16:43
# Fork: 1 of 1
# Warmup Iteration   1: 8085.899 ns/op
Iteration   1: 7647.456 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  7647.456 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100)

# Run progress: 27.12% complete, ETA 03:16:20
# Fork: 1 of 1
# Warmup Iteration   1: 66729.118 ns/op
Iteration   1: 64730.211 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  64730.211 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000)

# Run progress: 27.25% complete, ETA 03:15:56
# Fork: 1 of 1
# Warmup Iteration   1: 719720.518 ns/op
Iteration   1: 702820.120 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  702820.120 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10000)

# Run progress: 27.38% complete, ETA 03:15:32
# Fork: 1 of 1
# Warmup Iteration   1: 10041176.663 ns/op
Iteration   1: 9843512.795 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  9843512.795 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100000)

# Run progress: 27.51% complete, ETA 03:15:09
# Fork: 1 of 1
# Warmup Iteration   1: 73591402.596 ns/op
Iteration   1: 71876270.257 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  71876270.257 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000000)

# Run progress: 27.65% complete, ETA 03:14:47
# Fork: 1 of 1
# Warmup Iteration   1: 722346264.286 ns/op
Iteration   1: 710794400.133 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  710794400.133 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1)

# Run progress: 27.78% complete, ETA 03:14:37
# Fork: 1 of 1
# Warmup Iteration   1: 5226.952 ns/op
Iteration   1: 4939.951 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4939.951 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10)

# Run progress: 27.91% complete, ETA 03:14:13
# Fork: 1 of 1
# Warmup Iteration   1: 5901.974 ns/op
Iteration   1: 5663.930 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  5663.930 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100)

# Run progress: 28.04% complete, ETA 03:13:49
# Fork: 1 of 1
# Warmup Iteration   1: 21171.240 ns/op
Iteration   1: 20143.062 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  20143.062 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000)

# Run progress: 28.17% complete, ETA 03:13:26
# Fork: 1 of 1
# Warmup Iteration   1: 166544.941 ns/op
Iteration   1: 161128.423 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  161128.423 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10000)

# Run progress: 28.31% complete, ETA 03:13:02
# Fork: 1 of 1
# Warmup Iteration   1: 1651085.141 ns/op
Iteration   1: 1558672.347 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1558672.347 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100000)

# Run progress: 28.44% complete, ETA 03:12:39
# Fork: 1 of 1
# Warmup Iteration   1: 16893988.470 ns/op
Iteration   1: 16345632.077 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  16345632.077 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000000)

# Run progress: 28.57% complete, ETA 03:12:17
# Fork: 1 of 1
# Warmup Iteration   1: 166572129.049 ns/op
Iteration   1: 162781488.306 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  162781488.306 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 28.70% complete, ETA 03:12:05
# Fork: 1 of 1
# Warmup Iteration   1: 4717.920 ns/op
Iteration   1: 4501.337 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4501.337 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 28.84% complete, ETA 03:11:41
# Fork: 1 of 1
# Warmup Iteration   1: 10351.621 ns/op
Iteration   1: 9945.508 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  9945.508 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 28.97% complete, ETA 03:11:18
# Fork: 1 of 1
# Warmup Iteration   1: 114418.806 ns/op
Iteration   1: 112455.929 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  112455.929 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 29.10% complete, ETA 03:10:54
# Fork: 1 of 1
# Warmup Iteration   1: 1094084.106 ns/op
Iteration   1: 1074574.552 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1074574.552 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 29.23% complete, ETA 03:10:31
# Fork: 1 of 1
# Warmup Iteration   1: 12072420.759 ns/op
Iteration   1: 11790744.236 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  11790744.236 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 29.37% complete, ETA 03:10:08
# Fork: 1 of 1
# Warmup Iteration   1: 119017357.706 ns/op
Iteration   1: 116408339.349 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  116408339.349 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 29.50% complete, ETA 03:09:46
# Fork: 1 of 1
# Warmup Iteration   1: 1104266838.400 ns/op
Iteration   1: 1073171371.300 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1073171371.300 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1)

# Run progress: 29.63% complete, ETA 03:09:39
# Fork: 1 of 1
# Warmup Iteration   1: 4737.243 ns/op
Iteration   1: 4512.484 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4512.484 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10)

# Run progress: 29.76% complete, ETA 03:09:16
# Fork: 1 of 1
# Warmup Iteration   1: 7977.123 ns/op
Iteration   1: 7575.281 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  7575.281 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100)

# Run progress: 29.89% complete, ETA 03:08:52
# Fork: 1 of 1
# Warmup Iteration   1: 70649.429 ns/op
Iteration   1: 68999.120 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  68999.120 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000)

# Run progress: 30.03% complete, ETA 03:08:29
# Fork: 1 of 1
# Warmup Iteration   1: 1032712.956 ns/op
Iteration   1: 1011009.518 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1011009.518 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10000)

# Run progress: 30.16% complete, ETA 03:08:05
# Fork: 1 of 1
# Warmup Iteration   1: 10497337.302 ns/op
Iteration   1: 10322496.860 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  10322496.860 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100000)

# Run progress: 30.29% complete, ETA 03:07:42
# Fork: 1 of 1
# Warmup Iteration   1: 77512173.015 ns/op
Iteration   1: 76194260.614 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  76194260.614 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000000)

# Run progress: 30.42% complete, ETA 03:07:20
# Fork: 1 of 1
# Warmup Iteration   1: 761788463.857 ns/op
Iteration   1: 748532398.929 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  748532398.929 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1)

# Run progress: 30.56% complete, ETA 03:07:10
# Fork: 1 of 1
# Warmup Iteration   1: 4928.659 ns/op
Iteration   1: 4677.218 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4677.218 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10)

# Run progress: 30.69% complete, ETA 03:06:47
# Fork: 1 of 1
# Warmup Iteration   1: 8079.582 ns/op
Iteration   1: 7751.370 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  7751.370 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100)

# Run progress: 30.82% complete, ETA 03:06:23
# Fork: 1 of 1
# Warmup Iteration   1: 41465.793 ns/op
Iteration   1: 40190.786 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  40190.786 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000)

# Run progress: 30.95% complete, ETA 03:06:00
# Fork: 1 of 1
# Warmup Iteration   1: 368166.497 ns/op
Iteration   1: 361713.113 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  361713.113 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10000)

# Run progress: 31.08% complete, ETA 03:05:37
# Fork: 1 of 1
# Warmup Iteration   1: 3687966.042 ns/op
Iteration   1: 3575809.155 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  3575809.155 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100000)

# Run progress: 31.22% complete, ETA 03:05:13
# Fork: 1 of 1
# Warmup Iteration   1: 37010200.948 ns/op
Iteration   1: 36297191.406 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  36297191.406 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000000)

# Run progress: 31.35% complete, ETA 03:04:52
# Fork: 1 of 1
# Warmup Iteration   1: 378118165.185 ns/op
Iteration   1: 365186208.964 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  365186208.964 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 31.48% complete, ETA 03:04:39
# Fork: 1 of 1
# Warmup Iteration   1: 4934.497 ns/op
Iteration   1: 4708.391 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4708.391 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 31.61% complete, ETA 03:04:15
# Fork: 1 of 1
# Warmup Iteration   1: 12377.286 ns/op
Iteration   1: 12049.038 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  12049.038 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 31.75% complete, ETA 03:03:52
# Fork: 1 of 1
# Warmup Iteration   1: 134036.922 ns/op
Iteration   1: 131325.983 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  131325.983 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 31.88% complete, ETA 03:03:29
# Fork: 1 of 1
# Warmup Iteration   1: 1234127.305 ns/op
Iteration   1: 1215551.019 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1215551.019 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 32.01% complete, ETA 03:03:05
# Fork: 1 of 1
# Warmup Iteration   1: 14244250.011 ns/op
Iteration   1: 13861906.497 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  13861906.497 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 32.14% complete, ETA 03:02:42
# Fork: 1 of 1
# Warmup Iteration   1: 124307773.790 ns/op
Iteration   1: 122079001.012 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  122079001.012 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 32.28% complete, ETA 03:02:21
# Fork: 1 of 1
# Warmup Iteration   1: 1321424200.000 ns/op
Iteration   1: 1297747413.625 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1297747413.625 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1)

# Run progress: 32.41% complete, ETA 03:02:11
# Fork: 1 of 1
# Warmup Iteration   1: 5401.404 ns/op
Iteration   1: 5126.610 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  5126.610 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10)

# Run progress: 32.54% complete, ETA 03:01:47
# Fork: 1 of 1
# Warmup Iteration   1: 13465.488 ns/op
Iteration   1: 13013.667 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  13013.667 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100)

# Run progress: 32.67% complete, ETA 03:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 128470.762 ns/op
Iteration   1: 126653.705 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  126653.705 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000)

# Run progress: 32.80% complete, ETA 03:01:01
# Fork: 1 of 1
# Warmup Iteration   1: 1616173.741 ns/op
Iteration   1: 1584406.087 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1584406.087 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10000)

# Run progress: 32.94% complete, ETA 03:00:38
# Fork: 1 of 1
# Warmup Iteration   1: 15907646.148 ns/op
Iteration   1: 15669766.264 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  15669766.264 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100000)

# Run progress: 33.07% complete, ETA 03:00:15
# Fork: 1 of 1
# Warmup Iteration   1: 131518636.013 ns/op
Iteration   1: 129100213.705 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  129100213.705 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000000)

# Run progress: 33.20% complete, ETA 02:59:53
# Fork: 1 of 1
# Warmup Iteration   1: 1323847750.000 ns/op
Iteration   1: 1300414727.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1300414727.500 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1)

# Run progress: 33.33% complete, ETA 02:59:41
# Fork: 1 of 1
# Warmup Iteration   1: 4700.206 ns/op
Iteration   1: 4450.755 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4450.755 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10)

# Run progress: 33.47% complete, ETA 02:59:18
# Fork: 1 of 1
# Warmup Iteration   1: 7914.213 ns/op
Iteration   1: 7538.189 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  7538.189 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100)

# Run progress: 33.60% complete, ETA 02:58:55
# Fork: 1 of 1
# Warmup Iteration   1: 43018.445 ns/op
Iteration   1: 42000.961 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  42000.961 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000)

# Run progress: 33.73% complete, ETA 02:58:32
# Fork: 1 of 1
# Warmup Iteration   1: 392854.539 ns/op
Iteration   1: 386511.152 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  386511.152 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10000)

# Run progress: 33.86% complete, ETA 02:58:08
# Fork: 1 of 1
# Warmup Iteration   1: 3894324.795 ns/op
Iteration   1: 3805511.524 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  3805511.524 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100000)

# Run progress: 33.99% complete, ETA 02:57:46
# Fork: 1 of 1
# Warmup Iteration   1: 39415824.055 ns/op
Iteration   1: 38463422.512 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  38463422.512 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000000)

# Run progress: 34.13% complete, ETA 02:57:24
# Fork: 1 of 1
# Warmup Iteration   1: 395723320.500 ns/op
Iteration   1: 387374309.923 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  387374309.923 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 34.26% complete, ETA 02:57:10
# Fork: 1 of 1
# Warmup Iteration   1: 4688.332 ns/op
Iteration   1: 4430.925 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4430.925 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 34.39% complete, ETA 02:56:47
# Fork: 1 of 1
# Warmup Iteration   1: 12212.026 ns/op
Iteration   1: 11853.551 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  11853.551 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 34.52% complete, ETA 02:56:24
# Fork: 1 of 1
# Warmup Iteration   1: 136541.592 ns/op
Iteration   1: 134323.159 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  134323.159 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 34.66% complete, ETA 02:56:00
# Fork: 1 of 1
# Warmup Iteration   1: 1258354.235 ns/op
Iteration   1: 1236372.391 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1236372.391 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 34.79% complete, ETA 02:55:37
# Fork: 1 of 1
# Warmup Iteration   1: 12759250.869 ns/op
Iteration   1: 12533430.207 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  12533430.207 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 34.92% complete, ETA 02:55:15
# Fork: 1 of 1
# Warmup Iteration   1: 141279940.352 ns/op
Iteration   1: 138596124.356 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  138596124.356 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 35.05% complete, ETA 02:54:53
# Fork: 1 of 1
# Warmup Iteration   1: 1350564814.250 ns/op
Iteration   1: 1321083040.375 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1321083040.375 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1)

# Run progress: 35.19% complete, ETA 02:54:42
# Fork: 1 of 1
# Warmup Iteration   1: 4678.497 ns/op
Iteration   1: 4453.242 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4453.242 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10)

# Run progress: 35.32% complete, ETA 02:54:19
# Fork: 1 of 1
# Warmup Iteration   1: 9405.166 ns/op
Iteration   1: 9008.129 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  9008.129 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100)

# Run progress: 35.45% complete, ETA 02:53:56
# Fork: 1 of 1
# Warmup Iteration   1: 89906.655 ns/op
Iteration   1: 88050.553 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  88050.553 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000)

# Run progress: 35.58% complete, ETA 02:53:33
# Fork: 1 of 1
# Warmup Iteration   1: 1260951.951 ns/op
Iteration   1: 1240728.674 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1240728.674 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10000)

# Run progress: 35.71% complete, ETA 02:53:10
# Fork: 1 of 1
# Warmup Iteration   1: 12440644.600 ns/op
Iteration   1: 12215274.236 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  12215274.236 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100000)

# Run progress: 35.85% complete, ETA 02:52:47
# Fork: 1 of 1
# Warmup Iteration   1: 95767875.552 ns/op
Iteration   1: 93916299.150 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  93916299.150 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000000)

# Run progress: 35.98% complete, ETA 02:52:26
# Fork: 1 of 1
# Warmup Iteration   1: 983705236.727 ns/op
Iteration   1: 957823307.636 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  957823307.636 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1)

# Run progress: 36.11% complete, ETA 02:52:13
# Fork: 1 of 1
# Warmup Iteration   1: 4620.179 ns/op
Iteration   1: 4373.748 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4373.748 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10)

# Run progress: 36.24% complete, ETA 02:51:50
# Fork: 1 of 1
# Warmup Iteration   1: 5817.880 ns/op
Iteration   1: 5584.919 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  5584.919 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100)

# Run progress: 36.38% complete, ETA 02:51:27
# Fork: 1 of 1
# Warmup Iteration   1: 19909.604 ns/op
Iteration   1: 18802.746 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  18802.746 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000)

# Run progress: 36.51% complete, ETA 02:51:04
# Fork: 1 of 1
# Warmup Iteration   1: 156396.192 ns/op
Iteration   1: 148462.742 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  148462.742 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10000)

# Run progress: 36.64% complete, ETA 02:50:41
# Fork: 1 of 1
# Warmup Iteration   1: 1520363.027 ns/op
Iteration   1: 1433971.443 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1433971.443 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100000)

# Run progress: 36.77% complete, ETA 02:50:19
# Fork: 1 of 1
# Warmup Iteration   1: 15825410.117 ns/op
Iteration   1: 15062029.381 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  15062029.381 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000000)

# Run progress: 36.90% complete, ETA 02:49:57
# Fork: 1 of 1
# Warmup Iteration   1: 157454662.719 ns/op
Iteration   1: 152901599.333 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  152901599.333 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 37.04% complete, ETA 02:49:42
# Fork: 1 of 1
# Warmup Iteration   1: 4608.316 ns/op
Iteration   1: 4400.483 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4400.483 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 37.17% complete, ETA 02:49:19
# Fork: 1 of 1
# Warmup Iteration   1: 10225.500 ns/op
Iteration   1: 9873.835 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  9873.835 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 37.30% complete, ETA 02:48:56
# Fork: 1 of 1
# Warmup Iteration   1: 112282.316 ns/op
Iteration   1: 110429.061 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  110429.061 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 37.43% complete, ETA 02:48:33
# Fork: 1 of 1
# Warmup Iteration   1: 1079811.174 ns/op
Iteration   1: 1060615.840 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1060615.840 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 37.57% complete, ETA 02:48:10
# Fork: 1 of 1
# Warmup Iteration   1: 11571811.406 ns/op
Iteration   1: 11319489.360 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  11319489.360 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 37.70% complete, ETA 02:47:48
# Fork: 1 of 1
# Warmup Iteration   1: 104749900.792 ns/op
Iteration   1: 102427905.980 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  102427905.980 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 37.83% complete, ETA 02:47:26
# Fork: 1 of 1
# Warmup Iteration   1: 1102711390.300 ns/op
Iteration   1: 1082086336.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1082086336.500 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1)

# Run progress: 37.96% complete, ETA 02:47:15
# Fork: 1 of 1
# Warmup Iteration   1: 4767.329 ns/op
Iteration   1: 4477.249 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4477.249 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10)

# Run progress: 38.10% complete, ETA 02:46:52
# Fork: 1 of 1
# Warmup Iteration   1: 7684.163 ns/op
Iteration   1: 7250.355 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  7250.355 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100)

# Run progress: 38.23% complete, ETA 02:46:29
# Fork: 1 of 1
# Warmup Iteration   1: 83427.233 ns/op
Iteration   1: 81357.758 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  81357.758 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000)

# Run progress: 38.36% complete, ETA 02:46:06
# Fork: 1 of 1
# Warmup Iteration   1: 706663.495 ns/op
Iteration   1: 687060.090 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  687060.090 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10000)

# Run progress: 38.49% complete, ETA 02:45:43
# Fork: 1 of 1
# Warmup Iteration   1: 10313841.211 ns/op
Iteration   1: 10064226.222 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  10064226.222 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100000)

# Run progress: 38.62% complete, ETA 02:45:21
# Fork: 1 of 1
# Warmup Iteration   1: 74150307.215 ns/op
Iteration   1: 72746133.732 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  72746133.732 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000000)

# Run progress: 38.76% complete, ETA 02:44:59
# Fork: 1 of 1
# Warmup Iteration   1: 731250975.000 ns/op
Iteration   1: 714484107.143 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  714484107.143 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1)

# Run progress: 38.89% complete, ETA 02:44:44
# Fork: 1 of 1
# Warmup Iteration   1: 4882.147 ns/op
Iteration   1: 4642.462 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4642.462 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10)

# Run progress: 39.02% complete, ETA 02:44:21
# Fork: 1 of 1
# Warmup Iteration   1: 5955.268 ns/op
Iteration   1: 5689.308 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  5689.308 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100)

# Run progress: 39.15% complete, ETA 02:43:58
# Fork: 1 of 1
# Warmup Iteration   1: 20563.104 ns/op
Iteration   1: 19552.663 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  19552.663 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000)

# Run progress: 39.29% complete, ETA 02:43:35
# Fork: 1 of 1
# Warmup Iteration   1: 166444.383 ns/op
Iteration   1: 159708.685 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  159708.685 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10000)

# Run progress: 39.42% complete, ETA 02:43:13
# Fork: 1 of 1
# Warmup Iteration   1: 1652277.383 ns/op
Iteration   1: 1600510.946 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1600510.946 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100000)

# Run progress: 39.55% complete, ETA 02:42:50
# Fork: 1 of 1
# Warmup Iteration   1: 17181122.123 ns/op
Iteration   1: 16558227.320 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  16558227.320 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000000)

# Run progress: 39.68% complete, ETA 02:42:28
# Fork: 1 of 1
# Warmup Iteration   1: 166789798.083 ns/op
Iteration   1: 162496288.984 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  162496288.984 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 39.81% complete, ETA 02:42:13
# Fork: 1 of 1
# Warmup Iteration   1: 4727.287 ns/op
Iteration   1: 4480.105 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4480.105 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 39.95% complete, ETA 02:41:50
# Fork: 1 of 1
# Warmup Iteration   1: 10150.634 ns/op
Iteration   1: 9873.894 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  9873.894 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 40.08% complete, ETA 02:41:27
# Fork: 1 of 1
# Warmup Iteration   1: 100346.476 ns/op
Iteration   1: 98585.545 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  98585.545 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 40.21% complete, ETA 02:41:04
# Fork: 1 of 1
# Warmup Iteration   1: 1039588.611 ns/op
Iteration   1: 1015035.864 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1015035.864 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 40.34% complete, ETA 02:40:41
# Fork: 1 of 1
# Warmup Iteration   1: 11827091.839 ns/op
Iteration   1: 11565160.014 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  11565160.014 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 40.48% complete, ETA 02:40:19
# Fork: 1 of 1
# Warmup Iteration   1: 118871046.141 ns/op
Iteration   1: 116587272.302 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  116587272.302 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 40.61% complete, ETA 02:39:58
# Fork: 1 of 1
# Warmup Iteration   1: 1091650424.900 ns/op
Iteration   1: 1071733875.200 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1071733875.200 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1)

# Run progress: 40.74% complete, ETA 02:39:45
# Fork: 1 of 1
# Warmup Iteration   1: 4769.424 ns/op
Iteration   1: 4482.810 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4482.810 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10)

# Run progress: 40.87% complete, ETA 02:39:22
# Fork: 1 of 1
# Warmup Iteration   1: 8315.309 ns/op
Iteration   1: 7743.415 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  7743.415 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100)

# Run progress: 41.01% complete, ETA 02:39:00
# Fork: 1 of 1
# Warmup Iteration   1: 71840.317 ns/op
Iteration   1: 69488.591 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  69488.591 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000)

# Run progress: 41.14% complete, ETA 02:38:37
# Fork: 1 of 1
# Warmup Iteration   1: 742895.148 ns/op
Iteration   1: 725795.167 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  725795.167 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10000)

# Run progress: 41.27% complete, ETA 02:38:14
# Fork: 1 of 1
# Warmup Iteration   1: 10579379.641 ns/op
Iteration   1: 10384373.085 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  10384373.085 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100000)

# Run progress: 41.40% complete, ETA 02:37:52
# Fork: 1 of 1
# Warmup Iteration   1: 76583290.214 ns/op
Iteration   1: 74742212.724 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  74742212.724 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000000)

# Run progress: 41.53% complete, ETA 02:37:30
# Fork: 1 of 1
# Warmup Iteration   1: 766115159.429 ns/op
Iteration   1: 755309616.786 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  755309616.786 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1)

# Run progress: 41.67% complete, ETA 02:37:16
# Fork: 1 of 1
# Warmup Iteration   1: 4950.274 ns/op
Iteration   1: 4707.838 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4707.838 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10)

# Run progress: 41.80% complete, ETA 02:36:53
# Fork: 1 of 1
# Warmup Iteration   1: 7923.940 ns/op
Iteration   1: 7688.490 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  7688.490 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100)

# Run progress: 41.93% complete, ETA 02:36:30
# Fork: 1 of 1
# Warmup Iteration   1: 41108.997 ns/op
Iteration   1: 40078.080 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  40078.080 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000)

# Run progress: 42.06% complete, ETA 02:36:08
# Fork: 1 of 1
# Warmup Iteration   1: 368182.089 ns/op
Iteration   1: 358915.333 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  358915.333 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10000)

# Run progress: 42.20% complete, ETA 02:35:45
# Fork: 1 of 1
# Warmup Iteration   1: 3664902.265 ns/op
Iteration   1: 3582478.866 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  3582478.866 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100000)

# Run progress: 42.33% complete, ETA 02:35:23
# Fork: 1 of 1
# Warmup Iteration   1: 36814919.026 ns/op
Iteration   1: 36072754.781 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  36072754.781 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000000)

# Run progress: 42.46% complete, ETA 02:35:01
# Fork: 1 of 1
# Warmup Iteration   1: 370715152.000 ns/op
Iteration   1: 358499077.679 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  358499077.679 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 42.59% complete, ETA 02:34:44
# Fork: 1 of 1
# Warmup Iteration   1: 4891.640 ns/op
Iteration   1: 4657.957 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4657.957 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 42.72% complete, ETA 02:34:22
# Fork: 1 of 1
# Warmup Iteration   1: 12312.695 ns/op
Iteration   1: 11999.188 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  11999.188 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 42.86% complete, ETA 02:33:59
# Fork: 1 of 1
# Warmup Iteration   1: 120380.391 ns/op
Iteration   1: 118676.893 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  118676.893 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 42.99% complete, ETA 02:33:36
# Fork: 1 of 1
# Warmup Iteration   1: 1234573.831 ns/op
Iteration   1: 1212923.003 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1212923.003 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 43.12% complete, ETA 02:33:14
# Fork: 1 of 1
# Warmup Iteration   1: 13939785.925 ns/op
Iteration   1: 13560470.901 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  13560470.901 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 43.25% complete, ETA 02:32:52
# Fork: 1 of 1
# Warmup Iteration   1: 124829789.136 ns/op
Iteration   1: 121808648.120 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  121808648.120 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 43.39% complete, ETA 02:32:30
# Fork: 1 of 1
# Warmup Iteration   1: 1308202461.125 ns/op
Iteration   1: 1289456378.375 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1289456378.375 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1)

# Run progress: 43.52% complete, ETA 02:32:16
# Fork: 1 of 1
# Warmup Iteration   1: 5367.525 ns/op
Iteration   1: 5160.679 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  5160.679 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10)

# Run progress: 43.65% complete, ETA 02:31:53
# Fork: 1 of 1
# Warmup Iteration   1: 13890.910 ns/op
Iteration   1: 13507.876 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  13507.876 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100)

# Run progress: 43.78% complete, ETA 02:31:31
# Fork: 1 of 1
# Warmup Iteration   1: 144857.553 ns/op
Iteration   1: 142174.440 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  142174.440 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000)

# Run progress: 43.92% complete, ETA 02:31:08
# Fork: 1 of 1
# Warmup Iteration   1: 1294534.199 ns/op
Iteration   1: 1263117.927 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1263117.927 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10000)

# Run progress: 44.05% complete, ETA 02:30:45
# Fork: 1 of 1
# Warmup Iteration   1: 15965515.383 ns/op
Iteration   1: 15710822.794 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  15710822.794 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100000)

# Run progress: 44.18% complete, ETA 02:30:23
# Fork: 1 of 1
# Warmup Iteration   1: 131395086.299 ns/op
Iteration   1: 128890896.551 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  128890896.551 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000000)

# Run progress: 44.31% complete, ETA 02:30:02
# Fork: 1 of 1
# Warmup Iteration   1: 1295346160.750 ns/op
Iteration   1: 1285884143.625 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1285884143.625 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1)

# Run progress: 44.44% complete, ETA 02:29:46
# Fork: 1 of 1
# Warmup Iteration   1: 4672.139 ns/op
Iteration   1: 4434.109 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4434.109 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10)

# Run progress: 44.58% complete, ETA 02:29:23
# Fork: 1 of 1
# Warmup Iteration   1: 7999.645 ns/op
Iteration   1: 7633.811 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  7633.811 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100)

# Run progress: 44.71% complete, ETA 02:29:01
# Fork: 1 of 1
# Warmup Iteration   1: 44372.624 ns/op
Iteration   1: 43112.909 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  43112.909 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000)

# Run progress: 44.84% complete, ETA 02:28:38
# Fork: 1 of 1
# Warmup Iteration   1: 395789.365 ns/op
Iteration   1: 388930.837 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  388930.837 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10000)

# Run progress: 44.97% complete, ETA 02:28:16
# Fork: 1 of 1
# Warmup Iteration   1: 3948125.003 ns/op
Iteration   1: 3851207.911 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  3851207.911 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100000)

# Run progress: 45.11% complete, ETA 02:27:53
# Fork: 1 of 1
# Warmup Iteration   1: 39970134.299 ns/op
Iteration   1: 38688147.803 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  38688147.803 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000000)

# Run progress: 45.24% complete, ETA 02:27:32
# Fork: 1 of 1
# Warmup Iteration   1: 399444967.654 ns/op
Iteration   1: 389527213.192 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  389527213.192 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 45.37% complete, ETA 02:27:16
# Fork: 1 of 1
# Warmup Iteration   1: 4751.762 ns/op
Iteration   1: 4498.615 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4498.615 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 45.50% complete, ETA 02:26:53
# Fork: 1 of 1
# Warmup Iteration   1: 12364.136 ns/op
Iteration   1: 11995.473 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  11995.473 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 45.63% complete, ETA 02:26:31
# Fork: 1 of 1
# Warmup Iteration   1: 136794.715 ns/op
Iteration   1: 133954.724 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  133954.724 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 45.77% complete, ETA 02:26:08
# Fork: 1 of 1
# Warmup Iteration   1: 1266202.186 ns/op
Iteration   1: 1246664.068 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1246664.068 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 45.90% complete, ETA 02:25:46
# Fork: 1 of 1
# Warmup Iteration   1: 14307794.298 ns/op
Iteration   1: 14088829.606 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  14088829.606 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 46.03% complete, ETA 02:25:23
# Fork: 1 of 1
# Warmup Iteration   1: 128667758.064 ns/op
Iteration   1: 126860607.405 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  126860607.405 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 46.16% complete, ETA 02:25:02
# Fork: 1 of 1
# Warmup Iteration   1: 1308046962.375 ns/op
Iteration   1: 1256824791.750 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1256824791.750 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1)

# Run progress: 46.30% complete, ETA 02:24:46
# Fork: 1 of 1
# Warmup Iteration   1: 4763.992 ns/op
Iteration   1: 4533.021 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4533.021 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10)

# Run progress: 46.43% complete, ETA 02:24:24
# Fork: 1 of 1
# Warmup Iteration   1: 9509.203 ns/op
Iteration   1: 9035.845 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  9035.845 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100)

# Run progress: 46.56% complete, ETA 02:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 91521.392 ns/op
Iteration   1: 89075.871 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  89075.871 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000)

# Run progress: 46.69% complete, ETA 02:23:39
# Fork: 1 of 1
# Warmup Iteration   1: 937618.016 ns/op
Iteration   1: 921433.358 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  921433.358 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10000)

# Run progress: 46.83% complete, ETA 02:23:16
# Fork: 1 of 1
# Warmup Iteration   1: 9759773.865 ns/op
Iteration   1: 9549220.140 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  9549220.140 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100000)

# Run progress: 46.96% complete, ETA 02:22:54
# Fork: 1 of 1
# Warmup Iteration   1: 96086182.343 ns/op
Iteration   1: 94121887.738 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  94121887.738 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000000)

# Run progress: 47.09% complete, ETA 02:22:33
# Fork: 1 of 1
# Warmup Iteration   1: 953658597.364 ns/op
Iteration   1: 937792769.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  937792769.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1)

# Run progress: 47.22% complete, ETA 02:22:16
# Fork: 1 of 1
# Warmup Iteration   1: 4654.378 ns/op
Iteration   1: 4420.442 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4420.442 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10)

# Run progress: 47.35% complete, ETA 02:21:54
# Fork: 1 of 1
# Warmup Iteration   1: 6006.113 ns/op
Iteration   1: 5750.311 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  5750.311 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100)

# Run progress: 47.49% complete, ETA 02:21:32
# Fork: 1 of 1
# Warmup Iteration   1: 20015.762 ns/op
Iteration   1: 18982.466 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  18982.466 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000)

# Run progress: 47.62% complete, ETA 02:21:09
# Fork: 1 of 1
# Warmup Iteration   1: 156519.239 ns/op
Iteration   1: 147850.028 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  147850.028 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10000)

# Run progress: 47.75% complete, ETA 02:20:47
# Fork: 1 of 1
# Warmup Iteration   1: 1579799.970 ns/op
Iteration   1: 1479672.458 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1479672.458 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100000)

# Run progress: 47.88% complete, ETA 02:20:25
# Fork: 1 of 1
# Warmup Iteration   1: 16061902.615 ns/op
Iteration   1: 15611226.782 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  15611226.782 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000000)

# Run progress: 48.02% complete, ETA 02:20:03
# Fork: 1 of 1
# Warmup Iteration   1: 157648002.922 ns/op
Iteration   1: 153899010.800 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  153899010.800 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 48.15% complete, ETA 02:19:45
# Fork: 1 of 1
# Warmup Iteration   1: 4840.443 ns/op
Iteration   1: 4609.298 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4609.298 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 48.28% complete, ETA 02:19:23
# Fork: 1 of 1
# Warmup Iteration   1: 10348.709 ns/op
Iteration   1: 9958.761 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  9958.761 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 48.41% complete, ETA 02:19:01
# Fork: 1 of 1
# Warmup Iteration   1: 112413.859 ns/op
Iteration   1: 110698.927 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  110698.927 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 48.54% complete, ETA 02:18:38
# Fork: 1 of 1
# Warmup Iteration   1: 1092196.606 ns/op
Iteration   1: 1061990.711 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1061990.711 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 48.68% complete, ETA 02:18:16
# Fork: 1 of 1
# Warmup Iteration   1: 11931840.406 ns/op
Iteration   1: 11647566.029 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  11647566.029 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 48.81% complete, ETA 02:17:54
# Fork: 1 of 1
# Warmup Iteration   1: 103098190.776 ns/op
Iteration   1: 100993417.200 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  100993417.200 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 48.94% complete, ETA 02:17:32
# Fork: 1 of 1
# Warmup Iteration   1: 1090454129.200 ns/op
Iteration   1: 1062299570.700 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1062299570.700 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1)

# Run progress: 49.07% complete, ETA 02:17:17
# Fork: 1 of 1
# Warmup Iteration   1: 4791.955 ns/op
Iteration   1: 4527.138 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4527.138 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10)

# Run progress: 49.21% complete, ETA 02:16:55
# Fork: 1 of 1
# Warmup Iteration   1: 8191.626 ns/op
Iteration   1: 7741.522 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  7741.522 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100)

# Run progress: 49.34% complete, ETA 02:16:32
# Fork: 1 of 1
# Warmup Iteration   1: 85706.272 ns/op
Iteration   1: 82488.370 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  82488.370 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000)

# Run progress: 49.47% complete, ETA 02:16:10
# Fork: 1 of 1
# Warmup Iteration   1: 1001891.919 ns/op
Iteration   1: 979196.585 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  979196.585 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10000)

# Run progress: 49.60% complete, ETA 02:15:48
# Fork: 1 of 1
# Warmup Iteration   1: 10401265.505 ns/op
Iteration   1: 10204355.904 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  10204355.904 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100000)

# Run progress: 49.74% complete, ETA 02:15:25
# Fork: 1 of 1
# Warmup Iteration   1: 73722109.360 ns/op
Iteration   1: 72048992.604 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  72048992.604 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000000)

# Run progress: 49.87% complete, ETA 02:15:04
# Fork: 1 of 1
# Warmup Iteration   1: 725244244.286 ns/op
Iteration   1: 710379026.133 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  710379026.133 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1)

# Run progress: 50.00% complete, ETA 02:14:47
# Fork: 1 of 1
# Warmup Iteration   1: 4677.191 ns/op
Iteration   1: 4437.711 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4437.711 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10)

# Run progress: 50.13% complete, ETA 02:14:25
# Fork: 1 of 1
# Warmup Iteration   1: 5963.980 ns/op
Iteration   1: 5683.991 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  5683.991 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100)

# Run progress: 50.26% complete, ETA 02:14:03
# Fork: 1 of 1
# Warmup Iteration   1: 21777.523 ns/op
Iteration   1: 20678.913 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  20678.913 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000)

# Run progress: 50.40% complete, ETA 02:13:40
# Fork: 1 of 1
# Warmup Iteration   1: 169923.172 ns/op
Iteration   1: 165839.327 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  165839.327 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10000)

# Run progress: 50.53% complete, ETA 02:13:18
# Fork: 1 of 1
# Warmup Iteration   1: 1704020.114 ns/op
Iteration   1: 1610869.874 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1610869.874 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100000)

# Run progress: 50.66% complete, ETA 02:12:56
# Fork: 1 of 1
# Warmup Iteration   1: 17552013.360 ns/op
Iteration   1: 16967468.878 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  16967468.878 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000000)

# Run progress: 50.79% complete, ETA 02:12:34
# Fork: 1 of 1
# Warmup Iteration   1: 174557087.155 ns/op
Iteration   1: 168291177.100 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  168291177.100 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 50.93% complete, ETA 02:12:17
# Fork: 1 of 1
# Warmup Iteration   1: 4733.118 ns/op
Iteration   1: 4480.659 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4480.659 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 51.06% complete, ETA 02:11:54
# Fork: 1 of 1
# Warmup Iteration   1: 10629.288 ns/op
Iteration   1: 10195.796 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  10195.796 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 51.19% complete, ETA 02:11:32
# Fork: 1 of 1
# Warmup Iteration   1: 114379.022 ns/op
Iteration   1: 111831.151 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  111831.151 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 51.32% complete, ETA 02:11:10
# Fork: 1 of 1
# Warmup Iteration   1: 1113374.452 ns/op
Iteration   1: 1093431.381 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1093431.381 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 51.46% complete, ETA 02:10:48
# Fork: 1 of 1
# Warmup Iteration   1: 10467626.546 ns/op
Iteration   1: 10293290.273 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  10293290.273 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 51.59% complete, ETA 02:10:25
# Fork: 1 of 1
# Warmup Iteration   1: 106649249.011 ns/op
Iteration   1: 103417394.711 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  103417394.711 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 51.72% complete, ETA 02:10:04
# Fork: 1 of 1
# Warmup Iteration   1: 1089771171.000 ns/op
Iteration   1: 1075061679.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1075061679.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1)

# Run progress: 51.85% complete, ETA 02:09:48
# Fork: 1 of 1
# Warmup Iteration   1: 4791.706 ns/op
Iteration   1: 4511.155 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4511.155 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10)

# Run progress: 51.98% complete, ETA 02:09:26
# Fork: 1 of 1
# Warmup Iteration   1: 8919.165 ns/op
Iteration   1: 8461.232 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  8461.232 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100)

# Run progress: 52.12% complete, ETA 02:09:04
# Fork: 1 of 1
# Warmup Iteration   1: 90974.711 ns/op
Iteration   1: 89000.814 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  89000.814 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000)

# Run progress: 52.25% complete, ETA 02:08:42
# Fork: 1 of 1
# Warmup Iteration   1: 766645.341 ns/op
Iteration   1: 742906.502 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  742906.502 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10000)

# Run progress: 52.38% complete, ETA 02:08:19
# Fork: 1 of 1
# Warmup Iteration   1: 7894186.922 ns/op
Iteration   1: 7686632.374 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  7686632.374 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100000)

# Run progress: 52.51% complete, ETA 02:07:57
# Fork: 1 of 1
# Warmup Iteration   1: 78783494.583 ns/op
Iteration   1: 76903935.328 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  76903935.328 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000000)

# Run progress: 52.65% complete, ETA 02:07:36
# Fork: 1 of 1
# Warmup Iteration   1: 776766873.615 ns/op
Iteration   1: 763104678.214 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  763104678.214 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1)

# Run progress: 52.78% complete, ETA 02:07:18
# Fork: 1 of 1
# Warmup Iteration   1: 4912.273 ns/op
Iteration   1: 4673.521 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4673.521 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10)

# Run progress: 52.91% complete, ETA 02:06:56
# Fork: 1 of 1
# Warmup Iteration   1: 8022.670 ns/op
Iteration   1: 7724.990 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  7724.990 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100)

# Run progress: 53.04% complete, ETA 02:06:34
# Fork: 1 of 1
# Warmup Iteration   1: 41561.737 ns/op
Iteration   1: 40301.104 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  40301.104 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000)

# Run progress: 53.17% complete, ETA 02:06:12
# Fork: 1 of 1
# Warmup Iteration   1: 370853.670 ns/op
Iteration   1: 362860.016 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  362860.016 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10000)

# Run progress: 53.31% complete, ETA 02:05:50
# Fork: 1 of 1
# Warmup Iteration   1: 3669372.419 ns/op
Iteration   1: 3599894.941 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  3599894.941 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100000)

# Run progress: 53.44% complete, ETA 02:05:28
# Fork: 1 of 1
# Warmup Iteration   1: 37192403.420 ns/op
Iteration   1: 36419467.847 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  36419467.847 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000000)

# Run progress: 53.57% complete, ETA 02:05:06
# Fork: 1 of 1
# Warmup Iteration   1: 373901825.593 ns/op
Iteration   1: 364774744.143 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  364774744.143 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 53.70% complete, ETA 02:04:48
# Fork: 1 of 1
# Warmup Iteration   1: 4916.822 ns/op
Iteration   1: 4670.176 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4670.176 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 53.84% complete, ETA 02:04:26
# Fork: 1 of 1
# Warmup Iteration   1: 12596.413 ns/op
Iteration   1: 12053.113 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  12053.113 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 53.97% complete, ETA 02:04:04
# Fork: 1 of 1
# Warmup Iteration   1: 134641.962 ns/op
Iteration   1: 132461.032 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  132461.032 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 54.10% complete, ETA 02:03:42
# Fork: 1 of 1
# Warmup Iteration   1: 1301370.607 ns/op
Iteration   1: 1279671.151 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1279671.151 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 54.23% complete, ETA 02:03:19
# Fork: 1 of 1
# Warmup Iteration   1: 14299171.396 ns/op
Iteration   1: 14008543.716 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  14008543.716 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 54.37% complete, ETA 02:02:57
# Fork: 1 of 1
# Warmup Iteration   1: 125759718.800 ns/op
Iteration   1: 123351311.049 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  123351311.049 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 54.50% complete, ETA 02:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 1288692616.125 ns/op
Iteration   1: 1239030626.444 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1239030626.444 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1)

# Run progress: 54.63% complete, ETA 02:02:19
# Fork: 1 of 1
# Warmup Iteration   1: 5282.306 ns/op
Iteration   1: 5108.374 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  5108.374 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10)

# Run progress: 54.76% complete, ETA 02:01:57
# Fork: 1 of 1
# Warmup Iteration   1: 13884.703 ns/op
Iteration   1: 13396.428 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  13396.428 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100)

# Run progress: 54.89% complete, ETA 02:01:35
# Fork: 1 of 1
# Warmup Iteration   1: 127663.941 ns/op
Iteration   1: 124907.270 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  124907.270 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000)

# Run progress: 55.03% complete, ETA 02:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 1627603.509 ns/op
Iteration   1: 1595035.506 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1595035.506 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10000)

# Run progress: 55.16% complete, ETA 02:00:51
# Fork: 1 of 1
# Warmup Iteration   1: 13268538.509 ns/op
Iteration   1: 13061286.640 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  13061286.640 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100000)

# Run progress: 55.29% complete, ETA 02:00:29
# Fork: 1 of 1
# Warmup Iteration   1: 132410670.711 ns/op
Iteration   1: 130365287.727 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  130365287.727 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000000)

# Run progress: 55.42% complete, ETA 02:00:07
# Fork: 1 of 1
# Warmup Iteration   1: 1316503632.500 ns/op
Iteration   1: 1296468241.375 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1296468241.375 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1)

# Run progress: 55.56% complete, ETA 01:59:50
# Fork: 1 of 1
# Warmup Iteration   1: 4712.119 ns/op
Iteration   1: 4467.578 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4467.578 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10)

# Run progress: 55.69% complete, ETA 01:59:27
# Fork: 1 of 1
# Warmup Iteration   1: 7967.462 ns/op
Iteration   1: 7633.867 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  7633.867 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100)

# Run progress: 55.82% complete, ETA 01:59:05
# Fork: 1 of 1
# Warmup Iteration   1: 44637.655 ns/op
Iteration   1: 43450.317 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  43450.317 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000)

# Run progress: 55.95% complete, ETA 01:58:43
# Fork: 1 of 1
# Warmup Iteration   1: 412433.471 ns/op
Iteration   1: 401355.513 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  401355.513 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10000)

# Run progress: 56.08% complete, ETA 01:58:21
# Fork: 1 of 1
# Warmup Iteration   1: 4310431.775 ns/op
Iteration   1: 4158943.423 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4158943.423 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100000)

# Run progress: 56.22% complete, ETA 01:57:59
# Fork: 1 of 1
# Warmup Iteration   1: 44421580.788 ns/op
Iteration   1: 43272674.690 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  43272674.690 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000000)

# Run progress: 56.35% complete, ETA 01:57:38
# Fork: 1 of 1
# Warmup Iteration   1: 558839339.895 ns/op
Iteration   1: 512630188.200 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  512630188.200 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 56.48% complete, ETA 01:57:20
# Fork: 1 of 1
# Warmup Iteration   1: 4811.367 ns/op
Iteration   1: 4546.876 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4546.876 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 56.61% complete, ETA 01:56:57
# Fork: 1 of 1
# Warmup Iteration   1: 12336.710 ns/op
Iteration   1: 12018.366 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  12018.366 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 56.75% complete, ETA 01:56:35
# Fork: 1 of 1
# Warmup Iteration   1: 124429.576 ns/op
Iteration   1: 122326.582 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  122326.582 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 56.88% complete, ETA 01:56:13
# Fork: 1 of 1
# Warmup Iteration   1: 1277409.066 ns/op
Iteration   1: 1255889.829 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1255889.829 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 57.01% complete, ETA 01:55:51
# Fork: 1 of 1
# Warmup Iteration   1: 14807681.533 ns/op
Iteration   1: 14477787.441 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  14477787.441 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 57.14% complete, ETA 01:55:29
# Fork: 1 of 1
# Warmup Iteration   1: 146166924.145 ns/op
Iteration   1: 143676265.714 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  143676265.714 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 57.28% complete, ETA 01:55:08
# Fork: 1 of 1
# Warmup Iteration   1: 1405334097.500 ns/op
Iteration   1: 1380150155.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1380150155.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1)

# Run progress: 57.41% complete, ETA 01:54:51
# Fork: 1 of 1
# Warmup Iteration   1: 4766.957 ns/op
Iteration   1: 4516.508 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4516.508 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10)

# Run progress: 57.54% complete, ETA 01:54:29
# Fork: 1 of 1
# Warmup Iteration   1: 10057.465 ns/op
Iteration   1: 9706.596 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  9706.596 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100)

# Run progress: 57.67% complete, ETA 01:54:07
# Fork: 1 of 1
# Warmup Iteration   1: 92818.887 ns/op
Iteration   1: 90252.372 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  90252.372 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000)

# Run progress: 57.80% complete, ETA 01:53:45
# Fork: 1 of 1
# Warmup Iteration   1: 984775.154 ns/op
Iteration   1: 965438.742 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  965438.742 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10000)

# Run progress: 57.94% complete, ETA 01:53:23
# Fork: 1 of 1
# Warmup Iteration   1: 10265370.323 ns/op
Iteration   1: 10014271.593 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  10014271.593 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100000)

# Run progress: 58.07% complete, ETA 01:53:01
# Fork: 1 of 1
# Warmup Iteration   1: 103199588.948 ns/op
Iteration   1: 100471140.790 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  100471140.790 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000000)

# Run progress: 58.20% complete, ETA 01:52:40
# Fork: 1 of 1
# Warmup Iteration   1: 1495973312.286 ns/op
Iteration   1: 1382688369.625 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1382688369.625 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1)

# Run progress: 58.33% complete, ETA 01:52:22
# Fork: 1 of 1
# Warmup Iteration   1: 4706.009 ns/op
Iteration   1: 4430.417 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4430.417 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10)

# Run progress: 58.47% complete, ETA 01:52:00
# Fork: 1 of 1
# Warmup Iteration   1: 5945.994 ns/op
Iteration   1: 5671.751 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  5671.751 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100)

# Run progress: 58.60% complete, ETA 01:51:38
# Fork: 1 of 1
# Warmup Iteration   1: 20332.635 ns/op
Iteration   1: 19229.013 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  19229.013 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000)

# Run progress: 58.73% complete, ETA 01:51:16
# Fork: 1 of 1
# Warmup Iteration   1: 163047.581 ns/op
Iteration   1: 155276.489 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  155276.489 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10000)

# Run progress: 58.86% complete, ETA 01:50:54
# Fork: 1 of 1
# Warmup Iteration   1: 1698657.202 ns/op
Iteration   1: 1598790.531 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1598790.531 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100000)

# Run progress: 58.99% complete, ETA 01:50:32
# Fork: 1 of 1
# Warmup Iteration   1: 17619554.202 ns/op
Iteration   1: 16794937.695 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  16794937.695 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000000)

# Run progress: 59.13% complete, ETA 01:50:10
# Fork: 1 of 1
# Warmup Iteration   1: 265982379.105 ns/op
Iteration   1: 245608301.390 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  245608301.390 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 59.26% complete, ETA 01:49:51
# Fork: 1 of 1
# Warmup Iteration   1: 4800.130 ns/op
Iteration   1: 4556.359 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4556.359 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 59.39% complete, ETA 01:49:29
# Fork: 1 of 1
# Warmup Iteration   1: 10412.211 ns/op
Iteration   1: 9960.338 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  9960.338 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 59.52% complete, ETA 01:49:07
# Fork: 1 of 1
# Warmup Iteration   1: 98968.138 ns/op
Iteration   1: 97415.993 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  97415.993 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 59.66% complete, ETA 01:48:45
# Fork: 1 of 1
# Warmup Iteration   1: 1030696.118 ns/op
Iteration   1: 1009356.946 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1009356.946 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 59.79% complete, ETA 01:48:23
# Fork: 1 of 1
# Warmup Iteration   1: 12453238.959 ns/op
Iteration   1: 12164977.114 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  12164977.114 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 59.92% complete, ETA 01:48:01
# Fork: 1 of 1
# Warmup Iteration   1: 105298326.074 ns/op
Iteration   1: 102696597.582 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  102696597.582 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 60.05% complete, ETA 01:47:40
# Fork: 1 of 1
# Warmup Iteration   1: 1136057448.111 ns/op
Iteration   1: 1117040714.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1117040714.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1)

# Run progress: 60.19% complete, ETA 01:47:22
# Fork: 1 of 1
# Warmup Iteration   1: 4732.696 ns/op
Iteration   1: 4498.660 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4498.660 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10)

# Run progress: 60.32% complete, ETA 01:47:00
# Fork: 1 of 1
# Warmup Iteration   1: 8260.533 ns/op
Iteration   1: 7878.003 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  7878.003 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100)

# Run progress: 60.45% complete, ETA 01:46:38
# Fork: 1 of 1
# Warmup Iteration   1: 87014.709 ns/op
Iteration   1: 85298.734 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  85298.734 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000)

# Run progress: 60.58% complete, ETA 01:46:16
# Fork: 1 of 1
# Warmup Iteration   1: 740304.405 ns/op
Iteration   1: 725436.169 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  725436.169 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10000)

# Run progress: 60.71% complete, ETA 01:45:54
# Fork: 1 of 1
# Warmup Iteration   1: 10468244.048 ns/op
Iteration   1: 10264876.501 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  10264876.501 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100000)

# Run progress: 60.85% complete, ETA 01:45:32
# Fork: 1 of 1
# Warmup Iteration   1: 77435925.315 ns/op
Iteration   1: 76099259.614 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  76099259.614 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000000)

# Run progress: 60.98% complete, ETA 01:45:10
# Fork: 1 of 1
# Warmup Iteration   1: 1116286479.556 ns/op
Iteration   1: 1088381339.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1088381339.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1)

# Run progress: 61.11% complete, ETA 01:44:52
# Fork: 1 of 1
# Warmup Iteration   1: 4732.200 ns/op
Iteration   1: 4465.183 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4465.183 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10)

# Run progress: 61.24% complete, ETA 01:44:30
# Fork: 1 of 1
# Warmup Iteration   1: 6113.007 ns/op
Iteration   1: 5809.461 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  5809.461 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100)

# Run progress: 61.38% complete, ETA 01:44:08
# Fork: 1 of 1
# Warmup Iteration   1: 21332.715 ns/op
Iteration   1: 20206.438 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  20206.438 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000)

# Run progress: 61.51% complete, ETA 01:43:46
# Fork: 1 of 1
# Warmup Iteration   1: 174963.818 ns/op
Iteration   1: 165569.176 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  165569.176 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10000)

# Run progress: 61.64% complete, ETA 01:43:24
# Fork: 1 of 1
# Warmup Iteration   1: 1854777.054 ns/op
Iteration   1: 1754982.993 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1754982.993 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100000)

# Run progress: 61.77% complete, ETA 01:43:02
# Fork: 1 of 1
# Warmup Iteration   1: 19643509.975 ns/op
Iteration   1: 18695093.884 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  18695093.884 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000000)

# Run progress: 61.90% complete, ETA 01:42:41
# Fork: 1 of 1
# Warmup Iteration   1: 287004231.057 ns/op
Iteration   1: 263470402.184 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  263470402.184 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 62.04% complete, ETA 01:42:22
# Fork: 1 of 1
# Warmup Iteration   1: 4716.544 ns/op
Iteration   1: 4491.505 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4491.505 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 62.17% complete, ETA 01:42:00
# Fork: 1 of 1
# Warmup Iteration   1: 10462.043 ns/op
Iteration   1: 10095.471 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  10095.471 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 62.30% complete, ETA 01:41:38
# Fork: 1 of 1
# Warmup Iteration   1: 101469.047 ns/op
Iteration   1: 98779.561 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  98779.561 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 62.43% complete, ETA 01:41:16
# Fork: 1 of 1
# Warmup Iteration   1: 1044330.368 ns/op
Iteration   1: 1022521.395 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1022521.395 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 62.57% complete, ETA 01:40:54
# Fork: 1 of 1
# Warmup Iteration   1: 12561540.013 ns/op
Iteration   1: 12378949.152 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  12378949.152 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 62.70% complete, ETA 01:40:32
# Fork: 1 of 1
# Warmup Iteration   1: 107343947.479 ns/op
Iteration   1: 104146561.485 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  104146561.485 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 62.83% complete, ETA 01:40:10
# Fork: 1 of 1
# Warmup Iteration   1: 1194033334.667 ns/op
Iteration   1: 1167800762.667 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1167800762.667 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1)

# Run progress: 62.96% complete, ETA 01:39:52
# Fork: 1 of 1
# Warmup Iteration   1: 5070.230 ns/op
Iteration   1: 4847.476 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4847.476 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10)

# Run progress: 63.10% complete, ETA 01:39:30
# Fork: 1 of 1
# Warmup Iteration   1: 8593.290 ns/op
Iteration   1: 8192.537 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  8192.537 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100)

# Run progress: 63.23% complete, ETA 01:39:09
# Fork: 1 of 1
# Warmup Iteration   1: 71936.265 ns/op
Iteration   1: 70161.281 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  70161.281 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000)

# Run progress: 63.36% complete, ETA 01:38:47
# Fork: 1 of 1
# Warmup Iteration   1: 1045071.756 ns/op
Iteration   1: 1025158.577 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1025158.577 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10000)

# Run progress: 63.49% complete, ETA 01:38:25
# Fork: 1 of 1
# Warmup Iteration   1: 8049695.153 ns/op
Iteration   1: 7816675.170 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  7816675.170 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100000)

# Run progress: 63.62% complete, ETA 01:38:03
# Fork: 1 of 1
# Warmup Iteration   1: 81725708.837 ns/op
Iteration   1: 78481224.148 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  78481224.148 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000000)

# Run progress: 63.76% complete, ETA 01:37:41
# Fork: 1 of 1
# Warmup Iteration   1: 1138554204.222 ns/op
Iteration   1: 1120949489.600 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1120949489.600 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1)

# Run progress: 63.89% complete, ETA 01:37:23
# Fork: 1 of 1
# Warmup Iteration   1: 4894.117 ns/op
Iteration   1: 4636.003 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4636.003 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10)

# Run progress: 64.02% complete, ETA 01:37:01
# Fork: 1 of 1
# Warmup Iteration   1: 8032.851 ns/op
Iteration   1: 7761.776 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  7761.776 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100)

# Run progress: 64.15% complete, ETA 01:36:39
# Fork: 1 of 1
# Warmup Iteration   1: 42383.380 ns/op
Iteration   1: 41026.817 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  41026.817 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000)

# Run progress: 64.29% complete, ETA 01:36:17
# Fork: 1 of 1
# Warmup Iteration   1: 376480.100 ns/op
Iteration   1: 366317.485 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  366317.485 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10000)

# Run progress: 64.42% complete, ETA 01:35:55
# Fork: 1 of 1
# Warmup Iteration   1: 3947951.470 ns/op
Iteration   1: 3841080.708 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  3841080.708 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100000)

# Run progress: 64.55% complete, ETA 01:35:33
# Fork: 1 of 1
# Warmup Iteration   1: 40991303.623 ns/op
Iteration   1: 39861118.701 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  39861118.701 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000000)

# Run progress: 64.68% complete, ETA 01:35:12
# Fork: 1 of 1
# Warmup Iteration   1: 505433628.300 ns/op
Iteration   1: 469750128.591 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  469750128.591 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 64.81% complete, ETA 01:34:53
# Fork: 1 of 1
# Warmup Iteration   1: 5069.594 ns/op
Iteration   1: 4837.046 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  4837.046 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 64.95% complete, ETA 01:34:31
# Fork: 1 of 1
# Warmup Iteration   1: 12515.857 ns/op
Iteration   1: 12139.583 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  12139.583 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 65.08% complete, ETA 01:34:09
# Fork: 1 of 1
# Warmup Iteration   1: 121690.833 ns/op
Iteration   1: 119366.573 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  119366.573 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 65.21% complete, ETA 01:33:47
# Fork: 1 of 1
# Warmup Iteration   1: 1247919.334 ns/op
Iteration   1: 1221002.670 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1221002.670 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 65.34% complete, ETA 01:33:25
# Fork: 1 of 1
# Warmup Iteration   1: 14613352.994 ns/op
Iteration   1: 14336968.182 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  14336968.182 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 65.48% complete, ETA 01:33:03
# Fork: 1 of 1
# Warmup Iteration   1: 129070487.590 ns/op
Iteration   1: 125559722.225 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  125559722.225 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 65.61% complete, ETA 01:32:42
# Fork: 1 of 1
# Warmup Iteration   1: 1389744880.875 ns/op
Iteration   1: 1380614647.125 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1380614647.125 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1)

# Run progress: 65.74% complete, ETA 01:32:24
# Fork: 1 of 1
# Warmup Iteration   1: 5493.510 ns/op
Iteration   1: 5262.917 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  5262.917 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10)

# Run progress: 65.87% complete, ETA 01:32:02
# Fork: 1 of 1
# Warmup Iteration   1: 13697.696 ns/op
Iteration   1: 13216.096 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  13216.096 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100)

# Run progress: 66.01% complete, ETA 01:31:40
# Fork: 1 of 1
# Warmup Iteration   1: 145552.819 ns/op
Iteration   1: 143220.112 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  143220.112 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000)

# Run progress: 66.14% complete, ETA 01:31:18
# Fork: 1 of 1
# Warmup Iteration   1: 1321351.517 ns/op
Iteration   1: 1299865.005 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1299865.005 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10000)

# Run progress: 66.27% complete, ETA 01:30:56
# Fork: 1 of 1
# Warmup Iteration   1: 16299127.256 ns/op
Iteration   1: 16020664.829 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  16020664.829 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100000)

# Run progress: 66.40% complete, ETA 01:30:35
# Fork: 1 of 1
# Warmup Iteration   1: 135279466.986 ns/op
Iteration   1: 132751078.513 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  132751078.513 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000000)

# Run progress: 66.53% complete, ETA 01:30:13
# Fork: 1 of 1
# Warmup Iteration   1: 1810107439.167 ns/op
Iteration   1: 1722269068.167 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readAllLines":
  1722269068.167 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1)

# Run progress: 66.67% complete, ETA 01:29:54
# Fork: 1 of 1
# Warmup Iteration   1: 2504.156 ns/op
Iteration   1: 2381.655 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  2381.655 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10)

# Run progress: 66.80% complete, ETA 01:29:32
# Fork: 1 of 1
# Warmup Iteration   1: 10328.045 ns/op
Iteration   1: 9991.959 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  9991.959 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100)

# Run progress: 66.93% complete, ETA 01:29:10
# Fork: 1 of 1
# Warmup Iteration   1: 90582.486 ns/op
Iteration   1: 89143.948 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  89143.948 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000)

# Run progress: 67.06% complete, ETA 01:28:49
# Fork: 1 of 1
# Warmup Iteration   1: 903733.673 ns/op
Iteration   1: 885295.375 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  885295.375 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10000)

# Run progress: 67.20% complete, ETA 01:28:27
# Fork: 1 of 1
# Warmup Iteration   1: 9236548.272 ns/op
Iteration   1: 9091876.254 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  9091876.254 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100000)

# Run progress: 67.33% complete, ETA 01:28:05
# Fork: 1 of 1
# Warmup Iteration   1: 91859731.193 ns/op
Iteration   1: 91164930.018 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  91164930.018 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000000)

# Run progress: 67.46% complete, ETA 01:27:43
# Fork: 1 of 1
# Warmup Iteration   1: 890938470.833 ns/op
Iteration   1: 919806860.545 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  919806860.545 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 67.59% complete, ETA 01:27:24
# Fork: 1 of 1
# Warmup Iteration   1: 2490.554 ns/op
Iteration   1: 2370.445 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  2370.445 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 67.72% complete, ETA 01:27:02
# Fork: 1 of 1
# Warmup Iteration   1: 13149.357 ns/op
Iteration   1: 12900.672 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  12900.672 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 67.86% complete, ETA 01:26:40
# Fork: 1 of 1
# Warmup Iteration   1: 155668.932 ns/op
Iteration   1: 152298.197 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  152298.197 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 67.99% complete, ETA 01:26:19
# Fork: 1 of 1
# Warmup Iteration   1: 1649727.153 ns/op
Iteration   1: 1626429.526 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1626429.526 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 68.12% complete, ETA 01:25:57
# Fork: 1 of 1
# Warmup Iteration   1: 17479906.520 ns/op
Iteration   1: 17219889.165 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  17219889.165 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 68.25% complete, ETA 01:25:35
# Fork: 1 of 1
# Warmup Iteration   1: 162860599.242 ns/op
Iteration   1: 162925735.226 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  162925735.226 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 68.39% complete, ETA 01:25:14
# Fork: 1 of 1
# Warmup Iteration   1: 1606078714.429 ns/op
Iteration   1: 1659793494.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1659793494.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1)

# Run progress: 68.52% complete, ETA 01:24:55
# Fork: 1 of 1
# Warmup Iteration   1: 2521.551 ns/op
Iteration   1: 2406.523 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  2406.523 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10)

# Run progress: 68.65% complete, ETA 01:24:34
# Fork: 1 of 1
# Warmup Iteration   1: 12030.768 ns/op
Iteration   1: 11812.736 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  11812.736 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100)

# Run progress: 68.78% complete, ETA 01:24:12
# Fork: 1 of 1
# Warmup Iteration   1: 143532.801 ns/op
Iteration   1: 138816.496 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  138816.496 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000)

# Run progress: 68.92% complete, ETA 01:23:50
# Fork: 1 of 1
# Warmup Iteration   1: 1530864.483 ns/op
Iteration   1: 1500457.640 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1500457.640 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10000)

# Run progress: 69.05% complete, ETA 01:23:28
# Fork: 1 of 1
# Warmup Iteration   1: 9829440.609 ns/op
Iteration   1: 11200616.815 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  11200616.815 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100000)

# Run progress: 69.18% complete, ETA 01:23:06
# Fork: 1 of 1
# Warmup Iteration   1: 170147637.305 ns/op
Iteration   1: 158699318.172 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  158699318.172 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000000)

# Run progress: 69.31% complete, ETA 01:22:46
# Fork: 1 of 1
# Warmup Iteration   1: 1496007133.714 ns/op
Iteration   1: 1572295336.571 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1572295336.571 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1)

# Run progress: 69.44% complete, ETA 01:22:27
# Fork: 1 of 1
# Warmup Iteration   1: 2448.537 ns/op
Iteration   1: 2294.722 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  2294.722 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10)

# Run progress: 69.58% complete, ETA 01:22:05
# Fork: 1 of 1
# Warmup Iteration   1: 8256.197 ns/op
Iteration   1: 8003.164 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  8003.164 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100)

# Run progress: 69.71% complete, ETA 01:21:43
# Fork: 1 of 1
# Warmup Iteration   1: 64244.103 ns/op
Iteration   1: 64111.046 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  64111.046 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000)

# Run progress: 69.84% complete, ETA 01:21:21
# Fork: 1 of 1
# Warmup Iteration   1: 640689.181 ns/op
Iteration   1: 631612.890 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  631612.890 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10000)

# Run progress: 69.97% complete, ETA 01:21:00
# Fork: 1 of 1
# Warmup Iteration   1: 6639570.669 ns/op
Iteration   1: 6593432.875 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  6593432.875 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100000)

# Run progress: 70.11% complete, ETA 01:20:38
# Fork: 1 of 1
# Warmup Iteration   1: 35451558.226 ns/op
Iteration   1: 35076075.367 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  35076075.367 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000000)

# Run progress: 70.24% complete, ETA 01:20:16
# Fork: 1 of 1
# Warmup Iteration   1: 637851344.625 ns/op
Iteration   1: 651350761.375 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  651350761.375 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 70.37% complete, ETA 01:19:57
# Fork: 1 of 1
# Warmup Iteration   1: 2546.499 ns/op
Iteration   1: 2430.645 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  2430.645 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 70.50% complete, ETA 01:19:35
# Fork: 1 of 1
# Warmup Iteration   1: 11510.400 ns/op
Iteration   1: 11273.777 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  11273.777 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 70.63% complete, ETA 01:19:13
# Fork: 1 of 1
# Warmup Iteration   1: 129396.014 ns/op
Iteration   1: 128445.675 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  128445.675 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 70.77% complete, ETA 01:18:51
# Fork: 1 of 1
# Warmup Iteration   1: 1402686.772 ns/op
Iteration   1: 1378548.419 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1378548.419 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 70.90% complete, ETA 01:18:30
# Fork: 1 of 1
# Warmup Iteration   1: 14657726.127 ns/op
Iteration   1: 14519488.549 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  14519488.549 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 71.03% complete, ETA 01:18:08
# Fork: 1 of 1
# Warmup Iteration   1: 144160666.271 ns/op
Iteration   1: 143848233.471 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  143848233.471 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 71.16% complete, ETA 01:17:46
# Fork: 1 of 1
# Warmup Iteration   1: 1433335131.571 ns/op
Iteration   1: 1497270564.714 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1497270564.714 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1)

# Run progress: 71.30% complete, ETA 01:17:27
# Fork: 1 of 1
# Warmup Iteration   1: 2625.529 ns/op
Iteration   1: 2499.237 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  2499.237 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10)

# Run progress: 71.43% complete, ETA 01:17:05
# Fork: 1 of 1
# Warmup Iteration   1: 10266.887 ns/op
Iteration   1: 10015.284 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  10015.284 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100)

# Run progress: 71.56% complete, ETA 01:16:43
# Fork: 1 of 1
# Warmup Iteration   1: 117653.893 ns/op
Iteration   1: 115729.164 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  115729.164 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000)

# Run progress: 71.69% complete, ETA 01:16:21
# Fork: 1 of 1
# Warmup Iteration   1: 729788.921 ns/op
Iteration   1: 721502.371 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  721502.371 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10000)

# Run progress: 71.83% complete, ETA 01:16:00
# Fork: 1 of 1
# Warmup Iteration   1: 13335810.081 ns/op
Iteration   1: 13245647.387 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  13245647.387 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100000)

# Run progress: 71.96% complete, ETA 01:15:38
# Fork: 1 of 1
# Warmup Iteration   1: 133808469.105 ns/op
Iteration   1: 133142364.092 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  133142364.092 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000000)

# Run progress: 72.09% complete, ETA 01:15:17
# Fork: 1 of 1
# Warmup Iteration   1: 1272884314.250 ns/op
Iteration   1: 1312788938.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1312788938.500 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1)

# Run progress: 72.22% complete, ETA 01:14:57
# Fork: 1 of 1
# Warmup Iteration   1: 2624.678 ns/op
Iteration   1: 2496.782 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  2496.782 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10)

# Run progress: 72.35% complete, ETA 01:14:35
# Fork: 1 of 1
# Warmup Iteration   1: 8244.119 ns/op
Iteration   1: 8036.752 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  8036.752 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100)

# Run progress: 72.49% complete, ETA 01:14:13
# Fork: 1 of 1
# Warmup Iteration   1: 65663.529 ns/op
Iteration   1: 64863.943 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  64863.943 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000)

# Run progress: 72.62% complete, ETA 01:13:52
# Fork: 1 of 1
# Warmup Iteration   1: 673516.271 ns/op
Iteration   1: 665023.363 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  665023.363 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10000)

# Run progress: 72.75% complete, ETA 01:13:30
# Fork: 1 of 1
# Warmup Iteration   1: 6724542.800 ns/op
Iteration   1: 6626528.240 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  6626528.240 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100000)

# Run progress: 72.88% complete, ETA 01:13:08
# Fork: 1 of 1
# Warmup Iteration   1: 69090241.269 ns/op
Iteration   1: 68791759.384 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  68791759.384 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000000)

# Run progress: 73.02% complete, ETA 01:12:47
# Fork: 1 of 1
# Warmup Iteration   1: 675596479.267 ns/op
Iteration   1: 682153248.267 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  682153248.267 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 73.15% complete, ETA 01:12:27
# Fork: 1 of 1
# Warmup Iteration   1: 2462.133 ns/op
Iteration   1: 2360.654 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  2360.654 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 73.28% complete, ETA 01:12:05
# Fork: 1 of 1
# Warmup Iteration   1: 11703.475 ns/op
Iteration   1: 11480.679 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  11480.679 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 73.41% complete, ETA 01:11:43
# Fork: 1 of 1
# Warmup Iteration   1: 133031.416 ns/op
Iteration   1: 131440.545 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  131440.545 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 73.54% complete, ETA 01:11:21
# Fork: 1 of 1
# Warmup Iteration   1: 1434174.446 ns/op
Iteration   1: 1410757.751 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1410757.751 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 73.68% complete, ETA 01:11:00
# Fork: 1 of 1
# Warmup Iteration   1: 14787726.681 ns/op
Iteration   1: 14674820.691 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  14674820.691 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 73.81% complete, ETA 01:10:38
# Fork: 1 of 1
# Warmup Iteration   1: 147956020.500 ns/op
Iteration   1: 147813525.397 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  147813525.397 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 73.94% complete, ETA 01:10:16
# Fork: 1 of 1
# Warmup Iteration   1: 1481626363.714 ns/op
Iteration   1: 1501199124.143 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1501199124.143 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1)

# Run progress: 74.07% complete, ETA 01:09:57
# Fork: 1 of 1
# Warmup Iteration   1: 2546.462 ns/op
Iteration   1: 2437.701 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  2437.701 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10)

# Run progress: 74.21% complete, ETA 01:09:35
# Fork: 1 of 1
# Warmup Iteration   1: 10815.533 ns/op
Iteration   1: 10480.652 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  10480.652 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100)

# Run progress: 74.34% complete, ETA 01:09:13
# Fork: 1 of 1
# Warmup Iteration   1: 124034.900 ns/op
Iteration   1: 121540.128 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  121540.128 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000)

# Run progress: 74.47% complete, ETA 01:08:52
# Fork: 1 of 1
# Warmup Iteration   1: 1357337.466 ns/op
Iteration   1: 1322873.414 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1322873.414 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10000)

# Run progress: 74.60% complete, ETA 01:08:30
# Fork: 1 of 1
# Warmup Iteration   1: 13880454.712 ns/op
Iteration   1: 13745148.674 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  13745148.674 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100000)

# Run progress: 74.74% complete, ETA 01:08:08
# Fork: 1 of 1
# Warmup Iteration   1: 136678693.500 ns/op
Iteration   1: 136345839.230 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  136345839.230 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000000)

# Run progress: 74.87% complete, ETA 01:07:47
# Fork: 1 of 1
# Warmup Iteration   1: 1317829495.875 ns/op
Iteration   1: 1384894285.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1384894285.500 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1)

# Run progress: 75.00% complete, ETA 01:07:27
# Fork: 1 of 1
# Warmup Iteration   1: 2630.781 ns/op
Iteration   1: 2500.347 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  2500.347 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10)

# Run progress: 75.13% complete, ETA 01:07:05
# Fork: 1 of 1
# Warmup Iteration   1: 9976.149 ns/op
Iteration   1: 9775.199 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  9775.199 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100)

# Run progress: 75.26% complete, ETA 01:06:44
# Fork: 1 of 1
# Warmup Iteration   1: 85669.495 ns/op
Iteration   1: 84567.396 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  84567.396 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000)

# Run progress: 75.40% complete, ETA 01:06:22
# Fork: 1 of 1
# Warmup Iteration   1: 859092.526 ns/op
Iteration   1: 849620.582 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  849620.582 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10000)

# Run progress: 75.53% complete, ETA 01:06:00
# Fork: 1 of 1
# Warmup Iteration   1: 8737150.327 ns/op
Iteration   1: 8630917.132 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  8630917.132 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100000)

# Run progress: 75.66% complete, ETA 01:05:39
# Fork: 1 of 1
# Warmup Iteration   1: 89733547.304 ns/op
Iteration   1: 89162590.858 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  89162590.858 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000000)

# Run progress: 75.79% complete, ETA 01:05:17
# Fork: 1 of 1
# Warmup Iteration   1: 873272588.667 ns/op
Iteration   1: 877570946.917 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  877570946.917 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 75.93% complete, ETA 01:04:57
# Fork: 1 of 1
# Warmup Iteration   1: 2762.074 ns/op
Iteration   1: 2641.295 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  2641.295 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 76.06% complete, ETA 01:04:35
# Fork: 1 of 1
# Warmup Iteration   1: 13745.487 ns/op
Iteration   1: 13478.294 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  13478.294 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 76.19% complete, ETA 01:04:14
# Fork: 1 of 1
# Warmup Iteration   1: 157908.792 ns/op
Iteration   1: 155864.618 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  155864.618 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 76.32% complete, ETA 01:03:52
# Fork: 1 of 1
# Warmup Iteration   1: 1654185.915 ns/op
Iteration   1: 1628106.791 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1628106.791 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 76.46% complete, ETA 01:03:30
# Fork: 1 of 1
# Warmup Iteration   1: 16905064.801 ns/op
Iteration   1: 16633735.317 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  16633735.317 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 76.59% complete, ETA 01:03:09
# Fork: 1 of 1
# Warmup Iteration   1: 166143782.623 ns/op
Iteration   1: 166122645.574 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  166122645.574 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 76.72% complete, ETA 01:02:47
# Fork: 1 of 1
# Warmup Iteration   1: 1651173859.429 ns/op
Iteration   1: 1690503529.167 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1690503529.167 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1)

# Run progress: 76.85% complete, ETA 01:02:28
# Fork: 1 of 1
# Warmup Iteration   1: 3182.865 ns/op
Iteration   1: 3045.705 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  3045.705 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10)

# Run progress: 76.98% complete, ETA 01:02:06
# Fork: 1 of 1
# Warmup Iteration   1: 16369.328 ns/op
Iteration   1: 15956.482 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  15956.482 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100)

# Run progress: 77.12% complete, ETA 01:01:44
# Fork: 1 of 1
# Warmup Iteration   1: 180444.768 ns/op
Iteration   1: 178706.719 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  178706.719 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000)

# Run progress: 77.25% complete, ETA 01:01:23
# Fork: 1 of 1
# Warmup Iteration   1: 1894148.592 ns/op
Iteration   1: 1864496.465 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1864496.465 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10000)

# Run progress: 77.38% complete, ETA 01:01:01
# Fork: 1 of 1
# Warmup Iteration   1: 19182356.259 ns/op
Iteration   1: 19094435.826 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  19094435.826 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100000)

# Run progress: 77.51% complete, ETA 01:00:39
# Fork: 1 of 1
# Warmup Iteration   1: 188580465.333 ns/op
Iteration   1: 187783224.463 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  187783224.463 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000000)

# Run progress: 77.65% complete, ETA 01:00:18
# Fork: 1 of 1
# Warmup Iteration   1: 1827648305.333 ns/op
Iteration   1: 1891037571.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndCustomUtf8Decoder":
  1891037571.500 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1)

# Run progress: 77.78% complete, ETA 00:59:58
# Fork: 1 of 1
# Warmup Iteration   1: 3637.576 ns/op
Iteration   1: 3454.234 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  3454.234 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10)

# Run progress: 77.91% complete, ETA 00:59:36
# Fork: 1 of 1
# Warmup Iteration   1: 7321.497 ns/op
Iteration   1: 7058.994 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  7058.994 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100)

# Run progress: 78.04% complete, ETA 00:59:15
# Fork: 1 of 1
# Warmup Iteration   1: 45830.883 ns/op
Iteration   1: 44809.589 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  44809.589 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000)

# Run progress: 78.17% complete, ETA 00:58:53
# Fork: 1 of 1
# Warmup Iteration   1: 439938.762 ns/op
Iteration   1: 430600.537 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  430600.537 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10000)

# Run progress: 78.31% complete, ETA 00:58:31
# Fork: 1 of 1
# Warmup Iteration   1: 4905122.307 ns/op
Iteration   1: 4777168.960 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  4777168.960 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100000)

# Run progress: 78.44% complete, ETA 00:58:10
# Fork: 1 of 1
# Warmup Iteration   1: 51611245.155 ns/op
Iteration   1: 50557915.667 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  50557915.667 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000000)

# Run progress: 78.57% complete, ETA 00:57:48
# Fork: 1 of 1
# Warmup Iteration   1: 679786589.667 ns/op
Iteration   1: 605656698.176 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  605656698.176 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 78.70% complete, ETA 00:57:28
# Fork: 1 of 1
# Warmup Iteration   1: 3717.763 ns/op
Iteration   1: 3551.596 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  3551.596 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 78.84% complete, ETA 00:57:06
# Fork: 1 of 1
# Warmup Iteration   1: 11958.161 ns/op
Iteration   1: 11606.230 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  11606.230 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 78.97% complete, ETA 00:56:45
# Fork: 1 of 1
# Warmup Iteration   1: 120932.594 ns/op
Iteration   1: 119322.682 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  119322.682 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 79.10% complete, ETA 00:56:23
# Fork: 1 of 1
# Warmup Iteration   1: 1336150.510 ns/op
Iteration   1: 1304927.761 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1304927.761 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 79.23% complete, ETA 00:56:01
# Fork: 1 of 1
# Warmup Iteration   1: 14742665.473 ns/op
Iteration   1: 14562179.712 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  14562179.712 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 79.37% complete, ETA 00:55:40
# Fork: 1 of 1
# Warmup Iteration   1: 154307502.323 ns/op
Iteration   1: 149928692.537 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  149928692.537 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 79.50% complete, ETA 00:55:18
# Fork: 1 of 1
# Warmup Iteration   1: 1673156322.833 ns/op
Iteration   1: 1558984583.286 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1558984583.286 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1)

# Run progress: 79.63% complete, ETA 00:54:58
# Fork: 1 of 1
# Warmup Iteration   1: 3793.025 ns/op
Iteration   1: 3636.870 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  3636.870 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10)

# Run progress: 79.76% complete, ETA 00:54:37
# Fork: 1 of 1
# Warmup Iteration   1: 9086.905 ns/op
Iteration   1: 8843.757 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  8843.757 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100)

# Run progress: 79.89% complete, ETA 00:54:15
# Fork: 1 of 1
# Warmup Iteration   1: 92981.188 ns/op
Iteration   1: 90881.199 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  90881.199 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000)

# Run progress: 80.03% complete, ETA 00:53:53
# Fork: 1 of 1
# Warmup Iteration   1: 998524.753 ns/op
Iteration   1: 977871.092 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  977871.092 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10000)

# Run progress: 80.16% complete, ETA 00:53:32
# Fork: 1 of 1
# Warmup Iteration   1: 10512651.467 ns/op
Iteration   1: 10307773.806 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  10307773.806 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100000)

# Run progress: 80.29% complete, ETA 00:53:10
# Fork: 1 of 1
# Warmup Iteration   1: 106038996.537 ns/op
Iteration   1: 104288171.063 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  104288171.063 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000000)

# Run progress: 80.42% complete, ETA 00:52:48
# Fork: 1 of 1
# Warmup Iteration   1: 1674343022.833 ns/op
Iteration   1: 1429048306.143 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1429048306.143 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1)

# Run progress: 80.56% complete, ETA 00:52:28
# Fork: 1 of 1
# Warmup Iteration   1: 3649.344 ns/op
Iteration   1: 3461.170 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  3461.170 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10)

# Run progress: 80.69% complete, ETA 00:52:06
# Fork: 1 of 1
# Warmup Iteration   1: 5291.091 ns/op
Iteration   1: 5040.573 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  5040.573 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100)

# Run progress: 80.82% complete, ETA 00:51:45
# Fork: 1 of 1
# Warmup Iteration   1: 21543.227 ns/op
Iteration   1: 20507.057 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  20507.057 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000)

# Run progress: 80.95% complete, ETA 00:51:23
# Fork: 1 of 1
# Warmup Iteration   1: 191956.010 ns/op
Iteration   1: 181510.253 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  181510.253 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10000)

# Run progress: 81.08% complete, ETA 00:51:01
# Fork: 1 of 1
# Warmup Iteration   1: 2307615.505 ns/op
Iteration   1: 2198406.031 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  2198406.031 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100000)

# Run progress: 81.22% complete, ETA 00:50:40
# Fork: 1 of 1
# Warmup Iteration   1: 24699051.160 ns/op
Iteration   1: 23753054.291 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  23753054.291 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000000)

# Run progress: 81.35% complete, ETA 00:50:18
# Fork: 1 of 1
# Warmup Iteration   1: 437101666.130 ns/op
Iteration   1: 337638577.800 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  337638577.800 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 81.48% complete, ETA 00:49:58
# Fork: 1 of 1
# Warmup Iteration   1: 3669.006 ns/op
Iteration   1: 3487.035 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  3487.035 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 81.61% complete, ETA 00:49:36
# Fork: 1 of 1
# Warmup Iteration   1: 9980.674 ns/op
Iteration   1: 9671.089 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  9671.089 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 81.75% complete, ETA 00:49:15
# Fork: 1 of 1
# Warmup Iteration   1: 96267.556 ns/op
Iteration   1: 94345.456 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  94345.456 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 81.88% complete, ETA 00:48:53
# Fork: 1 of 1
# Warmup Iteration   1: 1085853.882 ns/op
Iteration   1: 1062584.886 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1062584.886 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 82.01% complete, ETA 00:48:31
# Fork: 1 of 1
# Warmup Iteration   1: 12191177.569 ns/op
Iteration   1: 12012046.384 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  12012046.384 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 82.14% complete, ETA 00:48:10
# Fork: 1 of 1
# Warmup Iteration   1: 126479679.238 ns/op
Iteration   1: 123337589.268 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  123337589.268 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 82.28% complete, ETA 00:47:48
# Fork: 1 of 1
# Warmup Iteration   1: 1370761555.250 ns/op
Iteration   1: 1331811115.625 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1331811115.625 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1)

# Run progress: 82.41% complete, ETA 00:47:28
# Fork: 1 of 1
# Warmup Iteration   1: 3726.411 ns/op
Iteration   1: 3556.648 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  3556.648 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10)

# Run progress: 82.54% complete, ETA 00:47:07
# Fork: 1 of 1
# Warmup Iteration   1: 7227.243 ns/op
Iteration   1: 6926.657 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  6926.657 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100)

# Run progress: 82.67% complete, ETA 00:46:45
# Fork: 1 of 1
# Warmup Iteration   1: 68686.126 ns/op
Iteration   1: 66643.056 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  66643.056 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000)

# Run progress: 82.80% complete, ETA 00:46:23
# Fork: 1 of 1
# Warmup Iteration   1: 753627.636 ns/op
Iteration   1: 739884.505 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  739884.505 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10000)

# Run progress: 82.94% complete, ETA 00:46:02
# Fork: 1 of 1
# Warmup Iteration   1: 8204626.253 ns/op
Iteration   1: 8019354.962 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  8019354.962 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100000)

# Run progress: 83.07% complete, ETA 00:45:40
# Fork: 1 of 1
# Warmup Iteration   1: 83070825.438 ns/op
Iteration   1: 81915312.780 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  81915312.780 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000000)

# Run progress: 83.20% complete, ETA 00:45:19
# Fork: 1 of 1
# Warmup Iteration   1: 1326971665.250 ns/op
Iteration   1: 1186608218.889 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1186608218.889 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1)

# Run progress: 83.33% complete, ETA 00:44:58
# Fork: 1 of 1
# Warmup Iteration   1: 3637.435 ns/op
Iteration   1: 3474.311 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  3474.311 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10)

# Run progress: 83.47% complete, ETA 00:44:37
# Fork: 1 of 1
# Warmup Iteration   1: 5429.834 ns/op
Iteration   1: 5148.766 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  5148.766 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100)

# Run progress: 83.60% complete, ETA 00:44:15
# Fork: 1 of 1
# Warmup Iteration   1: 22736.925 ns/op
Iteration   1: 21636.384 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  21636.384 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000)

# Run progress: 83.73% complete, ETA 00:43:54
# Fork: 1 of 1
# Warmup Iteration   1: 204987.784 ns/op
Iteration   1: 194328.679 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  194328.679 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10000)

# Run progress: 83.86% complete, ETA 00:43:32
# Fork: 1 of 1
# Warmup Iteration   1: 2453892.501 ns/op
Iteration   1: 2330407.397 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  2330407.397 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100000)

# Run progress: 83.99% complete, ETA 00:43:10
# Fork: 1 of 1
# Warmup Iteration   1: 26663138.247 ns/op
Iteration   1: 25602000.962 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  25602000.962 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000000)

# Run progress: 84.13% complete, ETA 00:42:49
# Fork: 1 of 1
# Warmup Iteration   1: 455387516.000 ns/op
Iteration   1: 358192996.379 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  358192996.379 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 84.26% complete, ETA 00:42:28
# Fork: 1 of 1
# Warmup Iteration   1: 3985.679 ns/op
Iteration   1: 3818.387 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  3818.387 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 84.39% complete, ETA 00:42:07
# Fork: 1 of 1
# Warmup Iteration   1: 10089.706 ns/op
Iteration   1: 9756.750 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  9756.750 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 84.52% complete, ETA 00:41:45
# Fork: 1 of 1
# Warmup Iteration   1: 95644.786 ns/op
Iteration   1: 93852.318 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  93852.318 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 84.66% complete, ETA 00:41:24
# Fork: 1 of 1
# Warmup Iteration   1: 1097797.478 ns/op
Iteration   1: 1076179.414 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1076179.414 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 84.79% complete, ETA 00:41:02
# Fork: 1 of 1
# Warmup Iteration   1: 12279501.557 ns/op
Iteration   1: 12084041.447 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  12084041.447 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 84.92% complete, ETA 00:40:40
# Fork: 1 of 1
# Warmup Iteration   1: 128098592.557 ns/op
Iteration   1: 125050033.725 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  125050033.725 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 85.05% complete, ETA 00:40:19
# Fork: 1 of 1
# Warmup Iteration   1: 1385428932.500 ns/op
Iteration   1: 1332349913.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1332349913.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1)

# Run progress: 85.19% complete, ETA 00:39:59
# Fork: 1 of 1
# Warmup Iteration   1: 3765.926 ns/op
Iteration   1: 3593.241 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  3593.241 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10)

# Run progress: 85.32% complete, ETA 00:39:37
# Fork: 1 of 1
# Warmup Iteration   1: 7632.074 ns/op
Iteration   1: 7263.276 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  7263.276 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100)

# Run progress: 85.45% complete, ETA 00:39:15
# Fork: 1 of 1
# Warmup Iteration   1: 72803.355 ns/op
Iteration   1: 70884.287 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  70884.287 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000)

# Run progress: 85.58% complete, ETA 00:38:54
# Fork: 1 of 1
# Warmup Iteration   1: 785052.537 ns/op
Iteration   1: 767865.243 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  767865.243 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10000)

# Run progress: 85.71% complete, ETA 00:38:32
# Fork: 1 of 1
# Warmup Iteration   1: 8458366.544 ns/op
Iteration   1: 8269220.399 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  8269220.399 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100000)

# Run progress: 85.85% complete, ETA 00:38:11
# Fork: 1 of 1
# Warmup Iteration   1: 85277657.212 ns/op
Iteration   1: 84074521.992 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  84074521.992 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000000)

# Run progress: 85.98% complete, ETA 00:37:49
# Fork: 1 of 1
# Warmup Iteration   1: 1472266807.000 ns/op
Iteration   1: 1309009633.250 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1309009633.250 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1)

# Run progress: 86.11% complete, ETA 00:37:29
# Fork: 1 of 1
# Warmup Iteration   1: 3819.599 ns/op
Iteration   1: 3665.055 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  3665.055 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10)

# Run progress: 86.24% complete, ETA 00:37:07
# Fork: 1 of 1
# Warmup Iteration   1: 7493.084 ns/op
Iteration   1: 7237.912 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  7237.912 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100)

# Run progress: 86.38% complete, ETA 00:36:45
# Fork: 1 of 1
# Warmup Iteration   1: 43124.115 ns/op
Iteration   1: 41897.513 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  41897.513 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000)

# Run progress: 86.51% complete, ETA 00:36:24
# Fork: 1 of 1
# Warmup Iteration   1: 406804.097 ns/op
Iteration   1: 396259.897 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  396259.897 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10000)

# Run progress: 86.64% complete, ETA 00:36:02
# Fork: 1 of 1
# Warmup Iteration   1: 4543031.024 ns/op
Iteration   1: 4464929.213 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  4464929.213 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100000)

# Run progress: 86.77% complete, ETA 00:35:41
# Fork: 1 of 1
# Warmup Iteration   1: 48178502.226 ns/op
Iteration   1: 47069331.601 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  47069331.601 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000000)

# Run progress: 86.90% complete, ETA 00:35:19
# Fork: 1 of 1
# Warmup Iteration   1: 653289723.188 ns/op
Iteration   1: 572353014.944 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  572353014.944 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 87.04% complete, ETA 00:34:59
# Fork: 1 of 1
# Warmup Iteration   1: 3914.805 ns/op
Iteration   1: 3757.446 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  3757.446 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 87.17% complete, ETA 00:34:37
# Fork: 1 of 1
# Warmup Iteration   1: 12081.835 ns/op
Iteration   1: 11752.677 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  11752.677 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 87.30% complete, ETA 00:34:15
# Fork: 1 of 1
# Warmup Iteration   1: 117231.387 ns/op
Iteration   1: 115138.874 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  115138.874 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 87.43% complete, ETA 00:33:54
# Fork: 1 of 1
# Warmup Iteration   1: 1302202.361 ns/op
Iteration   1: 1273105.098 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1273105.098 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 87.57% complete, ETA 00:33:32
# Fork: 1 of 1
# Warmup Iteration   1: 14462847.776 ns/op
Iteration   1: 14228023.987 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  14228023.987 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 87.70% complete, ETA 00:33:11
# Fork: 1 of 1
# Warmup Iteration   1: 150716359.940 ns/op
Iteration   1: 146952369.246 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  146952369.246 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 87.83% complete, ETA 00:32:49
# Fork: 1 of 1
# Warmup Iteration   1: 1615396243.286 ns/op
Iteration   1: 1525618307.571 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1525618307.571 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1)

# Run progress: 87.96% complete, ETA 00:32:29
# Fork: 1 of 1
# Warmup Iteration   1: 4389.775 ns/op
Iteration   1: 4194.835 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  4194.835 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10)

# Run progress: 88.10% complete, ETA 00:32:07
# Fork: 1 of 1
# Warmup Iteration   1: 13107.752 ns/op
Iteration   1: 12802.927 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  12802.927 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100)

# Run progress: 88.23% complete, ETA 00:31:46
# Fork: 1 of 1
# Warmup Iteration   1: 127160.193 ns/op
Iteration   1: 124354.466 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  124354.466 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000)

# Run progress: 88.36% complete, ETA 00:31:24
# Fork: 1 of 1
# Warmup Iteration   1: 1335038.114 ns/op
Iteration   1: 1310092.066 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1310092.066 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10000)

# Run progress: 88.49% complete, ETA 00:31:03
# Fork: 1 of 1
# Warmup Iteration   1: 13873305.839 ns/op
Iteration   1: 13586175.373 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  13586175.373 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100000)

# Run progress: 88.62% complete, ETA 00:30:41
# Fork: 1 of 1
# Warmup Iteration   1: 139357803.111 ns/op
Iteration   1: 139097847.792 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  139097847.792 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000000)

# Run progress: 88.76% complete, ETA 00:30:20
# Fork: 1 of 1
# Warmup Iteration   1: 1796862760.167 ns/op
Iteration   1: 1750689534.667 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesAndThenBufferedReader":
  1750689534.667 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1)

# Run progress: 88.89% complete, ETA 00:29:59
# Fork: 1 of 1
# Warmup Iteration   1: 2372.131 ns/op
Iteration   1: 2264.008 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2264.008 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10)

# Run progress: 89.02% complete, ETA 00:29:37
# Fork: 1 of 1
# Warmup Iteration   1: 6071.231 ns/op
Iteration   1: 5919.821 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  5919.821 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100)

# Run progress: 89.15% complete, ETA 00:29:16
# Fork: 1 of 1
# Warmup Iteration   1: 44185.335 ns/op
Iteration   1: 43545.232 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  43545.232 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000)

# Run progress: 89.29% complete, ETA 00:28:54
# Fork: 1 of 1
# Warmup Iteration   1: 451254.730 ns/op
Iteration   1: 446471.853 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  446471.853 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 10000)

# Run progress: 89.42% complete, ETA 00:28:33
# Fork: 1 of 1
# Warmup Iteration   1: 4958735.296 ns/op
Iteration   1: 4878182.116 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  4878182.116 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 100000)

# Run progress: 89.55% complete, ETA 00:28:11
# Fork: 1 of 1
# Warmup Iteration   1: 51669524.253 ns/op
Iteration   1: 50642316.758 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  50642316.758 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = ASCII, lineCount = 1000000)

# Run progress: 89.68% complete, ETA 00:27:50
# Fork: 1 of 1
# Warmup Iteration   1: 760259033.500 ns/op
Iteration   1: 612283397.353 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  612283397.353 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 89.81% complete, ETA 00:27:29
# Fork: 1 of 1
# Warmup Iteration   1: 2517.765 ns/op
Iteration   1: 2387.226 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2387.226 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 89.95% complete, ETA 00:27:07
# Fork: 1 of 1
# Warmup Iteration   1: 10638.257 ns/op
Iteration   1: 10409.606 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  10409.606 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 90.08% complete, ETA 00:26:46
# Fork: 1 of 1
# Warmup Iteration   1: 116536.191 ns/op
Iteration   1: 114883.746 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  114883.746 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 90.21% complete, ETA 00:26:24
# Fork: 1 of 1
# Warmup Iteration   1: 1341234.031 ns/op
Iteration   1: 1319563.948 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1319563.948 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 90.34% complete, ETA 00:26:03
# Fork: 1 of 1
# Warmup Iteration   1: 14833107.692 ns/op
Iteration   1: 14640864.208 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  14640864.208 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 90.48% complete, ETA 00:25:41
# Fork: 1 of 1
# Warmup Iteration   1: 155732275.462 ns/op
Iteration   1: 151621831.227 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  151621831.227 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 90.61% complete, ETA 00:25:20
# Fork: 1 of 1
# Warmup Iteration   1: 1740560342.333 ns/op
Iteration   1: 1594576736.286 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1594576736.286 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1)

# Run progress: 90.74% complete, ETA 00:24:59
# Fork: 1 of 1
# Warmup Iteration   1: 2581.470 ns/op
Iteration   1: 2483.575 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2483.575 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10)

# Run progress: 90.87% complete, ETA 00:24:38
# Fork: 1 of 1
# Warmup Iteration   1: 8144.479 ns/op
Iteration   1: 7957.720 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  7957.720 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100)

# Run progress: 91.01% complete, ETA 00:24:16
# Fork: 1 of 1
# Warmup Iteration   1: 94581.010 ns/op
Iteration   1: 93108.714 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  93108.714 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000)

# Run progress: 91.14% complete, ETA 00:23:55
# Fork: 1 of 1
# Warmup Iteration   1: 1022030.613 ns/op
Iteration   1: 1006924.274 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1006924.274 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 10000)

# Run progress: 91.27% complete, ETA 00:23:33
# Fork: 1 of 1
# Warmup Iteration   1: 10641357.233 ns/op
Iteration   1: 10502909.425 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  10502909.425 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 100000)

# Run progress: 91.40% complete, ETA 00:23:12
# Fork: 1 of 1
# Warmup Iteration   1: 109301732.696 ns/op
Iteration   1: 106034918.663 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  106034918.663 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = -1, inputType = MIXED, lineCount = 1000000)

# Run progress: 91.53% complete, ETA 00:22:50
# Fork: 1 of 1
# Warmup Iteration   1: 1648199635.429 ns/op
Iteration   1: 1443967294.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1443967294.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1)

# Run progress: 91.67% complete, ETA 00:22:29
# Fork: 1 of 1
# Warmup Iteration   1: 2323.952 ns/op
Iteration   1: 2234.469 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2234.469 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10)

# Run progress: 91.80% complete, ETA 00:22:08
# Fork: 1 of 1
# Warmup Iteration   1: 4100.058 ns/op
Iteration   1: 3954.241 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  3954.241 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100)

# Run progress: 91.93% complete, ETA 00:21:46
# Fork: 1 of 1
# Warmup Iteration   1: 19914.454 ns/op
Iteration   1: 19459.041 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  19459.041 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000)

# Run progress: 92.06% complete, ETA 00:21:25
# Fork: 1 of 1
# Warmup Iteration   1: 197408.664 ns/op
Iteration   1: 193903.994 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  193903.994 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 10000)

# Run progress: 92.20% complete, ETA 00:21:03
# Fork: 1 of 1
# Warmup Iteration   1: 2403044.542 ns/op
Iteration   1: 2347999.398 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2347999.398 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 100000)

# Run progress: 92.33% complete, ETA 00:20:42
# Fork: 1 of 1
# Warmup Iteration   1: 25301239.838 ns/op
Iteration   1: 24658385.712 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  24658385.712 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = ASCII, lineCount = 1000000)

# Run progress: 92.46% complete, ETA 00:20:20
# Fork: 1 of 1
# Warmup Iteration   1: 424916498.542 ns/op
Iteration   1: 324668266.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  324668266.000 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 92.59% complete, ETA 00:19:59
# Fork: 1 of 1
# Warmup Iteration   1: 2390.580 ns/op
Iteration   1: 2277.419 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2277.419 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 92.72% complete, ETA 00:19:38
# Fork: 1 of 1
# Warmup Iteration   1: 8740.902 ns/op
Iteration   1: 8543.385 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  8543.385 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 92.86% complete, ETA 00:19:16
# Fork: 1 of 1
# Warmup Iteration   1: 93078.748 ns/op
Iteration   1: 92208.187 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  92208.187 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 92.99% complete, ETA 00:18:55
# Fork: 1 of 1
# Warmup Iteration   1: 1087436.804 ns/op
Iteration   1: 1065579.106 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1065579.106 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 93.12% complete, ETA 00:18:33
# Fork: 1 of 1
# Warmup Iteration   1: 12257723.826 ns/op
Iteration   1: 12130748.399 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  12130748.399 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 93.25% complete, ETA 00:18:12
# Fork: 1 of 1
# Warmup Iteration   1: 127108590.304 ns/op
Iteration   1: 123906718.914 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  123906718.914 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 93.39% complete, ETA 00:17:50
# Fork: 1 of 1
# Warmup Iteration   1: 1433270818.000 ns/op
Iteration   1: 1297784366.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1297784366.500 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1)

# Run progress: 93.52% complete, ETA 00:17:29
# Fork: 1 of 1
# Warmup Iteration   1: 2441.456 ns/op
Iteration   1: 2333.631 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2333.631 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10)

# Run progress: 93.65% complete, ETA 00:17:08
# Fork: 1 of 1
# Warmup Iteration   1: 6298.138 ns/op
Iteration   1: 6125.507 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  6125.507 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100)

# Run progress: 93.78% complete, ETA 00:16:46
# Fork: 1 of 1
# Warmup Iteration   1: 69707.373 ns/op
Iteration   1: 69015.856 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  69015.856 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000)

# Run progress: 93.92% complete, ETA 00:16:25
# Fork: 1 of 1
# Warmup Iteration   1: 778984.637 ns/op
Iteration   1: 770947.151 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  770947.151 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 10000)

# Run progress: 94.05% complete, ETA 00:16:03
# Fork: 1 of 1
# Warmup Iteration   1: 8388987.320 ns/op
Iteration   1: 8263755.028 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  8263755.028 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 100000)

# Run progress: 94.18% complete, ETA 00:15:42
# Fork: 1 of 1
# Warmup Iteration   1: 85988417.479 ns/op
Iteration   1: 83737220.825 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  83737220.825 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 0, inputType = MIXED, lineCount = 1000000)

# Run progress: 94.31% complete, ETA 00:15:20
# Fork: 1 of 1
# Warmup Iteration   1: 1349736981.375 ns/op
Iteration   1: 1208564388.222 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1208564388.222 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1)

# Run progress: 94.44% complete, ETA 00:14:59
# Fork: 1 of 1
# Warmup Iteration   1: 2365.806 ns/op
Iteration   1: 2264.609 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2264.609 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10)

# Run progress: 94.58% complete, ETA 00:14:38
# Fork: 1 of 1
# Warmup Iteration   1: 4174.982 ns/op
Iteration   1: 4039.297 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  4039.297 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100)

# Run progress: 94.71% complete, ETA 00:14:16
# Fork: 1 of 1
# Warmup Iteration   1: 21036.254 ns/op
Iteration   1: 20509.270 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  20509.270 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000)

# Run progress: 94.84% complete, ETA 00:13:55
# Fork: 1 of 1
# Warmup Iteration   1: 209107.533 ns/op
Iteration   1: 206006.047 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  206006.047 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 10000)

# Run progress: 94.97% complete, ETA 00:13:33
# Fork: 1 of 1
# Warmup Iteration   1: 2506980.130 ns/op
Iteration   1: 2461511.274 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2461511.274 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 100000)

# Run progress: 95.11% complete, ETA 00:13:12
# Fork: 1 of 1
# Warmup Iteration   1: 27028369.000 ns/op
Iteration   1: 26398313.256 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  26398313.256 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = ASCII, lineCount = 1000000)

# Run progress: 95.24% complete, ETA 00:12:51
# Fork: 1 of 1
# Warmup Iteration   1: 450978883.043 ns/op
Iteration   1: 351118491.897 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  351118491.897 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 95.37% complete, ETA 00:12:29
# Fork: 1 of 1
# Warmup Iteration   1: 2386.074 ns/op
Iteration   1: 2302.368 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2302.368 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 95.50% complete, ETA 00:12:08
# Fork: 1 of 1
# Warmup Iteration   1: 8810.832 ns/op
Iteration   1: 8659.410 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  8659.410 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 95.63% complete, ETA 00:11:46
# Fork: 1 of 1
# Warmup Iteration   1: 93390.677 ns/op
Iteration   1: 92070.685 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  92070.685 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 95.77% complete, ETA 00:11:25
# Fork: 1 of 1
# Warmup Iteration   1: 1112973.313 ns/op
Iteration   1: 1091408.109 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1091408.109 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 95.90% complete, ETA 00:11:03
# Fork: 1 of 1
# Warmup Iteration   1: 12508542.963 ns/op
Iteration   1: 12307120.301 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  12307120.301 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 96.03% complete, ETA 00:10:42
# Fork: 1 of 1
# Warmup Iteration   1: 130433092.701 ns/op
Iteration   1: 126095577.113 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  126095577.113 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 96.16% complete, ETA 00:10:21
# Fork: 1 of 1
# Warmup Iteration   1: 1460107238.286 ns/op
Iteration   1: 1332548068.750 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1332548068.750 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1)

# Run progress: 96.30% complete, ETA 00:09:59
# Fork: 1 of 1
# Warmup Iteration   1: 2440.513 ns/op
Iteration   1: 2355.837 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2355.837 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10)

# Run progress: 96.43% complete, ETA 00:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 6577.032 ns/op
Iteration   1: 6403.239 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  6403.239 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100)

# Run progress: 96.56% complete, ETA 00:09:16
# Fork: 1 of 1
# Warmup Iteration   1: 71409.302 ns/op
Iteration   1: 70458.759 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  70458.759 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000)

# Run progress: 96.69% complete, ETA 00:08:55
# Fork: 1 of 1
# Warmup Iteration   1: 809580.796 ns/op
Iteration   1: 801349.665 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  801349.665 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 10000)

# Run progress: 96.83% complete, ETA 00:08:34
# Fork: 1 of 1
# Warmup Iteration   1: 8671986.503 ns/op
Iteration   1: 8522728.534 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  8522728.534 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 100000)

# Run progress: 96.96% complete, ETA 00:08:12
# Fork: 1 of 1
# Warmup Iteration   1: 88421185.781 ns/op
Iteration   1: 86642812.009 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  86642812.009 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 10, inputType = MIXED, lineCount = 1000000)

# Run progress: 97.09% complete, ETA 00:07:51
# Fork: 1 of 1
# Warmup Iteration   1: 1469331177.714 ns/op
Iteration   1: 1261708424.444 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1261708424.444 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1)

# Run progress: 97.22% complete, ETA 00:07:29
# Fork: 1 of 1
# Warmup Iteration   1: 2499.268 ns/op
Iteration   1: 2393.571 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2393.571 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10)

# Run progress: 97.35% complete, ETA 00:07:08
# Fork: 1 of 1
# Warmup Iteration   1: 6191.521 ns/op
Iteration   1: 6037.166 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  6037.166 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100)

# Run progress: 97.49% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: 41733.990 ns/op
Iteration   1: 41080.467 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  41080.467 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000)

# Run progress: 97.62% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 415569.685 ns/op
Iteration   1: 409753.189 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  409753.189 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 10000)

# Run progress: 97.75% complete, ETA 00:06:04
# Fork: 1 of 1
# Warmup Iteration   1: 4653761.859 ns/op
Iteration   1: 4545106.090 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  4545106.090 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 100000)

# Run progress: 97.88% complete, ETA 00:05:42
# Fork: 1 of 1
# Warmup Iteration   1: 48887731.322 ns/op
Iteration   1: 48037317.502 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  48037317.502 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = ASCII, lineCount = 1000000)

# Run progress: 98.02% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 696454877.733 ns/op
Iteration   1: 574496430.889 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  574496430.889 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1)

# Run progress: 98.15% complete, ETA 00:04:59
# Fork: 1 of 1
# Warmup Iteration   1: 2627.182 ns/op
Iteration   1: 2512.952 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2512.952 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10)

# Run progress: 98.28% complete, ETA 00:04:38
# Fork: 1 of 1
# Warmup Iteration   1: 10762.862 ns/op
Iteration   1: 10543.109 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  10543.109 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100)

# Run progress: 98.41% complete, ETA 00:04:17
# Fork: 1 of 1
# Warmup Iteration   1: 114611.909 ns/op
Iteration   1: 113121.172 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  113121.172 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000)

# Run progress: 98.54% complete, ETA 00:03:55
# Fork: 1 of 1
# Warmup Iteration   1: 1313371.644 ns/op
Iteration   1: 1294346.324 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1294346.324 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 10000)

# Run progress: 98.68% complete, ETA 00:03:34
# Fork: 1 of 1
# Warmup Iteration   1: 14565694.332 ns/op
Iteration   1: 14343823.480 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  14343823.480 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 100000)

# Run progress: 98.81% complete, ETA 00:03:12
# Fork: 1 of 1
# Warmup Iteration   1: 152036344.667 ns/op
Iteration   1: 148551403.029 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  148551403.029 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = SINGLE_CHAR_ONLY, lineCount = 1000000)

# Run progress: 98.94% complete, ETA 00:02:51
# Fork: 1 of 1
# Warmup Iteration   1: 1624584139.571 ns/op
Iteration   1: 1528748627.857 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1528748627.857 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1)

# Run progress: 99.07% complete, ETA 00:02:29
# Fork: 1 of 1
# Warmup Iteration   1: 3085.321 ns/op
Iteration   1: 2965.826 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  2965.826 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10)

# Run progress: 99.21% complete, ETA 00:02:08
# Fork: 1 of 1
# Warmup Iteration   1: 11974.627 ns/op
Iteration   1: 11803.114 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  11803.114 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100)

# Run progress: 99.34% complete, ETA 00:01:47
# Fork: 1 of 1
# Warmup Iteration   1: 128746.020 ns/op
Iteration   1: 128045.130 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  128045.130 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000)

# Run progress: 99.47% complete, ETA 00:01:25
# Fork: 1 of 1
# Warmup Iteration   1: 1361676.258 ns/op
Iteration   1: 1332964.740 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1332964.740 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 10000)

# Run progress: 99.60% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: 14106108.836 ns/op
Iteration   1: 13887826.110 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  13887826.110 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 100000)

# Run progress: 99.74% complete, ETA 00:00:42
# Fork: 1 of 1
# Warmup Iteration   1: 146068151.087 ns/op
Iteration   1: 141500182.254 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  141500182.254 ns/op


# JMH 1.17.4 (released 344 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit
# Parameters: (cpuTokens = 100, inputType = MIXED, lineCount = 1000000)

# Run progress: 99.87% complete, ETA 00:00:21
# Fork: 1 of 1
# Warmup Iteration   1: 2079613531.600 ns/op
Iteration   1: 1887403781.333 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.readBytesOwnLineSplit":
  1887403781.333 ns/op


# Run complete. Total time: 04:29:58

Benchmark                                                   (cpuTokens)       (inputType)  (lineCount)  Mode  Cnt           Score   Error  Units
ReadLinesBenchmark.baseline                                          -1             ASCII            1  avgt                3.157          ns/op
ReadLinesBenchmark.baseline                                          -1             ASCII           10  avgt               22.992          ns/op
ReadLinesBenchmark.baseline                                          -1             ASCII          100  avgt              231.100          ns/op
ReadLinesBenchmark.baseline                                          -1             ASCII         1000  avgt             2215.656          ns/op
ReadLinesBenchmark.baseline                                          -1             ASCII        10000  avgt            22245.291          ns/op
ReadLinesBenchmark.baseline                                          -1             ASCII       100000  avgt           239839.463          ns/op
ReadLinesBenchmark.baseline                                          -1             ASCII      1000000  avgt          2311683.987          ns/op
ReadLinesBenchmark.baseline                                          -1  SINGLE_CHAR_ONLY            1  avgt                3.154          ns/op
ReadLinesBenchmark.baseline                                          -1  SINGLE_CHAR_ONLY           10  avgt               23.000          ns/op
ReadLinesBenchmark.baseline                                          -1  SINGLE_CHAR_ONLY          100  avgt              230.630          ns/op
ReadLinesBenchmark.baseline                                          -1  SINGLE_CHAR_ONLY         1000  avgt             2222.707          ns/op
ReadLinesBenchmark.baseline                                          -1  SINGLE_CHAR_ONLY        10000  avgt            22244.021          ns/op
ReadLinesBenchmark.baseline                                          -1  SINGLE_CHAR_ONLY       100000  avgt           239508.518          ns/op
ReadLinesBenchmark.baseline                                          -1  SINGLE_CHAR_ONLY      1000000  avgt          2311231.033          ns/op
ReadLinesBenchmark.baseline                                          -1             MIXED            1  avgt                3.153          ns/op
ReadLinesBenchmark.baseline                                          -1             MIXED           10  avgt               23.025          ns/op
ReadLinesBenchmark.baseline                                          -1             MIXED          100  avgt              230.704          ns/op
ReadLinesBenchmark.baseline                                          -1             MIXED         1000  avgt             2224.703          ns/op
ReadLinesBenchmark.baseline                                          -1             MIXED        10000  avgt            22272.350          ns/op
ReadLinesBenchmark.baseline                                          -1             MIXED       100000  avgt           239727.147          ns/op
ReadLinesBenchmark.baseline                                          -1             MIXED      1000000  avgt          2310196.855          ns/op
ReadLinesBenchmark.baseline                                           0             ASCII            1  avgt                3.092          ns/op
ReadLinesBenchmark.baseline                                           0             ASCII           10  avgt               23.189          ns/op
ReadLinesBenchmark.baseline                                           0             ASCII          100  avgt              231.414          ns/op
ReadLinesBenchmark.baseline                                           0             ASCII         1000  avgt             2220.111          ns/op
ReadLinesBenchmark.baseline                                           0             ASCII        10000  avgt            22266.381          ns/op
ReadLinesBenchmark.baseline                                           0             ASCII       100000  avgt           231072.803          ns/op
ReadLinesBenchmark.baseline                                           0             ASCII      1000000  avgt          2290859.907          ns/op
ReadLinesBenchmark.baseline                                           0  SINGLE_CHAR_ONLY            1  avgt                3.089          ns/op
ReadLinesBenchmark.baseline                                           0  SINGLE_CHAR_ONLY           10  avgt               23.214          ns/op
ReadLinesBenchmark.baseline                                           0  SINGLE_CHAR_ONLY          100  avgt              231.698          ns/op
ReadLinesBenchmark.baseline                                           0  SINGLE_CHAR_ONLY         1000  avgt             2217.796          ns/op
ReadLinesBenchmark.baseline                                           0  SINGLE_CHAR_ONLY        10000  avgt            22208.657          ns/op
ReadLinesBenchmark.baseline                                           0  SINGLE_CHAR_ONLY       100000  avgt           230726.036          ns/op
ReadLinesBenchmark.baseline                                           0  SINGLE_CHAR_ONLY      1000000  avgt          2253917.707          ns/op
ReadLinesBenchmark.baseline                                           0             MIXED            1  avgt                3.090          ns/op
ReadLinesBenchmark.baseline                                           0             MIXED           10  avgt               23.205          ns/op
ReadLinesBenchmark.baseline                                           0             MIXED          100  avgt              230.829          ns/op
ReadLinesBenchmark.baseline                                           0             MIXED         1000  avgt             2214.663          ns/op
ReadLinesBenchmark.baseline                                           0             MIXED        10000  avgt            22185.262          ns/op
ReadLinesBenchmark.baseline                                           0             MIXED       100000  avgt           230997.880          ns/op
ReadLinesBenchmark.baseline                                           0             MIXED      1000000  avgt          2251523.314          ns/op
ReadLinesBenchmark.baseline                                          10             ASCII            1  avgt               15.034          ns/op
ReadLinesBenchmark.baseline                                          10             ASCII           10  avgt              146.994          ns/op
ReadLinesBenchmark.baseline                                          10             ASCII          100  avgt             1398.757          ns/op
ReadLinesBenchmark.baseline                                          10             ASCII         1000  avgt            14205.686          ns/op
ReadLinesBenchmark.baseline                                          10             ASCII        10000  avgt           141185.479          ns/op
ReadLinesBenchmark.baseline                                          10             ASCII       100000  avgt          1396253.462          ns/op
ReadLinesBenchmark.baseline                                          10             ASCII      1000000  avgt         14324688.432          ns/op
ReadLinesBenchmark.baseline                                          10  SINGLE_CHAR_ONLY            1  avgt               15.075          ns/op
ReadLinesBenchmark.baseline                                          10  SINGLE_CHAR_ONLY           10  avgt              146.967          ns/op
ReadLinesBenchmark.baseline                                          10  SINGLE_CHAR_ONLY          100  avgt             1415.305          ns/op
ReadLinesBenchmark.baseline                                          10  SINGLE_CHAR_ONLY         1000  avgt            13995.079          ns/op
ReadLinesBenchmark.baseline                                          10  SINGLE_CHAR_ONLY        10000  avgt           141904.940          ns/op
ReadLinesBenchmark.baseline                                          10  SINGLE_CHAR_ONLY       100000  avgt          1506096.634          ns/op
ReadLinesBenchmark.baseline                                          10  SINGLE_CHAR_ONLY      1000000  avgt         14289362.161          ns/op
ReadLinesBenchmark.baseline                                          10             MIXED            1  avgt               15.105          ns/op
ReadLinesBenchmark.baseline                                          10             MIXED           10  avgt              152.362          ns/op
ReadLinesBenchmark.baseline                                          10             MIXED          100  avgt             1404.199          ns/op
ReadLinesBenchmark.baseline                                          10             MIXED         1000  avgt            14050.619          ns/op
ReadLinesBenchmark.baseline                                          10             MIXED        10000  avgt           142743.376          ns/op
ReadLinesBenchmark.baseline                                          10             MIXED       100000  avgt          1393431.241          ns/op
ReadLinesBenchmark.baseline                                          10             MIXED      1000000  avgt         14290385.561          ns/op
ReadLinesBenchmark.baseline                                         100             ASCII            1  avgt              215.220          ns/op
ReadLinesBenchmark.baseline                                         100             ASCII           10  avgt             2143.731          ns/op
ReadLinesBenchmark.baseline                                         100             ASCII          100  avgt            21373.212          ns/op
ReadLinesBenchmark.baseline                                         100             ASCII         1000  avgt           213704.061          ns/op
ReadLinesBenchmark.baseline                                         100             ASCII        10000  avgt          2135233.001          ns/op
ReadLinesBenchmark.baseline                                         100             ASCII       100000  avgt         21414938.914          ns/op
ReadLinesBenchmark.baseline                                         100             ASCII      1000000  avgt        213481545.064          ns/op
ReadLinesBenchmark.baseline                                         100  SINGLE_CHAR_ONLY            1  avgt              215.015          ns/op
ReadLinesBenchmark.baseline                                         100  SINGLE_CHAR_ONLY           10  avgt             2142.769          ns/op
ReadLinesBenchmark.baseline                                         100  SINGLE_CHAR_ONLY          100  avgt            21413.414          ns/op
ReadLinesBenchmark.baseline                                         100  SINGLE_CHAR_ONLY         1000  avgt           213699.652          ns/op
ReadLinesBenchmark.baseline                                         100  SINGLE_CHAR_ONLY        10000  avgt          2136256.571          ns/op
ReadLinesBenchmark.baseline                                         100  SINGLE_CHAR_ONLY       100000  avgt         21329007.881          ns/op
ReadLinesBenchmark.baseline                                         100  SINGLE_CHAR_ONLY      1000000  avgt        213716283.851          ns/op
ReadLinesBenchmark.baseline                                         100             MIXED            1  avgt              215.388          ns/op
ReadLinesBenchmark.baseline                                         100             MIXED           10  avgt             2145.016          ns/op
ReadLinesBenchmark.baseline                                         100             MIXED          100  avgt            21384.739          ns/op
ReadLinesBenchmark.baseline                                         100             MIXED         1000  avgt           213504.370          ns/op
ReadLinesBenchmark.baseline                                         100             MIXED        10000  avgt          2134137.893          ns/op
ReadLinesBenchmark.baseline                                         100             MIXED       100000  avgt         21358820.207          ns/op
ReadLinesBenchmark.baseline                                         100             MIXED      1000000  avgt        213646577.617          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             ASCII            1  avgt             2748.029          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             ASCII           10  avgt             9492.715          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             ASCII          100  avgt            84477.525          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             ASCII         1000  avgt           837570.670          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             ASCII        10000  avgt          8345107.379          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             ASCII       100000  avgt         84187546.008          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             ASCII      1000000  avgt        841275235.417          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1  SINGLE_CHAR_ONLY            1  avgt             2774.194          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1  SINGLE_CHAR_ONLY           10  avgt            16796.626          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1  SINGLE_CHAR_ONLY          100  avgt           226885.885          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1  SINGLE_CHAR_ONLY         1000  avgt          1723624.344          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1  SINGLE_CHAR_ONLY        10000  avgt         17323945.024          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1  SINGLE_CHAR_ONLY       100000  avgt        173904046.224          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1  SINGLE_CHAR_ONLY      1000000  avgt       1722763565.667          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             MIXED            1  avgt             2723.077          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             MIXED           10  avgt            13447.251          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             MIXED          100  avgt           173371.627          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             MIXED         1000  avgt          1311206.027          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             MIXED        10000  avgt         13059207.923          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             MIXED       100000  avgt        131359780.364          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           -1             MIXED      1000000  avgt       1293878818.250          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             ASCII            1  avgt             2716.090          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             ASCII           10  avgt             7550.411          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             ASCII          100  avgt            62523.957          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             ASCII         1000  avgt           604862.667          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             ASCII        10000  avgt          6057536.997          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             ASCII       100000  avgt         60008154.060          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             ASCII      1000000  avgt        600859334.235          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0  SINGLE_CHAR_ONLY            1  avgt             2826.138          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0  SINGLE_CHAR_ONLY           10  avgt            14983.918          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0  SINGLE_CHAR_ONLY          100  avgt           196857.429          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0  SINGLE_CHAR_ONLY         1000  avgt          1491690.062          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0  SINGLE_CHAR_ONLY        10000  avgt         14926982.925          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0  SINGLE_CHAR_ONLY       100000  avgt        150211083.388          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0  SINGLE_CHAR_ONLY      1000000  avgt       1494990771.429          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             MIXED            1  avgt             2740.118          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             MIXED           10  avgt            11520.574          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             MIXED          100  avgt           149620.046          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             MIXED         1000  avgt          1091382.781          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             MIXED        10000  avgt         10965854.904          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             MIXED       100000  avgt        109774794.109          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder            0             MIXED      1000000  avgt       1093104956.300          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             ASCII            1  avgt             2686.242          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             ASCII           10  avgt             7748.787          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             ASCII          100  avgt            63525.351          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             ASCII         1000  avgt           613070.019          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             ASCII        10000  avgt          6093142.027          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             ASCII       100000  avgt         61240558.482          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             ASCII      1000000  avgt        610958307.000          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10  SINGLE_CHAR_ONLY            1  avgt             2816.667          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10  SINGLE_CHAR_ONLY           10  avgt            14927.088          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10  SINGLE_CHAR_ONLY          100  avgt           203995.176          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10  SINGLE_CHAR_ONLY         1000  avgt          1491122.722          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10  SINGLE_CHAR_ONLY        10000  avgt         15030738.691          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10  SINGLE_CHAR_ONLY       100000  avgt        150063864.791          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10  SINGLE_CHAR_ONLY      1000000  avgt       1544563193.857          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             MIXED            1  avgt             2744.099          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             MIXED           10  avgt            11944.344          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             MIXED          100  avgt           154193.653          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             MIXED         1000  avgt          1121473.029          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             MIXED        10000  avgt         11383776.411          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             MIXED       100000  avgt        112473045.101          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder           10             MIXED      1000000  avgt       1127343147.111          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             ASCII            1  avgt             2886.140          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             ASCII           10  avgt             9744.626          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             ASCII          100  avgt            83911.345          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             ASCII         1000  avgt           815663.973          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             ASCII        10000  avgt          8220169.903          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             ASCII       100000  avgt         81079873.742          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             ASCII      1000000  avgt        806897666.000          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100  SINGLE_CHAR_ONLY            1  avgt             2944.807          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100  SINGLE_CHAR_ONLY           10  avgt            17022.273          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100  SINGLE_CHAR_ONLY          100  avgt           222705.214          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100  SINGLE_CHAR_ONLY         1000  avgt          1689636.432          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100  SINGLE_CHAR_ONLY        10000  avgt         16996428.774          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100  SINGLE_CHAR_ONLY       100000  avgt        170715095.220          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100  SINGLE_CHAR_ONLY      1000000  avgt       1700919699.333          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             MIXED            1  avgt             3413.046          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             MIXED           10  avgt            17504.927          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             MIXED          100  avgt           210180.043          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             MIXED         1000  avgt          1661919.763          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             MIXED        10000  avgt         16603470.327          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             MIXED       100000  avgt        166807794.817          ns/op
ReadLinesBenchmark.bufferedInputStreamAndCustomUtf8Decoder          100             MIXED      1000000  avgt       1655728601.429          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             ASCII            1  avgt             4541.836          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             ASCII           10  avgt             7522.483          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             ASCII          100  avgt            41895.050          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             ASCII         1000  avgt           383983.049          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             ASCII        10000  avgt          3828039.230          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             ASCII       100000  avgt         38600212.396          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             ASCII      1000000  avgt        385315444.462          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1  SINGLE_CHAR_ONLY            1  avgt             4516.174          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1  SINGLE_CHAR_ONLY           10  avgt            12034.096          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1  SINGLE_CHAR_ONLY          100  avgt           119637.363          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1  SINGLE_CHAR_ONLY         1000  avgt          1295134.442          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1  SINGLE_CHAR_ONLY        10000  avgt         14086699.137          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1  SINGLE_CHAR_ONLY       100000  avgt        126726660.924          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1  SINGLE_CHAR_ONLY      1000000  avgt       1259709677.875          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             MIXED            1  avgt             4537.412          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             MIXED           10  avgt             9335.846          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             MIXED          100  avgt            89148.154          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             MIXED         1000  avgt           932613.929          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             MIXED        10000  avgt          9526982.845          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             MIXED       100000  avgt         94047231.196          ns/op
ReadLinesBenchmark.forEachIndirect                                   -1             MIXED      1000000  avgt        953956634.727          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             ASCII            1  avgt             4395.633          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             ASCII           10  avgt             5572.257          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             ASCII          100  avgt            18443.205          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             ASCII         1000  avgt           146120.041          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             ASCII        10000  avgt          1431179.403          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             ASCII       100000  avgt         15197151.947          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             ASCII      1000000  avgt        149988724.119          ns/op
ReadLinesBenchmark.forEachIndirect                                    0  SINGLE_CHAR_ONLY            1  avgt             4466.903          ns/op
ReadLinesBenchmark.forEachIndirect                                    0  SINGLE_CHAR_ONLY           10  avgt             9880.738          ns/op
ReadLinesBenchmark.forEachIndirect                                    0  SINGLE_CHAR_ONLY          100  avgt            94526.153          ns/op
ReadLinesBenchmark.forEachIndirect                                    0  SINGLE_CHAR_ONLY         1000  avgt          1058357.801          ns/op
ReadLinesBenchmark.forEachIndirect                                    0  SINGLE_CHAR_ONLY        10000  avgt         11657898.566          ns/op
ReadLinesBenchmark.forEachIndirect                                    0  SINGLE_CHAR_ONLY       100000  avgt        103263359.134          ns/op
ReadLinesBenchmark.forEachIndirect                                    0  SINGLE_CHAR_ONLY      1000000  avgt       1067704698.000          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             MIXED            1  avgt             4492.392          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             MIXED           10  avgt             7647.456          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             MIXED          100  avgt            64730.211          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             MIXED         1000  avgt           702820.120          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             MIXED        10000  avgt          9843512.795          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             MIXED       100000  avgt         71876270.257          ns/op
ReadLinesBenchmark.forEachIndirect                                    0             MIXED      1000000  avgt        710794400.133          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             ASCII            1  avgt             4939.951          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             ASCII           10  avgt             5663.930          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             ASCII          100  avgt            20143.062          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             ASCII         1000  avgt           161128.423          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             ASCII        10000  avgt          1558672.347          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             ASCII       100000  avgt         16345632.077          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             ASCII      1000000  avgt        162781488.306          ns/op
ReadLinesBenchmark.forEachIndirect                                   10  SINGLE_CHAR_ONLY            1  avgt             4501.337          ns/op
ReadLinesBenchmark.forEachIndirect                                   10  SINGLE_CHAR_ONLY           10  avgt             9945.508          ns/op
ReadLinesBenchmark.forEachIndirect                                   10  SINGLE_CHAR_ONLY          100  avgt           112455.929          ns/op
ReadLinesBenchmark.forEachIndirect                                   10  SINGLE_CHAR_ONLY         1000  avgt          1074574.552          ns/op
ReadLinesBenchmark.forEachIndirect                                   10  SINGLE_CHAR_ONLY        10000  avgt         11790744.236          ns/op
ReadLinesBenchmark.forEachIndirect                                   10  SINGLE_CHAR_ONLY       100000  avgt        116408339.349          ns/op
ReadLinesBenchmark.forEachIndirect                                   10  SINGLE_CHAR_ONLY      1000000  avgt       1073171371.300          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             MIXED            1  avgt             4512.484          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             MIXED           10  avgt             7575.281          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             MIXED          100  avgt            68999.120          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             MIXED         1000  avgt          1011009.518          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             MIXED        10000  avgt         10322496.860          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             MIXED       100000  avgt         76194260.614          ns/op
ReadLinesBenchmark.forEachIndirect                                   10             MIXED      1000000  avgt        748532398.929          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             ASCII            1  avgt             4677.218          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             ASCII           10  avgt             7751.370          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             ASCII          100  avgt            40190.786          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             ASCII         1000  avgt           361713.113          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             ASCII        10000  avgt          3575809.155          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             ASCII       100000  avgt         36297191.406          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             ASCII      1000000  avgt        365186208.964          ns/op
ReadLinesBenchmark.forEachIndirect                                  100  SINGLE_CHAR_ONLY            1  avgt             4708.391          ns/op
ReadLinesBenchmark.forEachIndirect                                  100  SINGLE_CHAR_ONLY           10  avgt            12049.038          ns/op
ReadLinesBenchmark.forEachIndirect                                  100  SINGLE_CHAR_ONLY          100  avgt           131325.983          ns/op
ReadLinesBenchmark.forEachIndirect                                  100  SINGLE_CHAR_ONLY         1000  avgt          1215551.019          ns/op
ReadLinesBenchmark.forEachIndirect                                  100  SINGLE_CHAR_ONLY        10000  avgt         13861906.497          ns/op
ReadLinesBenchmark.forEachIndirect                                  100  SINGLE_CHAR_ONLY       100000  avgt        122079001.012          ns/op
ReadLinesBenchmark.forEachIndirect                                  100  SINGLE_CHAR_ONLY      1000000  avgt       1297747413.625          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             MIXED            1  avgt             5126.610          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             MIXED           10  avgt            13013.667          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             MIXED          100  avgt           126653.705          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             MIXED         1000  avgt          1584406.087          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             MIXED        10000  avgt         15669766.264          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             MIXED       100000  avgt        129100213.705          ns/op
ReadLinesBenchmark.forEachIndirect                                  100             MIXED      1000000  avgt       1300414727.500          ns/op
ReadLinesBenchmark.forEachInline                                     -1             ASCII            1  avgt             4450.755          ns/op
ReadLinesBenchmark.forEachInline                                     -1             ASCII           10  avgt             7538.189          ns/op
ReadLinesBenchmark.forEachInline                                     -1             ASCII          100  avgt            42000.961          ns/op
ReadLinesBenchmark.forEachInline                                     -1             ASCII         1000  avgt           386511.152          ns/op
ReadLinesBenchmark.forEachInline                                     -1             ASCII        10000  avgt          3805511.524          ns/op
ReadLinesBenchmark.forEachInline                                     -1             ASCII       100000  avgt         38463422.512          ns/op
ReadLinesBenchmark.forEachInline                                     -1             ASCII      1000000  avgt        387374309.923          ns/op
ReadLinesBenchmark.forEachInline                                     -1  SINGLE_CHAR_ONLY            1  avgt             4430.925          ns/op
ReadLinesBenchmark.forEachInline                                     -1  SINGLE_CHAR_ONLY           10  avgt            11853.551          ns/op
ReadLinesBenchmark.forEachInline                                     -1  SINGLE_CHAR_ONLY          100  avgt           134323.159          ns/op
ReadLinesBenchmark.forEachInline                                     -1  SINGLE_CHAR_ONLY         1000  avgt          1236372.391          ns/op
ReadLinesBenchmark.forEachInline                                     -1  SINGLE_CHAR_ONLY        10000  avgt         12533430.207          ns/op
ReadLinesBenchmark.forEachInline                                     -1  SINGLE_CHAR_ONLY       100000  avgt        138596124.356          ns/op
ReadLinesBenchmark.forEachInline                                     -1  SINGLE_CHAR_ONLY      1000000  avgt       1321083040.375          ns/op
ReadLinesBenchmark.forEachInline                                     -1             MIXED            1  avgt             4453.242          ns/op
ReadLinesBenchmark.forEachInline                                     -1             MIXED           10  avgt             9008.129          ns/op
ReadLinesBenchmark.forEachInline                                     -1             MIXED          100  avgt            88050.553          ns/op
ReadLinesBenchmark.forEachInline                                     -1             MIXED         1000  avgt          1240728.674          ns/op
ReadLinesBenchmark.forEachInline                                     -1             MIXED        10000  avgt         12215274.236          ns/op
ReadLinesBenchmark.forEachInline                                     -1             MIXED       100000  avgt         93916299.150          ns/op
ReadLinesBenchmark.forEachInline                                     -1             MIXED      1000000  avgt        957823307.636          ns/op
ReadLinesBenchmark.forEachInline                                      0             ASCII            1  avgt             4373.748          ns/op
ReadLinesBenchmark.forEachInline                                      0             ASCII           10  avgt             5584.919          ns/op
ReadLinesBenchmark.forEachInline                                      0             ASCII          100  avgt            18802.746          ns/op
ReadLinesBenchmark.forEachInline                                      0             ASCII         1000  avgt           148462.742          ns/op
ReadLinesBenchmark.forEachInline                                      0             ASCII        10000  avgt          1433971.443          ns/op
ReadLinesBenchmark.forEachInline                                      0             ASCII       100000  avgt         15062029.381          ns/op
ReadLinesBenchmark.forEachInline                                      0             ASCII      1000000  avgt        152901599.333          ns/op
ReadLinesBenchmark.forEachInline                                      0  SINGLE_CHAR_ONLY            1  avgt             4400.483          ns/op
ReadLinesBenchmark.forEachInline                                      0  SINGLE_CHAR_ONLY           10  avgt             9873.835          ns/op
ReadLinesBenchmark.forEachInline                                      0  SINGLE_CHAR_ONLY          100  avgt           110429.061          ns/op
ReadLinesBenchmark.forEachInline                                      0  SINGLE_CHAR_ONLY         1000  avgt          1060615.840          ns/op
ReadLinesBenchmark.forEachInline                                      0  SINGLE_CHAR_ONLY        10000  avgt         11319489.360          ns/op
ReadLinesBenchmark.forEachInline                                      0  SINGLE_CHAR_ONLY       100000  avgt        102427905.980          ns/op
ReadLinesBenchmark.forEachInline                                      0  SINGLE_CHAR_ONLY      1000000  avgt       1082086336.500          ns/op
ReadLinesBenchmark.forEachInline                                      0             MIXED            1  avgt             4477.249          ns/op
ReadLinesBenchmark.forEachInline                                      0             MIXED           10  avgt             7250.355          ns/op
ReadLinesBenchmark.forEachInline                                      0             MIXED          100  avgt            81357.758          ns/op
ReadLinesBenchmark.forEachInline                                      0             MIXED         1000  avgt           687060.090          ns/op
ReadLinesBenchmark.forEachInline                                      0             MIXED        10000  avgt         10064226.222          ns/op
ReadLinesBenchmark.forEachInline                                      0             MIXED       100000  avgt         72746133.732          ns/op
ReadLinesBenchmark.forEachInline                                      0             MIXED      1000000  avgt        714484107.143          ns/op
ReadLinesBenchmark.forEachInline                                     10             ASCII            1  avgt             4642.462          ns/op
ReadLinesBenchmark.forEachInline                                     10             ASCII           10  avgt             5689.308          ns/op
ReadLinesBenchmark.forEachInline                                     10             ASCII          100  avgt            19552.663          ns/op
ReadLinesBenchmark.forEachInline                                     10             ASCII         1000  avgt           159708.685          ns/op
ReadLinesBenchmark.forEachInline                                     10             ASCII        10000  avgt          1600510.946          ns/op
ReadLinesBenchmark.forEachInline                                     10             ASCII       100000  avgt         16558227.320          ns/op
ReadLinesBenchmark.forEachInline                                     10             ASCII      1000000  avgt        162496288.984          ns/op
ReadLinesBenchmark.forEachInline                                     10  SINGLE_CHAR_ONLY            1  avgt             4480.105          ns/op
ReadLinesBenchmark.forEachInline                                     10  SINGLE_CHAR_ONLY           10  avgt             9873.894          ns/op
ReadLinesBenchmark.forEachInline                                     10  SINGLE_CHAR_ONLY          100  avgt            98585.545          ns/op
ReadLinesBenchmark.forEachInline                                     10  SINGLE_CHAR_ONLY         1000  avgt          1015035.864          ns/op
ReadLinesBenchmark.forEachInline                                     10  SINGLE_CHAR_ONLY        10000  avgt         11565160.014          ns/op
ReadLinesBenchmark.forEachInline                                     10  SINGLE_CHAR_ONLY       100000  avgt        116587272.302          ns/op
ReadLinesBenchmark.forEachInline                                     10  SINGLE_CHAR_ONLY      1000000  avgt       1071733875.200          ns/op
ReadLinesBenchmark.forEachInline                                     10             MIXED            1  avgt             4482.810          ns/op
ReadLinesBenchmark.forEachInline                                     10             MIXED           10  avgt             7743.415          ns/op
ReadLinesBenchmark.forEachInline                                     10             MIXED          100  avgt            69488.591          ns/op
ReadLinesBenchmark.forEachInline                                     10             MIXED         1000  avgt           725795.167          ns/op
ReadLinesBenchmark.forEachInline                                     10             MIXED        10000  avgt         10384373.085          ns/op
ReadLinesBenchmark.forEachInline                                     10             MIXED       100000  avgt         74742212.724          ns/op
ReadLinesBenchmark.forEachInline                                     10             MIXED      1000000  avgt        755309616.786          ns/op
ReadLinesBenchmark.forEachInline                                    100             ASCII            1  avgt             4707.838          ns/op
ReadLinesBenchmark.forEachInline                                    100             ASCII           10  avgt             7688.490          ns/op
ReadLinesBenchmark.forEachInline                                    100             ASCII          100  avgt            40078.080          ns/op
ReadLinesBenchmark.forEachInline                                    100             ASCII         1000  avgt           358915.333          ns/op
ReadLinesBenchmark.forEachInline                                    100             ASCII        10000  avgt          3582478.866          ns/op
ReadLinesBenchmark.forEachInline                                    100             ASCII       100000  avgt         36072754.781          ns/op
ReadLinesBenchmark.forEachInline                                    100             ASCII      1000000  avgt        358499077.679          ns/op
ReadLinesBenchmark.forEachInline                                    100  SINGLE_CHAR_ONLY            1  avgt             4657.957          ns/op
ReadLinesBenchmark.forEachInline                                    100  SINGLE_CHAR_ONLY           10  avgt            11999.188          ns/op
ReadLinesBenchmark.forEachInline                                    100  SINGLE_CHAR_ONLY          100  avgt           118676.893          ns/op
ReadLinesBenchmark.forEachInline                                    100  SINGLE_CHAR_ONLY         1000  avgt          1212923.003          ns/op
ReadLinesBenchmark.forEachInline                                    100  SINGLE_CHAR_ONLY        10000  avgt         13560470.901          ns/op
ReadLinesBenchmark.forEachInline                                    100  SINGLE_CHAR_ONLY       100000  avgt        121808648.120          ns/op
ReadLinesBenchmark.forEachInline                                    100  SINGLE_CHAR_ONLY      1000000  avgt       1289456378.375          ns/op
ReadLinesBenchmark.forEachInline                                    100             MIXED            1  avgt             5160.679          ns/op
ReadLinesBenchmark.forEachInline                                    100             MIXED           10  avgt            13507.876          ns/op
ReadLinesBenchmark.forEachInline                                    100             MIXED          100  avgt           142174.440          ns/op
ReadLinesBenchmark.forEachInline                                    100             MIXED         1000  avgt          1263117.927          ns/op
ReadLinesBenchmark.forEachInline                                    100             MIXED        10000  avgt         15710822.794          ns/op
ReadLinesBenchmark.forEachInline                                    100             MIXED       100000  avgt        128890896.551          ns/op
ReadLinesBenchmark.forEachInline                                    100             MIXED      1000000  avgt       1285884143.625          ns/op
ReadLinesBenchmark.forEachJava                                       -1             ASCII            1  avgt             4434.109          ns/op
ReadLinesBenchmark.forEachJava                                       -1             ASCII           10  avgt             7633.811          ns/op
ReadLinesBenchmark.forEachJava                                       -1             ASCII          100  avgt            43112.909          ns/op
ReadLinesBenchmark.forEachJava                                       -1             ASCII         1000  avgt           388930.837          ns/op
ReadLinesBenchmark.forEachJava                                       -1             ASCII        10000  avgt          3851207.911          ns/op
ReadLinesBenchmark.forEachJava                                       -1             ASCII       100000  avgt         38688147.803          ns/op
ReadLinesBenchmark.forEachJava                                       -1             ASCII      1000000  avgt        389527213.192          ns/op
ReadLinesBenchmark.forEachJava                                       -1  SINGLE_CHAR_ONLY            1  avgt             4498.615          ns/op
ReadLinesBenchmark.forEachJava                                       -1  SINGLE_CHAR_ONLY           10  avgt            11995.473          ns/op
ReadLinesBenchmark.forEachJava                                       -1  SINGLE_CHAR_ONLY          100  avgt           133954.724          ns/op
ReadLinesBenchmark.forEachJava                                       -1  SINGLE_CHAR_ONLY         1000  avgt          1246664.068          ns/op
ReadLinesBenchmark.forEachJava                                       -1  SINGLE_CHAR_ONLY        10000  avgt         14088829.606          ns/op
ReadLinesBenchmark.forEachJava                                       -1  SINGLE_CHAR_ONLY       100000  avgt        126860607.405          ns/op
ReadLinesBenchmark.forEachJava                                       -1  SINGLE_CHAR_ONLY      1000000  avgt       1256824791.750          ns/op
ReadLinesBenchmark.forEachJava                                       -1             MIXED            1  avgt             4533.021          ns/op
ReadLinesBenchmark.forEachJava                                       -1             MIXED           10  avgt             9035.845          ns/op
ReadLinesBenchmark.forEachJava                                       -1             MIXED          100  avgt            89075.871          ns/op
ReadLinesBenchmark.forEachJava                                       -1             MIXED         1000  avgt           921433.358          ns/op
ReadLinesBenchmark.forEachJava                                       -1             MIXED        10000  avgt          9549220.140          ns/op
ReadLinesBenchmark.forEachJava                                       -1             MIXED       100000  avgt         94121887.738          ns/op
ReadLinesBenchmark.forEachJava                                       -1             MIXED      1000000  avgt        937792769.000          ns/op
ReadLinesBenchmark.forEachJava                                        0             ASCII            1  avgt             4420.442          ns/op
ReadLinesBenchmark.forEachJava                                        0             ASCII           10  avgt             5750.311          ns/op
ReadLinesBenchmark.forEachJava                                        0             ASCII          100  avgt            18982.466          ns/op
ReadLinesBenchmark.forEachJava                                        0             ASCII         1000  avgt           147850.028          ns/op
ReadLinesBenchmark.forEachJava                                        0             ASCII        10000  avgt          1479672.458          ns/op
ReadLinesBenchmark.forEachJava                                        0             ASCII       100000  avgt         15611226.782          ns/op
ReadLinesBenchmark.forEachJava                                        0             ASCII      1000000  avgt        153899010.800          ns/op
ReadLinesBenchmark.forEachJava                                        0  SINGLE_CHAR_ONLY            1  avgt             4609.298          ns/op
ReadLinesBenchmark.forEachJava                                        0  SINGLE_CHAR_ONLY           10  avgt             9958.761          ns/op
ReadLinesBenchmark.forEachJava                                        0  SINGLE_CHAR_ONLY          100  avgt           110698.927          ns/op
ReadLinesBenchmark.forEachJava                                        0  SINGLE_CHAR_ONLY         1000  avgt          1061990.711          ns/op
ReadLinesBenchmark.forEachJava                                        0  SINGLE_CHAR_ONLY        10000  avgt         11647566.029          ns/op
ReadLinesBenchmark.forEachJava                                        0  SINGLE_CHAR_ONLY       100000  avgt        100993417.200          ns/op
ReadLinesBenchmark.forEachJava                                        0  SINGLE_CHAR_ONLY      1000000  avgt       1062299570.700          ns/op
ReadLinesBenchmark.forEachJava                                        0             MIXED            1  avgt             4527.138          ns/op
ReadLinesBenchmark.forEachJava                                        0             MIXED           10  avgt             7741.522          ns/op
ReadLinesBenchmark.forEachJava                                        0             MIXED          100  avgt            82488.370          ns/op
ReadLinesBenchmark.forEachJava                                        0             MIXED         1000  avgt           979196.585          ns/op
ReadLinesBenchmark.forEachJava                                        0             MIXED        10000  avgt         10204355.904          ns/op
ReadLinesBenchmark.forEachJava                                        0             MIXED       100000  avgt         72048992.604          ns/op
ReadLinesBenchmark.forEachJava                                        0             MIXED      1000000  avgt        710379026.133          ns/op
ReadLinesBenchmark.forEachJava                                       10             ASCII            1  avgt             4437.711          ns/op
ReadLinesBenchmark.forEachJava                                       10             ASCII           10  avgt             5683.991          ns/op
ReadLinesBenchmark.forEachJava                                       10             ASCII          100  avgt            20678.913          ns/op
ReadLinesBenchmark.forEachJava                                       10             ASCII         1000  avgt           165839.327          ns/op
ReadLinesBenchmark.forEachJava                                       10             ASCII        10000  avgt          1610869.874          ns/op
ReadLinesBenchmark.forEachJava                                       10             ASCII       100000  avgt         16967468.878          ns/op
ReadLinesBenchmark.forEachJava                                       10             ASCII      1000000  avgt        168291177.100          ns/op
ReadLinesBenchmark.forEachJava                                       10  SINGLE_CHAR_ONLY            1  avgt             4480.659          ns/op
ReadLinesBenchmark.forEachJava                                       10  SINGLE_CHAR_ONLY           10  avgt            10195.796          ns/op
ReadLinesBenchmark.forEachJava                                       10  SINGLE_CHAR_ONLY          100  avgt           111831.151          ns/op
ReadLinesBenchmark.forEachJava                                       10  SINGLE_CHAR_ONLY         1000  avgt          1093431.381          ns/op
ReadLinesBenchmark.forEachJava                                       10  SINGLE_CHAR_ONLY        10000  avgt         10293290.273          ns/op
ReadLinesBenchmark.forEachJava                                       10  SINGLE_CHAR_ONLY       100000  avgt        103417394.711          ns/op
ReadLinesBenchmark.forEachJava                                       10  SINGLE_CHAR_ONLY      1000000  avgt       1075061679.000          ns/op
ReadLinesBenchmark.forEachJava                                       10             MIXED            1  avgt             4511.155          ns/op
ReadLinesBenchmark.forEachJava                                       10             MIXED           10  avgt             8461.232          ns/op
ReadLinesBenchmark.forEachJava                                       10             MIXED          100  avgt            89000.814          ns/op
ReadLinesBenchmark.forEachJava                                       10             MIXED         1000  avgt           742906.502          ns/op
ReadLinesBenchmark.forEachJava                                       10             MIXED        10000  avgt          7686632.374          ns/op
ReadLinesBenchmark.forEachJava                                       10             MIXED       100000  avgt         76903935.328          ns/op
ReadLinesBenchmark.forEachJava                                       10             MIXED      1000000  avgt        763104678.214          ns/op
ReadLinesBenchmark.forEachJava                                      100             ASCII            1  avgt             4673.521          ns/op
ReadLinesBenchmark.forEachJava                                      100             ASCII           10  avgt             7724.990          ns/op
ReadLinesBenchmark.forEachJava                                      100             ASCII          100  avgt            40301.104          ns/op
ReadLinesBenchmark.forEachJava                                      100             ASCII         1000  avgt           362860.016          ns/op
ReadLinesBenchmark.forEachJava                                      100             ASCII        10000  avgt          3599894.941          ns/op
ReadLinesBenchmark.forEachJava                                      100             ASCII       100000  avgt         36419467.847          ns/op
ReadLinesBenchmark.forEachJava                                      100             ASCII      1000000  avgt        364774744.143          ns/op
ReadLinesBenchmark.forEachJava                                      100  SINGLE_CHAR_ONLY            1  avgt             4670.176          ns/op
ReadLinesBenchmark.forEachJava                                      100  SINGLE_CHAR_ONLY           10  avgt            12053.113          ns/op
ReadLinesBenchmark.forEachJava                                      100  SINGLE_CHAR_ONLY          100  avgt           132461.032          ns/op
ReadLinesBenchmark.forEachJava                                      100  SINGLE_CHAR_ONLY         1000  avgt          1279671.151          ns/op
ReadLinesBenchmark.forEachJava                                      100  SINGLE_CHAR_ONLY        10000  avgt         14008543.716          ns/op
ReadLinesBenchmark.forEachJava                                      100  SINGLE_CHAR_ONLY       100000  avgt        123351311.049          ns/op
ReadLinesBenchmark.forEachJava                                      100  SINGLE_CHAR_ONLY      1000000  avgt       1239030626.444          ns/op
ReadLinesBenchmark.forEachJava                                      100             MIXED            1  avgt             5108.374          ns/op
ReadLinesBenchmark.forEachJava                                      100             MIXED           10  avgt            13396.428          ns/op
ReadLinesBenchmark.forEachJava                                      100             MIXED          100  avgt           124907.270          ns/op
ReadLinesBenchmark.forEachJava                                      100             MIXED         1000  avgt          1595035.506          ns/op
ReadLinesBenchmark.forEachJava                                      100             MIXED        10000  avgt         13061286.640          ns/op
ReadLinesBenchmark.forEachJava                                      100             MIXED       100000  avgt        130365287.727          ns/op
ReadLinesBenchmark.forEachJava                                      100             MIXED      1000000  avgt       1296468241.375          ns/op
ReadLinesBenchmark.readAllLines                                      -1             ASCII            1  avgt             4467.578          ns/op
ReadLinesBenchmark.readAllLines                                      -1             ASCII           10  avgt             7633.867          ns/op
ReadLinesBenchmark.readAllLines                                      -1             ASCII          100  avgt            43450.317          ns/op
ReadLinesBenchmark.readAllLines                                      -1             ASCII         1000  avgt           401355.513          ns/op
ReadLinesBenchmark.readAllLines                                      -1             ASCII        10000  avgt          4158943.423          ns/op
ReadLinesBenchmark.readAllLines                                      -1             ASCII       100000  avgt         43272674.690          ns/op
ReadLinesBenchmark.readAllLines                                      -1             ASCII      1000000  avgt        512630188.200          ns/op
ReadLinesBenchmark.readAllLines                                      -1  SINGLE_CHAR_ONLY            1  avgt             4546.876          ns/op
ReadLinesBenchmark.readAllLines                                      -1  SINGLE_CHAR_ONLY           10  avgt            12018.366          ns/op
ReadLinesBenchmark.readAllLines                                      -1  SINGLE_CHAR_ONLY          100  avgt           122326.582          ns/op
ReadLinesBenchmark.readAllLines                                      -1  SINGLE_CHAR_ONLY         1000  avgt          1255889.829          ns/op
ReadLinesBenchmark.readAllLines                                      -1  SINGLE_CHAR_ONLY        10000  avgt         14477787.441          ns/op
ReadLinesBenchmark.readAllLines                                      -1  SINGLE_CHAR_ONLY       100000  avgt        143676265.714          ns/op
ReadLinesBenchmark.readAllLines                                      -1  SINGLE_CHAR_ONLY      1000000  avgt       1380150155.000          ns/op
ReadLinesBenchmark.readAllLines                                      -1             MIXED            1  avgt             4516.508          ns/op
ReadLinesBenchmark.readAllLines                                      -1             MIXED           10  avgt             9706.596          ns/op
ReadLinesBenchmark.readAllLines                                      -1             MIXED          100  avgt            90252.372          ns/op
ReadLinesBenchmark.readAllLines                                      -1             MIXED         1000  avgt           965438.742          ns/op
ReadLinesBenchmark.readAllLines                                      -1             MIXED        10000  avgt         10014271.593          ns/op
ReadLinesBenchmark.readAllLines                                      -1             MIXED       100000  avgt        100471140.790          ns/op
ReadLinesBenchmark.readAllLines                                      -1             MIXED      1000000  avgt       1382688369.625          ns/op
ReadLinesBenchmark.readAllLines                                       0             ASCII            1  avgt             4430.417          ns/op
ReadLinesBenchmark.readAllLines                                       0             ASCII           10  avgt             5671.751          ns/op
ReadLinesBenchmark.readAllLines                                       0             ASCII          100  avgt            19229.013          ns/op
ReadLinesBenchmark.readAllLines                                       0             ASCII         1000  avgt           155276.489          ns/op
ReadLinesBenchmark.readAllLines                                       0             ASCII        10000  avgt          1598790.531          ns/op
ReadLinesBenchmark.readAllLines                                       0             ASCII       100000  avgt         16794937.695          ns/op
ReadLinesBenchmark.readAllLines                                       0             ASCII      1000000  avgt        245608301.390          ns/op
ReadLinesBenchmark.readAllLines                                       0  SINGLE_CHAR_ONLY            1  avgt             4556.359          ns/op
ReadLinesBenchmark.readAllLines                                       0  SINGLE_CHAR_ONLY           10  avgt             9960.338          ns/op
ReadLinesBenchmark.readAllLines                                       0  SINGLE_CHAR_ONLY          100  avgt            97415.993          ns/op
ReadLinesBenchmark.readAllLines                                       0  SINGLE_CHAR_ONLY         1000  avgt          1009356.946          ns/op
ReadLinesBenchmark.readAllLines                                       0  SINGLE_CHAR_ONLY        10000  avgt         12164977.114          ns/op
ReadLinesBenchmark.readAllLines                                       0  SINGLE_CHAR_ONLY       100000  avgt        102696597.582          ns/op
ReadLinesBenchmark.readAllLines                                       0  SINGLE_CHAR_ONLY      1000000  avgt       1117040714.000          ns/op
ReadLinesBenchmark.readAllLines                                       0             MIXED            1  avgt             4498.660          ns/op
ReadLinesBenchmark.readAllLines                                       0             MIXED           10  avgt             7878.003          ns/op
ReadLinesBenchmark.readAllLines                                       0             MIXED          100  avgt            85298.734          ns/op
ReadLinesBenchmark.readAllLines                                       0             MIXED         1000  avgt           725436.169          ns/op
ReadLinesBenchmark.readAllLines                                       0             MIXED        10000  avgt         10264876.501          ns/op
ReadLinesBenchmark.readAllLines                                       0             MIXED       100000  avgt         76099259.614          ns/op
ReadLinesBenchmark.readAllLines                                       0             MIXED      1000000  avgt       1088381339.000          ns/op
ReadLinesBenchmark.readAllLines                                      10             ASCII            1  avgt             4465.183          ns/op
ReadLinesBenchmark.readAllLines                                      10             ASCII           10  avgt             5809.461          ns/op
ReadLinesBenchmark.readAllLines                                      10             ASCII          100  avgt            20206.438          ns/op
ReadLinesBenchmark.readAllLines                                      10             ASCII         1000  avgt           165569.176          ns/op
ReadLinesBenchmark.readAllLines                                      10             ASCII        10000  avgt          1754982.993          ns/op
ReadLinesBenchmark.readAllLines                                      10             ASCII       100000  avgt         18695093.884          ns/op
ReadLinesBenchmark.readAllLines                                      10             ASCII      1000000  avgt        263470402.184          ns/op
ReadLinesBenchmark.readAllLines                                      10  SINGLE_CHAR_ONLY            1  avgt             4491.505          ns/op
ReadLinesBenchmark.readAllLines                                      10  SINGLE_CHAR_ONLY           10  avgt            10095.471          ns/op
ReadLinesBenchmark.readAllLines                                      10  SINGLE_CHAR_ONLY          100  avgt            98779.561          ns/op
ReadLinesBenchmark.readAllLines                                      10  SINGLE_CHAR_ONLY         1000  avgt          1022521.395          ns/op
ReadLinesBenchmark.readAllLines                                      10  SINGLE_CHAR_ONLY        10000  avgt         12378949.152          ns/op
ReadLinesBenchmark.readAllLines                                      10  SINGLE_CHAR_ONLY       100000  avgt        104146561.485          ns/op
ReadLinesBenchmark.readAllLines                                      10  SINGLE_CHAR_ONLY      1000000  avgt       1167800762.667          ns/op
ReadLinesBenchmark.readAllLines                                      10             MIXED            1  avgt             4847.476          ns/op
ReadLinesBenchmark.readAllLines                                      10             MIXED           10  avgt             8192.537          ns/op
ReadLinesBenchmark.readAllLines                                      10             MIXED          100  avgt            70161.281          ns/op
ReadLinesBenchmark.readAllLines                                      10             MIXED         1000  avgt          1025158.577          ns/op
ReadLinesBenchmark.readAllLines                                      10             MIXED        10000  avgt          7816675.170          ns/op
ReadLinesBenchmark.readAllLines                                      10             MIXED       100000  avgt         78481224.148          ns/op
ReadLinesBenchmark.readAllLines                                      10             MIXED      1000000  avgt       1120949489.600          ns/op
ReadLinesBenchmark.readAllLines                                     100             ASCII            1  avgt             4636.003          ns/op
ReadLinesBenchmark.readAllLines                                     100             ASCII           10  avgt             7761.776          ns/op
ReadLinesBenchmark.readAllLines                                     100             ASCII          100  avgt            41026.817          ns/op
ReadLinesBenchmark.readAllLines                                     100             ASCII         1000  avgt           366317.485          ns/op
ReadLinesBenchmark.readAllLines                                     100             ASCII        10000  avgt          3841080.708          ns/op
ReadLinesBenchmark.readAllLines                                     100             ASCII       100000  avgt         39861118.701          ns/op
ReadLinesBenchmark.readAllLines                                     100             ASCII      1000000  avgt        469750128.591          ns/op
ReadLinesBenchmark.readAllLines                                     100  SINGLE_CHAR_ONLY            1  avgt             4837.046          ns/op
ReadLinesBenchmark.readAllLines                                     100  SINGLE_CHAR_ONLY           10  avgt            12139.583          ns/op
ReadLinesBenchmark.readAllLines                                     100  SINGLE_CHAR_ONLY          100  avgt           119366.573          ns/op
ReadLinesBenchmark.readAllLines                                     100  SINGLE_CHAR_ONLY         1000  avgt          1221002.670          ns/op
ReadLinesBenchmark.readAllLines                                     100  SINGLE_CHAR_ONLY        10000  avgt         14336968.182          ns/op
ReadLinesBenchmark.readAllLines                                     100  SINGLE_CHAR_ONLY       100000  avgt        125559722.225          ns/op
ReadLinesBenchmark.readAllLines                                     100  SINGLE_CHAR_ONLY      1000000  avgt       1380614647.125          ns/op
ReadLinesBenchmark.readAllLines                                     100             MIXED            1  avgt             5262.917          ns/op
ReadLinesBenchmark.readAllLines                                     100             MIXED           10  avgt            13216.096          ns/op
ReadLinesBenchmark.readAllLines                                     100             MIXED          100  avgt           143220.112          ns/op
ReadLinesBenchmark.readAllLines                                     100             MIXED         1000  avgt          1299865.005          ns/op
ReadLinesBenchmark.readAllLines                                     100             MIXED        10000  avgt         16020664.829          ns/op
ReadLinesBenchmark.readAllLines                                     100             MIXED       100000  avgt        132751078.513          ns/op
ReadLinesBenchmark.readAllLines                                     100             MIXED      1000000  avgt       1722269068.167          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             ASCII            1  avgt             2381.655          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             ASCII           10  avgt             9991.959          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             ASCII          100  avgt            89143.948          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             ASCII         1000  avgt           885295.375          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             ASCII        10000  avgt          9091876.254          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             ASCII       100000  avgt         91164930.018          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             ASCII      1000000  avgt        919806860.545          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1  SINGLE_CHAR_ONLY            1  avgt             2370.445          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1  SINGLE_CHAR_ONLY           10  avgt            12900.672          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1  SINGLE_CHAR_ONLY          100  avgt           152298.197          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1  SINGLE_CHAR_ONLY         1000  avgt          1626429.526          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1  SINGLE_CHAR_ONLY        10000  avgt         17219889.165          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1  SINGLE_CHAR_ONLY       100000  avgt        162925735.226          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1  SINGLE_CHAR_ONLY      1000000  avgt       1659793494.000          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             MIXED            1  avgt             2406.523          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             MIXED           10  avgt            11812.736          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             MIXED          100  avgt           138816.496          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             MIXED         1000  avgt          1500457.640          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             MIXED        10000  avgt         11200616.815          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             MIXED       100000  avgt        158699318.172          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     -1             MIXED      1000000  avgt       1572295336.571          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             ASCII            1  avgt             2294.722          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             ASCII           10  avgt             8003.164          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             ASCII          100  avgt            64111.046          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             ASCII         1000  avgt           631612.890          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             ASCII        10000  avgt          6593432.875          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             ASCII       100000  avgt         35076075.367          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             ASCII      1000000  avgt        651350761.375          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0  SINGLE_CHAR_ONLY            1  avgt             2430.645          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0  SINGLE_CHAR_ONLY           10  avgt            11273.777          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0  SINGLE_CHAR_ONLY          100  avgt           128445.675          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0  SINGLE_CHAR_ONLY         1000  avgt          1378548.419          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0  SINGLE_CHAR_ONLY        10000  avgt         14519488.549          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0  SINGLE_CHAR_ONLY       100000  avgt        143848233.471          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0  SINGLE_CHAR_ONLY      1000000  avgt       1497270564.714          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             MIXED            1  avgt             2499.237          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             MIXED           10  avgt            10015.284          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             MIXED          100  avgt           115729.164          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             MIXED         1000  avgt           721502.371          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             MIXED        10000  avgt         13245647.387          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             MIXED       100000  avgt        133142364.092          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                      0             MIXED      1000000  avgt       1312788938.500          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             ASCII            1  avgt             2496.782          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             ASCII           10  avgt             8036.752          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             ASCII          100  avgt            64863.943          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             ASCII         1000  avgt           665023.363          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             ASCII        10000  avgt          6626528.240          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             ASCII       100000  avgt         68791759.384          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             ASCII      1000000  avgt        682153248.267          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10  SINGLE_CHAR_ONLY            1  avgt             2360.654          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10  SINGLE_CHAR_ONLY           10  avgt            11480.679          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10  SINGLE_CHAR_ONLY          100  avgt           131440.545          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10  SINGLE_CHAR_ONLY         1000  avgt          1410757.751          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10  SINGLE_CHAR_ONLY        10000  avgt         14674820.691          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10  SINGLE_CHAR_ONLY       100000  avgt        147813525.397          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10  SINGLE_CHAR_ONLY      1000000  avgt       1501199124.143          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             MIXED            1  avgt             2437.701          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             MIXED           10  avgt            10480.652          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             MIXED          100  avgt           121540.128          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             MIXED         1000  avgt          1322873.414          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             MIXED        10000  avgt         13745148.674          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             MIXED       100000  avgt        136345839.230          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                     10             MIXED      1000000  avgt       1384894285.500          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             ASCII            1  avgt             2500.347          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             ASCII           10  avgt             9775.199          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             ASCII          100  avgt            84567.396          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             ASCII         1000  avgt           849620.582          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             ASCII        10000  avgt          8630917.132          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             ASCII       100000  avgt         89162590.858          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             ASCII      1000000  avgt        877570946.917          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100  SINGLE_CHAR_ONLY            1  avgt             2641.295          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100  SINGLE_CHAR_ONLY           10  avgt            13478.294          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100  SINGLE_CHAR_ONLY          100  avgt           155864.618          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100  SINGLE_CHAR_ONLY         1000  avgt          1628106.791          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100  SINGLE_CHAR_ONLY        10000  avgt         16633735.317          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100  SINGLE_CHAR_ONLY       100000  avgt        166122645.574          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100  SINGLE_CHAR_ONLY      1000000  avgt       1690503529.167          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             MIXED            1  avgt             3045.705          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             MIXED           10  avgt            15956.482          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             MIXED          100  avgt           178706.719          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             MIXED         1000  avgt          1864496.465          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             MIXED        10000  avgt         19094435.826          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             MIXED       100000  avgt        187783224.463          ns/op
ReadLinesBenchmark.readBytesAndCustomUtf8Decoder                    100             MIXED      1000000  avgt       1891037571.500          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             ASCII            1  avgt             3454.234          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             ASCII           10  avgt             7058.994          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             ASCII          100  avgt            44809.589          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             ASCII         1000  avgt           430600.537          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             ASCII        10000  avgt          4777168.960          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             ASCII       100000  avgt         50557915.667          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             ASCII      1000000  avgt        605656698.176          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1  SINGLE_CHAR_ONLY            1  avgt             3551.596          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1  SINGLE_CHAR_ONLY           10  avgt            11606.230          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1  SINGLE_CHAR_ONLY          100  avgt           119322.682          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1  SINGLE_CHAR_ONLY         1000  avgt          1304927.761          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1  SINGLE_CHAR_ONLY        10000  avgt         14562179.712          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1  SINGLE_CHAR_ONLY       100000  avgt        149928692.537          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1  SINGLE_CHAR_ONLY      1000000  avgt       1558984583.286          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             MIXED            1  avgt             3636.870          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             MIXED           10  avgt             8843.757          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             MIXED          100  avgt            90881.199          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             MIXED         1000  avgt           977871.092          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             MIXED        10000  avgt         10307773.806          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             MIXED       100000  avgt        104288171.063          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    -1             MIXED      1000000  avgt       1429048306.143          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             ASCII            1  avgt             3461.170          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             ASCII           10  avgt             5040.573          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             ASCII          100  avgt            20507.057          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             ASCII         1000  avgt           181510.253          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             ASCII        10000  avgt          2198406.031          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             ASCII       100000  avgt         23753054.291          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             ASCII      1000000  avgt        337638577.800          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0  SINGLE_CHAR_ONLY            1  avgt             3487.035          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0  SINGLE_CHAR_ONLY           10  avgt             9671.089          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0  SINGLE_CHAR_ONLY          100  avgt            94345.456          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0  SINGLE_CHAR_ONLY         1000  avgt          1062584.886          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0  SINGLE_CHAR_ONLY        10000  avgt         12012046.384          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0  SINGLE_CHAR_ONLY       100000  avgt        123337589.268          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0  SINGLE_CHAR_ONLY      1000000  avgt       1331811115.625          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             MIXED            1  avgt             3556.648          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             MIXED           10  avgt             6926.657          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             MIXED          100  avgt            66643.056          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             MIXED         1000  avgt           739884.505          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             MIXED        10000  avgt          8019354.962          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             MIXED       100000  avgt         81915312.780          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                     0             MIXED      1000000  avgt       1186608218.889          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             ASCII            1  avgt             3474.311          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             ASCII           10  avgt             5148.766          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             ASCII          100  avgt            21636.384          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             ASCII         1000  avgt           194328.679          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             ASCII        10000  avgt          2330407.397          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             ASCII       100000  avgt         25602000.962          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             ASCII      1000000  avgt        358192996.379          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10  SINGLE_CHAR_ONLY            1  avgt             3818.387          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10  SINGLE_CHAR_ONLY           10  avgt             9756.750          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10  SINGLE_CHAR_ONLY          100  avgt            93852.318          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10  SINGLE_CHAR_ONLY         1000  avgt          1076179.414          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10  SINGLE_CHAR_ONLY        10000  avgt         12084041.447          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10  SINGLE_CHAR_ONLY       100000  avgt        125050033.725          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10  SINGLE_CHAR_ONLY      1000000  avgt       1332349913.000          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             MIXED            1  avgt             3593.241          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             MIXED           10  avgt             7263.276          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             MIXED          100  avgt            70884.287          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             MIXED         1000  avgt           767865.243          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             MIXED        10000  avgt          8269220.399          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             MIXED       100000  avgt         84074521.992          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                    10             MIXED      1000000  avgt       1309009633.250          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             ASCII            1  avgt             3665.055          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             ASCII           10  avgt             7237.912          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             ASCII          100  avgt            41897.513          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             ASCII         1000  avgt           396259.897          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             ASCII        10000  avgt          4464929.213          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             ASCII       100000  avgt         47069331.601          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             ASCII      1000000  avgt        572353014.944          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100  SINGLE_CHAR_ONLY            1  avgt             3757.446          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100  SINGLE_CHAR_ONLY           10  avgt            11752.677          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100  SINGLE_CHAR_ONLY          100  avgt           115138.874          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100  SINGLE_CHAR_ONLY         1000  avgt          1273105.098          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100  SINGLE_CHAR_ONLY        10000  avgt         14228023.987          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100  SINGLE_CHAR_ONLY       100000  avgt        146952369.246          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100  SINGLE_CHAR_ONLY      1000000  avgt       1525618307.571          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             MIXED            1  avgt             4194.835          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             MIXED           10  avgt            12802.927          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             MIXED          100  avgt           124354.466          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             MIXED         1000  avgt          1310092.066          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             MIXED        10000  avgt         13586175.373          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             MIXED       100000  avgt        139097847.792          ns/op
ReadLinesBenchmark.readBytesAndThenBufferedReader                   100             MIXED      1000000  avgt       1750689534.667          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             ASCII            1  avgt             2264.008          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             ASCII           10  avgt             5919.821          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             ASCII          100  avgt            43545.232          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             ASCII         1000  avgt           446471.853          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             ASCII        10000  avgt          4878182.116          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             ASCII       100000  avgt         50642316.758          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             ASCII      1000000  avgt        612283397.353          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1  SINGLE_CHAR_ONLY            1  avgt             2387.226          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1  SINGLE_CHAR_ONLY           10  avgt            10409.606          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1  SINGLE_CHAR_ONLY          100  avgt           114883.746          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1  SINGLE_CHAR_ONLY         1000  avgt          1319563.948          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1  SINGLE_CHAR_ONLY        10000  avgt         14640864.208          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1  SINGLE_CHAR_ONLY       100000  avgt        151621831.227          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1  SINGLE_CHAR_ONLY      1000000  avgt       1594576736.286          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             MIXED            1  avgt             2483.575          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             MIXED           10  avgt             7957.720          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             MIXED          100  avgt            93108.714          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             MIXED         1000  avgt          1006924.274          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             MIXED        10000  avgt         10502909.425          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             MIXED       100000  avgt        106034918.663          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             -1             MIXED      1000000  avgt       1443967294.000          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             ASCII            1  avgt             2234.469          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             ASCII           10  avgt             3954.241          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             ASCII          100  avgt            19459.041          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             ASCII         1000  avgt           193903.994          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             ASCII        10000  avgt          2347999.398          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             ASCII       100000  avgt         24658385.712          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             ASCII      1000000  avgt        324668266.000          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0  SINGLE_CHAR_ONLY            1  avgt             2277.419          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0  SINGLE_CHAR_ONLY           10  avgt             8543.385          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0  SINGLE_CHAR_ONLY          100  avgt            92208.187          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0  SINGLE_CHAR_ONLY         1000  avgt          1065579.106          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0  SINGLE_CHAR_ONLY        10000  avgt         12130748.399          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0  SINGLE_CHAR_ONLY       100000  avgt        123906718.914          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0  SINGLE_CHAR_ONLY      1000000  avgt       1297784366.500          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             MIXED            1  avgt             2333.631          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             MIXED           10  avgt             6125.507          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             MIXED          100  avgt            69015.856          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             MIXED         1000  avgt           770947.151          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             MIXED        10000  avgt          8263755.028          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             MIXED       100000  avgt         83737220.825          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                              0             MIXED      1000000  avgt       1208564388.222          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             ASCII            1  avgt             2264.609          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             ASCII           10  avgt             4039.297          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             ASCII          100  avgt            20509.270          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             ASCII         1000  avgt           206006.047          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             ASCII        10000  avgt          2461511.274          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             ASCII       100000  avgt         26398313.256          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             ASCII      1000000  avgt        351118491.897          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10  SINGLE_CHAR_ONLY            1  avgt             2302.368          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10  SINGLE_CHAR_ONLY           10  avgt             8659.410          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10  SINGLE_CHAR_ONLY          100  avgt            92070.685          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10  SINGLE_CHAR_ONLY         1000  avgt          1091408.109          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10  SINGLE_CHAR_ONLY        10000  avgt         12307120.301          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10  SINGLE_CHAR_ONLY       100000  avgt        126095577.113          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10  SINGLE_CHAR_ONLY      1000000  avgt       1332548068.750          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             MIXED            1  avgt             2355.837          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             MIXED           10  avgt             6403.239          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             MIXED          100  avgt            70458.759          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             MIXED         1000  avgt           801349.665          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             MIXED        10000  avgt          8522728.534          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             MIXED       100000  avgt         86642812.009          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                             10             MIXED      1000000  avgt       1261708424.444          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             ASCII            1  avgt             2393.571          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             ASCII           10  avgt             6037.166          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             ASCII          100  avgt            41080.467          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             ASCII         1000  avgt           409753.189          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             ASCII        10000  avgt          4545106.090          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             ASCII       100000  avgt         48037317.502          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             ASCII      1000000  avgt        574496430.889          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100  SINGLE_CHAR_ONLY            1  avgt             2512.952          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100  SINGLE_CHAR_ONLY           10  avgt            10543.109          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100  SINGLE_CHAR_ONLY          100  avgt           113121.172          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100  SINGLE_CHAR_ONLY         1000  avgt          1294346.324          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100  SINGLE_CHAR_ONLY        10000  avgt         14343823.480          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100  SINGLE_CHAR_ONLY       100000  avgt        148551403.029          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100  SINGLE_CHAR_ONLY      1000000  avgt       1528748627.857          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             MIXED            1  avgt             2965.826          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             MIXED           10  avgt            11803.114          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             MIXED          100  avgt           128045.130          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             MIXED         1000  avgt          1332964.740          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             MIXED        10000  avgt         13887826.110          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             MIXED       100000  avgt        141500182.254          ns/op
ReadLinesBenchmark.readBytesOwnLineSplit                            100             MIXED      1000000  avgt       1887403781.333          ns/op

Benchmark result is saved to jmh.json
