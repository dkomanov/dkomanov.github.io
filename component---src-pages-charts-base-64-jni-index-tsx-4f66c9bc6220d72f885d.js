"use strict";(self.webpackChunkkomanov_com=self.webpackChunkkomanov_com||[]).push([[180],{6082:function(e,n,a){a.r(n);var t=a(2982),o=a(1597),c=a(7294),l=a(9064),i=a(8667),r=["openjdk-17","openjdk-11","openjdk-8"],d=["1","10","50","100","500","1000","10000"],u="10000",s="fixed",m=["all","encode","decode"],f={title:"Library and Operation",prop:"method",values:[{name:"j.u.Base64 encode",value:"jdk_url_encode"},{name:"encode_config",value:"jni_url_encodeConfig"},{name:"encode_config_slice (no cache)",value:"jni_url_encodeConfigSlice1NoCache"},{name:"encode_config_slice (cache output)",value:"jni_url_encodeConfigSlice1Cache"},{name:"encode_config_slice (cache input/output)",value:"jni_url_encodeConfigSlice2CacheInputOutput"},{name:"base64_simd::encode",value:"jni_url_encodeSimdCargo"},{name:"j.u.Base64 decode",value:"jdk_url_decode"},{name:"decode_config #1",value:"jni_url_decodeConfig1"},{name:"decode_config #2 (get_byte_array_elements)",value:"jni_url_decodeConfig2"},{name:"decode_config #3 (explicit size)",value:"jni_url_decodeConfig3"},{name:"decode_config #4 (get_primitive_array_critical)",value:"jni_url_decodeConfig4"},{name:"decode_config_slice JNI",value:"jni_url_decodeConfigSlice1"},{name:"decode_config_slice (no cache)",value:"jni_url_decodeConfigSlice1NoCache"},{name:"decode_config_slice (cache output)",value:"jni_url_decodeConfigSlice2Cache"},{name:"decode_config_slice (cache input/output)",value:"jni_url_decodeConfigSlice3CacheInputOutput"},{name:"base64_simd::decode",value:"jni_url_decodeSimdCargo"},{name:"base64_simd::decodeInPlace",value:"jni_url_decodeSimdInPlaceCargo"}]},_={title:"JDK",prop:"jdk",values:r};var g=function(e){return"/data/charts/base64-jni/"+e},h=(0,l.wZ)((function(e){var n=e.jmhList,a=(0,c.useState)(m[0]),t=a[0],i=a[1],h=(0,c.useState)(u),p=h[0],j=h[1],v=(0,c.useState)(s),b=v[0],C=v[1],k=(0,c.useState)("openjdk-17"),S=k[0],E=k[1],x=(0,c.useState)({func:null}),D=x[0],J=x[1],I=function(e){return"all"===t||-1!==e.method.indexOf(t)},y=Object.assign({},f,{values:"all"===t?f.values:f.values.filter((function(e){return-1!==e.name.indexOf(t)}))});return c.createElement("div",{className:"markdown"},c.createElement("h3",null,"Introduction"),c.createElement("p",null,"Here are benchmarking results for"," ",c.createElement(o.Link,{to:"/p/java-exploring-jni-performance-via-decoding-base64"},"«Java: Exploring JNI performance via Decoding Base64»")," ","blog post."),c.createElement("p",null,"The performance tests are performed via"," ",c.createElement("a",{href:"https://github.com/openjdk/jmh"},"JMH"),". The configuration of a hardware is Intel® Core™ i7-1165G7 @ 2.80GHz × 8 (4 core + 4 HT) with 16 GB RAM. Scala version: 2.13.6."),c.createElement("h3",null,"Charts"),c.createElement(l.V2,{label:"Data length:",items:(0,l.Jw)(d,(function(e){return e===u})),onChange:function(e){return j(e)}}),c.createElement(l.V2,{label:"Data set:",items:(0,l.Jw)(["fixed","random"],(function(e){return e===s})),onChange:function(e){return C(e)}}),c.createElement(l.V2,{label:"Method:",items:(0,l.Jw)(m,(function(e,n){return 0===n})),onChange:function(e){return i(e)}}),c.createElement(l.J6,{onChange:function(e){return J({func:e})}}),c.createElement("h4",null,"Encoding/Decoding Performance for various JDKs"),c.createElement(l.We,{dataTable:n,extractor:D.func,filter:function(e){return e.length===p&&e.dataset===b&&I(e)},title:"Encoding/Decoding, nanos",xDesc:y,yDesc:_,options:{legend:{textStyle:{fontSize:12}}}}),c.createElement("h4",null,"Performance for different data sizes"),c.createElement(l.V2,{label:"JDK:",items:(0,l.Jw)(r,(function(e,n){return 0===n})),onChange:function(e){return E(e)}}),c.createElement(l.We,{chartType:"LineChart",dataTable:n,extractor:D.func,filter:function(e){return e.jdk===S&&e.dataset===b&&I(e)},xDesc:y,yDesc:{title:"Data length",prop:"length",values:d},options:{hAxis:{title:"Data length"},vAxis:{title:"time, nanoseconds",logScale:!0},legend:{textStyle:{fontSize:12}}}}),c.createElement("h4",null,"base64_simd: bazel vs cargo"),c.createElement(l.We,{dataTable:n,extractor:D.func,filter:function(e){return e.length===p&&e.dataset===b&&I(e)},title:"Encoding/Decoding, nanos",xDesc:{title:"Library and Operation",prop:"method",values:[{name:"base64_simd::encode (bazel)",value:"jni_url_encodeSimd"},{name:"base64_simd::encode (cargo)",value:"jni_url_encodeSimdCargo"},{name:"base64_simd::decode (bazel)",value:"jni_url_decodeSimd"},{name:"base64_simd::decode (cargo)",value:"jni_url_decodeSimdCargo"},{name:"base64_simd::decodeInPlace (bazel)",value:"jni_url_decodeSimdInPlace"},{name:"base64_simd::decodeInPlace (cargo)",value:"jni_url_decodeSimdInPlaceCargo"}]},yDesc:_,options:{legend:{textStyle:{fontSize:12}}}}),c.createElement("p",null,"Full JMH logs:",c.createElement("a",{href:g("jdk8.log.txt")},"openjdk-8"),","," ",c.createElement("a",{href:g("jdk11.log.txt")},"openjdk-11"),","," ",c.createElement("a",{href:g("jdk17.log.txt")},"openjdk-17"),"."))}),{fetchFunc:function(){return Promise.all([(0,i._l)(g("jdk8.json")),(0,i._l)(g("jdk11.json")),(0,i._l)(g("jdk17.json"))]).then((function(e){function n(n,a){var t=e[n].data;return t.forEach((function(e){return e.params=Object.assign({},e.params,{jdk:a})})),t}return{data:[].concat((0,t.Z)(n(0,"openjdk-8")),(0,t.Z)(n(1,"openjdk-11")),(0,t.Z)(n(2,"openjdk-17")))}}))},exportDimensionsFunc:function(e,n){var a=e.substring(e.lastIndexOf(".")+1);return Object.assign({method:a},n)},headerText:"Java: Exploring JNI performance via Decoding Base64 (Charts)"});n.default=h}}]);
//# sourceMappingURL=component---src-pages-charts-base-64-jni-index-tsx-4f66c9bc6220d72f885d.js.map