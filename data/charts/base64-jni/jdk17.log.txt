# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:46:40
# Fork: 1 of 1
# Warmup Iteration   1: 35.683 ns/op
# Warmup Iteration   2: 32.734 ns/op
# Warmup Iteration   3: 32.269 ns/op
# Warmup Iteration   4: 32.655 ns/op
# Warmup Iteration   5: 32.798 ns/op
Iteration   1: 32.250 ns/op
Iteration   2: 32.253 ns/op
Iteration   3: 32.280 ns/op
Iteration   4: 32.249 ns/op
Iteration   5: 32.275 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  32.261 ±(99.9%) 0.058 ns/op [Average]
  (min, avg, max) = (32.249, 32.261, 32.280), stdev = 0.015
  CI (99.9%): [32.204, 32.319] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.36% complete, ETA 00:49:08
# Fork: 1 of 1
# Warmup Iteration   1: 57.465 ns/op
# Warmup Iteration   2: 54.312 ns/op
# Warmup Iteration   3: 52.131 ns/op
# Warmup Iteration   4: 51.946 ns/op
# Warmup Iteration   5: 51.896 ns/op
Iteration   1: 51.999 ns/op
Iteration   2: 52.081 ns/op
Iteration   3: 51.905 ns/op
Iteration   4: 51.915 ns/op
Iteration   5: 52.926 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  52.165 ±(99.9%) 1.660 ns/op [Average]
  (min, avg, max) = (51.905, 52.165, 52.926), stdev = 0.431
  CI (99.9%): [50.505, 53.825] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 0.71% complete, ETA 00:48:50
# Fork: 1 of 1
# Warmup Iteration   1: 146.331 ns/op
# Warmup Iteration   2: 138.875 ns/op
# Warmup Iteration   3: 134.757 ns/op
# Warmup Iteration   4: 133.854 ns/op
# Warmup Iteration   5: 133.744 ns/op
Iteration   1: 133.475 ns/op
Iteration   2: 133.774 ns/op
Iteration   3: 134.162 ns/op
Iteration   4: 134.119 ns/op
Iteration   5: 134.038 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  133.914 ±(99.9%) 1.108 ns/op [Average]
  (min, avg, max) = (133.475, 133.914, 134.162), stdev = 0.288
  CI (99.9%): [132.805, 135.022] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 1.07% complete, ETA 00:48:34
# Fork: 1 of 1
# Warmup Iteration   1: 253.326 ns/op
# Warmup Iteration   2: 236.850 ns/op
# Warmup Iteration   3: 232.734 ns/op
# Warmup Iteration   4: 231.993 ns/op
# Warmup Iteration   5: 231.180 ns/op
Iteration   1: 233.457 ns/op
Iteration   2: 232.031 ns/op
Iteration   3: 231.361 ns/op
Iteration   4: 231.178 ns/op
Iteration   5: 232.532 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  232.112 ±(99.9%) 3.565 ns/op [Average]
  (min, avg, max) = (231.178, 232.112, 233.457), stdev = 0.926
  CI (99.9%): [228.547, 235.677] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 1.43% complete, ETA 00:48:21
# Fork: 1 of 1
# Warmup Iteration   1: 1063.522 ns/op
# Warmup Iteration   2: 991.117 ns/op
# Warmup Iteration   3: 975.329 ns/op
# Warmup Iteration   4: 974.803 ns/op
# Warmup Iteration   5: 972.365 ns/op
Iteration   1: 972.461 ns/op
Iteration   2: 972.997 ns/op
Iteration   3: 971.634 ns/op
Iteration   4: 975.969 ns/op
Iteration   5: 974.459 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  973.504 ±(99.9%) 6.623 ns/op [Average]
  (min, avg, max) = (971.634, 973.504, 975.969), stdev = 1.720
  CI (99.9%): [966.882, 980.127] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 1.79% complete, ETA 00:48:08
# Fork: 1 of 1
# Warmup Iteration   1: 2106.142 ns/op
# Warmup Iteration   2: 1956.140 ns/op
# Warmup Iteration   3: 1921.374 ns/op
# Warmup Iteration   4: 1913.650 ns/op
# Warmup Iteration   5: 1915.001 ns/op
Iteration   1: 1962.780 ns/op
Iteration   2: 1919.353 ns/op
Iteration   3: 1918.823 ns/op
Iteration   4: 1949.333 ns/op
Iteration   5: 1914.514 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1932.961 ±(99.9%) 83.537 ns/op [Average]
  (min, avg, max) = (1914.514, 1932.961, 1962.780), stdev = 21.694
  CI (99.9%): [1849.424, 2016.497] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 2.14% complete, ETA 00:47:56
# Fork: 1 of 1
# Warmup Iteration   1: 21115.857 ns/op
# Warmup Iteration   2: 19695.862 ns/op
# Warmup Iteration   3: 19540.826 ns/op
# Warmup Iteration   4: 19508.828 ns/op
# Warmup Iteration   5: 19404.773 ns/op
Iteration   1: 19799.874 ns/op
Iteration   2: 19508.993 ns/op
Iteration   3: 19463.183 ns/op
Iteration   4: 19438.460 ns/op
Iteration   5: 19440.830 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  19530.268 ±(99.9%) 590.507 ns/op [Average]
  (min, avg, max) = (19438.460, 19530.268, 19799.874), stdev = 153.353
  CI (99.9%): [18939.761, 20120.775] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1)

# Run progress: 2.50% complete, ETA 00:47:45
# Fork: 1 of 1
# Warmup Iteration   1: 35.238 ns/op
# Warmup Iteration   2: 33.083 ns/op
# Warmup Iteration   3: 32.642 ns/op
# Warmup Iteration   4: 32.670 ns/op
# Warmup Iteration   5: 32.534 ns/op
Iteration   1: 32.520 ns/op
Iteration   2: 32.650 ns/op
Iteration   3: 32.573 ns/op
Iteration   4: 32.593 ns/op
Iteration   5: 32.631 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  32.594 ±(99.9%) 0.197 ns/op [Average]
  (min, avg, max) = (32.520, 32.594, 32.650), stdev = 0.051
  CI (99.9%): [32.396, 32.791] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10)

# Run progress: 2.86% complete, ETA 00:47:33
# Fork: 1 of 1
# Warmup Iteration   1: 58.870 ns/op
# Warmup Iteration   2: 56.030 ns/op
# Warmup Iteration   3: 53.480 ns/op
# Warmup Iteration   4: 53.527 ns/op
# Warmup Iteration   5: 53.668 ns/op
Iteration   1: 53.410 ns/op
Iteration   2: 53.523 ns/op
Iteration   3: 53.518 ns/op
Iteration   4: 53.496 ns/op
Iteration   5: 53.430 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  53.476 ±(99.9%) 0.201 ns/op [Average]
  (min, avg, max) = (53.410, 53.476, 53.523), stdev = 0.052
  CI (99.9%): [53.275, 53.677] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 50)

# Run progress: 3.21% complete, ETA 00:47:20
# Fork: 1 of 1
# Warmup Iteration   1: 142.060 ns/op
# Warmup Iteration   2: 132.914 ns/op
# Warmup Iteration   3: 129.859 ns/op
# Warmup Iteration   4: 129.511 ns/op
# Warmup Iteration   5: 129.163 ns/op
Iteration   1: 129.416 ns/op
Iteration   2: 129.344 ns/op
Iteration   3: 129.357 ns/op
Iteration   4: 129.233 ns/op
Iteration   5: 129.190 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  129.308 ±(99.9%) 0.361 ns/op [Average]
  (min, avg, max) = (129.190, 129.308, 129.416), stdev = 0.094
  CI (99.9%): [128.947, 129.669] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 100)

# Run progress: 3.57% complete, ETA 00:47:08
# Fork: 1 of 1
# Warmup Iteration   1: 254.488 ns/op
# Warmup Iteration   2: 237.218 ns/op
# Warmup Iteration   3: 233.051 ns/op
# Warmup Iteration   4: 231.334 ns/op
# Warmup Iteration   5: 231.418 ns/op
Iteration   1: 232.180 ns/op
Iteration   2: 232.424 ns/op
Iteration   3: 231.218 ns/op
Iteration   4: 232.389 ns/op
Iteration   5: 238.818 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  233.406 ±(99.9%) 11.803 ns/op [Average]
  (min, avg, max) = (231.218, 233.406, 238.818), stdev = 3.065
  CI (99.9%): [221.603, 245.208] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 500)

# Run progress: 3.93% complete, ETA 00:46:55
# Fork: 1 of 1
# Warmup Iteration   1: 1068.059 ns/op
# Warmup Iteration   2: 1008.081 ns/op
# Warmup Iteration   3: 978.735 ns/op
# Warmup Iteration   4: 976.308 ns/op
# Warmup Iteration   5: 972.830 ns/op
Iteration   1: 972.199 ns/op
Iteration   2: 971.248 ns/op
Iteration   3: 972.026 ns/op
Iteration   4: 973.798 ns/op
Iteration   5: 969.804 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  971.815 ±(99.9%) 5.610 ns/op [Average]
  (min, avg, max) = (969.804, 971.815, 973.798), stdev = 1.457
  CI (99.9%): [966.205, 977.425] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1000)

# Run progress: 4.29% complete, ETA 00:46:43
# Fork: 1 of 1
# Warmup Iteration   1: 2091.529 ns/op
# Warmup Iteration   2: 1937.983 ns/op
# Warmup Iteration   3: 1928.727 ns/op
# Warmup Iteration   4: 1912.744 ns/op
# Warmup Iteration   5: 1921.705 ns/op
Iteration   1: 1909.450 ns/op
Iteration   2: 1910.920 ns/op
Iteration   3: 1914.254 ns/op
Iteration   4: 1917.801 ns/op
Iteration   5: 1915.237 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1913.533 ±(99.9%) 12.935 ns/op [Average]
  (min, avg, max) = (1909.450, 1913.533, 1917.801), stdev = 3.359
  CI (99.9%): [1900.598, 1926.467] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10000)

# Run progress: 4.64% complete, ETA 00:46:32
# Fork: 1 of 1
# Warmup Iteration   1: 22512.999 ns/op
# Warmup Iteration   2: 19632.123 ns/op
# Warmup Iteration   3: 19477.044 ns/op
# Warmup Iteration   4: 19411.184 ns/op
# Warmup Iteration   5: 19498.475 ns/op
Iteration   1: 19424.619 ns/op
Iteration   2: 19400.041 ns/op
Iteration   3: 19518.752 ns/op
Iteration   4: 19480.972 ns/op
Iteration   5: 19471.790 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  19459.235 ±(99.9%) 181.375 ns/op [Average]
  (min, avg, max) = (19400.041, 19459.235, 19518.752), stdev = 47.102
  CI (99.9%): [19277.860, 19640.610] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 5.00% complete, ETA 00:46:21
# Fork: 1 of 1
# Warmup Iteration   1: 26.762 ns/op
# Warmup Iteration   2: 24.658 ns/op
# Warmup Iteration   3: 22.831 ns/op
# Warmup Iteration   4: 22.775 ns/op
# Warmup Iteration   5: 22.817 ns/op
Iteration   1: 22.815 ns/op
Iteration   2: 22.812 ns/op
Iteration   3: 22.875 ns/op
Iteration   4: 23.863 ns/op
Iteration   5: 22.821 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  23.037 ±(99.9%) 1.780 ns/op [Average]
  (min, avg, max) = (22.812, 23.037, 23.863), stdev = 0.462
  CI (99.9%): [21.257, 24.817] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 5.36% complete, ETA 00:46:11
# Fork: 1 of 1
# Warmup Iteration   1: 52.418 ns/op
# Warmup Iteration   2: 49.195 ns/op
# Warmup Iteration   3: 48.079 ns/op
# Warmup Iteration   4: 46.790 ns/op
# Warmup Iteration   5: 46.663 ns/op
Iteration   1: 46.742 ns/op
Iteration   2: 46.721 ns/op
Iteration   3: 46.780 ns/op
Iteration   4: 46.834 ns/op
Iteration   5: 47.001 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  46.815 ±(99.9%) 0.433 ns/op [Average]
  (min, avg, max) = (46.721, 46.815, 47.001), stdev = 0.112
  CI (99.9%): [46.383, 47.248] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 5.71% complete, ETA 00:46:01
# Fork: 1 of 1
# Warmup Iteration   1: 96.786 ns/op
# Warmup Iteration   2: 89.113 ns/op
# Warmup Iteration   3: 86.106 ns/op
# Warmup Iteration   4: 85.949 ns/op
# Warmup Iteration   5: 85.616 ns/op
Iteration   1: 85.780 ns/op
Iteration   2: 85.825 ns/op
Iteration   3: 85.818 ns/op
Iteration   4: 86.552 ns/op
Iteration   5: 86.139 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  86.023 ±(99.9%) 1.268 ns/op [Average]
  (min, avg, max) = (85.780, 86.023, 86.552), stdev = 0.329
  CI (99.9%): [84.755, 87.290] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 6.07% complete, ETA 00:45:51
# Fork: 1 of 1
# Warmup Iteration   1: 145.130 ns/op
# Warmup Iteration   2: 132.596 ns/op
# Warmup Iteration   3: 130.590 ns/op
# Warmup Iteration   4: 129.131 ns/op
# Warmup Iteration   5: 128.221 ns/op
Iteration   1: 128.360 ns/op
Iteration   2: 127.939 ns/op
Iteration   3: 128.339 ns/op
Iteration   4: 128.768 ns/op
Iteration   5: 128.472 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  128.376 ±(99.9%) 1.148 ns/op [Average]
  (min, avg, max) = (127.939, 128.376, 128.768), stdev = 0.298
  CI (99.9%): [127.227, 129.524] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 6.43% complete, ETA 00:45:41
# Fork: 1 of 1
# Warmup Iteration   1: 515.365 ns/op
# Warmup Iteration   2: 449.958 ns/op
# Warmup Iteration   3: 442.678 ns/op
# Warmup Iteration   4: 442.505 ns/op
# Warmup Iteration   5: 441.861 ns/op
Iteration   1: 447.871 ns/op
Iteration   2: 441.688 ns/op
Iteration   3: 442.108 ns/op
Iteration   4: 441.651 ns/op
Iteration   5: 441.624 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  442.988 ±(99.9%) 10.537 ns/op [Average]
  (min, avg, max) = (441.624, 442.988, 447.871), stdev = 2.737
  CI (99.9%): [432.451, 453.526] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 6.79% complete, ETA 00:45:31
# Fork: 1 of 1
# Warmup Iteration   1: 1001.140 ns/op
# Warmup Iteration   2: 891.813 ns/op
# Warmup Iteration   3: 882.497 ns/op
# Warmup Iteration   4: 881.814 ns/op
# Warmup Iteration   5: 883.020 ns/op
Iteration   1: 880.612 ns/op
Iteration   2: 879.745 ns/op
Iteration   3: 879.693 ns/op
Iteration   4: 881.044 ns/op
Iteration   5: 879.807 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  880.180 ±(99.9%) 2.357 ns/op [Average]
  (min, avg, max) = (879.693, 880.180, 881.044), stdev = 0.612
  CI (99.9%): [877.824, 882.537] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 7.14% complete, ETA 00:45:21
# Fork: 1 of 1
# Warmup Iteration   1: 10892.631 ns/op
# Warmup Iteration   2: 9329.936 ns/op
# Warmup Iteration   3: 9267.639 ns/op
# Warmup Iteration   4: 9270.520 ns/op
# Warmup Iteration   5: 9523.031 ns/op
Iteration   1: 9282.620 ns/op
Iteration   2: 9262.693 ns/op
Iteration   3: 9274.302 ns/op
Iteration   4: 9287.181 ns/op
Iteration   5: 9310.908 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  9283.541 ±(99.9%) 68.965 ns/op [Average]
  (min, avg, max) = (9262.693, 9283.541, 9310.908), stdev = 17.910
  CI (99.9%): [9214.576, 9352.506] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1)

# Run progress: 7.50% complete, ETA 00:45:10
# Fork: 1 of 1
# Warmup Iteration   1: 26.268 ns/op
# Warmup Iteration   2: 24.304 ns/op
# Warmup Iteration   3: 22.848 ns/op
# Warmup Iteration   4: 22.946 ns/op
# Warmup Iteration   5: 22.866 ns/op
Iteration   1: 22.764 ns/op
Iteration   2: 22.760 ns/op
Iteration   3: 23.498 ns/op
Iteration   4: 22.819 ns/op
Iteration   5: 22.801 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  22.928 ±(99.9%) 1.229 ns/op [Average]
  (min, avg, max) = (22.760, 22.928, 23.498), stdev = 0.319
  CI (99.9%): [21.699, 24.157] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10)

# Run progress: 7.86% complete, ETA 00:44:59
# Fork: 1 of 1
# Warmup Iteration   1: 52.601 ns/op
# Warmup Iteration   2: 49.719 ns/op
# Warmup Iteration   3: 47.190 ns/op
# Warmup Iteration   4: 47.262 ns/op
# Warmup Iteration   5: 47.396 ns/op
Iteration   1: 47.148 ns/op
Iteration   2: 47.332 ns/op
Iteration   3: 46.959 ns/op
Iteration   4: 47.097 ns/op
Iteration   5: 47.024 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  47.112 ±(99.9%) 0.548 ns/op [Average]
  (min, avg, max) = (46.959, 47.112, 47.332), stdev = 0.142
  CI (99.9%): [46.564, 47.660] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 50)

# Run progress: 8.21% complete, ETA 00:44:48
# Fork: 1 of 1
# Warmup Iteration   1: 96.016 ns/op
# Warmup Iteration   2: 89.357 ns/op
# Warmup Iteration   3: 85.897 ns/op
# Warmup Iteration   4: 85.748 ns/op
# Warmup Iteration   5: 87.318 ns/op
Iteration   1: 85.975 ns/op
Iteration   2: 85.785 ns/op
Iteration   3: 85.939 ns/op
Iteration   4: 86.872 ns/op
Iteration   5: 86.073 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  86.129 ±(99.9%) 1.649 ns/op [Average]
  (min, avg, max) = (85.785, 86.129, 86.872), stdev = 0.428
  CI (99.9%): [84.480, 87.777] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 100)

# Run progress: 8.57% complete, ETA 00:44:37
# Fork: 1 of 1
# Warmup Iteration   1: 146.004 ns/op
# Warmup Iteration   2: 132.131 ns/op
# Warmup Iteration   3: 128.230 ns/op
# Warmup Iteration   4: 128.334 ns/op
# Warmup Iteration   5: 127.985 ns/op
Iteration   1: 128.343 ns/op
Iteration   2: 128.263 ns/op
Iteration   3: 130.308 ns/op
Iteration   4: 128.032 ns/op
Iteration   5: 127.932 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  128.576 ±(99.9%) 3.784 ns/op [Average]
  (min, avg, max) = (127.932, 128.576, 130.308), stdev = 0.983
  CI (99.9%): [124.792, 132.359] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 500)

# Run progress: 8.93% complete, ETA 00:44:26
# Fork: 1 of 1
# Warmup Iteration   1: 509.881 ns/op
# Warmup Iteration   2: 455.814 ns/op
# Warmup Iteration   3: 449.769 ns/op
# Warmup Iteration   4: 445.819 ns/op
# Warmup Iteration   5: 448.326 ns/op
Iteration   1: 446.900 ns/op
Iteration   2: 448.790 ns/op
Iteration   3: 446.742 ns/op
Iteration   4: 446.782 ns/op
Iteration   5: 464.586 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  450.760 ±(99.9%) 29.946 ns/op [Average]
  (min, avg, max) = (446.742, 450.760, 464.586), stdev = 7.777
  CI (99.9%): [420.814, 480.706] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1000)

# Run progress: 9.29% complete, ETA 00:44:15
# Fork: 1 of 1
# Warmup Iteration   1: 988.239 ns/op
# Warmup Iteration   2: 868.458 ns/op
# Warmup Iteration   3: 858.212 ns/op
# Warmup Iteration   4: 862.021 ns/op
# Warmup Iteration   5: 871.199 ns/op
Iteration   1: 870.454 ns/op
Iteration   2: 860.023 ns/op
Iteration   3: 861.769 ns/op
Iteration   4: 854.898 ns/op
Iteration   5: 864.360 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  862.301 ±(99.9%) 22.035 ns/op [Average]
  (min, avg, max) = (854.898, 862.301, 870.454), stdev = 5.722
  CI (99.9%): [840.266, 884.336] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10000)

# Run progress: 9.64% complete, ETA 00:44:04
# Fork: 1 of 1
# Warmup Iteration   1: 10954.542 ns/op
# Warmup Iteration   2: 9426.437 ns/op
# Warmup Iteration   3: 9255.978 ns/op
# Warmup Iteration   4: 9224.555 ns/op
# Warmup Iteration   5: 9446.424 ns/op
Iteration   1: 9355.361 ns/op
Iteration   2: 9287.584 ns/op
Iteration   3: 9239.872 ns/op
Iteration   4: 9398.173 ns/op
Iteration   5: 9283.306 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  9312.859 ±(99.9%) 242.959 ns/op [Average]
  (min, avg, max) = (9239.872, 9312.859, 9398.173), stdev = 63.096
  CI (99.9%): [9069.900, 9555.818] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 10.00% complete, ETA 00:43:53
# Fork: 1 of 1
# Warmup Iteration   1: 466.376 ns/op
# Warmup Iteration   2: 470.354 ns/op
# Warmup Iteration   3: 445.654 ns/op
# Warmup Iteration   4: 448.603 ns/op
# Warmup Iteration   5: 448.177 ns/op
Iteration   1: 453.459 ns/op
Iteration   2: 460.470 ns/op
Iteration   3: 462.750 ns/op
Iteration   4: 449.120 ns/op
Iteration   5: 446.849 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  454.530 ±(99.9%) 26.697 ns/op [Average]
  (min, avg, max) = (446.849, 454.530, 462.750), stdev = 6.933
  CI (99.9%): [427.833, 481.226] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 10.36% complete, ETA 00:43:43
# Fork: 1 of 1
# Warmup Iteration   1: 449.219 ns/op
# Warmup Iteration   2: 434.699 ns/op
# Warmup Iteration   3: 433.024 ns/op
# Warmup Iteration   4: 425.835 ns/op
# Warmup Iteration   5: 430.316 ns/op
Iteration   1: 420.560 ns/op
Iteration   2: 420.179 ns/op
Iteration   3: 419.256 ns/op
Iteration   4: 419.886 ns/op
Iteration   5: 420.612 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  420.099 ±(99.9%) 2.144 ns/op [Average]
  (min, avg, max) = (419.256, 420.099, 420.612), stdev = 0.557
  CI (99.9%): [417.955, 422.242] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 10.71% complete, ETA 00:43:33
# Fork: 1 of 1
# Warmup Iteration   1: 544.716 ns/op
# Warmup Iteration   2: 506.896 ns/op
# Warmup Iteration   3: 504.220 ns/op
# Warmup Iteration   4: 502.120 ns/op
# Warmup Iteration   5: 501.586 ns/op
Iteration   1: 502.031 ns/op
Iteration   2: 512.372 ns/op
Iteration   3: 501.452 ns/op
Iteration   4: 499.426 ns/op
Iteration   5: 499.941 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  503.044 ±(99.9%) 20.493 ns/op [Average]
  (min, avg, max) = (499.426, 503.044, 512.372), stdev = 5.322
  CI (99.9%): [482.551, 523.538] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 11.07% complete, ETA 00:43:23
# Fork: 1 of 1
# Warmup Iteration   1: 687.903 ns/op
# Warmup Iteration   2: 665.379 ns/op
# Warmup Iteration   3: 653.155 ns/op
# Warmup Iteration   4: 656.464 ns/op
# Warmup Iteration   5: 655.595 ns/op
Iteration   1: 654.170 ns/op
Iteration   2: 660.565 ns/op
Iteration   3: 675.555 ns/op
Iteration   4: 659.483 ns/op
Iteration   5: 661.290 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  662.213 ±(99.9%) 30.668 ns/op [Average]
  (min, avg, max) = (654.170, 662.213, 675.555), stdev = 7.964
  CI (99.9%): [631.545, 692.881] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 11.43% complete, ETA 00:43:13
# Fork: 1 of 1
# Warmup Iteration   1: 1166.867 ns/op
# Warmup Iteration   2: 1133.041 ns/op
# Warmup Iteration   3: 1123.646 ns/op
# Warmup Iteration   4: 1119.439 ns/op
# Warmup Iteration   5: 1117.864 ns/op
Iteration   1: 1118.725 ns/op
Iteration   2: 1119.285 ns/op
Iteration   3: 1119.243 ns/op
Iteration   4: 1109.403 ns/op
Iteration   5: 1106.959 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1114.723 ±(99.9%) 23.251 ns/op [Average]
  (min, avg, max) = (1106.959, 1114.723, 1119.285), stdev = 6.038
  CI (99.9%): [1091.472, 1137.974] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 11.79% complete, ETA 00:43:02
# Fork: 1 of 1
# Warmup Iteration   1: 1920.498 ns/op
# Warmup Iteration   2: 1800.619 ns/op
# Warmup Iteration   3: 1766.425 ns/op
# Warmup Iteration   4: 1768.956 ns/op
# Warmup Iteration   5: 1765.409 ns/op
Iteration   1: 1766.486 ns/op
Iteration   2: 1774.353 ns/op
Iteration   3: 1780.957 ns/op
Iteration   4: 1783.262 ns/op
Iteration   5: 1788.379 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1778.687 ±(99.9%) 32.655 ns/op [Average]
  (min, avg, max) = (1766.486, 1778.687, 1788.379), stdev = 8.480
  CI (99.9%): [1746.033, 1811.342] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 12.14% complete, ETA 00:42:52
# Fork: 1 of 1
# Warmup Iteration   1: 13679.217 ns/op
# Warmup Iteration   2: 12710.362 ns/op
# Warmup Iteration   3: 12414.729 ns/op
# Warmup Iteration   4: 12395.236 ns/op
# Warmup Iteration   5: 12376.780 ns/op
Iteration   1: 12392.337 ns/op
Iteration   2: 12425.758 ns/op
Iteration   3: 12363.289 ns/op
Iteration   4: 12413.364 ns/op
Iteration   5: 12421.804 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  12403.311 ±(99.9%) 99.469 ns/op [Average]
  (min, avg, max) = (12363.289, 12403.311, 12425.758), stdev = 25.832
  CI (99.9%): [12303.841, 12502.780] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 1)

# Run progress: 12.50% complete, ETA 00:42:42
# Fork: 1 of 1
# Warmup Iteration   1: 463.486 ns/op
# Warmup Iteration   2: 466.374 ns/op
# Warmup Iteration   3: 448.382 ns/op
# Warmup Iteration   4: 445.387 ns/op
# Warmup Iteration   5: 446.520 ns/op
Iteration   1: 447.591 ns/op
Iteration   2: 445.942 ns/op
Iteration   3: 446.220 ns/op
Iteration   4: 444.571 ns/op
Iteration   5: 446.275 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  446.120 ±(99.9%) 4.142 ns/op [Average]
  (min, avg, max) = (444.571, 446.120, 447.591), stdev = 1.076
  CI (99.9%): [441.978, 450.262] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 10)

# Run progress: 12.86% complete, ETA 00:42:31
# Fork: 1 of 1
# Warmup Iteration   1: 449.878 ns/op
# Warmup Iteration   2: 444.044 ns/op
# Warmup Iteration   3: 427.005 ns/op
# Warmup Iteration   4: 426.835 ns/op
# Warmup Iteration   5: 427.073 ns/op
Iteration   1: 434.644 ns/op
Iteration   2: 428.330 ns/op
Iteration   3: 430.026 ns/op
Iteration   4: 428.235 ns/op
Iteration   5: 426.390 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  429.525 ±(99.9%) 12.082 ns/op [Average]
  (min, avg, max) = (426.390, 429.525, 434.644), stdev = 3.138
  CI (99.9%): [417.443, 441.607] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 50)

# Run progress: 13.21% complete, ETA 00:42:20
# Fork: 1 of 1
# Warmup Iteration   1: 558.013 ns/op
# Warmup Iteration   2: 509.223 ns/op
# Warmup Iteration   3: 501.685 ns/op
# Warmup Iteration   4: 499.976 ns/op
# Warmup Iteration   5: 500.129 ns/op
Iteration   1: 502.517 ns/op
Iteration   2: 502.832 ns/op
Iteration   3: 504.161 ns/op
Iteration   4: 501.096 ns/op
Iteration   5: 500.349 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  502.191 ±(99.9%) 5.772 ns/op [Average]
  (min, avg, max) = (500.349, 502.191, 504.161), stdev = 1.499
  CI (99.9%): [496.419, 507.963] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 100)

# Run progress: 13.57% complete, ETA 00:42:09
# Fork: 1 of 1
# Warmup Iteration   1: 702.751 ns/op
# Warmup Iteration   2: 650.428 ns/op
# Warmup Iteration   3: 640.613 ns/op
# Warmup Iteration   4: 641.549 ns/op
# Warmup Iteration   5: 639.562 ns/op
Iteration   1: 641.986 ns/op
Iteration   2: 637.545 ns/op
Iteration   3: 640.948 ns/op
Iteration   4: 633.364 ns/op
Iteration   5: 638.421 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  638.453 ±(99.9%) 12.977 ns/op [Average]
  (min, avg, max) = (633.364, 638.453, 641.986), stdev = 3.370
  CI (99.9%): [625.476, 651.430] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 500)

# Run progress: 13.93% complete, ETA 00:41:59
# Fork: 1 of 1
# Warmup Iteration   1: 1208.419 ns/op
# Warmup Iteration   2: 1121.632 ns/op
# Warmup Iteration   3: 1136.453 ns/op
# Warmup Iteration   4: 1102.215 ns/op
# Warmup Iteration   5: 1153.613 ns/op
Iteration   1: 1158.354 ns/op
Iteration   2: 1099.867 ns/op
Iteration   3: 1099.465 ns/op
Iteration   4: 1131.847 ns/op
Iteration   5: 1104.716 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1118.850 ±(99.9%) 99.399 ns/op [Average]
  (min, avg, max) = (1099.465, 1118.850, 1158.354), stdev = 25.814
  CI (99.9%): [1019.451, 1218.249] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 1000)

# Run progress: 14.29% complete, ETA 00:41:48
# Fork: 1 of 1
# Warmup Iteration   1: 1896.535 ns/op
# Warmup Iteration   2: 1843.421 ns/op
# Warmup Iteration   3: 1797.517 ns/op
# Warmup Iteration   4: 1789.365 ns/op
# Warmup Iteration   5: 1794.004 ns/op
Iteration   1: 1785.915 ns/op
Iteration   2: 1785.116 ns/op
Iteration   3: 1786.779 ns/op
Iteration   4: 1798.271 ns/op
Iteration   5: 1797.494 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1790.715 ±(99.9%) 25.318 ns/op [Average]
  (min, avg, max) = (1785.116, 1790.715, 1798.271), stdev = 6.575
  CI (99.9%): [1765.397, 1816.033] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 10000)

# Run progress: 14.64% complete, ETA 00:41:37
# Fork: 1 of 1
# Warmup Iteration   1: 14486.425 ns/op
# Warmup Iteration   2: 12958.532 ns/op
# Warmup Iteration   3: 12526.545 ns/op
# Warmup Iteration   4: 12510.377 ns/op
# Warmup Iteration   5: 12560.343 ns/op
Iteration   1: 12574.563 ns/op
Iteration   2: 12559.268 ns/op
Iteration   3: 12552.443 ns/op
Iteration   4: 12522.685 ns/op
Iteration   5: 12496.896 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  12541.171 ±(99.9%) 119.797 ns/op [Average]
  (min, avg, max) = (12496.896, 12541.171, 12574.563), stdev = 31.111
  CI (99.9%): [12421.374, 12660.968] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 15.00% complete, ETA 00:41:26
# Fork: 1 of 1
# Warmup Iteration   1: 437.635 ns/op
# Warmup Iteration   2: 443.722 ns/op
# Warmup Iteration   3: 426.368 ns/op
# Warmup Iteration   4: 428.221 ns/op
# Warmup Iteration   5: 430.933 ns/op
Iteration   1: 428.841 ns/op
Iteration   2: 427.533 ns/op
Iteration   3: 428.728 ns/op
Iteration   4: 430.025 ns/op
Iteration   5: 428.696 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  428.765 ±(99.9%) 3.398 ns/op [Average]
  (min, avg, max) = (427.533, 428.765, 430.025), stdev = 0.883
  CI (99.9%): [425.366, 432.163] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 15.36% complete, ETA 00:41:16
# Fork: 1 of 1
# Warmup Iteration   1: 422.474 ns/op
# Warmup Iteration   2: 412.748 ns/op
# Warmup Iteration   3: 400.128 ns/op
# Warmup Iteration   4: 399.663 ns/op
# Warmup Iteration   5: 399.470 ns/op
Iteration   1: 399.590 ns/op
Iteration   2: 399.276 ns/op
Iteration   3: 403.700 ns/op
Iteration   4: 400.075 ns/op
Iteration   5: 400.517 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  400.632 ±(99.9%) 6.850 ns/op [Average]
  (min, avg, max) = (399.276, 400.632, 403.700), stdev = 1.779
  CI (99.9%): [393.782, 407.481] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 15.71% complete, ETA 00:41:06
# Fork: 1 of 1
# Warmup Iteration   1: 512.040 ns/op
# Warmup Iteration   2: 480.591 ns/op
# Warmup Iteration   3: 469.101 ns/op
# Warmup Iteration   4: 469.326 ns/op
# Warmup Iteration   5: 468.680 ns/op
Iteration   1: 468.838 ns/op
Iteration   2: 469.200 ns/op
Iteration   3: 468.056 ns/op
Iteration   4: 467.733 ns/op
Iteration   5: 469.032 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  468.572 ±(99.9%) 2.471 ns/op [Average]
  (min, avg, max) = (467.733, 468.572, 469.200), stdev = 0.642
  CI (99.9%): [466.101, 471.043] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 16.07% complete, ETA 00:40:55
# Fork: 1 of 1
# Warmup Iteration   1: 580.957 ns/op
# Warmup Iteration   2: 551.415 ns/op
# Warmup Iteration   3: 542.477 ns/op
# Warmup Iteration   4: 540.439 ns/op
# Warmup Iteration   5: 543.954 ns/op
Iteration   1: 537.580 ns/op
Iteration   2: 537.897 ns/op
Iteration   3: 539.033 ns/op
Iteration   4: 540.479 ns/op
Iteration   5: 538.870 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  538.772 ±(99.9%) 4.381 ns/op [Average]
  (min, avg, max) = (537.580, 538.772, 540.479), stdev = 1.138
  CI (99.9%): [534.391, 543.153] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 16.43% complete, ETA 00:40:45
# Fork: 1 of 1
# Warmup Iteration   1: 1087.868 ns/op
# Warmup Iteration   2: 1032.671 ns/op
# Warmup Iteration   3: 1025.318 ns/op
# Warmup Iteration   4: 1021.423 ns/op
# Warmup Iteration   5: 1027.278 ns/op
Iteration   1: 1023.500 ns/op
Iteration   2: 1025.823 ns/op
Iteration   3: 1029.315 ns/op
Iteration   4: 1021.643 ns/op
Iteration   5: 1020.957 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1024.248 ±(99.9%) 13.106 ns/op [Average]
  (min, avg, max) = (1020.957, 1024.248, 1029.315), stdev = 3.404
  CI (99.9%): [1011.142, 1037.354] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 16.79% complete, ETA 00:40:35
# Fork: 1 of 1
# Warmup Iteration   1: 1900.984 ns/op
# Warmup Iteration   2: 1813.565 ns/op
# Warmup Iteration   3: 1766.536 ns/op
# Warmup Iteration   4: 1768.679 ns/op
# Warmup Iteration   5: 1763.596 ns/op
Iteration   1: 1767.266 ns/op
Iteration   2: 1764.597 ns/op
Iteration   3: 1768.787 ns/op
Iteration   4: 1782.078 ns/op
Iteration   5: 1782.436 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1773.033 ±(99.9%) 32.938 ns/op [Average]
  (min, avg, max) = (1764.597, 1773.033, 1782.436), stdev = 8.554
  CI (99.9%): [1740.095, 1805.971] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 17.14% complete, ETA 00:40:25
# Fork: 1 of 1
# Warmup Iteration   1: 13618.663 ns/op
# Warmup Iteration   2: 12708.780 ns/op
# Warmup Iteration   3: 12289.103 ns/op
# Warmup Iteration   4: 12218.614 ns/op
# Warmup Iteration   5: 12242.603 ns/op
Iteration   1: 12469.640 ns/op
Iteration   2: 12190.457 ns/op
Iteration   3: 12256.147 ns/op
Iteration   4: 12575.865 ns/op
Iteration   5: 12284.054 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  12355.233 ±(99.9%) 620.308 ns/op [Average]
  (min, avg, max) = (12190.457, 12355.233, 12575.865), stdev = 161.092
  CI (99.9%): [11734.924, 12975.541] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 1)

# Run progress: 17.50% complete, ETA 00:40:14
# Fork: 1 of 1
# Warmup Iteration   1: 440.638 ns/op
# Warmup Iteration   2: 445.243 ns/op
# Warmup Iteration   3: 427.050 ns/op
# Warmup Iteration   4: 421.431 ns/op
# Warmup Iteration   5: 422.553 ns/op
Iteration   1: 421.725 ns/op
Iteration   2: 419.318 ns/op
Iteration   3: 437.502 ns/op
Iteration   4: 424.024 ns/op
Iteration   5: 428.154 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  426.145 ±(99.9%) 27.477 ns/op [Average]
  (min, avg, max) = (419.318, 426.145, 437.502), stdev = 7.136
  CI (99.9%): [398.668, 453.622] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 10)

# Run progress: 17.86% complete, ETA 00:40:04
# Fork: 1 of 1
# Warmup Iteration   1: 421.752 ns/op
# Warmup Iteration   2: 414.501 ns/op
# Warmup Iteration   3: 395.764 ns/op
# Warmup Iteration   4: 396.846 ns/op
# Warmup Iteration   5: 396.477 ns/op
Iteration   1: 396.053 ns/op
Iteration   2: 397.459 ns/op
Iteration   3: 396.458 ns/op
Iteration   4: 396.514 ns/op
Iteration   5: 397.654 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  396.828 ±(99.9%) 2.666 ns/op [Average]
  (min, avg, max) = (396.053, 396.828, 397.654), stdev = 0.692
  CI (99.9%): [394.162, 399.494] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 50)

# Run progress: 18.21% complete, ETA 00:39:53
# Fork: 1 of 1
# Warmup Iteration   1: 510.048 ns/op
# Warmup Iteration   2: 474.954 ns/op
# Warmup Iteration   3: 466.288 ns/op
# Warmup Iteration   4: 467.692 ns/op
# Warmup Iteration   5: 466.830 ns/op
Iteration   1: 467.296 ns/op
Iteration   2: 466.781 ns/op
Iteration   3: 467.499 ns/op
Iteration   4: 478.762 ns/op
Iteration   5: 466.738 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  469.415 ±(99.9%) 20.159 ns/op [Average]
  (min, avg, max) = (466.738, 469.415, 478.762), stdev = 5.235
  CI (99.9%): [449.256, 489.574] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 100)

# Run progress: 18.57% complete, ETA 00:39:42
# Fork: 1 of 1
# Warmup Iteration   1: 580.897 ns/op
# Warmup Iteration   2: 549.423 ns/op
# Warmup Iteration   3: 540.801 ns/op
# Warmup Iteration   4: 539.999 ns/op
# Warmup Iteration   5: 555.343 ns/op
Iteration   1: 538.575 ns/op
Iteration   2: 539.889 ns/op
Iteration   3: 543.167 ns/op
Iteration   4: 538.684 ns/op
Iteration   5: 538.380 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  539.739 ±(99.9%) 7.723 ns/op [Average]
  (min, avg, max) = (538.380, 539.739, 543.167), stdev = 2.006
  CI (99.9%): [532.016, 547.462] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 500)

# Run progress: 18.93% complete, ETA 00:39:32
# Fork: 1 of 1
# Warmup Iteration   1: 1085.382 ns/op
# Warmup Iteration   2: 1033.412 ns/op
# Warmup Iteration   3: 1014.450 ns/op
# Warmup Iteration   4: 1004.218 ns/op
# Warmup Iteration   5: 1000.376 ns/op
Iteration   1: 1003.654 ns/op
Iteration   2: 1004.437 ns/op
Iteration   3: 1004.218 ns/op
Iteration   4: 1002.570 ns/op
Iteration   5: 1005.256 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1004.027 ±(99.9%) 3.840 ns/op [Average]
  (min, avg, max) = (1002.570, 1004.027, 1005.256), stdev = 0.997
  CI (99.9%): [1000.187, 1007.867] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 1000)

# Run progress: 19.29% complete, ETA 00:39:21
# Fork: 1 of 1
# Warmup Iteration   1: 1905.760 ns/op
# Warmup Iteration   2: 1834.992 ns/op
# Warmup Iteration   3: 1790.567 ns/op
# Warmup Iteration   4: 1803.619 ns/op
# Warmup Iteration   5: 1783.908 ns/op
Iteration   1: 1784.944 ns/op
Iteration   2: 1780.090 ns/op
Iteration   3: 1777.841 ns/op
Iteration   4: 1788.198 ns/op
Iteration   5: 1787.200 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1783.655 ±(99.9%) 17.368 ns/op [Average]
  (min, avg, max) = (1777.841, 1783.655, 1788.198), stdev = 4.510
  CI (99.9%): [1766.287, 1801.023] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 10000)

# Run progress: 19.64% complete, ETA 00:39:10
# Fork: 1 of 1
# Warmup Iteration   1: 14295.798 ns/op
# Warmup Iteration   2: 12617.291 ns/op
# Warmup Iteration   3: 12857.060 ns/op
# Warmup Iteration   4: 12307.597 ns/op
# Warmup Iteration   5: 12303.606 ns/op
Iteration   1: 12294.320 ns/op
Iteration   2: 12249.709 ns/op
Iteration   3: 12308.883 ns/op
Iteration   4: 12263.323 ns/op
Iteration   5: 12290.648 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  12281.377 ±(99.9%) 93.112 ns/op [Average]
  (min, avg, max) = (12249.709, 12281.377, 12308.883), stdev = 24.181
  CI (99.9%): [12188.264, 12374.489] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 1)

# Run progress: 20.00% complete, ETA 00:39:00
# Fork: 1 of 1
# Warmup Iteration   1: 415.210 ns/op
# Warmup Iteration   2: 406.989 ns/op
# Warmup Iteration   3: 389.758 ns/op
# Warmup Iteration   4: 388.564 ns/op
# Warmup Iteration   5: 387.369 ns/op
Iteration   1: 387.658 ns/op
Iteration   2: 397.022 ns/op
Iteration   3: 390.247 ns/op
Iteration   4: 388.829 ns/op
Iteration   5: 388.701 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  390.491 ±(99.9%) 14.498 ns/op [Average]
  (min, avg, max) = (387.658, 390.491, 397.022), stdev = 3.765
  CI (99.9%): [375.993, 404.989] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 10)

# Run progress: 20.36% complete, ETA 00:38:49
# Fork: 1 of 1
# Warmup Iteration   1: 386.450 ns/op
# Warmup Iteration   2: 373.657 ns/op
# Warmup Iteration   3: 364.198 ns/op
# Warmup Iteration   4: 362.501 ns/op
# Warmup Iteration   5: 362.182 ns/op
Iteration   1: 365.543 ns/op
Iteration   2: 364.919 ns/op
Iteration   3: 371.000 ns/op
Iteration   4: 366.729 ns/op
Iteration   5: 362.157 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  366.070 ±(99.9%) 12.426 ns/op [Average]
  (min, avg, max) = (362.157, 366.070, 371.000), stdev = 3.227
  CI (99.9%): [353.644, 378.495] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 50)

# Run progress: 20.71% complete, ETA 00:38:39
# Fork: 1 of 1
# Warmup Iteration   1: 471.706 ns/op
# Warmup Iteration   2: 443.595 ns/op
# Warmup Iteration   3: 439.159 ns/op
# Warmup Iteration   4: 440.185 ns/op
# Warmup Iteration   5: 439.014 ns/op
Iteration   1: 437.906 ns/op
Iteration   2: 437.982 ns/op
Iteration   3: 437.047 ns/op
Iteration   4: 445.048 ns/op
Iteration   5: 437.205 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  439.038 ±(99.9%) 13.036 ns/op [Average]
  (min, avg, max) = (437.047, 439.038, 445.048), stdev = 3.385
  CI (99.9%): [426.002, 452.073] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 100)

# Run progress: 21.07% complete, ETA 00:38:29
# Fork: 1 of 1
# Warmup Iteration   1: 545.161 ns/op
# Warmup Iteration   2: 508.149 ns/op
# Warmup Iteration   3: 498.462 ns/op
# Warmup Iteration   4: 500.350 ns/op
# Warmup Iteration   5: 498.688 ns/op
Iteration   1: 497.347 ns/op
Iteration   2: 498.229 ns/op
Iteration   3: 507.883 ns/op
Iteration   4: 524.402 ns/op
Iteration   5: 497.614 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  505.095 ±(99.9%) 44.893 ns/op [Average]
  (min, avg, max) = (497.347, 505.095, 524.402), stdev = 11.659
  CI (99.9%): [460.202, 549.988] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 500)

# Run progress: 21.43% complete, ETA 00:38:18
# Fork: 1 of 1
# Warmup Iteration   1: 1052.926 ns/op
# Warmup Iteration   2: 1002.161 ns/op
# Warmup Iteration   3: 983.723 ns/op
# Warmup Iteration   4: 981.620 ns/op
# Warmup Iteration   5: 982.429 ns/op
Iteration   1: 978.028 ns/op
Iteration   2: 982.679 ns/op
Iteration   3: 984.312 ns/op
Iteration   4: 984.546 ns/op
Iteration   5: 1045.261 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  994.965 ±(99.9%) 108.734 ns/op [Average]
  (min, avg, max) = (978.028, 994.965, 1045.261), stdev = 28.238
  CI (99.9%): [886.232, 1103.699] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 21.79% complete, ETA 00:38:08
# Fork: 1 of 1
# Warmup Iteration   1: 1905.776 ns/op
# Warmup Iteration   2: 1773.743 ns/op
# Warmup Iteration   3: 1734.303 ns/op
# Warmup Iteration   4: 1739.688 ns/op
# Warmup Iteration   5: 1739.102 ns/op
Iteration   1: 1745.670 ns/op
Iteration   2: 1751.153 ns/op
Iteration   3: 1740.775 ns/op
Iteration   4: 1745.646 ns/op
Iteration   5: 1740.825 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1744.814 ±(99.9%) 16.542 ns/op [Average]
  (min, avg, max) = (1740.775, 1744.814, 1751.153), stdev = 4.296
  CI (99.9%): [1728.272, 1761.356] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 22.14% complete, ETA 00:37:58
# Fork: 1 of 1
# Warmup Iteration   1: 13613.886 ns/op
# Warmup Iteration   2: 12507.119 ns/op
# Warmup Iteration   3: 12302.864 ns/op
# Warmup Iteration   4: 12269.641 ns/op
# Warmup Iteration   5: 12523.501 ns/op
Iteration   1: 12247.602 ns/op
Iteration   2: 12239.059 ns/op
Iteration   3: 12266.887 ns/op
Iteration   4: 12257.895 ns/op
Iteration   5: 12252.799 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  12252.848 ±(99.9%) 40.396 ns/op [Average]
  (min, avg, max) = (12239.059, 12252.848, 12266.887), stdev = 10.491
  CI (99.9%): [12212.453, 12293.244] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 1)

# Run progress: 22.50% complete, ETA 00:37:48
# Fork: 1 of 1
# Warmup Iteration   1: 403.375 ns/op
# Warmup Iteration   2: 406.667 ns/op
# Warmup Iteration   3: 386.824 ns/op
# Warmup Iteration   4: 385.812 ns/op
# Warmup Iteration   5: 386.084 ns/op
Iteration   1: 387.053 ns/op
Iteration   2: 387.096 ns/op
Iteration   3: 386.964 ns/op
Iteration   4: 386.545 ns/op
Iteration   5: 389.114 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  387.354 ±(99.9%) 3.880 ns/op [Average]
  (min, avg, max) = (386.545, 387.354, 389.114), stdev = 1.008
  CI (99.9%): [383.475, 391.234] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 10)

# Run progress: 22.86% complete, ETA 00:37:37
# Fork: 1 of 1
# Warmup Iteration   1: 385.829 ns/op
# Warmup Iteration   2: 373.209 ns/op
# Warmup Iteration   3: 362.558 ns/op
# Warmup Iteration   4: 360.679 ns/op
# Warmup Iteration   5: 379.415 ns/op
Iteration   1: 364.397 ns/op
Iteration   2: 363.134 ns/op
Iteration   3: 362.930 ns/op
Iteration   4: 361.894 ns/op
Iteration   5: 362.550 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  362.981 ±(99.9%) 3.549 ns/op [Average]
  (min, avg, max) = (361.894, 362.981, 364.397), stdev = 0.922
  CI (99.9%): [359.432, 366.530] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 50)

# Run progress: 23.21% complete, ETA 00:37:26
# Fork: 1 of 1
# Warmup Iteration   1: 476.870 ns/op
# Warmup Iteration   2: 448.069 ns/op
# Warmup Iteration   3: 442.019 ns/op
# Warmup Iteration   4: 444.617 ns/op
# Warmup Iteration   5: 441.456 ns/op
Iteration   1: 442.615 ns/op
Iteration   2: 444.340 ns/op
Iteration   3: 440.494 ns/op
Iteration   4: 439.941 ns/op
Iteration   5: 439.683 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  441.415 ±(99.9%) 7.705 ns/op [Average]
  (min, avg, max) = (439.683, 441.415, 444.340), stdev = 2.001
  CI (99.9%): [433.709, 449.120] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 100)

# Run progress: 23.57% complete, ETA 00:37:16
# Fork: 1 of 1
# Warmup Iteration   1: 550.189 ns/op
# Warmup Iteration   2: 514.950 ns/op
# Warmup Iteration   3: 506.664 ns/op
# Warmup Iteration   4: 506.366 ns/op
# Warmup Iteration   5: 523.783 ns/op
Iteration   1: 503.393 ns/op
Iteration   2: 504.333 ns/op
Iteration   3: 505.052 ns/op
Iteration   4: 507.825 ns/op
Iteration   5: 507.065 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  505.534 ±(99.9%) 7.165 ns/op [Average]
  (min, avg, max) = (503.393, 505.534, 507.825), stdev = 1.861
  CI (99.9%): [498.369, 512.699] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 500)

# Run progress: 23.93% complete, ETA 00:37:05
# Fork: 1 of 1
# Warmup Iteration   1: 1073.706 ns/op
# Warmup Iteration   2: 989.539 ns/op
# Warmup Iteration   3: 977.178 ns/op
# Warmup Iteration   4: 975.408 ns/op
# Warmup Iteration   5: 974.989 ns/op
Iteration   1: 974.066 ns/op
Iteration   2: 973.687 ns/op
Iteration   3: 977.680 ns/op
Iteration   4: 975.430 ns/op
Iteration   5: 976.269 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  975.426 ±(99.9%) 6.288 ns/op [Average]
  (min, avg, max) = (973.687, 975.426, 977.680), stdev = 1.633
  CI (99.9%): [969.139, 981.714] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 1000)

# Run progress: 24.29% complete, ETA 00:36:54
# Fork: 1 of 1
# Warmup Iteration   1: 1886.691 ns/op
# Warmup Iteration   2: 1794.384 ns/op
# Warmup Iteration   3: 1752.265 ns/op
# Warmup Iteration   4: 1829.699 ns/op
# Warmup Iteration   5: 1758.111 ns/op
Iteration   1: 1756.794 ns/op
Iteration   2: 1754.914 ns/op
Iteration   3: 1752.606 ns/op
Iteration   4: 1746.271 ns/op
Iteration   5: 1802.352 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1762.588 ±(99.9%) 86.949 ns/op [Average]
  (min, avg, max) = (1746.271, 1762.588, 1802.352), stdev = 22.580
  CI (99.9%): [1675.639, 1849.537] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 10000)

# Run progress: 24.64% complete, ETA 00:36:44
# Fork: 1 of 1
# Warmup Iteration   1: 13693.666 ns/op
# Warmup Iteration   2: 12516.854 ns/op
# Warmup Iteration   3: 12299.850 ns/op
# Warmup Iteration   4: 12259.957 ns/op
# Warmup Iteration   5: 12316.969 ns/op
Iteration   1: 12278.666 ns/op
Iteration   2: 12458.556 ns/op
Iteration   3: 12340.744 ns/op
Iteration   4: 12265.005 ns/op
Iteration   5: 12240.366 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  12316.667 ±(99.9%) 337.053 ns/op [Average]
  (min, avg, max) = (12240.366, 12316.667, 12458.556), stdev = 87.532
  CI (99.9%): [11979.614, 12653.720] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 1)

# Run progress: 25.00% complete, ETA 00:36:33
# Fork: 1 of 1
# Warmup Iteration   1: 363.484 ns/op
# Warmup Iteration   2: 381.668 ns/op
# Warmup Iteration   3: 349.306 ns/op
# Warmup Iteration   4: 345.632 ns/op
# Warmup Iteration   5: 345.192 ns/op
Iteration   1: 344.522 ns/op
Iteration   2: 344.003 ns/op
Iteration   3: 345.232 ns/op
Iteration   4: 344.416 ns/op
Iteration   5: 343.687 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  344.372 ±(99.9%) 2.253 ns/op [Average]
  (min, avg, max) = (343.687, 344.372, 345.232), stdev = 0.585
  CI (99.9%): [342.119, 346.625] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 10)

# Run progress: 25.36% complete, ETA 00:36:23
# Fork: 1 of 1
# Warmup Iteration   1: 344.851 ns/op
# Warmup Iteration   2: 330.443 ns/op
# Warmup Iteration   3: 319.543 ns/op
# Warmup Iteration   4: 320.531 ns/op
# Warmup Iteration   5: 320.600 ns/op
Iteration   1: 319.128 ns/op
Iteration   2: 320.715 ns/op
Iteration   3: 321.637 ns/op
Iteration   4: 319.806 ns/op
Iteration   5: 320.097 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  320.277 ±(99.9%) 3.662 ns/op [Average]
  (min, avg, max) = (319.128, 320.277, 321.637), stdev = 0.951
  CI (99.9%): [316.615, 323.938] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 50)

# Run progress: 25.71% complete, ETA 00:36:13
# Fork: 1 of 1
# Warmup Iteration   1: 428.360 ns/op
# Warmup Iteration   2: 407.252 ns/op
# Warmup Iteration   3: 392.949 ns/op
# Warmup Iteration   4: 393.200 ns/op
# Warmup Iteration   5: 392.047 ns/op
Iteration   1: 391.966 ns/op
Iteration   2: 392.970 ns/op
Iteration   3: 391.794 ns/op
Iteration   4: 392.494 ns/op
Iteration   5: 391.872 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  392.219 ±(99.9%) 1.930 ns/op [Average]
  (min, avg, max) = (391.794, 392.219, 392.970), stdev = 0.501
  CI (99.9%): [390.289, 394.149] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 100)

# Run progress: 26.07% complete, ETA 00:36:02
# Fork: 1 of 1
# Warmup Iteration   1: 493.390 ns/op
# Warmup Iteration   2: 464.036 ns/op
# Warmup Iteration   3: 458.688 ns/op
# Warmup Iteration   4: 462.031 ns/op
# Warmup Iteration   5: 455.750 ns/op
Iteration   1: 454.550 ns/op
Iteration   2: 453.766 ns/op
Iteration   3: 455.451 ns/op
Iteration   4: 455.288 ns/op
Iteration   5: 456.533 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  455.117 ±(99.9%) 3.990 ns/op [Average]
  (min, avg, max) = (453.766, 455.117, 456.533), stdev = 1.036
  CI (99.9%): [451.128, 459.107] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 500)

# Run progress: 26.43% complete, ETA 00:35:52
# Fork: 1 of 1
# Warmup Iteration   1: 1011.560 ns/op
# Warmup Iteration   2: 922.631 ns/op
# Warmup Iteration   3: 906.807 ns/op
# Warmup Iteration   4: 914.254 ns/op
# Warmup Iteration   5: 905.003 ns/op
Iteration   1: 905.111 ns/op
Iteration   2: 904.927 ns/op
Iteration   3: 906.270 ns/op
Iteration   4: 901.964 ns/op
Iteration   5: 904.453 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  904.545 ±(99.9%) 6.124 ns/op [Average]
  (min, avg, max) = (901.964, 904.545, 906.270), stdev = 1.590
  CI (99.9%): [898.421, 910.669] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 26.79% complete, ETA 00:35:42
# Fork: 1 of 1
# Warmup Iteration   1: 1701.187 ns/op
# Warmup Iteration   2: 1601.115 ns/op
# Warmup Iteration   3: 1583.696 ns/op
# Warmup Iteration   4: 1566.825 ns/op
# Warmup Iteration   5: 1575.486 ns/op
Iteration   1: 1563.287 ns/op
Iteration   2: 1566.535 ns/op
Iteration   3: 1565.160 ns/op
Iteration   4: 1569.394 ns/op
Iteration   5: 1584.776 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1569.830 ±(99.9%) 33.294 ns/op [Average]
  (min, avg, max) = (1563.287, 1569.830, 1584.776), stdev = 8.646
  CI (99.9%): [1536.536, 1603.125] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 27.14% complete, ETA 00:35:31
# Fork: 1 of 1
# Warmup Iteration   1: 13457.352 ns/op
# Warmup Iteration   2: 12093.606 ns/op
# Warmup Iteration   3: 11974.637 ns/op
# Warmup Iteration   4: 11889.607 ns/op
# Warmup Iteration   5: 11915.816 ns/op
Iteration   1: 11896.618 ns/op
Iteration   2: 11901.340 ns/op
Iteration   3: 12093.735 ns/op
Iteration   4: 11928.874 ns/op
Iteration   5: 11891.283 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  11942.370 ±(99.9%) 330.573 ns/op [Average]
  (min, avg, max) = (11891.283, 11942.370, 12093.735), stdev = 85.849
  CI (99.9%): [11611.797, 12272.943] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 1)

# Run progress: 27.50% complete, ETA 00:35:21
# Fork: 1 of 1
# Warmup Iteration   1: 368.055 ns/op
# Warmup Iteration   2: 365.688 ns/op
# Warmup Iteration   3: 346.983 ns/op
# Warmup Iteration   4: 347.579 ns/op
# Warmup Iteration   5: 349.524 ns/op
Iteration   1: 349.072 ns/op
Iteration   2: 347.727 ns/op
Iteration   3: 348.013 ns/op
Iteration   4: 349.149 ns/op
Iteration   5: 356.007 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  349.994 ±(99.9%) 13.169 ns/op [Average]
  (min, avg, max) = (347.727, 349.994, 356.007), stdev = 3.420
  CI (99.9%): [336.825, 363.162] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 10)

# Run progress: 27.86% complete, ETA 00:35:10
# Fork: 1 of 1
# Warmup Iteration   1: 343.780 ns/op
# Warmup Iteration   2: 329.543 ns/op
# Warmup Iteration   3: 321.808 ns/op
# Warmup Iteration   4: 323.768 ns/op
# Warmup Iteration   5: 322.653 ns/op
Iteration   1: 327.887 ns/op
Iteration   2: 322.930 ns/op
Iteration   3: 322.417 ns/op
Iteration   4: 326.915 ns/op
Iteration   5: 323.117 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  324.653 ±(99.9%) 9.799 ns/op [Average]
  (min, avg, max) = (322.417, 324.653, 327.887), stdev = 2.545
  CI (99.9%): [314.854, 334.452] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 50)

# Run progress: 28.21% complete, ETA 00:35:00
# Fork: 1 of 1
# Warmup Iteration   1: 422.375 ns/op
# Warmup Iteration   2: 397.596 ns/op
# Warmup Iteration   3: 392.998 ns/op
# Warmup Iteration   4: 391.360 ns/op
# Warmup Iteration   5: 391.460 ns/op
Iteration   1: 390.932 ns/op
Iteration   2: 409.909 ns/op
Iteration   3: 393.390 ns/op
Iteration   4: 392.384 ns/op
Iteration   5: 390.295 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  395.382 ±(99.9%) 31.618 ns/op [Average]
  (min, avg, max) = (390.295, 395.382, 409.909), stdev = 8.211
  CI (99.9%): [363.765, 427.000] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 100)

# Run progress: 28.57% complete, ETA 00:34:49
# Fork: 1 of 1
# Warmup Iteration   1: 491.381 ns/op
# Warmup Iteration   2: 464.660 ns/op
# Warmup Iteration   3: 456.373 ns/op
# Warmup Iteration   4: 455.375 ns/op
# Warmup Iteration   5: 454.698 ns/op
Iteration   1: 453.312 ns/op
Iteration   2: 452.971 ns/op
Iteration   3: 452.571 ns/op
Iteration   4: 452.173 ns/op
Iteration   5: 456.179 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  453.441 ±(99.9%) 6.119 ns/op [Average]
  (min, avg, max) = (452.173, 453.441, 456.179), stdev = 1.589
  CI (99.9%): [447.323, 459.560] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 500)

# Run progress: 28.93% complete, ETA 00:34:39
# Fork: 1 of 1
# Warmup Iteration   1: 964.409 ns/op
# Warmup Iteration   2: 920.571 ns/op
# Warmup Iteration   3: 898.092 ns/op
# Warmup Iteration   4: 897.759 ns/op
# Warmup Iteration   5: 895.873 ns/op
Iteration   1: 896.794 ns/op
Iteration   2: 899.880 ns/op
Iteration   3: 894.441 ns/op
Iteration   4: 896.861 ns/op
Iteration   5: 898.663 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  897.328 ±(99.9%) 7.969 ns/op [Average]
  (min, avg, max) = (894.441, 897.328, 899.880), stdev = 2.070
  CI (99.9%): [889.359, 905.297] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 1000)

# Run progress: 29.29% complete, ETA 00:34:28
# Fork: 1 of 1
# Warmup Iteration   1: 1728.700 ns/op
# Warmup Iteration   2: 1586.932 ns/op
# Warmup Iteration   3: 1666.566 ns/op
# Warmup Iteration   4: 1596.777 ns/op
# Warmup Iteration   5: 1657.127 ns/op
Iteration   1: 1600.269 ns/op
Iteration   2: 1599.207 ns/op
Iteration   3: 1597.623 ns/op
Iteration   4: 1598.158 ns/op
Iteration   5: 1601.539 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1599.359 ±(99.9%) 6.107 ns/op [Average]
  (min, avg, max) = (1597.623, 1599.359, 1601.539), stdev = 1.586
  CI (99.9%): [1593.252, 1605.466] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 10000)

# Run progress: 29.64% complete, ETA 00:34:18
# Fork: 1 of 1
# Warmup Iteration   1: 13317.401 ns/op
# Warmup Iteration   2: 12097.067 ns/op
# Warmup Iteration   3: 11897.008 ns/op
# Warmup Iteration   4: 11849.359 ns/op
# Warmup Iteration   5: 11828.638 ns/op
Iteration   1: 11834.911 ns/op
Iteration   2: 11861.886 ns/op
Iteration   3: 11815.066 ns/op
Iteration   4: 11954.536 ns/op
Iteration   5: 12125.006 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  11918.281 ±(99.9%) 490.235 ns/op [Average]
  (min, avg, max) = (11815.066, 11918.281, 12125.006), stdev = 127.312
  CI (99.9%): [11428.046, 12408.515] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 30.00% complete, ETA 00:34:07
# Fork: 1 of 1
# Warmup Iteration   1: 355.532 ns/op
# Warmup Iteration   2: 355.626 ns/op
# Warmup Iteration   3: 371.333 ns/op
# Warmup Iteration   4: 377.172 ns/op
# Warmup Iteration   5: 367.115 ns/op
Iteration   1: 363.827 ns/op
Iteration   2: 369.445 ns/op
Iteration   3: 367.989 ns/op
Iteration   4: 367.848 ns/op
Iteration   5: 368.274 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  367.476 ±(99.9%) 8.220 ns/op [Average]
  (min, avg, max) = (363.827, 367.476, 369.445), stdev = 2.135
  CI (99.9%): [359.256, 375.697] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 30.36% complete, ETA 00:33:57
# Fork: 1 of 1
# Warmup Iteration   1: 372.641 ns/op
# Warmup Iteration   2: 357.148 ns/op
# Warmup Iteration   3: 350.914 ns/op
# Warmup Iteration   4: 348.504 ns/op
# Warmup Iteration   5: 349.474 ns/op
Iteration   1: 349.805 ns/op
Iteration   2: 348.953 ns/op
Iteration   3: 367.598 ns/op
Iteration   4: 348.029 ns/op
Iteration   5: 348.802 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  352.637 ±(99.9%) 32.295 ns/op [Average]
  (min, avg, max) = (348.029, 352.637, 367.598), stdev = 8.387
  CI (99.9%): [320.343, 384.932] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 30.71% complete, ETA 00:33:46
# Fork: 1 of 1
# Warmup Iteration   1: 464.552 ns/op
# Warmup Iteration   2: 437.952 ns/op
# Warmup Iteration   3: 454.349 ns/op
# Warmup Iteration   4: 434.256 ns/op
# Warmup Iteration   5: 432.583 ns/op
Iteration   1: 435.019 ns/op
Iteration   2: 433.120 ns/op
Iteration   3: 433.108 ns/op
Iteration   4: 434.646 ns/op
Iteration   5: 432.267 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  433.632 ±(99.9%) 4.454 ns/op [Average]
  (min, avg, max) = (432.267, 433.632, 435.019), stdev = 1.157
  CI (99.9%): [429.178, 438.086] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 31.07% complete, ETA 00:33:36
# Fork: 1 of 1
# Warmup Iteration   1: 547.149 ns/op
# Warmup Iteration   2: 515.552 ns/op
# Warmup Iteration   3: 506.477 ns/op
# Warmup Iteration   4: 507.309 ns/op
# Warmup Iteration   5: 508.459 ns/op
Iteration   1: 506.915 ns/op
Iteration   2: 507.415 ns/op
Iteration   3: 506.927 ns/op
Iteration   4: 504.159 ns/op
Iteration   5: 504.964 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  506.076 ±(99.9%) 5.490 ns/op [Average]
  (min, avg, max) = (504.159, 506.076, 507.415), stdev = 1.426
  CI (99.9%): [500.586, 511.566] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 31.43% complete, ETA 00:33:26
# Fork: 1 of 1
# Warmup Iteration   1: 1032.820 ns/op
# Warmup Iteration   2: 980.172 ns/op
# Warmup Iteration   3: 983.594 ns/op
# Warmup Iteration   4: 992.690 ns/op
# Warmup Iteration   5: 961.615 ns/op
Iteration   1: 965.056 ns/op
Iteration   2: 965.920 ns/op
Iteration   3: 961.914 ns/op
Iteration   4: 959.265 ns/op
Iteration   5: 958.259 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  962.083 ±(99.9%) 13.080 ns/op [Average]
  (min, avg, max) = (958.259, 962.083, 965.920), stdev = 3.397
  CI (99.9%): [949.003, 975.163] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 31.79% complete, ETA 00:33:15
# Fork: 1 of 1
# Warmup Iteration   1: 1746.394 ns/op
# Warmup Iteration   2: 1657.646 ns/op
# Warmup Iteration   3: 1628.907 ns/op
# Warmup Iteration   4: 1628.867 ns/op
# Warmup Iteration   5: 1624.855 ns/op
Iteration   1: 1626.823 ns/op
Iteration   2: 1664.578 ns/op
Iteration   3: 1632.330 ns/op
Iteration   4: 1634.276 ns/op
Iteration   5: 1624.349 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1636.471 ±(99.9%) 62.446 ns/op [Average]
  (min, avg, max) = (1624.349, 1636.471, 1664.578), stdev = 16.217
  CI (99.9%): [1574.025, 1698.917] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 32.14% complete, ETA 00:33:05
# Fork: 1 of 1
# Warmup Iteration   1: 13332.275 ns/op
# Warmup Iteration   2: 12442.966 ns/op
# Warmup Iteration   3: 12242.078 ns/op
# Warmup Iteration   4: 12235.774 ns/op
# Warmup Iteration   5: 12275.988 ns/op
Iteration   1: 12196.099 ns/op
Iteration   2: 12351.200 ns/op
Iteration   3: 12307.788 ns/op
Iteration   4: 12352.059 ns/op
Iteration   5: 12384.949 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  12318.419 ±(99.9%) 283.668 ns/op [Average]
  (min, avg, max) = (12196.099, 12318.419, 12384.949), stdev = 73.668
  CI (99.9%): [12034.751, 12602.087] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 1)

# Run progress: 32.50% complete, ETA 00:32:54
# Fork: 1 of 1
# Warmup Iteration   1: 349.754 ns/op
# Warmup Iteration   2: 341.746 ns/op
# Warmup Iteration   3: 330.804 ns/op
# Warmup Iteration   4: 330.691 ns/op
# Warmup Iteration   5: 331.470 ns/op
Iteration   1: 330.466 ns/op
Iteration   2: 330.110 ns/op
Iteration   3: 329.298 ns/op
Iteration   4: 329.945 ns/op
Iteration   5: 330.554 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  330.075 ±(99.9%) 1.929 ns/op [Average]
  (min, avg, max) = (329.298, 330.075, 330.554), stdev = 0.501
  CI (99.9%): [328.146, 332.004] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 10)

# Run progress: 32.86% complete, ETA 00:32:44
# Fork: 1 of 1
# Warmup Iteration   1: 379.064 ns/op
# Warmup Iteration   2: 363.722 ns/op
# Warmup Iteration   3: 356.677 ns/op
# Warmup Iteration   4: 355.430 ns/op
# Warmup Iteration   5: 356.261 ns/op
Iteration   1: 358.137 ns/op
Iteration   2: 358.162 ns/op
Iteration   3: 358.013 ns/op
Iteration   4: 356.973 ns/op
Iteration   5: 357.209 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  357.699 ±(99.9%) 2.172 ns/op [Average]
  (min, avg, max) = (356.973, 357.699, 358.162), stdev = 0.564
  CI (99.9%): [355.527, 359.870] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 50)

# Run progress: 33.21% complete, ETA 00:32:33
# Fork: 1 of 1
# Warmup Iteration   1: 461.863 ns/op
# Warmup Iteration   2: 454.044 ns/op
# Warmup Iteration   3: 430.782 ns/op
# Warmup Iteration   4: 430.384 ns/op
# Warmup Iteration   5: 432.126 ns/op
Iteration   1: 430.845 ns/op
Iteration   2: 431.521 ns/op
Iteration   3: 430.073 ns/op
Iteration   4: 429.956 ns/op
Iteration   5: 429.938 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  430.467 ±(99.9%) 2.689 ns/op [Average]
  (min, avg, max) = (429.938, 430.467, 431.521), stdev = 0.698
  CI (99.9%): [427.778, 433.156] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 100)

# Run progress: 33.57% complete, ETA 00:32:23
# Fork: 1 of 1
# Warmup Iteration   1: 547.262 ns/op
# Warmup Iteration   2: 523.123 ns/op
# Warmup Iteration   3: 520.338 ns/op
# Warmup Iteration   4: 509.313 ns/op
# Warmup Iteration   5: 508.657 ns/op
Iteration   1: 510.309 ns/op
Iteration   2: 505.854 ns/op
Iteration   3: 505.233 ns/op
Iteration   4: 506.552 ns/op
Iteration   5: 509.968 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  507.583 ±(99.9%) 9.173 ns/op [Average]
  (min, avg, max) = (505.233, 507.583, 510.309), stdev = 2.382
  CI (99.9%): [498.410, 516.756] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 500)

# Run progress: 33.93% complete, ETA 00:32:12
# Fork: 1 of 1
# Warmup Iteration   1: 1042.994 ns/op
# Warmup Iteration   2: 1000.332 ns/op
# Warmup Iteration   3: 974.329 ns/op
# Warmup Iteration   4: 971.351 ns/op
# Warmup Iteration   5: 972.307 ns/op
Iteration   1: 976.163 ns/op
Iteration   2: 975.427 ns/op
Iteration   3: 973.895 ns/op
Iteration   4: 969.895 ns/op
Iteration   5: 973.252 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  973.726 ±(99.9%) 9.386 ns/op [Average]
  (min, avg, max) = (969.895, 973.726, 976.163), stdev = 2.437
  CI (99.9%): [964.341, 983.112] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 1000)

# Run progress: 34.29% complete, ETA 00:32:02
# Fork: 1 of 1
# Warmup Iteration   1: 1812.562 ns/op
# Warmup Iteration   2: 1700.693 ns/op
# Warmup Iteration   3: 1649.622 ns/op
# Warmup Iteration   4: 1649.023 ns/op
# Warmup Iteration   5: 1647.301 ns/op
Iteration   1: 1642.518 ns/op
Iteration   2: 1643.721 ns/op
Iteration   3: 1642.809 ns/op
Iteration   4: 1637.755 ns/op
Iteration   5: 1657.075 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1644.775 ±(99.9%) 27.943 ns/op [Average]
  (min, avg, max) = (1637.755, 1644.775, 1657.075), stdev = 7.257
  CI (99.9%): [1616.832, 1672.718] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 10000)

# Run progress: 34.64% complete, ETA 00:31:51
# Fork: 1 of 1
# Warmup Iteration   1: 14494.780 ns/op
# Warmup Iteration   2: 12341.060 ns/op
# Warmup Iteration   3: 12180.838 ns/op
# Warmup Iteration   4: 12144.969 ns/op
# Warmup Iteration   5: 12146.207 ns/op
Iteration   1: 12168.264 ns/op
Iteration   2: 12122.079 ns/op
Iteration   3: 12417.080 ns/op
Iteration   4: 12173.525 ns/op
Iteration   5: 12180.977 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  12212.385 ±(99.9%) 449.465 ns/op [Average]
  (min, avg, max) = (12122.079, 12212.385, 12417.080), stdev = 116.725
  CI (99.9%): [11762.920, 12661.850] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 35.00% complete, ETA 00:31:41
# Fork: 1 of 1
# Warmup Iteration   1: 258.522 ns/op
# Warmup Iteration   2: 241.853 ns/op
# Warmup Iteration   3: 231.969 ns/op
# Warmup Iteration   4: 232.540 ns/op
# Warmup Iteration   5: 232.742 ns/op
Iteration   1: 238.874 ns/op
Iteration   2: 233.141 ns/op
Iteration   3: 233.136 ns/op
Iteration   4: 233.038 ns/op
Iteration   5: 232.769 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  234.192 ±(99.9%) 10.096 ns/op [Average]
  (min, avg, max) = (232.769, 234.192, 238.874), stdev = 2.622
  CI (99.9%): [224.096, 244.288] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 35.36% complete, ETA 00:31:30
# Fork: 1 of 1
# Warmup Iteration   1: 285.730 ns/op
# Warmup Iteration   2: 259.874 ns/op
# Warmup Iteration   3: 255.386 ns/op
# Warmup Iteration   4: 254.556 ns/op
# Warmup Iteration   5: 254.498 ns/op
Iteration   1: 255.058 ns/op
Iteration   2: 254.901 ns/op
Iteration   3: 255.086 ns/op
Iteration   4: 255.870 ns/op
Iteration   5: 254.010 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  254.985 ±(99.9%) 2.551 ns/op [Average]
  (min, avg, max) = (254.010, 254.985, 255.870), stdev = 0.663
  CI (99.9%): [252.434, 257.536] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 35.71% complete, ETA 00:31:20
# Fork: 1 of 1
# Warmup Iteration   1: 358.467 ns/op
# Warmup Iteration   2: 348.867 ns/op
# Warmup Iteration   3: 327.698 ns/op
# Warmup Iteration   4: 328.968 ns/op
# Warmup Iteration   5: 328.654 ns/op
Iteration   1: 328.226 ns/op
Iteration   2: 327.513 ns/op
Iteration   3: 327.276 ns/op
Iteration   4: 327.642 ns/op
Iteration   5: 328.586 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  327.848 ±(99.9%) 2.083 ns/op [Average]
  (min, avg, max) = (327.276, 327.848, 328.586), stdev = 0.541
  CI (99.9%): [325.766, 329.931] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 36.07% complete, ETA 00:31:10
# Fork: 1 of 1
# Warmup Iteration   1: 419.672 ns/op
# Warmup Iteration   2: 391.964 ns/op
# Warmup Iteration   3: 382.541 ns/op
# Warmup Iteration   4: 380.080 ns/op
# Warmup Iteration   5: 378.860 ns/op
Iteration   1: 378.591 ns/op
Iteration   2: 378.485 ns/op
Iteration   3: 379.561 ns/op
Iteration   4: 379.099 ns/op
Iteration   5: 377.460 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  378.639 ±(99.9%) 3.030 ns/op [Average]
  (min, avg, max) = (377.460, 378.639, 379.561), stdev = 0.787
  CI (99.9%): [375.609, 381.670] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 36.43% complete, ETA 00:30:59
# Fork: 1 of 1
# Warmup Iteration   1: 916.386 ns/op
# Warmup Iteration   2: 866.806 ns/op
# Warmup Iteration   3: 833.599 ns/op
# Warmup Iteration   4: 832.110 ns/op
# Warmup Iteration   5: 834.031 ns/op
Iteration   1: 832.574 ns/op
Iteration   2: 832.856 ns/op
Iteration   3: 834.976 ns/op
Iteration   4: 834.886 ns/op
Iteration   5: 833.137 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  833.686 ±(99.9%) 4.446 ns/op [Average]
  (min, avg, max) = (832.574, 833.686, 834.976), stdev = 1.154
  CI (99.9%): [829.240, 838.131] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 36.79% complete, ETA 00:30:49
# Fork: 1 of 1
# Warmup Iteration   1: 1665.596 ns/op
# Warmup Iteration   2: 1582.429 ns/op
# Warmup Iteration   3: 1560.523 ns/op
# Warmup Iteration   4: 1521.727 ns/op
# Warmup Iteration   5: 1525.979 ns/op
Iteration   1: 1574.432 ns/op
Iteration   2: 1563.937 ns/op
Iteration   3: 1526.810 ns/op
Iteration   4: 1531.222 ns/op
Iteration   5: 1532.643 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1545.809 ±(99.9%) 83.812 ns/op [Average]
  (min, avg, max) = (1526.810, 1545.809, 1574.432), stdev = 21.766
  CI (99.9%): [1461.997, 1629.620] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 37.14% complete, ETA 00:30:39
# Fork: 1 of 1
# Warmup Iteration   1: 13543.933 ns/op
# Warmup Iteration   2: 12450.570 ns/op
# Warmup Iteration   3: 12278.413 ns/op
# Warmup Iteration   4: 12375.548 ns/op
# Warmup Iteration   5: 12392.203 ns/op
Iteration   1: 12324.628 ns/op
Iteration   2: 12352.124 ns/op
Iteration   3: 12334.079 ns/op
Iteration   4: 12312.717 ns/op
Iteration   5: 12288.773 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  12322.464 ±(99.9%) 91.313 ns/op [Average]
  (min, avg, max) = (12288.773, 12322.464, 12352.124), stdev = 23.714
  CI (99.9%): [12231.151, 12413.777] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1)

# Run progress: 37.50% complete, ETA 00:30:28
# Fork: 1 of 1
# Warmup Iteration   1: 255.224 ns/op
# Warmup Iteration   2: 243.360 ns/op
# Warmup Iteration   3: 231.861 ns/op
# Warmup Iteration   4: 231.659 ns/op
# Warmup Iteration   5: 231.674 ns/op
Iteration   1: 232.377 ns/op
Iteration   2: 232.881 ns/op
Iteration   3: 232.499 ns/op
Iteration   4: 231.973 ns/op
Iteration   5: 233.839 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  232.714 ±(99.9%) 2.724 ns/op [Average]
  (min, avg, max) = (231.973, 232.714, 233.839), stdev = 0.708
  CI (99.9%): [229.989, 235.438] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10)

# Run progress: 37.86% complete, ETA 00:30:18
# Fork: 1 of 1
# Warmup Iteration   1: 291.264 ns/op
# Warmup Iteration   2: 268.865 ns/op
# Warmup Iteration   3: 269.394 ns/op
# Warmup Iteration   4: 258.048 ns/op
# Warmup Iteration   5: 258.217 ns/op
Iteration   1: 263.998 ns/op
Iteration   2: 258.181 ns/op
Iteration   3: 265.745 ns/op
Iteration   4: 258.407 ns/op
Iteration   5: 259.332 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  261.132 ±(99.9%) 13.458 ns/op [Average]
  (min, avg, max) = (258.181, 261.132, 265.745), stdev = 3.495
  CI (99.9%): [247.674, 274.591] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 50)

# Run progress: 38.21% complete, ETA 00:30:07
# Fork: 1 of 1
# Warmup Iteration   1: 363.090 ns/op
# Warmup Iteration   2: 333.394 ns/op
# Warmup Iteration   3: 327.803 ns/op
# Warmup Iteration   4: 327.894 ns/op
# Warmup Iteration   5: 328.800 ns/op
Iteration   1: 327.826 ns/op
Iteration   2: 327.135 ns/op
Iteration   3: 336.883 ns/op
Iteration   4: 327.372 ns/op
Iteration   5: 328.299 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  329.503 ±(99.9%) 15.979 ns/op [Average]
  (min, avg, max) = (327.135, 329.503, 336.883), stdev = 4.150
  CI (99.9%): [313.524, 345.482] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 100)

# Run progress: 38.57% complete, ETA 00:29:57
# Fork: 1 of 1
# Warmup Iteration   1: 413.390 ns/op
# Warmup Iteration   2: 382.136 ns/op
# Warmup Iteration   3: 382.056 ns/op
# Warmup Iteration   4: 380.876 ns/op
# Warmup Iteration   5: 380.643 ns/op
Iteration   1: 380.751 ns/op
Iteration   2: 379.532 ns/op
Iteration   3: 380.599 ns/op
Iteration   4: 381.231 ns/op
Iteration   5: 380.143 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  380.451 ±(99.9%) 2.481 ns/op [Average]
  (min, avg, max) = (379.532, 380.451, 381.231), stdev = 0.644
  CI (99.9%): [377.970, 382.932] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 500)

# Run progress: 38.93% complete, ETA 00:29:46
# Fork: 1 of 1
# Warmup Iteration   1: 908.537 ns/op
# Warmup Iteration   2: 849.638 ns/op
# Warmup Iteration   3: 842.358 ns/op
# Warmup Iteration   4: 870.432 ns/op
# Warmup Iteration   5: 839.706 ns/op
Iteration   1: 837.459 ns/op
Iteration   2: 836.646 ns/op
Iteration   3: 836.136 ns/op
Iteration   4: 835.811 ns/op
Iteration   5: 839.605 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  837.131 ±(99.9%) 5.838 ns/op [Average]
  (min, avg, max) = (835.811, 837.131, 839.605), stdev = 1.516
  CI (99.9%): [831.294, 842.969] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1000)

# Run progress: 39.29% complete, ETA 00:29:36
# Fork: 1 of 1
# Warmup Iteration   1: 1654.543 ns/op
# Warmup Iteration   2: 1541.503 ns/op
# Warmup Iteration   3: 1517.542 ns/op
# Warmup Iteration   4: 1518.820 ns/op
# Warmup Iteration   5: 1521.053 ns/op
Iteration   1: 1521.104 ns/op
Iteration   2: 1519.456 ns/op
Iteration   3: 1522.251 ns/op
Iteration   4: 1520.440 ns/op
Iteration   5: 1539.683 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1524.587 ±(99.9%) 32.731 ns/op [Average]
  (min, avg, max) = (1519.456, 1524.587, 1539.683), stdev = 8.500
  CI (99.9%): [1491.856, 1557.318] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10000)

# Run progress: 39.64% complete, ETA 00:29:25
# Fork: 1 of 1
# Warmup Iteration   1: 13624.313 ns/op
# Warmup Iteration   2: 12439.732 ns/op
# Warmup Iteration   3: 12315.112 ns/op
# Warmup Iteration   4: 12349.903 ns/op
# Warmup Iteration   5: 12346.026 ns/op
Iteration   1: 12312.757 ns/op
Iteration   2: 12352.379 ns/op
Iteration   3: 12343.883 ns/op
Iteration   4: 12262.793 ns/op
Iteration   5: 12308.311 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  12316.025 ±(99.9%) 136.161 ns/op [Average]
  (min, avg, max) = (12262.793, 12316.025, 12352.379), stdev = 35.361
  CI (99.9%): [12179.863, 12452.186] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 40.00% complete, ETA 00:29:14
# Fork: 1 of 1
# Warmup Iteration   1: 161.991 ns/op
# Warmup Iteration   2: 148.562 ns/op
# Warmup Iteration   3: 143.125 ns/op
# Warmup Iteration   4: 143.489 ns/op
# Warmup Iteration   5: 144.953 ns/op
Iteration   1: 144.196 ns/op
Iteration   2: 143.917 ns/op
Iteration   3: 143.603 ns/op
Iteration   4: 143.488 ns/op
Iteration   5: 146.447 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  144.330 ±(99.9%) 4.680 ns/op [Average]
  (min, avg, max) = (143.488, 144.330, 146.447), stdev = 1.215
  CI (99.9%): [139.651, 149.010] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 40.36% complete, ETA 00:29:04
# Fork: 1 of 1
# Warmup Iteration   1: 191.176 ns/op
# Warmup Iteration   2: 179.621 ns/op
# Warmup Iteration   3: 175.756 ns/op
# Warmup Iteration   4: 173.660 ns/op
# Warmup Iteration   5: 172.730 ns/op
Iteration   1: 173.639 ns/op
Iteration   2: 180.695 ns/op
Iteration   3: 179.850 ns/op
Iteration   4: 180.160 ns/op
Iteration   5: 176.874 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  178.244 ±(99.9%) 11.446 ns/op [Average]
  (min, avg, max) = (173.639, 178.244, 180.695), stdev = 2.973
  CI (99.9%): [166.797, 189.690] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 40.71% complete, ETA 00:28:54
# Fork: 1 of 1
# Warmup Iteration   1: 269.586 ns/op
# Warmup Iteration   2: 246.231 ns/op
# Warmup Iteration   3: 241.215 ns/op
# Warmup Iteration   4: 240.243 ns/op
# Warmup Iteration   5: 241.568 ns/op
Iteration   1: 240.205 ns/op
Iteration   2: 247.388 ns/op
Iteration   3: 241.511 ns/op
Iteration   4: 240.460 ns/op
Iteration   5: 238.821 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  241.677 ±(99.9%) 12.836 ns/op [Average]
  (min, avg, max) = (238.821, 241.677, 247.388), stdev = 3.333
  CI (99.9%): [228.841, 254.513] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 41.07% complete, ETA 00:28:43
# Fork: 1 of 1
# Warmup Iteration   1: 315.623 ns/op
# Warmup Iteration   2: 300.871 ns/op
# Warmup Iteration   3: 309.117 ns/op
# Warmup Iteration   4: 292.006 ns/op
# Warmup Iteration   5: 292.032 ns/op
Iteration   1: 292.010 ns/op
Iteration   2: 293.843 ns/op
Iteration   3: 292.715 ns/op
Iteration   4: 292.485 ns/op
Iteration   5: 290.602 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  292.331 ±(99.9%) 4.535 ns/op [Average]
  (min, avg, max) = (290.602, 292.331, 293.843), stdev = 1.178
  CI (99.9%): [287.797, 296.866] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 41.43% complete, ETA 00:28:33
# Fork: 1 of 1
# Warmup Iteration   1: 808.541 ns/op
# Warmup Iteration   2: 768.386 ns/op
# Warmup Iteration   3: 746.920 ns/op
# Warmup Iteration   4: 744.265 ns/op
# Warmup Iteration   5: 745.972 ns/op
Iteration   1: 743.475 ns/op
Iteration   2: 743.786 ns/op
Iteration   3: 745.336 ns/op
Iteration   4: 747.148 ns/op
Iteration   5: 741.806 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  744.310 ±(99.9%) 7.786 ns/op [Average]
  (min, avg, max) = (741.806, 744.310, 747.148), stdev = 2.022
  CI (99.9%): [736.525, 752.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 41.79% complete, ETA 00:28:22
# Fork: 1 of 1
# Warmup Iteration   1: 1555.202 ns/op
# Warmup Iteration   2: 1531.685 ns/op
# Warmup Iteration   3: 1457.169 ns/op
# Warmup Iteration   4: 1454.254 ns/op
# Warmup Iteration   5: 1490.249 ns/op
Iteration   1: 1452.814 ns/op
Iteration   2: 1452.741 ns/op
Iteration   3: 1449.712 ns/op
Iteration   4: 1450.732 ns/op
Iteration   5: 1457.287 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1452.657 ±(99.9%) 11.201 ns/op [Average]
  (min, avg, max) = (1449.712, 1452.657, 1457.287), stdev = 2.909
  CI (99.9%): [1441.457, 1463.858] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 42.14% complete, ETA 00:28:12
# Fork: 1 of 1
# Warmup Iteration   1: 13063.338 ns/op
# Warmup Iteration   2: 12317.836 ns/op
# Warmup Iteration   3: 12079.439 ns/op
# Warmup Iteration   4: 12042.445 ns/op
# Warmup Iteration   5: 12109.622 ns/op
Iteration   1: 12126.206 ns/op
Iteration   2: 12072.633 ns/op
Iteration   3: 12057.326 ns/op
Iteration   4: 12072.029 ns/op
Iteration   5: 12030.586 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  12071.756 ±(99.9%) 134.344 ns/op [Average]
  (min, avg, max) = (12030.586, 12071.756, 12126.206), stdev = 34.889
  CI (99.9%): [11937.412, 12206.100] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 1)

# Run progress: 42.50% complete, ETA 00:28:02
# Fork: 1 of 1
# Warmup Iteration   1: 165.997 ns/op
# Warmup Iteration   2: 154.125 ns/op
# Warmup Iteration   3: 148.754 ns/op
# Warmup Iteration   4: 148.612 ns/op
# Warmup Iteration   5: 150.054 ns/op
Iteration   1: 148.435 ns/op
Iteration   2: 148.384 ns/op
Iteration   3: 148.123 ns/op
Iteration   4: 153.903 ns/op
Iteration   5: 151.215 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  150.012 ±(99.9%) 9.683 ns/op [Average]
  (min, avg, max) = (148.123, 150.012, 153.903), stdev = 2.515
  CI (99.9%): [140.329, 159.695] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 10)

# Run progress: 42.86% complete, ETA 00:27:51
# Fork: 1 of 1
# Warmup Iteration   1: 193.027 ns/op
# Warmup Iteration   2: 178.287 ns/op
# Warmup Iteration   3: 174.276 ns/op
# Warmup Iteration   4: 174.640 ns/op
# Warmup Iteration   5: 175.163 ns/op
Iteration   1: 175.718 ns/op
Iteration   2: 174.304 ns/op
Iteration   3: 174.480 ns/op
Iteration   4: 183.709 ns/op
Iteration   5: 174.788 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  176.600 ±(99.9%) 15.447 ns/op [Average]
  (min, avg, max) = (174.304, 176.600, 183.709), stdev = 4.011
  CI (99.9%): [161.153, 192.047] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 50)

# Run progress: 43.21% complete, ETA 00:27:41
# Fork: 1 of 1
# Warmup Iteration   1: 267.166 ns/op
# Warmup Iteration   2: 265.283 ns/op
# Warmup Iteration   3: 287.309 ns/op
# Warmup Iteration   4: 278.136 ns/op
# Warmup Iteration   5: 277.466 ns/op
Iteration   1: 277.997 ns/op
Iteration   2: 276.434 ns/op
Iteration   3: 277.705 ns/op
Iteration   4: 277.263 ns/op
Iteration   5: 277.397 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  277.359 ±(99.9%) 2.272 ns/op [Average]
  (min, avg, max) = (276.434, 277.359, 277.997), stdev = 0.590
  CI (99.9%): [275.087, 279.632] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 100)

# Run progress: 43.57% complete, ETA 00:27:30
# Fork: 1 of 1
# Warmup Iteration   1: 330.052 ns/op
# Warmup Iteration   2: 314.141 ns/op
# Warmup Iteration   3: 318.065 ns/op
# Warmup Iteration   4: 305.039 ns/op
# Warmup Iteration   5: 304.352 ns/op
Iteration   1: 305.408 ns/op
Iteration   2: 306.168 ns/op
Iteration   3: 304.835 ns/op
Iteration   4: 305.440 ns/op
Iteration   5: 323.464 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  309.063 ±(99.9%) 31.053 ns/op [Average]
  (min, avg, max) = (304.835, 309.063, 323.464), stdev = 8.064
  CI (99.9%): [278.010, 340.116] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 500)

# Run progress: 43.93% complete, ETA 00:27:20
# Fork: 1 of 1
# Warmup Iteration   1: 805.248 ns/op
# Warmup Iteration   2: 757.928 ns/op
# Warmup Iteration   3: 738.883 ns/op
# Warmup Iteration   4: 796.847 ns/op
# Warmup Iteration   5: 737.765 ns/op
Iteration   1: 735.711 ns/op
Iteration   2: 736.857 ns/op
Iteration   3: 737.403 ns/op
Iteration   4: 736.894 ns/op
Iteration   5: 748.944 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  739.162 ±(99.9%) 21.191 ns/op [Average]
  (min, avg, max) = (735.711, 739.162, 748.944), stdev = 5.503
  CI (99.9%): [717.971, 760.353] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 1000)

# Run progress: 44.29% complete, ETA 00:27:09
# Fork: 1 of 1
# Warmup Iteration   1: 1513.833 ns/op
# Warmup Iteration   2: 1503.626 ns/op
# Warmup Iteration   3: 1431.787 ns/op
# Warmup Iteration   4: 1429.925 ns/op
# Warmup Iteration   5: 1435.528 ns/op
Iteration   1: 1438.749 ns/op
Iteration   2: 1435.811 ns/op
Iteration   3: 1439.175 ns/op
Iteration   4: 1424.687 ns/op
Iteration   5: 1420.495 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1431.783 ±(99.9%) 33.189 ns/op [Average]
  (min, avg, max) = (1420.495, 1431.783, 1439.175), stdev = 8.619
  CI (99.9%): [1398.594, 1464.973] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 10000)

# Run progress: 44.64% complete, ETA 00:26:59
# Fork: 1 of 1
# Warmup Iteration   1: 13306.501 ns/op
# Warmup Iteration   2: 12421.204 ns/op
# Warmup Iteration   3: 12457.895 ns/op
# Warmup Iteration   4: 12065.890 ns/op
# Warmup Iteration   5: 12047.856 ns/op
Iteration   1: 12056.379 ns/op
Iteration   2: 12043.430 ns/op
Iteration   3: 12088.222 ns/op
Iteration   4: 12031.582 ns/op
Iteration   5: 12008.014 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  12045.525 ±(99.9%) 114.660 ns/op [Average]
  (min, avg, max) = (12008.014, 12045.525, 12088.222), stdev = 29.777
  CI (99.9%): [11930.865, 12160.185] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 1)

# Run progress: 45.00% complete, ETA 00:26:48
# Fork: 1 of 1
# Warmup Iteration   1: 71.802 ns/op
# Warmup Iteration   2: 66.313 ns/op
# Warmup Iteration   3: 66.020 ns/op
# Warmup Iteration   4: 63.948 ns/op
# Warmup Iteration   5: 66.040 ns/op
Iteration   1: 63.677 ns/op
Iteration   2: 63.774 ns/op
Iteration   3: 63.793 ns/op
Iteration   4: 63.734 ns/op
Iteration   5: 65.221 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  64.040 ±(99.9%) 2.548 ns/op [Average]
  (min, avg, max) = (63.677, 64.040, 65.221), stdev = 0.662
  CI (99.9%): [61.492, 66.587] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 10)

# Run progress: 45.36% complete, ETA 00:26:38
# Fork: 1 of 1
# Warmup Iteration   1: 97.510 ns/op
# Warmup Iteration   2: 91.102 ns/op
# Warmup Iteration   3: 88.961 ns/op
# Warmup Iteration   4: 87.357 ns/op
# Warmup Iteration   5: 87.126 ns/op
Iteration   1: 87.271 ns/op
Iteration   2: 87.147 ns/op
Iteration   3: 87.274 ns/op
Iteration   4: 87.212 ns/op
Iteration   5: 86.244 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  87.030 ±(99.9%) 1.703 ns/op [Average]
  (min, avg, max) = (86.244, 87.030, 87.274), stdev = 0.442
  CI (99.9%): [85.327, 88.732] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 50)

# Run progress: 45.71% complete, ETA 00:26:27
# Fork: 1 of 1
# Warmup Iteration   1: 145.982 ns/op
# Warmup Iteration   2: 138.121 ns/op
# Warmup Iteration   3: 134.898 ns/op
# Warmup Iteration   4: 137.659 ns/op
# Warmup Iteration   5: 132.322 ns/op
Iteration   1: 132.440 ns/op
Iteration   2: 132.724 ns/op
Iteration   3: 132.948 ns/op
Iteration   4: 131.779 ns/op
Iteration   5: 133.015 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  132.581 ±(99.9%) 1.932 ns/op [Average]
  (min, avg, max) = (131.779, 132.581, 133.015), stdev = 0.502
  CI (99.9%): [130.649, 134.513] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 100)

# Run progress: 46.07% complete, ETA 00:26:17
# Fork: 1 of 1
# Warmup Iteration   1: 201.077 ns/op
# Warmup Iteration   2: 190.167 ns/op
# Warmup Iteration   3: 184.604 ns/op
# Warmup Iteration   4: 189.871 ns/op
# Warmup Iteration   5: 179.896 ns/op
Iteration   1: 179.854 ns/op
Iteration   2: 195.063 ns/op
Iteration   3: 179.793 ns/op
Iteration   4: 179.844 ns/op
Iteration   5: 179.761 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  182.863 ±(99.9%) 26.261 ns/op [Average]
  (min, avg, max) = (179.761, 182.863, 195.063), stdev = 6.820
  CI (99.9%): [156.602, 209.124] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 500)

# Run progress: 46.43% complete, ETA 00:26:07
# Fork: 1 of 1
# Warmup Iteration   1: 700.311 ns/op
# Warmup Iteration   2: 651.781 ns/op
# Warmup Iteration   3: 629.554 ns/op
# Warmup Iteration   4: 629.523 ns/op
# Warmup Iteration   5: 626.576 ns/op
Iteration   1: 626.719 ns/op
Iteration   2: 627.010 ns/op
Iteration   3: 625.032 ns/op
Iteration   4: 625.544 ns/op
Iteration   5: 623.714 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  625.604 ±(99.9%) 5.139 ns/op [Average]
  (min, avg, max) = (623.714, 625.604, 627.010), stdev = 1.334
  CI (99.9%): [620.465, 630.742] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 46.79% complete, ETA 00:25:56
# Fork: 1 of 1
# Warmup Iteration   1: 1357.010 ns/op
# Warmup Iteration   2: 1348.209 ns/op
# Warmup Iteration   3: 1216.420 ns/op
# Warmup Iteration   4: 1211.940 ns/op
# Warmup Iteration   5: 1215.205 ns/op
Iteration   1: 1208.616 ns/op
Iteration   2: 1209.300 ns/op
Iteration   3: 1220.274 ns/op
Iteration   4: 1244.539 ns/op
Iteration   5: 1226.923 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  1221.930 ±(99.9%) 56.972 ns/op [Average]
  (min, avg, max) = (1208.616, 1221.930, 1244.539), stdev = 14.795
  CI (99.9%): [1164.958, 1278.902] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 47.14% complete, ETA 00:25:46
# Fork: 1 of 1
# Warmup Iteration   1: 12791.343 ns/op
# Warmup Iteration   2: 12159.783 ns/op
# Warmup Iteration   3: 11791.438 ns/op
# Warmup Iteration   4: 11855.057 ns/op
# Warmup Iteration   5: 11839.495 ns/op
Iteration   1: 11829.719 ns/op
Iteration   2: 11842.794 ns/op
Iteration   3: 11833.603 ns/op
Iteration   4: 11869.022 ns/op
Iteration   5: 11834.850 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  11841.998 ±(99.9%) 60.984 ns/op [Average]
  (min, avg, max) = (11829.719, 11841.998, 11869.022), stdev = 15.837
  CI (99.9%): [11781.014, 11902.981] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 1)

# Run progress: 47.50% complete, ETA 00:25:35
# Fork: 1 of 1
# Warmup Iteration   1: 72.226 ns/op
# Warmup Iteration   2: 66.096 ns/op
# Warmup Iteration   3: 65.544 ns/op
# Warmup Iteration   4: 63.162 ns/op
# Warmup Iteration   5: 62.873 ns/op
Iteration   1: 63.168 ns/op
Iteration   2: 62.592 ns/op
Iteration   3: 64.456 ns/op
Iteration   4: 62.696 ns/op
Iteration   5: 62.749 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  63.132 ±(99.9%) 2.971 ns/op [Average]
  (min, avg, max) = (62.592, 63.132, 64.456), stdev = 0.772
  CI (99.9%): [60.161, 66.104] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 10)

# Run progress: 47.86% complete, ETA 00:25:25
# Fork: 1 of 1
# Warmup Iteration   1: 97.262 ns/op
# Warmup Iteration   2: 89.638 ns/op
# Warmup Iteration   3: 87.632 ns/op
# Warmup Iteration   4: 87.361 ns/op
# Warmup Iteration   5: 86.716 ns/op
Iteration   1: 86.929 ns/op
Iteration   2: 86.868 ns/op
Iteration   3: 87.138 ns/op
Iteration   4: 87.365 ns/op
Iteration   5: 91.138 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  87.888 ±(99.9%) 7.038 ns/op [Average]
  (min, avg, max) = (86.868, 87.888, 91.138), stdev = 1.828
  CI (99.9%): [80.850, 94.926] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 50)

# Run progress: 48.21% complete, ETA 00:25:14
# Fork: 1 of 1
# Warmup Iteration   1: 151.072 ns/op
# Warmup Iteration   2: 137.411 ns/op
# Warmup Iteration   3: 133.421 ns/op
# Warmup Iteration   4: 132.880 ns/op
# Warmup Iteration   5: 132.678 ns/op
Iteration   1: 132.766 ns/op
Iteration   2: 132.414 ns/op
Iteration   3: 133.052 ns/op
Iteration   4: 132.750 ns/op
Iteration   5: 133.876 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  132.972 ±(99.9%) 2.132 ns/op [Average]
  (min, avg, max) = (132.414, 132.972, 133.876), stdev = 0.554
  CI (99.9%): [130.840, 135.103] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 100)

# Run progress: 48.57% complete, ETA 00:25:04
# Fork: 1 of 1
# Warmup Iteration   1: 203.022 ns/op
# Warmup Iteration   2: 185.618 ns/op
# Warmup Iteration   3: 183.248 ns/op
# Warmup Iteration   4: 182.872 ns/op
# Warmup Iteration   5: 202.805 ns/op
Iteration   1: 182.405 ns/op
Iteration   2: 182.968 ns/op
Iteration   3: 182.413 ns/op
Iteration   4: 182.735 ns/op
Iteration   5: 178.817 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  181.868 ±(99.9%) 6.629 ns/op [Average]
  (min, avg, max) = (178.817, 181.868, 182.968), stdev = 1.722
  CI (99.9%): [175.238, 188.497] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 500)

# Run progress: 48.93% complete, ETA 00:24:53
# Fork: 1 of 1
# Warmup Iteration   1: 688.368 ns/op
# Warmup Iteration   2: 643.850 ns/op
# Warmup Iteration   3: 627.884 ns/op
# Warmup Iteration   4: 624.381 ns/op
# Warmup Iteration   5: 649.542 ns/op
Iteration   1: 622.901 ns/op
Iteration   2: 623.967 ns/op
Iteration   3: 624.500 ns/op
Iteration   4: 624.106 ns/op
Iteration   5: 628.181 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  624.731 ±(99.9%) 7.767 ns/op [Average]
  (min, avg, max) = (622.901, 624.731, 628.181), stdev = 2.017
  CI (99.9%): [616.964, 632.498] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 1000)

# Run progress: 49.29% complete, ETA 00:24:43
# Fork: 1 of 1
# Warmup Iteration   1: 1318.897 ns/op
# Warmup Iteration   2: 1244.857 ns/op
# Warmup Iteration   3: 1206.129 ns/op
# Warmup Iteration   4: 1207.878 ns/op
# Warmup Iteration   5: 1206.667 ns/op
Iteration   1: 1207.477 ns/op
Iteration   2: 1206.000 ns/op
Iteration   3: 1204.990 ns/op
Iteration   4: 1207.842 ns/op
Iteration   5: 1207.757 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  1206.813 ±(99.9%) 4.861 ns/op [Average]
  (min, avg, max) = (1204.990, 1206.813, 1207.842), stdev = 1.263
  CI (99.9%): [1201.952, 1211.675] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.64% complete, ETA 00:24:32
# Fork: 1 of 1
# Warmup Iteration   1: 13339.831 ns/op
# Warmup Iteration   2: 12636.956 ns/op
# Warmup Iteration   3: 11845.437 ns/op
# Warmup Iteration   4: 11774.548 ns/op
# Warmup Iteration   5: 11865.341 ns/op
Iteration   1: 11778.706 ns/op
Iteration   2: 11804.082 ns/op
Iteration   3: 11823.146 ns/op
Iteration   4: 11792.465 ns/op
Iteration   5: 11809.271 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  11801.534 ±(99.9%) 64.915 ns/op [Average]
  (min, avg, max) = (11778.706, 11801.534, 11823.146), stdev = 16.858
  CI (99.9%): [11736.619, 11866.449] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:24:22
# Fork: 1 of 1
# Warmup Iteration   1: 129.031 ns/op
# Warmup Iteration   2: 118.541 ns/op
# Warmup Iteration   3: 116.174 ns/op
# Warmup Iteration   4: 115.828 ns/op
# Warmup Iteration   5: 115.800 ns/op
Iteration   1: 114.770 ns/op
Iteration   2: 116.547 ns/op
Iteration   3: 114.192 ns/op
Iteration   4: 113.987 ns/op
Iteration   5: 115.154 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  114.930 ±(99.9%) 3.911 ns/op [Average]
  (min, avg, max) = (113.987, 114.930, 116.547), stdev = 1.016
  CI (99.9%): [111.019, 118.841] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.36% complete, ETA 00:24:11
# Fork: 1 of 1
# Warmup Iteration   1: 309.840 ns/op
# Warmup Iteration   2: 284.039 ns/op
# Warmup Iteration   3: 276.003 ns/op
# Warmup Iteration   4: 276.338 ns/op
# Warmup Iteration   5: 276.412 ns/op
Iteration   1: 277.699 ns/op
Iteration   2: 276.420 ns/op
Iteration   3: 276.864 ns/op
Iteration   4: 277.537 ns/op
Iteration   5: 288.725 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  279.449 ±(99.9%) 20.065 ns/op [Average]
  (min, avg, max) = (276.420, 279.449, 288.725), stdev = 5.211
  CI (99.9%): [259.384, 299.514] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = fixed, length = 50)

# Run progress: 50.71% complete, ETA 00:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 1637.484 ns/op
# Warmup Iteration   2: 1656.935 ns/op
# Warmup Iteration   3: 1572.963 ns/op
# Warmup Iteration   4: 1544.487 ns/op
# Warmup Iteration   5: 1539.622 ns/op
Iteration   1: 1545.592 ns/op
Iteration   2: 1605.264 ns/op
Iteration   3: 1543.614 ns/op
Iteration   4: 1564.748 ns/op
Iteration   5: 1571.814 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  1566.206 ±(99.9%) 96.158 ns/op [Average]
  (min, avg, max) = (1543.614, 1566.206, 1605.264), stdev = 24.972
  CI (99.9%): [1470.048, 1662.365] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = fixed, length = 100)

# Run progress: 51.07% complete, ETA 00:23:51
# Fork: 1 of 1
# Warmup Iteration   1: 4276.807 ns/op
# Warmup Iteration   2: 4169.460 ns/op
# Warmup Iteration   3: 4174.516 ns/op
# Warmup Iteration   4: 4138.123 ns/op
# Warmup Iteration   5: 4077.803 ns/op
Iteration   1: 4073.302 ns/op
Iteration   2: 4115.521 ns/op
Iteration   3: 4087.302 ns/op
Iteration   4: 4093.417 ns/op
Iteration   5: 4169.693 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  4107.847 ±(99.9%) 145.453 ns/op [Average]
  (min, avg, max) = (4073.302, 4107.847, 4169.693), stdev = 37.774
  CI (99.9%): [3962.393, 4253.300] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = fixed, length = 500)

# Run progress: 51.43% complete, ETA 00:23:40
# Fork: 1 of 1
# Warmup Iteration   1: 20477.887 ns/op
# Warmup Iteration   2: 19953.650 ns/op
# Warmup Iteration   3: 19955.905 ns/op
# Warmup Iteration   4: 20017.433 ns/op
# Warmup Iteration   5: 19498.563 ns/op
Iteration   1: 19560.330 ns/op
Iteration   2: 19613.870 ns/op
Iteration   3: 19542.741 ns/op
Iteration   4: 19559.972 ns/op
Iteration   5: 19502.374 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  19555.857 ±(99.9%) 154.444 ns/op [Average]
  (min, avg, max) = (19502.374, 19555.857, 19613.870), stdev = 40.109
  CI (99.9%): [19401.413, 19710.302] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 51.79% complete, ETA 00:23:30
# Fork: 1 of 1
# Warmup Iteration   1: 40744.927 ns/op
# Warmup Iteration   2: 40110.658 ns/op
# Warmup Iteration   3: 40404.834 ns/op
# Warmup Iteration   4: 40256.666 ns/op
# Warmup Iteration   5: 39511.377 ns/op
Iteration   1: 39546.912 ns/op
Iteration   2: 39414.733 ns/op
Iteration   3: 39301.303 ns/op
Iteration   4: 39532.610 ns/op
Iteration   5: 39551.030 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  39469.318 ±(99.9%) 421.431 ns/op [Average]
  (min, avg, max) = (39301.303, 39469.318, 39551.030), stdev = 109.444
  CI (99.9%): [39047.887, 39890.749] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 52.14% complete, ETA 00:23:19
# Fork: 1 of 1
# Warmup Iteration   1: 413554.371 ns/op
# Warmup Iteration   2: 400616.681 ns/op
# Warmup Iteration   3: 404815.660 ns/op
# Warmup Iteration   4: 402898.022 ns/op
# Warmup Iteration   5: 398975.915 ns/op
Iteration   1: 397148.117 ns/op
Iteration   2: 397714.873 ns/op
Iteration   3: 396064.530 ns/op
Iteration   4: 396991.676 ns/op
Iteration   5: 397693.868 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  397122.613 ±(99.9%) 2593.429 ns/op [Average]
  (min, avg, max) = (396064.530, 397122.613, 397714.873), stdev = 673.505
  CI (99.9%): [394529.184, 399716.042] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = random, length = 1)

# Run progress: 52.50% complete, ETA 00:23:09
# Fork: 1 of 1
# Warmup Iteration   1: 127.008 ns/op
# Warmup Iteration   2: 118.760 ns/op
# Warmup Iteration   3: 115.164 ns/op
# Warmup Iteration   4: 114.617 ns/op
# Warmup Iteration   5: 114.623 ns/op
Iteration   1: 114.500 ns/op
Iteration   2: 114.622 ns/op
Iteration   3: 114.761 ns/op
Iteration   4: 120.928 ns/op
Iteration   5: 115.013 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  115.965 ±(99.9%) 10.709 ns/op [Average]
  (min, avg, max) = (114.500, 115.965, 120.928), stdev = 2.781
  CI (99.9%): [105.256, 126.674] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = random, length = 10)

# Run progress: 52.86% complete, ETA 00:22:59
# Fork: 1 of 1
# Warmup Iteration   1: 312.779 ns/op
# Warmup Iteration   2: 285.814 ns/op
# Warmup Iteration   3: 278.799 ns/op
# Warmup Iteration   4: 278.505 ns/op
# Warmup Iteration   5: 278.134 ns/op
Iteration   1: 279.762 ns/op
Iteration   2: 281.309 ns/op
Iteration   3: 280.963 ns/op
Iteration   4: 284.599 ns/op
Iteration   5: 281.869 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  281.700 ±(99.9%) 6.911 ns/op [Average]
  (min, avg, max) = (279.762, 281.700, 284.599), stdev = 1.795
  CI (99.9%): [274.789, 288.611] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = random, length = 50)

# Run progress: 53.21% complete, ETA 00:22:48
# Fork: 1 of 1
# Warmup Iteration   1: 1645.652 ns/op
# Warmup Iteration   2: 1623.430 ns/op
# Warmup Iteration   3: 1570.736 ns/op
# Warmup Iteration   4: 1545.623 ns/op
# Warmup Iteration   5: 1543.379 ns/op
Iteration   1: 1538.079 ns/op
Iteration   2: 1539.145 ns/op
Iteration   3: 1543.915 ns/op
Iteration   4: 1543.143 ns/op
Iteration   5: 1607.207 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  1554.298 ±(99.9%) 114.298 ns/op [Average]
  (min, avg, max) = (1538.079, 1554.298, 1607.207), stdev = 29.683
  CI (99.9%): [1440.000, 1668.596] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = random, length = 100)

# Run progress: 53.57% complete, ETA 00:22:38
# Fork: 1 of 1
# Warmup Iteration   1: 4305.311 ns/op
# Warmup Iteration   2: 4159.920 ns/op
# Warmup Iteration   3: 4670.761 ns/op
# Warmup Iteration   4: 4184.545 ns/op
# Warmup Iteration   5: 4100.037 ns/op
Iteration   1: 4083.063 ns/op
Iteration   2: 4116.615 ns/op
Iteration   3: 4072.824 ns/op
Iteration   4: 4105.793 ns/op
Iteration   5: 4083.059 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  4092.271 ±(99.9%) 70.038 ns/op [Average]
  (min, avg, max) = (4072.824, 4092.271, 4116.615), stdev = 18.189
  CI (99.9%): [4022.233, 4162.308] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = random, length = 500)

# Run progress: 53.93% complete, ETA 00:22:27
# Fork: 1 of 1
# Warmup Iteration   1: 20444.087 ns/op
# Warmup Iteration   2: 19808.306 ns/op
# Warmup Iteration   3: 19965.613 ns/op
# Warmup Iteration   4: 19994.256 ns/op
# Warmup Iteration   5: 19498.743 ns/op
Iteration   1: 19621.032 ns/op
Iteration   2: 19594.303 ns/op
Iteration   3: 19574.676 ns/op
Iteration   4: 19518.799 ns/op
Iteration   5: 19899.972 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  19641.757 ±(99.9%) 574.298 ns/op [Average]
  (min, avg, max) = (19518.799, 19641.757, 19899.972), stdev = 149.143
  CI (99.9%): [19067.459, 20216.054] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = random, length = 1000)

# Run progress: 54.29% complete, ETA 00:22:17
# Fork: 1 of 1
# Warmup Iteration   1: 40728.656 ns/op
# Warmup Iteration   2: 39902.610 ns/op
# Warmup Iteration   3: 40481.999 ns/op
# Warmup Iteration   4: 40182.600 ns/op
# Warmup Iteration   5: 40247.530 ns/op
Iteration   1: 39417.021 ns/op
Iteration   2: 39532.712 ns/op
Iteration   3: 39518.574 ns/op
Iteration   4: 39330.016 ns/op
Iteration   5: 39407.032 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  39441.071 ±(99.9%) 324.889 ns/op [Average]
  (min, avg, max) = (39330.016, 39441.071, 39532.712), stdev = 84.373
  CI (99.9%): [39116.182, 39765.960] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd
# Parameters: (dataset = random, length = 10000)

# Run progress: 54.64% complete, ETA 00:22:06
# Fork: 1 of 1
# Warmup Iteration   1: 413107.171 ns/op
# Warmup Iteration   2: 399030.410 ns/op
# Warmup Iteration   3: 401699.828 ns/op
# Warmup Iteration   4: 410251.322 ns/op
# Warmup Iteration   5: 400957.719 ns/op
Iteration   1: 397987.380 ns/op
Iteration   2: 398126.960 ns/op
Iteration   3: 399447.945 ns/op
Iteration   4: 400018.788 ns/op
Iteration   5: 405285.952 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimd":
  400173.405 ±(99.9%) 11496.442 ns/op [Average]
  (min, avg, max) = (397987.380, 400173.405, 405285.952), stdev = 2985.589
  CI (99.9%): [388676.963, 411669.846] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = fixed, length = 1)

# Run progress: 55.00% complete, ETA 00:21:56
# Fork: 1 of 1
# Warmup Iteration   1: 55.255 ns/op
# Warmup Iteration   2: 51.677 ns/op
# Warmup Iteration   3: 49.142 ns/op
# Warmup Iteration   4: 48.986 ns/op
# Warmup Iteration   5: 49.160 ns/op
Iteration   1: 49.022 ns/op
Iteration   2: 48.907 ns/op
Iteration   3: 49.079 ns/op
Iteration   4: 49.681 ns/op
Iteration   5: 49.298 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  49.197 ±(99.9%) 1.177 ns/op [Average]
  (min, avg, max) = (48.907, 49.197, 49.681), stdev = 0.306
  CI (99.9%): [48.021, 50.374] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = fixed, length = 10)

# Run progress: 55.36% complete, ETA 00:21:45
# Fork: 1 of 1
# Warmup Iteration   1: 74.364 ns/op
# Warmup Iteration   2: 70.114 ns/op
# Warmup Iteration   3: 67.937 ns/op
# Warmup Iteration   4: 67.576 ns/op
# Warmup Iteration   5: 67.389 ns/op
Iteration   1: 68.111 ns/op
Iteration   2: 67.166 ns/op
Iteration   3: 68.175 ns/op
Iteration   4: 67.506 ns/op
Iteration   5: 67.601 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  67.712 ±(99.9%) 1.641 ns/op [Average]
  (min, avg, max) = (67.166, 67.712, 68.175), stdev = 0.426
  CI (99.9%): [66.071, 69.353] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = fixed, length = 50)

# Run progress: 55.71% complete, ETA 00:21:35
# Fork: 1 of 1
# Warmup Iteration   1: 95.374 ns/op
# Warmup Iteration   2: 95.771 ns/op
# Warmup Iteration   3: 89.908 ns/op
# Warmup Iteration   4: 90.801 ns/op
# Warmup Iteration   5: 89.898 ns/op
Iteration   1: 90.127 ns/op
Iteration   2: 90.023 ns/op
Iteration   3: 89.914 ns/op
Iteration   4: 89.765 ns/op
Iteration   5: 87.029 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  89.372 ±(99.9%) 5.070 ns/op [Average]
  (min, avg, max) = (87.029, 89.372, 90.127), stdev = 1.317
  CI (99.9%): [84.302, 94.441] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = fixed, length = 100)

# Run progress: 56.07% complete, ETA 00:21:24
# Fork: 1 of 1
# Warmup Iteration   1: 87.600 ns/op
# Warmup Iteration   2: 80.196 ns/op
# Warmup Iteration   3: 77.033 ns/op
# Warmup Iteration   4: 77.579 ns/op
# Warmup Iteration   5: 76.077 ns/op
Iteration   1: 76.006 ns/op
Iteration   2: 77.056 ns/op
Iteration   3: 76.611 ns/op
Iteration   4: 76.582 ns/op
Iteration   5: 76.840 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  76.619 ±(99.9%) 1.512 ns/op [Average]
  (min, avg, max) = (76.006, 76.619, 77.056), stdev = 0.393
  CI (99.9%): [75.107, 78.131] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = fixed, length = 500)

# Run progress: 56.43% complete, ETA 00:21:14
# Fork: 1 of 1
# Warmup Iteration   1: 219.899 ns/op
# Warmup Iteration   2: 196.010 ns/op
# Warmup Iteration   3: 184.386 ns/op
# Warmup Iteration   4: 184.926 ns/op
# Warmup Iteration   5: 186.676 ns/op
Iteration   1: 185.283 ns/op
Iteration   2: 184.596 ns/op
Iteration   3: 184.358 ns/op
Iteration   4: 184.324 ns/op
Iteration   5: 185.720 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  184.856 ±(99.9%) 2.380 ns/op [Average]
  (min, avg, max) = (184.324, 184.856, 185.720), stdev = 0.618
  CI (99.9%): [182.476, 187.236] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 56.79% complete, ETA 00:21:04
# Fork: 1 of 1
# Warmup Iteration   1: 388.390 ns/op
# Warmup Iteration   2: 329.304 ns/op
# Warmup Iteration   3: 317.062 ns/op
# Warmup Iteration   4: 316.781 ns/op
# Warmup Iteration   5: 315.591 ns/op
Iteration   1: 314.805 ns/op
Iteration   2: 315.586 ns/op
Iteration   3: 314.805 ns/op
Iteration   4: 334.666 ns/op
Iteration   5: 317.329 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  319.438 ±(99.9%) 33.017 ns/op [Average]
  (min, avg, max) = (314.805, 319.438, 334.666), stdev = 8.575
  CI (99.9%): [286.421, 352.456] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 57.14% complete, ETA 00:20:53
# Fork: 1 of 1
# Warmup Iteration   1: 3444.317 ns/op
# Warmup Iteration   2: 2906.076 ns/op
# Warmup Iteration   3: 2869.868 ns/op
# Warmup Iteration   4: 2850.822 ns/op
# Warmup Iteration   5: 2872.675 ns/op
Iteration   1: 2919.682 ns/op
Iteration   2: 2991.180 ns/op
Iteration   3: 2868.095 ns/op
Iteration   4: 2941.130 ns/op
Iteration   5: 2872.820 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  2918.582 ±(99.9%) 196.564 ns/op [Average]
  (min, avg, max) = (2868.095, 2918.582, 2991.180), stdev = 51.047
  CI (99.9%): [2722.018, 3115.145] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = random, length = 1)

# Run progress: 57.50% complete, ETA 00:20:43
# Fork: 1 of 1
# Warmup Iteration   1: 55.035 ns/op
# Warmup Iteration   2: 51.281 ns/op
# Warmup Iteration   3: 49.613 ns/op
# Warmup Iteration   4: 50.181 ns/op
# Warmup Iteration   5: 49.574 ns/op
Iteration   1: 49.710 ns/op
Iteration   2: 49.803 ns/op
Iteration   3: 50.910 ns/op
Iteration   4: 49.747 ns/op
Iteration   5: 52.175 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  50.469 ±(99.9%) 4.149 ns/op [Average]
  (min, avg, max) = (49.710, 50.469, 52.175), stdev = 1.077
  CI (99.9%): [46.320, 54.618] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = random, length = 10)

# Run progress: 57.86% complete, ETA 00:20:32
# Fork: 1 of 1
# Warmup Iteration   1: 74.237 ns/op
# Warmup Iteration   2: 67.564 ns/op
# Warmup Iteration   3: 66.377 ns/op
# Warmup Iteration   4: 65.649 ns/op
# Warmup Iteration   5: 65.557 ns/op
Iteration   1: 65.441 ns/op
Iteration   2: 65.547 ns/op
Iteration   3: 65.585 ns/op
Iteration   4: 65.621 ns/op
Iteration   5: 65.543 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  65.548 ±(99.9%) 0.259 ns/op [Average]
  (min, avg, max) = (65.441, 65.548, 65.621), stdev = 0.067
  CI (99.9%): [65.289, 65.806] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = random, length = 50)

# Run progress: 58.21% complete, ETA 00:20:22
# Fork: 1 of 1
# Warmup Iteration   1: 96.499 ns/op
# Warmup Iteration   2: 92.369 ns/op
# Warmup Iteration   3: 94.867 ns/op
# Warmup Iteration   4: 95.879 ns/op
# Warmup Iteration   5: 94.597 ns/op
Iteration   1: 94.984 ns/op
Iteration   2: 94.873 ns/op
Iteration   3: 94.807 ns/op
Iteration   4: 94.862 ns/op
Iteration   5: 88.887 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  93.683 ±(99.9%) 10.326 ns/op [Average]
  (min, avg, max) = (88.887, 93.683, 94.984), stdev = 2.682
  CI (99.9%): [83.356, 104.009] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = random, length = 100)

# Run progress: 58.57% complete, ETA 00:20:11
# Fork: 1 of 1
# Warmup Iteration   1: 86.531 ns/op
# Warmup Iteration   2: 76.353 ns/op
# Warmup Iteration   3: 75.359 ns/op
# Warmup Iteration   4: 75.621 ns/op
# Warmup Iteration   5: 75.182 ns/op
Iteration   1: 75.073 ns/op
Iteration   2: 75.165 ns/op
Iteration   3: 75.079 ns/op
Iteration   4: 76.243 ns/op
Iteration   5: 77.234 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  75.759 ±(99.9%) 3.700 ns/op [Average]
  (min, avg, max) = (75.073, 75.759, 77.234), stdev = 0.961
  CI (99.9%): [72.059, 79.459] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = random, length = 500)

# Run progress: 58.93% complete, ETA 00:20:01
# Fork: 1 of 1
# Warmup Iteration   1: 225.115 ns/op
# Warmup Iteration   2: 195.458 ns/op
# Warmup Iteration   3: 190.946 ns/op
# Warmup Iteration   4: 191.256 ns/op
# Warmup Iteration   5: 191.040 ns/op
Iteration   1: 191.987 ns/op
Iteration   2: 190.518 ns/op
Iteration   3: 194.843 ns/op
Iteration   4: 190.804 ns/op
Iteration   5: 192.435 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  192.118 ±(99.9%) 6.622 ns/op [Average]
  (min, avg, max) = (190.518, 192.118, 194.843), stdev = 1.720
  CI (99.9%): [185.496, 198.740] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = random, length = 1000)

# Run progress: 59.29% complete, ETA 00:19:50
# Fork: 1 of 1
# Warmup Iteration   1: 395.303 ns/op
# Warmup Iteration   2: 337.204 ns/op
# Warmup Iteration   3: 326.227 ns/op
# Warmup Iteration   4: 332.198 ns/op
# Warmup Iteration   5: 325.646 ns/op
Iteration   1: 327.237 ns/op
Iteration   2: 327.893 ns/op
Iteration   3: 328.095 ns/op
Iteration   4: 328.263 ns/op
Iteration   5: 324.082 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  327.114 ±(99.9%) 6.697 ns/op [Average]
  (min, avg, max) = (324.082, 327.114, 328.263), stdev = 1.739
  CI (99.9%): [320.417, 333.811] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo
# Parameters: (dataset = random, length = 10000)

# Run progress: 59.64% complete, ETA 00:19:40
# Fork: 1 of 1
# Warmup Iteration   1: 3590.277 ns/op
# Warmup Iteration   2: 2928.323 ns/op
# Warmup Iteration   3: 2879.671 ns/op
# Warmup Iteration   4: 2918.005 ns/op
# Warmup Iteration   5: 2884.600 ns/op
Iteration   1: 2931.263 ns/op
Iteration   2: 2878.112 ns/op
Iteration   3: 2890.222 ns/op
Iteration   4: 3003.461 ns/op
Iteration   5: 2899.561 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdCargo":
  2920.524 ±(99.9%) 193.974 ns/op [Average]
  (min, avg, max) = (2878.112, 2920.524, 3003.461), stdev = 50.374
  CI (99.9%): [2726.550, 3114.497] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = fixed, length = 1)

# Run progress: 60.00% complete, ETA 00:19:29
# Fork: 1 of 1
# Warmup Iteration   1: 123.451 ns/op
# Warmup Iteration   2: 111.279 ns/op
# Warmup Iteration   3: 109.933 ns/op
# Warmup Iteration   4: 109.577 ns/op
# Warmup Iteration   5: 109.923 ns/op
Iteration   1: 109.892 ns/op
Iteration   2: 109.702 ns/op
Iteration   3: 108.877 ns/op
Iteration   4: 109.280 ns/op
Iteration   5: 111.282 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  109.806 ±(99.9%) 3.517 ns/op [Average]
  (min, avg, max) = (108.877, 109.806, 111.282), stdev = 0.913
  CI (99.9%): [106.290, 113.323] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = fixed, length = 10)

# Run progress: 60.36% complete, ETA 00:19:19
# Fork: 1 of 1
# Warmup Iteration   1: 301.634 ns/op
# Warmup Iteration   2: 278.498 ns/op
# Warmup Iteration   3: 270.317 ns/op
# Warmup Iteration   4: 268.966 ns/op
# Warmup Iteration   5: 278.707 ns/op
Iteration   1: 269.752 ns/op
Iteration   2: 269.981 ns/op
Iteration   3: 269.721 ns/op
Iteration   4: 270.460 ns/op
Iteration   5: 281.819 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  272.347 ±(99.9%) 20.422 ns/op [Average]
  (min, avg, max) = (269.721, 272.347, 281.819), stdev = 5.303
  CI (99.9%): [251.925, 292.768] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = fixed, length = 50)

# Run progress: 60.71% complete, ETA 00:19:09
# Fork: 1 of 1
# Warmup Iteration   1: 1636.251 ns/op
# Warmup Iteration   2: 1615.051 ns/op
# Warmup Iteration   3: 1555.645 ns/op
# Warmup Iteration   4: 1562.421 ns/op
# Warmup Iteration   5: 1537.046 ns/op
Iteration   1: 1538.731 ns/op
Iteration   2: 1545.733 ns/op
Iteration   3: 1551.174 ns/op
Iteration   4: 1549.422 ns/op
Iteration   5: 1571.033 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  1551.219 ±(99.9%) 46.443 ns/op [Average]
  (min, avg, max) = (1538.731, 1551.219, 1571.033), stdev = 12.061
  CI (99.9%): [1504.776, 1597.661] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = fixed, length = 100)

# Run progress: 61.07% complete, ETA 00:18:58
# Fork: 1 of 1
# Warmup Iteration   1: 4268.960 ns/op
# Warmup Iteration   2: 4154.552 ns/op
# Warmup Iteration   3: 4156.461 ns/op
# Warmup Iteration   4: 4127.498 ns/op
# Warmup Iteration   5: 4061.369 ns/op
Iteration   1: 4060.562 ns/op
Iteration   2: 4076.135 ns/op
Iteration   3: 4039.735 ns/op
Iteration   4: 4057.030 ns/op
Iteration   5: 4117.873 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  4070.267 ±(99.9%) 113.942 ns/op [Average]
  (min, avg, max) = (4039.735, 4070.267, 4117.873), stdev = 29.590
  CI (99.9%): [3956.325, 4184.209] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = fixed, length = 500)

# Run progress: 61.43% complete, ETA 00:18:48
# Fork: 1 of 1
# Warmup Iteration   1: 20441.975 ns/op
# Warmup Iteration   2: 19834.174 ns/op
# Warmup Iteration   3: 19845.595 ns/op
# Warmup Iteration   4: 19852.789 ns/op
# Warmup Iteration   5: 19585.426 ns/op
Iteration   1: 19507.679 ns/op
Iteration   2: 19823.313 ns/op
Iteration   3: 19499.173 ns/op
Iteration   4: 19527.244 ns/op
Iteration   5: 19515.352 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  19574.552 ±(99.9%) 536.950 ns/op [Average]
  (min, avg, max) = (19499.173, 19574.552, 19823.313), stdev = 139.444
  CI (99.9%): [19037.603, 20111.502] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 61.79% complete, ETA 00:18:37
# Fork: 1 of 1
# Warmup Iteration   1: 40795.377 ns/op
# Warmup Iteration   2: 39750.658 ns/op
# Warmup Iteration   3: 40235.964 ns/op
# Warmup Iteration   4: 40101.303 ns/op
# Warmup Iteration   5: 39343.646 ns/op
Iteration   1: 39438.602 ns/op
Iteration   2: 39566.813 ns/op
Iteration   3: 39517.213 ns/op
Iteration   4: 39439.159 ns/op
Iteration   5: 39693.697 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  39531.097 ±(99.9%) 408.037 ns/op [Average]
  (min, avg, max) = (39438.602, 39531.097, 39693.697), stdev = 105.966
  CI (99.9%): [39123.059, 39939.134] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 62.14% complete, ETA 00:18:27
# Fork: 1 of 1
# Warmup Iteration   1: 404268.187 ns/op
# Warmup Iteration   2: 398067.142 ns/op
# Warmup Iteration   3: 400107.019 ns/op
# Warmup Iteration   4: 399746.300 ns/op
# Warmup Iteration   5: 396067.636 ns/op
Iteration   1: 394272.042 ns/op
Iteration   2: 397476.664 ns/op
Iteration   3: 395718.933 ns/op
Iteration   4: 395320.129 ns/op
Iteration   5: 396411.784 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  395839.911 ±(99.9%) 4616.368 ns/op [Average]
  (min, avg, max) = (394272.042, 395839.911, 397476.664), stdev = 1198.856
  CI (99.9%): [391223.542, 400456.279] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = random, length = 1)

# Run progress: 62.50% complete, ETA 00:18:16
# Fork: 1 of 1
# Warmup Iteration   1: 121.870 ns/op
# Warmup Iteration   2: 109.756 ns/op
# Warmup Iteration   3: 106.818 ns/op
# Warmup Iteration   4: 107.558 ns/op
# Warmup Iteration   5: 112.836 ns/op
Iteration   1: 107.157 ns/op
Iteration   2: 106.923 ns/op
Iteration   3: 107.065 ns/op
Iteration   4: 106.441 ns/op
Iteration   5: 110.042 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  107.526 ±(99.9%) 5.520 ns/op [Average]
  (min, avg, max) = (106.441, 107.526, 110.042), stdev = 1.434
  CI (99.9%): [102.005, 113.046] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = random, length = 10)

# Run progress: 62.86% complete, ETA 00:18:06
# Fork: 1 of 1
# Warmup Iteration   1: 307.927 ns/op
# Warmup Iteration   2: 273.038 ns/op
# Warmup Iteration   3: 275.979 ns/op
# Warmup Iteration   4: 271.764 ns/op
# Warmup Iteration   5: 274.363 ns/op
Iteration   1: 273.323 ns/op
Iteration   2: 271.847 ns/op
Iteration   3: 272.449 ns/op
Iteration   4: 273.693 ns/op
Iteration   5: 275.935 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  273.450 ±(99.9%) 6.034 ns/op [Average]
  (min, avg, max) = (271.847, 273.450, 275.935), stdev = 1.567
  CI (99.9%): [267.416, 279.483] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = random, length = 50)

# Run progress: 63.21% complete, ETA 00:17:56
# Fork: 1 of 1
# Warmup Iteration   1: 1643.399 ns/op
# Warmup Iteration   2: 1610.863 ns/op
# Warmup Iteration   3: 1568.422 ns/op
# Warmup Iteration   4: 1546.010 ns/op
# Warmup Iteration   5: 1537.498 ns/op
Iteration   1: 1549.295 ns/op
Iteration   2: 1532.471 ns/op
Iteration   3: 1548.895 ns/op
Iteration   4: 1538.048 ns/op
Iteration   5: 1576.593 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  1549.060 ±(99.9%) 65.423 ns/op [Average]
  (min, avg, max) = (1532.471, 1549.060, 1576.593), stdev = 16.990
  CI (99.9%): [1483.638, 1614.483] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = random, length = 100)

# Run progress: 63.57% complete, ETA 00:17:45
# Fork: 1 of 1
# Warmup Iteration   1: 4331.079 ns/op
# Warmup Iteration   2: 4170.939 ns/op
# Warmup Iteration   3: 4164.018 ns/op
# Warmup Iteration   4: 4119.908 ns/op
# Warmup Iteration   5: 4076.220 ns/op
Iteration   1: 4071.399 ns/op
Iteration   2: 4074.837 ns/op
Iteration   3: 4145.211 ns/op
Iteration   4: 4083.524 ns/op
Iteration   5: 4061.370 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  4087.268 ±(99.9%) 128.412 ns/op [Average]
  (min, avg, max) = (4061.370, 4087.268, 4145.211), stdev = 33.348
  CI (99.9%): [3958.856, 4215.680] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = random, length = 500)

# Run progress: 63.93% complete, ETA 00:17:35
# Fork: 1 of 1
# Warmup Iteration   1: 20378.011 ns/op
# Warmup Iteration   2: 19761.235 ns/op
# Warmup Iteration   3: 20028.977 ns/op
# Warmup Iteration   4: 19966.393 ns/op
# Warmup Iteration   5: 19544.584 ns/op
Iteration   1: 19437.263 ns/op
Iteration   2: 19544.011 ns/op
Iteration   3: 19461.628 ns/op
Iteration   4: 19546.505 ns/op
Iteration   5: 19498.769 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  19497.635 ±(99.9%) 187.474 ns/op [Average]
  (min, avg, max) = (19437.263, 19497.635, 19546.505), stdev = 48.686
  CI (99.9%): [19310.161, 19685.109] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = random, length = 1000)

# Run progress: 64.29% complete, ETA 00:17:24
# Fork: 1 of 1
# Warmup Iteration   1: 40718.316 ns/op
# Warmup Iteration   2: 40117.830 ns/op
# Warmup Iteration   3: 40640.885 ns/op
# Warmup Iteration   4: 40060.620 ns/op
# Warmup Iteration   5: 39654.013 ns/op
Iteration   1: 40232.762 ns/op
Iteration   2: 39584.179 ns/op
Iteration   3: 39636.426 ns/op
Iteration   4: 39683.674 ns/op
Iteration   5: 39689.813 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  39765.371 ±(99.9%) 1019.321 ns/op [Average]
  (min, avg, max) = (39584.179, 39765.371, 40232.762), stdev = 264.714
  CI (99.9%): [38746.050, 40784.692] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace
# Parameters: (dataset = random, length = 10000)

# Run progress: 64.64% complete, ETA 00:17:14
# Fork: 1 of 1
# Warmup Iteration   1: 404763.369 ns/op
# Warmup Iteration   2: 396814.545 ns/op
# Warmup Iteration   3: 401561.433 ns/op
# Warmup Iteration   4: 403274.411 ns/op
# Warmup Iteration   5: 398514.082 ns/op
Iteration   1: 395312.861 ns/op
Iteration   2: 395107.228 ns/op
Iteration   3: 398564.009 ns/op
Iteration   4: 394638.449 ns/op
Iteration   5: 394127.086 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlace":
  395549.927 ±(99.9%) 6722.694 ns/op [Average]
  (min, avg, max) = (394127.086, 395549.927, 398564.009), stdev = 1745.862
  CI (99.9%): [388827.232, 402272.621] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = fixed, length = 1)

# Run progress: 65.00% complete, ETA 00:17:03
# Fork: 1 of 1
# Warmup Iteration   1: 53.812 ns/op
# Warmup Iteration   2: 49.841 ns/op
# Warmup Iteration   3: 49.407 ns/op
# Warmup Iteration   4: 48.293 ns/op
# Warmup Iteration   5: 48.222 ns/op
Iteration   1: 48.249 ns/op
Iteration   2: 49.352 ns/op
Iteration   3: 48.403 ns/op
Iteration   4: 48.389 ns/op
Iteration   5: 48.610 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  48.601 ±(99.9%) 1.692 ns/op [Average]
  (min, avg, max) = (48.249, 48.601, 49.352), stdev = 0.440
  CI (99.9%): [46.908, 50.293] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = fixed, length = 10)

# Run progress: 65.36% complete, ETA 00:16:53
# Fork: 1 of 1
# Warmup Iteration   1: 73.213 ns/op
# Warmup Iteration   2: 68.685 ns/op
# Warmup Iteration   3: 67.078 ns/op
# Warmup Iteration   4: 65.951 ns/op
# Warmup Iteration   5: 65.946 ns/op
Iteration   1: 68.011 ns/op
Iteration   2: 66.148 ns/op
Iteration   3: 66.055 ns/op
Iteration   4: 65.925 ns/op
Iteration   5: 66.164 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  66.460 ±(99.9%) 3.357 ns/op [Average]
  (min, avg, max) = (65.925, 66.460, 68.011), stdev = 0.872
  CI (99.9%): [63.103, 69.817] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = fixed, length = 50)

# Run progress: 65.71% complete, ETA 00:16:42
# Fork: 1 of 1
# Warmup Iteration   1: 103.332 ns/op
# Warmup Iteration   2: 98.660 ns/op
# Warmup Iteration   3: 90.972 ns/op
# Warmup Iteration   4: 92.290 ns/op
# Warmup Iteration   5: 91.010 ns/op
Iteration   1: 93.177 ns/op
Iteration   2: 91.172 ns/op
Iteration   3: 93.183 ns/op
Iteration   4: 92.341 ns/op
Iteration   5: 90.131 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  92.001 ±(99.9%) 5.124 ns/op [Average]
  (min, avg, max) = (90.131, 92.001, 93.183), stdev = 1.331
  CI (99.9%): [86.877, 97.124] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = fixed, length = 100)

# Run progress: 66.07% complete, ETA 00:16:32
# Fork: 1 of 1
# Warmup Iteration   1: 85.803 ns/op
# Warmup Iteration   2: 75.445 ns/op
# Warmup Iteration   3: 74.319 ns/op
# Warmup Iteration   4: 73.448 ns/op
# Warmup Iteration   5: 73.135 ns/op
Iteration   1: 73.253 ns/op
Iteration   2: 72.947 ns/op
Iteration   3: 73.294 ns/op
Iteration   4: 72.793 ns/op
Iteration   5: 73.085 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  73.074 ±(99.9%) 0.807 ns/op [Average]
  (min, avg, max) = (72.793, 73.074, 73.294), stdev = 0.210
  CI (99.9%): [72.268, 73.881] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = fixed, length = 500)

# Run progress: 66.43% complete, ETA 00:16:21
# Fork: 1 of 1
# Warmup Iteration   1: 217.716 ns/op
# Warmup Iteration   2: 185.739 ns/op
# Warmup Iteration   3: 180.258 ns/op
# Warmup Iteration   4: 180.655 ns/op
# Warmup Iteration   5: 181.956 ns/op
Iteration   1: 180.171 ns/op
Iteration   2: 180.978 ns/op
Iteration   3: 182.604 ns/op
Iteration   4: 180.790 ns/op
Iteration   5: 179.454 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  180.799 ±(99.9%) 4.512 ns/op [Average]
  (min, avg, max) = (179.454, 180.799, 182.604), stdev = 1.172
  CI (99.9%): [176.287, 185.312] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 66.79% complete, ETA 00:16:11
# Fork: 1 of 1
# Warmup Iteration   1: 377.861 ns/op
# Warmup Iteration   2: 320.382 ns/op
# Warmup Iteration   3: 318.578 ns/op
# Warmup Iteration   4: 319.509 ns/op
# Warmup Iteration   5: 318.863 ns/op
Iteration   1: 320.100 ns/op
Iteration   2: 319.620 ns/op
Iteration   3: 317.493 ns/op
Iteration   4: 325.120 ns/op
Iteration   5: 318.279 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  320.122 ±(99.9%) 11.479 ns/op [Average]
  (min, avg, max) = (317.493, 320.122, 325.120), stdev = 2.981
  CI (99.9%): [308.644, 331.601] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 67.14% complete, ETA 00:16:01
# Fork: 1 of 1
# Warmup Iteration   1: 3657.190 ns/op
# Warmup Iteration   2: 2777.273 ns/op
# Warmup Iteration   3: 2749.944 ns/op
# Warmup Iteration   4: 2756.422 ns/op
# Warmup Iteration   5: 2746.090 ns/op
Iteration   1: 2909.017 ns/op
Iteration   2: 2745.193 ns/op
Iteration   3: 2756.466 ns/op
Iteration   4: 2769.567 ns/op
Iteration   5: 2744.449 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  2784.938 ±(99.9%) 269.968 ns/op [Average]
  (min, avg, max) = (2744.449, 2784.938, 2909.017), stdev = 70.110
  CI (99.9%): [2514.971, 3054.906] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = random, length = 1)

# Run progress: 67.50% complete, ETA 00:15:50
# Fork: 1 of 1
# Warmup Iteration   1: 53.950 ns/op
# Warmup Iteration   2: 52.159 ns/op
# Warmup Iteration   3: 48.406 ns/op
# Warmup Iteration   4: 48.278 ns/op
# Warmup Iteration   5: 48.504 ns/op
Iteration   1: 48.098 ns/op
Iteration   2: 48.435 ns/op
Iteration   3: 48.192 ns/op
Iteration   4: 48.419 ns/op
Iteration   5: 48.065 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  48.242 ±(99.9%) 0.676 ns/op [Average]
  (min, avg, max) = (48.065, 48.242, 48.435), stdev = 0.175
  CI (99.9%): [47.566, 48.918] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = random, length = 10)

# Run progress: 67.86% complete, ETA 00:15:40
# Fork: 1 of 1
# Warmup Iteration   1: 73.574 ns/op
# Warmup Iteration   2: 69.791 ns/op
# Warmup Iteration   3: 66.401 ns/op
# Warmup Iteration   4: 66.618 ns/op
# Warmup Iteration   5: 66.347 ns/op
Iteration   1: 66.161 ns/op
Iteration   2: 66.155 ns/op
Iteration   3: 66.194 ns/op
Iteration   4: 66.147 ns/op
Iteration   5: 66.365 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  66.204 ±(99.9%) 0.352 ns/op [Average]
  (min, avg, max) = (66.147, 66.204, 66.365), stdev = 0.091
  CI (99.9%): [65.853, 66.556] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = random, length = 50)

# Run progress: 68.21% complete, ETA 00:15:29
# Fork: 1 of 1
# Warmup Iteration   1: 98.023 ns/op
# Warmup Iteration   2: 94.710 ns/op
# Warmup Iteration   3: 90.266 ns/op
# Warmup Iteration   4: 89.726 ns/op
# Warmup Iteration   5: 88.765 ns/op
Iteration   1: 91.498 ns/op
Iteration   2: 88.416 ns/op
Iteration   3: 88.682 ns/op
Iteration   4: 88.815 ns/op
Iteration   5: 85.474 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  88.577 ±(99.9%) 8.227 ns/op [Average]
  (min, avg, max) = (85.474, 88.577, 91.498), stdev = 2.136
  CI (99.9%): [80.350, 96.803] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = random, length = 100)

# Run progress: 68.57% complete, ETA 00:15:19
# Fork: 1 of 1
# Warmup Iteration   1: 86.633 ns/op
# Warmup Iteration   2: 79.325 ns/op
# Warmup Iteration   3: 78.788 ns/op
# Warmup Iteration   4: 78.771 ns/op
# Warmup Iteration   5: 79.778 ns/op
Iteration   1: 78.565 ns/op
Iteration   2: 78.960 ns/op
Iteration   3: 78.517 ns/op
Iteration   4: 80.646 ns/op
Iteration   5: 75.671 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  78.472 ±(99.9%) 6.894 ns/op [Average]
  (min, avg, max) = (75.671, 78.472, 80.646), stdev = 1.790
  CI (99.9%): [71.578, 85.366] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = random, length = 500)

# Run progress: 68.93% complete, ETA 00:15:08
# Fork: 1 of 1
# Warmup Iteration   1: 226.320 ns/op
# Warmup Iteration   2: 184.919 ns/op
# Warmup Iteration   3: 182.745 ns/op
# Warmup Iteration   4: 182.473 ns/op
# Warmup Iteration   5: 182.502 ns/op
Iteration   1: 183.026 ns/op
Iteration   2: 182.870 ns/op
Iteration   3: 183.750 ns/op
Iteration   4: 198.165 ns/op
Iteration   5: 185.097 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  186.582 ±(99.9%) 25.163 ns/op [Average]
  (min, avg, max) = (182.870, 186.582, 198.165), stdev = 6.535
  CI (99.9%): [161.418, 211.745] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = random, length = 1000)

# Run progress: 69.29% complete, ETA 00:14:58
# Fork: 1 of 1
# Warmup Iteration   1: 377.536 ns/op
# Warmup Iteration   2: 329.702 ns/op
# Warmup Iteration   3: 319.144 ns/op
# Warmup Iteration   4: 330.529 ns/op
# Warmup Iteration   5: 318.755 ns/op
Iteration   1: 332.491 ns/op
Iteration   2: 322.346 ns/op
Iteration   3: 319.295 ns/op
Iteration   4: 318.378 ns/op
Iteration   5: 318.422 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  322.187 ±(99.9%) 23.043 ns/op [Average]
  (min, avg, max) = (318.378, 322.187, 332.491), stdev = 5.984
  CI (99.9%): [299.143, 345.230] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo
# Parameters: (dataset = random, length = 10000)

# Run progress: 69.64% complete, ETA 00:14:47
# Fork: 1 of 1
# Warmup Iteration   1: 3397.373 ns/op
# Warmup Iteration   2: 2912.237 ns/op
# Warmup Iteration   3: 2934.040 ns/op
# Warmup Iteration   4: 2824.306 ns/op
# Warmup Iteration   5: 2834.832 ns/op
Iteration   1: 2825.344 ns/op
Iteration   2: 2813.257 ns/op
Iteration   3: 2822.739 ns/op
Iteration   4: 2852.351 ns/op
Iteration   5: 2834.435 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo":
  2829.625 ±(99.9%) 56.895 ns/op [Average]
  (min, avg, max) = (2813.257, 2829.625, 2852.351), stdev = 14.776
  CI (99.9%): [2772.730, 2886.521] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 1)

# Run progress: 70.00% complete, ETA 00:14:37
# Fork: 1 of 1
# Warmup Iteration   1: 442.760 ns/op
# Warmup Iteration   2: 444.745 ns/op
# Warmup Iteration   3: 421.920 ns/op
# Warmup Iteration   4: 424.126 ns/op
# Warmup Iteration   5: 425.583 ns/op
Iteration   1: 426.646 ns/op
Iteration   2: 423.464 ns/op
Iteration   3: 423.943 ns/op
Iteration   4: 424.041 ns/op
Iteration   5: 424.014 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  424.422 ±(99.9%) 4.873 ns/op [Average]
  (min, avg, max) = (423.464, 424.422, 426.646), stdev = 1.266
  CI (99.9%): [419.548, 429.295] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 10)

# Run progress: 70.36% complete, ETA 00:14:27
# Fork: 1 of 1
# Warmup Iteration   1: 471.909 ns/op
# Warmup Iteration   2: 466.529 ns/op
# Warmup Iteration   3: 447.279 ns/op
# Warmup Iteration   4: 445.941 ns/op
# Warmup Iteration   5: 446.972 ns/op
Iteration   1: 448.051 ns/op
Iteration   2: 447.296 ns/op
Iteration   3: 447.537 ns/op
Iteration   4: 448.754 ns/op
Iteration   5: 446.919 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  447.712 ±(99.9%) 2.746 ns/op [Average]
  (min, avg, max) = (446.919, 447.712, 448.754), stdev = 0.713
  CI (99.9%): [444.966, 450.457] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 50)

# Run progress: 70.71% complete, ETA 00:14:16
# Fork: 1 of 1
# Warmup Iteration   1: 531.714 ns/op
# Warmup Iteration   2: 505.421 ns/op
# Warmup Iteration   3: 496.359 ns/op
# Warmup Iteration   4: 497.091 ns/op
# Warmup Iteration   5: 501.972 ns/op
Iteration   1: 498.563 ns/op
Iteration   2: 498.116 ns/op
Iteration   3: 497.897 ns/op
Iteration   4: 497.279 ns/op
Iteration   5: 499.860 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  498.343 ±(99.9%) 3.719 ns/op [Average]
  (min, avg, max) = (497.279, 498.343, 499.860), stdev = 0.966
  CI (99.9%): [494.624, 502.062] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 100)

# Run progress: 71.07% complete, ETA 00:14:06
# Fork: 1 of 1
# Warmup Iteration   1: 679.762 ns/op
# Warmup Iteration   2: 632.229 ns/op
# Warmup Iteration   3: 625.184 ns/op
# Warmup Iteration   4: 623.916 ns/op
# Warmup Iteration   5: 623.670 ns/op
Iteration   1: 630.430 ns/op
Iteration   2: 625.221 ns/op
Iteration   3: 625.532 ns/op
Iteration   4: 631.762 ns/op
Iteration   5: 646.853 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  631.960 ±(99.9%) 33.949 ns/op [Average]
  (min, avg, max) = (625.221, 631.960, 646.853), stdev = 8.816
  CI (99.9%): [598.011, 665.908] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 500)

# Run progress: 71.43% complete, ETA 00:13:55
# Fork: 1 of 1
# Warmup Iteration   1: 1173.451 ns/op
# Warmup Iteration   2: 1134.541 ns/op
# Warmup Iteration   3: 1121.277 ns/op
# Warmup Iteration   4: 1123.526 ns/op
# Warmup Iteration   5: 1117.221 ns/op
Iteration   1: 1115.933 ns/op
Iteration   2: 1185.272 ns/op
Iteration   3: 1128.180 ns/op
Iteration   4: 1155.744 ns/op
Iteration   5: 1153.901 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1147.806 ±(99.9%) 103.770 ns/op [Average]
  (min, avg, max) = (1115.933, 1147.806, 1185.272), stdev = 26.949
  CI (99.9%): [1044.037, 1251.576] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 71.79% complete, ETA 00:13:45
# Fork: 1 of 1
# Warmup Iteration   1: 1807.407 ns/op
# Warmup Iteration   2: 1746.735 ns/op
# Warmup Iteration   3: 1714.516 ns/op
# Warmup Iteration   4: 1728.781 ns/op
# Warmup Iteration   5: 1713.969 ns/op
Iteration   1: 1712.049 ns/op
Iteration   2: 1713.708 ns/op
Iteration   3: 1707.780 ns/op
Iteration   4: 1715.437 ns/op
Iteration   5: 1730.902 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1715.975 ±(99.9%) 33.943 ns/op [Average]
  (min, avg, max) = (1707.780, 1715.975, 1730.902), stdev = 8.815
  CI (99.9%): [1682.032, 1749.918] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 72.14% complete, ETA 00:13:34
# Fork: 1 of 1
# Warmup Iteration   1: 13266.684 ns/op
# Warmup Iteration   2: 12215.791 ns/op
# Warmup Iteration   3: 12136.394 ns/op
# Warmup Iteration   4: 12147.602 ns/op
# Warmup Iteration   5: 12110.788 ns/op
Iteration   1: 12422.284 ns/op
Iteration   2: 12132.365 ns/op
Iteration   3: 12071.298 ns/op
Iteration   4: 12069.805 ns/op
Iteration   5: 12079.385 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  12155.027 ±(99.9%) 583.773 ns/op [Average]
  (min, avg, max) = (12069.805, 12155.027, 12422.284), stdev = 151.604
  CI (99.9%): [11571.254, 12738.801] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 1)

# Run progress: 72.50% complete, ETA 00:13:24
# Fork: 1 of 1
# Warmup Iteration   1: 437.108 ns/op
# Warmup Iteration   2: 442.148 ns/op
# Warmup Iteration   3: 425.918 ns/op
# Warmup Iteration   4: 418.933 ns/op
# Warmup Iteration   5: 430.849 ns/op
Iteration   1: 419.172 ns/op
Iteration   2: 419.257 ns/op
Iteration   3: 424.087 ns/op
Iteration   4: 419.032 ns/op
Iteration   5: 420.518 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  420.413 ±(99.9%) 8.235 ns/op [Average]
  (min, avg, max) = (419.032, 420.413, 424.087), stdev = 2.139
  CI (99.9%): [412.178, 428.648] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 10)

# Run progress: 72.86% complete, ETA 00:13:13
# Fork: 1 of 1
# Warmup Iteration   1: 477.837 ns/op
# Warmup Iteration   2: 469.320 ns/op
# Warmup Iteration   3: 462.543 ns/op
# Warmup Iteration   4: 448.144 ns/op
# Warmup Iteration   5: 448.111 ns/op
Iteration   1: 448.309 ns/op
Iteration   2: 447.430 ns/op
Iteration   3: 448.972 ns/op
Iteration   4: 445.871 ns/op
Iteration   5: 447.009 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  447.518 ±(99.9%) 4.604 ns/op [Average]
  (min, avg, max) = (445.871, 447.518, 448.972), stdev = 1.196
  CI (99.9%): [442.915, 452.122] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 50)

# Run progress: 73.21% complete, ETA 00:13:03
# Fork: 1 of 1
# Warmup Iteration   1: 530.748 ns/op
# Warmup Iteration   2: 502.691 ns/op
# Warmup Iteration   3: 499.008 ns/op
# Warmup Iteration   4: 497.911 ns/op
# Warmup Iteration   5: 512.614 ns/op
Iteration   1: 511.218 ns/op
Iteration   2: 496.694 ns/op
Iteration   3: 504.053 ns/op
Iteration   4: 495.170 ns/op
Iteration   5: 492.626 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  499.953 ±(99.9%) 29.256 ns/op [Average]
  (min, avg, max) = (492.626, 499.953, 511.218), stdev = 7.598
  CI (99.9%): [470.696, 529.209] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 100)

# Run progress: 73.57% complete, ETA 00:12:53
# Fork: 1 of 1
# Warmup Iteration   1: 687.157 ns/op
# Warmup Iteration   2: 652.289 ns/op
# Warmup Iteration   3: 640.432 ns/op
# Warmup Iteration   4: 643.513 ns/op
# Warmup Iteration   5: 649.316 ns/op
Iteration   1: 645.832 ns/op
Iteration   2: 643.288 ns/op
Iteration   3: 647.516 ns/op
Iteration   4: 633.008 ns/op
Iteration   5: 630.315 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  639.992 ±(99.9%) 30.074 ns/op [Average]
  (min, avg, max) = (630.315, 639.992, 647.516), stdev = 7.810
  CI (99.9%): [609.918, 670.066] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 500)

# Run progress: 73.93% complete, ETA 00:12:42
# Fork: 1 of 1
# Warmup Iteration   1: 1179.195 ns/op
# Warmup Iteration   2: 1140.693 ns/op
# Warmup Iteration   3: 1110.912 ns/op
# Warmup Iteration   4: 1109.351 ns/op
# Warmup Iteration   5: 1107.124 ns/op
Iteration   1: 1110.887 ns/op
Iteration   2: 1111.346 ns/op
Iteration   3: 1111.614 ns/op
Iteration   4: 1137.038 ns/op
Iteration   5: 1138.412 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1121.859 ±(99.9%) 55.810 ns/op [Average]
  (min, avg, max) = (1110.887, 1121.859, 1138.412), stdev = 14.494
  CI (99.9%): [1066.049, 1177.669] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 1000)

# Run progress: 74.29% complete, ETA 00:12:32
# Fork: 1 of 1
# Warmup Iteration   1: 1787.768 ns/op
# Warmup Iteration   2: 1765.290 ns/op
# Warmup Iteration   3: 1709.913 ns/op
# Warmup Iteration   4: 1703.622 ns/op
# Warmup Iteration   5: 1696.042 ns/op
Iteration   1: 1701.357 ns/op
Iteration   2: 1702.635 ns/op
Iteration   3: 1706.852 ns/op
Iteration   4: 1707.480 ns/op
Iteration   5: 1723.219 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1708.309 ±(99.9%) 33.660 ns/op [Average]
  (min, avg, max) = (1701.357, 1708.309, 1723.219), stdev = 8.741
  CI (99.9%): [1674.648, 1741.969] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 10000)

# Run progress: 74.64% complete, ETA 00:12:21
# Fork: 1 of 1
# Warmup Iteration   1: 13491.171 ns/op
# Warmup Iteration   2: 12197.057 ns/op
# Warmup Iteration   3: 11982.695 ns/op
# Warmup Iteration   4: 11995.319 ns/op
# Warmup Iteration   5: 11994.506 ns/op
Iteration   1: 12009.924 ns/op
Iteration   2: 12003.036 ns/op
Iteration   3: 11987.635 ns/op
Iteration   4: 12200.236 ns/op
Iteration   5: 12410.820 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  12122.330 ±(99.9%) 705.585 ns/op [Average]
  (min, avg, max) = (11987.635, 12122.330, 12410.820), stdev = 183.238
  CI (99.9%): [11416.745, 12827.915] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 75.00% complete, ETA 00:12:11
# Fork: 1 of 1
# Warmup Iteration   1: 152.844 ns/op
# Warmup Iteration   2: 142.412 ns/op
# Warmup Iteration   3: 140.852 ns/op
# Warmup Iteration   4: 139.574 ns/op
# Warmup Iteration   5: 139.501 ns/op
Iteration   1: 139.238 ns/op
Iteration   2: 139.856 ns/op
Iteration   3: 138.456 ns/op
Iteration   4: 138.076 ns/op
Iteration   5: 138.260 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  138.777 ±(99.9%) 2.880 ns/op [Average]
  (min, avg, max) = (138.076, 138.777, 139.856), stdev = 0.748
  CI (99.9%): [135.897, 141.657] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 75.36% complete, ETA 00:12:00
# Fork: 1 of 1
# Warmup Iteration   1: 167.494 ns/op
# Warmup Iteration   2: 157.658 ns/op
# Warmup Iteration   3: 158.551 ns/op
# Warmup Iteration   4: 154.915 ns/op
# Warmup Iteration   5: 154.919 ns/op
Iteration   1: 154.788 ns/op
Iteration   2: 154.905 ns/op
Iteration   3: 155.261 ns/op
Iteration   4: 156.292 ns/op
Iteration   5: 152.530 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  154.755 ±(99.9%) 5.305 ns/op [Average]
  (min, avg, max) = (152.530, 154.755, 156.292), stdev = 1.378
  CI (99.9%): [149.451, 160.060] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 75.71% complete, ETA 00:11:50
# Fork: 1 of 1
# Warmup Iteration   1: 221.486 ns/op
# Warmup Iteration   2: 208.843 ns/op
# Warmup Iteration   3: 202.553 ns/op
# Warmup Iteration   4: 202.870 ns/op
# Warmup Iteration   5: 200.116 ns/op
Iteration   1: 200.129 ns/op
Iteration   2: 200.344 ns/op
Iteration   3: 200.507 ns/op
Iteration   4: 201.159 ns/op
Iteration   5: 200.721 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  200.572 ±(99.9%) 1.514 ns/op [Average]
  (min, avg, max) = (200.129, 200.572, 201.159), stdev = 0.393
  CI (99.9%): [199.059, 202.086] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 76.07% complete, ETA 00:11:39
# Fork: 1 of 1
# Warmup Iteration   1: 283.355 ns/op
# Warmup Iteration   2: 270.333 ns/op
# Warmup Iteration   3: 259.462 ns/op
# Warmup Iteration   4: 260.785 ns/op
# Warmup Iteration   5: 259.867 ns/op
Iteration   1: 259.785 ns/op
Iteration   2: 259.768 ns/op
Iteration   3: 263.424 ns/op
Iteration   4: 270.452 ns/op
Iteration   5: 252.492 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  261.184 ±(99.9%) 25.134 ns/op [Average]
  (min, avg, max) = (252.492, 261.184, 270.452), stdev = 6.527
  CI (99.9%): [236.050, 286.318] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 76.43% complete, ETA 00:11:29
# Fork: 1 of 1
# Warmup Iteration   1: 784.960 ns/op
# Warmup Iteration   2: 680.896 ns/op
# Warmup Iteration   3: 661.098 ns/op
# Warmup Iteration   4: 661.090 ns/op
# Warmup Iteration   5: 660.993 ns/op
Iteration   1: 662.478 ns/op
Iteration   2: 663.295 ns/op
Iteration   3: 661.471 ns/op
Iteration   4: 661.259 ns/op
Iteration   5: 669.678 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  663.636 ±(99.9%) 13.381 ns/op [Average]
  (min, avg, max) = (661.259, 663.636, 669.678), stdev = 3.475
  CI (99.9%): [650.256, 677.017] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 76.79% complete, ETA 00:11:19
# Fork: 1 of 1
# Warmup Iteration   1: 1307.362 ns/op
# Warmup Iteration   2: 1202.430 ns/op
# Warmup Iteration   3: 1190.658 ns/op
# Warmup Iteration   4: 1182.898 ns/op
# Warmup Iteration   5: 1186.470 ns/op
Iteration   1: 1187.842 ns/op
Iteration   2: 1185.685 ns/op
Iteration   3: 1195.621 ns/op
Iteration   4: 1183.215 ns/op
Iteration   5: 1184.997 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  1187.472 ±(99.9%) 18.666 ns/op [Average]
  (min, avg, max) = (1183.215, 1187.472, 1195.621), stdev = 4.847
  CI (99.9%): [1168.806, 1206.138] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 77.14% complete, ETA 00:11:08
# Fork: 1 of 1
# Warmup Iteration   1: 12118.335 ns/op
# Warmup Iteration   2: 11202.471 ns/op
# Warmup Iteration   3: 10956.666 ns/op
# Warmup Iteration   4: 10923.376 ns/op
# Warmup Iteration   5: 10948.892 ns/op
Iteration   1: 10905.265 ns/op
Iteration   2: 10946.922 ns/op
Iteration   3: 10978.332 ns/op
Iteration   4: 10984.560 ns/op
Iteration   5: 10937.467 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  10950.509 ±(99.9%) 124.232 ns/op [Average]
  (min, avg, max) = (10905.265, 10950.509, 10984.560), stdev = 32.263
  CI (99.9%): [10826.277, 11074.742] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 1)

# Run progress: 77.50% complete, ETA 00:10:58
# Fork: 1 of 1
# Warmup Iteration   1: 156.753 ns/op
# Warmup Iteration   2: 144.215 ns/op
# Warmup Iteration   3: 142.150 ns/op
# Warmup Iteration   4: 141.806 ns/op
# Warmup Iteration   5: 141.547 ns/op
Iteration   1: 141.220 ns/op
Iteration   2: 141.624 ns/op
Iteration   3: 141.011 ns/op
Iteration   4: 141.149 ns/op
Iteration   5: 142.917 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  141.584 ±(99.9%) 3.001 ns/op [Average]
  (min, avg, max) = (141.011, 141.584, 142.917), stdev = 0.779
  CI (99.9%): [138.583, 144.585] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 10)

# Run progress: 77.86% complete, ETA 00:10:47
# Fork: 1 of 1
# Warmup Iteration   1: 167.137 ns/op
# Warmup Iteration   2: 155.482 ns/op
# Warmup Iteration   3: 151.651 ns/op
# Warmup Iteration   4: 150.687 ns/op
# Warmup Iteration   5: 154.965 ns/op
Iteration   1: 152.876 ns/op
Iteration   2: 153.583 ns/op
Iteration   3: 153.364 ns/op
Iteration   4: 158.626 ns/op
Iteration   5: 152.485 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  154.187 ±(99.9%) 9.696 ns/op [Average]
  (min, avg, max) = (152.485, 154.187, 158.626), stdev = 2.518
  CI (99.9%): [144.492, 163.883] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 50)

# Run progress: 78.21% complete, ETA 00:10:37
# Fork: 1 of 1
# Warmup Iteration   1: 223.771 ns/op
# Warmup Iteration   2: 209.519 ns/op
# Warmup Iteration   3: 201.544 ns/op
# Warmup Iteration   4: 200.664 ns/op
# Warmup Iteration   5: 200.837 ns/op
Iteration   1: 200.419 ns/op
Iteration   2: 200.329 ns/op
Iteration   3: 200.200 ns/op
Iteration   4: 200.136 ns/op
Iteration   5: 200.039 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  200.225 ±(99.9%) 0.584 ns/op [Average]
  (min, avg, max) = (200.039, 200.225, 200.419), stdev = 0.152
  CI (99.9%): [199.641, 200.808] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 100)

# Run progress: 78.57% complete, ETA 00:10:26
# Fork: 1 of 1
# Warmup Iteration   1: 276.293 ns/op
# Warmup Iteration   2: 264.240 ns/op
# Warmup Iteration   3: 248.849 ns/op
# Warmup Iteration   4: 249.160 ns/op
# Warmup Iteration   5: 249.492 ns/op
Iteration   1: 249.326 ns/op
Iteration   2: 249.486 ns/op
Iteration   3: 249.267 ns/op
Iteration   4: 249.019 ns/op
Iteration   5: 249.748 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  249.369 ±(99.9%) 1.040 ns/op [Average]
  (min, avg, max) = (249.019, 249.369, 249.748), stdev = 0.270
  CI (99.9%): [248.330, 250.409] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 500)

# Run progress: 78.93% complete, ETA 00:10:16
# Fork: 1 of 1
# Warmup Iteration   1: 780.385 ns/op
# Warmup Iteration   2: 673.505 ns/op
# Warmup Iteration   3: 658.970 ns/op
# Warmup Iteration   4: 657.003 ns/op
# Warmup Iteration   5: 659.302 ns/op
Iteration   1: 658.390 ns/op
Iteration   2: 660.243 ns/op
Iteration   3: 658.986 ns/op
Iteration   4: 661.167 ns/op
Iteration   5: 662.905 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  660.338 ±(99.9%) 6.917 ns/op [Average]
  (min, avg, max) = (658.390, 660.338, 662.905), stdev = 1.796
  CI (99.9%): [653.421, 667.255] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 1000)

# Run progress: 79.29% complete, ETA 00:10:05
# Fork: 1 of 1
# Warmup Iteration   1: 1319.013 ns/op
# Warmup Iteration   2: 1266.218 ns/op
# Warmup Iteration   3: 1195.801 ns/op
# Warmup Iteration   4: 1195.835 ns/op
# Warmup Iteration   5: 1195.402 ns/op
Iteration   1: 1212.924 ns/op
Iteration   2: 1196.653 ns/op
Iteration   3: 1201.382 ns/op
Iteration   4: 1200.949 ns/op
Iteration   5: 1191.968 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  1200.775 ±(99.9%) 29.985 ns/op [Average]
  (min, avg, max) = (1191.968, 1200.775, 1212.924), stdev = 7.787
  CI (99.9%): [1170.790, 1230.760] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 10000)

# Run progress: 79.64% complete, ETA 00:09:55
# Fork: 1 of 1
# Warmup Iteration   1: 12251.025 ns/op
# Warmup Iteration   2: 11101.361 ns/op
# Warmup Iteration   3: 11068.528 ns/op
# Warmup Iteration   4: 10962.137 ns/op
# Warmup Iteration   5: 10977.699 ns/op
Iteration   1: 10999.946 ns/op
Iteration   2: 11029.573 ns/op
Iteration   3: 11021.716 ns/op
Iteration   4: 11025.016 ns/op
Iteration   5: 11025.731 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  11020.396 ±(99.9%) 45.316 ns/op [Average]
  (min, avg, max) = (10999.946, 11020.396, 11029.573), stdev = 11.768
  CI (99.9%): [10975.080, 11065.712] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 80.00% complete, ETA 00:09:44
# Fork: 1 of 1
# Warmup Iteration   1: 249.046 ns/op
# Warmup Iteration   2: 235.808 ns/op
# Warmup Iteration   3: 229.088 ns/op
# Warmup Iteration   4: 229.197 ns/op
# Warmup Iteration   5: 228.696 ns/op
Iteration   1: 229.239 ns/op
Iteration   2: 229.059 ns/op
Iteration   3: 228.956 ns/op
Iteration   4: 229.463 ns/op
Iteration   5: 226.705 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  228.684 ±(99.9%) 4.324 ns/op [Average]
  (min, avg, max) = (226.705, 228.684, 229.463), stdev = 1.123
  CI (99.9%): [224.361, 233.008] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 80.36% complete, ETA 00:09:34
# Fork: 1 of 1
# Warmup Iteration   1: 266.349 ns/op
# Warmup Iteration   2: 247.812 ns/op
# Warmup Iteration   3: 239.903 ns/op
# Warmup Iteration   4: 240.747 ns/op
# Warmup Iteration   5: 238.929 ns/op
Iteration   1: 239.360 ns/op
Iteration   2: 239.854 ns/op
Iteration   3: 239.600 ns/op
Iteration   4: 240.692 ns/op
Iteration   5: 240.294 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  239.960 ±(99.9%) 2.063 ns/op [Average]
  (min, avg, max) = (239.360, 239.960, 240.692), stdev = 0.536
  CI (99.9%): [237.897, 242.024] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 80.71% complete, ETA 00:09:24
# Fork: 1 of 1
# Warmup Iteration   1: 333.896 ns/op
# Warmup Iteration   2: 289.561 ns/op
# Warmup Iteration   3: 280.816 ns/op
# Warmup Iteration   4: 281.091 ns/op
# Warmup Iteration   5: 279.457 ns/op
Iteration   1: 285.585 ns/op
Iteration   2: 285.695 ns/op
Iteration   3: 281.187 ns/op
Iteration   4: 279.382 ns/op
Iteration   5: 280.717 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  282.513 ±(99.9%) 11.284 ns/op [Average]
  (min, avg, max) = (279.382, 282.513, 285.695), stdev = 2.930
  CI (99.9%): [271.230, 293.797] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 81.07% complete, ETA 00:09:13
# Fork: 1 of 1
# Warmup Iteration   1: 370.152 ns/op
# Warmup Iteration   2: 346.227 ns/op
# Warmup Iteration   3: 331.832 ns/op
# Warmup Iteration   4: 331.085 ns/op
# Warmup Iteration   5: 330.955 ns/op
Iteration   1: 331.021 ns/op
Iteration   2: 331.733 ns/op
Iteration   3: 333.197 ns/op
Iteration   4: 332.002 ns/op
Iteration   5: 330.666 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  331.724 ±(99.9%) 3.783 ns/op [Average]
  (min, avg, max) = (330.666, 331.724, 333.197), stdev = 0.982
  CI (99.9%): [327.940, 335.507] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 81.43% complete, ETA 00:09:03
# Fork: 1 of 1
# Warmup Iteration   1: 849.332 ns/op
# Warmup Iteration   2: 767.281 ns/op
# Warmup Iteration   3: 750.173 ns/op
# Warmup Iteration   4: 750.417 ns/op
# Warmup Iteration   5: 750.157 ns/op
Iteration   1: 750.473 ns/op
Iteration   2: 770.802 ns/op
Iteration   3: 751.080 ns/op
Iteration   4: 773.910 ns/op
Iteration   5: 748.394 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  758.932 ±(99.9%) 47.533 ns/op [Average]
  (min, avg, max) = (748.394, 758.932, 773.910), stdev = 12.344
  CI (99.9%): [711.399, 806.465] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 81.79% complete, ETA 00:08:52
# Fork: 1 of 1
# Warmup Iteration   1: 1497.297 ns/op
# Warmup Iteration   2: 1459.126 ns/op
# Warmup Iteration   3: 1401.509 ns/op
# Warmup Iteration   4: 1362.317 ns/op
# Warmup Iteration   5: 1362.758 ns/op
Iteration   1: 1362.449 ns/op
Iteration   2: 1363.716 ns/op
Iteration   3: 1372.218 ns/op
Iteration   4: 1367.348 ns/op
Iteration   5: 1364.211 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1365.988 ±(99.9%) 15.100 ns/op [Average]
  (min, avg, max) = (1362.449, 1365.988, 1372.218), stdev = 3.922
  CI (99.9%): [1350.888, 1381.089] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 82.14% complete, ETA 00:08:42
# Fork: 1 of 1
# Warmup Iteration   1: 12239.273 ns/op
# Warmup Iteration   2: 11285.443 ns/op
# Warmup Iteration   3: 11658.440 ns/op
# Warmup Iteration   4: 11138.474 ns/op
# Warmup Iteration   5: 11188.133 ns/op
Iteration   1: 11143.874 ns/op
Iteration   2: 11090.101 ns/op
Iteration   3: 11109.754 ns/op
Iteration   4: 11106.052 ns/op
Iteration   5: 11359.103 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  11161.777 ±(99.9%) 431.406 ns/op [Average]
  (min, avg, max) = (11090.101, 11161.777, 11359.103), stdev = 112.035
  CI (99.9%): [10730.371, 11593.183] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1)

# Run progress: 82.50% complete, ETA 00:08:31
# Fork: 1 of 1
# Warmup Iteration   1: 249.602 ns/op
# Warmup Iteration   2: 236.899 ns/op
# Warmup Iteration   3: 224.741 ns/op
# Warmup Iteration   4: 226.371 ns/op
# Warmup Iteration   5: 225.440 ns/op
Iteration   1: 226.003 ns/op
Iteration   2: 226.452 ns/op
Iteration   3: 224.900 ns/op
Iteration   4: 226.038 ns/op
Iteration   5: 229.113 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  226.501 ±(99.9%) 6.043 ns/op [Average]
  (min, avg, max) = (224.900, 226.501, 229.113), stdev = 1.569
  CI (99.9%): [220.458, 232.544] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10)

# Run progress: 82.86% complete, ETA 00:08:21
# Fork: 1 of 1
# Warmup Iteration   1: 264.079 ns/op
# Warmup Iteration   2: 243.343 ns/op
# Warmup Iteration   3: 242.573 ns/op
# Warmup Iteration   4: 237.331 ns/op
# Warmup Iteration   5: 237.236 ns/op
Iteration   1: 236.861 ns/op
Iteration   2: 236.184 ns/op
Iteration   3: 237.688 ns/op
Iteration   4: 238.244 ns/op
Iteration   5: 240.963 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  237.988 ±(99.9%) 7.082 ns/op [Average]
  (min, avg, max) = (236.184, 237.988, 240.963), stdev = 1.839
  CI (99.9%): [230.906, 245.070] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 50)

# Run progress: 83.21% complete, ETA 00:08:10
# Fork: 1 of 1
# Warmup Iteration   1: 323.010 ns/op
# Warmup Iteration   2: 294.763 ns/op
# Warmup Iteration   3: 287.341 ns/op
# Warmup Iteration   4: 286.286 ns/op
# Warmup Iteration   5: 285.408 ns/op
Iteration   1: 288.743 ns/op
Iteration   2: 285.912 ns/op
Iteration   3: 284.166 ns/op
Iteration   4: 284.231 ns/op
Iteration   5: 285.099 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  285.630 ±(99.9%) 7.243 ns/op [Average]
  (min, avg, max) = (284.166, 285.630, 288.743), stdev = 1.881
  CI (99.9%): [278.387, 292.874] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 100)

# Run progress: 83.57% complete, ETA 00:08:00
# Fork: 1 of 1
# Warmup Iteration   1: 369.473 ns/op
# Warmup Iteration   2: 342.562 ns/op
# Warmup Iteration   3: 331.832 ns/op
# Warmup Iteration   4: 330.068 ns/op
# Warmup Iteration   5: 331.390 ns/op
Iteration   1: 329.307 ns/op
Iteration   2: 328.467 ns/op
Iteration   3: 329.451 ns/op
Iteration   4: 331.902 ns/op
Iteration   5: 329.402 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  329.706 ±(99.9%) 4.974 ns/op [Average]
  (min, avg, max) = (328.467, 329.706, 331.902), stdev = 1.292
  CI (99.9%): [324.732, 334.680] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 500)

# Run progress: 83.93% complete, ETA 00:07:50
# Fork: 1 of 1
# Warmup Iteration   1: 845.593 ns/op
# Warmup Iteration   2: 763.210 ns/op
# Warmup Iteration   3: 747.902 ns/op
# Warmup Iteration   4: 745.707 ns/op
# Warmup Iteration   5: 746.396 ns/op
Iteration   1: 747.451 ns/op
Iteration   2: 746.748 ns/op
Iteration   3: 747.725 ns/op
Iteration   4: 747.737 ns/op
Iteration   5: 747.906 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  747.513 ±(99.9%) 1.763 ns/op [Average]
  (min, avg, max) = (746.748, 747.513, 747.906), stdev = 0.458
  CI (99.9%): [745.750, 749.276] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1000)

# Run progress: 84.29% complete, ETA 00:07:39
# Fork: 1 of 1
# Warmup Iteration   1: 1487.504 ns/op
# Warmup Iteration   2: 1397.282 ns/op
# Warmup Iteration   3: 1368.053 ns/op
# Warmup Iteration   4: 1364.579 ns/op
# Warmup Iteration   5: 1373.052 ns/op
Iteration   1: 1378.998 ns/op
Iteration   2: 1369.161 ns/op
Iteration   3: 1363.671 ns/op
Iteration   4: 1428.033 ns/op
Iteration   5: 1369.552 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1381.883 ±(99.9%) 101.582 ns/op [Average]
  (min, avg, max) = (1363.671, 1381.883, 1428.033), stdev = 26.380
  CI (99.9%): [1280.301, 1483.465] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10000)

# Run progress: 84.64% complete, ETA 00:07:29
# Fork: 1 of 1
# Warmup Iteration   1: 12445.525 ns/op
# Warmup Iteration   2: 11257.203 ns/op
# Warmup Iteration   3: 11124.183 ns/op
# Warmup Iteration   4: 11109.556 ns/op
# Warmup Iteration   5: 11087.056 ns/op
Iteration   1: 11224.977 ns/op
Iteration   2: 11140.370 ns/op
Iteration   3: 11182.650 ns/op
Iteration   4: 11117.597 ns/op
Iteration   5: 11126.289 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  11158.376 ±(99.9%) 172.654 ns/op [Average]
  (min, avg, max) = (11117.597, 11158.376, 11224.977), stdev = 44.838
  CI (99.9%): [10985.722, 11331.031] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 1)

# Run progress: 85.00% complete, ETA 00:07:18
# Fork: 1 of 1
# Warmup Iteration   1: 60.514 ns/op
# Warmup Iteration   2: 54.697 ns/op
# Warmup Iteration   3: 53.126 ns/op
# Warmup Iteration   4: 52.619 ns/op
# Warmup Iteration   5: 52.835 ns/op
Iteration   1: 52.533 ns/op
Iteration   2: 52.667 ns/op
Iteration   3: 54.819 ns/op
Iteration   4: 52.634 ns/op
Iteration   5: 55.678 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  53.666 ±(99.9%) 5.688 ns/op [Average]
  (min, avg, max) = (52.533, 53.666, 55.678), stdev = 1.477
  CI (99.9%): [47.979, 59.354] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 10)

# Run progress: 85.36% complete, ETA 00:07:08
# Fork: 1 of 1
# Warmup Iteration   1: 76.529 ns/op
# Warmup Iteration   2: 72.106 ns/op
# Warmup Iteration   3: 68.449 ns/op
# Warmup Iteration   4: 68.502 ns/op
# Warmup Iteration   5: 68.346 ns/op
Iteration   1: 69.596 ns/op
Iteration   2: 68.437 ns/op
Iteration   3: 68.313 ns/op
Iteration   4: 68.221 ns/op
Iteration   5: 68.240 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  68.561 ±(99.9%) 2.251 ns/op [Average]
  (min, avg, max) = (68.221, 68.561, 69.596), stdev = 0.585
  CI (99.9%): [66.310, 70.812] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 50)

# Run progress: 85.71% complete, ETA 00:06:57
# Fork: 1 of 1
# Warmup Iteration   1: 120.436 ns/op
# Warmup Iteration   2: 111.789 ns/op
# Warmup Iteration   3: 107.189 ns/op
# Warmup Iteration   4: 106.097 ns/op
# Warmup Iteration   5: 105.751 ns/op
Iteration   1: 106.204 ns/op
Iteration   2: 106.278 ns/op
Iteration   3: 105.854 ns/op
Iteration   4: 105.816 ns/op
Iteration   5: 105.909 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  106.012 ±(99.9%) 0.822 ns/op [Average]
  (min, avg, max) = (105.816, 106.012, 106.278), stdev = 0.213
  CI (99.9%): [105.191, 106.834] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 100)

# Run progress: 86.07% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: 176.201 ns/op
# Warmup Iteration   2: 161.424 ns/op
# Warmup Iteration   3: 155.118 ns/op
# Warmup Iteration   4: 154.824 ns/op
# Warmup Iteration   5: 154.639 ns/op
Iteration   1: 154.321 ns/op
Iteration   2: 154.519 ns/op
Iteration   3: 154.386 ns/op
Iteration   4: 154.411 ns/op
Iteration   5: 154.364 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  154.400 ±(99.9%) 0.285 ns/op [Average]
  (min, avg, max) = (154.321, 154.400, 154.519), stdev = 0.074
  CI (99.9%): [154.115, 154.685] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 500)

# Run progress: 86.43% complete, ETA 00:06:36
# Fork: 1 of 1
# Warmup Iteration   1: 622.493 ns/op
# Warmup Iteration   2: 570.612 ns/op
# Warmup Iteration   3: 562.742 ns/op
# Warmup Iteration   4: 562.198 ns/op
# Warmup Iteration   5: 560.947 ns/op
Iteration   1: 562.149 ns/op
Iteration   2: 562.267 ns/op
Iteration   3: 575.294 ns/op
Iteration   4: 561.794 ns/op
Iteration   5: 561.271 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  564.555 ±(99.9%) 23.165 ns/op [Average]
  (min, avg, max) = (561.271, 564.555, 575.294), stdev = 6.016
  CI (99.9%): [541.390, 587.720] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 86.79% complete, ETA 00:06:26
# Fork: 1 of 1
# Warmup Iteration   1: 1202.993 ns/op
# Warmup Iteration   2: 1098.785 ns/op
# Warmup Iteration   3: 1081.583 ns/op
# Warmup Iteration   4: 1080.441 ns/op
# Warmup Iteration   5: 1080.745 ns/op
Iteration   1: 1087.174 ns/op
Iteration   2: 1084.930 ns/op
Iteration   3: 1084.889 ns/op
Iteration   4: 1128.872 ns/op
Iteration   5: 1081.944 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  1093.562 ±(99.9%) 76.345 ns/op [Average]
  (min, avg, max) = (1081.944, 1093.562, 1128.872), stdev = 19.826
  CI (99.9%): [1017.217, 1169.906] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 87.14% complete, ETA 00:06:16
# Fork: 1 of 1
# Warmup Iteration   1: 11932.858 ns/op
# Warmup Iteration   2: 11164.846 ns/op
# Warmup Iteration   3: 10834.805 ns/op
# Warmup Iteration   4: 11430.409 ns/op
# Warmup Iteration   5: 10991.088 ns/op
Iteration   1: 10880.425 ns/op
Iteration   2: 10808.850 ns/op
Iteration   3: 10882.691 ns/op
Iteration   4: 10868.954 ns/op
Iteration   5: 10864.216 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  10861.027 ±(99.9%) 116.176 ns/op [Average]
  (min, avg, max) = (10808.850, 10861.027, 10882.691), stdev = 30.171
  CI (99.9%): [10744.851, 10977.203] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 1)

# Run progress: 87.50% complete, ETA 00:06:05
# Fork: 1 of 1
# Warmup Iteration   1: 62.273 ns/op
# Warmup Iteration   2: 56.207 ns/op
# Warmup Iteration   3: 53.853 ns/op
# Warmup Iteration   4: 53.676 ns/op
# Warmup Iteration   5: 54.948 ns/op
Iteration   1: 53.318 ns/op
Iteration   2: 53.368 ns/op
Iteration   3: 54.121 ns/op
Iteration   4: 53.341 ns/op
Iteration   5: 53.431 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  53.516 ±(99.9%) 1.312 ns/op [Average]
  (min, avg, max) = (53.318, 53.516, 54.121), stdev = 0.341
  CI (99.9%): [52.204, 54.828] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 10)

# Run progress: 87.86% complete, ETA 00:05:55
# Fork: 1 of 1
# Warmup Iteration   1: 74.610 ns/op
# Warmup Iteration   2: 71.713 ns/op
# Warmup Iteration   3: 67.695 ns/op
# Warmup Iteration   4: 67.618 ns/op
# Warmup Iteration   5: 67.229 ns/op
Iteration   1: 67.354 ns/op
Iteration   2: 68.585 ns/op
Iteration   3: 67.276 ns/op
Iteration   4: 67.536 ns/op
Iteration   5: 69.536 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  68.057 ±(99.9%) 3.774 ns/op [Average]
  (min, avg, max) = (67.276, 68.057, 69.536), stdev = 0.980
  CI (99.9%): [64.283, 71.832] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 50)

# Run progress: 88.21% complete, ETA 00:05:44
# Fork: 1 of 1
# Warmup Iteration   1: 119.847 ns/op
# Warmup Iteration   2: 111.586 ns/op
# Warmup Iteration   3: 110.098 ns/op
# Warmup Iteration   4: 109.342 ns/op
# Warmup Iteration   5: 107.803 ns/op
Iteration   1: 107.517 ns/op
Iteration   2: 107.611 ns/op
Iteration   3: 108.087 ns/op
Iteration   4: 107.610 ns/op
Iteration   5: 106.988 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  107.562 ±(99.9%) 1.505 ns/op [Average]
  (min, avg, max) = (106.988, 107.562, 108.087), stdev = 0.391
  CI (99.9%): [106.057, 109.067] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 100)

# Run progress: 88.57% complete, ETA 00:05:34
# Fork: 1 of 1
# Warmup Iteration   1: 175.468 ns/op
# Warmup Iteration   2: 159.853 ns/op
# Warmup Iteration   3: 156.154 ns/op
# Warmup Iteration   4: 156.643 ns/op
# Warmup Iteration   5: 156.488 ns/op
Iteration   1: 156.225 ns/op
Iteration   2: 161.456 ns/op
Iteration   3: 156.176 ns/op
Iteration   4: 164.503 ns/op
Iteration   5: 155.738 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  158.820 ±(99.9%) 15.218 ns/op [Average]
  (min, avg, max) = (155.738, 158.820, 164.503), stdev = 3.952
  CI (99.9%): [143.602, 174.038] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 500)

# Run progress: 88.93% complete, ETA 00:05:23
# Fork: 1 of 1
# Warmup Iteration   1: 630.350 ns/op
# Warmup Iteration   2: 574.595 ns/op
# Warmup Iteration   3: 560.987 ns/op
# Warmup Iteration   4: 559.358 ns/op
# Warmup Iteration   5: 559.863 ns/op
Iteration   1: 558.747 ns/op
Iteration   2: 574.328 ns/op
Iteration   3: 563.720 ns/op
Iteration   4: 561.403 ns/op
Iteration   5: 559.292 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  563.498 ±(99.9%) 24.504 ns/op [Average]
  (min, avg, max) = (558.747, 563.498, 574.328), stdev = 6.364
  CI (99.9%): [538.994, 588.002] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 1000)

# Run progress: 89.29% complete, ETA 00:05:13
# Fork: 1 of 1
# Warmup Iteration   1: 1212.013 ns/op
# Warmup Iteration   2: 1110.132 ns/op
# Warmup Iteration   3: 1092.525 ns/op
# Warmup Iteration   4: 1090.124 ns/op
# Warmup Iteration   5: 1092.379 ns/op
Iteration   1: 1113.807 ns/op
Iteration   2: 1098.743 ns/op
Iteration   3: 1100.567 ns/op
Iteration   4: 1099.733 ns/op
Iteration   5: 1102.969 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  1103.164 ±(99.9%) 23.687 ns/op [Average]
  (min, avg, max) = (1098.743, 1103.164, 1113.807), stdev = 6.152
  CI (99.9%): [1079.476, 1126.851] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 10000)

# Run progress: 89.64% complete, ETA 00:05:02
# Fork: 1 of 1
# Warmup Iteration   1: 12447.925 ns/op
# Warmup Iteration   2: 11031.281 ns/op
# Warmup Iteration   3: 10820.999 ns/op
# Warmup Iteration   4: 10779.285 ns/op
# Warmup Iteration   5: 10773.911 ns/op
Iteration   1: 10801.650 ns/op
Iteration   2: 11080.643 ns/op
Iteration   3: 10797.191 ns/op
Iteration   4: 10803.132 ns/op
Iteration   5: 10756.146 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  10847.752 ±(99.9%) 506.848 ns/op [Average]
  (min, avg, max) = (10756.146, 10847.752, 11080.643), stdev = 131.627
  CI (99.9%): [10340.904, 11354.601] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = fixed, length = 1)

# Run progress: 90.00% complete, ETA 00:04:52
# Fork: 1 of 1
# Warmup Iteration   1: 119.715 ns/op
# Warmup Iteration   2: 113.065 ns/op
# Warmup Iteration   3: 106.514 ns/op
# Warmup Iteration   4: 103.933 ns/op
# Warmup Iteration   5: 104.178 ns/op
Iteration   1: 102.878 ns/op
Iteration   2: 102.982 ns/op
Iteration   3: 104.592 ns/op
Iteration   4: 103.091 ns/op
Iteration   5: 103.677 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  103.444 ±(99.9%) 2.744 ns/op [Average]
  (min, avg, max) = (102.878, 103.444, 104.592), stdev = 0.713
  CI (99.9%): [100.700, 106.187] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = fixed, length = 10)

# Run progress: 90.36% complete, ETA 00:04:42
# Fork: 1 of 1
# Warmup Iteration   1: 281.727 ns/op
# Warmup Iteration   2: 259.435 ns/op
# Warmup Iteration   3: 247.042 ns/op
# Warmup Iteration   4: 249.404 ns/op
# Warmup Iteration   5: 247.543 ns/op
Iteration   1: 248.635 ns/op
Iteration   2: 246.450 ns/op
Iteration   3: 245.551 ns/op
Iteration   4: 246.956 ns/op
Iteration   5: 244.308 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  246.380 ±(99.9%) 6.211 ns/op [Average]
  (min, avg, max) = (244.308, 246.380, 248.635), stdev = 1.613
  CI (99.9%): [240.169, 252.591] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = fixed, length = 50)

# Run progress: 90.71% complete, ETA 00:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 2856.885 ns/op
# Warmup Iteration   2: 2844.413 ns/op
# Warmup Iteration   3: 2757.963 ns/op
# Warmup Iteration   4: 2746.627 ns/op
# Warmup Iteration   5: 2668.977 ns/op
Iteration   1: 2673.681 ns/op
Iteration   2: 2678.933 ns/op
Iteration   3: 2687.314 ns/op
Iteration   4: 2682.942 ns/op
Iteration   5: 2682.220 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  2681.018 ±(99.9%) 19.537 ns/op [Average]
  (min, avg, max) = (2673.681, 2681.018, 2687.314), stdev = 5.074
  CI (99.9%): [2661.482, 2700.555] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = fixed, length = 100)

# Run progress: 91.07% complete, ETA 00:04:21
# Fork: 1 of 1
# Warmup Iteration   1: 5098.448 ns/op
# Warmup Iteration   2: 5003.226 ns/op
# Warmup Iteration   3: 4973.258 ns/op
# Warmup Iteration   4: 4891.244 ns/op
# Warmup Iteration   5: 4851.386 ns/op
Iteration   1: 4856.874 ns/op
Iteration   2: 4844.084 ns/op
Iteration   3: 4846.212 ns/op
Iteration   4: 4858.393 ns/op
Iteration   5: 4844.174 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  4849.947 ±(99.9%) 27.293 ns/op [Average]
  (min, avg, max) = (4844.084, 4849.947, 4858.393), stdev = 7.088
  CI (99.9%): [4822.654, 4877.241] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = fixed, length = 500)

# Run progress: 91.43% complete, ETA 00:04:10
# Fork: 1 of 1
# Warmup Iteration   1: 22268.351 ns/op
# Warmup Iteration   2: 21715.197 ns/op
# Warmup Iteration   3: 21771.985 ns/op
# Warmup Iteration   4: 21501.456 ns/op
# Warmup Iteration   5: 21305.840 ns/op
Iteration   1: 21210.639 ns/op
Iteration   2: 21162.845 ns/op
Iteration   3: 21315.412 ns/op
Iteration   4: 21316.989 ns/op
Iteration   5: 21287.674 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  21258.712 ±(99.9%) 265.047 ns/op [Average]
  (min, avg, max) = (21162.845, 21258.712, 21316.989), stdev = 68.832
  CI (99.9%): [20993.664, 21523.759] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 91.79% complete, ETA 00:04:00
# Fork: 1 of 1
# Warmup Iteration   1: 44477.885 ns/op
# Warmup Iteration   2: 43581.296 ns/op
# Warmup Iteration   3: 44330.378 ns/op
# Warmup Iteration   4: 43317.681 ns/op
# Warmup Iteration   5: 43144.984 ns/op
Iteration   1: 43172.695 ns/op
Iteration   2: 42831.519 ns/op
Iteration   3: 42931.043 ns/op
Iteration   4: 43122.599 ns/op
Iteration   5: 42969.652 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  43005.502 ±(99.9%) 540.343 ns/op [Average]
  (min, avg, max) = (42831.519, 43005.502, 43172.695), stdev = 140.325
  CI (99.9%): [42465.159, 43545.845] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 92.14% complete, ETA 00:03:49
# Fork: 1 of 1
# Warmup Iteration   1: 440984.779 ns/op
# Warmup Iteration   2: 435569.068 ns/op
# Warmup Iteration   3: 438885.430 ns/op
# Warmup Iteration   4: 435512.518 ns/op
# Warmup Iteration   5: 431679.374 ns/op
Iteration   1: 432600.176 ns/op
Iteration   2: 434131.740 ns/op
Iteration   3: 432039.547 ns/op
Iteration   4: 439014.856 ns/op
Iteration   5: 433665.032 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  434290.270 ±(99.9%) 10660.781 ns/op [Average]
  (min, avg, max) = (432039.547, 434290.270, 439014.856), stdev = 2768.571
  CI (99.9%): [423629.489, 444951.051] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = random, length = 1)

# Run progress: 92.50% complete, ETA 00:03:39
# Fork: 1 of 1
# Warmup Iteration   1: 116.930 ns/op
# Warmup Iteration   2: 107.304 ns/op
# Warmup Iteration   3: 103.740 ns/op
# Warmup Iteration   4: 103.490 ns/op
# Warmup Iteration   5: 103.231 ns/op
Iteration   1: 102.848 ns/op
Iteration   2: 102.797 ns/op
Iteration   3: 102.976 ns/op
Iteration   4: 102.471 ns/op
Iteration   5: 102.716 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  102.762 ±(99.9%) 0.723 ns/op [Average]
  (min, avg, max) = (102.471, 102.762, 102.976), stdev = 0.188
  CI (99.9%): [102.038, 103.485] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = random, length = 10)

# Run progress: 92.86% complete, ETA 00:03:28
# Fork: 1 of 1
# Warmup Iteration   1: 284.115 ns/op
# Warmup Iteration   2: 256.287 ns/op
# Warmup Iteration   3: 248.359 ns/op
# Warmup Iteration   4: 248.864 ns/op
# Warmup Iteration   5: 253.502 ns/op
Iteration   1: 250.383 ns/op
Iteration   2: 249.157 ns/op
Iteration   3: 258.336 ns/op
Iteration   4: 249.190 ns/op
Iteration   5: 250.393 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  251.492 ±(99.9%) 14.917 ns/op [Average]
  (min, avg, max) = (249.157, 251.492, 258.336), stdev = 3.874
  CI (99.9%): [236.575, 266.409] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = random, length = 50)

# Run progress: 93.21% complete, ETA 00:03:18
# Fork: 1 of 1
# Warmup Iteration   1: 2888.457 ns/op
# Warmup Iteration   2: 2785.135 ns/op
# Warmup Iteration   3: 2792.015 ns/op
# Warmup Iteration   4: 2716.727 ns/op
# Warmup Iteration   5: 2692.062 ns/op
Iteration   1: 2707.805 ns/op
Iteration   2: 2685.788 ns/op
Iteration   3: 2695.041 ns/op
Iteration   4: 2692.609 ns/op
Iteration   5: 2695.736 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  2695.396 ±(99.9%) 30.704 ns/op [Average]
  (min, avg, max) = (2685.788, 2695.396, 2707.805), stdev = 7.974
  CI (99.9%): [2664.692, 2726.100] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = random, length = 100)

# Run progress: 93.57% complete, ETA 00:03:08
# Fork: 1 of 1
# Warmup Iteration   1: 5105.957 ns/op
# Warmup Iteration   2: 4954.249 ns/op
# Warmup Iteration   3: 4990.409 ns/op
# Warmup Iteration   4: 5006.669 ns/op
# Warmup Iteration   5: 4854.801 ns/op
Iteration   1: 4853.880 ns/op
Iteration   2: 4851.430 ns/op
Iteration   3: 4848.490 ns/op
Iteration   4: 4876.188 ns/op
Iteration   5: 4872.653 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  4860.528 ±(99.9%) 49.617 ns/op [Average]
  (min, avg, max) = (4848.490, 4860.528, 4876.188), stdev = 12.885
  CI (99.9%): [4810.912, 4910.145] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = random, length = 500)

# Run progress: 93.93% complete, ETA 00:02:57
# Fork: 1 of 1
# Warmup Iteration   1: 22141.932 ns/op
# Warmup Iteration   2: 21504.497 ns/op
# Warmup Iteration   3: 21780.641 ns/op
# Warmup Iteration   4: 21447.902 ns/op
# Warmup Iteration   5: 21441.411 ns/op
Iteration   1: 21293.970 ns/op
Iteration   2: 21188.988 ns/op
Iteration   3: 21252.185 ns/op
Iteration   4: 21214.852 ns/op
Iteration   5: 21153.977 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  21220.794 ±(99.9%) 209.600 ns/op [Average]
  (min, avg, max) = (21153.977, 21220.794, 21293.970), stdev = 54.432
  CI (99.9%): [21011.194, 21430.394] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = random, length = 1000)

# Run progress: 94.29% complete, ETA 00:02:47
# Fork: 1 of 1
# Warmup Iteration   1: 44362.358 ns/op
# Warmup Iteration   2: 43578.688 ns/op
# Warmup Iteration   3: 44108.045 ns/op
# Warmup Iteration   4: 43353.176 ns/op
# Warmup Iteration   5: 42911.743 ns/op
Iteration   1: 43172.524 ns/op
Iteration   2: 42979.513 ns/op
Iteration   3: 43047.204 ns/op
Iteration   4: 43138.198 ns/op
Iteration   5: 42954.033 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  43058.294 ±(99.9%) 368.501 ns/op [Average]
  (min, avg, max) = (42954.033, 43058.294, 43172.524), stdev = 95.699
  CI (99.9%): [42689.793, 43426.796] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd
# Parameters: (dataset = random, length = 10000)

# Run progress: 94.64% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 449327.791 ns/op
# Warmup Iteration   2: 438861.151 ns/op
# Warmup Iteration   3: 440299.156 ns/op
# Warmup Iteration   4: 436733.844 ns/op
# Warmup Iteration   5: 432847.497 ns/op
Iteration   1: 433271.125 ns/op
Iteration   2: 432503.334 ns/op
Iteration   3: 432838.562 ns/op
Iteration   4: 436398.051 ns/op
Iteration   5: 434155.832 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimd":
  433833.381 ±(99.9%) 6013.767 ns/op [Average]
  (min, avg, max) = (432503.334, 433833.381, 436398.051), stdev = 1561.756
  CI (99.9%): [427819.614, 439847.148] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = fixed, length = 1)

# Run progress: 95.00% complete, ETA 00:02:26
# Fork: 1 of 1
# Warmup Iteration   1: 57.975 ns/op
# Warmup Iteration   2: 53.204 ns/op
# Warmup Iteration   3: 49.831 ns/op
# Warmup Iteration   4: 50.437 ns/op
# Warmup Iteration   5: 49.397 ns/op
Iteration   1: 49.384 ns/op
Iteration   2: 49.318 ns/op
Iteration   3: 49.199 ns/op
Iteration   4: 49.346 ns/op
Iteration   5: 48.980 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  49.246 ±(99.9%) 0.631 ns/op [Average]
  (min, avg, max) = (48.980, 49.246, 49.384), stdev = 0.164
  CI (99.9%): [48.615, 49.876] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = fixed, length = 10)

# Run progress: 95.36% complete, ETA 00:02:15
# Fork: 1 of 1
# Warmup Iteration   1: 70.526 ns/op
# Warmup Iteration   2: 66.531 ns/op
# Warmup Iteration   3: 63.173 ns/op
# Warmup Iteration   4: 62.921 ns/op
# Warmup Iteration   5: 63.017 ns/op
Iteration   1: 63.030 ns/op
Iteration   2: 63.060 ns/op
Iteration   3: 63.155 ns/op
Iteration   4: 62.977 ns/op
Iteration   5: 64.568 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  63.358 ±(99.9%) 2.616 ns/op [Average]
  (min, avg, max) = (62.977, 63.358, 64.568), stdev = 0.679
  CI (99.9%): [60.742, 65.974] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = fixed, length = 50)

# Run progress: 95.71% complete, ETA 00:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 87.741 ns/op
# Warmup Iteration   2: 79.746 ns/op
# Warmup Iteration   3: 77.093 ns/op
# Warmup Iteration   4: 75.361 ns/op
# Warmup Iteration   5: 75.237 ns/op
Iteration   1: 75.605 ns/op
Iteration   2: 75.725 ns/op
Iteration   3: 75.688 ns/op
Iteration   4: 75.362 ns/op
Iteration   5: 75.645 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  75.605 ±(99.9%) 0.550 ns/op [Average]
  (min, avg, max) = (75.362, 75.605, 75.725), stdev = 0.143
  CI (99.9%): [75.055, 76.155] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = fixed, length = 100)

# Run progress: 96.07% complete, ETA 00:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 111.271 ns/op
# Warmup Iteration   2: 95.089 ns/op
# Warmup Iteration   3: 97.502 ns/op
# Warmup Iteration   4: 94.846 ns/op
# Warmup Iteration   5: 95.047 ns/op
Iteration   1: 94.422 ns/op
Iteration   2: 94.708 ns/op
Iteration   3: 95.883 ns/op
Iteration   4: 94.426 ns/op
Iteration   5: 91.771 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  94.242 ±(99.9%) 5.802 ns/op [Average]
  (min, avg, max) = (91.771, 94.242, 95.883), stdev = 1.507
  CI (99.9%): [88.440, 100.044] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = fixed, length = 500)

# Run progress: 96.43% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: 229.204 ns/op
# Warmup Iteration   2: 195.448 ns/op
# Warmup Iteration   3: 188.224 ns/op
# Warmup Iteration   4: 187.551 ns/op
# Warmup Iteration   5: 188.750 ns/op
Iteration   1: 195.111 ns/op
Iteration   2: 188.434 ns/op
Iteration   3: 195.896 ns/op
Iteration   4: 188.147 ns/op
Iteration   5: 188.649 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  191.247 ±(99.9%) 15.015 ns/op [Average]
  (min, avg, max) = (188.147, 191.247, 195.896), stdev = 3.899
  CI (99.9%): [176.233, 206.262] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 96.79% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 430.813 ns/op
# Warmup Iteration   2: 366.464 ns/op
# Warmup Iteration   3: 352.798 ns/op
# Warmup Iteration   4: 368.300 ns/op
# Warmup Iteration   5: 348.987 ns/op
Iteration   1: 353.531 ns/op
Iteration   2: 352.487 ns/op
Iteration   3: 354.288 ns/op
Iteration   4: 352.559 ns/op
Iteration   5: 360.429 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  354.659 ±(99.9%) 12.747 ns/op [Average]
  (min, avg, max) = (352.487, 354.659, 360.429), stdev = 3.310
  CI (99.9%): [341.912, 367.406] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 97.14% complete, ETA 00:01:23
# Fork: 1 of 1
# Warmup Iteration   1: 4076.274 ns/op
# Warmup Iteration   2: 3362.979 ns/op
# Warmup Iteration   3: 3335.872 ns/op
# Warmup Iteration   4: 3303.546 ns/op
# Warmup Iteration   5: 3308.060 ns/op
Iteration   1: 3320.330 ns/op
Iteration   2: 3303.732 ns/op
Iteration   3: 3418.719 ns/op
Iteration   4: 3387.741 ns/op
Iteration   5: 3404.960 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  3367.096 ±(99.9%) 199.407 ns/op [Average]
  (min, avg, max) = (3303.732, 3367.096, 3418.719), stdev = 51.785
  CI (99.9%): [3167.690, 3566.503] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = random, length = 1)

# Run progress: 97.50% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 55.168 ns/op
# Warmup Iteration   2: 51.607 ns/op
# Warmup Iteration   3: 49.490 ns/op
# Warmup Iteration   4: 50.669 ns/op
# Warmup Iteration   5: 50.740 ns/op
Iteration   1: 50.166 ns/op
Iteration   2: 50.231 ns/op
Iteration   3: 50.104 ns/op
Iteration   4: 49.968 ns/op
Iteration   5: 50.510 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  50.196 ±(99.9%) 0.773 ns/op [Average]
  (min, avg, max) = (49.968, 50.196, 50.510), stdev = 0.201
  CI (99.9%): [49.423, 50.969] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = random, length = 10)

# Run progress: 97.86% complete, ETA 00:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 70.848 ns/op
# Warmup Iteration   2: 65.459 ns/op
# Warmup Iteration   3: 64.894 ns/op
# Warmup Iteration   4: 65.497 ns/op
# Warmup Iteration   5: 65.684 ns/op
Iteration   1: 67.442 ns/op
Iteration   2: 65.360 ns/op
Iteration   3: 65.551 ns/op
Iteration   4: 65.091 ns/op
Iteration   5: 65.190 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  65.727 ±(99.9%) 3.752 ns/op [Average]
  (min, avg, max) = (65.091, 65.727, 67.442), stdev = 0.974
  CI (99.9%): [61.975, 69.479] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = random, length = 50)

# Run progress: 98.21% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 89.723 ns/op
# Warmup Iteration   2: 78.288 ns/op
# Warmup Iteration   3: 76.787 ns/op
# Warmup Iteration   4: 75.678 ns/op
# Warmup Iteration   5: 76.251 ns/op
Iteration   1: 75.921 ns/op
Iteration   2: 77.947 ns/op
Iteration   3: 75.930 ns/op
Iteration   4: 75.826 ns/op
Iteration   5: 79.431 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  77.011 ±(99.9%) 6.237 ns/op [Average]
  (min, avg, max) = (75.826, 77.011, 79.431), stdev = 1.620
  CI (99.9%): [70.774, 83.248] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = random, length = 100)

# Run progress: 98.57% complete, ETA 00:00:41
# Fork: 1 of 1
# Warmup Iteration   1: 109.239 ns/op
# Warmup Iteration   2: 96.829 ns/op
# Warmup Iteration   3: 95.139 ns/op
# Warmup Iteration   4: 93.206 ns/op
# Warmup Iteration   5: 92.902 ns/op
Iteration   1: 93.150 ns/op
Iteration   2: 92.996 ns/op
Iteration   3: 94.047 ns/op
Iteration   4: 94.016 ns/op
Iteration   5: 91.567 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  93.155 ±(99.9%) 3.892 ns/op [Average]
  (min, avg, max) = (91.567, 93.155, 94.047), stdev = 1.011
  CI (99.9%): [89.264, 97.047] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = random, length = 500)

# Run progress: 98.93% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 224.823 ns/op
# Warmup Iteration   2: 190.258 ns/op
# Warmup Iteration   3: 185.206 ns/op
# Warmup Iteration   4: 186.904 ns/op
# Warmup Iteration   5: 185.317 ns/op
Iteration   1: 187.521 ns/op
Iteration   2: 184.439 ns/op
Iteration   3: 184.450 ns/op
Iteration   4: 189.446 ns/op
Iteration   5: 190.574 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  187.286 ±(99.9%) 10.837 ns/op [Average]
  (min, avg, max) = (184.439, 187.286, 190.574), stdev = 2.814
  CI (99.9%): [176.449, 198.123] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = random, length = 1000)

# Run progress: 99.29% complete, ETA 00:00:20
# Fork: 1 of 1
# Warmup Iteration   1: 430.031 ns/op
# Warmup Iteration   2: 361.350 ns/op
# Warmup Iteration   3: 357.426 ns/op
# Warmup Iteration   4: 361.011 ns/op
# Warmup Iteration   5: 357.219 ns/op
Iteration   1: 355.099 ns/op
Iteration   2: 352.879 ns/op
Iteration   3: 355.716 ns/op
Iteration   4: 357.349 ns/op
Iteration   5: 352.091 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  354.627 ±(99.9%) 8.237 ns/op [Average]
  (min, avg, max) = (352.091, 354.627, 357.349), stdev = 2.139
  CI (99.9%): [346.390, 362.864] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64:/home/dkomanov/src/dkomanov/stuff/../rust-stuff/target/release
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.64% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 4086.320 ns/op
# Warmup Iteration   2: 3353.836 ns/op
# Warmup Iteration   3: 3326.362 ns/op
# Warmup Iteration   4: 3334.864 ns/op
# Warmup Iteration   5: 3333.334 ns/op
Iteration   1: 3316.677 ns/op
Iteration   2: 3316.855 ns/op
Iteration   3: 3322.113 ns/op
Iteration   4: 3319.791 ns/op
Iteration   5: 3408.708 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeSimdCargo":
  3336.829 ±(99.9%) 154.967 ns/op [Average]
  (min, avg, max) = (3316.677, 3336.829, 3408.708), stdev = 40.245
  CI (99.9%): [3181.861, 3491.796] (assumes normal distribution)


# Run complete. Total time: 00:48:44

Benchmark                                                       (dataset)  (length)  Mode  Cnt       Score       Error  Units
Base64JniBenchmarks.jdk_url_decode                                  fixed         1  avgt    5      32.261 ±     0.058  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed        10  avgt    5      52.165 ±     1.660  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed        50  avgt    5     133.914 ±     1.108  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed       100  avgt    5     232.112 ±     3.565  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed       500  avgt    5     973.504 ±     6.623  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed      1000  avgt    5    1932.961 ±    83.537  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed     10000  avgt    5   19530.268 ±   590.507  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random         1  avgt    5      32.594 ±     0.197  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random        10  avgt    5      53.476 ±     0.201  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random        50  avgt    5     129.308 ±     0.361  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random       100  avgt    5     233.406 ±    11.803  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random       500  avgt    5     971.815 ±     5.610  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random      1000  avgt    5    1913.533 ±    12.935  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random     10000  avgt    5   19459.235 ±   181.375  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed         1  avgt    5      23.037 ±     1.780  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed        10  avgt    5      46.815 ±     0.433  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed        50  avgt    5      86.023 ±     1.268  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed       100  avgt    5     128.376 ±     1.148  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed       500  avgt    5     442.988 ±    10.537  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed      1000  avgt    5     880.180 ±     2.357  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed     10000  avgt    5    9283.541 ±    68.965  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random         1  avgt    5      22.928 ±     1.229  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random        10  avgt    5      47.112 ±     0.548  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random        50  avgt    5      86.129 ±     1.649  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random       100  avgt    5     128.576 ±     3.784  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random       500  avgt    5     450.760 ±    29.946  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random      1000  avgt    5     862.301 ±    22.035  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random     10000  avgt    5    9312.859 ±   242.959  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed         1  avgt    5     454.530 ±    26.697  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed        10  avgt    5     420.099 ±     2.144  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed        50  avgt    5     503.044 ±    20.493  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed       100  avgt    5     662.213 ±    30.668  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed       500  avgt    5    1114.723 ±    23.251  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed      1000  avgt    5    1778.687 ±    32.655  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed     10000  avgt    5   12403.311 ±    99.469  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random         1  avgt    5     446.120 ±     4.142  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random        10  avgt    5     429.525 ±    12.082  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random        50  avgt    5     502.191 ±     5.772  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random       100  avgt    5     638.453 ±    12.977  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random       500  avgt    5    1118.850 ±    99.399  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random      1000  avgt    5    1790.715 ±    25.318  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random     10000  avgt    5   12541.171 ±   119.797  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed         1  avgt    5     428.765 ±     3.398  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed        10  avgt    5     400.632 ±     6.850  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed        50  avgt    5     468.572 ±     2.471  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed       100  avgt    5     538.772 ±     4.381  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed       500  avgt    5    1024.248 ±    13.106  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed      1000  avgt    5    1773.033 ±    32.938  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed     10000  avgt    5   12355.233 ±   620.308  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random         1  avgt    5     426.145 ±    27.477  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random        10  avgt    5     396.828 ±     2.666  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random        50  avgt    5     469.415 ±    20.159  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random       100  avgt    5     539.739 ±     7.723  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random       500  avgt    5    1004.027 ±     3.840  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random      1000  avgt    5    1783.655 ±    17.368  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random     10000  avgt    5   12281.377 ±    93.112  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed         1  avgt    5     390.491 ±    14.498  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed        10  avgt    5     366.070 ±    12.426  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed        50  avgt    5     439.038 ±    13.036  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed       100  avgt    5     505.095 ±    44.893  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed       500  avgt    5     994.965 ±   108.734  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed      1000  avgt    5    1744.814 ±    16.542  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed     10000  avgt    5   12252.848 ±    40.396  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random         1  avgt    5     387.354 ±     3.880  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random        10  avgt    5     362.981 ±     3.549  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random        50  avgt    5     441.415 ±     7.705  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random       100  avgt    5     505.534 ±     7.165  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random       500  avgt    5     975.426 ±     6.288  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random      1000  avgt    5    1762.588 ±    86.949  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random     10000  avgt    5   12316.667 ±   337.053  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed         1  avgt    5     344.372 ±     2.253  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed        10  avgt    5     320.277 ±     3.662  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed        50  avgt    5     392.219 ±     1.930  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed       100  avgt    5     455.117 ±     3.990  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed       500  avgt    5     904.545 ±     6.124  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed      1000  avgt    5    1569.830 ±    33.294  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed     10000  avgt    5   11942.370 ±   330.573  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random         1  avgt    5     349.994 ±    13.169  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random        10  avgt    5     324.653 ±     9.799  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random        50  avgt    5     395.382 ±    31.618  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random       100  avgt    5     453.441 ±     6.119  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random       500  avgt    5     897.328 ±     7.969  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random      1000  avgt    5    1599.359 ±     6.107  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random     10000  avgt    5   11918.281 ±   490.235  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed         1  avgt    5     367.476 ±     8.220  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed        10  avgt    5     352.637 ±    32.295  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed        50  avgt    5     433.632 ±     4.454  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed       100  avgt    5     506.076 ±     5.490  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed       500  avgt    5     962.083 ±    13.080  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed      1000  avgt    5    1636.471 ±    62.446  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed     10000  avgt    5   12318.419 ±   283.668  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random         1  avgt    5     330.075 ±     1.929  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random        10  avgt    5     357.699 ±     2.172  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random        50  avgt    5     430.467 ±     2.689  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random       100  avgt    5     507.583 ±     9.173  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random       500  avgt    5     973.726 ±     9.386  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random      1000  avgt    5    1644.775 ±    27.943  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random     10000  avgt    5   12212.385 ±   449.465  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed         1  avgt    5     234.192 ±    10.096  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed        10  avgt    5     254.985 ±     2.551  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed        50  avgt    5     327.848 ±     2.083  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed       100  avgt    5     378.639 ±     3.030  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed       500  avgt    5     833.686 ±     4.446  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed      1000  avgt    5    1545.809 ±    83.812  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed     10000  avgt    5   12322.464 ±    91.313  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random         1  avgt    5     232.714 ±     2.724  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random        10  avgt    5     261.132 ±    13.458  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random        50  avgt    5     329.503 ±    15.979  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random       100  avgt    5     380.451 ±     2.481  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random       500  avgt    5     837.131 ±     5.838  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random      1000  avgt    5    1524.587 ±    32.731  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random     10000  avgt    5   12316.025 ±   136.161  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed         1  avgt    5     144.330 ±     4.680  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed        10  avgt    5     178.244 ±    11.446  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed        50  avgt    5     241.677 ±    12.836  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed       100  avgt    5     292.331 ±     4.535  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed       500  avgt    5     744.310 ±     7.786  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed      1000  avgt    5    1452.657 ±    11.201  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed     10000  avgt    5   12071.756 ±   134.344  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random         1  avgt    5     150.012 ±     9.683  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random        10  avgt    5     176.600 ±    15.447  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random        50  avgt    5     277.359 ±     2.272  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random       100  avgt    5     309.063 ±    31.053  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random       500  avgt    5     739.162 ±    21.191  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random      1000  avgt    5    1431.783 ±    33.189  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random     10000  avgt    5   12045.525 ±   114.660  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed         1  avgt    5      64.040 ±     2.548  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed        10  avgt    5      87.030 ±     1.703  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed        50  avgt    5     132.581 ±     1.932  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed       100  avgt    5     182.863 ±    26.261  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed       500  avgt    5     625.604 ±     5.139  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed      1000  avgt    5    1221.930 ±    56.972  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed     10000  avgt    5   11841.998 ±    60.984  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random         1  avgt    5      63.132 ±     2.971  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random        10  avgt    5      87.888 ±     7.038  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random        50  avgt    5     132.972 ±     2.132  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random       100  avgt    5     181.868 ±     6.629  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random       500  avgt    5     624.731 ±     7.767  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random      1000  avgt    5    1206.813 ±     4.861  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random     10000  avgt    5   11801.534 ±    64.915  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                              fixed         1  avgt    5     114.930 ±     3.911  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                              fixed        10  avgt    5     279.449 ±    20.065  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                              fixed        50  avgt    5    1566.206 ±    96.158  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                              fixed       100  avgt    5    4107.847 ±   145.453  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                              fixed       500  avgt    5   19555.857 ±   154.444  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                              fixed      1000  avgt    5   39469.318 ±   421.431  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                              fixed     10000  avgt    5  397122.613 ±  2593.429  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                             random         1  avgt    5     115.965 ±    10.709  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                             random        10  avgt    5     281.700 ±     6.911  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                             random        50  avgt    5    1554.298 ±   114.298  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                             random       100  avgt    5    4092.271 ±    70.038  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                             random       500  avgt    5   19641.757 ±   574.298  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                             random      1000  avgt    5   39441.071 ±   324.889  ns/op
Base64JniBenchmarks.jni_url_decodeSimd                             random     10000  avgt    5  400173.405 ± 11496.442  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                         fixed         1  avgt    5      49.197 ±     1.177  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                         fixed        10  avgt    5      67.712 ±     1.641  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                         fixed        50  avgt    5      89.372 ±     5.070  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                         fixed       100  avgt    5      76.619 ±     1.512  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                         fixed       500  avgt    5     184.856 ±     2.380  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                         fixed      1000  avgt    5     319.438 ±    33.017  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                         fixed     10000  avgt    5    2918.582 ±   196.564  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                        random         1  avgt    5      50.469 ±     4.149  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                        random        10  avgt    5      65.548 ±     0.259  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                        random        50  avgt    5      93.683 ±    10.326  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                        random       100  avgt    5      75.759 ±     3.700  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                        random       500  avgt    5     192.118 ±     6.622  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                        random      1000  avgt    5     327.114 ±     6.697  ns/op
Base64JniBenchmarks.jni_url_decodeSimdCargo                        random     10000  avgt    5    2920.524 ±   193.974  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                       fixed         1  avgt    5     109.806 ±     3.517  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                       fixed        10  avgt    5     272.347 ±    20.422  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                       fixed        50  avgt    5    1551.219 ±    46.443  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                       fixed       100  avgt    5    4070.267 ±   113.942  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                       fixed       500  avgt    5   19574.552 ±   536.950  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                       fixed      1000  avgt    5   39531.097 ±   408.037  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                       fixed     10000  avgt    5  395839.911 ±  4616.368  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                      random         1  avgt    5     107.526 ±     5.520  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                      random        10  avgt    5     273.450 ±     6.034  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                      random        50  avgt    5    1549.060 ±    65.423  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                      random       100  avgt    5    4087.268 ±   128.412  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                      random       500  avgt    5   19497.635 ±   187.474  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                      random      1000  avgt    5   39765.371 ±  1019.321  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlace                      random     10000  avgt    5  395549.927 ±  6722.694  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                  fixed         1  avgt    5      48.601 ±     1.692  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                  fixed        10  avgt    5      66.460 ±     3.357  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                  fixed        50  avgt    5      92.001 ±     5.124  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                  fixed       100  avgt    5      73.074 ±     0.807  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                  fixed       500  avgt    5     180.799 ±     4.512  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                  fixed      1000  avgt    5     320.122 ±    11.479  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                  fixed     10000  avgt    5    2784.938 ±   269.968  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                 random         1  avgt    5      48.242 ±     0.676  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                 random        10  avgt    5      66.204 ±     0.352  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                 random        50  avgt    5      88.577 ±     8.227  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                 random       100  avgt    5      78.472 ±     6.894  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                 random       500  avgt    5     186.582 ±    25.163  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                 random      1000  avgt    5     322.187 ±    23.043  ns/op
Base64JniBenchmarks.jni_url_decodeSimdInPlaceCargo                 random     10000  avgt    5    2829.625 ±    56.895  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed         1  avgt    5     424.422 ±     4.873  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed        10  avgt    5     447.712 ±     2.746  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed        50  avgt    5     498.343 ±     3.719  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed       100  avgt    5     631.960 ±    33.949  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed       500  avgt    5    1147.806 ±   103.770  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed      1000  avgt    5    1715.975 ±    33.943  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed     10000  avgt    5   12155.027 ±   583.773  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random         1  avgt    5     420.413 ±     8.235  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random        10  avgt    5     447.518 ±     4.604  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random        50  avgt    5     499.953 ±    29.256  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random       100  avgt    5     639.992 ±    30.074  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random       500  avgt    5    1121.859 ±    55.810  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random      1000  avgt    5    1708.309 ±    33.660  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random     10000  avgt    5   12122.330 ±   705.585  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed         1  avgt    5     138.777 ±     2.880  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed        10  avgt    5     154.755 ±     5.305  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed        50  avgt    5     200.572 ±     1.514  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed       100  avgt    5     261.184 ±    25.134  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed       500  avgt    5     663.636 ±    13.381  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed      1000  avgt    5    1187.472 ±    18.666  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed     10000  avgt    5   10950.509 ±   124.232  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random         1  avgt    5     141.584 ±     3.001  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random        10  avgt    5     154.187 ±     9.696  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random        50  avgt    5     200.225 ±     0.584  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random       100  avgt    5     249.369 ±     1.040  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random       500  avgt    5     660.338 ±     6.917  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random      1000  avgt    5    1200.775 ±    29.985  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random     10000  avgt    5   11020.396 ±    45.316  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed         1  avgt    5     228.684 ±     4.324  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed        10  avgt    5     239.960 ±     2.063  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed        50  avgt    5     282.513 ±    11.284  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed       100  avgt    5     331.724 ±     3.783  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed       500  avgt    5     758.932 ±    47.533  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed      1000  avgt    5    1365.988 ±    15.100  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed     10000  avgt    5   11161.777 ±   431.406  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random         1  avgt    5     226.501 ±     6.043  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random        10  avgt    5     237.988 ±     7.082  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random        50  avgt    5     285.630 ±     7.243  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random       100  avgt    5     329.706 ±     4.974  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random       500  avgt    5     747.513 ±     1.763  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random      1000  avgt    5    1381.883 ±   101.582  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random     10000  avgt    5   11158.376 ±   172.654  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed         1  avgt    5      53.666 ±     5.688  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed        10  avgt    5      68.561 ±     2.251  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed        50  avgt    5     106.012 ±     0.822  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed       100  avgt    5     154.400 ±     0.285  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed       500  avgt    5     564.555 ±    23.165  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed      1000  avgt    5    1093.562 ±    76.345  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed     10000  avgt    5   10861.027 ±   116.176  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random         1  avgt    5      53.516 ±     1.312  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random        10  avgt    5      68.057 ±     3.774  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random        50  avgt    5     107.562 ±     1.505  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random       100  avgt    5     158.820 ±    15.218  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random       500  avgt    5     563.498 ±    24.504  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random      1000  avgt    5    1103.164 ±    23.687  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random     10000  avgt    5   10847.752 ±   506.848  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                              fixed         1  avgt    5     103.444 ±     2.744  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                              fixed        10  avgt    5     246.380 ±     6.211  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                              fixed        50  avgt    5    2681.018 ±    19.537  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                              fixed       100  avgt    5    4849.947 ±    27.293  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                              fixed       500  avgt    5   21258.712 ±   265.047  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                              fixed      1000  avgt    5   43005.502 ±   540.343  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                              fixed     10000  avgt    5  434290.270 ± 10660.781  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                             random         1  avgt    5     102.762 ±     0.723  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                             random        10  avgt    5     251.492 ±    14.917  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                             random        50  avgt    5    2695.396 ±    30.704  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                             random       100  avgt    5    4860.528 ±    49.617  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                             random       500  avgt    5   21220.794 ±   209.600  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                             random      1000  avgt    5   43058.294 ±   368.501  ns/op
Base64JniBenchmarks.jni_url_encodeSimd                             random     10000  avgt    5  433833.381 ±  6013.767  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                         fixed         1  avgt    5      49.246 ±     0.631  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                         fixed        10  avgt    5      63.358 ±     2.616  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                         fixed        50  avgt    5      75.605 ±     0.550  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                         fixed       100  avgt    5      94.242 ±     5.802  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                         fixed       500  avgt    5     191.247 ±    15.015  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                         fixed      1000  avgt    5     354.659 ±    12.747  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                         fixed     10000  avgt    5    3367.096 ±   199.407  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                        random         1  avgt    5      50.196 ±     0.773  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                        random        10  avgt    5      65.727 ±     3.752  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                        random        50  avgt    5      77.011 ±     6.237  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                        random       100  avgt    5      93.155 ±     3.892  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                        random       500  avgt    5     187.286 ±    10.837  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                        random      1000  avgt    5     354.627 ±     8.237  ns/op
Base64JniBenchmarks.jni_url_encodeSimdCargo                        random     10000  avgt    5    3336.829 ±   154.967  ns/op

Benchmark result is saved to /static/data/charts/base64-jni/jdk17.json
