# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 0.00% complete, ETA 03:12:30
# Fork: 1 of 1
# Warmup Iteration   1: 38546.342 ns/op
# Warmup Iteration   2: 29548.426 ns/op
Iteration   1: 29400.607 ns/op
Iteration   2: 29415.335 ns/op
Iteration   3: 29458.572 ns/op
Iteration   4: 29345.540 ns/op
Iteration   5: 29394.525 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  29402.916 ±(99.9%) 156.646 ns/op [Average]
  (min, avg, max) = (29345.540, 29402.916, 29458.572), stdev = 40.680
  CI (99.9%): [29246.270, 29559.561] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 0.30% complete, ETA 03:28:05
# Fork: 1 of 1
# Warmup Iteration   1: 66613.851 ns/op
# Warmup Iteration   2: 55232.322 ns/op
Iteration   1: 55219.382 ns/op
Iteration   2: 55050.372 ns/op
Iteration   3: 54989.082 ns/op
Iteration   4: 55031.110 ns/op
Iteration   5: 54967.502 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  55051.490 ±(99.9%) 382.908 ns/op [Average]
  (min, avg, max) = (54967.502, 55051.490, 55219.382), stdev = 99.440
  CI (99.9%): [54668.582, 55434.397] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 0.61% complete, ETA 03:27:14
# Fork: 1 of 1
# Warmup Iteration   1: 142236.295 ns/op
# Warmup Iteration   2: 113191.197 ns/op
Iteration   1: 112943.078 ns/op
Iteration   2: 112845.433 ns/op
Iteration   3: 112763.650 ns/op
Iteration   4: 112831.501 ns/op
Iteration   5: 112768.406 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  112830.414 ±(99.9%) 280.479 ns/op [Average]
  (min, avg, max) = (112763.650, 112830.414, 112943.078), stdev = 72.840
  CI (99.9%): [112549.934, 113110.893] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 0.91% complete, ETA 03:26:40
# Fork: 1 of 1
# Warmup Iteration   1: 309914.697 ns/op
# Warmup Iteration   2: 252669.622 ns/op
Iteration   1: 252351.564 ns/op
Iteration   2: 252767.567 ns/op
Iteration   3: 252781.503 ns/op
Iteration   4: 254632.543 ns/op
Iteration   5: 252914.429 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  253089.521 ±(99.9%) 3419.647 ns/op [Average]
  (min, avg, max) = (252351.564, 253089.521, 254632.543), stdev = 888.071
  CI (99.9%): [249669.874, 256509.168] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 1.21% complete, ETA 03:26:04
# Fork: 1 of 1
# Warmup Iteration   1: 2758978.917 ns/op
# Warmup Iteration   2: 2277131.483 ns/op
Iteration   1: 2264966.725 ns/op
Iteration   2: 2273278.792 ns/op
Iteration   3: 2271820.572 ns/op
Iteration   4: 2265757.968 ns/op
Iteration   5: 2267973.292 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2268759.470 ±(99.9%) 14122.813 ns/op [Average]
  (min, avg, max) = (2264966.725, 2268759.470, 2273278.792), stdev = 3667.650
  CI (99.9%): [2254636.656, 2282882.283] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 1.52% complete, ETA 03:25:27
# Fork: 1 of 1
# Warmup Iteration   1: 29652.893 ns/op
# Warmup Iteration   2: 25086.178 ns/op
Iteration   1: 24870.801 ns/op
Iteration   2: 24904.754 ns/op
Iteration   3: 24901.911 ns/op
Iteration   4: 25133.684 ns/op
Iteration   5: 24872.242 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  24936.678 ±(99.9%) 428.492 ns/op [Average]
  (min, avg, max) = (24870.801, 24936.678, 25133.684), stdev = 111.278
  CI (99.9%): [24508.187, 25365.170] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 1.82% complete, ETA 03:24:40
# Fork: 1 of 1
# Warmup Iteration   1: 57862.604 ns/op
# Warmup Iteration   2: 48349.467 ns/op
Iteration   1: 48108.878 ns/op
Iteration   2: 49049.176 ns/op
Iteration   3: 48272.707 ns/op
Iteration   4: 48133.226 ns/op
Iteration   5: 48122.138 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  48337.225 ±(99.9%) 1553.506 ns/op [Average]
  (min, avg, max) = (48108.878, 48337.225, 49049.176), stdev = 403.441
  CI (99.9%): [46783.719, 49890.731] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 2.12% complete, ETA 03:23:59
# Fork: 1 of 1
# Warmup Iteration   1: 115819.209 ns/op
# Warmup Iteration   2: 93745.409 ns/op
Iteration   1: 93205.441 ns/op
Iteration   2: 93399.073 ns/op
Iteration   3: 93075.667 ns/op
Iteration   4: 93030.240 ns/op
Iteration   5: 93608.840 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  93263.852 ±(99.9%) 924.759 ns/op [Average]
  (min, avg, max) = (93030.240, 93263.852, 93608.840), stdev = 240.157
  CI (99.9%): [92339.093, 94188.611] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 2.42% complete, ETA 03:23:17
# Fork: 1 of 1
# Warmup Iteration   1: 243645.881 ns/op
# Warmup Iteration   2: 201659.047 ns/op
Iteration   1: 201663.155 ns/op
Iteration   2: 201406.119 ns/op
Iteration   3: 201866.753 ns/op
Iteration   4: 201623.096 ns/op
Iteration   5: 201413.731 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  201594.571 ±(99.9%) 740.231 ns/op [Average]
  (min, avg, max) = (201406.119, 201594.571, 201866.753), stdev = 192.236
  CI (99.9%): [200854.340, 202334.802] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 2.73% complete, ETA 03:22:35
# Fork: 1 of 1
# Warmup Iteration   1: 2445577.252 ns/op
# Warmup Iteration   2: 1971750.063 ns/op
Iteration   1: 1968285.340 ns/op
Iteration   2: 1968903.235 ns/op
Iteration   3: 1972857.713 ns/op
Iteration   4: 1968665.885 ns/op
Iteration   5: 1972358.581 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1970214.151 ±(99.9%) 8485.176 ns/op [Average]
  (min, avg, max) = (1968285.340, 1970214.151, 1972857.713), stdev = 2203.573
  CI (99.9%): [1961728.975, 1978699.327] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 3.03% complete, ETA 03:22:02
# Fork: 1 of 1
# Warmup Iteration   1: 33196.773 ns/op
# Warmup Iteration   2: 27065.651 ns/op
Iteration   1: 27216.323 ns/op
Iteration   2: 27022.832 ns/op
Iteration   3: 26908.794 ns/op
Iteration   4: 26936.848 ns/op
Iteration   5: 26925.319 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  27002.023 ±(99.9%) 491.543 ns/op [Average]
  (min, avg, max) = (26908.794, 27002.023, 27216.323), stdev = 127.652
  CI (99.9%): [26510.480, 27493.566] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 3.33% complete, ETA 03:21:22
# Fork: 1 of 1
# Warmup Iteration   1: 64415.993 ns/op
# Warmup Iteration   2: 50773.632 ns/op
Iteration   1: 50505.001 ns/op
Iteration   2: 51491.730 ns/op
Iteration   3: 50589.483 ns/op
Iteration   4: 50597.898 ns/op
Iteration   5: 50668.259 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  50770.474 ±(99.9%) 1568.487 ns/op [Average]
  (min, avg, max) = (50505.001, 50770.474, 51491.730), stdev = 407.331
  CI (99.9%): [49201.987, 52338.962] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 3.64% complete, ETA 03:20:45
# Fork: 1 of 1
# Warmup Iteration   1: 131819.492 ns/op
# Warmup Iteration   2: 103827.490 ns/op
Iteration   1: 103221.280 ns/op
Iteration   2: 103084.805 ns/op
Iteration   3: 103200.446 ns/op
Iteration   4: 103290.051 ns/op
Iteration   5: 103142.050 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  103187.726 ±(99.9%) 300.973 ns/op [Average]
  (min, avg, max) = (103084.805, 103187.726, 103290.051), stdev = 78.162
  CI (99.9%): [102886.753, 103488.700] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 3.94% complete, ETA 03:20:08
# Fork: 1 of 1
# Warmup Iteration   1: 278263.321 ns/op
# Warmup Iteration   2: 225306.172 ns/op
Iteration   1: 232178.790 ns/op
Iteration   2: 226055.873 ns/op
Iteration   3: 227055.694 ns/op
Iteration   4: 226600.000 ns/op
Iteration   5: 226815.980 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  227741.268 ±(99.9%) 9657.523 ns/op [Average]
  (min, avg, max) = (226055.873, 227741.268, 232178.790), stdev = 2508.028
  CI (99.9%): [218083.745, 237398.790] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 4.24% complete, ETA 03:19:30
# Fork: 1 of 1
# Warmup Iteration   1: 2761423.445 ns/op
# Warmup Iteration   2: 2153130.275 ns/op
Iteration   1: 2158560.757 ns/op
Iteration   2: 2161447.490 ns/op
Iteration   3: 2155096.536 ns/op
Iteration   4: 2156321.528 ns/op
Iteration   5: 2160197.267 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2158324.716 ±(99.9%) 10141.858 ns/op [Average]
  (min, avg, max) = (2155096.536, 2158324.716, 2161447.490), stdev = 2633.808
  CI (99.9%): [2148182.858, 2168466.573] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 4.55% complete, ETA 03:18:54
# Fork: 1 of 1
# Warmup Iteration   1: 9508.079 ns/op
# Warmup Iteration   2: 8396.393 ns/op
Iteration   1: 8343.281 ns/op
Iteration   2: 8420.883 ns/op
Iteration   3: 8295.350 ns/op
Iteration   4: 8345.021 ns/op
Iteration   5: 8348.827 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  8350.672 ±(99.9%) 173.065 ns/op [Average]
  (min, avg, max) = (8295.350, 8350.672, 8420.883), stdev = 44.944
  CI (99.9%): [8177.607, 8523.737] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 4.85% complete, ETA 03:18:16
# Fork: 1 of 1
# Warmup Iteration   1: 18509.902 ns/op
# Warmup Iteration   2: 16007.738 ns/op
Iteration   1: 15828.871 ns/op
Iteration   2: 15846.690 ns/op
Iteration   3: 15807.584 ns/op
Iteration   4: 15785.171 ns/op
Iteration   5: 15823.379 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  15818.339 ±(99.9%) 89.396 ns/op [Average]
  (min, avg, max) = (15785.171, 15818.339, 15846.690), stdev = 23.216
  CI (99.9%): [15728.943, 15907.735] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 5.15% complete, ETA 03:17:36
# Fork: 1 of 1
# Warmup Iteration   1: 36729.494 ns/op
# Warmup Iteration   2: 30892.713 ns/op
Iteration   1: 30679.635 ns/op
Iteration   2: 30693.046 ns/op
Iteration   3: 30826.247 ns/op
Iteration   4: 30655.677 ns/op
Iteration   5: 30611.502 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  30693.221 ±(99.9%) 310.259 ns/op [Average]
  (min, avg, max) = (30611.502, 30693.221, 30826.247), stdev = 80.573
  CI (99.9%): [30382.962, 31003.481] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 5.45% complete, ETA 03:16:56
# Fork: 1 of 1
# Warmup Iteration   1: 75440.741 ns/op
# Warmup Iteration   2: 64313.108 ns/op
Iteration   1: 64598.559 ns/op
Iteration   2: 64686.366 ns/op
Iteration   3: 63991.387 ns/op
Iteration   4: 64296.633 ns/op
Iteration   5: 64346.811 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  64383.951 ±(99.9%) 1055.635 ns/op [Average]
  (min, avg, max) = (63991.387, 64383.951, 64686.366), stdev = 274.145
  CI (99.9%): [63328.317, 65439.586] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 5.76% complete, ETA 03:16:15
# Fork: 1 of 1
# Warmup Iteration   1: 736838.461 ns/op
# Warmup Iteration   2: 645421.312 ns/op
Iteration   1: 646646.542 ns/op
Iteration   2: 649961.842 ns/op
Iteration   3: 641370.560 ns/op
Iteration   4: 644825.432 ns/op
Iteration   5: 645691.718 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  645699.219 ±(99.9%) 11956.889 ns/op [Average]
  (min, avg, max) = (641370.560, 645699.219, 649961.842), stdev = 3105.166
  CI (99.9%): [633742.331, 657656.108] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 6.06% complete, ETA 03:15:38
# Fork: 1 of 1
# Warmup Iteration   1: 8821.829 ns/op
# Warmup Iteration   2: 7155.080 ns/op
Iteration   1: 7137.325 ns/op
Iteration   2: 7132.319 ns/op
Iteration   3: 7136.997 ns/op
Iteration   4: 7136.115 ns/op
Iteration   5: 7145.154 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  7137.582 ±(99.9%) 18.020 ns/op [Average]
  (min, avg, max) = (7132.319, 7137.582, 7145.154), stdev = 4.680
  CI (99.9%): [7119.562, 7155.603] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 6.36% complete, ETA 03:14:59
# Fork: 1 of 1
# Warmup Iteration   1: 18265.553 ns/op
# Warmup Iteration   2: 14982.845 ns/op
Iteration   1: 14862.566 ns/op
Iteration   2: 14864.904 ns/op
Iteration   3: 14988.588 ns/op
Iteration   4: 14928.575 ns/op
Iteration   5: 14863.746 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  14901.676 ±(99.9%) 216.097 ns/op [Average]
  (min, avg, max) = (14862.566, 14901.676, 14988.588), stdev = 56.120
  CI (99.9%): [14685.578, 15117.773] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 6.67% complete, ETA 03:14:19
# Fork: 1 of 1
# Warmup Iteration   1: 36615.672 ns/op
# Warmup Iteration   2: 28787.472 ns/op
Iteration   1: 28856.912 ns/op
Iteration   2: 28749.076 ns/op
Iteration   3: 28988.575 ns/op
Iteration   4: 28756.961 ns/op
Iteration   5: 28715.874 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  28813.480 ±(99.9%) 427.983 ns/op [Average]
  (min, avg, max) = (28715.874, 28813.480, 28988.575), stdev = 111.146
  CI (99.9%): [28385.496, 29241.463] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 6.97% complete, ETA 03:13:42
# Fork: 1 of 1
# Warmup Iteration   1: 73573.997 ns/op
# Warmup Iteration   2: 61294.414 ns/op
Iteration   1: 60519.685 ns/op
Iteration   2: 60631.723 ns/op
Iteration   3: 60597.576 ns/op
Iteration   4: 60546.957 ns/op
Iteration   5: 60636.635 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  60586.515 ±(99.9%) 199.242 ns/op [Average]
  (min, avg, max) = (60519.685, 60586.515, 60636.635), stdev = 51.742
  CI (99.9%): [60387.274, 60785.757] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 7.27% complete, ETA 03:13:03
# Fork: 1 of 1
# Warmup Iteration   1: 718040.767 ns/op
# Warmup Iteration   2: 590623.978 ns/op
Iteration   1: 580753.785 ns/op
Iteration   2: 582268.016 ns/op
Iteration   3: 582465.307 ns/op
Iteration   4: 593337.860 ns/op
Iteration   5: 583901.346 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  584545.263 ±(99.9%) 19407.758 ns/op [Average]
  (min, avg, max) = (580753.785, 584545.263, 593337.860), stdev = 5040.133
  CI (99.9%): [565137.505, 603953.021] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 7.58% complete, ETA 03:12:24
# Fork: 1 of 1
# Warmup Iteration   1: 11884.295 ns/op
# Warmup Iteration   2: 10082.711 ns/op
Iteration   1: 10033.269 ns/op
Iteration   2: 10016.452 ns/op
Iteration   3: 10019.122 ns/op
Iteration   4: 10027.348 ns/op
Iteration   5: 10007.788 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  10020.796 ±(99.9%) 37.993 ns/op [Average]
  (min, avg, max) = (10007.788, 10020.796, 10033.269), stdev = 9.867
  CI (99.9%): [9982.803, 10058.788] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 7.88% complete, ETA 03:11:46
# Fork: 1 of 1
# Warmup Iteration   1: 23731.479 ns/op
# Warmup Iteration   2: 19554.569 ns/op
Iteration   1: 19465.723 ns/op
Iteration   2: 19508.291 ns/op
Iteration   3: 19476.548 ns/op
Iteration   4: 19517.801 ns/op
Iteration   5: 19521.807 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  19498.034 ±(99.9%) 97.543 ns/op [Average]
  (min, avg, max) = (19465.723, 19498.034, 19521.807), stdev = 25.332
  CI (99.9%): [19400.491, 19595.577] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 8.18% complete, ETA 03:11:08
# Fork: 1 of 1
# Warmup Iteration   1: 50238.954 ns/op
# Warmup Iteration   2: 39329.501 ns/op
Iteration   1: 38972.162 ns/op
Iteration   2: 38919.658 ns/op
Iteration   3: 39005.095 ns/op
Iteration   4: 38916.543 ns/op
Iteration   5: 38913.761 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  38945.444 ±(99.9%) 158.487 ns/op [Average]
  (min, avg, max) = (38913.761, 38945.444, 39005.095), stdev = 41.158
  CI (99.9%): [38786.957, 39103.931] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 8.48% complete, ETA 03:10:30
# Fork: 1 of 1
# Warmup Iteration   1: 100527.498 ns/op
# Warmup Iteration   2: 83531.096 ns/op
Iteration   1: 84875.007 ns/op
Iteration   2: 85996.887 ns/op
Iteration   3: 84839.207 ns/op
Iteration   4: 85077.603 ns/op
Iteration   5: 84637.976 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  85085.336 ±(99.9%) 2052.012 ns/op [Average]
  (min, avg, max) = (84637.976, 85085.336, 85996.887), stdev = 532.901
  CI (99.9%): [83033.324, 87137.348] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 8.79% complete, ETA 03:09:50
# Fork: 1 of 1
# Warmup Iteration   1: 959695.512 ns/op
# Warmup Iteration   2: 811710.686 ns/op
Iteration   1: 801498.518 ns/op
Iteration   2: 813315.154 ns/op
Iteration   3: 800664.130 ns/op
Iteration   4: 820207.252 ns/op
Iteration   5: 800113.101 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  807159.631 ±(99.9%) 35082.314 ns/op [Average]
  (min, avg, max) = (800113.101, 807159.631, 820207.252), stdev = 9110.766
  CI (99.9%): [772077.317, 842241.945] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 9.09% complete, ETA 03:09:12
# Fork: 1 of 1
# Warmup Iteration   1: 168633.892 ns/op
# Warmup Iteration   2: 144489.886 ns/op
Iteration   1: 141618.003 ns/op
Iteration   2: 141112.996 ns/op
Iteration   3: 140943.259 ns/op
Iteration   4: 141287.596 ns/op
Iteration   5: 141407.721 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  141273.915 ±(99.9%) 1003.601 ns/op [Average]
  (min, avg, max) = (140943.259, 141273.915, 141618.003), stdev = 260.632
  CI (99.9%): [140270.314, 142277.516] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 9.39% complete, ETA 03:08:34
# Fork: 1 of 1
# Warmup Iteration   1: 302191.267 ns/op
# Warmup Iteration   2: 253087.895 ns/op
Iteration   1: 246737.745 ns/op
Iteration   2: 245060.209 ns/op
Iteration   3: 244785.760 ns/op
Iteration   4: 245379.669 ns/op
Iteration   5: 245742.511 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  245541.179 ±(99.9%) 2920.136 ns/op [Average]
  (min, avg, max) = (244785.760, 245541.179, 246737.745), stdev = 758.350
  CI (99.9%): [242621.043, 248461.315] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 9.70% complete, ETA 03:07:55
# Fork: 1 of 1
# Warmup Iteration   1: 718642.047 ns/op
# Warmup Iteration   2: 629161.677 ns/op
Iteration   1: 605689.609 ns/op
Iteration   2: 606079.364 ns/op
Iteration   3: 605875.332 ns/op
Iteration   4: 604000.157 ns/op
Iteration   5: 604426.224 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  605214.137 ±(99.9%) 3605.252 ns/op [Average]
  (min, avg, max) = (604000.157, 605214.137, 606079.364), stdev = 936.272
  CI (99.9%): [601608.885, 608819.389] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 10.00% complete, ETA 03:07:16
# Fork: 1 of 1
# Warmup Iteration   1: 1723625.695 ns/op
# Warmup Iteration   2: 1453194.446 ns/op
Iteration   1: 1432937.875 ns/op
Iteration   2: 1429232.615 ns/op
Iteration   3: 1429212.784 ns/op
Iteration   4: 1427177.823 ns/op
Iteration   5: 1432495.459 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1430211.311 ±(99.9%) 9394.395 ns/op [Average]
  (min, avg, max) = (1427177.823, 1430211.311, 1432937.875), stdev = 2439.694
  CI (99.9%): [1420816.917, 1439605.706] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 10.30% complete, ETA 03:06:38
# Fork: 1 of 1
# Warmup Iteration   1: 14575055.863 ns/op
# Warmup Iteration   2: 12564277.774 ns/op
Iteration   1: 12404643.682 ns/op
Iteration   2: 12349776.328 ns/op
Iteration   3: 12353738.322 ns/op
Iteration   4: 12386447.482 ns/op
Iteration   5: 12343628.105 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12367646.784 ±(99.9%) 102095.309 ns/op [Average]
  (min, avg, max) = (12343628.105, 12367646.784, 12404643.682), stdev = 26513.827
  CI (99.9%): [12265551.475, 12469742.092] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 10.61% complete, ETA 03:06:01
# Fork: 1 of 1
# Warmup Iteration   1: 7513.286 ns/op
# Warmup Iteration   2: 6577.453 ns/op
Iteration   1: 6508.944 ns/op
Iteration   2: 6462.621 ns/op
Iteration   3: 6446.181 ns/op
Iteration   4: 6448.706 ns/op
Iteration   5: 6603.228 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  6493.936 ±(99.9%) 254.529 ns/op [Average]
  (min, avg, max) = (6446.181, 6493.936, 6603.228), stdev = 66.100
  CI (99.9%): [6239.407, 6748.465] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 10.91% complete, ETA 03:05:22
# Fork: 1 of 1
# Warmup Iteration   1: 15309.359 ns/op
# Warmup Iteration   2: 12787.787 ns/op
Iteration   1: 12701.563 ns/op
Iteration   2: 12697.246 ns/op
Iteration   3: 12799.003 ns/op
Iteration   4: 12782.522 ns/op
Iteration   5: 12686.825 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12733.432 ±(99.9%) 203.817 ns/op [Average]
  (min, avg, max) = (12686.825, 12733.432, 12799.003), stdev = 52.931
  CI (99.9%): [12529.614, 12937.249] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 11.21% complete, ETA 03:04:43
# Fork: 1 of 1
# Warmup Iteration   1: 27429.396 ns/op
# Warmup Iteration   2: 23241.302 ns/op
Iteration   1: 23047.430 ns/op
Iteration   2: 23024.498 ns/op
Iteration   3: 23035.057 ns/op
Iteration   4: 22969.114 ns/op
Iteration   5: 23025.145 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  23020.249 ±(99.9%) 115.757 ns/op [Average]
  (min, avg, max) = (22969.114, 23020.249, 23047.430), stdev = 30.062
  CI (99.9%): [22904.491, 23136.006] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 11.52% complete, ETA 03:04:05
# Fork: 1 of 1
# Warmup Iteration   1: 53310.491 ns/op
# Warmup Iteration   2: 45375.352 ns/op
Iteration   1: 45058.561 ns/op
Iteration   2: 44989.222 ns/op
Iteration   3: 45120.521 ns/op
Iteration   4: 45315.693 ns/op
Iteration   5: 44991.475 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  45095.095 ±(99.9%) 518.734 ns/op [Average]
  (min, avg, max) = (44989.222, 45095.095, 45315.693), stdev = 134.714
  CI (99.9%): [44576.360, 45613.829] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 11.82% complete, ETA 03:03:26
# Fork: 1 of 1
# Warmup Iteration   1: 514065.916 ns/op
# Warmup Iteration   2: 446854.099 ns/op
Iteration   1: 446077.552 ns/op
Iteration   2: 447547.983 ns/op
Iteration   3: 447155.892 ns/op
Iteration   4: 448032.484 ns/op
Iteration   5: 446158.531 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  446994.488 ±(99.9%) 3306.535 ns/op [Average]
  (min, avg, max) = (446077.552, 446994.488, 448032.484), stdev = 858.697
  CI (99.9%): [443687.954, 450301.023] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 12.12% complete, ETA 03:02:48
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
73087.137 ns/op
# Warmup Iteration   2: 71868.164 ns/op
Iteration   1: 66474.738 ns/op
Iteration   2: 70582.821 ns/op
Iteration   3: 68922.991 ns/op
Iteration   4: 74413.810 ns/op
Iteration   5: 75637.720 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  71206.416 ±(99.9%) 14652.131 ns/op [Average]
  (min, avg, max) = (66474.738, 71206.416, 75637.720), stdev = 3805.112
  CI (99.9%): [56554.286, 85858.547] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 12.42% complete, ETA 03:02:10
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
145534.236 ns/op
# Warmup Iteration   2: 139261.724 ns/op
Iteration   1: 137140.152 ns/op
Iteration   2: 132699.679 ns/op
Iteration   3: 139624.081 ns/op
Iteration   4: 141252.077 ns/op
Iteration   5: 141213.159 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  138385.829 ±(99.9%) 13833.737 ns/op [Average]
  (min, avg, max) = (132699.679, 138385.829, 141252.077), stdev = 3592.578
  CI (99.9%): [124552.092, 152219.567] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 12.73% complete, ETA 03:01:33
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
286442.260 ns/op
# Warmup Iteration   2: 263472.372 ns/op
Iteration   1: 281842.833 ns/op
Iteration   2: 273079.999 ns/op
Iteration   3: 256317.488 ns/op
Iteration   4: 279594.485 ns/op
Iteration   5: 294907.233 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  277148.408 ±(99.9%) 54247.496 ns/op [Average]
  (min, avg, max) = (256317.488, 277148.408, 294907.233), stdev = 14087.902
  CI (99.9%): [222900.912, 331395.904] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 13.03% complete, ETA 03:00:55
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
649236.270 ns/op
# Warmup Iteration   2: 637647.102 ns/op
Iteration   1: 618289.841 ns/op
Iteration   2: 607484.522 ns/op
Iteration   3: 623032.946 ns/op
Iteration   4: 664998.250 ns/op
Iteration   5: 697979.527 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  642357.017 ±(99.9%) 146314.699 ns/op [Average]
  (min, avg, max) = (607484.522, 642357.017, 697979.527), stdev = 37997.463
  CI (99.9%): [496042.318, 788671.717] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 13.33% complete, ETA 03:00:18
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5395352.235 ns/op
# Warmup Iteration   2: 5755389.113 ns/op
Iteration   1: 5275905.284 ns/op
Iteration   2: 5450140.073 ns/op
Iteration   3: 5486770.263 ns/op
Iteration   4: 5632481.111 ns/op
Iteration   5: 5697806.137 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  5508620.574 ±(99.9%) 636191.233 ns/op [Average]
  (min, avg, max) = (5275905.284, 5508620.574, 5697806.137), stdev = 165216.843
  CI (99.9%): [4872429.340, 6144811.807] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 13.64% complete, ETA 02:59:41
# Fork: 1 of 1
# Warmup Iteration   1: 11305.297 ns/op
# Warmup Iteration   2: 9510.645 ns/op
Iteration   1: 9559.009 ns/op
Iteration   2: 9487.507 ns/op
Iteration   3: 9466.435 ns/op
Iteration   4: 9473.587 ns/op
Iteration   5: 9473.943 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  9492.096 ±(99.9%) 146.995 ns/op [Average]
  (min, avg, max) = (9466.435, 9492.096, 9559.009), stdev = 38.174
  CI (99.9%): [9345.101, 9639.091] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 13.94% complete, ETA 02:59:02
# Fork: 1 of 1
# Warmup Iteration   1: 20425.815 ns/op
# Warmup Iteration   2: 17633.728 ns/op
Iteration   1: 17597.104 ns/op
Iteration   2: 17628.396 ns/op
Iteration   3: 17610.389 ns/op
Iteration   4: 17626.770 ns/op
Iteration   5: 17600.647 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  17612.661 ±(99.9%) 55.740 ns/op [Average]
  (min, avg, max) = (17597.104, 17612.661, 17628.396), stdev = 14.476
  CI (99.9%): [17556.921, 17668.402] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 14.24% complete, ETA 02:58:23
# Fork: 1 of 1
# Warmup Iteration   1: 44204.830 ns/op
# Warmup Iteration   2: 38387.322 ns/op
Iteration   1: 37715.858 ns/op
Iteration   2: 37397.276 ns/op
Iteration   3: 37559.781 ns/op
Iteration   4: 37500.658 ns/op
Iteration   5: 37424.092 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  37519.533 ±(99.9%) 489.257 ns/op [Average]
  (min, avg, max) = (37397.276, 37519.533, 37715.858), stdev = 127.059
  CI (99.9%): [37030.276, 38008.790] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 14.55% complete, ETA 02:57:45
# Fork: 1 of 1
# Warmup Iteration   1: 82887.447 ns/op
# Warmup Iteration   2: 69954.764 ns/op
Iteration   1: 69777.258 ns/op
Iteration   2: 69786.684 ns/op
Iteration   3: 69845.950 ns/op
Iteration   4: 69767.355 ns/op
Iteration   5: 69701.439 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  69775.737 ±(99.9%) 198.620 ns/op [Average]
  (min, avg, max) = (69701.439, 69775.737, 69845.950), stdev = 51.581
  CI (99.9%): [69577.117, 69974.357] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 14.85% complete, ETA 02:57:06
# Fork: 1 of 1
# Warmup Iteration   1: 854669.729 ns/op
# Warmup Iteration   2: 815294.985 ns/op
Iteration   1: 822219.792 ns/op
Iteration   2: 819638.270 ns/op
Iteration   3: 817805.949 ns/op
Iteration   4: 816733.411 ns/op
Iteration   5: 818574.816 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  818994.448 ±(99.9%) 8058.400 ns/op [Average]
  (min, avg, max) = (816733.411, 818994.448, 822219.792), stdev = 2092.741
  CI (99.9%): [810936.047, 827052.848] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 15.15% complete, ETA 02:56:28
# Fork: 1 of 1
# Warmup Iteration   1: 219918.869 ns/op
# Warmup Iteration   2: 182637.724 ns/op
Iteration   1: 184526.756 ns/op
Iteration   2: 187410.476 ns/op
Iteration   3: 182431.025 ns/op
Iteration   4: 182606.285 ns/op
Iteration   5: 182731.973 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  183941.303 ±(99.9%) 8146.548 ns/op [Average]
  (min, avg, max) = (182431.025, 183941.303, 187410.476), stdev = 2115.633
  CI (99.9%): [175794.755, 192087.851] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 15.45% complete, ETA 02:55:52
# Fork: 1 of 1
# Warmup Iteration   1: 330551.751 ns/op
# Warmup Iteration   2: 279095.287 ns/op
Iteration   1: 281710.445 ns/op
Iteration   2: 276356.751 ns/op
Iteration   3: 274583.517 ns/op
Iteration   4: 278140.099 ns/op
Iteration   5: 278701.039 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  277898.370 ±(99.9%) 10296.326 ns/op [Average]
  (min, avg, max) = (274583.517, 277898.370, 281710.445), stdev = 2673.923
  CI (99.9%): [267602.044, 288194.697] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 15.76% complete, ETA 02:55:15
# Fork: 1 of 1
# Warmup Iteration   1: 682904.475 ns/op
# Warmup Iteration   2: 565362.839 ns/op
Iteration   1: 554129.507 ns/op
Iteration   2: 561080.917 ns/op
Iteration   3: 552919.772 ns/op
Iteration   4: 555890.761 ns/op
Iteration   5: 550194.311 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  554843.054 ±(99.9%) 15620.948 ns/op [Average]
  (min, avg, max) = (550194.311, 554843.054, 561080.917), stdev = 4056.711
  CI (99.9%): [539222.106, 570464.001] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 16.06% complete, ETA 02:54:40
# Fork: 1 of 1
# Warmup Iteration   1: 1554172.061 ns/op
# Warmup Iteration   2: 1291355.433 ns/op
Iteration   1: 1291131.427 ns/op
Iteration   2: 1277173.699 ns/op
Iteration   3: 1304206.600 ns/op
Iteration   4: 1304906.936 ns/op
Iteration   5: 1324580.036 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1300399.739 ±(99.9%) 67929.885 ns/op [Average]
  (min, avg, max) = (1277173.699, 1300399.739, 1324580.036), stdev = 17641.176
  CI (99.9%): [1232469.854, 1368329.625] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 16.36% complete, ETA 02:54:04
# Fork: 1 of 1
# Warmup Iteration   1: 14101729.660 ns/op
# Warmup Iteration   2: 12404449.783 ns/op
Iteration   1: 12406088.244 ns/op
Iteration   2: 12220055.120 ns/op
Iteration   3: 12370951.321 ns/op
Iteration   4: 12293588.159 ns/op
Iteration   5: 12263716.346 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12310879.838 ±(99.9%) 294805.399 ns/op [Average]
  (min, avg, max) = (12220055.120, 12310879.838, 12406088.244), stdev = 76560.026
  CI (99.9%): [12016074.439, 12605685.237] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 16.67% complete, ETA 02:53:28
# Fork: 1 of 1
# Warmup Iteration   1: 17521.190 ns/op
# Warmup Iteration   2: 15257.067 ns/op
Iteration   1: 15088.492 ns/op
Iteration   2: 15105.520 ns/op
Iteration   3: 15104.575 ns/op
Iteration   4: 15069.698 ns/op
Iteration   5: 15079.758 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  15089.609 ±(99.9%) 60.022 ns/op [Average]
  (min, avg, max) = (15069.698, 15089.609, 15105.520), stdev = 15.588
  CI (99.9%): [15029.586, 15149.631] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 16.97% complete, ETA 02:52:50
# Fork: 1 of 1
# Warmup Iteration   1: 33841.039 ns/op
# Warmup Iteration   2: 28608.536 ns/op
Iteration   1: 28361.939 ns/op
Iteration   2: 28313.201 ns/op
Iteration   3: 28338.345 ns/op
Iteration   4: 28335.146 ns/op
Iteration   5: 28461.083 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  28361.943 ±(99.9%) 223.532 ns/op [Average]
  (min, avg, max) = (28313.201, 28361.943, 28461.083), stdev = 58.050
  CI (99.9%): [28138.411, 28585.474] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 17.27% complete, ETA 02:52:12
# Fork: 1 of 1
# Warmup Iteration   1: 73428.582 ns/op
# Warmup Iteration   2: 59736.848 ns/op
Iteration   1: 59853.931 ns/op
Iteration   2: 59478.212 ns/op
Iteration   3: 59400.310 ns/op
Iteration   4: 59429.529 ns/op
Iteration   5: 59505.756 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  59533.547 ±(99.9%) 707.545 ns/op [Average]
  (min, avg, max) = (59400.310, 59533.547, 59853.931), stdev = 183.747
  CI (99.9%): [58826.003, 60241.092] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 17.58% complete, ETA 02:51:34
# Fork: 1 of 1
# Warmup Iteration   1: 149616.568 ns/op
# Warmup Iteration   2: 127842.681 ns/op
Iteration   1: 127488.065 ns/op
Iteration   2: 127096.182 ns/op
Iteration   3: 129366.682 ns/op
Iteration   4: 127274.312 ns/op
Iteration   5: 128577.963 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  127960.641 ±(99.9%) 3752.997 ns/op [Average]
  (min, avg, max) = (127096.182, 127960.641, 129366.682), stdev = 974.641
  CI (99.9%): [124207.643, 131713.638] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 17.88% complete, ETA 02:50:57
# Fork: 1 of 1
# Warmup Iteration   1: 1410263.284 ns/op
# Warmup Iteration   2: 1212929.500 ns/op
Iteration   1: 1203100.460 ns/op
Iteration   2: 1203950.681 ns/op
Iteration   3: 1200173.545 ns/op
Iteration   4: 1200165.082 ns/op
Iteration   5: 1200139.432 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1201505.840 ±(99.9%) 7193.538 ns/op [Average]
  (min, avg, max) = (1200139.432, 1201505.840, 1203950.681), stdev = 1868.139
  CI (99.9%): [1194312.302, 1208699.378] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 18.18% complete, ETA 02:50:20
# Fork: 1 of 1
# Warmup Iteration   1: 15632.395 ns/op
# Warmup Iteration   2: 13739.158 ns/op
Iteration   1: 13660.896 ns/op
Iteration   2: 13650.694 ns/op
Iteration   3: 13662.305 ns/op
Iteration   4: 13670.123 ns/op
Iteration   5: 13669.107 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  13662.625 ±(99.9%) 30.054 ns/op [Average]
  (min, avg, max) = (13650.694, 13662.625, 13670.123), stdev = 7.805
  CI (99.9%): [13632.570, 13692.679] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 18.48% complete, ETA 02:49:42
# Fork: 1 of 1
# Warmup Iteration   1: 30015.589 ns/op
# Warmup Iteration   2: 26224.713 ns/op
Iteration   1: 26124.505 ns/op
Iteration   2: 26075.746 ns/op
Iteration   3: 26071.706 ns/op
Iteration   4: 26024.671 ns/op
Iteration   5: 26093.517 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  26078.029 ±(99.9%) 140.062 ns/op [Average]
  (min, avg, max) = (26024.671, 26078.029, 26124.505), stdev = 36.374
  CI (99.9%): [25937.967, 26218.091] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 18.79% complete, ETA 02:49:04
# Fork: 1 of 1
# Warmup Iteration   1: 62400.145 ns/op
# Warmup Iteration   2: 53191.305 ns/op
Iteration   1: 52783.527 ns/op
Iteration   2: 52730.628 ns/op
Iteration   3: 52771.973 ns/op
Iteration   4: 52793.951 ns/op
Iteration   5: 52656.807 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  52747.377 ±(99.9%) 215.812 ns/op [Average]
  (min, avg, max) = (52656.807, 52747.377, 52793.951), stdev = 56.046
  CI (99.9%): [52531.565, 52963.189] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 19.09% complete, ETA 02:48:26
# Fork: 1 of 1
# Warmup Iteration   1: 129946.726 ns/op
# Warmup Iteration   2: 114609.626 ns/op
Iteration   1: 113588.584 ns/op
Iteration   2: 113621.322 ns/op
Iteration   3: 113476.785 ns/op
Iteration   4: 113722.147 ns/op
Iteration   5: 114180.087 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  113717.785 ±(99.9%) 1050.705 ns/op [Average]
  (min, avg, max) = (113476.785, 113717.785, 114180.087), stdev = 272.865
  CI (99.9%): [112667.081, 114768.490] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 19.39% complete, ETA 02:47:49
# Fork: 1 of 1
# Warmup Iteration   1: 1303445.424 ns/op
# Warmup Iteration   2: 1121158.785 ns/op
Iteration   1: 1116790.321 ns/op
Iteration   2: 1136079.885 ns/op
Iteration   3: 1117089.152 ns/op
Iteration   4: 1120004.758 ns/op
Iteration   5: 1118844.770 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1121761.777 ±(99.9%) 31232.560 ns/op [Average]
  (min, avg, max) = (1116790.321, 1121761.777, 1136079.885), stdev = 8110.997
  CI (99.9%): [1090529.217, 1152994.337] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 19.70% complete, ETA 02:47:11
# Fork: 1 of 1
# Warmup Iteration   1: 16117.042 ns/op
# Warmup Iteration   2: 14316.103 ns/op
Iteration   1: 14494.043 ns/op
Iteration   2: 14216.034 ns/op
Iteration   3: 14239.875 ns/op
Iteration   4: 14276.753 ns/op
Iteration   5: 14247.483 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14294.838 ±(99.9%) 436.853 ns/op [Average]
  (min, avg, max) = (14216.034, 14294.838, 14494.043), stdev = 113.449
  CI (99.9%): [13857.985, 14731.691] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 20.00% complete, ETA 02:46:33
# Fork: 1 of 1
# Warmup Iteration   1: 32112.673 ns/op
# Warmup Iteration   2: 27573.243 ns/op
Iteration   1: 27078.934 ns/op
Iteration   2: 27222.942 ns/op
Iteration   3: 27144.294 ns/op
Iteration   4: 27795.222 ns/op
Iteration   5: 27156.544 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  27279.587 ±(99.9%) 1127.248 ns/op [Average]
  (min, avg, max) = (27078.934, 27279.587, 27795.222), stdev = 292.743
  CI (99.9%): [26152.339, 28406.835] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 20.30% complete, ETA 02:45:55
# Fork: 1 of 1
# Warmup Iteration   1: 63594.278 ns/op
# Warmup Iteration   2: 53744.685 ns/op
Iteration   1: 53272.838 ns/op
Iteration   2: 53406.933 ns/op
Iteration   3: 53851.845 ns/op
Iteration   4: 53620.385 ns/op
Iteration   5: 53375.569 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  53505.514 ±(99.9%) 890.412 ns/op [Average]
  (min, avg, max) = (53272.838, 53505.514, 53851.845), stdev = 231.237
  CI (99.9%): [52615.102, 54395.926] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 20.61% complete, ETA 02:45:17
# Fork: 1 of 1
# Warmup Iteration   1: 139282.190 ns/op
# Warmup Iteration   2: 118686.121 ns/op
Iteration   1: 120420.532 ns/op
Iteration   2: 118569.481 ns/op
Iteration   3: 118549.554 ns/op
Iteration   4: 119319.330 ns/op
Iteration   5: 118189.142 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  119009.608 ±(99.9%) 3425.320 ns/op [Average]
  (min, avg, max) = (118189.142, 119009.608, 120420.532), stdev = 889.545
  CI (99.9%): [115584.287, 122434.928] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 20.91% complete, ETA 02:44:40
# Fork: 1 of 1
# Warmup Iteration   1: 1291773.869 ns/op
# Warmup Iteration   2: 1148438.868 ns/op
Iteration   1: 1145787.992 ns/op
Iteration   2: 1150843.889 ns/op
Iteration   3: 1145664.111 ns/op
Iteration   4: 1151736.490 ns/op
Iteration   5: 1151284.614 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1149063.419 ±(99.9%) 11795.297 ns/op [Average]
  (min, avg, max) = (1145664.111, 1149063.419, 1151736.490), stdev = 3063.201
  CI (99.9%): [1137268.122, 1160858.717] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 21.21% complete, ETA 02:44:02
# Fork: 1 of 1
# Warmup Iteration   1: 6306.956 ns/op
# Warmup Iteration   2: 5751.789 ns/op
Iteration   1: 5852.979 ns/op
Iteration   2: 5757.907 ns/op
Iteration   3: 5703.391 ns/op
Iteration   4: 5695.342 ns/op
Iteration   5: 5733.369 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  5748.598 ±(99.9%) 244.249 ns/op [Average]
  (min, avg, max) = (5695.342, 5748.598, 5852.979), stdev = 63.431
  CI (99.9%): [5504.348, 5992.847] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 21.52% complete, ETA 02:43:24
# Fork: 1 of 1
# Warmup Iteration   1: 12178.001 ns/op
# Warmup Iteration   2: 10967.348 ns/op
Iteration   1: 10928.366 ns/op
Iteration   2: 10856.270 ns/op
Iteration   3: 11001.675 ns/op
Iteration   4: 10875.847 ns/op
Iteration   5: 10876.482 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  10907.728 ±(99.9%) 226.932 ns/op [Average]
  (min, avg, max) = (10856.270, 10907.728, 11001.675), stdev = 58.933
  CI (99.9%): [10680.796, 11134.660] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 21.82% complete, ETA 02:42:46
# Fork: 1 of 1
# Warmup Iteration   1: 21928.515 ns/op
# Warmup Iteration   2: 20009.131 ns/op
Iteration   1: 20066.070 ns/op
Iteration   2: 20085.896 ns/op
Iteration   3: 20255.599 ns/op
Iteration   4: 20103.812 ns/op
Iteration   5: 20002.705 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  20102.817 ±(99.9%) 360.206 ns/op [Average]
  (min, avg, max) = (20002.705, 20102.817, 20255.599), stdev = 93.544
  CI (99.9%): [19742.610, 20463.023] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 22.12% complete, ETA 02:42:08
# Fork: 1 of 1
# Warmup Iteration   1: 49512.927 ns/op
# Warmup Iteration   2: 44083.093 ns/op
Iteration   1: 43571.433 ns/op
Iteration   2: 44184.206 ns/op
Iteration   3: 43917.526 ns/op
Iteration   4: 43898.440 ns/op
Iteration   5: 43952.689 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  43904.859 ±(99.9%) 842.968 ns/op [Average]
  (min, avg, max) = (43571.433, 43904.859, 44184.206), stdev = 218.916
  CI (99.9%): [43061.891, 44747.826] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 22.42% complete, ETA 02:41:29
# Fork: 1 of 1
# Warmup Iteration   1: 469021.052 ns/op
# Warmup Iteration   2: 428089.016 ns/op
Iteration   1: 427913.636 ns/op
Iteration   2: 433717.229 ns/op
Iteration   3: 428781.966 ns/op
Iteration   4: 428477.574 ns/op
Iteration   5: 429972.293 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  429772.540 ±(99.9%) 8971.706 ns/op [Average]
  (min, avg, max) = (427913.636, 429772.540, 433717.229), stdev = 2329.924
  CI (99.9%): [420800.834, 438744.246] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 22.73% complete, ETA 02:40:51
# Fork: 1 of 1
# Warmup Iteration   1: 4451.966 ns/op
# Warmup Iteration   2: 3908.296 ns/op
Iteration   1: 3876.501 ns/op
Iteration   2: 3875.365 ns/op
Iteration   3: 3917.107 ns/op
Iteration   4: 3881.648 ns/op
Iteration   5: 3896.310 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3889.386 ±(99.9%) 67.768 ns/op [Average]
  (min, avg, max) = (3875.365, 3889.386, 3917.107), stdev = 17.599
  CI (99.9%): [3821.618, 3957.154] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 23.03% complete, ETA 02:40:13
# Fork: 1 of 1
# Warmup Iteration   1: 9368.047 ns/op
# Warmup Iteration   2: 7887.223 ns/op
Iteration   1: 7758.922 ns/op
Iteration   2: 7739.473 ns/op
Iteration   3: 7743.073 ns/op
Iteration   4: 7749.073 ns/op
Iteration   5: 7745.623 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  7747.233 ±(99.9%) 28.565 ns/op [Average]
  (min, avg, max) = (7739.473, 7747.233, 7758.922), stdev = 7.418
  CI (99.9%): [7718.667, 7775.798] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 23.33% complete, ETA 02:39:35
# Fork: 1 of 1
# Warmup Iteration   1: 16697.996 ns/op
# Warmup Iteration   2: 14498.535 ns/op
Iteration   1: 14379.740 ns/op
Iteration   2: 14402.028 ns/op
Iteration   3: 14423.085 ns/op
Iteration   4: 14438.555 ns/op
Iteration   5: 14422.348 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14413.151 ±(99.9%) 87.569 ns/op [Average]
  (min, avg, max) = (14379.740, 14413.151, 14438.555), stdev = 22.741
  CI (99.9%): [14325.582, 14500.720] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 23.64% complete, ETA 02:38:56
# Fork: 1 of 1
# Warmup Iteration   1: 37276.548 ns/op
# Warmup Iteration   2: 33039.295 ns/op
Iteration   1: 32260.846 ns/op
Iteration   2: 32350.260 ns/op
Iteration   3: 32266.007 ns/op
Iteration   4: 32367.717 ns/op
Iteration   5: 32319.753 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  32312.917 ±(99.9%) 186.232 ns/op [Average]
  (min, avg, max) = (32260.846, 32312.917, 32367.717), stdev = 48.364
  CI (99.9%): [32126.685, 32499.149] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 23.94% complete, ETA 02:38:19
# Fork: 1 of 1
# Warmup Iteration   1: 308639.861 ns/op
# Warmup Iteration   2: 276097.979 ns/op
Iteration   1: 275395.099 ns/op
Iteration   2: 276649.646 ns/op
Iteration   3: 275118.933 ns/op
Iteration   4: 276733.453 ns/op
Iteration   5: 275292.248 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  275837.876 ±(99.9%) 3026.904 ns/op [Average]
  (min, avg, max) = (275118.933, 275837.876, 276733.453), stdev = 786.077
  CI (99.9%): [272810.972, 278864.780] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 24.24% complete, ETA 02:37:40
# Fork: 1 of 1
# Warmup Iteration   1: 5147.836 ns/op
# Warmup Iteration   2: 4476.549 ns/op
Iteration   1: 4467.013 ns/op
Iteration   2: 4470.082 ns/op
Iteration   3: 4464.509 ns/op
Iteration   4: 4475.824 ns/op
Iteration   5: 4470.664 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4469.618 ±(99.9%) 16.418 ns/op [Average]
  (min, avg, max) = (4464.509, 4469.618, 4475.824), stdev = 4.264
  CI (99.9%): [4453.200, 4486.036] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 24.55% complete, ETA 02:37:02
# Fork: 1 of 1
# Warmup Iteration   1: 9862.060 ns/op
# Warmup Iteration   2: 8819.899 ns/op
Iteration   1: 8958.912 ns/op
Iteration   2: 8767.582 ns/op
Iteration   3: 8731.943 ns/op
Iteration   4: 8719.863 ns/op
Iteration   5: 8722.880 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8780.236 ±(99.9%) 391.519 ns/op [Average]
  (min, avg, max) = (8719.863, 8780.236, 8958.912), stdev = 101.676
  CI (99.9%): [8388.717, 9171.755] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 24.85% complete, ETA 02:36:24
# Fork: 1 of 1
# Warmup Iteration   1: 20215.580 ns/op
# Warmup Iteration   2: 16953.025 ns/op
Iteration   1: 16651.291 ns/op
Iteration   2: 16658.817 ns/op
Iteration   3: 16658.596 ns/op
Iteration   4: 16783.723 ns/op
Iteration   5: 16612.683 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  16673.022 ±(99.9%) 249.384 ns/op [Average]
  (min, avg, max) = (16612.683, 16673.022, 16783.723), stdev = 64.764
  CI (99.9%): [16423.638, 16922.406] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 25.15% complete, ETA 02:35:46
# Fork: 1 of 1
# Warmup Iteration   1: 41362.061 ns/op
# Warmup Iteration   2: 36287.650 ns/op
Iteration   1: 36053.118 ns/op
Iteration   2: 35985.242 ns/op
Iteration   3: 36022.675 ns/op
Iteration   4: 36197.871 ns/op
Iteration   5: 36105.821 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  36072.945 ±(99.9%) 318.112 ns/op [Average]
  (min, avg, max) = (35985.242, 36072.945, 36197.871), stdev = 82.613
  CI (99.9%): [35754.834, 36391.057] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 25.45% complete, ETA 02:35:09
# Fork: 1 of 1
# Warmup Iteration   1: 392750.402 ns/op
# Warmup Iteration   2: 339011.823 ns/op
Iteration   1: 335839.622 ns/op
Iteration   2: 336437.923 ns/op
Iteration   3: 334647.484 ns/op
Iteration   4: 335146.913 ns/op
Iteration   5: 335208.762 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  335456.141 ±(99.9%) 2668.985 ns/op [Average]
  (min, avg, max) = (334647.484, 335456.141, 336437.923), stdev = 693.127
  CI (99.9%): [332787.156, 338125.126] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 25.76% complete, ETA 02:34:31
# Fork: 1 of 1
# Warmup Iteration   1: 130107.370 ns/op
# Warmup Iteration   2: 109676.830 ns/op
Iteration   1: 109086.272 ns/op
Iteration   2: 108920.970 ns/op
Iteration   3: 108821.644 ns/op
Iteration   4: 109086.871 ns/op
Iteration   5: 109075.959 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  108998.343 ±(99.9%) 466.874 ns/op [Average]
  (min, avg, max) = (108821.644, 108998.343, 109086.871), stdev = 121.246
  CI (99.9%): [108531.469, 109465.217] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 26.06% complete, ETA 02:33:52
# Fork: 1 of 1
# Warmup Iteration   1: 228098.142 ns/op
# Warmup Iteration   2: 201003.305 ns/op
Iteration   1: 198920.571 ns/op
Iteration   2: 198297.683 ns/op
Iteration   3: 197501.372 ns/op
Iteration   4: 199265.189 ns/op
Iteration   5: 199085.080 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  198613.979 ±(99.9%) 2775.368 ns/op [Average]
  (min, avg, max) = (197501.372, 198613.979, 199265.189), stdev = 720.754
  CI (99.9%): [195838.611, 201389.347] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 26.36% complete, ETA 02:33:14
# Fork: 1 of 1
# Warmup Iteration   1: 548975.499 ns/op
# Warmup Iteration   2: 479050.888 ns/op
Iteration   1: 475395.156 ns/op
Iteration   2: 476149.683 ns/op
Iteration   3: 476539.626 ns/op
Iteration   4: 475468.324 ns/op
Iteration   5: 474585.395 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  475627.637 ±(99.9%) 2900.760 ns/op [Average]
  (min, avg, max) = (474585.395, 475627.637, 476539.626), stdev = 753.318
  CI (99.9%): [472726.876, 478528.397] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 26.67% complete, ETA 02:32:36
# Fork: 1 of 1
# Warmup Iteration   1: 1364399.507 ns/op
# Warmup Iteration   2: 1143016.723 ns/op
Iteration   1: 1125507.448 ns/op
Iteration   2: 1123910.885 ns/op
Iteration   3: 1123912.276 ns/op
Iteration   4: 1122025.520 ns/op
Iteration   5: 1122583.860 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1123587.998 ±(99.9%) 5217.350 ns/op [Average]
  (min, avg, max) = (1122025.520, 1123587.998, 1125507.448), stdev = 1354.929
  CI (99.9%): [1118370.647, 1128805.348] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 26.97% complete, ETA 02:31:58
# Fork: 1 of 1
# Warmup Iteration   1: 11051250.346 ns/op
# Warmup Iteration   2: 9670547.058 ns/op
Iteration   1: 9635804.641 ns/op
Iteration   2: 9660978.328 ns/op
Iteration   3: 9649260.783 ns/op
Iteration   4: 9684383.083 ns/op
Iteration   5: 9655031.792 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9657091.725 ±(99.9%) 68845.563 ns/op [Average]
  (min, avg, max) = (9635804.641, 9657091.725, 9684383.083), stdev = 17878.974
  CI (99.9%): [9588246.163, 9725937.288] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 27.27% complete, ETA 02:31:20
# Fork: 1 of 1
# Warmup Iteration   1: 2660.003 ns/op
# Warmup Iteration   2: 2430.243 ns/op
Iteration   1: 2423.777 ns/op
Iteration   2: 2459.743 ns/op
Iteration   3: 2432.367 ns/op
Iteration   4: 2424.112 ns/op
Iteration   5: 2418.676 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2431.735 ±(99.9%) 63.179 ns/op [Average]
  (min, avg, max) = (2418.676, 2431.735, 2459.743), stdev = 16.407
  CI (99.9%): [2368.556, 2494.914] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 27.58% complete, ETA 02:30:42
# Fork: 1 of 1
# Warmup Iteration   1: 5279.284 ns/op
# Warmup Iteration   2: 4795.370 ns/op
Iteration   1: 4702.695 ns/op
Iteration   2: 4707.622 ns/op
Iteration   3: 4704.598 ns/op
Iteration   4: 4700.717 ns/op
Iteration   5: 4704.705 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4704.067 ±(99.9%) 9.898 ns/op [Average]
  (min, avg, max) = (4700.717, 4704.067, 4707.622), stdev = 2.571
  CI (99.9%): [4694.169, 4713.966] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 27.88% complete, ETA 02:30:04
# Fork: 1 of 1
# Warmup Iteration   1: 10632.744 ns/op
# Warmup Iteration   2: 9429.626 ns/op
Iteration   1: 9260.187 ns/op
Iteration   2: 9261.596 ns/op
Iteration   3: 9260.720 ns/op
Iteration   4: 9257.290 ns/op
Iteration   5: 9262.922 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9260.543 ±(99.9%) 8.057 ns/op [Average]
  (min, avg, max) = (9257.290, 9260.543, 9262.922), stdev = 2.092
  CI (99.9%): [9252.486, 9268.600] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 28.18% complete, ETA 02:29:26
# Fork: 1 of 1
# Warmup Iteration   1: 18878.093 ns/op
# Warmup Iteration   2: 17385.885 ns/op
Iteration   1: 17002.438 ns/op
Iteration   2: 16995.508 ns/op
Iteration   3: 17053.875 ns/op
Iteration   4: 17298.958 ns/op
Iteration   5: 17027.169 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  17075.590 ±(99.9%) 488.871 ns/op [Average]
  (min, avg, max) = (16995.508, 17075.590, 17298.958), stdev = 126.958
  CI (99.9%): [16586.718, 17564.461] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 28.48% complete, ETA 02:28:48
# Fork: 1 of 1
# Warmup Iteration   1: 217422.659 ns/op
# Warmup Iteration   2: 199348.818 ns/op
Iteration   1: 199052.476 ns/op
Iteration   2: 198327.778 ns/op
Iteration   3: 199015.331 ns/op
Iteration   4: 198472.681 ns/op
Iteration   5: 200950.291 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  199163.711 ±(99.9%) 4039.767 ns/op [Average]
  (min, avg, max) = (198327.778, 199163.711, 200950.291), stdev = 1049.115
  CI (99.9%): [195123.945, 203203.478] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 28.79% complete, ETA 02:28:11
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
38425.173 ns/op
# Warmup Iteration   2: 34885.758 ns/op
Iteration   1: 34159.252 ns/op
Iteration   2: 33356.890 ns/op
Iteration   3: 34500.074 ns/op
Iteration   4: 34531.325 ns/op
Iteration   5: 34801.740 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  34269.856 ±(99.9%) 2152.581 ns/op [Average]
  (min, avg, max) = (33356.890, 34269.856, 34801.740), stdev = 559.018
  CI (99.9%): [32117.275, 36422.437] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 29.09% complete, ETA 02:27:33
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
74147.239 ns/op
# Warmup Iteration   2: 69437.796 ns/op
Iteration   1: 67938.797 ns/op
Iteration   2: 73251.034 ns/op
Iteration   3: 86394.484 ns/op
Iteration   4: 85716.803 ns/op
Iteration   5: 86006.122 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  79861.448 ±(99.9%) 33379.216 ns/op [Average]
  (min, avg, max) = (67938.797, 79861.448, 86394.484), stdev = 8668.476
  CI (99.9%): [46482.232, 113240.664] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 29.39% complete, ETA 02:26:55
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
147797.864 ns/op
# Warmup Iteration   2: 146471.506 ns/op
Iteration   1: 141913.999 ns/op
Iteration   2: 144163.905 ns/op
Iteration   3: 145409.758 ns/op
Iteration   4: 151343.870 ns/op
Iteration   5: 153329.506 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  147232.208 ±(99.9%) 18775.785 ns/op [Average]
  (min, avg, max) = (141913.999, 147232.208, 153329.506), stdev = 4876.012
  CI (99.9%): [128456.423, 166007.993] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 29.70% complete, ETA 02:26:17
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
334170.659 ns/op
# Warmup Iteration   2: 297583.028 ns/op
Iteration   1: 315145.782 ns/op
Iteration   2: 297769.446 ns/op
Iteration   3: 335364.157 ns/op
Iteration   4: 415297.460 ns/op
Iteration   5: 420626.899 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  356840.749 ±(99.9%) 220993.023 ns/op [Average]
  (min, avg, max) = (297769.446, 356840.749, 420626.899), stdev = 57391.186
  CI (99.9%): [135847.725, 577833.772] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 30.00% complete, ETA 02:25:39
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
3149045.679 ns/op
# Warmup Iteration   2: 2763919.626 ns/op
Iteration   1: 2790430.203 ns/op
Iteration   2: 2852744.126 ns/op
Iteration   3: 3638297.694 ns/op
Iteration   4: 3637671.047 ns/op
Iteration   5: 3624375.689 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3308703.752 ±(99.9%) 1714517.395 ns/op [Average]
  (min, avg, max) = (2790430.203, 3308703.752, 3638297.694), stdev = 445254.723
  CI (99.9%): [1594186.357, 5023221.147] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 30.30% complete, ETA 02:25:01
# Fork: 1 of 1
# Warmup Iteration   1: 6668.530 ns/op
# Warmup Iteration   2: 6217.171 ns/op
Iteration   1: 6156.187 ns/op
Iteration   2: 6196.927 ns/op
Iteration   3: 6144.407 ns/op
Iteration   4: 6146.412 ns/op
Iteration   5: 6172.317 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  6163.250 ±(99.9%) 84.029 ns/op [Average]
  (min, avg, max) = (6144.407, 6163.250, 6196.927), stdev = 21.822
  CI (99.9%): [6079.221, 6247.279] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 30.61% complete, ETA 02:24:23
# Fork: 1 of 1
# Warmup Iteration   1: 12991.201 ns/op
# Warmup Iteration   2: 12249.715 ns/op
Iteration   1: 12175.191 ns/op
Iteration   2: 12220.878 ns/op
Iteration   3: 12183.911 ns/op
Iteration   4: 12174.499 ns/op
Iteration   5: 12140.511 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  12178.998 ±(99.9%) 110.501 ns/op [Average]
  (min, avg, max) = (12140.511, 12178.998, 12220.878), stdev = 28.697
  CI (99.9%): [12068.497, 12289.499] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 30.91% complete, ETA 02:23:45
# Fork: 1 of 1
# Warmup Iteration   1: 26866.198 ns/op
# Warmup Iteration   2: 23325.968 ns/op
Iteration   1: 23287.053 ns/op
Iteration   2: 23290.753 ns/op
Iteration   3: 23526.272 ns/op
Iteration   4: 23426.931 ns/op
Iteration   5: 23265.222 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  23359.246 ±(99.9%) 435.747 ns/op [Average]
  (min, avg, max) = (23265.222, 23359.246, 23526.272), stdev = 113.162
  CI (99.9%): [22923.500, 23794.993] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 31.21% complete, ETA 02:23:07
# Fork: 1 of 1
# Warmup Iteration   1: 54079.749 ns/op
# Warmup Iteration   2: 48034.649 ns/op
Iteration   1: 47829.152 ns/op
Iteration   2: 47663.864 ns/op
Iteration   3: 47654.896 ns/op
Iteration   4: 47622.788 ns/op
Iteration   5: 47641.497 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  47682.439 ±(99.9%) 321.377 ns/op [Average]
  (min, avg, max) = (47622.788, 47682.439, 47829.152), stdev = 83.461
  CI (99.9%): [47361.062, 48003.817] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 31.52% complete, ETA 02:22:29
# Fork: 1 of 1
# Warmup Iteration   1: 548086.336 ns/op
# Warmup Iteration   2: 479360.631 ns/op
Iteration   1: 482015.200 ns/op
Iteration   2: 478859.959 ns/op
Iteration   3: 478171.440 ns/op
Iteration   4: 477438.384 ns/op
Iteration   5: 477394.673 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  478775.931 ±(99.9%) 7347.125 ns/op [Average]
  (min, avg, max) = (477394.673, 478775.931, 482015.200), stdev = 1908.025
  CI (99.9%): [471428.806, 486123.056] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 31.82% complete, ETA 02:21:51
# Fork: 1 of 1
# Warmup Iteration   1: 161754.634 ns/op
# Warmup Iteration   2: 144902.243 ns/op
Iteration   1: 148397.584 ns/op
Iteration   2: 143810.807 ns/op
Iteration   3: 144573.398 ns/op
Iteration   4: 148779.837 ns/op
Iteration   5: 148896.306 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  146891.586 ±(99.9%) 9572.088 ns/op [Average]
  (min, avg, max) = (143810.807, 146891.586, 148896.306), stdev = 2485.841
  CI (99.9%): [137319.498, 156463.674] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 32.12% complete, ETA 02:21:14
# Fork: 1 of 1
# Warmup Iteration   1: 229072.706 ns/op
# Warmup Iteration   2: 214446.448 ns/op
Iteration   1: 206551.029 ns/op
Iteration   2: 210785.788 ns/op
Iteration   3: 206301.564 ns/op
Iteration   4: 204131.386 ns/op
Iteration   5: 202739.791 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  206101.912 ±(99.9%) 11769.229 ns/op [Average]
  (min, avg, max) = (202739.791, 206101.912, 210785.788), stdev = 3056.431
  CI (99.9%): [194332.683, 217871.141] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 32.42% complete, ETA 02:20:37
# Fork: 1 of 1
# Warmup Iteration   1: 459000.797 ns/op
# Warmup Iteration   2: 404656.250 ns/op
Iteration   1: 402946.825 ns/op
Iteration   2: 407992.571 ns/op
Iteration   3: 406602.302 ns/op
Iteration   4: 405579.453 ns/op
Iteration   5: 407351.426 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  406094.515 ±(99.9%) 7607.710 ns/op [Average]
  (min, avg, max) = (402946.825, 406094.515, 407992.571), stdev = 1975.698
  CI (99.9%): [398486.805, 413702.225] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 32.73% complete, ETA 02:19:59
# Fork: 1 of 1
# Warmup Iteration   1: 1071854.258 ns/op
# Warmup Iteration   2: 964843.746 ns/op
Iteration   1: 956379.457 ns/op
Iteration   2: 952336.105 ns/op
Iteration   3: 935357.498 ns/op
Iteration   4: 935451.564 ns/op
Iteration   5: 939413.008 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  943787.526 ±(99.9%) 38086.594 ns/op [Average]
  (min, avg, max) = (935357.498, 943787.526, 956379.457), stdev = 9890.968
  CI (99.9%): [905700.932, 981874.121] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 33.03% complete, ETA 02:19:22
# Fork: 1 of 1
# Warmup Iteration   1: 9593662.099 ns/op
# Warmup Iteration   2: 8849037.232 ns/op
Iteration   1: 8861779.440 ns/op
Iteration   2: 8979227.212 ns/op
Iteration   3: 9031379.696 ns/op
Iteration   4: 8788203.340 ns/op
Iteration   5: 8802109.519 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8892539.842 ±(99.9%) 416515.970 ns/op [Average]
  (min, avg, max) = (8788203.340, 8892539.842, 9031379.696), stdev = 108167.875
  CI (99.9%): [8476023.871, 9309055.812] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 33.33% complete, ETA 02:18:45
# Fork: 1 of 1
# Warmup Iteration   1: 14312.114 ns/op
# Warmup Iteration   2: 12602.922 ns/op
Iteration   1: 12485.303 ns/op
Iteration   2: 12505.021 ns/op
Iteration   3: 12536.133 ns/op
Iteration   4: 12492.952 ns/op
Iteration   5: 12502.162 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  12504.314 ±(99.9%) 74.769 ns/op [Average]
  (min, avg, max) = (12485.303, 12504.314, 12536.133), stdev = 19.417
  CI (99.9%): [12429.545, 12579.083] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 33.64% complete, ETA 02:18:07
# Fork: 1 of 1
# Warmup Iteration   1: 28619.617 ns/op
# Warmup Iteration   2: 25136.605 ns/op
Iteration   1: 25236.726 ns/op
Iteration   2: 25213.407 ns/op
Iteration   3: 25147.719 ns/op
Iteration   4: 25102.994 ns/op
Iteration   5: 25155.195 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  25171.208 ±(99.9%) 206.780 ns/op [Average]
  (min, avg, max) = (25102.994, 25171.208, 25236.726), stdev = 53.700
  CI (99.9%): [24964.428, 25377.988] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 33.94% complete, ETA 02:17:29
# Fork: 1 of 1
# Warmup Iteration   1: 51526.205 ns/op
# Warmup Iteration   2: 45649.216 ns/op
Iteration   1: 45801.575 ns/op
Iteration   2: 45789.574 ns/op
Iteration   3: 45889.420 ns/op
Iteration   4: 45946.719 ns/op
Iteration   5: 45838.136 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  45853.085 ±(99.9%) 251.016 ns/op [Average]
  (min, avg, max) = (45789.574, 45853.085, 45946.719), stdev = 65.188
  CI (99.9%): [45602.069, 46104.101] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 34.24% complete, ETA 02:16:51
# Fork: 1 of 1
# Warmup Iteration   1: 113971.293 ns/op
# Warmup Iteration   2: 99474.710 ns/op
Iteration   1: 100158.840 ns/op
Iteration   2: 100495.565 ns/op
Iteration   3: 100188.030 ns/op
Iteration   4: 100343.660 ns/op
Iteration   5: 99907.429 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  100218.705 ±(99.9%) 847.323 ns/op [Average]
  (min, avg, max) = (99907.429, 100218.705, 100495.565), stdev = 220.047
  CI (99.9%): [99371.382, 101066.028] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 34.55% complete, ETA 02:16:13
# Fork: 1 of 1
# Warmup Iteration   1: 986428.262 ns/op
# Warmup Iteration   2: 863313.302 ns/op
Iteration   1: 861128.889 ns/op
Iteration   2: 869671.340 ns/op
Iteration   3: 861865.131 ns/op
Iteration   4: 863434.547 ns/op
Iteration   5: 859400.447 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  863100.071 ±(99.9%) 15207.765 ns/op [Average]
  (min, avg, max) = (859400.447, 863100.071, 869671.340), stdev = 3949.408
  CI (99.9%): [847892.306, 878307.836] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 34.85% complete, ETA 02:15:36
# Fork: 1 of 1
# Warmup Iteration   1: 13355.682 ns/op
# Warmup Iteration   2: 12020.484 ns/op
Iteration   1: 12073.082 ns/op
Iteration   2: 11944.975 ns/op
Iteration   3: 11931.861 ns/op
Iteration   4: 12005.649 ns/op
Iteration   5: 11925.851 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11976.284 ±(99.9%) 241.466 ns/op [Average]
  (min, avg, max) = (11925.851, 11976.284, 12073.082), stdev = 62.708
  CI (99.9%): [11734.817, 12217.750] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 35.15% complete, ETA 02:14:58
# Fork: 1 of 1
# Warmup Iteration   1: 20013.499 ns/op
# Warmup Iteration   2: 17141.063 ns/op
Iteration   1: 17232.960 ns/op
Iteration   2: 17037.282 ns/op
Iteration   3: 17065.104 ns/op
Iteration   4: 17026.354 ns/op
Iteration   5: 17092.400 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  17090.820 ±(99.9%) 321.533 ns/op [Average]
  (min, avg, max) = (17026.354, 17090.820, 17232.960), stdev = 83.501
  CI (99.9%): [16769.287, 17412.354] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 35.45% complete, ETA 02:14:20
# Fork: 1 of 1
# Warmup Iteration   1: 37641.267 ns/op
# Warmup Iteration   2: 33495.575 ns/op
Iteration   1: 33684.155 ns/op
Iteration   2: 33339.454 ns/op
Iteration   3: 33398.240 ns/op
Iteration   4: 33388.088 ns/op
Iteration   5: 33348.241 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  33431.636 ±(99.9%) 552.100 ns/op [Average]
  (min, avg, max) = (33339.454, 33431.636, 33684.155), stdev = 143.379
  CI (99.9%): [32879.536, 33983.735] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 35.76% complete, ETA 02:13:42
# Fork: 1 of 1
# Warmup Iteration   1: 86144.357 ns/op
# Warmup Iteration   2: 72264.324 ns/op
Iteration   1: 71651.169 ns/op
Iteration   2: 71215.105 ns/op
Iteration   3: 71719.770 ns/op
Iteration   4: 71178.546 ns/op
Iteration   5: 71101.918 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  71373.302 ±(99.9%) 1112.457 ns/op [Average]
  (min, avg, max) = (71101.918, 71373.302, 71719.770), stdev = 288.901
  CI (99.9%): [70260.845, 72485.758] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 36.06% complete, ETA 02:13:04
# Fork: 1 of 1
# Warmup Iteration   1: 800039.892 ns/op
# Warmup Iteration   2: 699716.931 ns/op
Iteration   1: 699835.493 ns/op
Iteration   2: 699451.390 ns/op
Iteration   3: 700883.588 ns/op
Iteration   4: 702890.022 ns/op
Iteration   5: 703251.158 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  701262.330 ±(99.9%) 6687.170 ns/op [Average]
  (min, avg, max) = (699451.390, 701262.330, 703251.158), stdev = 1736.637
  CI (99.9%): [694575.160, 707949.500] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 36.36% complete, ETA 02:12:26
# Fork: 1 of 1
# Warmup Iteration   1: 14014.412 ns/op
# Warmup Iteration   2: 11424.786 ns/op
Iteration   1: 11414.962 ns/op
Iteration   2: 11428.367 ns/op
Iteration   3: 11424.527 ns/op
Iteration   4: 11383.462 ns/op
Iteration   5: 11426.740 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11415.611 ±(99.9%) 72.040 ns/op [Average]
  (min, avg, max) = (11383.462, 11415.611, 11428.367), stdev = 18.709
  CI (99.9%): [11343.571, 11487.652] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 36.67% complete, ETA 02:11:48
# Fork: 1 of 1
# Warmup Iteration   1: 26160.789 ns/op
# Warmup Iteration   2: 21950.386 ns/op
Iteration   1: 22655.968 ns/op
Iteration   2: 22211.928 ns/op
Iteration   3: 22145.243 ns/op
Iteration   4: 22153.879 ns/op
Iteration   5: 22284.782 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  22290.360 ±(99.9%) 815.796 ns/op [Average]
  (min, avg, max) = (22145.243, 22290.360, 22655.968), stdev = 211.860
  CI (99.9%): [21474.564, 23106.156] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 36.97% complete, ETA 02:11:11
# Fork: 1 of 1
# Warmup Iteration   1: 51062.948 ns/op
# Warmup Iteration   2: 42987.339 ns/op
Iteration   1: 42987.491 ns/op
Iteration   2: 42965.988 ns/op
Iteration   3: 42914.850 ns/op
Iteration   4: 43028.608 ns/op
Iteration   5: 42853.298 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  42950.047 ±(99.9%) 261.357 ns/op [Average]
  (min, avg, max) = (42853.298, 42950.047, 43028.608), stdev = 67.874
  CI (99.9%): [42688.690, 43211.404] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 37.27% complete, ETA 02:10:33
# Fork: 1 of 1
# Warmup Iteration   1: 109592.652 ns/op
# Warmup Iteration   2: 92141.360 ns/op
Iteration   1: 92198.858 ns/op
Iteration   2: 91953.280 ns/op
Iteration   3: 91997.682 ns/op
Iteration   4: 91806.665 ns/op
Iteration   5: 91966.710 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  91984.639 ±(99.9%) 541.284 ns/op [Average]
  (min, avg, max) = (91806.665, 91984.639, 92198.858), stdev = 140.570
  CI (99.9%): [91443.355, 92525.923] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 37.58% complete, ETA 02:09:55
# Fork: 1 of 1
# Warmup Iteration   1: 950115.592 ns/op
# Warmup Iteration   2: 826240.552 ns/op
Iteration   1: 824995.391 ns/op
Iteration   2: 826245.783 ns/op
Iteration   3: 824190.703 ns/op
Iteration   4: 825000.257 ns/op
Iteration   5: 824072.915 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  824901.010 ±(99.9%) 3344.440 ns/op [Average]
  (min, avg, max) = (824072.915, 824901.010, 826245.783), stdev = 868.540
  CI (99.9%): [821556.570, 828245.450] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 37.88% complete, ETA 02:09:17
# Fork: 1 of 1
# Warmup Iteration   1: 2856.698 ns/op
# Warmup Iteration   2: 2499.489 ns/op
Iteration   1: 2490.149 ns/op
Iteration   2: 2494.211 ns/op
Iteration   3: 2514.725 ns/op
Iteration   4: 2492.110 ns/op
Iteration   5: 2491.183 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2496.476 ±(99.9%) 39.703 ns/op [Average]
  (min, avg, max) = (2490.149, 2496.476, 2514.725), stdev = 10.311
  CI (99.9%): [2456.772, 2536.179] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 38.18% complete, ETA 02:08:39
# Fork: 1 of 1
# Warmup Iteration   1: 5793.568 ns/op
# Warmup Iteration   2: 5149.986 ns/op
Iteration   1: 5115.530 ns/op
Iteration   2: 5082.400 ns/op
Iteration   3: 5101.820 ns/op
Iteration   4: 5092.853 ns/op
Iteration   5: 5108.672 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5100.255 ±(99.9%) 50.214 ns/op [Average]
  (min, avg, max) = (5082.400, 5100.255, 5115.530), stdev = 13.040
  CI (99.9%): [5050.041, 5150.468] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 38.48% complete, ETA 02:08:01
# Fork: 1 of 1
# Warmup Iteration   1: 11340.982 ns/op
# Warmup Iteration   2: 9889.026 ns/op
Iteration   1: 9905.269 ns/op
Iteration   2: 9801.970 ns/op
Iteration   3: 9758.898 ns/op
Iteration   4: 9776.465 ns/op
Iteration   5: 9757.032 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9799.927 ±(99.9%) 237.174 ns/op [Average]
  (min, avg, max) = (9757.032, 9799.927, 9905.269), stdev = 61.593
  CI (99.9%): [9562.753, 10037.101] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 38.79% complete, ETA 02:07:23
# Fork: 1 of 1
# Warmup Iteration   1: 22897.549 ns/op
# Warmup Iteration   2: 20468.809 ns/op
Iteration   1: 20180.419 ns/op
Iteration   2: 20194.156 ns/op
Iteration   3: 20201.621 ns/op
Iteration   4: 20320.065 ns/op
Iteration   5: 20383.985 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  20256.049 ±(99.9%) 349.639 ns/op [Average]
  (min, avg, max) = (20180.419, 20256.049, 20383.985), stdev = 90.800
  CI (99.9%): [19906.410, 20605.688] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 39.09% complete, ETA 02:06:45
# Fork: 1 of 1
# Warmup Iteration   1: 225208.474 ns/op
# Warmup Iteration   2: 202219.148 ns/op
Iteration   1: 201709.992 ns/op
Iteration   2: 201559.694 ns/op
Iteration   3: 201229.674 ns/op
Iteration   4: 201703.497 ns/op
Iteration   5: 201818.557 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  201604.283 ±(99.9%) 880.719 ns/op [Average]
  (min, avg, max) = (201229.674, 201604.283, 201818.557), stdev = 228.720
  CI (99.9%): [200723.564, 202485.002] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 39.39% complete, ETA 02:06:07
# Fork: 1 of 1
# Warmup Iteration   1: 3703.867 ns/op
# Warmup Iteration   2: 3296.951 ns/op
Iteration   1: 3279.658 ns/op
Iteration   2: 3270.767 ns/op
Iteration   3: 3268.617 ns/op
Iteration   4: 3271.975 ns/op
Iteration   5: 3276.322 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3273.468 ±(99.9%) 17.169 ns/op [Average]
  (min, avg, max) = (3268.617, 3273.468, 3279.658), stdev = 4.459
  CI (99.9%): [3256.299, 3290.637] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 39.70% complete, ETA 02:05:29
# Fork: 1 of 1
# Warmup Iteration   1: 7844.666 ns/op
# Warmup Iteration   2: 6871.967 ns/op
Iteration   1: 6842.352 ns/op
Iteration   2: 6853.110 ns/op
Iteration   3: 6869.310 ns/op
Iteration   4: 6865.807 ns/op
Iteration   5: 6854.991 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6857.114 ±(99.9%) 41.418 ns/op [Average]
  (min, avg, max) = (6842.352, 6857.114, 6869.310), stdev = 10.756
  CI (99.9%): [6815.696, 6898.532] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 40.00% complete, ETA 02:04:51
# Fork: 1 of 1
# Warmup Iteration   1: 15331.910 ns/op
# Warmup Iteration   2: 13549.809 ns/op
Iteration   1: 13484.209 ns/op
Iteration   2: 13357.888 ns/op
Iteration   3: 13397.049 ns/op
Iteration   4: 13361.930 ns/op
Iteration   5: 13416.619 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  13403.539 ±(99.9%) 197.627 ns/op [Average]
  (min, avg, max) = (13357.888, 13403.539, 13484.209), stdev = 51.323
  CI (99.9%): [13205.912, 13601.166] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 40.30% complete, ETA 02:04:13
# Fork: 1 of 1
# Warmup Iteration   1: 30376.964 ns/op
# Warmup Iteration   2: 26173.374 ns/op
Iteration   1: 26198.154 ns/op
Iteration   2: 26137.710 ns/op
Iteration   3: 26308.179 ns/op
Iteration   4: 26068.591 ns/op
Iteration   5: 26164.080 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  26175.343 ±(99.9%) 339.560 ns/op [Average]
  (min, avg, max) = (26068.591, 26175.343, 26308.179), stdev = 88.183
  CI (99.9%): [25835.783, 26514.903] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 40.61% complete, ETA 02:03:35
# Fork: 1 of 1
# Warmup Iteration   1: 298961.747 ns/op
# Warmup Iteration   2: 262336.202 ns/op
Iteration   1: 261045.096 ns/op
Iteration   2: 261813.532 ns/op
Iteration   3: 261978.905 ns/op
Iteration   4: 261578.240 ns/op
Iteration   5: 261580.338 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  261599.222 ±(99.9%) 1358.602 ns/op [Average]
  (min, avg, max) = (261045.096, 261599.222, 261978.905), stdev = 352.825
  CI (99.9%): [260240.621, 262957.824] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 40.91% complete, ETA 02:02:57
# Fork: 1 of 1
# Warmup Iteration   1: 6437.889 ns/op
# Warmup Iteration   2: 5507.636 ns/op
Iteration   1: 5541.441 ns/op
Iteration   2: 5535.726 ns/op
Iteration   3: 5535.850 ns/op
Iteration   4: 5530.683 ns/op
Iteration   5: 5538.759 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5536.492 ±(99.9%) 15.448 ns/op [Average]
  (min, avg, max) = (5530.683, 5536.492, 5541.441), stdev = 4.012
  CI (99.9%): [5521.044, 5551.939] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 41.21% complete, ETA 02:02:20
# Fork: 1 of 1
# Warmup Iteration   1: 11317.032 ns/op
# Warmup Iteration   2: 9808.862 ns/op
Iteration   1: 9743.916 ns/op
Iteration   2: 9759.289 ns/op
Iteration   3: 9739.115 ns/op
Iteration   4: 9729.686 ns/op
Iteration   5: 9774.496 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9749.300 ±(99.9%) 68.126 ns/op [Average]
  (min, avg, max) = (9729.686, 9749.300, 9774.496), stdev = 17.692
  CI (99.9%): [9681.175, 9817.426] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 41.52% complete, ETA 02:01:42
# Fork: 1 of 1
# Warmup Iteration   1: 22954.582 ns/op
# Warmup Iteration   2: 20166.654 ns/op
Iteration   1: 20067.022 ns/op
Iteration   2: 20070.727 ns/op
Iteration   3: 20199.537 ns/op
Iteration   4: 20056.291 ns/op
Iteration   5: 20048.808 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  20088.477 ±(99.9%) 241.391 ns/op [Average]
  (min, avg, max) = (20048.808, 20088.477, 20199.537), stdev = 62.689
  CI (99.9%): [19847.086, 20329.868] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 41.82% complete, ETA 02:01:04
# Fork: 1 of 1
# Warmup Iteration   1: 51891.368 ns/op
# Warmup Iteration   2: 43641.749 ns/op
Iteration   1: 43326.589 ns/op
Iteration   2: 43285.030 ns/op
Iteration   3: 43399.001 ns/op
Iteration   4: 43386.276 ns/op
Iteration   5: 43436.114 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  43366.602 ±(99.9%) 232.029 ns/op [Average]
  (min, avg, max) = (43285.030, 43366.602, 43436.114), stdev = 60.257
  CI (99.9%): [43134.573, 43598.631] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 42.12% complete, ETA 02:00:26
# Fork: 1 of 1
# Warmup Iteration   1: 478376.564 ns/op
# Warmup Iteration   2: 426177.747 ns/op
Iteration   1: 425900.488 ns/op
Iteration   2: 427984.689 ns/op
Iteration   3: 427696.668 ns/op
Iteration   4: 431352.638 ns/op
Iteration   5: 424908.182 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  427568.533 ±(99.9%) 9504.325 ns/op [Average]
  (min, avg, max) = (424908.182, 427568.533, 431352.638), stdev = 2468.243
  CI (99.9%): [418064.208, 437072.858] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 42.42% complete, ETA 01:59:48
# Fork: 1 of 1
# Warmup Iteration   1: 30445.953 ns/op
# Warmup Iteration   2: 26658.857 ns/op
Iteration   1: 26332.843 ns/op
Iteration   2: 26113.240 ns/op
Iteration   3: 26019.495 ns/op
Iteration   4: 26325.719 ns/op
Iteration   5: 26094.690 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  26177.197 ±(99.9%) 551.504 ns/op [Average]
  (min, avg, max) = (26019.495, 26177.197, 26332.843), stdev = 143.224
  CI (99.9%): [25625.693, 26728.701] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 42.73% complete, ETA 01:59:10
# Fork: 1 of 1
# Warmup Iteration   1: 54509.285 ns/op
# Warmup Iteration   2: 48888.418 ns/op
Iteration   1: 47889.240 ns/op
Iteration   2: 47415.173 ns/op
Iteration   3: 47328.284 ns/op
Iteration   4: 47378.432 ns/op
Iteration   5: 47440.620 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  47490.350 ±(99.9%) 873.912 ns/op [Average]
  (min, avg, max) = (47328.284, 47490.350, 47889.240), stdev = 226.952
  CI (99.9%): [46616.438, 48364.262] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 43.03% complete, ETA 01:58:32
# Fork: 1 of 1
# Warmup Iteration   1: 120486.036 ns/op
# Warmup Iteration   2: 109040.408 ns/op
Iteration   1: 106241.274 ns/op
Iteration   2: 106156.383 ns/op
Iteration   3: 106502.296 ns/op
Iteration   4: 106182.323 ns/op
Iteration   5: 106426.925 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  106301.840 ±(99.9%) 593.234 ns/op [Average]
  (min, avg, max) = (106156.383, 106301.840, 106502.296), stdev = 154.061
  CI (99.9%): [105708.606, 106895.074] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 43.33% complete, ETA 01:57:54
# Fork: 1 of 1
# Warmup Iteration   1: 278232.204 ns/op
# Warmup Iteration   2: 255291.122 ns/op
Iteration   1: 247638.490 ns/op
Iteration   2: 242567.033 ns/op
Iteration   3: 241701.009 ns/op
Iteration   4: 242469.321 ns/op
Iteration   5: 241465.142 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  243168.199 ±(99.9%) 9795.780 ns/op [Average]
  (min, avg, max) = (241465.142, 243168.199, 247638.490), stdev = 2543.933
  CI (99.9%): [233372.419, 252963.979] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 43.64% complete, ETA 01:57:16
# Fork: 1 of 1
# Warmup Iteration   1: 2537952.251 ns/op
# Warmup Iteration   2: 2311185.500 ns/op
Iteration   1: 2254070.775 ns/op
Iteration   2: 2260218.950 ns/op
Iteration   3: 2256098.758 ns/op
Iteration   4: 2304427.675 ns/op
Iteration   5: 2295744.138 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2274112.059 ±(99.9%) 92458.241 ns/op [Average]
  (min, avg, max) = (2254070.775, 2274112.059, 2304427.675), stdev = 24011.112
  CI (99.9%): [2181653.818, 2366570.300] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 43.94% complete, ETA 01:56:38
# Fork: 1 of 1
# Warmup Iteration   1: 4675.186 ns/op
# Warmup Iteration   2: 4105.178 ns/op
Iteration   1: 4203.642 ns/op
Iteration   2: 4086.794 ns/op
Iteration   3: 4078.026 ns/op
Iteration   4: 4094.646 ns/op
Iteration   5: 4082.411 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  4109.104 ±(99.9%) 204.870 ns/op [Average]
  (min, avg, max) = (4078.026, 4109.104, 4203.642), stdev = 53.204
  CI (99.9%): [3904.234, 4313.973] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 44.24% complete, ETA 01:56:00
# Fork: 1 of 1
# Warmup Iteration   1: 8122.793 ns/op
# Warmup Iteration   2: 7167.028 ns/op
Iteration   1: 7317.815 ns/op
Iteration   2: 7308.175 ns/op
Iteration   3: 7357.609 ns/op
Iteration   4: 7320.109 ns/op
Iteration   5: 7312.619 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  7323.265 ±(99.9%) 76.049 ns/op [Average]
  (min, avg, max) = (7308.175, 7323.265, 7357.609), stdev = 19.750
  CI (99.9%): [7247.216, 7399.314] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 44.55% complete, ETA 01:55:22
# Fork: 1 of 1
# Warmup Iteration   1: 14782.985 ns/op
# Warmup Iteration   2: 13385.485 ns/op
Iteration   1: 13523.343 ns/op
Iteration   2: 13352.528 ns/op
Iteration   3: 13307.801 ns/op
Iteration   4: 13307.329 ns/op
Iteration   5: 13257.342 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  13349.668 ±(99.9%) 395.702 ns/op [Average]
  (min, avg, max) = (13257.342, 13349.668, 13523.343), stdev = 102.763
  CI (99.9%): [12953.966, 13745.371] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 44.85% complete, ETA 01:54:44
# Fork: 1 of 1
# Warmup Iteration   1: 29085.160 ns/op
# Warmup Iteration   2: 26236.828 ns/op
Iteration   1: 25311.078 ns/op
Iteration   2: 25286.276 ns/op
Iteration   3: 25279.848 ns/op
Iteration   4: 25248.792 ns/op
Iteration   5: 25286.844 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  25282.567 ±(99.9%) 85.953 ns/op [Average]
  (min, avg, max) = (25248.792, 25282.567, 25311.078), stdev = 22.322
  CI (99.9%): [25196.615, 25368.520] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 45.15% complete, ETA 01:54:06
# Fork: 1 of 1
# Warmup Iteration   1: 261689.757 ns/op
# Warmup Iteration   2: 237932.641 ns/op
Iteration   1: 238430.111 ns/op
Iteration   2: 237152.703 ns/op
Iteration   3: 237485.357 ns/op
Iteration   4: 238003.647 ns/op
Iteration   5: 237725.089 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  237759.381 ±(99.9%) 1880.388 ns/op [Average]
  (min, avg, max) = (237152.703, 237759.381, 238430.111), stdev = 488.331
  CI (99.9%): [235878.994, 239639.769] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 45.45% complete, ETA 01:53:28
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
35951.099 ns/op
# Warmup Iteration   2: 33021.924 ns/op
Iteration   1: 35367.325 ns/op
Iteration   2: 34366.724 ns/op
Iteration   3: 34851.467 ns/op
Iteration   4: 36419.393 ns/op
Iteration   5: 35554.713 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  35311.924 ±(99.9%) 2978.921 ns/op [Average]
  (min, avg, max) = (34366.724, 35311.924, 36419.393), stdev = 773.616
  CI (99.9%): [32333.004, 38290.845] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 45.76% complete, ETA 01:52:51
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
68236.049 ns/op
# Warmup Iteration   2: 68444.624 ns/op
Iteration   1: 64794.307 ns/op
Iteration   2: 65517.575 ns/op
Iteration   3: 63455.830 ns/op
Iteration   4: 64577.831 ns/op
Iteration   5: 62693.150 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  64207.739 ±(99.9%) 4329.212 ns/op [Average]
  (min, avg, max) = (62693.150, 64207.739, 65517.575), stdev = 1124.283
  CI (99.9%): [59878.526, 68536.951] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 46.06% complete, ETA 01:52:13
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
143922.735 ns/op
# Warmup Iteration   2: 131082.602 ns/op
Iteration   1: 131924.778 ns/op
Iteration   2: 133708.898 ns/op
Iteration   3: 132885.939 ns/op
Iteration   4: 127215.744 ns/op
Iteration   5: 127126.640 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  130572.400 ±(99.9%) 12201.044 ns/op [Average]
  (min, avg, max) = (127126.640, 130572.400, 133708.898), stdev = 3168.572
  CI (99.9%): [118371.356, 142773.444] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 46.36% complete, ETA 01:51:35
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
297622.715 ns/op
# Warmup Iteration   2: 305418.765 ns/op
Iteration   1: 285760.695 ns/op
Iteration   2: 300758.070 ns/op
Iteration   3: 304976.737 ns/op
Iteration   4: 324431.099 ns/op
Iteration   5: 317014.833 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  306588.287 ±(99.9%) 57677.965 ns/op [Average]
  (min, avg, max) = (285760.695, 306588.287, 324431.099), stdev = 14978.784
  CI (99.9%): [248910.322, 364266.252] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 46.67% complete, ETA 01:50:57
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
3004209.775 ns/op
# Warmup Iteration   2: 2732266.894 ns/op
Iteration   1: 2515958.439 ns/op
Iteration   2: 2530848.234 ns/op
Iteration   3: 2551058.527 ns/op
Iteration   4: 2718880.809 ns/op
Iteration   5: 2815673.557 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2626483.913 ±(99.9%) 514392.417 ns/op [Average]
  (min, avg, max) = (2515958.439, 2626483.913, 2815673.557), stdev = 133586.077
  CI (99.9%): [2112091.496, 3140876.330] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 46.97% complete, ETA 01:50:19
# Fork: 1 of 1
# Warmup Iteration   1: 3001.412 ns/op
# Warmup Iteration   2: 2640.537 ns/op
Iteration   1: 2686.030 ns/op
Iteration   2: 2623.730 ns/op
Iteration   3: 2623.516 ns/op
Iteration   4: 2624.564 ns/op
Iteration   5: 2620.514 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2635.671 ±(99.9%) 108.562 ns/op [Average]
  (min, avg, max) = (2620.514, 2635.671, 2686.030), stdev = 28.193
  CI (99.9%): [2527.109, 2744.232] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 47.27% complete, ETA 01:49:42
# Fork: 1 of 1
# Warmup Iteration   1: 6221.647 ns/op
# Warmup Iteration   2: 5495.517 ns/op
Iteration   1: 5446.390 ns/op
Iteration   2: 5446.959 ns/op
Iteration   3: 5444.349 ns/op
Iteration   4: 5434.325 ns/op
Iteration   5: 5420.588 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5438.522 ±(99.9%) 43.322 ns/op [Average]
  (min, avg, max) = (5420.588, 5438.522, 5446.959), stdev = 11.250
  CI (99.9%): [5395.200, 5481.844] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 47.58% complete, ETA 01:49:04
# Fork: 1 of 1
# Warmup Iteration   1: 10182.331 ns/op
# Warmup Iteration   2: 9044.330 ns/op
Iteration   1: 9036.305 ns/op
Iteration   2: 9003.637 ns/op
Iteration   3: 9008.040 ns/op
Iteration   4: 8999.425 ns/op
Iteration   5: 8985.496 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9006.581 ±(99.9%) 71.784 ns/op [Average]
  (min, avg, max) = (8985.496, 9006.581, 9036.305), stdev = 18.642
  CI (99.9%): [8934.796, 9078.365] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 47.88% complete, ETA 01:48:26
# Fork: 1 of 1
# Warmup Iteration   1: 20059.039 ns/op
# Warmup Iteration   2: 17673.217 ns/op
Iteration   1: 17689.638 ns/op
Iteration   2: 17663.170 ns/op
Iteration   3: 17713.483 ns/op
Iteration   4: 17737.030 ns/op
Iteration   5: 17654.245 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  17691.513 ±(99.9%) 132.697 ns/op [Average]
  (min, avg, max) = (17654.245, 17691.513, 17737.030), stdev = 34.461
  CI (99.9%): [17558.816, 17824.210] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 48.18% complete, ETA 01:47:48
# Fork: 1 of 1
# Warmup Iteration   1: 221931.514 ns/op
# Warmup Iteration   2: 198429.023 ns/op
Iteration   1: 198184.840 ns/op
Iteration   2: 197999.204 ns/op
Iteration   3: 198179.647 ns/op
Iteration   4: 197869.514 ns/op
Iteration   5: 198027.141 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  198052.069 ±(99.9%) 511.740 ns/op [Average]
  (min, avg, max) = (197869.514, 198052.069, 198184.840), stdev = 132.897
  CI (99.9%): [197540.329, 198563.809] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 48.48% complete, ETA 01:47:10
# Fork: 1 of 1
# Warmup Iteration   1: 41548.086 ns/op
# Warmup Iteration   2: 36203.827 ns/op
Iteration   1: 36115.590 ns/op
Iteration   2: 36212.962 ns/op
Iteration   3: 36196.647 ns/op
Iteration   4: 36252.361 ns/op
Iteration   5: 36197.056 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  36194.923 ±(99.9%) 191.817 ns/op [Average]
  (min, avg, max) = (36115.590, 36194.923, 36252.361), stdev = 49.814
  CI (99.9%): [36003.106, 36386.740] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 48.79% complete, ETA 01:46:32
# Fork: 1 of 1
# Warmup Iteration   1: 73524.076 ns/op
# Warmup Iteration   2: 64403.419 ns/op
Iteration   1: 64063.154 ns/op
Iteration   2: 64226.704 ns/op
Iteration   3: 63813.277 ns/op
Iteration   4: 64169.948 ns/op
Iteration   5: 65702.549 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  64395.127 ±(99.9%) 2879.743 ns/op [Average]
  (min, avg, max) = (63813.277, 64395.127, 65702.549), stdev = 747.860
  CI (99.9%): [61515.383, 67274.870] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 49.09% complete, ETA 01:45:55
# Fork: 1 of 1
# Warmup Iteration   1: 156565.947 ns/op
# Warmup Iteration   2: 129870.205 ns/op
Iteration   1: 128391.091 ns/op
Iteration   2: 128312.786 ns/op
Iteration   3: 128834.306 ns/op
Iteration   4: 129126.450 ns/op
Iteration   5: 128629.991 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  128658.925 ±(99.9%) 1279.612 ns/op [Average]
  (min, avg, max) = (128312.786, 128658.925, 129126.450), stdev = 332.311
  CI (99.9%): [127379.313, 129938.537] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 49.39% complete, ETA 01:45:17
# Fork: 1 of 1
# Warmup Iteration   1: 344255.712 ns/op
# Warmup Iteration   2: 297761.949 ns/op
Iteration   1: 298487.364 ns/op
Iteration   2: 296937.466 ns/op
Iteration   3: 297224.173 ns/op
Iteration   4: 297026.461 ns/op
Iteration   5: 297001.819 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  297335.457 ±(99.9%) 2513.606 ns/op [Average]
  (min, avg, max) = (296937.466, 297335.457, 298487.364), stdev = 652.776
  CI (99.9%): [294821.850, 299849.063] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 49.70% complete, ETA 01:44:40
# Fork: 1 of 1
# Warmup Iteration   1: 3557215.166 ns/op
# Warmup Iteration   2: 3093198.444 ns/op
Iteration   1: 3094554.190 ns/op
Iteration   2: 3081689.134 ns/op
Iteration   3: 3082340.631 ns/op
Iteration   4: 3089851.868 ns/op
Iteration   5: 3072784.528 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3084244.070 ±(99.9%) 32171.770 ns/op [Average]
  (min, avg, max) = (3072784.528, 3084244.070, 3094554.190), stdev = 8354.906
  CI (99.9%): [3052072.300, 3116415.840] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 50.00% complete, ETA 01:44:02
# Fork: 1 of 1
# Warmup Iteration   1: 21718.747 ns/op
# Warmup Iteration   2: 17032.800 ns/op
Iteration   1: 16989.848 ns/op
Iteration   2: 16995.331 ns/op
Iteration   3: 17210.900 ns/op
Iteration   4: 16980.459 ns/op
Iteration   5: 16979.653 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  17031.238 ±(99.9%) 387.561 ns/op [Average]
  (min, avg, max) = (16979.653, 17031.238, 17210.900), stdev = 100.648
  CI (99.9%): [16643.677, 17418.799] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 50.30% complete, ETA 01:43:24
# Fork: 1 of 1
# Warmup Iteration   1: 46996.059 ns/op
# Warmup Iteration   2: 31614.414 ns/op
Iteration   1: 31523.385 ns/op
Iteration   2: 31482.157 ns/op
Iteration   3: 31429.417 ns/op
Iteration   4: 31366.352 ns/op
Iteration   5: 31382.681 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  31436.798 ±(99.9%) 254.699 ns/op [Average]
  (min, avg, max) = (31366.352, 31436.798, 31523.385), stdev = 66.145
  CI (99.9%): [31182.099, 31691.498] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 50.61% complete, ETA 01:42:46
# Fork: 1 of 1
# Warmup Iteration   1: 82021.821 ns/op
# Warmup Iteration   2: 57069.356 ns/op
Iteration   1: 56892.459 ns/op
Iteration   2: 56843.287 ns/op
Iteration   3: 56834.570 ns/op
Iteration   4: 56748.461 ns/op
Iteration   5: 56792.782 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  56822.312 ±(99.9%) 209.470 ns/op [Average]
  (min, avg, max) = (56748.461, 56822.312, 56892.459), stdev = 54.399
  CI (99.9%): [56612.842, 57031.782] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 50.91% complete, ETA 01:42:08
# Fork: 1 of 1
# Warmup Iteration   1: 147830.943 ns/op
# Warmup Iteration   2: 115899.606 ns/op
Iteration   1: 115848.431 ns/op
Iteration   2: 115724.661 ns/op
Iteration   3: 116100.701 ns/op
Iteration   4: 115730.538 ns/op
Iteration   5: 115602.796 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  115801.425 ±(99.9%) 725.892 ns/op [Average]
  (min, avg, max) = (115602.796, 115801.425, 116100.701), stdev = 188.512
  CI (99.9%): [115075.534, 116527.317] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 51.21% complete, ETA 01:41:31
# Fork: 1 of 1
# Warmup Iteration   1: 1192791.582 ns/op
# Warmup Iteration   2: 834497.656 ns/op
Iteration   1: 825278.507 ns/op
Iteration   2: 825283.545 ns/op
Iteration   3: 825201.197 ns/op
Iteration   4: 826141.671 ns/op
Iteration   5: 825110.564 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  825403.097 ±(99.9%) 1612.733 ns/op [Average]
  (min, avg, max) = (825110.564, 825403.097, 826141.671), stdev = 418.822
  CI (99.9%): [823790.364, 827015.830] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 51.52% complete, ETA 01:40:53
# Fork: 1 of 1
# Warmup Iteration   1: 15347.549 ns/op
# Warmup Iteration   2: 12797.540 ns/op
Iteration   1: 12853.141 ns/op
Iteration   2: 12944.065 ns/op
Iteration   3: 12869.023 ns/op
Iteration   4: 12878.237 ns/op
Iteration   5: 12865.606 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  12882.014 ±(99.9%) 137.983 ns/op [Average]
  (min, avg, max) = (12853.141, 12882.014, 12944.065), stdev = 35.834
  CI (99.9%): [12744.031, 13019.998] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 51.82% complete, ETA 01:40:15
# Fork: 1 of 1
# Warmup Iteration   1: 28873.612 ns/op
# Warmup Iteration   2: 22258.391 ns/op
Iteration   1: 22206.604 ns/op
Iteration   2: 22205.362 ns/op
Iteration   3: 22179.415 ns/op
Iteration   4: 22165.044 ns/op
Iteration   5: 22146.149 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  22180.515 ±(99.9%) 100.404 ns/op [Average]
  (min, avg, max) = (22146.149, 22180.515, 22206.604), stdev = 26.075
  CI (99.9%): [22080.111, 22280.919] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 52.12% complete, ETA 01:39:37
# Fork: 1 of 1
# Warmup Iteration   1: 64203.391 ns/op
# Warmup Iteration   2: 43328.458 ns/op
Iteration   1: 43305.275 ns/op
Iteration   2: 43400.714 ns/op
Iteration   3: 43277.496 ns/op
Iteration   4: 43215.719 ns/op
Iteration   5: 43259.180 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  43291.677 ±(99.9%) 266.089 ns/op [Average]
  (min, avg, max) = (43215.719, 43291.677, 43400.714), stdev = 69.103
  CI (99.9%): [43025.587, 43557.766] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 52.42% complete, ETA 01:38:59
# Fork: 1 of 1
# Warmup Iteration   1: 108056.845 ns/op
# Warmup Iteration   2: 86212.769 ns/op
Iteration   1: 85000.098 ns/op
Iteration   2: 85000.262 ns/op
Iteration   3: 85052.274 ns/op
Iteration   4: 85817.491 ns/op
Iteration   5: 85109.853 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  85195.995 ±(99.9%) 1349.128 ns/op [Average]
  (min, avg, max) = (85000.098, 85195.995, 85817.491), stdev = 350.364
  CI (99.9%): [83846.867, 86545.124] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 52.73% complete, ETA 01:38:21
# Fork: 1 of 1
# Warmup Iteration   1: 876466.751 ns/op
# Warmup Iteration   2: 677336.463 ns/op
Iteration   1: 677859.160 ns/op
Iteration   2: 679201.359 ns/op
Iteration   3: 677517.130 ns/op
Iteration   4: 677140.866 ns/op
Iteration   5: 677677.721 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  677879.247 ±(99.9%) 3023.020 ns/op [Average]
  (min, avg, max) = (677140.866, 677879.247, 679201.359), stdev = 785.069
  CI (99.9%): [674856.227, 680902.267] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 53.03% complete, ETA 01:37:43
# Fork: 1 of 1
# Warmup Iteration   1: 21989.714 ns/op
# Warmup Iteration   2: 14615.161 ns/op
Iteration   1: 14620.427 ns/op
Iteration   2: 14623.328 ns/op
Iteration   3: 14660.221 ns/op
Iteration   4: 14790.766 ns/op
Iteration   5: 14645.665 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14668.081 ±(99.9%) 271.529 ns/op [Average]
  (min, avg, max) = (14620.427, 14668.081, 14790.766), stdev = 70.515
  CI (99.9%): [14396.552, 14939.611] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 53.33% complete, ETA 01:37:06
# Fork: 1 of 1
# Warmup Iteration   1: 40260.136 ns/op
# Warmup Iteration   2: 24400.687 ns/op
Iteration   1: 24394.411 ns/op
Iteration   2: 24408.969 ns/op
Iteration   3: 24410.963 ns/op
Iteration   4: 24371.963 ns/op
Iteration   5: 24422.014 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24401.664 ±(99.9%) 74.287 ns/op [Average]
  (min, avg, max) = (24371.963, 24401.664, 24422.014), stdev = 19.292
  CI (99.9%): [24327.377, 24475.952] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 53.64% complete, ETA 01:36:28
# Fork: 1 of 1
# Warmup Iteration   1: 63875.760 ns/op
# Warmup Iteration   2: 43378.325 ns/op
Iteration   1: 43322.875 ns/op
Iteration   2: 43316.445 ns/op
Iteration   3: 43352.352 ns/op
Iteration   4: 43289.723 ns/op
Iteration   5: 43290.452 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  43314.370 ±(99.9%) 100.021 ns/op [Average]
  (min, avg, max) = (43289.723, 43314.370, 43352.352), stdev = 25.975
  CI (99.9%): [43214.348, 43414.391] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 53.94% complete, ETA 01:35:50
# Fork: 1 of 1
# Warmup Iteration   1: 126914.283 ns/op
# Warmup Iteration   2: 83145.177 ns/op
Iteration   1: 82769.645 ns/op
Iteration   2: 82867.354 ns/op
Iteration   3: 83256.380 ns/op
Iteration   4: 82964.393 ns/op
Iteration   5: 82680.511 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  82907.657 ±(99.9%) 854.751 ns/op [Average]
  (min, avg, max) = (82680.511, 82907.657, 83256.380), stdev = 221.976
  CI (99.9%): [82052.905, 83762.408] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 54.24% complete, ETA 01:35:12
# Fork: 1 of 1
# Warmup Iteration   1: 765714.898 ns/op
# Warmup Iteration   2: 582973.035 ns/op
Iteration   1: 583466.989 ns/op
Iteration   2: 583622.041 ns/op
Iteration   3: 582348.701 ns/op
Iteration   4: 582901.382 ns/op
Iteration   5: 582515.737 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  582970.970 ±(99.9%) 2169.066 ns/op [Average]
  (min, avg, max) = (582348.701, 582970.970, 583622.041), stdev = 563.300
  CI (99.9%): [580801.904, 585140.036] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 54.55% complete, ETA 01:34:34
# Fork: 1 of 1
# Warmup Iteration   1: 8091.693 ns/op
# Warmup Iteration   2: 5213.021 ns/op
Iteration   1: 5275.425 ns/op
Iteration   2: 5193.830 ns/op
Iteration   3: 5190.678 ns/op
Iteration   4: 5184.070 ns/op
Iteration   5: 5187.767 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  5206.354 ±(99.9%) 149.327 ns/op [Average]
  (min, avg, max) = (5184.070, 5206.354, 5275.425), stdev = 38.780
  CI (99.9%): [5057.027, 5355.681] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 54.85% complete, ETA 01:33:56
# Fork: 1 of 1
# Warmup Iteration   1: 15311.745 ns/op
# Warmup Iteration   2: 10247.118 ns/op
Iteration   1: 10099.796 ns/op
Iteration   2: 10090.620 ns/op
Iteration   3: 10084.082 ns/op
Iteration   4: 10086.207 ns/op
Iteration   5: 10063.555 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  10084.852 ±(99.9%) 51.395 ns/op [Average]
  (min, avg, max) = (10063.555, 10084.852, 10099.796), stdev = 13.347
  CI (99.9%): [10033.457, 10136.247] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 55.15% complete, ETA 01:33:18
# Fork: 1 of 1
# Warmup Iteration   1: 31555.904 ns/op
# Warmup Iteration   2: 19171.838 ns/op
Iteration   1: 19120.667 ns/op
Iteration   2: 19096.881 ns/op
Iteration   3: 19244.819 ns/op
Iteration   4: 19109.794 ns/op
Iteration   5: 19145.358 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  19143.504 ±(99.9%) 228.618 ns/op [Average]
  (min, avg, max) = (19096.881, 19143.504, 19244.819), stdev = 59.371
  CI (99.9%): [18914.886, 19372.122] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 55.45% complete, ETA 01:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 54736.619 ns/op
# Warmup Iteration   2: 34873.587 ns/op
Iteration   1: 34827.530 ns/op
Iteration   2: 34882.081 ns/op
Iteration   3: 34794.317 ns/op
Iteration   4: 35064.867 ns/op
Iteration   5: 34819.568 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  34877.673 ±(99.9%) 421.377 ns/op [Average]
  (min, avg, max) = (34794.317, 34877.673, 35064.867), stdev = 109.430
  CI (99.9%): [34456.296, 35299.049] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 55.76% complete, ETA 01:32:03
# Fork: 1 of 1
# Warmup Iteration   1: 393970.663 ns/op
# Warmup Iteration   2: 278959.593 ns/op
Iteration   1: 281364.568 ns/op
Iteration   2: 278840.577 ns/op
Iteration   3: 278580.207 ns/op
Iteration   4: 279551.989 ns/op
Iteration   5: 278360.846 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  279339.638 ±(99.9%) 4688.175 ns/op [Average]
  (min, avg, max) = (278360.846, 279339.638, 281364.568), stdev = 1217.504
  CI (99.9%): [274651.462, 284027.813] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 56.06% complete, ETA 01:31:25
# Fork: 1 of 1
# Warmup Iteration   1: 10403.284 ns/op
# Warmup Iteration   2: 7996.687 ns/op
Iteration   1: 7994.754 ns/op
Iteration   2: 7991.098 ns/op
Iteration   3: 7984.504 ns/op
Iteration   4: 8004.031 ns/op
Iteration   5: 7995.540 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  7993.985 ±(99.9%) 27.375 ns/op [Average]
  (min, avg, max) = (7984.504, 7993.985, 8004.031), stdev = 7.109
  CI (99.9%): [7966.610, 8021.360] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 56.36% complete, ETA 01:30:47
# Fork: 1 of 1
# Warmup Iteration   1: 19084.408 ns/op
# Warmup Iteration   2: 13948.145 ns/op
Iteration   1: 13919.280 ns/op
Iteration   2: 13840.269 ns/op
Iteration   3: 13834.991 ns/op
Iteration   4: 13856.830 ns/op
Iteration   5: 13820.138 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13854.302 ±(99.9%) 148.706 ns/op [Average]
  (min, avg, max) = (13820.138, 13854.302, 13919.280), stdev = 38.618
  CI (99.9%): [13705.596, 14003.008] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 56.67% complete, ETA 01:30:09
# Fork: 1 of 1
# Warmup Iteration   1: 37776.421 ns/op
# Warmup Iteration   2: 24273.211 ns/op
Iteration   1: 24203.834 ns/op
Iteration   2: 24153.674 ns/op
Iteration   3: 24125.270 ns/op
Iteration   4: 24165.233 ns/op
Iteration   5: 24152.049 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24160.012 ±(99.9%) 109.899 ns/op [Average]
  (min, avg, max) = (24125.270, 24160.012, 24203.834), stdev = 28.540
  CI (99.9%): [24050.113, 24269.911] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 56.97% complete, ETA 01:29:31
# Fork: 1 of 1
# Warmup Iteration   1: 74427.979 ns/op
# Warmup Iteration   2: 47976.616 ns/op
Iteration   1: 46878.389 ns/op
Iteration   2: 46942.175 ns/op
Iteration   3: 46858.158 ns/op
Iteration   4: 47243.270 ns/op
Iteration   5: 47679.723 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  47120.343 ±(99.9%) 1343.653 ns/op [Average]
  (min, avg, max) = (46858.158, 47120.343, 47679.723), stdev = 348.942
  CI (99.9%): [45776.690, 48463.996] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 57.27% complete, ETA 01:28:53
# Fork: 1 of 1
# Warmup Iteration   1: 563025.584 ns/op
# Warmup Iteration   2: 400320.847 ns/op
Iteration   1: 400627.359 ns/op
Iteration   2: 400711.286 ns/op
Iteration   3: 400131.837 ns/op
Iteration   4: 404794.448 ns/op
Iteration   5: 400090.775 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  401271.141 ±(99.9%) 7660.958 ns/op [Average]
  (min, avg, max) = (400090.775, 401271.141, 404794.448), stdev = 1989.526
  CI (99.9%): [393610.183, 408932.099] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 57.58% complete, ETA 01:28:15
# Fork: 1 of 1
# Warmup Iteration   1: 10204.106 ns/op
# Warmup Iteration   2: 8371.077 ns/op
Iteration   1: 8333.638 ns/op
Iteration   2: 8337.857 ns/op
Iteration   3: 8326.615 ns/op
Iteration   4: 8335.481 ns/op
Iteration   5: 8340.073 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8334.733 ±(99.9%) 19.817 ns/op [Average]
  (min, avg, max) = (8326.615, 8334.733, 8340.073), stdev = 5.146
  CI (99.9%): [8314.916, 8354.550] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 57.88% complete, ETA 01:27:38
# Fork: 1 of 1
# Warmup Iteration   1: 18744.253 ns/op
# Warmup Iteration   2: 14988.560 ns/op
Iteration   1: 14923.330 ns/op
Iteration   2: 15036.697 ns/op
Iteration   3: 14969.981 ns/op
Iteration   4: 15049.471 ns/op
Iteration   5: 14911.413 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14978.178 ±(99.9%) 243.842 ns/op [Average]
  (min, avg, max) = (14911.413, 14978.178, 15049.471), stdev = 63.325
  CI (99.9%): [14734.336, 15222.021] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 58.18% complete, ETA 01:27:00
# Fork: 1 of 1
# Warmup Iteration   1: 38160.508 ns/op
# Warmup Iteration   2: 29333.209 ns/op
Iteration   1: 29329.889 ns/op
Iteration   2: 29350.596 ns/op
Iteration   3: 29278.133 ns/op
Iteration   4: 29338.004 ns/op
Iteration   5: 29324.944 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  29324.313 ±(99.9%) 106.195 ns/op [Average]
  (min, avg, max) = (29278.133, 29324.313, 29350.596), stdev = 27.579
  CI (99.9%): [29218.118, 29430.508] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 58.48% complete, ETA 01:26:22
# Fork: 1 of 1
# Warmup Iteration   1: 60185.836 ns/op
# Warmup Iteration   2: 48584.606 ns/op
Iteration   1: 48498.619 ns/op
Iteration   2: 48529.120 ns/op
Iteration   3: 48462.293 ns/op
Iteration   4: 48799.117 ns/op
Iteration   5: 48495.585 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  48556.947 ±(99.9%) 529.191 ns/op [Average]
  (min, avg, max) = (48462.293, 48556.947, 48799.117), stdev = 137.429
  CI (99.9%): [48027.756, 49086.138] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 58.79% complete, ETA 01:25:44
# Fork: 1 of 1
# Warmup Iteration   1: 578337.533 ns/op
# Warmup Iteration   2: 435499.873 ns/op
Iteration   1: 435383.745 ns/op
Iteration   2: 434727.527 ns/op
Iteration   3: 435494.344 ns/op
Iteration   4: 434063.500 ns/op
Iteration   5: 437241.354 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  435382.094 ±(99.9%) 4571.007 ns/op [Average]
  (min, avg, max) = (434063.500, 435382.094, 437241.354), stdev = 1187.076
  CI (99.9%): [430811.087, 439953.101] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 59.09% complete, ETA 01:25:06
# Fork: 1 of 1
# Warmup Iteration   1: 164586.095 ns/op
# Warmup Iteration   2: 134807.678 ns/op
Iteration   1: 131069.366 ns/op
Iteration   2: 131175.486 ns/op
Iteration   3: 130618.425 ns/op
Iteration   4: 130479.362 ns/op
Iteration   5: 130544.316 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  130777.391 ±(99.9%) 1236.028 ns/op [Average]
  (min, avg, max) = (130479.362, 130777.391, 131175.486), stdev = 320.992
  CI (99.9%): [129541.363, 132013.419] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 59.39% complete, ETA 01:24:28
# Fork: 1 of 1
# Warmup Iteration   1: 227244.294 ns/op
# Warmup Iteration   2: 181253.159 ns/op
Iteration   1: 177779.907 ns/op
Iteration   2: 178401.279 ns/op
Iteration   3: 180916.904 ns/op
Iteration   4: 178880.898 ns/op
Iteration   5: 178469.580 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  178889.714 ±(99.9%) 4619.300 ns/op [Average]
  (min, avg, max) = (177779.907, 178889.714, 180916.904), stdev = 1199.618
  CI (99.9%): [174270.413, 183509.014] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 59.70% complete, ETA 01:23:50
# Fork: 1 of 1
# Warmup Iteration   1: 300061.344 ns/op
# Warmup Iteration   2: 235710.174 ns/op
Iteration   1: 233175.619 ns/op
Iteration   2: 234265.100 ns/op
Iteration   3: 233757.678 ns/op
Iteration   4: 233489.646 ns/op
Iteration   5: 233737.918 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  233685.192 ±(99.9%) 1542.940 ns/op [Average]
  (min, avg, max) = (233175.619, 233685.192, 234265.100), stdev = 400.697
  CI (99.9%): [232142.252, 235228.132] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 60.00% complete, ETA 01:23:12
# Fork: 1 of 1
# Warmup Iteration   1: 443787.181 ns/op
# Warmup Iteration   2: 355111.764 ns/op
Iteration   1: 351784.844 ns/op
Iteration   2: 350024.985 ns/op
Iteration   3: 350948.534 ns/op
Iteration   4: 349361.303 ns/op
Iteration   5: 350070.928 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  350438.119 ±(99.9%) 3622.081 ns/op [Average]
  (min, avg, max) = (349361.303, 350438.119, 351784.844), stdev = 940.643
  CI (99.9%): [346816.038, 354060.200] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 60.30% complete, ETA 01:22:34
# Fork: 1 of 1
# Warmup Iteration   1: 2455875.490 ns/op
# Warmup Iteration   2: 2032639.748 ns/op
Iteration   1: 1993069.239 ns/op
Iteration   2: 1995954.933 ns/op
Iteration   3: 1989769.560 ns/op
Iteration   4: 1989984.184 ns/op
Iteration   5: 1980415.367 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1989838.657 ±(99.9%) 22508.145 ns/op [Average]
  (min, avg, max) = (1980415.367, 1989838.657, 1995954.933), stdev = 5845.294
  CI (99.9%): [1967330.512, 2012346.801] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 60.61% complete, ETA 01:21:57
# Fork: 1 of 1
# Warmup Iteration   1: 5243.014 ns/op
# Warmup Iteration   2: 4538.320 ns/op
Iteration   1: 4605.441 ns/op
Iteration   2: 4555.959 ns/op
Iteration   3: 4557.406 ns/op
Iteration   4: 4552.672 ns/op
Iteration   5: 4564.003 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  4567.096 ±(99.9%) 84.052 ns/op [Average]
  (min, avg, max) = (4552.672, 4567.096, 4605.441), stdev = 21.828
  CI (99.9%): [4483.044, 4651.148] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 60.91% complete, ETA 01:21:19
# Fork: 1 of 1
# Warmup Iteration   1: 10055.612 ns/op
# Warmup Iteration   2: 8595.885 ns/op
Iteration   1: 8454.322 ns/op
Iteration   2: 8490.005 ns/op
Iteration   3: 8478.687 ns/op
Iteration   4: 8459.607 ns/op
Iteration   5: 8439.734 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8464.471 ±(99.9%) 76.836 ns/op [Average]
  (min, avg, max) = (8439.734, 8464.471, 8490.005), stdev = 19.954
  CI (99.9%): [8387.635, 8541.307] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 61.21% complete, ETA 01:20:41
# Fork: 1 of 1
# Warmup Iteration   1: 17362.238 ns/op
# Warmup Iteration   2: 14932.427 ns/op
Iteration   1: 14902.478 ns/op
Iteration   2: 14865.440 ns/op
Iteration   3: 14877.580 ns/op
Iteration   4: 15050.752 ns/op
Iteration   5: 15186.231 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14976.496 ±(99.9%) 534.600 ns/op [Average]
  (min, avg, max) = (14865.440, 14976.496, 15186.231), stdev = 138.834
  CI (99.9%): [14441.897, 15511.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 61.52% complete, ETA 01:20:03
# Fork: 1 of 1
# Warmup Iteration   1: 33051.895 ns/op
# Warmup Iteration   2: 28100.759 ns/op
Iteration   1: 27969.301 ns/op
Iteration   2: 27850.196 ns/op
Iteration   3: 27852.422 ns/op
Iteration   4: 27937.085 ns/op
Iteration   5: 27907.717 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  27903.344 ±(99.9%) 201.246 ns/op [Average]
  (min, avg, max) = (27850.196, 27903.344, 27969.301), stdev = 52.263
  CI (99.9%): [27702.099, 28104.590] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 61.82% complete, ETA 01:19:25
# Fork: 1 of 1
# Warmup Iteration   1: 285487.274 ns/op
# Warmup Iteration   2: 251368.156 ns/op
Iteration   1: 250645.331 ns/op
Iteration   2: 251485.485 ns/op
Iteration   3: 247558.213 ns/op
Iteration   4: 248145.607 ns/op
Iteration   5: 248305.956 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  249228.119 ±(99.9%) 6645.845 ns/op [Average]
  (min, avg, max) = (247558.213, 249228.119, 251485.485), stdev = 1725.905
  CI (99.9%): [242582.273, 255873.964] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 62.12% complete, ETA 01:18:47
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
13948.000 ns/op
# Warmup Iteration   2: 11844.202 ns/op
Iteration   1: 11818.803 ns/op
Iteration   2: 11854.795 ns/op
Iteration   3: 11836.818 ns/op
Iteration   4: 12272.910 ns/op
Iteration   5: 12266.964 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  12010.058 ±(99.9%) 914.860 ns/op [Average]
  (min, avg, max) = (11818.803, 12010.058, 12272.910), stdev = 237.586
  CI (99.9%): [11095.198, 12924.919] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 62.42% complete, ETA 01:18:09
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
22991.922 ns/op
# Warmup Iteration   2: 20210.999 ns/op
Iteration   1: 20378.039 ns/op
Iteration   2: 20338.926 ns/op
Iteration   3: 20314.472 ns/op
Iteration   4: 20269.421 ns/op
Iteration   5: 20224.780 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  20305.128 ±(99.9%) 230.045 ns/op [Average]
  (min, avg, max) = (20224.780, 20305.128, 20378.039), stdev = 59.742
  CI (99.9%): [20075.083, 20535.173] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 62.73% complete, ETA 01:17:32
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
43175.893 ns/op
# Warmup Iteration   2: 33651.278 ns/op
Iteration   1: 33738.051 ns/op
Iteration   2: 33389.291 ns/op
Iteration   3: 33382.736 ns/op
Iteration   4: 33582.139 ns/op
Iteration   5: 33473.594 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  33513.162 ±(99.9%) 575.195 ns/op [Average]
  (min, avg, max) = (33382.736, 33513.162, 33738.051), stdev = 149.376
  CI (99.9%): [32937.967, 34088.358] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 63.03% complete, ETA 01:16:54
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
72344.236 ns/op
# Warmup Iteration   2: 66887.313 ns/op
Iteration   1: 66432.476 ns/op
Iteration   2: 66433.608 ns/op
Iteration   3: 66433.749 ns/op
Iteration   4: 66418.385 ns/op
Iteration   5: 66411.258 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  66425.895 ±(99.9%) 40.162 ns/op [Average]
  (min, avg, max) = (66411.258, 66425.895, 66433.749), stdev = 10.430
  CI (99.9%): [66385.733, 66466.057] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 63.33% complete, ETA 01:16:16
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
887908.903 ns/op
# Warmup Iteration   2: 1357745.824 ns/op
Iteration   1: 1416640.343 ns/op
Iteration   2: 1413566.891 ns/op
Iteration   3: 1414231.783 ns/op
Iteration   4: 1426820.094 ns/op
Iteration   5: 1408250.662 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1415901.955 ±(99.9%) 26295.645 ns/op [Average]
  (min, avg, max) = (1408250.662, 1415901.955, 1426820.094), stdev = 6828.896
  CI (99.9%): [1389606.309, 1442197.600] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 63.64% complete, ETA 01:15:38
# Fork: 1 of 1
# Warmup Iteration   1: 7903.109 ns/op
# Warmup Iteration   2: 6566.472 ns/op
Iteration   1: 6502.189 ns/op
Iteration   2: 6501.540 ns/op
Iteration   3: 6502.082 ns/op
Iteration   4: 6488.971 ns/op
Iteration   5: 6497.271 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  6498.411 ±(99.9%) 21.779 ns/op [Average]
  (min, avg, max) = (6488.971, 6498.411, 6502.189), stdev = 5.656
  CI (99.9%): [6476.632, 6520.190] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 63.94% complete, ETA 01:15:00
# Fork: 1 of 1
# Warmup Iteration   1: 16191.810 ns/op
# Warmup Iteration   2: 13442.189 ns/op
Iteration   1: 13216.874 ns/op
Iteration   2: 13338.575 ns/op
Iteration   3: 13239.327 ns/op
Iteration   4: 13236.041 ns/op
Iteration   5: 13243.467 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13254.857 ±(99.9%) 184.432 ns/op [Average]
  (min, avg, max) = (13216.874, 13254.857, 13338.575), stdev = 47.896
  CI (99.9%): [13070.424, 13439.289] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 64.24% complete, ETA 01:14:22
# Fork: 1 of 1
# Warmup Iteration   1: 31089.999 ns/op
# Warmup Iteration   2: 24123.799 ns/op
Iteration   1: 24079.114 ns/op
Iteration   2: 24073.895 ns/op
Iteration   3: 24068.345 ns/op
Iteration   4: 24024.227 ns/op
Iteration   5: 24070.632 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24063.242 ±(99.9%) 85.417 ns/op [Average]
  (min, avg, max) = (24024.227, 24063.242, 24079.114), stdev = 22.182
  CI (99.9%): [23977.826, 24148.659] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 64.55% complete, ETA 01:13:45
# Fork: 1 of 1
# Warmup Iteration   1: 54912.025 ns/op
# Warmup Iteration   2: 43964.814 ns/op
Iteration   1: 43644.729 ns/op
Iteration   2: 43598.691 ns/op
Iteration   3: 43690.770 ns/op
Iteration   4: 43631.051 ns/op
Iteration   5: 43649.995 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  43643.047 ±(99.9%) 128.290 ns/op [Average]
  (min, avg, max) = (43598.691, 43643.047, 43690.770), stdev = 33.316
  CI (99.9%): [43514.757, 43771.337] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 64.85% complete, ETA 01:13:07
# Fork: 1 of 1
# Warmup Iteration   1: 476923.025 ns/op
# Warmup Iteration   2: 385812.549 ns/op
Iteration   1: 382836.804 ns/op
Iteration   2: 382744.510 ns/op
Iteration   3: 383336.365 ns/op
Iteration   4: 382920.232 ns/op
Iteration   5: 382133.304 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  382794.243 ±(99.9%) 1668.372 ns/op [Average]
  (min, avg, max) = (382133.304, 382794.243, 383336.365), stdev = 433.271
  CI (99.9%): [381125.871, 384462.615] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 65.15% complete, ETA 01:12:29
# Fork: 1 of 1
# Warmup Iteration   1: 59513.505 ns/op
# Warmup Iteration   2: 44146.464 ns/op
Iteration   1: 44067.003 ns/op
Iteration   2: 44109.287 ns/op
Iteration   3: 44323.539 ns/op
Iteration   4: 44303.580 ns/op
Iteration   5: 44108.170 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  44182.316 ±(99.9%) 466.773 ns/op [Average]
  (min, avg, max) = (44067.003, 44182.316, 44323.539), stdev = 121.220
  CI (99.9%): [43715.542, 44649.089] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 65.45% complete, ETA 01:11:51
# Fork: 1 of 1
# Warmup Iteration   1: 119748.943 ns/op
# Warmup Iteration   2: 82924.858 ns/op
Iteration   1: 82814.832 ns/op
Iteration   2: 83495.919 ns/op
Iteration   3: 83356.288 ns/op
Iteration   4: 82781.429 ns/op
Iteration   5: 83026.524 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  83094.999 ±(99.9%) 1233.585 ns/op [Average]
  (min, avg, max) = (82781.429, 83094.999, 83495.919), stdev = 320.358
  CI (99.9%): [81861.413, 84328.584] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 65.76% complete, ETA 01:11:13
# Fork: 1 of 1
# Warmup Iteration   1: 264320.070 ns/op
# Warmup Iteration   2: 180562.746 ns/op
Iteration   1: 181267.154 ns/op
Iteration   2: 180345.230 ns/op
Iteration   3: 179646.903 ns/op
Iteration   4: 179841.880 ns/op
Iteration   5: 179458.928 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  180112.019 ±(99.9%) 2793.085 ns/op [Average]
  (min, avg, max) = (179458.928, 180112.019, 181267.154), stdev = 725.355
  CI (99.9%): [177318.934, 182905.104] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 66.06% complete, ETA 01:10:36
# Fork: 1 of 1
# Warmup Iteration   1: 575447.464 ns/op
# Warmup Iteration   2: 402676.324 ns/op
Iteration   1: 402229.958 ns/op
Iteration   2: 401213.611 ns/op
Iteration   3: 401201.780 ns/op
Iteration   4: 400645.871 ns/op
Iteration   5: 400782.761 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  401214.796 ±(99.9%) 2390.080 ns/op [Average]
  (min, avg, max) = (400645.871, 401214.796, 402229.958), stdev = 620.696
  CI (99.9%): [398824.717, 403604.876] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 66.36% complete, ETA 01:09:58
# Fork: 1 of 1
# Warmup Iteration   1: 4234980.287 ns/op
# Warmup Iteration   2: 3302481.818 ns/op
Iteration   1: 3349159.015 ns/op
Iteration   2: 3275295.578 ns/op
Iteration   3: 3250607.928 ns/op
Iteration   4: 3239405.648 ns/op
Iteration   5: 3246691.529 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  3272231.940 ±(99.9%) 173542.296 ns/op [Average]
  (min, avg, max) = (3239405.648, 3272231.940, 3349159.015), stdev = 45068.383
  CI (99.9%): [3098689.644, 3445774.236] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 66.67% complete, ETA 01:09:20
# Fork: 1 of 1
# Warmup Iteration   1: 11220.500 ns/op
# Warmup Iteration   2: 9328.100 ns/op
Iteration   1: 9283.424 ns/op
Iteration   2: 9332.982 ns/op
Iteration   3: 9295.447 ns/op
Iteration   4: 9296.747 ns/op
Iteration   5: 9274.241 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  9296.568 ±(99.9%) 86.071 ns/op [Average]
  (min, avg, max) = (9274.241, 9296.568, 9332.982), stdev = 22.352
  CI (99.9%): [9210.497, 9382.639] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 66.97% complete, ETA 01:08:43
# Fork: 1 of 1
# Warmup Iteration   1: 21214.730 ns/op
# Warmup Iteration   2: 16963.380 ns/op
Iteration   1: 16916.914 ns/op
Iteration   2: 16859.591 ns/op
Iteration   3: 16867.055 ns/op
Iteration   4: 16899.472 ns/op
Iteration   5: 16927.397 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  16894.086 ±(99.9%) 115.203 ns/op [Average]
  (min, avg, max) = (16859.591, 16894.086, 16927.397), stdev = 29.918
  CI (99.9%): [16778.883, 17009.289] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 67.27% complete, ETA 01:08:05
# Fork: 1 of 1
# Warmup Iteration   1: 42245.929 ns/op
# Warmup Iteration   2: 33173.932 ns/op
Iteration   1: 33294.683 ns/op
Iteration   2: 33246.937 ns/op
Iteration   3: 33027.235 ns/op
Iteration   4: 33434.888 ns/op
Iteration   5: 33432.587 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  33287.266 ±(99.9%) 644.934 ns/op [Average]
  (min, avg, max) = (33027.235, 33287.266, 33434.888), stdev = 167.487
  CI (99.9%): [32642.332, 33932.200] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 67.58% complete, ETA 01:07:27
# Fork: 1 of 1
# Warmup Iteration   1: 85983.391 ns/op
# Warmup Iteration   2: 70174.623 ns/op
Iteration   1: 69890.321 ns/op
Iteration   2: 69854.313 ns/op
Iteration   3: 70022.280 ns/op
Iteration   4: 70016.198 ns/op
Iteration   5: 70197.718 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  69996.166 ±(99.9%) 520.307 ns/op [Average]
  (min, avg, max) = (69854.313, 69996.166, 70197.718), stdev = 135.122
  CI (99.9%): [69475.859, 70516.473] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 67.88% complete, ETA 01:06:49
# Fork: 1 of 1
# Warmup Iteration   1: 649448.206 ns/op
# Warmup Iteration   2: 541775.457 ns/op
Iteration   1: 539955.805 ns/op
Iteration   2: 543894.669 ns/op
Iteration   3: 540762.813 ns/op
Iteration   4: 540536.909 ns/op
Iteration   5: 541886.002 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  541407.240 ±(99.9%) 5995.127 ns/op [Average]
  (min, avg, max) = (539955.805, 541407.240, 543894.669), stdev = 1556.915
  CI (99.9%): [535412.113, 547402.366] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 68.18% complete, ETA 01:06:11
# Fork: 1 of 1
# Warmup Iteration   1: 9462.583 ns/op
# Warmup Iteration   2: 8107.972 ns/op
Iteration   1: 8051.946 ns/op
Iteration   2: 8054.127 ns/op
Iteration   3: 8027.415 ns/op
Iteration   4: 8024.910 ns/op
Iteration   5: 8037.516 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8039.183 ±(99.9%) 52.062 ns/op [Average]
  (min, avg, max) = (8024.910, 8039.183, 8054.127), stdev = 13.520
  CI (99.9%): [7987.121, 8091.244] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 68.48% complete, ETA 01:05:33
# Fork: 1 of 1
# Warmup Iteration   1: 16813.753 ns/op
# Warmup Iteration   2: 14138.555 ns/op
Iteration   1: 14064.466 ns/op
Iteration   2: 14019.295 ns/op
Iteration   3: 14004.579 ns/op
Iteration   4: 14032.530 ns/op
Iteration   5: 14070.066 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14038.187 ±(99.9%) 109.342 ns/op [Average]
  (min, avg, max) = (14004.579, 14038.187, 14070.066), stdev = 28.396
  CI (99.9%): [13928.846, 14147.529] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 68.79% complete, ETA 01:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 28865.971 ns/op
# Warmup Iteration   2: 25759.922 ns/op
Iteration   1: 25557.095 ns/op
Iteration   2: 25598.853 ns/op
Iteration   3: 25578.612 ns/op
Iteration   4: 25619.076 ns/op
Iteration   5: 25740.662 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  25618.860 ±(99.9%) 276.810 ns/op [Average]
  (min, avg, max) = (25557.095, 25618.860, 25740.662), stdev = 71.887
  CI (99.9%): [25342.049, 25895.670] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 69.09% complete, ETA 01:04:18
# Fork: 1 of 1
# Warmup Iteration   1: 61566.655 ns/op
# Warmup Iteration   2: 54400.598 ns/op
Iteration   1: 53881.548 ns/op
Iteration   2: 53966.787 ns/op
Iteration   3: 53847.924 ns/op
Iteration   4: 53926.169 ns/op
Iteration   5: 54318.515 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  53988.189 ±(99.9%) 731.791 ns/op [Average]
  (min, avg, max) = (53847.924, 53988.189, 54318.515), stdev = 190.044
  CI (99.9%): [53256.397, 54719.980] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 69.39% complete, ETA 01:03:40
# Fork: 1 of 1
# Warmup Iteration   1: 491913.730 ns/op
# Warmup Iteration   2: 444301.520 ns/op
Iteration   1: 441632.668 ns/op
Iteration   2: 441839.240 ns/op
Iteration   3: 442207.252 ns/op
Iteration   4: 439965.115 ns/op
Iteration   5: 443970.115 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  441922.878 ±(99.9%) 5511.971 ns/op [Average]
  (min, avg, max) = (439965.115, 441922.878, 443970.115), stdev = 1431.441
  CI (99.9%): [436410.907, 447434.849] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 69.70% complete, ETA 01:03:02
# Fork: 1 of 1
# Warmup Iteration   1: 10137.453 ns/op
# Warmup Iteration   2: 8536.104 ns/op
Iteration   1: 8609.625 ns/op
Iteration   2: 8571.495 ns/op
Iteration   3: 8536.047 ns/op
Iteration   4: 8520.886 ns/op
Iteration   5: 8596.403 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8566.891 ±(99.9%) 146.454 ns/op [Average]
  (min, avg, max) = (8520.886, 8566.891, 8609.625), stdev = 38.034
  CI (99.9%): [8420.438, 8713.345] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 70.00% complete, ETA 01:02:24
# Fork: 1 of 1
# Warmup Iteration   1: 16906.775 ns/op
# Warmup Iteration   2: 14256.600 ns/op
Iteration   1: 14307.936 ns/op
Iteration   2: 14238.045 ns/op
Iteration   3: 14218.658 ns/op
Iteration   4: 14312.515 ns/op
Iteration   5: 14241.941 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14263.819 ±(99.9%) 166.740 ns/op [Average]
  (min, avg, max) = (14218.658, 14263.819, 14312.515), stdev = 43.302
  CI (99.9%): [14097.079, 14430.559] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 70.30% complete, ETA 01:01:46
# Fork: 1 of 1
# Warmup Iteration   1: 30867.561 ns/op
# Warmup Iteration   2: 25506.870 ns/op
Iteration   1: 25217.203 ns/op
Iteration   2: 25609.758 ns/op
Iteration   3: 25285.632 ns/op
Iteration   4: 25302.662 ns/op
Iteration   5: 25272.092 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  25337.469 ±(99.9%) 598.952 ns/op [Average]
  (min, avg, max) = (25217.203, 25337.469, 25609.758), stdev = 155.546
  CI (99.9%): [24738.517, 25936.421] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 70.61% complete, ETA 01:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 62162.439 ns/op
# Warmup Iteration   2: 50502.539 ns/op
Iteration   1: 49967.105 ns/op
Iteration   2: 49935.742 ns/op
Iteration   3: 49938.134 ns/op
Iteration   4: 49940.454 ns/op
Iteration   5: 49975.169 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  49951.321 ±(99.9%) 70.808 ns/op [Average]
  (min, avg, max) = (49935.742, 49951.321, 49975.169), stdev = 18.389
  CI (99.9%): [49880.513, 50022.129] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 70.91% complete, ETA 01:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 398695.394 ns/op
# Warmup Iteration   2: 341716.783 ns/op
Iteration   1: 342030.629 ns/op
Iteration   2: 342255.721 ns/op
Iteration   3: 345158.735 ns/op
Iteration   4: 341007.986 ns/op
Iteration   5: 341189.534 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  342328.521 ±(99.9%) 6427.593 ns/op [Average]
  (min, avg, max) = (341007.986, 342328.521, 345158.735), stdev = 1669.225
  CI (99.9%): [335900.928, 348756.114] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 71.21% complete, ETA 00:59:53
# Fork: 1 of 1
# Warmup Iteration   1: 3595.902 ns/op
# Warmup Iteration   2: 2948.293 ns/op
Iteration   1: 2921.959 ns/op
Iteration   2: 2921.643 ns/op
Iteration   3: 2927.597 ns/op
Iteration   4: 2914.513 ns/op
Iteration   5: 2928.869 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2922.916 ±(99.9%) 21.994 ns/op [Average]
  (min, avg, max) = (2914.513, 2922.916, 2928.869), stdev = 5.712
  CI (99.9%): [2900.923, 2944.910] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 71.52% complete, ETA 00:59:15
# Fork: 1 of 1
# Warmup Iteration   1: 6876.527 ns/op
# Warmup Iteration   2: 5528.814 ns/op
Iteration   1: 5530.507 ns/op
Iteration   2: 5515.109 ns/op
Iteration   3: 5566.293 ns/op
Iteration   4: 5498.757 ns/op
Iteration   5: 5504.984 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  5523.130 ±(99.9%) 103.773 ns/op [Average]
  (min, avg, max) = (5498.757, 5523.130, 5566.293), stdev = 26.950
  CI (99.9%): [5419.357, 5626.903] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 71.82% complete, ETA 00:58:37
# Fork: 1 of 1
# Warmup Iteration   1: 11719.606 ns/op
# Warmup Iteration   2: 9957.164 ns/op
Iteration   1: 9922.010 ns/op
Iteration   2: 9947.148 ns/op
Iteration   3: 9895.600 ns/op
Iteration   4: 9909.595 ns/op
Iteration   5: 9924.909 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  9919.852 ±(99.9%) 73.784 ns/op [Average]
  (min, avg, max) = (9895.600, 9919.852, 9947.148), stdev = 19.162
  CI (99.9%): [9846.068, 9993.637] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 72.12% complete, ETA 00:57:59
# Fork: 1 of 1
# Warmup Iteration   1: 23808.591 ns/op
# Warmup Iteration   2: 18703.105 ns/op
Iteration   1: 18681.340 ns/op
Iteration   2: 18642.208 ns/op
Iteration   3: 18664.098 ns/op
Iteration   4: 18661.855 ns/op
Iteration   5: 18865.087 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  18702.918 ±(99.9%) 353.145 ns/op [Average]
  (min, avg, max) = (18642.208, 18702.918, 18865.087), stdev = 91.711
  CI (99.9%): [18349.773, 19056.062] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 72.42% complete, ETA 00:57:21
# Fork: 1 of 1
# Warmup Iteration   1: 194635.489 ns/op
# Warmup Iteration   2: 153766.165 ns/op
Iteration   1: 153277.860 ns/op
Iteration   2: 152198.786 ns/op
Iteration   3: 152018.099 ns/op
Iteration   4: 151790.790 ns/op
Iteration   5: 151793.320 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  152215.771 ±(99.9%) 2378.743 ns/op [Average]
  (min, avg, max) = (151790.790, 152215.771, 153277.860), stdev = 617.752
  CI (99.9%): [149837.028, 154594.514] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 72.73% complete, ETA 00:56:44
# Fork: 1 of 1
# Warmup Iteration   1: 5410.752 ns/op
# Warmup Iteration   2: 4578.501 ns/op
Iteration   1: 4572.167 ns/op
Iteration   2: 4598.416 ns/op
Iteration   3: 4620.384 ns/op
Iteration   4: 4571.293 ns/op
Iteration   5: 4577.123 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4587.876 ±(99.9%) 81.804 ns/op [Average]
  (min, avg, max) = (4571.293, 4587.876, 4620.384), stdev = 21.244
  CI (99.9%): [4506.073, 4669.680] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 73.03% complete, ETA 00:56:06
# Fork: 1 of 1
# Warmup Iteration   1: 9794.106 ns/op
# Warmup Iteration   2: 8348.940 ns/op
Iteration   1: 8391.106 ns/op
Iteration   2: 8330.267 ns/op
Iteration   3: 8313.210 ns/op
Iteration   4: 8321.374 ns/op
Iteration   5: 8378.672 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8346.926 ±(99.9%) 136.505 ns/op [Average]
  (min, avg, max) = (8313.210, 8346.926, 8391.106), stdev = 35.450
  CI (99.9%): [8210.420, 8483.431] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 73.33% complete, ETA 00:55:28
# Fork: 1 of 1
# Warmup Iteration   1: 16525.219 ns/op
# Warmup Iteration   2: 14228.979 ns/op
Iteration   1: 14193.987 ns/op
Iteration   2: 14179.809 ns/op
Iteration   3: 14301.202 ns/op
Iteration   4: 14232.273 ns/op
Iteration   5: 14184.252 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14218.305 ±(99.9%) 195.398 ns/op [Average]
  (min, avg, max) = (14179.809, 14218.305, 14301.202), stdev = 50.744
  CI (99.9%): [14022.907, 14413.702] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 73.64% complete, ETA 00:54:50
# Fork: 1 of 1
# Warmup Iteration   1: 33355.638 ns/op
# Warmup Iteration   2: 27685.933 ns/op
Iteration   1: 27626.282 ns/op
Iteration   2: 27675.901 ns/op
Iteration   3: 27662.923 ns/op
Iteration   4: 27874.942 ns/op
Iteration   5: 27896.193 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  27747.248 ±(99.9%) 492.085 ns/op [Average]
  (min, avg, max) = (27626.282, 27747.248, 27896.193), stdev = 127.793
  CI (99.9%): [27255.163, 28239.334] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 73.94% complete, ETA 00:54:12
# Fork: 1 of 1
# Warmup Iteration   1: 273321.775 ns/op
# Warmup Iteration   2: 229897.881 ns/op
Iteration   1: 229844.112 ns/op
Iteration   2: 228896.127 ns/op
Iteration   3: 228570.970 ns/op
Iteration   4: 232142.514 ns/op
Iteration   5: 229986.461 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  229888.037 ±(99.9%) 5381.554 ns/op [Average]
  (min, avg, max) = (228570.970, 229888.037, 232142.514), stdev = 1397.572
  CI (99.9%): [224506.483, 235269.590] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 74.24% complete, ETA 00:53:34
# Fork: 1 of 1
# Warmup Iteration   1: 5258.434 ns/op
# Warmup Iteration   2: 4292.612 ns/op
Iteration   1: 4293.864 ns/op
Iteration   2: 4277.969 ns/op
Iteration   3: 4305.880 ns/op
Iteration   4: 4279.098 ns/op
Iteration   5: 4309.375 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4293.237 ±(99.9%) 56.253 ns/op [Average]
  (min, avg, max) = (4277.969, 4293.237, 4309.375), stdev = 14.609
  CI (99.9%): [4236.984, 4349.490] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 74.55% complete, ETA 00:52:57
# Fork: 1 of 1
# Warmup Iteration   1: 8654.261 ns/op
# Warmup Iteration   2: 7194.724 ns/op
Iteration   1: 7323.677 ns/op
Iteration   2: 7222.996 ns/op
Iteration   3: 7217.049 ns/op
Iteration   4: 7197.520 ns/op
Iteration   5: 7198.163 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7231.881 ±(99.9%) 202.323 ns/op [Average]
  (min, avg, max) = (7197.520, 7231.881, 7323.677), stdev = 52.543
  CI (99.9%): [7029.558, 7434.204] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 74.85% complete, ETA 00:52:19
# Fork: 1 of 1
# Warmup Iteration   1: 16624.859 ns/op
# Warmup Iteration   2: 14314.815 ns/op
Iteration   1: 14275.590 ns/op
Iteration   2: 14245.530 ns/op
Iteration   3: 14273.870 ns/op
Iteration   4: 14219.825 ns/op
Iteration   5: 14216.144 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14246.192 ±(99.9%) 109.402 ns/op [Average]
  (min, avg, max) = (14216.144, 14246.192, 14275.590), stdev = 28.411
  CI (99.9%): [14136.790, 14355.594] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 75.15% complete, ETA 00:51:41
# Fork: 1 of 1
# Warmup Iteration   1: 29629.601 ns/op
# Warmup Iteration   2: 25406.130 ns/op
Iteration   1: 25429.399 ns/op
Iteration   2: 25338.705 ns/op
Iteration   3: 25832.419 ns/op
Iteration   4: 25408.812 ns/op
Iteration   5: 25425.638 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  25486.994 ±(99.9%) 756.782 ns/op [Average]
  (min, avg, max) = (25338.705, 25486.994, 25832.419), stdev = 196.534
  CI (99.9%): [24730.212, 26243.777] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 75.45% complete, ETA 00:51:03
# Fork: 1 of 1
# Warmup Iteration   1: 254810.057 ns/op
# Warmup Iteration   2: 217126.069 ns/op
Iteration   1: 217777.591 ns/op
Iteration   2: 214566.906 ns/op
Iteration   3: 214514.206 ns/op
Iteration   4: 213944.191 ns/op
Iteration   5: 214254.177 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  215011.414 ±(99.9%) 6029.950 ns/op [Average]
  (min, avg, max) = (213944.191, 215011.414, 217777.591), stdev = 1565.959
  CI (99.9%): [208981.464, 221041.364] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 75.76% complete, ETA 00:50:25
# Fork: 1 of 1
# Warmup Iteration   1: 117315.380 ns/op
# Warmup Iteration   2: 103850.116 ns/op
Iteration   1: 102097.615 ns/op
Iteration   2: 102324.078 ns/op
Iteration   3: 102397.214 ns/op
Iteration   4: 102331.472 ns/op
Iteration   5: 102339.281 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  102297.932 ±(99.9%) 445.338 ns/op [Average]
  (min, avg, max) = (102097.615, 102297.932, 102397.214), stdev = 115.653
  CI (99.9%): [101852.594, 102743.270] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 76.06% complete, ETA 00:49:47
# Fork: 1 of 1
# Warmup Iteration   1: 161895.835 ns/op
# Warmup Iteration   2: 135385.723 ns/op
Iteration   1: 135906.632 ns/op
Iteration   2: 134717.379 ns/op
Iteration   3: 134505.339 ns/op
Iteration   4: 134800.367 ns/op
Iteration   5: 134568.292 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  134899.602 ±(99.9%) 2214.013 ns/op [Average]
  (min, avg, max) = (134505.339, 134899.602, 135906.632), stdev = 574.972
  CI (99.9%): [132685.589, 137113.615] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 76.36% complete, ETA 00:49:10
# Fork: 1 of 1
# Warmup Iteration   1: 190791.871 ns/op
# Warmup Iteration   2: 161758.895 ns/op
Iteration   1: 160280.655 ns/op
Iteration   2: 160370.326 ns/op
Iteration   3: 160024.939 ns/op
Iteration   4: 159909.884 ns/op
Iteration   5: 160183.689 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  160153.899 ±(99.9%) 720.310 ns/op [Average]
  (min, avg, max) = (159909.884, 160153.899, 160370.326), stdev = 187.062
  CI (99.9%): [159433.589, 160874.209] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 76.67% complete, ETA 00:48:32
# Fork: 1 of 1
# Warmup Iteration   1: 247555.996 ns/op
# Warmup Iteration   2: 208618.829 ns/op
Iteration   1: 208349.845 ns/op
Iteration   2: 207398.822 ns/op
Iteration   3: 208254.834 ns/op
Iteration   4: 208217.516 ns/op
Iteration   5: 207844.536 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  208013.111 ±(99.9%) 1515.229 ns/op [Average]
  (min, avg, max) = (207398.822, 208013.111, 208349.845), stdev = 393.500
  CI (99.9%): [206497.881, 209528.340] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 76.97% complete, ETA 00:47:54
# Fork: 1 of 1
# Warmup Iteration   1: 1013861.628 ns/op
# Warmup Iteration   2: 877644.274 ns/op
Iteration   1: 875487.398 ns/op
Iteration   2: 875594.666 ns/op
Iteration   3: 877160.397 ns/op
Iteration   4: 881728.392 ns/op
Iteration   5: 878397.417 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  877673.654 ±(99.9%) 9879.374 ns/op [Average]
  (min, avg, max) = (875487.398, 877673.654, 881728.392), stdev = 2565.642
  CI (99.9%): [867794.280, 887553.028] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 77.27% complete, ETA 00:47:16
# Fork: 1 of 1
# Warmup Iteration   1: 2242.009 ns/op
# Warmup Iteration   2: 2073.321 ns/op
Iteration   1: 2054.173 ns/op
Iteration   2: 2089.440 ns/op
Iteration   3: 2077.086 ns/op
Iteration   4: 2051.743 ns/op
Iteration   5: 2059.622 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2066.413 ±(99.9%) 62.544 ns/op [Average]
  (min, avg, max) = (2051.743, 2066.413, 2089.440), stdev = 16.242
  CI (99.9%): [2003.869, 2128.957] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 77.58% complete, ETA 00:46:38
# Fork: 1 of 1
# Warmup Iteration   1: 4319.105 ns/op
# Warmup Iteration   2: 3931.114 ns/op
Iteration   1: 3904.298 ns/op
Iteration   2: 3920.116 ns/op
Iteration   3: 3933.210 ns/op
Iteration   4: 3933.270 ns/op
Iteration   5: 3920.052 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3922.189 ±(99.9%) 46.095 ns/op [Average]
  (min, avg, max) = (3904.298, 3922.189, 3933.270), stdev = 11.971
  CI (99.9%): [3876.094, 3968.284] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 77.88% complete, ETA 00:46:00
# Fork: 1 of 1
# Warmup Iteration   1: 7883.633 ns/op
# Warmup Iteration   2: 7099.294 ns/op
Iteration   1: 7087.056 ns/op
Iteration   2: 7087.244 ns/op
Iteration   3: 7087.939 ns/op
Iteration   4: 7092.850 ns/op
Iteration   5: 7087.236 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7088.465 ±(99.9%) 9.528 ns/op [Average]
  (min, avg, max) = (7087.056, 7088.465, 7092.850), stdev = 2.474
  CI (99.9%): [7078.937, 7097.993] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 78.18% complete, ETA 00:45:23
# Fork: 1 of 1
# Warmup Iteration   1: 14974.268 ns/op
# Warmup Iteration   2: 13601.553 ns/op
Iteration   1: 13459.950 ns/op
Iteration   2: 13425.439 ns/op
Iteration   3: 13464.958 ns/op
Iteration   4: 13479.963 ns/op
Iteration   5: 13452.565 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13456.575 ±(99.9%) 77.354 ns/op [Average]
  (min, avg, max) = (13425.439, 13456.575, 13479.963), stdev = 20.089
  CI (99.9%): [13379.221, 13533.929] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 78.48% complete, ETA 00:44:45
# Fork: 1 of 1
# Warmup Iteration   1: 131785.574 ns/op
# Warmup Iteration   2: 121422.539 ns/op
Iteration   1: 120862.119 ns/op
Iteration   2: 121386.992 ns/op
Iteration   3: 121162.222 ns/op
Iteration   4: 121652.868 ns/op
Iteration   5: 121667.997 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  121346.440 ±(99.9%) 1316.341 ns/op [Average]
  (min, avg, max) = (120862.119, 121346.440, 121667.997), stdev = 341.850
  CI (99.9%): [120030.099, 122662.781] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 78.79% complete, ETA 00:44:07
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
6583.055 ns/op
# Warmup Iteration   2: 5895.335 ns/op
Iteration   1: 5877.020 ns/op
Iteration   2: 5844.227 ns/op
Iteration   3: 5819.404 ns/op
Iteration   4: 5839.136 ns/op
Iteration   5: 5870.839 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  5850.125 ±(99.9%) 91.361 ns/op [Average]
  (min, avg, max) = (5819.404, 5850.125, 5877.020), stdev = 23.726
  CI (99.9%): [5758.765, 5941.486] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 79.09% complete, ETA 00:43:29
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
10889.094 ns/op
# Warmup Iteration   2: 10000.108 ns/op
Iteration   1: 9965.859 ns/op
Iteration   2: 9962.981 ns/op
Iteration   3: 9970.139 ns/op
Iteration   4: 9982.594 ns/op
Iteration   5: 9962.477 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  9968.810 ±(99.9%) 31.902 ns/op [Average]
  (min, avg, max) = (9962.477, 9968.810, 9982.594), stdev = 8.285
  CI (99.9%): [9936.908, 10000.712] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 79.39% complete, ETA 00:42:51
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
19244.976 ns/op
# Warmup Iteration   2: 17425.657 ns/op
Iteration   1: 17336.906 ns/op
Iteration   2: 17334.816 ns/op
Iteration   3: 17339.177 ns/op
Iteration   4: 17344.906 ns/op
Iteration   5: 17376.617 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  17346.484 ±(99.9%) 66.465 ns/op [Average]
  (min, avg, max) = (17334.816, 17346.484, 17376.617), stdev = 17.261
  CI (99.9%): [17280.019, 17412.950] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 79.70% complete, ETA 00:42:13
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
35376.271 ns/op
# Warmup Iteration   2: 32850.312 ns/op
Iteration   1: 32094.855 ns/op
Iteration   2: 32070.355 ns/op
Iteration   3: 32058.942 ns/op
Iteration   4: 32247.239 ns/op
Iteration   5: 32322.647 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  32158.808 ±(99.9%) 457.848 ns/op [Average]
  (min, avg, max) = (32058.942, 32158.808, 32322.647), stdev = 118.902
  CI (99.9%): [31700.959, 32616.656] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 80.00% complete, ETA 00:41:36
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
283015.027 ns/op
# Warmup Iteration   2: 264703.406 ns/op
Iteration   1: 262949.586 ns/op
Iteration   2: 262902.864 ns/op
Iteration   3: 262349.080 ns/op
Iteration   4: 262395.810 ns/op
Iteration   5: 262506.177 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  262620.703 ±(99.9%) 1098.025 ns/op [Average]
  (min, avg, max) = (262349.080, 262620.703, 262949.586), stdev = 285.154
  CI (99.9%): [261522.678, 263718.728] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 80.30% complete, ETA 00:40:58
# Fork: 1 of 1
# Warmup Iteration   1: 4513.952 ns/op
# Warmup Iteration   2: 3977.187 ns/op
Iteration   1: 3943.897 ns/op
Iteration   2: 3912.626 ns/op
Iteration   3: 3934.568 ns/op
Iteration   4: 3922.173 ns/op
Iteration   5: 3911.539 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3924.961 ±(99.9%) 54.148 ns/op [Average]
  (min, avg, max) = (3911.539, 3924.961, 3943.897), stdev = 14.062
  CI (99.9%): [3870.813, 3979.108] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 80.61% complete, ETA 00:40:20
# Fork: 1 of 1
# Warmup Iteration   1: 9457.140 ns/op
# Warmup Iteration   2: 8309.439 ns/op
Iteration   1: 8277.307 ns/op
Iteration   2: 8291.620 ns/op
Iteration   3: 8300.546 ns/op
Iteration   4: 8279.278 ns/op
Iteration   5: 8294.766 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8288.703 ±(99.9%) 38.709 ns/op [Average]
  (min, avg, max) = (8277.307, 8288.703, 8300.546), stdev = 10.053
  CI (99.9%): [8249.994, 8327.412] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 80.91% complete, ETA 00:39:42
# Fork: 1 of 1
# Warmup Iteration   1: 18486.237 ns/op
# Warmup Iteration   2: 15837.927 ns/op
Iteration   1: 15816.623 ns/op
Iteration   2: 15762.335 ns/op
Iteration   3: 15752.482 ns/op
Iteration   4: 15760.886 ns/op
Iteration   5: 15760.761 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  15770.617 ±(99.9%) 100.150 ns/op [Average]
  (min, avg, max) = (15752.482, 15770.617, 15816.623), stdev = 26.009
  CI (99.9%): [15670.467, 15870.768] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 81.21% complete, ETA 00:39:04
# Fork: 1 of 1
# Warmup Iteration   1: 35853.404 ns/op
# Warmup Iteration   2: 30138.018 ns/op
Iteration   1: 30125.659 ns/op
Iteration   2: 30124.373 ns/op
Iteration   3: 30095.565 ns/op
Iteration   4: 30090.531 ns/op
Iteration   5: 30120.750 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  30111.376 ±(99.9%) 65.156 ns/op [Average]
  (min, avg, max) = (30090.531, 30111.376, 30125.659), stdev = 16.921
  CI (99.9%): [30046.219, 30176.532] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 81.52% complete, ETA 00:38:26
# Fork: 1 of 1
# Warmup Iteration   1: 271763.693 ns/op
# Warmup Iteration   2: 253940.548 ns/op
Iteration   1: 259579.969 ns/op
Iteration   2: 249623.719 ns/op
Iteration   3: 249193.749 ns/op
Iteration   4: 250016.216 ns/op
Iteration   5: 249581.199 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  251598.970 ±(99.9%) 17216.251 ns/op [Average]
  (min, avg, max) = (249193.749, 251598.970, 259579.969), stdev = 4471.006
  CI (99.9%): [234382.720, 268815.221] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 81.82% complete, ETA 00:37:49
# Fork: 1 of 1
# Warmup Iteration   1: 29539.517 ns/op
# Warmup Iteration   2: 23452.107 ns/op
Iteration   1: 23437.136 ns/op
Iteration   2: 23438.436 ns/op
Iteration   3: 23708.401 ns/op
Iteration   4: 23524.648 ns/op
Iteration   5: 23333.248 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  23488.374 ±(99.9%) 540.844 ns/op [Average]
  (min, avg, max) = (23333.248, 23488.374, 23708.401), stdev = 140.455
  CI (99.9%): [22947.530, 24029.218] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 82.12% complete, ETA 00:37:11
# Fork: 1 of 1
# Warmup Iteration   1: 52004.068 ns/op
# Warmup Iteration   2: 41345.805 ns/op
Iteration   1: 41153.585 ns/op
Iteration   2: 41152.954 ns/op
Iteration   3: 41337.402 ns/op
Iteration   4: 41284.081 ns/op
Iteration   5: 43159.226 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  41617.449 ±(99.9%) 3333.401 ns/op [Average]
  (min, avg, max) = (41152.954, 41617.449, 43159.226), stdev = 865.674
  CI (99.9%): [38284.049, 44950.850] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 82.42% complete, ETA 00:36:33
# Fork: 1 of 1
# Warmup Iteration   1: 116061.182 ns/op
# Warmup Iteration   2: 93785.054 ns/op
Iteration   1: 93776.405 ns/op
Iteration   2: 93734.847 ns/op
Iteration   3: 93610.845 ns/op
Iteration   4: 93663.306 ns/op
Iteration   5: 93822.775 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  93721.636 ±(99.9%) 328.324 ns/op [Average]
  (min, avg, max) = (93610.845, 93721.636, 93822.775), stdev = 85.265
  CI (99.9%): [93393.312, 94049.959] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 82.73% complete, ETA 00:35:55
# Fork: 1 of 1
# Warmup Iteration   1: 285763.358 ns/op
# Warmup Iteration   2: 219891.275 ns/op
Iteration   1: 219751.397 ns/op
Iteration   2: 219450.782 ns/op
Iteration   3: 219035.165 ns/op
Iteration   4: 219610.123 ns/op
Iteration   5: 219304.940 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  219430.481 ±(99.9%) 1068.000 ns/op [Average]
  (min, avg, max) = (219035.165, 219430.481, 219751.397), stdev = 277.356
  CI (99.9%): [218362.482, 220498.481] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 83.03% complete, ETA 00:35:18
# Fork: 1 of 1
# Warmup Iteration   1: 2047052.039 ns/op
# Warmup Iteration   2: 1697836.923 ns/op
Iteration   1: 1692511.102 ns/op
Iteration   2: 1682994.109 ns/op
Iteration   3: 1683755.406 ns/op
Iteration   4: 1681335.278 ns/op
Iteration   5: 1683026.776 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1684724.534 ±(99.9%) 17105.449 ns/op [Average]
  (min, avg, max) = (1681335.278, 1684724.534, 1692511.102), stdev = 4442.231
  CI (99.9%): [1667619.085, 1701829.983] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 83.33% complete, ETA 00:34:40
# Fork: 1 of 1
# Warmup Iteration   1: 10833.958 ns/op
# Warmup Iteration   2: 6101.213 ns/op
Iteration   1: 6044.913 ns/op
Iteration   2: 6050.175 ns/op
Iteration   3: 6108.762 ns/op
Iteration   4: 6049.657 ns/op
Iteration   5: 6057.453 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6062.192 ±(99.9%) 101.721 ns/op [Average]
  (min, avg, max) = (6044.913, 6062.192, 6108.762), stdev = 26.417
  CI (99.9%): [5960.471, 6163.913] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 83.64% complete, ETA 00:34:02
# Fork: 1 of 1
# Warmup Iteration   1: 15236.137 ns/op
# Warmup Iteration   2: 12996.673 ns/op
Iteration   1: 12974.351 ns/op
Iteration   2: 12977.707 ns/op
Iteration   3: 13003.878 ns/op
Iteration   4: 12983.620 ns/op
Iteration   5: 12992.464 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  12986.404 ±(99.9%) 45.996 ns/op [Average]
  (min, avg, max) = (12974.351, 12986.404, 13003.878), stdev = 11.945
  CI (99.9%): [12940.408, 13032.400] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 83.94% complete, ETA 00:33:24
# Fork: 1 of 1
# Warmup Iteration   1: 37983.157 ns/op
# Warmup Iteration   2: 22295.059 ns/op
Iteration   1: 22250.792 ns/op
Iteration   2: 22248.884 ns/op
Iteration   3: 22315.021 ns/op
Iteration   4: 22270.263 ns/op
Iteration   5: 22260.566 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  22269.106 ±(99.9%) 104.160 ns/op [Average]
  (min, avg, max) = (22248.884, 22269.106, 22315.021), stdev = 27.050
  CI (99.9%): [22164.946, 22373.265] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 84.24% complete, ETA 00:32:46
# Fork: 1 of 1
# Warmup Iteration   1: 52993.481 ns/op
# Warmup Iteration   2: 43068.348 ns/op
Iteration   1: 42954.236 ns/op
Iteration   2: 42847.872 ns/op
Iteration   3: 42787.899 ns/op
Iteration   4: 42804.186 ns/op
Iteration   5: 42790.312 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  42836.901 ±(99.9%) 269.062 ns/op [Average]
  (min, avg, max) = (42787.899, 42836.901, 42954.236), stdev = 69.875
  CI (99.9%): [42567.839, 43105.963] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 84.55% complete, ETA 00:32:08
# Fork: 1 of 1
# Warmup Iteration   1: 435551.038 ns/op
# Warmup Iteration   2: 313589.568 ns/op
Iteration   1: 313417.109 ns/op
Iteration   2: 312753.514 ns/op
Iteration   3: 312963.264 ns/op
Iteration   4: 313289.615 ns/op
Iteration   5: 313801.403 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  313244.981 ±(99.9%) 1566.661 ns/op [Average]
  (min, avg, max) = (312753.514, 313244.981, 313801.403), stdev = 406.857
  CI (99.9%): [311678.320, 314811.642] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 84.85% complete, ETA 00:31:31
# Fork: 1 of 1
# Warmup Iteration   1: 5025.698 ns/op
# Warmup Iteration   2: 3778.726 ns/op
Iteration   1: 3773.144 ns/op
Iteration   2: 3776.101 ns/op
Iteration   3: 3775.411 ns/op
Iteration   4: 3773.836 ns/op
Iteration   5: 3780.355 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3775.769 ±(99.9%) 10.874 ns/op [Average]
  (min, avg, max) = (3773.144, 3775.769, 3780.355), stdev = 2.824
  CI (99.9%): [3764.895, 3786.643] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 85.15% complete, ETA 00:30:53
# Fork: 1 of 1
# Warmup Iteration   1: 8147.944 ns/op
# Warmup Iteration   2: 7144.209 ns/op
Iteration   1: 7150.626 ns/op
Iteration   2: 7087.928 ns/op
Iteration   3: 7129.082 ns/op
Iteration   4: 7088.931 ns/op
Iteration   5: 7097.726 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7110.859 ±(99.9%) 107.069 ns/op [Average]
  (min, avg, max) = (7087.928, 7110.859, 7150.626), stdev = 27.805
  CI (99.9%): [7003.790, 7217.927] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 85.45% complete, ETA 00:30:15
# Fork: 1 of 1
# Warmup Iteration   1: 19152.779 ns/op
# Warmup Iteration   2: 14730.549 ns/op
Iteration   1: 14702.456 ns/op
Iteration   2: 14701.341 ns/op
Iteration   3: 14706.320 ns/op
Iteration   4: 14715.705 ns/op
Iteration   5: 14708.484 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  14706.861 ±(99.9%) 22.037 ns/op [Average]
  (min, avg, max) = (14701.341, 14706.861, 14715.705), stdev = 5.723
  CI (99.9%): [14684.824, 14728.898] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 85.76% complete, ETA 00:29:37
# Fork: 1 of 1
# Warmup Iteration   1: 37743.157 ns/op
# Warmup Iteration   2: 27163.114 ns/op
Iteration   1: 27148.610 ns/op
Iteration   2: 27190.452 ns/op
Iteration   3: 27305.420 ns/op
Iteration   4: 27228.241 ns/op
Iteration   5: 27376.675 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  27249.880 ±(99.9%) 351.955 ns/op [Average]
  (min, avg, max) = (27148.610, 27249.880, 27376.675), stdev = 91.402
  CI (99.9%): [26897.924, 27601.835] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 86.06% complete, ETA 00:28:59
# Fork: 1 of 1
# Warmup Iteration   1: 266649.942 ns/op
# Warmup Iteration   2: 239305.926 ns/op
Iteration   1: 237802.450 ns/op
Iteration   2: 237240.794 ns/op
Iteration   3: 238036.453 ns/op
Iteration   4: 237165.232 ns/op
Iteration   5: 236460.207 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  237341.027 ±(99.9%) 2368.478 ns/op [Average]
  (min, avg, max) = (236460.207, 237341.027, 238036.453), stdev = 615.086
  CI (99.9%): [234972.549, 239709.505] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 86.36% complete, ETA 00:28:21
# Fork: 1 of 1
# Warmup Iteration   1: 6761.634 ns/op
# Warmup Iteration   2: 4751.036 ns/op
Iteration   1: 4750.303 ns/op
Iteration   2: 4750.861 ns/op
Iteration   3: 4750.241 ns/op
Iteration   4: 4752.190 ns/op
Iteration   5: 4750.682 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4750.855 ±(99.9%) 3.041 ns/op [Average]
  (min, avg, max) = (4750.241, 4750.855, 4752.190), stdev = 0.790
  CI (99.9%): [4747.814, 4753.896] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 86.67% complete, ETA 00:27:44
# Fork: 1 of 1
# Warmup Iteration   1: 10169.100 ns/op
# Warmup Iteration   2: 8235.531 ns/op
Iteration   1: 8306.080 ns/op
Iteration   2: 8243.485 ns/op
Iteration   3: 8253.493 ns/op
Iteration   4: 8245.307 ns/op
Iteration   5: 8247.274 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8259.128 ±(99.9%) 102.106 ns/op [Average]
  (min, avg, max) = (8243.485, 8259.128, 8306.080), stdev = 26.516
  CI (99.9%): [8157.022, 8361.233] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 86.97% complete, ETA 00:27:06
# Fork: 1 of 1
# Warmup Iteration   1: 19951.286 ns/op
# Warmup Iteration   2: 15887.132 ns/op
Iteration   1: 15867.193 ns/op
Iteration   2: 15865.820 ns/op
Iteration   3: 15887.160 ns/op
Iteration   4: 15858.589 ns/op
Iteration   5: 15849.496 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15865.652 ±(99.9%) 53.630 ns/op [Average]
  (min, avg, max) = (15849.496, 15865.652, 15887.160), stdev = 13.928
  CI (99.9%): [15812.022, 15919.282] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 87.27% complete, ETA 00:26:28
# Fork: 1 of 1
# Warmup Iteration   1: 41267.594 ns/op
# Warmup Iteration   2: 29293.360 ns/op
Iteration   1: 29483.024 ns/op
Iteration   2: 29223.433 ns/op
Iteration   3: 29222.552 ns/op
Iteration   4: 29549.524 ns/op
Iteration   5: 29252.877 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  29346.282 ±(99.9%) 606.190 ns/op [Average]
  (min, avg, max) = (29222.552, 29346.282, 29549.524), stdev = 157.426
  CI (99.9%): [28740.092, 29952.472] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 87.58% complete, ETA 00:25:50
# Fork: 1 of 1
# Warmup Iteration   1: 293131.166 ns/op
# Warmup Iteration   2: 219672.928 ns/op
Iteration   1: 219170.859 ns/op
Iteration   2: 220758.197 ns/op
Iteration   3: 219016.843 ns/op
Iteration   4: 219017.700 ns/op
Iteration   5: 219258.155 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  219444.351 ±(99.9%) 2856.007 ns/op [Average]
  (min, avg, max) = (219016.843, 219444.351, 220758.197), stdev = 741.696
  CI (99.9%): [216588.344, 222300.358] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 87.88% complete, ETA 00:25:12
# Fork: 1 of 1
# Warmup Iteration   1: 2229.983 ns/op
# Warmup Iteration   2: 1910.162 ns/op
Iteration   1: 1901.258 ns/op
Iteration   2: 1900.371 ns/op
Iteration   3: 1910.020 ns/op
Iteration   4: 1914.848 ns/op
Iteration   5: 1900.949 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1905.489 ±(99.9%) 25.312 ns/op [Average]
  (min, avg, max) = (1900.371, 1905.489, 1914.848), stdev = 6.573
  CI (99.9%): [1880.177, 1930.801] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 88.18% complete, ETA 00:24:35
# Fork: 1 of 1
# Warmup Iteration   1: 5945.379 ns/op
# Warmup Iteration   2: 4340.503 ns/op
Iteration   1: 4302.767 ns/op
Iteration   2: 4307.201 ns/op
Iteration   3: 4287.492 ns/op
Iteration   4: 4301.906 ns/op
Iteration   5: 4311.700 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4302.213 ±(99.9%) 35.081 ns/op [Average]
  (min, avg, max) = (4287.492, 4302.213, 4311.700), stdev = 9.110
  CI (99.9%): [4267.132, 4337.294] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 88.48% complete, ETA 00:23:57
# Fork: 1 of 1
# Warmup Iteration   1: 11659.152 ns/op
# Warmup Iteration   2: 8608.329 ns/op
Iteration   1: 8582.367 ns/op
Iteration   2: 8570.573 ns/op
Iteration   3: 8592.127 ns/op
Iteration   4: 8572.947 ns/op
Iteration   5: 8578.593 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8579.321 ±(99.9%) 32.840 ns/op [Average]
  (min, avg, max) = (8570.573, 8579.321, 8592.127), stdev = 8.529
  CI (99.9%): [8546.481, 8612.162] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 88.79% complete, ETA 00:23:19
# Fork: 1 of 1
# Warmup Iteration   1: 22765.785 ns/op
# Warmup Iteration   2: 16829.219 ns/op
Iteration   1: 16865.018 ns/op
Iteration   2: 16818.608 ns/op
Iteration   3: 16810.612 ns/op
Iteration   4: 16804.840 ns/op
Iteration   5: 16832.029 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16826.221 ±(99.9%) 92.288 ns/op [Average]
  (min, avg, max) = (16804.840, 16826.221, 16865.018), stdev = 23.967
  CI (99.9%): [16733.933, 16918.509] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 89.09% complete, ETA 00:22:41
# Fork: 1 of 1
# Warmup Iteration   1: 165410.713 ns/op
# Warmup Iteration   2: 132360.222 ns/op
Iteration   1: 131666.310 ns/op
Iteration   2: 132679.530 ns/op
Iteration   3: 132095.004 ns/op
Iteration   4: 131890.448 ns/op
Iteration   5: 131813.542 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  132028.967 ±(99.9%) 1521.746 ns/op [Average]
  (min, avg, max) = (131666.310, 132028.967, 132679.530), stdev = 395.193
  CI (99.9%): [130507.221, 133550.713] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 89.39% complete, ETA 00:22:03
# Fork: 1 of 1
# Warmup Iteration   1: 3798.717 ns/op
# Warmup Iteration   2: 3291.873 ns/op
Iteration   1: 3276.904 ns/op
Iteration   2: 3283.239 ns/op
Iteration   3: 3288.215 ns/op
Iteration   4: 3277.155 ns/op
Iteration   5: 3281.390 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3281.381 ±(99.9%) 18.068 ns/op [Average]
  (min, avg, max) = (3276.904, 3281.381, 3288.215), stdev = 4.692
  CI (99.9%): [3263.313, 3299.448] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 89.70% complete, ETA 00:21:25
# Fork: 1 of 1
# Warmup Iteration   1: 7196.545 ns/op
# Warmup Iteration   2: 5442.839 ns/op
Iteration   1: 5433.371 ns/op
Iteration   2: 5422.949 ns/op
Iteration   3: 5433.039 ns/op
Iteration   4: 5439.984 ns/op
Iteration   5: 5431.811 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5432.231 ±(99.9%) 23.453 ns/op [Average]
  (min, avg, max) = (5422.949, 5432.231, 5439.984), stdev = 6.091
  CI (99.9%): [5408.778, 5455.684] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 90.00% complete, ETA 00:20:48
# Fork: 1 of 1
# Warmup Iteration   1: 13000.126 ns/op
# Warmup Iteration   2: 9445.083 ns/op
Iteration   1: 9436.108 ns/op
Iteration   2: 9439.877 ns/op
Iteration   3: 9428.326 ns/op
Iteration   4: 9464.451 ns/op
Iteration   5: 9424.662 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9438.685 ±(99.9%) 60.146 ns/op [Average]
  (min, avg, max) = (9424.662, 9438.685, 9464.451), stdev = 15.620
  CI (99.9%): [9378.538, 9498.831] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 90.30% complete, ETA 00:20:10
# Fork: 1 of 1
# Warmup Iteration   1: 25787.460 ns/op
# Warmup Iteration   2: 20302.338 ns/op
Iteration   1: 19560.418 ns/op
Iteration   2: 19545.222 ns/op
Iteration   3: 19616.924 ns/op
Iteration   4: 19553.453 ns/op
Iteration   5: 19546.261 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  19564.456 ±(99.9%) 115.379 ns/op [Average]
  (min, avg, max) = (19545.222, 19564.456, 19616.924), stdev = 29.963
  CI (99.9%): [19449.077, 19679.834] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 90.61% complete, ETA 00:19:32
# Fork: 1 of 1
# Warmup Iteration   1: 227611.160 ns/op
# Warmup Iteration   2: 173789.243 ns/op
Iteration   1: 173580.077 ns/op
Iteration   2: 173580.057 ns/op
Iteration   3: 176362.609 ns/op
Iteration   4: 174180.982 ns/op
Iteration   5: 172935.328 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  174127.811 ±(99.9%) 5100.909 ns/op [Average]
  (min, avg, max) = (172935.328, 174127.811, 176362.609), stdev = 1324.690
  CI (99.9%): [169026.902, 179228.720] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 90.91% complete, ETA 00:18:54
# Fork: 1 of 1
# Warmup Iteration   1: 3537.649 ns/op
# Warmup Iteration   2: 3021.527 ns/op
Iteration   1: 3020.597 ns/op
Iteration   2: 3006.341 ns/op
Iteration   3: 2999.600 ns/op
Iteration   4: 3005.046 ns/op
Iteration   5: 3006.314 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3007.580 ±(99.9%) 29.994 ns/op [Average]
  (min, avg, max) = (2999.600, 3007.580, 3020.597), stdev = 7.789
  CI (99.9%): [2977.586, 3037.574] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 91.21% complete, ETA 00:18:16
# Fork: 1 of 1
# Warmup Iteration   1: 7132.669 ns/op
# Warmup Iteration   2: 5782.144 ns/op
Iteration   1: 5771.866 ns/op
Iteration   2: 5788.600 ns/op
Iteration   3: 5770.752 ns/op
Iteration   4: 5764.264 ns/op
Iteration   5: 5767.290 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5772.554 ±(99.9%) 36.410 ns/op [Average]
  (min, avg, max) = (5764.264, 5772.554, 5788.600), stdev = 9.456
  CI (99.9%): [5736.145, 5808.964] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 91.52% complete, ETA 00:17:38
# Fork: 1 of 1
# Warmup Iteration   1: 18770.889 ns/op
# Warmup Iteration   2: 15125.721 ns/op
Iteration   1: 14964.629 ns/op
Iteration   2: 15019.621 ns/op
Iteration   3: 15042.198 ns/op
Iteration   4: 15254.404 ns/op
Iteration   5: 15034.463 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15063.063 ±(99.9%) 428.103 ns/op [Average]
  (min, avg, max) = (14964.629, 15063.063, 15254.404), stdev = 111.177
  CI (99.9%): [14634.960, 15491.166] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 91.82% complete, ETA 00:17:01
# Fork: 1 of 1
# Warmup Iteration   1: 33253.714 ns/op
# Warmup Iteration   2: 27765.720 ns/op
Iteration   1: 27325.877 ns/op
Iteration   2: 27378.738 ns/op
Iteration   3: 27372.328 ns/op
Iteration   4: 27360.654 ns/op
Iteration   5: 27381.710 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  27363.861 ±(99.9%) 87.484 ns/op [Average]
  (min, avg, max) = (27325.877, 27363.861, 27381.710), stdev = 22.719
  CI (99.9%): [27276.378, 27451.345] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 92.12% complete, ETA 00:16:23
# Fork: 1 of 1
# Warmup Iteration   1: 259921.082 ns/op
# Warmup Iteration   2: 205417.744 ns/op
Iteration   1: 205823.763 ns/op
Iteration   2: 205686.381 ns/op
Iteration   3: 205531.420 ns/op
Iteration   4: 207363.791 ns/op
Iteration   5: 205709.359 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  206022.943 ±(99.9%) 2914.018 ns/op [Average]
  (min, avg, max) = (205531.420, 206022.943, 207363.791), stdev = 756.761
  CI (99.9%): [203108.925, 208936.961] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 92.42% complete, ETA 00:15:45
# Fork: 1 of 1
# Warmup Iteration   1: 31521.121 ns/op
# Warmup Iteration   2: 29450.897 ns/op
Iteration   1: 27667.691 ns/op
Iteration   2: 27718.005 ns/op
Iteration   3: 27752.142 ns/op
Iteration   4: 27749.048 ns/op
Iteration   5: 28127.037 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  27802.785 ±(99.9%) 710.102 ns/op [Average]
  (min, avg, max) = (27667.691, 27802.785, 28127.037), stdev = 184.411
  CI (99.9%): [27092.683, 28512.887] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 92.73% complete, ETA 00:15:07
# Fork: 1 of 1
# Warmup Iteration   1: 46324.713 ns/op
# Warmup Iteration   2: 41630.379 ns/op
Iteration   1: 40811.234 ns/op
Iteration   2: 41283.006 ns/op
Iteration   3: 41216.354 ns/op
Iteration   4: 41022.576 ns/op
Iteration   5: 41115.790 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  41089.792 ±(99.9%) 710.384 ns/op [Average]
  (min, avg, max) = (40811.234, 41089.792, 41283.006), stdev = 184.484
  CI (99.9%): [40379.408, 41800.175] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 93.03% complete, ETA 00:14:29
# Fork: 1 of 1
# Warmup Iteration   1: 71952.284 ns/op
# Warmup Iteration   2: 62261.430 ns/op
Iteration   1: 61166.881 ns/op
Iteration   2: 61474.008 ns/op
Iteration   3: 61634.139 ns/op
Iteration   4: 61597.929 ns/op
Iteration   5: 61518.449 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  61478.281 ±(99.9%) 713.173 ns/op [Average]
  (min, avg, max) = (61166.881, 61478.281, 61634.139), stdev = 185.209
  CI (99.9%): [60765.108, 62191.454] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 93.33% complete, ETA 00:13:52
# Fork: 1 of 1
# Warmup Iteration   1: 144366.200 ns/op
# Warmup Iteration   2: 124582.732 ns/op
Iteration   1: 122573.666 ns/op
Iteration   2: 122936.283 ns/op
Iteration   3: 122836.320 ns/op
Iteration   4: 122624.172 ns/op
Iteration   5: 122557.941 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  122705.676 ±(99.9%) 656.144 ns/op [Average]
  (min, avg, max) = (122557.941, 122705.676, 122936.283), stdev = 170.399
  CI (99.9%): [122049.532, 123361.821] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 93.64% complete, ETA 00:13:14
# Fork: 1 of 1
# Warmup Iteration   1: 1176968.194 ns/op
# Warmup Iteration   2: 1015659.565 ns/op
Iteration   1: 996953.649 ns/op
Iteration   2: 997020.962 ns/op
Iteration   3: 1006736.169 ns/op
Iteration   4: 996817.090 ns/op
Iteration   5: 999922.230 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  999490.020 ±(99.9%) 16378.535 ns/op [Average]
  (min, avg, max) = (996817.090, 999490.020, 1006736.169), stdev = 4253.453
  CI (99.9%): [983111.485, 1015868.555] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 93.94% complete, ETA 00:12:36
# Fork: 1 of 1
# Warmup Iteration   1: 2568.339 ns/op
# Warmup Iteration   2: 2275.849 ns/op
Iteration   1: 2264.393 ns/op
Iteration   2: 2268.987 ns/op
Iteration   3: 2271.026 ns/op
Iteration   4: 2263.971 ns/op
Iteration   5: 2266.612 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2266.998 ±(99.9%) 11.596 ns/op [Average]
  (min, avg, max) = (2263.971, 2266.998, 2271.026), stdev = 3.012
  CI (99.9%): [2255.402, 2278.594] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 94.24% complete, ETA 00:11:58
# Fork: 1 of 1
# Warmup Iteration   1: 4519.796 ns/op
# Warmup Iteration   2: 3919.353 ns/op
Iteration   1: 3964.337 ns/op
Iteration   2: 3911.067 ns/op
Iteration   3: 3903.811 ns/op
Iteration   4: 3898.572 ns/op
Iteration   5: 3925.227 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3920.603 ±(99.9%) 101.738 ns/op [Average]
  (min, avg, max) = (3898.572, 3920.603, 3964.337), stdev = 26.421
  CI (99.9%): [3818.865, 4022.341] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 94.55% complete, ETA 00:11:20
# Fork: 1 of 1
# Warmup Iteration   1: 7849.176 ns/op
# Warmup Iteration   2: 6840.958 ns/op
Iteration   1: 6801.458 ns/op
Iteration   2: 6821.289 ns/op
Iteration   3: 6797.572 ns/op
Iteration   4: 6800.904 ns/op
Iteration   5: 6820.607 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6808.366 ±(99.9%) 44.607 ns/op [Average]
  (min, avg, max) = (6797.572, 6808.366, 6821.289), stdev = 11.584
  CI (99.9%): [6763.759, 6852.973] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 94.85% complete, ETA 00:10:42
# Fork: 1 of 1
# Warmup Iteration   1: 13466.546 ns/op
# Warmup Iteration   2: 11961.571 ns/op
Iteration   1: 11941.470 ns/op
Iteration   2: 11959.110 ns/op
Iteration   3: 11975.676 ns/op
Iteration   4: 11961.013 ns/op
Iteration   5: 11961.354 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  11959.724 ±(99.9%) 46.860 ns/op [Average]
  (min, avg, max) = (11941.470, 11959.724, 11975.676), stdev = 12.169
  CI (99.9%): [11912.865, 12006.584] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 95.15% complete, ETA 00:10:05
# Fork: 1 of 1
# Warmup Iteration   1: 132966.877 ns/op
# Warmup Iteration   2: 119466.571 ns/op
Iteration   1: 119386.247 ns/op
Iteration   2: 119570.582 ns/op
Iteration   3: 119527.025 ns/op
Iteration   4: 119651.474 ns/op
Iteration   5: 119724.379 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  119571.941 ±(99.9%) 494.865 ns/op [Average]
  (min, avg, max) = (119386.247, 119571.941, 119724.379), stdev = 128.515
  CI (99.9%): [119077.076, 120066.807] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 95.45% complete, ETA 00:09:27
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
6191.476 ns/op
# Warmup Iteration   2: 6156.115 ns/op
Iteration   1: 6396.775 ns/op
Iteration   2: 6358.005 ns/op
Iteration   3: 6383.504 ns/op
Iteration   4: 6370.586 ns/op
Iteration   5: 6386.041 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6378.982 ±(99.9%) 57.676 ns/op [Average]
  (min, avg, max) = (6358.005, 6378.982, 6396.775), stdev = 14.978
  CI (99.9%): [6321.306, 6436.659] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 95.76% complete, ETA 00:08:49
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
10747.104 ns/op
# Warmup Iteration   2: 9811.655 ns/op
Iteration   1: 10032.134 ns/op
Iteration   2: 10002.476 ns/op
Iteration   3: 10074.951 ns/op
Iteration   4: 9997.758 ns/op
Iteration   5: 9989.145 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  10019.293 ±(99.9%) 135.022 ns/op [Average]
  (min, avg, max) = (9989.145, 10019.293, 10074.951), stdev = 35.065
  CI (99.9%): [9884.271, 10154.315] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 96.06% complete, ETA 00:08:11
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
18849.127 ns/op
# Warmup Iteration   2: 17002.051 ns/op
Iteration   1: 16993.853 ns/op
Iteration   2: 17006.505 ns/op
Iteration   3: 17017.474 ns/op
Iteration   4: 17029.270 ns/op
Iteration   5: 17006.588 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  17010.738 ±(99.9%) 51.268 ns/op [Average]
  (min, avg, max) = (16993.853, 17010.738, 17029.270), stdev = 13.314
  CI (99.9%): [16959.470, 17062.006] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 96.36% complete, ETA 00:07:33
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
36476.970 ns/op
# Warmup Iteration   2: 35207.422 ns/op
Iteration   1: 36091.977 ns/op
Iteration   2: 36340.006 ns/op
Iteration   3: 36383.353 ns/op
Iteration   4: 36491.481 ns/op
Iteration   5: 36523.449 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  36366.053 ±(99.9%) 657.437 ns/op [Average]
  (min, avg, max) = (36091.977, 36366.053, 36523.449), stdev = 170.734
  CI (99.9%): [35708.616, 37023.490] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 96.67% complete, ETA 00:06:55
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
561609.161 ns/op
# Warmup Iteration   2: 515768.569 ns/op
Iteration   1: 504144.586 ns/op
Iteration   2: 507606.442 ns/op
Iteration   3: 510881.971 ns/op
Iteration   4: 509774.859 ns/op
Iteration   5: 511467.124 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  508774.996 ±(99.9%) 11470.272 ns/op [Average]
  (min, avg, max) = (504144.586, 508774.996, 511467.124), stdev = 2978.793
  CI (99.9%): [497304.724, 520245.269] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 96.97% complete, ETA 00:06:18
# Fork: 1 of 1
# Warmup Iteration   1: 2452.907 ns/op
# Warmup Iteration   2: 2343.093 ns/op
Iteration   1: 2294.354 ns/op
Iteration   2: 2297.429 ns/op
Iteration   3: 2296.496 ns/op
Iteration   4: 2273.037 ns/op
Iteration   5: 2301.964 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2292.656 ±(99.9%) 43.563 ns/op [Average]
  (min, avg, max) = (2273.037, 2292.656, 2301.964), stdev = 11.313
  CI (99.9%): [2249.093, 2336.219] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 97.27% complete, ETA 00:05:40
# Fork: 1 of 1
# Warmup Iteration   1: 5030.352 ns/op
# Warmup Iteration   2: 4139.828 ns/op
Iteration   1: 4133.452 ns/op
Iteration   2: 4134.129 ns/op
Iteration   3: 4169.059 ns/op
Iteration   4: 4134.372 ns/op
Iteration   5: 4136.261 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4141.455 ±(99.9%) 59.555 ns/op [Average]
  (min, avg, max) = (4133.452, 4141.455, 4169.059), stdev = 15.466
  CI (99.9%): [4081.900, 4201.009] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 97.58% complete, ETA 00:05:02
# Fork: 1 of 1
# Warmup Iteration   1: 9332.303 ns/op
# Warmup Iteration   2: 7507.583 ns/op
Iteration   1: 7438.338 ns/op
Iteration   2: 7465.192 ns/op
Iteration   3: 7455.071 ns/op
Iteration   4: 7449.334 ns/op
Iteration   5: 7603.909 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7482.369 ±(99.9%) 264.283 ns/op [Average]
  (min, avg, max) = (7438.338, 7482.369, 7603.909), stdev = 68.634
  CI (99.9%): [7218.085, 7746.652] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 97.88% complete, ETA 00:04:24
# Fork: 1 of 1
# Warmup Iteration   1: 20167.711 ns/op
# Warmup Iteration   2: 13212.405 ns/op
Iteration   1: 13182.068 ns/op
Iteration   2: 13174.839 ns/op
Iteration   3: 13188.822 ns/op
Iteration   4: 13205.095 ns/op
Iteration   5: 13198.145 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  13189.794 ±(99.9%) 46.692 ns/op [Average]
  (min, avg, max) = (13174.839, 13189.794, 13205.095), stdev = 12.126
  CI (99.9%): [13143.102, 13236.486] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 98.18% complete, ETA 00:03:46
# Fork: 1 of 1
# Warmup Iteration   1: 160627.204 ns/op
# Warmup Iteration   2: 133926.298 ns/op
Iteration   1: 135201.825 ns/op
Iteration   2: 133627.505 ns/op
Iteration   3: 133022.368 ns/op
Iteration   4: 133349.703 ns/op
Iteration   5: 133244.573 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  133689.195 ±(99.9%) 3362.131 ns/op [Average]
  (min, avg, max) = (133022.368, 133689.195, 135201.825), stdev = 873.135
  CI (99.9%): [130327.064, 137051.325] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 98.48% complete, ETA 00:03:09
# Fork: 1 of 1
# Warmup Iteration   1: 21355.590 ns/op
# Warmup Iteration   2: 18481.497 ns/op
Iteration   1: 18483.617 ns/op
Iteration   2: 18459.304 ns/op
Iteration   3: 18444.468 ns/op
Iteration   4: 18608.354 ns/op
Iteration   5: 18462.077 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  18491.564 ±(99.9%) 257.096 ns/op [Average]
  (min, avg, max) = (18444.468, 18491.564, 18608.354), stdev = 66.767
  CI (99.9%): [18234.468, 18748.660] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 98.79% complete, ETA 00:02:31
# Fork: 1 of 1
# Warmup Iteration   1: 42009.128 ns/op
# Warmup Iteration   2: 35304.059 ns/op
Iteration   1: 35233.856 ns/op
Iteration   2: 35162.820 ns/op
Iteration   3: 35543.936 ns/op
Iteration   4: 35181.271 ns/op
Iteration   5: 35181.104 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  35260.598 ±(99.9%) 618.408 ns/op [Average]
  (min, avg, max) = (35162.820, 35260.598, 35543.936), stdev = 160.599
  CI (99.9%): [34642.189, 35879.006] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 99.09% complete, ETA 00:01:53
# Fork: 1 of 1
# Warmup Iteration   1: 94478.868 ns/op
# Warmup Iteration   2: 77907.537 ns/op
Iteration   1: 78206.962 ns/op
Iteration   2: 78030.807 ns/op
Iteration   3: 77910.995 ns/op
Iteration   4: 78111.131 ns/op
Iteration   5: 77795.677 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  78011.114 ±(99.9%) 624.424 ns/op [Average]
  (min, avg, max) = (77795.677, 78011.114, 78206.962), stdev = 162.161
  CI (99.9%): [77386.690, 78635.538] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 99.39% complete, ETA 00:01:15
# Fork: 1 of 1
# Warmup Iteration   1: 216130.979 ns/op
# Warmup Iteration   2: 180308.886 ns/op
Iteration   1: 180522.952 ns/op
Iteration   2: 180570.739 ns/op
Iteration   3: 180054.107 ns/op
Iteration   4: 180046.959 ns/op
Iteration   5: 180233.052 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  180285.562 ±(99.9%) 964.470 ns/op [Average]
  (min, avg, max) = (180046.959, 180285.562, 180570.739), stdev = 250.470
  CI (99.9%): [179321.092, 181250.032] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 99.70% complete, ETA 00:00:37
# Fork: 1 of 1
# Warmup Iteration   1: 1814337.061 ns/op
# Warmup Iteration   2: 1509163.055 ns/op
Iteration   1: 1503341.384 ns/op
Iteration   2: 1512706.156 ns/op
Iteration   3: 1499357.404 ns/op
Iteration   4: 1506363.748 ns/op
Iteration   5: 1502011.793 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1504756.097 ±(99.9%) 19678.494 ns/op [Average]
  (min, avg, max) = (1499357.404, 1504756.097, 1512706.156), stdev = 5110.442
  CI (99.9%): [1485077.603, 1524434.591] (assumes normal distribution)


# Run complete. Total time: 03:28:01

Benchmark                       (converterType)  (inputType)  Mode  Cnt         Score         Error  Units
EventBenchmark.both                        JSON         _1_K  avgt    5     29402.916 ±     156.646  ns/op
EventBenchmark.both                        JSON         _2_K  avgt    5     55051.490 ±     382.908  ns/op
EventBenchmark.both                        JSON         _4_K  avgt    5    112830.414 ±     280.479  ns/op
EventBenchmark.both                        JSON         _8_K  avgt    5    253089.521 ±    3419.647  ns/op
EventBenchmark.both                        JSON        _64_K  avgt    5   2268759.470 ±   14122.813  ns/op
EventBenchmark.both                        CBOR         _1_K  avgt    5     24936.678 ±     428.492  ns/op
EventBenchmark.both                        CBOR         _2_K  avgt    5     48337.225 ±    1553.506  ns/op
EventBenchmark.both                        CBOR         _4_K  avgt    5     93263.852 ±     924.759  ns/op
EventBenchmark.both                        CBOR         _8_K  avgt    5    201594.571 ±     740.231  ns/op
EventBenchmark.both                        CBOR        _64_K  avgt    5   1970214.151 ±    8485.176  ns/op
EventBenchmark.both                       SMILE         _1_K  avgt    5     27002.023 ±     491.543  ns/op
EventBenchmark.both                       SMILE         _2_K  avgt    5     50770.474 ±    1568.487  ns/op
EventBenchmark.both                       SMILE         _4_K  avgt    5    103187.726 ±     300.973  ns/op
EventBenchmark.both                       SMILE         _8_K  avgt    5    227741.268 ±    9657.523  ns/op
EventBenchmark.both                       SMILE        _64_K  avgt    5   2158324.716 ±   10141.858  ns/op
EventBenchmark.both                    SCALA_PB         _1_K  avgt    5      8350.672 ±     173.065  ns/op
EventBenchmark.both                    SCALA_PB         _2_K  avgt    5     15818.339 ±      89.396  ns/op
EventBenchmark.both                    SCALA_PB         _4_K  avgt    5     30693.221 ±     310.259  ns/op
EventBenchmark.both                    SCALA_PB         _8_K  avgt    5     64383.951 ±    1055.635  ns/op
EventBenchmark.both                    SCALA_PB        _64_K  avgt    5    645699.219 ±   11956.889  ns/op
EventBenchmark.both                     JAVA_PB         _1_K  avgt    5      7137.582 ±      18.020  ns/op
EventBenchmark.both                     JAVA_PB         _2_K  avgt    5     14901.676 ±     216.097  ns/op
EventBenchmark.both                     JAVA_PB         _4_K  avgt    5     28813.480 ±     427.983  ns/op
EventBenchmark.both                     JAVA_PB         _8_K  avgt    5     60586.515 ±     199.242  ns/op
EventBenchmark.both                     JAVA_PB        _64_K  avgt    5    584545.263 ±   19407.758  ns/op
EventBenchmark.both                 JAVA_THRIFT         _1_K  avgt    5     10020.796 ±      37.993  ns/op
EventBenchmark.both                 JAVA_THRIFT         _2_K  avgt    5     19498.034 ±      97.543  ns/op
EventBenchmark.both                 JAVA_THRIFT         _4_K  avgt    5     38945.444 ±     158.487  ns/op
EventBenchmark.both                 JAVA_THRIFT         _8_K  avgt    5     85085.336 ±    2052.012  ns/op
EventBenchmark.both                 JAVA_THRIFT        _64_K  avgt    5    807159.631 ±   35082.314  ns/op
EventBenchmark.both                SERIALIZABLE         _1_K  avgt    5    141273.915 ±    1003.601  ns/op
EventBenchmark.both                SERIALIZABLE         _2_K  avgt    5    245541.179 ±    2920.136  ns/op
EventBenchmark.both                SERIALIZABLE         _4_K  avgt    5    605214.137 ±    3605.252  ns/op
EventBenchmark.both                SERIALIZABLE         _8_K  avgt    5   1430211.311 ±    9394.395  ns/op
EventBenchmark.both                SERIALIZABLE        _64_K  avgt    5  12367646.784 ±  102095.309  ns/op
EventBenchmark.both                   BOOPICKLE         _1_K  avgt    5      6493.936 ±     254.529  ns/op
EventBenchmark.both                   BOOPICKLE         _2_K  avgt    5     12733.432 ±     203.817  ns/op
EventBenchmark.both                   BOOPICKLE         _4_K  avgt    5     23020.249 ±     115.757  ns/op
EventBenchmark.both                   BOOPICKLE         _8_K  avgt    5     45095.095 ±     518.734  ns/op
EventBenchmark.both                   BOOPICKLE        _64_K  avgt    5    446994.488 ±    3306.535  ns/op
EventBenchmark.both                       CHILL         _1_K  avgt    5     71206.416 ±   14652.131  ns/op
EventBenchmark.both                       CHILL         _2_K  avgt    5    138385.829 ±   13833.737  ns/op
EventBenchmark.both                       CHILL         _4_K  avgt    5    277148.408 ±   54247.496  ns/op
EventBenchmark.both                       CHILL         _8_K  avgt    5    642357.017 ±  146314.699  ns/op
EventBenchmark.both                       CHILL        _64_K  avgt    5   5508620.574 ±  636191.233  ns/op
EventBenchmark.both                    JSONITER         _1_K  avgt    5      9492.096 ±     146.995  ns/op
EventBenchmark.both                    JSONITER         _2_K  avgt    5     17612.661 ±      55.740  ns/op
EventBenchmark.both                    JSONITER         _4_K  avgt    5     37519.533 ±     489.257  ns/op
EventBenchmark.both                    JSONITER         _8_K  avgt    5     69775.737 ±     198.620  ns/op
EventBenchmark.both                    JSONITER        _64_K  avgt    5    818994.448 ±    8058.400  ns/op
EventBenchmark.both                       CIRCE         _1_K  avgt    5    183941.303 ±    8146.548  ns/op
EventBenchmark.both                       CIRCE         _2_K  avgt    5    277898.370 ±   10296.326  ns/op
EventBenchmark.both                       CIRCE         _4_K  avgt    5    554843.054 ±   15620.948  ns/op
EventBenchmark.both                       CIRCE         _8_K  avgt    5   1300399.739 ±   67929.885  ns/op
EventBenchmark.both                       CIRCE        _64_K  avgt    5  12310879.838 ±  294805.399  ns/op
EventBenchmark.deserialization             JSON         _1_K  avgt    5     15089.609 ±      60.022  ns/op
EventBenchmark.deserialization             JSON         _2_K  avgt    5     28361.943 ±     223.532  ns/op
EventBenchmark.deserialization             JSON         _4_K  avgt    5     59533.547 ±     707.545  ns/op
EventBenchmark.deserialization             JSON         _8_K  avgt    5    127960.641 ±    3752.997  ns/op
EventBenchmark.deserialization             JSON        _64_K  avgt    5   1201505.840 ±    7193.538  ns/op
EventBenchmark.deserialization             CBOR         _1_K  avgt    5     13662.625 ±      30.054  ns/op
EventBenchmark.deserialization             CBOR         _2_K  avgt    5     26078.029 ±     140.062  ns/op
EventBenchmark.deserialization             CBOR         _4_K  avgt    5     52747.377 ±     215.812  ns/op
EventBenchmark.deserialization             CBOR         _8_K  avgt    5    113717.785 ±    1050.705  ns/op
EventBenchmark.deserialization             CBOR        _64_K  avgt    5   1121761.777 ±   31232.560  ns/op
EventBenchmark.deserialization            SMILE         _1_K  avgt    5     14294.838 ±     436.853  ns/op
EventBenchmark.deserialization            SMILE         _2_K  avgt    5     27279.587 ±    1127.248  ns/op
EventBenchmark.deserialization            SMILE         _4_K  avgt    5     53505.514 ±     890.412  ns/op
EventBenchmark.deserialization            SMILE         _8_K  avgt    5    119009.608 ±    3425.320  ns/op
EventBenchmark.deserialization            SMILE        _64_K  avgt    5   1149063.419 ±   11795.297  ns/op
EventBenchmark.deserialization         SCALA_PB         _1_K  avgt    5      5748.598 ±     244.249  ns/op
EventBenchmark.deserialization         SCALA_PB         _2_K  avgt    5     10907.728 ±     226.932  ns/op
EventBenchmark.deserialization         SCALA_PB         _4_K  avgt    5     20102.817 ±     360.206  ns/op
EventBenchmark.deserialization         SCALA_PB         _8_K  avgt    5     43904.859 ±     842.968  ns/op
EventBenchmark.deserialization         SCALA_PB        _64_K  avgt    5    429772.540 ±    8971.706  ns/op
EventBenchmark.deserialization          JAVA_PB         _1_K  avgt    5      3889.386 ±      67.768  ns/op
EventBenchmark.deserialization          JAVA_PB         _2_K  avgt    5      7747.233 ±      28.565  ns/op
EventBenchmark.deserialization          JAVA_PB         _4_K  avgt    5     14413.151 ±      87.569  ns/op
EventBenchmark.deserialization          JAVA_PB         _8_K  avgt    5     32312.917 ±     186.232  ns/op
EventBenchmark.deserialization          JAVA_PB        _64_K  avgt    5    275837.876 ±    3026.904  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _1_K  avgt    5      4469.618 ±      16.418  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _2_K  avgt    5      8780.236 ±     391.519  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _4_K  avgt    5     16673.022 ±     249.384  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _8_K  avgt    5     36072.945 ±     318.112  ns/op
EventBenchmark.deserialization      JAVA_THRIFT        _64_K  avgt    5    335456.141 ±    2668.985  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _1_K  avgt    5    108998.343 ±     466.874  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _2_K  avgt    5    198613.979 ±    2775.368  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _4_K  avgt    5    475627.637 ±    2900.760  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _8_K  avgt    5   1123587.998 ±    5217.350  ns/op
EventBenchmark.deserialization     SERIALIZABLE        _64_K  avgt    5   9657091.725 ±   68845.563  ns/op
EventBenchmark.deserialization        BOOPICKLE         _1_K  avgt    5      2431.735 ±      63.179  ns/op
EventBenchmark.deserialization        BOOPICKLE         _2_K  avgt    5      4704.067 ±       9.898  ns/op
EventBenchmark.deserialization        BOOPICKLE         _4_K  avgt    5      9260.543 ±       8.057  ns/op
EventBenchmark.deserialization        BOOPICKLE         _8_K  avgt    5     17075.590 ±     488.871  ns/op
EventBenchmark.deserialization        BOOPICKLE        _64_K  avgt    5    199163.711 ±    4039.767  ns/op
EventBenchmark.deserialization            CHILL         _1_K  avgt    5     34269.856 ±    2152.581  ns/op
EventBenchmark.deserialization            CHILL         _2_K  avgt    5     79861.448 ±   33379.216  ns/op
EventBenchmark.deserialization            CHILL         _4_K  avgt    5    147232.208 ±   18775.785  ns/op
EventBenchmark.deserialization            CHILL         _8_K  avgt    5    356840.749 ±  220993.023  ns/op
EventBenchmark.deserialization            CHILL        _64_K  avgt    5   3308703.752 ± 1714517.395  ns/op
EventBenchmark.deserialization         JSONITER         _1_K  avgt    5      6163.250 ±      84.029  ns/op
EventBenchmark.deserialization         JSONITER         _2_K  avgt    5     12178.998 ±     110.501  ns/op
EventBenchmark.deserialization         JSONITER         _4_K  avgt    5     23359.246 ±     435.747  ns/op
EventBenchmark.deserialization         JSONITER         _8_K  avgt    5     47682.439 ±     321.377  ns/op
EventBenchmark.deserialization         JSONITER        _64_K  avgt    5    478775.931 ±    7347.125  ns/op
EventBenchmark.deserialization            CIRCE         _1_K  avgt    5    146891.586 ±    9572.088  ns/op
EventBenchmark.deserialization            CIRCE         _2_K  avgt    5    206101.912 ±   11769.229  ns/op
EventBenchmark.deserialization            CIRCE         _4_K  avgt    5    406094.515 ±    7607.710  ns/op
EventBenchmark.deserialization            CIRCE         _8_K  avgt    5    943787.526 ±   38086.594  ns/op
EventBenchmark.deserialization            CIRCE        _64_K  avgt    5   8892539.842 ±  416515.970  ns/op
EventBenchmark.serialization               JSON         _1_K  avgt    5     12504.314 ±      74.769  ns/op
EventBenchmark.serialization               JSON         _2_K  avgt    5     25171.208 ±     206.780  ns/op
EventBenchmark.serialization               JSON         _4_K  avgt    5     45853.085 ±     251.016  ns/op
EventBenchmark.serialization               JSON         _8_K  avgt    5    100218.705 ±     847.323  ns/op
EventBenchmark.serialization               JSON        _64_K  avgt    5    863100.071 ±   15207.765  ns/op
EventBenchmark.serialization               CBOR         _1_K  avgt    5     11976.284 ±     241.466  ns/op
EventBenchmark.serialization               CBOR         _2_K  avgt    5     17090.820 ±     321.533  ns/op
EventBenchmark.serialization               CBOR         _4_K  avgt    5     33431.636 ±     552.100  ns/op
EventBenchmark.serialization               CBOR         _8_K  avgt    5     71373.302 ±    1112.457  ns/op
EventBenchmark.serialization               CBOR        _64_K  avgt    5    701262.330 ±    6687.170  ns/op
EventBenchmark.serialization              SMILE         _1_K  avgt    5     11415.611 ±      72.040  ns/op
EventBenchmark.serialization              SMILE         _2_K  avgt    5     22290.360 ±     815.796  ns/op
EventBenchmark.serialization              SMILE         _4_K  avgt    5     42950.047 ±     261.357  ns/op
EventBenchmark.serialization              SMILE         _8_K  avgt    5     91984.639 ±     541.284  ns/op
EventBenchmark.serialization              SMILE        _64_K  avgt    5    824901.010 ±    3344.440  ns/op
EventBenchmark.serialization           SCALA_PB         _1_K  avgt    5      2496.476 ±      39.703  ns/op
EventBenchmark.serialization           SCALA_PB         _2_K  avgt    5      5100.255 ±      50.214  ns/op
EventBenchmark.serialization           SCALA_PB         _4_K  avgt    5      9799.927 ±     237.174  ns/op
EventBenchmark.serialization           SCALA_PB         _8_K  avgt    5     20256.049 ±     349.639  ns/op
EventBenchmark.serialization           SCALA_PB        _64_K  avgt    5    201604.283 ±     880.719  ns/op
EventBenchmark.serialization            JAVA_PB         _1_K  avgt    5      3273.468 ±      17.169  ns/op
EventBenchmark.serialization            JAVA_PB         _2_K  avgt    5      6857.114 ±      41.418  ns/op
EventBenchmark.serialization            JAVA_PB         _4_K  avgt    5     13403.539 ±     197.627  ns/op
EventBenchmark.serialization            JAVA_PB         _8_K  avgt    5     26175.343 ±     339.560  ns/op
EventBenchmark.serialization            JAVA_PB        _64_K  avgt    5    261599.222 ±    1358.602  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _1_K  avgt    5      5536.492 ±      15.448  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _2_K  avgt    5      9749.300 ±      68.126  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _4_K  avgt    5     20088.477 ±     241.391  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _8_K  avgt    5     43366.602 ±     232.029  ns/op
EventBenchmark.serialization        JAVA_THRIFT        _64_K  avgt    5    427568.533 ±    9504.325  ns/op
EventBenchmark.serialization       SERIALIZABLE         _1_K  avgt    5     26177.197 ±     551.504  ns/op
EventBenchmark.serialization       SERIALIZABLE         _2_K  avgt    5     47490.350 ±     873.912  ns/op
EventBenchmark.serialization       SERIALIZABLE         _4_K  avgt    5    106301.840 ±     593.234  ns/op
EventBenchmark.serialization       SERIALIZABLE         _8_K  avgt    5    243168.199 ±    9795.780  ns/op
EventBenchmark.serialization       SERIALIZABLE        _64_K  avgt    5   2274112.059 ±   92458.241  ns/op
EventBenchmark.serialization          BOOPICKLE         _1_K  avgt    5      4109.104 ±     204.870  ns/op
EventBenchmark.serialization          BOOPICKLE         _2_K  avgt    5      7323.265 ±      76.049  ns/op
EventBenchmark.serialization          BOOPICKLE         _4_K  avgt    5     13349.668 ±     395.702  ns/op
EventBenchmark.serialization          BOOPICKLE         _8_K  avgt    5     25282.567 ±      85.953  ns/op
EventBenchmark.serialization          BOOPICKLE        _64_K  avgt    5    237759.381 ±    1880.388  ns/op
EventBenchmark.serialization              CHILL         _1_K  avgt    5     35311.924 ±    2978.921  ns/op
EventBenchmark.serialization              CHILL         _2_K  avgt    5     64207.739 ±    4329.212  ns/op
EventBenchmark.serialization              CHILL         _4_K  avgt    5    130572.400 ±   12201.044  ns/op
EventBenchmark.serialization              CHILL         _8_K  avgt    5    306588.287 ±   57677.965  ns/op
EventBenchmark.serialization              CHILL        _64_K  avgt    5   2626483.913 ±  514392.417  ns/op
EventBenchmark.serialization           JSONITER         _1_K  avgt    5      2635.671 ±     108.562  ns/op
EventBenchmark.serialization           JSONITER         _2_K  avgt    5      5438.522 ±      43.322  ns/op
EventBenchmark.serialization           JSONITER         _4_K  avgt    5      9006.581 ±      71.784  ns/op
EventBenchmark.serialization           JSONITER         _8_K  avgt    5     17691.513 ±     132.697  ns/op
EventBenchmark.serialization           JSONITER        _64_K  avgt    5    198052.069 ±     511.740  ns/op
EventBenchmark.serialization              CIRCE         _1_K  avgt    5     36194.923 ±     191.817  ns/op
EventBenchmark.serialization              CIRCE         _2_K  avgt    5     64395.127 ±    2879.743  ns/op
EventBenchmark.serialization              CIRCE         _4_K  avgt    5    128658.925 ±    1279.612  ns/op
EventBenchmark.serialization              CIRCE         _8_K  avgt    5    297335.457 ±    2513.606  ns/op
EventBenchmark.serialization              CIRCE        _64_K  avgt    5   3084244.070 ±   32171.770  ns/op
SiteBenchmark.both                         JSON         _1_K  avgt    5     17031.238 ±     387.561  ns/op
SiteBenchmark.both                         JSON         _2_K  avgt    5     31436.798 ±     254.699  ns/op
SiteBenchmark.both                         JSON         _4_K  avgt    5     56822.312 ±     209.470  ns/op
SiteBenchmark.both                         JSON         _8_K  avgt    5    115801.425 ±     725.892  ns/op
SiteBenchmark.both                         JSON        _64_K  avgt    5    825403.097 ±    1612.733  ns/op
SiteBenchmark.both                         CBOR         _1_K  avgt    5     12882.014 ±     137.983  ns/op
SiteBenchmark.both                         CBOR         _2_K  avgt    5     22180.515 ±     100.404  ns/op
SiteBenchmark.both                         CBOR         _4_K  avgt    5     43291.677 ±     266.089  ns/op
SiteBenchmark.both                         CBOR         _8_K  avgt    5     85195.995 ±    1349.128  ns/op
SiteBenchmark.both                         CBOR        _64_K  avgt    5    677879.247 ±    3023.020  ns/op
SiteBenchmark.both                        SMILE         _1_K  avgt    5     14668.081 ±     271.529  ns/op
SiteBenchmark.both                        SMILE         _2_K  avgt    5     24401.664 ±      74.287  ns/op
SiteBenchmark.both                        SMILE         _4_K  avgt    5     43314.370 ±     100.021  ns/op
SiteBenchmark.both                        SMILE         _8_K  avgt    5     82907.657 ±     854.751  ns/op
SiteBenchmark.both                        SMILE        _64_K  avgt    5    582970.970 ±    2169.066  ns/op
SiteBenchmark.both                     SCALA_PB         _1_K  avgt    5      5206.354 ±     149.327  ns/op
SiteBenchmark.both                     SCALA_PB         _2_K  avgt    5     10084.852 ±      51.395  ns/op
SiteBenchmark.both                     SCALA_PB         _4_K  avgt    5     19143.504 ±     228.618  ns/op
SiteBenchmark.both                     SCALA_PB         _8_K  avgt    5     34877.673 ±     421.377  ns/op
SiteBenchmark.both                     SCALA_PB        _64_K  avgt    5    279339.638 ±    4688.175  ns/op
SiteBenchmark.both                      JAVA_PB         _1_K  avgt    5      7993.985 ±      27.375  ns/op
SiteBenchmark.both                      JAVA_PB         _2_K  avgt    5     13854.302 ±     148.706  ns/op
SiteBenchmark.both                      JAVA_PB         _4_K  avgt    5     24160.012 ±     109.899  ns/op
SiteBenchmark.both                      JAVA_PB         _8_K  avgt    5     47120.343 ±    1343.653  ns/op
SiteBenchmark.both                      JAVA_PB        _64_K  avgt    5    401271.141 ±    7660.958  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _1_K  avgt    5      8334.733 ±      19.817  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _2_K  avgt    5     14978.178 ±     243.842  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _4_K  avgt    5     29324.313 ±     106.195  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _8_K  avgt    5     48556.947 ±     529.191  ns/op
SiteBenchmark.both                  JAVA_THRIFT        _64_K  avgt    5    435382.094 ±    4571.007  ns/op
SiteBenchmark.both                 SERIALIZABLE         _1_K  avgt    5    130777.391 ±    1236.028  ns/op
SiteBenchmark.both                 SERIALIZABLE         _2_K  avgt    5    178889.714 ±    4619.300  ns/op
SiteBenchmark.both                 SERIALIZABLE         _4_K  avgt    5    233685.192 ±    1542.940  ns/op
SiteBenchmark.both                 SERIALIZABLE         _8_K  avgt    5    350438.119 ±    3622.081  ns/op
SiteBenchmark.both                 SERIALIZABLE        _64_K  avgt    5   1989838.657 ±   22508.145  ns/op
SiteBenchmark.both                    BOOPICKLE         _1_K  avgt    5      4567.096 ±      84.052  ns/op
SiteBenchmark.both                    BOOPICKLE         _2_K  avgt    5      8464.471 ±      76.836  ns/op
SiteBenchmark.both                    BOOPICKLE         _4_K  avgt    5     14976.496 ±     534.600  ns/op
SiteBenchmark.both                    BOOPICKLE         _8_K  avgt    5     27903.344 ±     201.246  ns/op
SiteBenchmark.both                    BOOPICKLE        _64_K  avgt    5    249228.119 ±    6645.845  ns/op
SiteBenchmark.both                        CHILL         _1_K  avgt    5     12010.058 ±     914.860  ns/op
SiteBenchmark.both                        CHILL         _2_K  avgt    5     20305.128 ±     230.045  ns/op
SiteBenchmark.both                        CHILL         _4_K  avgt    5     33513.162 ±     575.195  ns/op
SiteBenchmark.both                        CHILL         _8_K  avgt    5     66425.895 ±      40.162  ns/op
SiteBenchmark.both                        CHILL        _64_K  avgt    5   1415901.955 ±   26295.645  ns/op
SiteBenchmark.both                     JSONITER         _1_K  avgt    5      6498.411 ±      21.779  ns/op
SiteBenchmark.both                     JSONITER         _2_K  avgt    5     13254.857 ±     184.432  ns/op
SiteBenchmark.both                     JSONITER         _4_K  avgt    5     24063.242 ±      85.417  ns/op
SiteBenchmark.both                     JSONITER         _8_K  avgt    5     43643.047 ±     128.290  ns/op
SiteBenchmark.both                     JSONITER        _64_K  avgt    5    382794.243 ±    1668.372  ns/op
SiteBenchmark.both                        CIRCE         _1_K  avgt    5     44182.316 ±     466.773  ns/op
SiteBenchmark.both                        CIRCE         _2_K  avgt    5     83094.999 ±    1233.585  ns/op
SiteBenchmark.both                        CIRCE         _4_K  avgt    5    180112.019 ±    2793.085  ns/op
SiteBenchmark.both                        CIRCE         _8_K  avgt    5    401214.796 ±    2390.080  ns/op
SiteBenchmark.both                        CIRCE        _64_K  avgt    5   3272231.940 ±  173542.296  ns/op
SiteBenchmark.deserialization              JSON         _1_K  avgt    5      9296.568 ±      86.071  ns/op
SiteBenchmark.deserialization              JSON         _2_K  avgt    5     16894.086 ±     115.203  ns/op
SiteBenchmark.deserialization              JSON         _4_K  avgt    5     33287.266 ±     644.934  ns/op
SiteBenchmark.deserialization              JSON         _8_K  avgt    5     69996.166 ±     520.307  ns/op
SiteBenchmark.deserialization              JSON        _64_K  avgt    5    541407.240 ±    5995.127  ns/op
SiteBenchmark.deserialization              CBOR         _1_K  avgt    5      8039.183 ±      52.062  ns/op
SiteBenchmark.deserialization              CBOR         _2_K  avgt    5     14038.187 ±     109.342  ns/op
SiteBenchmark.deserialization              CBOR         _4_K  avgt    5     25618.860 ±     276.810  ns/op
SiteBenchmark.deserialization              CBOR         _8_K  avgt    5     53988.189 ±     731.791  ns/op
SiteBenchmark.deserialization              CBOR        _64_K  avgt    5    441922.878 ±    5511.971  ns/op
SiteBenchmark.deserialization             SMILE         _1_K  avgt    5      8566.891 ±     146.454  ns/op
SiteBenchmark.deserialization             SMILE         _2_K  avgt    5     14263.819 ±     166.740  ns/op
SiteBenchmark.deserialization             SMILE         _4_K  avgt    5     25337.469 ±     598.952  ns/op
SiteBenchmark.deserialization             SMILE         _8_K  avgt    5     49951.321 ±      70.808  ns/op
SiteBenchmark.deserialization             SMILE        _64_K  avgt    5    342328.521 ±    6427.593  ns/op
SiteBenchmark.deserialization          SCALA_PB         _1_K  avgt    5      2922.916 ±      21.994  ns/op
SiteBenchmark.deserialization          SCALA_PB         _2_K  avgt    5      5523.130 ±     103.773  ns/op
SiteBenchmark.deserialization          SCALA_PB         _4_K  avgt    5      9919.852 ±      73.784  ns/op
SiteBenchmark.deserialization          SCALA_PB         _8_K  avgt    5     18702.918 ±     353.145  ns/op
SiteBenchmark.deserialization          SCALA_PB        _64_K  avgt    5    152215.771 ±    2378.743  ns/op
SiteBenchmark.deserialization           JAVA_PB         _1_K  avgt    5      4587.876 ±      81.804  ns/op
SiteBenchmark.deserialization           JAVA_PB         _2_K  avgt    5      8346.926 ±     136.505  ns/op
SiteBenchmark.deserialization           JAVA_PB         _4_K  avgt    5     14218.305 ±     195.398  ns/op
SiteBenchmark.deserialization           JAVA_PB         _8_K  avgt    5     27747.248 ±     492.085  ns/op
SiteBenchmark.deserialization           JAVA_PB        _64_K  avgt    5    229888.037 ±    5381.554  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _1_K  avgt    5      4293.237 ±      56.253  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _2_K  avgt    5      7231.881 ±     202.323  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _4_K  avgt    5     14246.192 ±     109.402  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _8_K  avgt    5     25486.994 ±     756.782  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT        _64_K  avgt    5    215011.414 ±    6029.950  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _1_K  avgt    5    102297.932 ±     445.338  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _2_K  avgt    5    134899.602 ±    2214.013  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _4_K  avgt    5    160153.899 ±     720.310  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _8_K  avgt    5    208013.111 ±    1515.229  ns/op
SiteBenchmark.deserialization      SERIALIZABLE        _64_K  avgt    5    877673.654 ±    9879.374  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _1_K  avgt    5      2066.413 ±      62.544  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _2_K  avgt    5      3922.189 ±      46.095  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _4_K  avgt    5      7088.465 ±       9.528  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _8_K  avgt    5     13456.575 ±      77.354  ns/op
SiteBenchmark.deserialization         BOOPICKLE        _64_K  avgt    5    121346.440 ±    1316.341  ns/op
SiteBenchmark.deserialization             CHILL         _1_K  avgt    5      5850.125 ±      91.361  ns/op
SiteBenchmark.deserialization             CHILL         _2_K  avgt    5      9968.810 ±      31.902  ns/op
SiteBenchmark.deserialization             CHILL         _4_K  avgt    5     17346.484 ±      66.465  ns/op
SiteBenchmark.deserialization             CHILL         _8_K  avgt    5     32158.808 ±     457.848  ns/op
SiteBenchmark.deserialization             CHILL        _64_K  avgt    5    262620.703 ±    1098.025  ns/op
SiteBenchmark.deserialization          JSONITER         _1_K  avgt    5      3924.961 ±      54.148  ns/op
SiteBenchmark.deserialization          JSONITER         _2_K  avgt    5      8288.703 ±      38.709  ns/op
SiteBenchmark.deserialization          JSONITER         _4_K  avgt    5     15770.617 ±     100.150  ns/op
SiteBenchmark.deserialization          JSONITER         _8_K  avgt    5     30111.376 ±      65.156  ns/op
SiteBenchmark.deserialization          JSONITER        _64_K  avgt    5    251598.970 ±   17216.251  ns/op
SiteBenchmark.deserialization             CIRCE         _1_K  avgt    5     23488.374 ±     540.844  ns/op
SiteBenchmark.deserialization             CIRCE         _2_K  avgt    5     41617.449 ±    3333.401  ns/op
SiteBenchmark.deserialization             CIRCE         _4_K  avgt    5     93721.636 ±     328.324  ns/op
SiteBenchmark.deserialization             CIRCE         _8_K  avgt    5    219430.481 ±    1068.000  ns/op
SiteBenchmark.deserialization             CIRCE        _64_K  avgt    5   1684724.534 ±   17105.449  ns/op
SiteBenchmark.serialization                JSON         _1_K  avgt    5      6062.192 ±     101.721  ns/op
SiteBenchmark.serialization                JSON         _2_K  avgt    5     12986.404 ±      45.996  ns/op
SiteBenchmark.serialization                JSON         _4_K  avgt    5     22269.106 ±     104.160  ns/op
SiteBenchmark.serialization                JSON         _8_K  avgt    5     42836.901 ±     269.062  ns/op
SiteBenchmark.serialization                JSON        _64_K  avgt    5    313244.981 ±    1566.661  ns/op
SiteBenchmark.serialization                CBOR         _1_K  avgt    5      3775.769 ±      10.874  ns/op
SiteBenchmark.serialization                CBOR         _2_K  avgt    5      7110.859 ±     107.069  ns/op
SiteBenchmark.serialization                CBOR         _4_K  avgt    5     14706.861 ±      22.037  ns/op
SiteBenchmark.serialization                CBOR         _8_K  avgt    5     27249.880 ±     351.955  ns/op
SiteBenchmark.serialization                CBOR        _64_K  avgt    5    237341.027 ±    2368.478  ns/op
SiteBenchmark.serialization               SMILE         _1_K  avgt    5      4750.855 ±       3.041  ns/op
SiteBenchmark.serialization               SMILE         _2_K  avgt    5      8259.128 ±     102.106  ns/op
SiteBenchmark.serialization               SMILE         _4_K  avgt    5     15865.652 ±      53.630  ns/op
SiteBenchmark.serialization               SMILE         _8_K  avgt    5     29346.282 ±     606.190  ns/op
SiteBenchmark.serialization               SMILE        _64_K  avgt    5    219444.351 ±    2856.007  ns/op
SiteBenchmark.serialization            SCALA_PB         _1_K  avgt    5      1905.489 ±      25.312  ns/op
SiteBenchmark.serialization            SCALA_PB         _2_K  avgt    5      4302.213 ±      35.081  ns/op
SiteBenchmark.serialization            SCALA_PB         _4_K  avgt    5      8579.321 ±      32.840  ns/op
SiteBenchmark.serialization            SCALA_PB         _8_K  avgt    5     16826.221 ±      92.288  ns/op
SiteBenchmark.serialization            SCALA_PB        _64_K  avgt    5    132028.967 ±    1521.746  ns/op
SiteBenchmark.serialization             JAVA_PB         _1_K  avgt    5      3281.381 ±      18.068  ns/op
SiteBenchmark.serialization             JAVA_PB         _2_K  avgt    5      5432.231 ±      23.453  ns/op
SiteBenchmark.serialization             JAVA_PB         _4_K  avgt    5      9438.685 ±      60.146  ns/op
SiteBenchmark.serialization             JAVA_PB         _8_K  avgt    5     19564.456 ±     115.379  ns/op
SiteBenchmark.serialization             JAVA_PB        _64_K  avgt    5    174127.811 ±    5100.909  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _1_K  avgt    5      3007.580 ±      29.994  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _2_K  avgt    5      5772.554 ±      36.410  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _4_K  avgt    5     15063.063 ±     428.103  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _8_K  avgt    5     27363.861 ±      87.484  ns/op
SiteBenchmark.serialization         JAVA_THRIFT        _64_K  avgt    5    206022.943 ±    2914.018  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _1_K  avgt    5     27802.785 ±     710.102  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _2_K  avgt    5     41089.792 ±     710.384  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _4_K  avgt    5     61478.281 ±     713.173  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _8_K  avgt    5    122705.676 ±     656.144  ns/op
SiteBenchmark.serialization        SERIALIZABLE        _64_K  avgt    5    999490.020 ±   16378.535  ns/op
SiteBenchmark.serialization           BOOPICKLE         _1_K  avgt    5      2266.998 ±      11.596  ns/op
SiteBenchmark.serialization           BOOPICKLE         _2_K  avgt    5      3920.603 ±     101.738  ns/op
SiteBenchmark.serialization           BOOPICKLE         _4_K  avgt    5      6808.366 ±      44.607  ns/op
SiteBenchmark.serialization           BOOPICKLE         _8_K  avgt    5     11959.724 ±      46.860  ns/op
SiteBenchmark.serialization           BOOPICKLE        _64_K  avgt    5    119571.941 ±     494.865  ns/op
SiteBenchmark.serialization               CHILL         _1_K  avgt    5      6378.982 ±      57.676  ns/op
SiteBenchmark.serialization               CHILL         _2_K  avgt    5     10019.293 ±     135.022  ns/op
SiteBenchmark.serialization               CHILL         _4_K  avgt    5     17010.738 ±      51.268  ns/op
SiteBenchmark.serialization               CHILL         _8_K  avgt    5     36366.053 ±     657.437  ns/op
SiteBenchmark.serialization               CHILL        _64_K  avgt    5    508774.996 ±   11470.272  ns/op
SiteBenchmark.serialization            JSONITER         _1_K  avgt    5      2292.656 ±      43.563  ns/op
SiteBenchmark.serialization            JSONITER         _2_K  avgt    5      4141.455 ±      59.555  ns/op
SiteBenchmark.serialization            JSONITER         _4_K  avgt    5      7482.369 ±     264.283  ns/op
SiteBenchmark.serialization            JSONITER         _8_K  avgt    5     13189.794 ±      46.692  ns/op
SiteBenchmark.serialization            JSONITER        _64_K  avgt    5    133689.195 ±    3362.131  ns/op
SiteBenchmark.serialization               CIRCE         _1_K  avgt    5     18491.564 ±     257.096  ns/op
SiteBenchmark.serialization               CIRCE         _2_K  avgt    5     35260.598 ±     618.408  ns/op
SiteBenchmark.serialization               CIRCE         _4_K  avgt    5     78011.114 ±     624.424  ns/op
SiteBenchmark.serialization               CIRCE         _8_K  avgt    5    180285.562 ±     964.470  ns/op
SiteBenchmark.serialization               CIRCE        _64_K  avgt    5   1504756.097 ±   19678.494  ns/op

Benchmark result is saved to /static/data/charts/scala-serialization-2022/jdk11.json
