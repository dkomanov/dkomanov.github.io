# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 37.663 ns/op
# Warmup Iteration   2: 36.939 ns/op
# Warmup Iteration   3: 34.766 ns/op
# Warmup Iteration   4: 33.878 ns/op
# Warmup Iteration   5: 33.753 ns/op
Iteration   1: 33.869 ns/op
Iteration   2: 33.428 ns/op
Iteration   3: 34.176 ns/op
Iteration   4: 33.653 ns/op
Iteration   5: 33.570 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  33.739 ±(99.9%) 1.123 ns/op [Average]
  (min, avg, max) = (33.428, 33.739, 34.176), stdev = 0.292
  CI (99.9%): [32.616, 34.862] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.51% complete, ETA 00:34:47
# Fork: 1 of 1
# Warmup Iteration   1: 59.175 ns/op
# Warmup Iteration   2: 54.972 ns/op
# Warmup Iteration   3: 52.120 ns/op
# Warmup Iteration   4: 51.428 ns/op
# Warmup Iteration   5: 51.984 ns/op
Iteration   1: 52.021 ns/op
Iteration   2: 52.463 ns/op
Iteration   3: 52.394 ns/op
Iteration   4: 51.324 ns/op
Iteration   5: 51.857 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  52.012 ±(99.9%) 1.773 ns/op [Average]
  (min, avg, max) = (51.324, 52.012, 52.463), stdev = 0.460
  CI (99.9%): [50.239, 53.784] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 1.02% complete, ETA 00:34:30
# Fork: 1 of 1
# Warmup Iteration   1: 140.211 ns/op
# Warmup Iteration   2: 130.465 ns/op
# Warmup Iteration   3: 125.364 ns/op
# Warmup Iteration   4: 123.268 ns/op
# Warmup Iteration   5: 124.650 ns/op
Iteration   1: 123.325 ns/op
Iteration   2: 122.443 ns/op
Iteration   3: 127.746 ns/op
Iteration   4: 124.424 ns/op
Iteration   5: 125.293 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  124.646 ±(99.9%) 7.863 ns/op [Average]
  (min, avg, max) = (122.443, 124.646, 127.746), stdev = 2.042
  CI (99.9%): [116.783, 132.509] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 1.53% complete, ETA 00:34:13
# Fork: 1 of 1
# Warmup Iteration   1: 275.070 ns/op
# Warmup Iteration   2: 259.759 ns/op
# Warmup Iteration   3: 251.145 ns/op
# Warmup Iteration   4: 245.923 ns/op
# Warmup Iteration   5: 248.939 ns/op
Iteration   1: 249.371 ns/op
Iteration   2: 247.950 ns/op
Iteration   3: 266.611 ns/op
Iteration   4: 258.501 ns/op
Iteration   5: 273.224 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  259.131 ±(99.9%) 41.972 ns/op [Average]
  (min, avg, max) = (247.950, 259.131, 273.224), stdev = 10.900
  CI (99.9%): [217.159, 301.103] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 2.04% complete, ETA 00:34:00
# Fork: 1 of 1
# Warmup Iteration   1: 1281.849 ns/op
# Warmup Iteration   2: 1237.356 ns/op
# Warmup Iteration   3: 999.973 ns/op
# Warmup Iteration   4: 992.040 ns/op
# Warmup Iteration   5: 960.932 ns/op
Iteration   1: 972.101 ns/op
Iteration   2: 966.731 ns/op
Iteration   3: 961.767 ns/op
Iteration   4: 984.762 ns/op
Iteration   5: 960.553 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  969.183 ±(99.9%) 37.861 ns/op [Average]
  (min, avg, max) = (960.553, 969.183, 984.762), stdev = 9.832
  CI (99.9%): [931.321, 1007.044] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 2.55% complete, ETA 00:33:51
# Fork: 1 of 1
# Warmup Iteration   1: 2098.163 ns/op
# Warmup Iteration   2: 1979.997 ns/op
# Warmup Iteration   3: 1849.886 ns/op
# Warmup Iteration   4: 1793.323 ns/op
# Warmup Iteration   5: 1880.169 ns/op
Iteration   1: 1783.804 ns/op
Iteration   2: 1810.132 ns/op
Iteration   3: 1797.346 ns/op
Iteration   4: 1781.209 ns/op
Iteration   5: 1833.585 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1801.215 ±(99.9%) 82.714 ns/op [Average]
  (min, avg, max) = (1781.209, 1801.215, 1833.585), stdev = 21.481
  CI (99.9%): [1718.500, 1883.929] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 3.06% complete, ETA 00:33:41
# Fork: 1 of 1
# Warmup Iteration   1: 22441.943 ns/op
# Warmup Iteration   2: 20319.332 ns/op
# Warmup Iteration   3: 20328.102 ns/op
# Warmup Iteration   4: 19474.761 ns/op
# Warmup Iteration   5: 19010.137 ns/op
Iteration   1: 19328.028 ns/op
Iteration   2: 19762.037 ns/op
Iteration   3: 19431.974 ns/op
Iteration   4: 19789.706 ns/op
Iteration   5: 19205.475 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  19503.444 ±(99.9%) 1006.854 ns/op [Average]
  (min, avg, max) = (19205.475, 19503.444, 19789.706), stdev = 261.477
  CI (99.9%): [18496.591, 20510.298] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1)

# Run progress: 3.57% complete, ETA 00:33:29
# Fork: 1 of 1
# Warmup Iteration   1: 38.137 ns/op
# Warmup Iteration   2: 34.905 ns/op
# Warmup Iteration   3: 35.177 ns/op
# Warmup Iteration   4: 33.805 ns/op
# Warmup Iteration   5: 35.128 ns/op
Iteration   1: 34.007 ns/op
Iteration   2: 34.334 ns/op
Iteration   3: 34.622 ns/op
Iteration   4: 36.078 ns/op
Iteration   5: 33.961 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  34.600 ±(99.9%) 3.343 ns/op [Average]
  (min, avg, max) = (33.961, 34.600, 36.078), stdev = 0.868
  CI (99.9%): [31.257, 37.943] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10)

# Run progress: 4.08% complete, ETA 00:33:15
# Fork: 1 of 1
# Warmup Iteration   1: 58.775 ns/op
# Warmup Iteration   2: 55.690 ns/op
# Warmup Iteration   3: 53.308 ns/op
# Warmup Iteration   4: 52.950 ns/op
# Warmup Iteration   5: 51.346 ns/op
Iteration   1: 52.220 ns/op
Iteration   2: 51.814 ns/op
Iteration   3: 51.326 ns/op
Iteration   4: 51.253 ns/op
Iteration   5: 51.145 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  51.552 ±(99.9%) 1.744 ns/op [Average]
  (min, avg, max) = (51.145, 51.552, 52.220), stdev = 0.453
  CI (99.9%): [49.807, 53.296] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 50)

# Run progress: 4.59% complete, ETA 00:33:02
# Fork: 1 of 1
# Warmup Iteration   1: 140.287 ns/op
# Warmup Iteration   2: 131.584 ns/op
# Warmup Iteration   3: 130.280 ns/op
# Warmup Iteration   4: 124.035 ns/op
# Warmup Iteration   5: 126.321 ns/op
Iteration   1: 127.610 ns/op
Iteration   2: 126.779 ns/op
Iteration   3: 123.631 ns/op
Iteration   4: 121.274 ns/op
Iteration   5: 122.709 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  124.400 ±(99.9%) 10.402 ns/op [Average]
  (min, avg, max) = (121.274, 124.400, 127.610), stdev = 2.701
  CI (99.9%): [113.999, 134.802] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 100)

# Run progress: 5.10% complete, ETA 00:32:48
# Fork: 1 of 1
# Warmup Iteration   1: 284.051 ns/op
# Warmup Iteration   2: 259.069 ns/op
# Warmup Iteration   3: 258.701 ns/op
# Warmup Iteration   4: 251.691 ns/op
# Warmup Iteration   5: 249.470 ns/op
Iteration   1: 248.071 ns/op
Iteration   2: 246.973 ns/op
Iteration   3: 242.859 ns/op
Iteration   4: 245.926 ns/op
Iteration   5: 252.954 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  247.357 ±(99.9%) 14.182 ns/op [Average]
  (min, avg, max) = (242.859, 247.357, 252.954), stdev = 3.683
  CI (99.9%): [233.175, 261.538] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 500)

# Run progress: 5.61% complete, ETA 00:32:36
# Fork: 1 of 1
# Warmup Iteration   1: 1091.705 ns/op
# Warmup Iteration   2: 988.150 ns/op
# Warmup Iteration   3: 946.256 ns/op
# Warmup Iteration   4: 960.795 ns/op
# Warmup Iteration   5: 926.615 ns/op
Iteration   1: 927.928 ns/op
Iteration   2: 931.199 ns/op
Iteration   3: 942.949 ns/op
Iteration   4: 926.995 ns/op
Iteration   5: 939.580 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  933.730 ±(99.9%) 27.542 ns/op [Average]
  (min, avg, max) = (926.995, 933.730, 942.949), stdev = 7.153
  CI (99.9%): [906.188, 961.272] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1000)

# Run progress: 6.12% complete, ETA 00:32:24
# Fork: 1 of 1
# Warmup Iteration   1: 2078.257 ns/op
# Warmup Iteration   2: 1863.098 ns/op
# Warmup Iteration   3: 1828.532 ns/op
# Warmup Iteration   4: 1788.671 ns/op
# Warmup Iteration   5: 1784.654 ns/op
Iteration   1: 1836.204 ns/op
Iteration   2: 1901.263 ns/op
Iteration   3: 1817.855 ns/op
Iteration   4: 1780.996 ns/op
Iteration   5: 1827.111 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1832.686 ±(99.9%) 168.266 ns/op [Average]
  (min, avg, max) = (1780.996, 1832.686, 1901.263), stdev = 43.698
  CI (99.9%): [1664.420, 2000.951] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10000)

# Run progress: 6.63% complete, ETA 00:32:13
# Fork: 1 of 1
# Warmup Iteration   1: 23997.977 ns/op
# Warmup Iteration   2: 19627.315 ns/op
# Warmup Iteration   3: 19987.193 ns/op
# Warmup Iteration   4: 19224.767 ns/op
# Warmup Iteration   5: 19338.915 ns/op
Iteration   1: 19540.805 ns/op
Iteration   2: 19005.967 ns/op
Iteration   3: 19709.818 ns/op
Iteration   4: 19186.599 ns/op
Iteration   5: 19374.973 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  19363.632 ±(99.9%) 1073.060 ns/op [Average]
  (min, avg, max) = (19005.967, 19363.632, 19709.818), stdev = 278.670
  CI (99.9%): [18290.572, 20436.692] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 7.14% complete, ETA 00:32:01
# Fork: 1 of 1
# Warmup Iteration   1: 25.368 ns/op
# Warmup Iteration   2: 23.262 ns/op
# Warmup Iteration   3: 23.023 ns/op
# Warmup Iteration   4: 22.843 ns/op
# Warmup Iteration   5: 23.171 ns/op
Iteration   1: 23.858 ns/op
Iteration   2: 23.054 ns/op
Iteration   3: 23.278 ns/op
Iteration   4: 22.945 ns/op
Iteration   5: 22.305 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  23.088 ±(99.9%) 2.165 ns/op [Average]
  (min, avg, max) = (22.305, 23.088, 23.858), stdev = 0.562
  CI (99.9%): [20.923, 25.253] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 7.65% complete, ETA 00:31:51
# Fork: 1 of 1
# Warmup Iteration   1: 59.537 ns/op
# Warmup Iteration   2: 53.570 ns/op
# Warmup Iteration   3: 49.606 ns/op
# Warmup Iteration   4: 48.724 ns/op
# Warmup Iteration   5: 49.329 ns/op
Iteration   1: 48.414 ns/op
Iteration   2: 48.121 ns/op
Iteration   3: 48.544 ns/op
Iteration   4: 48.549 ns/op
Iteration   5: 49.787 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  48.683 ±(99.9%) 2.469 ns/op [Average]
  (min, avg, max) = (48.121, 48.683, 49.787), stdev = 0.641
  CI (99.9%): [46.214, 51.152] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 8.16% complete, ETA 00:31:40
# Fork: 1 of 1
# Warmup Iteration   1: 136.033 ns/op
# Warmup Iteration   2: 128.408 ns/op
# Warmup Iteration   3: 121.800 ns/op
# Warmup Iteration   4: 121.326 ns/op
# Warmup Iteration   5: 121.413 ns/op
Iteration   1: 119.636 ns/op
Iteration   2: 122.332 ns/op
Iteration   3: 120.669 ns/op
Iteration   4: 121.172 ns/op
Iteration   5: 120.962 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  120.954 ±(99.9%) 3.737 ns/op [Average]
  (min, avg, max) = (119.636, 120.954, 122.332), stdev = 0.970
  CI (99.9%): [117.218, 124.691] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 8.67% complete, ETA 00:31:30
# Fork: 1 of 1
# Warmup Iteration   1: 187.541 ns/op
# Warmup Iteration   2: 170.542 ns/op
# Warmup Iteration   3: 161.440 ns/op
# Warmup Iteration   4: 160.489 ns/op
# Warmup Iteration   5: 161.843 ns/op
Iteration   1: 161.254 ns/op
Iteration   2: 161.350 ns/op
Iteration   3: 160.929 ns/op
Iteration   4: 163.567 ns/op
Iteration   5: 165.676 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  162.555 ±(99.9%) 7.834 ns/op [Average]
  (min, avg, max) = (160.929, 162.555, 165.676), stdev = 2.034
  CI (99.9%): [154.722, 170.389] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 9.18% complete, ETA 00:31:20
# Fork: 1 of 1
# Warmup Iteration   1: 610.965 ns/op
# Warmup Iteration   2: 545.908 ns/op
# Warmup Iteration   3: 503.319 ns/op
# Warmup Iteration   4: 497.267 ns/op
# Warmup Iteration   5: 501.044 ns/op
Iteration   1: 495.352 ns/op
Iteration   2: 503.726 ns/op
Iteration   3: 497.609 ns/op
Iteration   4: 498.556 ns/op
Iteration   5: 507.709 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  500.590 ±(99.9%) 19.348 ns/op [Average]
  (min, avg, max) = (495.352, 500.590, 507.709), stdev = 5.024
  CI (99.9%): [481.243, 519.938] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 9.69% complete, ETA 00:31:10
# Fork: 1 of 1
# Warmup Iteration   1: 1125.308 ns/op
# Warmup Iteration   2: 966.099 ns/op
# Warmup Iteration   3: 928.898 ns/op
# Warmup Iteration   4: 927.375 ns/op
# Warmup Iteration   5: 981.964 ns/op
Iteration   1: 925.241 ns/op
Iteration   2: 927.176 ns/op
Iteration   3: 926.084 ns/op
Iteration   4: 914.154 ns/op
Iteration   5: 943.868 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  927.305 ±(99.9%) 40.980 ns/op [Average]
  (min, avg, max) = (914.154, 927.305, 943.868), stdev = 10.642
  CI (99.9%): [886.324, 968.285] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 10.20% complete, ETA 00:31:00
# Fork: 1 of 1
# Warmup Iteration   1: 11291.554 ns/op
# Warmup Iteration   2: 9425.818 ns/op
# Warmup Iteration   3: 9063.734 ns/op
# Warmup Iteration   4: 9079.162 ns/op
# Warmup Iteration   5: 8839.275 ns/op
Iteration   1: 8799.239 ns/op
Iteration   2: 8849.951 ns/op
Iteration   3: 8996.421 ns/op
Iteration   4: 8927.820 ns/op
Iteration   5: 8821.574 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  8879.001 ±(99.9%) 314.451 ns/op [Average]
  (min, avg, max) = (8799.239, 8879.001, 8996.421), stdev = 81.662
  CI (99.9%): [8564.550, 9193.452] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1)

# Run progress: 10.71% complete, ETA 00:30:50
# Fork: 1 of 1
# Warmup Iteration   1: 26.945 ns/op
# Warmup Iteration   2: 23.756 ns/op
# Warmup Iteration   3: 22.127 ns/op
# Warmup Iteration   4: 22.161 ns/op
# Warmup Iteration   5: 22.222 ns/op
Iteration   1: 21.893 ns/op
Iteration   2: 22.130 ns/op
Iteration   3: 22.090 ns/op
Iteration   4: 22.038 ns/op
Iteration   5: 21.700 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  21.970 ±(99.9%) 0.677 ns/op [Average]
  (min, avg, max) = (21.700, 21.970, 22.130), stdev = 0.176
  CI (99.9%): [21.294, 22.647] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10)

# Run progress: 11.22% complete, ETA 00:30:38
# Fork: 1 of 1
# Warmup Iteration   1: 55.465 ns/op
# Warmup Iteration   2: 52.787 ns/op
# Warmup Iteration   3: 49.495 ns/op
# Warmup Iteration   4: 48.825 ns/op
# Warmup Iteration   5: 48.864 ns/op
Iteration   1: 49.299 ns/op
Iteration   2: 48.196 ns/op
Iteration   3: 49.297 ns/op
Iteration   4: 49.287 ns/op
Iteration   5: 50.311 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  49.278 ±(99.9%) 2.881 ns/op [Average]
  (min, avg, max) = (48.196, 49.278, 50.311), stdev = 0.748
  CI (99.9%): [46.397, 52.159] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 50)

# Run progress: 11.73% complete, ETA 00:30:27
# Fork: 1 of 1
# Warmup Iteration   1: 134.920 ns/op
# Warmup Iteration   2: 131.056 ns/op
# Warmup Iteration   3: 120.440 ns/op
# Warmup Iteration   4: 119.278 ns/op
# Warmup Iteration   5: 119.336 ns/op
Iteration   1: 121.373 ns/op
Iteration   2: 121.047 ns/op
Iteration   3: 120.670 ns/op
Iteration   4: 119.018 ns/op
Iteration   5: 118.080 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  120.038 ±(99.9%) 5.471 ns/op [Average]
  (min, avg, max) = (118.080, 120.038, 121.373), stdev = 1.421
  CI (99.9%): [114.567, 125.508] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 100)

# Run progress: 12.24% complete, ETA 00:30:16
# Fork: 1 of 1
# Warmup Iteration   1: 190.717 ns/op
# Warmup Iteration   2: 173.115 ns/op
# Warmup Iteration   3: 162.363 ns/op
# Warmup Iteration   4: 161.035 ns/op
# Warmup Iteration   5: 163.175 ns/op
Iteration   1: 168.550 ns/op
Iteration   2: 172.995 ns/op
Iteration   3: 163.047 ns/op
Iteration   4: 162.510 ns/op
Iteration   5: 163.189 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  166.058 ±(99.9%) 17.668 ns/op [Average]
  (min, avg, max) = (162.510, 166.058, 172.995), stdev = 4.588
  CI (99.9%): [148.390, 183.726] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 500)

# Run progress: 12.76% complete, ETA 00:30:05
# Fork: 1 of 1
# Warmup Iteration   1: 602.486 ns/op
# Warmup Iteration   2: 536.061 ns/op
# Warmup Iteration   3: 510.669 ns/op
# Warmup Iteration   4: 507.144 ns/op
# Warmup Iteration   5: 503.154 ns/op
Iteration   1: 515.432 ns/op
Iteration   2: 507.710 ns/op
Iteration   3: 505.683 ns/op
Iteration   4: 506.078 ns/op
Iteration   5: 509.971 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  508.975 ±(99.9%) 15.344 ns/op [Average]
  (min, avg, max) = (505.683, 508.975, 515.432), stdev = 3.985
  CI (99.9%): [493.631, 524.318] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1000)

# Run progress: 13.27% complete, ETA 00:29:54
# Fork: 1 of 1
# Warmup Iteration   1: 1128.834 ns/op
# Warmup Iteration   2: 955.218 ns/op
# Warmup Iteration   3: 924.128 ns/op
# Warmup Iteration   4: 919.276 ns/op
# Warmup Iteration   5: 911.211 ns/op
Iteration   1: 912.198 ns/op
Iteration   2: 918.791 ns/op
Iteration   3: 926.793 ns/op
Iteration   4: 914.836 ns/op
Iteration   5: 926.952 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  919.914 ±(99.9%) 26.077 ns/op [Average]
  (min, avg, max) = (912.198, 919.914, 926.952), stdev = 6.772
  CI (99.9%): [893.837, 945.991] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10000)

# Run progress: 13.78% complete, ETA 00:29:43
# Fork: 1 of 1
# Warmup Iteration   1: 12080.589 ns/op
# Warmup Iteration   2: 10000.403 ns/op
# Warmup Iteration   3: 8915.456 ns/op
# Warmup Iteration   4: 9012.220 ns/op
# Warmup Iteration   5: 9048.848 ns/op
Iteration   1: 8837.757 ns/op
Iteration   2: 8976.632 ns/op
Iteration   3: 8830.153 ns/op
Iteration   4: 8756.506 ns/op
Iteration   5: 8980.792 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  8876.368 ±(99.9%) 379.980 ns/op [Average]
  (min, avg, max) = (8756.506, 8876.368, 8980.792), stdev = 98.680
  CI (99.9%): [8496.388, 9256.348] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 14.29% complete, ETA 00:29:32
# Fork: 1 of 1
# Warmup Iteration   1: 1559.302 ns/op
# Warmup Iteration   2: 1575.030 ns/op
# Warmup Iteration   3: 1562.406 ns/op
# Warmup Iteration   4: 1556.333 ns/op
# Warmup Iteration   5: 1518.750 ns/op
Iteration   1: 1543.709 ns/op
Iteration   2: 1544.309 ns/op
Iteration   3: 1546.001 ns/op
Iteration   4: 1522.304 ns/op
Iteration   5: 1522.546 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1535.774 ±(99.9%) 47.036 ns/op [Average]
  (min, avg, max) = (1522.304, 1535.774, 1546.001), stdev = 12.215
  CI (99.9%): [1488.738, 1582.810] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 14.80% complete, ETA 00:29:22
# Fork: 1 of 1
# Warmup Iteration   1: 1550.866 ns/op
# Warmup Iteration   2: 1567.084 ns/op
# Warmup Iteration   3: 1541.502 ns/op
# Warmup Iteration   4: 1562.490 ns/op
# Warmup Iteration   5: 1497.986 ns/op
Iteration   1: 1510.078 ns/op
Iteration   2: 1508.092 ns/op
Iteration   3: 1530.149 ns/op
Iteration   4: 1510.263 ns/op
Iteration   5: 1487.445 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1509.205 ±(99.9%) 58.248 ns/op [Average]
  (min, avg, max) = (1487.445, 1509.205, 1530.149), stdev = 15.127
  CI (99.9%): [1450.957, 1567.454] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 15.31% complete, ETA 00:29:12
# Fork: 1 of 1
# Warmup Iteration   1: 1648.052 ns/op
# Warmup Iteration   2: 1660.724 ns/op
# Warmup Iteration   3: 1582.563 ns/op
# Warmup Iteration   4: 1599.443 ns/op
# Warmup Iteration   5: 1575.538 ns/op
Iteration   1: 1589.724 ns/op
Iteration   2: 1607.500 ns/op
Iteration   3: 1588.160 ns/op
Iteration   4: 1583.341 ns/op
Iteration   5: 1591.365 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1592.018 ±(99.9%) 35.269 ns/op [Average]
  (min, avg, max) = (1583.341, 1592.018, 1607.500), stdev = 9.159
  CI (99.9%): [1556.749, 1627.287] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 15.82% complete, ETA 00:29:01
# Fork: 1 of 1
# Warmup Iteration   1: 1823.157 ns/op
# Warmup Iteration   2: 1774.297 ns/op
# Warmup Iteration   3: 1759.901 ns/op
# Warmup Iteration   4: 1755.387 ns/op
# Warmup Iteration   5: 1770.165 ns/op
Iteration   1: 1742.717 ns/op
Iteration   2: 1738.155 ns/op
Iteration   3: 1776.919 ns/op
Iteration   4: 1719.494 ns/op
Iteration   5: 1725.047 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1740.466 ±(99.9%) 86.463 ns/op [Average]
  (min, avg, max) = (1719.494, 1740.466, 1776.919), stdev = 22.454
  CI (99.9%): [1654.003, 1826.929] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 16.33% complete, ETA 00:28:51
# Fork: 1 of 1
# Warmup Iteration   1: 2449.027 ns/op
# Warmup Iteration   2: 2353.762 ns/op
# Warmup Iteration   3: 2333.051 ns/op
# Warmup Iteration   4: 2282.345 ns/op
# Warmup Iteration   5: 2325.648 ns/op
Iteration   1: 2275.011 ns/op
Iteration   2: 2262.101 ns/op
Iteration   3: 2273.377 ns/op
Iteration   4: 2327.022 ns/op
Iteration   5: 2259.417 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  2279.386 ±(99.9%) 105.840 ns/op [Average]
  (min, avg, max) = (2259.417, 2279.386, 2327.022), stdev = 27.486
  CI (99.9%): [2173.545, 2385.226] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 16.84% complete, ETA 00:28:40
# Fork: 1 of 1
# Warmup Iteration   1: 3291.772 ns/op
# Warmup Iteration   2: 3093.944 ns/op
# Warmup Iteration   3: 3044.729 ns/op
# Warmup Iteration   4: 3060.270 ns/op
# Warmup Iteration   5: 3021.819 ns/op
Iteration   1: 3024.732 ns/op
Iteration   2: 2985.678 ns/op
Iteration   3: 2972.955 ns/op
Iteration   4: 3101.531 ns/op
Iteration   5: 3077.711 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  3032.521 ±(99.9%) 216.181 ns/op [Average]
  (min, avg, max) = (2972.955, 3032.521, 3101.531), stdev = 56.142
  CI (99.9%): [2816.340, 3248.703] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 17.35% complete, ETA 00:28:30
# Fork: 1 of 1
# Warmup Iteration   1: 16402.473 ns/op
# Warmup Iteration   2: 15189.981 ns/op
# Warmup Iteration   3: 15226.728 ns/op
# Warmup Iteration   4: 14603.638 ns/op
# Warmup Iteration   5: 14355.134 ns/op
Iteration   1: 14517.622 ns/op
Iteration   2: 14282.026 ns/op
Iteration   3: 14934.866 ns/op
Iteration   4: 14412.632 ns/op
Iteration   5: 14325.192 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  14494.468 ±(99.9%) 1009.592 ns/op [Average]
  (min, avg, max) = (14282.026, 14494.468, 14934.866), stdev = 262.188
  CI (99.9%): [13484.876, 15504.060] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 1)

# Run progress: 17.86% complete, ETA 00:28:19
# Fork: 1 of 1
# Warmup Iteration   1: 1589.848 ns/op
# Warmup Iteration   2: 1555.131 ns/op
# Warmup Iteration   3: 1556.938 ns/op
# Warmup Iteration   4: 1516.081 ns/op
# Warmup Iteration   5: 1548.228 ns/op
Iteration   1: 1535.031 ns/op
Iteration   2: 1518.488 ns/op
Iteration   3: 1498.419 ns/op
Iteration   4: 1507.865 ns/op
Iteration   5: 1521.253 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1516.211 ±(99.9%) 53.461 ns/op [Average]
  (min, avg, max) = (1498.419, 1516.211, 1535.031), stdev = 13.884
  CI (99.9%): [1462.750, 1569.672] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 10)

# Run progress: 18.37% complete, ETA 00:28:08
# Fork: 1 of 1
# Warmup Iteration   1: 1615.721 ns/op
# Warmup Iteration   2: 1551.059 ns/op
# Warmup Iteration   3: 1572.475 ns/op
# Warmup Iteration   4: 1539.364 ns/op
# Warmup Iteration   5: 1506.531 ns/op
Iteration   1: 1483.911 ns/op
Iteration   2: 1532.274 ns/op
Iteration   3: 1514.318 ns/op
Iteration   4: 1501.161 ns/op
Iteration   5: 1518.945 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1510.122 ±(99.9%) 70.832 ns/op [Average]
  (min, avg, max) = (1483.911, 1510.122, 1532.274), stdev = 18.395
  CI (99.9%): [1439.290, 1580.954] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 50)

# Run progress: 18.88% complete, ETA 00:27:58
# Fork: 1 of 1
# Warmup Iteration   1: 1693.346 ns/op
# Warmup Iteration   2: 1694.513 ns/op
# Warmup Iteration   3: 1618.494 ns/op
# Warmup Iteration   4: 1611.238 ns/op
# Warmup Iteration   5: 1608.596 ns/op
Iteration   1: 1596.028 ns/op
Iteration   2: 1598.247 ns/op
Iteration   3: 1582.234 ns/op
Iteration   4: 1604.031 ns/op
Iteration   5: 1620.700 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1600.248 ±(99.9%) 53.734 ns/op [Average]
  (min, avg, max) = (1582.234, 1600.248, 1620.700), stdev = 13.955
  CI (99.9%): [1546.514, 1653.982] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 100)

# Run progress: 19.39% complete, ETA 00:27:47
# Fork: 1 of 1
# Warmup Iteration   1: 1825.416 ns/op
# Warmup Iteration   2: 1800.857 ns/op
# Warmup Iteration   3: 1821.630 ns/op
# Warmup Iteration   4: 1749.215 ns/op
# Warmup Iteration   5: 1727.254 ns/op
Iteration   1: 1753.864 ns/op
Iteration   2: 1741.643 ns/op
Iteration   3: 1728.083 ns/op
Iteration   4: 1740.730 ns/op
Iteration   5: 1708.838 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1734.632 ±(99.9%) 65.700 ns/op [Average]
  (min, avg, max) = (1708.838, 1734.632, 1753.864), stdev = 17.062
  CI (99.9%): [1668.932, 1800.332] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 500)

# Run progress: 19.90% complete, ETA 00:27:36
# Fork: 1 of 1
# Warmup Iteration   1: 2447.350 ns/op
# Warmup Iteration   2: 2340.351 ns/op
# Warmup Iteration   3: 2319.128 ns/op
# Warmup Iteration   4: 2279.522 ns/op
# Warmup Iteration   5: 2351.115 ns/op
Iteration   1: 2271.109 ns/op
Iteration   2: 2289.947 ns/op
Iteration   3: 2317.098 ns/op
Iteration   4: 2284.697 ns/op
Iteration   5: 2251.124 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  2282.795 ±(99.9%) 93.751 ns/op [Average]
  (min, avg, max) = (2251.124, 2282.795, 2317.098), stdev = 24.347
  CI (99.9%): [2189.044, 2376.547] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 1000)

# Run progress: 20.41% complete, ETA 00:27:25
# Fork: 1 of 1
# Warmup Iteration   1: 3233.792 ns/op
# Warmup Iteration   2: 3128.695 ns/op
# Warmup Iteration   3: 3017.361 ns/op
# Warmup Iteration   4: 2982.746 ns/op
# Warmup Iteration   5: 2967.429 ns/op
Iteration   1: 2951.054 ns/op
Iteration   2: 2946.273 ns/op
Iteration   3: 3004.247 ns/op
Iteration   4: 3064.325 ns/op
Iteration   5: 3026.832 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  2998.546 ±(99.9%) 193.947 ns/op [Average]
  (min, avg, max) = (2946.273, 2998.546, 3064.325), stdev = 50.367
  CI (99.9%): [2804.599, 3192.493] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 10000)

# Run progress: 20.92% complete, ETA 00:27:14
# Fork: 1 of 1
# Warmup Iteration   1: 16884.973 ns/op
# Warmup Iteration   2: 15363.905 ns/op
# Warmup Iteration   3: 15365.697 ns/op
# Warmup Iteration   4: 14576.985 ns/op
# Warmup Iteration   5: 14391.922 ns/op
Iteration   1: 14645.097 ns/op
Iteration   2: 14149.131 ns/op
Iteration   3: 14342.076 ns/op
Iteration   4: 14404.031 ns/op
Iteration   5: 14968.451 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  14501.757 ±(99.9%) 1214.242 ns/op [Average]
  (min, avg, max) = (14149.131, 14501.757, 14968.451), stdev = 315.335
  CI (99.9%): [13287.516, 15715.999] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 21.43% complete, ETA 00:27:03
# Fork: 1 of 1
# Warmup Iteration   1: 1351.870 ns/op
# Warmup Iteration   2: 1362.921 ns/op
# Warmup Iteration   3: 1340.879 ns/op
# Warmup Iteration   4: 1368.373 ns/op
# Warmup Iteration   5: 1356.473 ns/op
Iteration   1: 1364.378 ns/op
Iteration   2: 1328.872 ns/op
Iteration   3: 1317.139 ns/op
Iteration   4: 1350.739 ns/op
Iteration   5: 1315.754 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1335.376 ±(99.9%) 82.521 ns/op [Average]
  (min, avg, max) = (1315.754, 1335.376, 1364.378), stdev = 21.431
  CI (99.9%): [1252.855, 1417.898] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 21.94% complete, ETA 00:26:53
# Fork: 1 of 1
# Warmup Iteration   1: 1368.924 ns/op
# Warmup Iteration   2: 1382.757 ns/op
# Warmup Iteration   3: 1321.042 ns/op
# Warmup Iteration   4: 1322.129 ns/op
# Warmup Iteration   5: 1318.238 ns/op
Iteration   1: 1303.900 ns/op
Iteration   2: 1291.652 ns/op
Iteration   3: 1292.180 ns/op
Iteration   4: 1319.500 ns/op
Iteration   5: 1330.332 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1307.513 ±(99.9%) 65.690 ns/op [Average]
  (min, avg, max) = (1291.652, 1307.513, 1330.332), stdev = 17.060
  CI (99.9%): [1241.822, 1373.203] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 22.45% complete, ETA 00:26:43
# Fork: 1 of 1
# Warmup Iteration   1: 1457.343 ns/op
# Warmup Iteration   2: 1452.008 ns/op
# Warmup Iteration   3: 1403.893 ns/op
# Warmup Iteration   4: 1389.209 ns/op
# Warmup Iteration   5: 1399.332 ns/op
Iteration   1: 1405.582 ns/op
Iteration   2: 1407.746 ns/op
Iteration   3: 1384.215 ns/op
Iteration   4: 1379.001 ns/op
Iteration   5: 1386.867 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1392.682 ±(99.9%) 50.428 ns/op [Average]
  (min, avg, max) = (1379.001, 1392.682, 1407.746), stdev = 13.096
  CI (99.9%): [1342.254, 1443.111] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 22.96% complete, ETA 00:26:32
# Fork: 1 of 1
# Warmup Iteration   1: 1609.364 ns/op
# Warmup Iteration   2: 1510.715 ns/op
# Warmup Iteration   3: 1482.269 ns/op
# Warmup Iteration   4: 1472.325 ns/op
# Warmup Iteration   5: 1489.019 ns/op
Iteration   1: 1463.814 ns/op
Iteration   2: 1461.648 ns/op
Iteration   3: 1473.729 ns/op
Iteration   4: 1474.406 ns/op
Iteration   5: 1506.132 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1475.946 ±(99.9%) 68.615 ns/op [Average]
  (min, avg, max) = (1461.648, 1475.946, 1506.132), stdev = 17.819
  CI (99.9%): [1407.331, 1544.561] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 23.47% complete, ETA 00:26:22
# Fork: 1 of 1
# Warmup Iteration   1: 2187.920 ns/op
# Warmup Iteration   2: 2008.283 ns/op
# Warmup Iteration   3: 2000.863 ns/op
# Warmup Iteration   4: 2091.847 ns/op
# Warmup Iteration   5: 2041.075 ns/op
Iteration   1: 1988.346 ns/op
Iteration   2: 1989.320 ns/op
Iteration   3: 2020.741 ns/op
Iteration   4: 1969.137 ns/op
Iteration   5: 2026.886 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1998.886 ±(99.9%) 93.317 ns/op [Average]
  (min, avg, max) = (1969.137, 1998.886, 2026.886), stdev = 24.234
  CI (99.9%): [1905.569, 2092.204] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 23.98% complete, ETA 00:26:11
# Fork: 1 of 1
# Warmup Iteration   1: 3105.478 ns/op
# Warmup Iteration   2: 2936.013 ns/op
# Warmup Iteration   3: 3049.231 ns/op
# Warmup Iteration   4: 3082.020 ns/op
# Warmup Iteration   5: 3006.461 ns/op
Iteration   1: 2913.188 ns/op
Iteration   2: 2903.300 ns/op
Iteration   3: 2960.180 ns/op
Iteration   4: 2848.193 ns/op
Iteration   5: 2892.823 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  2903.537 ±(99.9%) 154.979 ns/op [Average]
  (min, avg, max) = (2848.193, 2903.537, 2960.180), stdev = 40.247
  CI (99.9%): [2748.558, 3058.515] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 24.49% complete, ETA 00:26:01
# Fork: 1 of 1
# Warmup Iteration   1: 15599.948 ns/op
# Warmup Iteration   2: 14708.358 ns/op
# Warmup Iteration   3: 14280.554 ns/op
# Warmup Iteration   4: 13792.010 ns/op
# Warmup Iteration   5: 14117.004 ns/op
Iteration   1: 13797.257 ns/op
Iteration   2: 13920.509 ns/op
Iteration   3: 14124.698 ns/op
Iteration   4: 13980.235 ns/op
Iteration   5: 13992.388 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  13963.017 ±(99.9%) 457.981 ns/op [Average]
  (min, avg, max) = (13797.257, 13963.017, 14124.698), stdev = 118.936
  CI (99.9%): [13505.037, 14420.998] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 1)

# Run progress: 25.00% complete, ETA 00:25:50
# Fork: 1 of 1
# Warmup Iteration   1: 1370.728 ns/op
# Warmup Iteration   2: 1347.307 ns/op
# Warmup Iteration   3: 1370.057 ns/op
# Warmup Iteration   4: 1318.775 ns/op
# Warmup Iteration   5: 1315.226 ns/op
Iteration   1: 1326.558 ns/op
Iteration   2: 1348.879 ns/op
Iteration   3: 1311.097 ns/op
Iteration   4: 1318.783 ns/op
Iteration   5: 1336.478 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1328.359 ±(99.9%) 57.111 ns/op [Average]
  (min, avg, max) = (1311.097, 1328.359, 1348.879), stdev = 14.832
  CI (99.9%): [1271.248, 1385.470] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 10)

# Run progress: 25.51% complete, ETA 00:25:40
# Fork: 1 of 1
# Warmup Iteration   1: 1387.932 ns/op
# Warmup Iteration   2: 1339.198 ns/op
# Warmup Iteration   3: 1337.083 ns/op
# Warmup Iteration   4: 1361.701 ns/op
# Warmup Iteration   5: 1317.473 ns/op
Iteration   1: 1316.493 ns/op
Iteration   2: 1304.218 ns/op
Iteration   3: 1305.524 ns/op
Iteration   4: 1344.950 ns/op
Iteration   5: 1317.711 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1317.779 ±(99.9%) 63.097 ns/op [Average]
  (min, avg, max) = (1304.218, 1317.779, 1344.950), stdev = 16.386
  CI (99.9%): [1254.682, 1380.876] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 50)

# Run progress: 26.02% complete, ETA 00:25:29
# Fork: 1 of 1
# Warmup Iteration   1: 1481.884 ns/op
# Warmup Iteration   2: 1468.623 ns/op
# Warmup Iteration   3: 1397.173 ns/op
# Warmup Iteration   4: 1402.054 ns/op
# Warmup Iteration   5: 1415.429 ns/op
Iteration   1: 1437.998 ns/op
Iteration   2: 1443.486 ns/op
Iteration   3: 1420.813 ns/op
Iteration   4: 1444.183 ns/op
Iteration   5: 1368.202 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1422.936 ±(99.9%) 123.294 ns/op [Average]
  (min, avg, max) = (1368.202, 1422.936, 1444.183), stdev = 32.019
  CI (99.9%): [1299.642, 1546.231] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 100)

# Run progress: 26.53% complete, ETA 00:25:18
# Fork: 1 of 1
# Warmup Iteration   1: 1542.490 ns/op
# Warmup Iteration   2: 1514.966 ns/op
# Warmup Iteration   3: 1508.469 ns/op
# Warmup Iteration   4: 1513.130 ns/op
# Warmup Iteration   5: 1463.266 ns/op
Iteration   1: 1479.318 ns/op
Iteration   2: 1466.415 ns/op
Iteration   3: 1474.123 ns/op
Iteration   4: 1488.713 ns/op
Iteration   5: 1536.776 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1489.069 ±(99.9%) 107.331 ns/op [Average]
  (min, avg, max) = (1466.415, 1489.069, 1536.776), stdev = 27.874
  CI (99.9%): [1381.738, 1596.400] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 500)

# Run progress: 27.04% complete, ETA 00:25:07
# Fork: 1 of 1
# Warmup Iteration   1: 2258.726 ns/op
# Warmup Iteration   2: 2055.793 ns/op
# Warmup Iteration   3: 2050.629 ns/op
# Warmup Iteration   4: 2137.727 ns/op
# Warmup Iteration   5: 2059.490 ns/op
Iteration   1: 1988.411 ns/op
Iteration   2: 2009.038 ns/op
Iteration   3: 1981.611 ns/op
Iteration   4: 2014.824 ns/op
Iteration   5: 1973.343 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1993.445 ±(99.9%) 68.604 ns/op [Average]
  (min, avg, max) = (1973.343, 1993.445, 2014.824), stdev = 17.816
  CI (99.9%): [1924.842, 2062.049] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 1000)

# Run progress: 27.55% complete, ETA 00:24:57
# Fork: 1 of 1
# Warmup Iteration   1: 3056.482 ns/op
# Warmup Iteration   2: 3043.028 ns/op
# Warmup Iteration   3: 2902.460 ns/op
# Warmup Iteration   4: 2932.608 ns/op
# Warmup Iteration   5: 2836.016 ns/op
Iteration   1: 2927.766 ns/op
Iteration   2: 2844.219 ns/op
Iteration   3: 2858.977 ns/op
Iteration   4: 2886.122 ns/op
Iteration   5: 2979.723 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  2899.361 ±(99.9%) 211.887 ns/op [Average]
  (min, avg, max) = (2844.219, 2899.361, 2979.723), stdev = 55.026
  CI (99.9%): [2687.475, 3111.248] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 10000)

# Run progress: 28.06% complete, ETA 00:24:46
# Fork: 1 of 1
# Warmup Iteration   1: 17395.642 ns/op
# Warmup Iteration   2: 15172.464 ns/op
# Warmup Iteration   3: 14516.804 ns/op
# Warmup Iteration   4: 14003.906 ns/op
# Warmup Iteration   5: 13759.824 ns/op
Iteration   1: 14238.418 ns/op
Iteration   2: 14250.551 ns/op
Iteration   3: 14172.515 ns/op
Iteration   4: 14257.750 ns/op
Iteration   5: 14002.266 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  14184.300 ±(99.9%) 412.883 ns/op [Average]
  (min, avg, max) = (14002.266, 14184.300, 14257.750), stdev = 107.224
  CI (99.9%): [13771.417, 14597.183] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 28.57% complete, ETA 00:24:35
# Fork: 1 of 1
# Warmup Iteration   1: 1184.485 ns/op
# Warmup Iteration   2: 1192.097 ns/op
# Warmup Iteration   3: 1172.443 ns/op
# Warmup Iteration   4: 1167.341 ns/op
# Warmup Iteration   5: 1144.060 ns/op
Iteration   1: 1155.739 ns/op
Iteration   2: 1153.373 ns/op
Iteration   3: 1187.577 ns/op
Iteration   4: 1141.622 ns/op
Iteration   5: 1189.682 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1165.598 ±(99.9%) 83.583 ns/op [Average]
  (min, avg, max) = (1141.622, 1165.598, 1189.682), stdev = 21.706
  CI (99.9%): [1082.015, 1249.182] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 29.08% complete, ETA 00:24:25
# Fork: 1 of 1
# Warmup Iteration   1: 1201.946 ns/op
# Warmup Iteration   2: 1173.696 ns/op
# Warmup Iteration   3: 1165.019 ns/op
# Warmup Iteration   4: 1151.150 ns/op
# Warmup Iteration   5: 1167.135 ns/op
Iteration   1: 1253.573 ns/op
Iteration   2: 1140.022 ns/op
Iteration   3: 1133.520 ns/op
Iteration   4: 1138.617 ns/op
Iteration   5: 1153.120 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1163.770 ±(99.9%) 195.300 ns/op [Average]
  (min, avg, max) = (1133.520, 1163.770, 1253.573), stdev = 50.719
  CI (99.9%): [968.470, 1359.071] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 29.59% complete, ETA 00:24:14
# Fork: 1 of 1
# Warmup Iteration   1: 1330.425 ns/op
# Warmup Iteration   2: 1359.525 ns/op
# Warmup Iteration   3: 1215.158 ns/op
# Warmup Iteration   4: 1257.201 ns/op
# Warmup Iteration   5: 1244.634 ns/op
Iteration   1: 1277.843 ns/op
Iteration   2: 1242.084 ns/op
Iteration   3: 1249.230 ns/op
Iteration   4: 1234.656 ns/op
Iteration   5: 1275.265 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1255.816 ±(99.9%) 75.631 ns/op [Average]
  (min, avg, max) = (1234.656, 1255.816, 1277.843), stdev = 19.641
  CI (99.9%): [1180.185, 1331.447] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 30.10% complete, ETA 00:24:04
# Fork: 1 of 1
# Warmup Iteration   1: 1435.227 ns/op
# Warmup Iteration   2: 1354.845 ns/op
# Warmup Iteration   3: 1327.371 ns/op
# Warmup Iteration   4: 1327.217 ns/op
# Warmup Iteration   5: 1322.984 ns/op
Iteration   1: 1333.883 ns/op
Iteration   2: 1307.158 ns/op
Iteration   3: 1331.486 ns/op
Iteration   4: 1306.738 ns/op
Iteration   5: 1338.505 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1323.554 ±(99.9%) 59.178 ns/op [Average]
  (min, avg, max) = (1306.738, 1323.554, 1338.505), stdev = 15.368
  CI (99.9%): [1264.376, 1382.732] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 30.61% complete, ETA 00:23:53
# Fork: 1 of 1
# Warmup Iteration   1: 2123.139 ns/op
# Warmup Iteration   2: 1980.405 ns/op
# Warmup Iteration   3: 1951.314 ns/op
# Warmup Iteration   4: 2072.008 ns/op
# Warmup Iteration   5: 2035.165 ns/op
Iteration   1: 1930.144 ns/op
Iteration   2: 1946.841 ns/op
Iteration   3: 1973.213 ns/op
Iteration   4: 1933.895 ns/op
Iteration   5: 1988.426 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1954.504 ±(99.9%) 97.748 ns/op [Average]
  (min, avg, max) = (1930.144, 1954.504, 1988.426), stdev = 25.385
  CI (99.9%): [1856.756, 2052.252] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 31.12% complete, ETA 00:23:43
# Fork: 1 of 1
# Warmup Iteration   1: 2906.913 ns/op
# Warmup Iteration   2: 2804.500 ns/op
# Warmup Iteration   3: 2787.560 ns/op
# Warmup Iteration   4: 2783.525 ns/op
# Warmup Iteration   5: 2733.873 ns/op
Iteration   1: 2728.522 ns/op
Iteration   2: 2761.676 ns/op
Iteration   3: 2742.028 ns/op
Iteration   4: 2683.839 ns/op
Iteration   5: 2669.393 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  2717.092 ±(99.9%) 150.634 ns/op [Average]
  (min, avg, max) = (2669.393, 2717.092, 2761.676), stdev = 39.119
  CI (99.9%): [2566.458, 2867.725] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 31.63% complete, ETA 00:23:32
# Fork: 1 of 1
# Warmup Iteration   1: 15691.955 ns/op
# Warmup Iteration   2: 15135.719 ns/op
# Warmup Iteration   3: 13814.786 ns/op
# Warmup Iteration   4: 13821.753 ns/op
# Warmup Iteration   5: 13814.932 ns/op
Iteration   1: 13529.837 ns/op
Iteration   2: 14128.707 ns/op
Iteration   3: 13815.843 ns/op
Iteration   4: 13975.726 ns/op
Iteration   5: 13800.005 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  13850.024 ±(99.9%) 860.288 ns/op [Average]
  (min, avg, max) = (13529.837, 13850.024, 14128.707), stdev = 223.414
  CI (99.9%): [12989.736, 14710.312] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 1)

# Run progress: 32.14% complete, ETA 00:23:22
# Fork: 1 of 1
# Warmup Iteration   1: 1220.788 ns/op
# Warmup Iteration   2: 1202.780 ns/op
# Warmup Iteration   3: 1283.703 ns/op
# Warmup Iteration   4: 1181.882 ns/op
# Warmup Iteration   5: 1152.743 ns/op
Iteration   1: 1162.120 ns/op
Iteration   2: 1175.881 ns/op
Iteration   3: 1186.079 ns/op
Iteration   4: 1210.354 ns/op
Iteration   5: 1195.289 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1185.945 ±(99.9%) 70.795 ns/op [Average]
  (min, avg, max) = (1162.120, 1185.945, 1210.354), stdev = 18.385
  CI (99.9%): [1115.150, 1256.739] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 10)

# Run progress: 32.65% complete, ETA 00:23:11
# Fork: 1 of 1
# Warmup Iteration   1: 1192.038 ns/op
# Warmup Iteration   2: 1169.338 ns/op
# Warmup Iteration   3: 1176.044 ns/op
# Warmup Iteration   4: 1157.286 ns/op
# Warmup Iteration   5: 1128.670 ns/op
Iteration   1: 1161.495 ns/op
Iteration   2: 1168.652 ns/op
Iteration   3: 1181.563 ns/op
Iteration   4: 1161.428 ns/op
Iteration   5: 1173.385 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1169.305 ±(99.9%) 32.809 ns/op [Average]
  (min, avg, max) = (1161.428, 1169.305, 1181.563), stdev = 8.520
  CI (99.9%): [1136.496, 1202.114] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 50)

# Run progress: 33.16% complete, ETA 00:23:01
# Fork: 1 of 1
# Warmup Iteration   1: 1311.709 ns/op
# Warmup Iteration   2: 1273.339 ns/op
# Warmup Iteration   3: 1280.138 ns/op
# Warmup Iteration   4: 1209.881 ns/op
# Warmup Iteration   5: 1254.686 ns/op
Iteration   1: 1267.522 ns/op
Iteration   2: 1263.706 ns/op
Iteration   3: 1221.198 ns/op
Iteration   4: 1218.118 ns/op
Iteration   5: 1214.040 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1236.917 ±(99.9%) 101.481 ns/op [Average]
  (min, avg, max) = (1214.040, 1236.917, 1267.522), stdev = 26.354
  CI (99.9%): [1135.436, 1338.398] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 100)

# Run progress: 33.67% complete, ETA 00:22:50
# Fork: 1 of 1
# Warmup Iteration   1: 1419.589 ns/op
# Warmup Iteration   2: 1305.055 ns/op
# Warmup Iteration   3: 1299.368 ns/op
# Warmup Iteration   4: 1303.669 ns/op
# Warmup Iteration   5: 1332.491 ns/op
Iteration   1: 1303.478 ns/op
Iteration   2: 1309.967 ns/op
Iteration   3: 1328.197 ns/op
Iteration   4: 1322.873 ns/op
Iteration   5: 1295.685 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1312.040 ±(99.9%) 51.787 ns/op [Average]
  (min, avg, max) = (1295.685, 1312.040, 1328.197), stdev = 13.449
  CI (99.9%): [1260.253, 1363.827] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 500)

# Run progress: 34.18% complete, ETA 00:22:39
# Fork: 1 of 1
# Warmup Iteration   1: 2000.969 ns/op
# Warmup Iteration   2: 1870.520 ns/op
# Warmup Iteration   3: 1830.059 ns/op
# Warmup Iteration   4: 1851.379 ns/op
# Warmup Iteration   5: 1840.124 ns/op
Iteration   1: 1844.934 ns/op
Iteration   2: 1815.577 ns/op
Iteration   3: 1816.931 ns/op
Iteration   4: 1810.372 ns/op
Iteration   5: 1885.705 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1834.704 ±(99.9%) 121.456 ns/op [Average]
  (min, avg, max) = (1810.372, 1834.704, 1885.705), stdev = 31.542
  CI (99.9%): [1713.248, 1956.160] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 1000)

# Run progress: 34.69% complete, ETA 00:22:29
# Fork: 1 of 1
# Warmup Iteration   1: 2885.418 ns/op
# Warmup Iteration   2: 2842.235 ns/op
# Warmup Iteration   3: 2716.952 ns/op
# Warmup Iteration   4: 2727.872 ns/op
# Warmup Iteration   5: 2761.712 ns/op
Iteration   1: 2724.748 ns/op
Iteration   2: 2686.439 ns/op
Iteration   3: 2628.266 ns/op
Iteration   4: 2700.862 ns/op
Iteration   5: 2725.614 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  2693.186 ±(99.9%) 153.626 ns/op [Average]
  (min, avg, max) = (2628.266, 2693.186, 2725.614), stdev = 39.896
  CI (99.9%): [2539.560, 2846.812] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 10000)

# Run progress: 35.20% complete, ETA 00:22:18
# Fork: 1 of 1
# Warmup Iteration   1: 16624.072 ns/op
# Warmup Iteration   2: 14791.865 ns/op
# Warmup Iteration   3: 13798.156 ns/op
# Warmup Iteration   4: 13558.781 ns/op
# Warmup Iteration   5: 13450.940 ns/op
Iteration   1: 13663.513 ns/op
Iteration   2: 13474.520 ns/op
Iteration   3: 13643.691 ns/op
Iteration   4: 13960.238 ns/op
Iteration   5: 13651.531 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  13678.698 ±(99.9%) 675.641 ns/op [Average]
  (min, avg, max) = (13474.520, 13678.698, 13960.238), stdev = 175.462
  CI (99.9%): [13003.058, 14354.339] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 1)

# Run progress: 35.71% complete, ETA 00:22:07
# Fork: 1 of 1
# Warmup Iteration   1: 1159.203 ns/op
# Warmup Iteration   2: 1148.860 ns/op
# Warmup Iteration   3: 1129.725 ns/op
# Warmup Iteration   4: 1117.040 ns/op
# Warmup Iteration   5: 1122.490 ns/op
Iteration   1: 1095.590 ns/op
Iteration   2: 1097.403 ns/op
Iteration   3: 1123.096 ns/op
Iteration   4: 1125.014 ns/op
Iteration   5: 1104.397 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1109.100 ±(99.9%) 54.135 ns/op [Average]
  (min, avg, max) = (1095.590, 1109.100, 1125.014), stdev = 14.059
  CI (99.9%): [1054.965, 1163.235] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 10)

# Run progress: 36.22% complete, ETA 00:21:57
# Fork: 1 of 1
# Warmup Iteration   1: 1120.784 ns/op
# Warmup Iteration   2: 1138.280 ns/op
# Warmup Iteration   3: 1107.284 ns/op
# Warmup Iteration   4: 1088.943 ns/op
# Warmup Iteration   5: 1078.321 ns/op
Iteration   1: 1079.979 ns/op
Iteration   2: 1073.082 ns/op
Iteration   3: 1087.152 ns/op
Iteration   4: 1073.523 ns/op
Iteration   5: 1091.100 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1080.967 ±(99.9%) 31.014 ns/op [Average]
  (min, avg, max) = (1073.082, 1080.967, 1091.100), stdev = 8.054
  CI (99.9%): [1049.953, 1111.981] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 50)

# Run progress: 36.73% complete, ETA 00:21:46
# Fork: 1 of 1
# Warmup Iteration   1: 1229.229 ns/op
# Warmup Iteration   2: 1205.495 ns/op
# Warmup Iteration   3: 1234.455 ns/op
# Warmup Iteration   4: 1197.239 ns/op
# Warmup Iteration   5: 1174.259 ns/op
Iteration   1: 1174.136 ns/op
Iteration   2: 1186.413 ns/op
Iteration   3: 1161.285 ns/op
Iteration   4: 1144.147 ns/op
Iteration   5: 1136.738 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1160.544 ±(99.9%) 79.151 ns/op [Average]
  (min, avg, max) = (1136.738, 1160.544, 1186.413), stdev = 20.555
  CI (99.9%): [1081.393, 1239.695] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 100)

# Run progress: 37.24% complete, ETA 00:21:36
# Fork: 1 of 1
# Warmup Iteration   1: 1410.157 ns/op
# Warmup Iteration   2: 1369.009 ns/op
# Warmup Iteration   3: 1364.340 ns/op
# Warmup Iteration   4: 1339.433 ns/op
# Warmup Iteration   5: 1303.059 ns/op
Iteration   1: 1313.606 ns/op
Iteration   2: 1309.953 ns/op
Iteration   3: 1328.743 ns/op
Iteration   4: 1320.466 ns/op
Iteration   5: 1307.141 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1315.982 ±(99.9%) 33.520 ns/op [Average]
  (min, avg, max) = (1307.141, 1315.982, 1328.743), stdev = 8.705
  CI (99.9%): [1282.462, 1349.502] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 500)

# Run progress: 37.76% complete, ETA 00:21:25
# Fork: 1 of 1
# Warmup Iteration   1: 1981.581 ns/op
# Warmup Iteration   2: 1818.629 ns/op
# Warmup Iteration   3: 1776.335 ns/op
# Warmup Iteration   4: 1784.556 ns/op
# Warmup Iteration   5: 1746.308 ns/op
Iteration   1: 1783.968 ns/op
Iteration   2: 1778.915 ns/op
Iteration   3: 1756.075 ns/op
Iteration   4: 1775.758 ns/op
Iteration   5: 1788.749 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1776.693 ±(99.9%) 48.295 ns/op [Average]
  (min, avg, max) = (1756.075, 1776.693, 1788.749), stdev = 12.542
  CI (99.9%): [1728.398, 1824.988] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 38.27% complete, ETA 00:21:15
# Fork: 1 of 1
# Warmup Iteration   1: 2866.804 ns/op
# Warmup Iteration   2: 2763.137 ns/op
# Warmup Iteration   3: 2516.929 ns/op
# Warmup Iteration   4: 2615.027 ns/op
# Warmup Iteration   5: 2531.696 ns/op
Iteration   1: 2478.308 ns/op
Iteration   2: 2492.838 ns/op
Iteration   3: 2586.191 ns/op
Iteration   4: 2525.794 ns/op
Iteration   5: 2637.151 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  2544.056 ±(99.9%) 256.304 ns/op [Average]
  (min, avg, max) = (2478.308, 2544.056, 2637.151), stdev = 66.561
  CI (99.9%): [2287.752, 2800.360] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 38.78% complete, ETA 00:21:04
# Fork: 1 of 1
# Warmup Iteration   1: 15306.398 ns/op
# Warmup Iteration   2: 14487.493 ns/op
# Warmup Iteration   3: 13401.883 ns/op
# Warmup Iteration   4: 13765.955 ns/op
# Warmup Iteration   5: 13367.032 ns/op
Iteration   1: 13384.133 ns/op
Iteration   2: 14056.214 ns/op
Iteration   3: 13382.906 ns/op
Iteration   4: 14095.201 ns/op
Iteration   5: 13665.880 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  13716.867 ±(99.9%) 1338.250 ns/op [Average]
  (min, avg, max) = (13382.906, 13716.867, 14095.201), stdev = 347.539
  CI (99.9%): [12378.616, 15055.117] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 1)

# Run progress: 39.29% complete, ETA 00:20:54
# Fork: 1 of 1
# Warmup Iteration   1: 1142.786 ns/op
# Warmup Iteration   2: 1151.648 ns/op
# Warmup Iteration   3: 1140.419 ns/op
# Warmup Iteration   4: 1132.466 ns/op
# Warmup Iteration   5: 1144.064 ns/op
Iteration   1: 1120.226 ns/op
Iteration   2: 1120.696 ns/op
Iteration   3: 1125.094 ns/op
Iteration   4: 1131.146 ns/op
Iteration   5: 1105.138 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1120.460 ±(99.9%) 37.061 ns/op [Average]
  (min, avg, max) = (1105.138, 1120.460, 1131.146), stdev = 9.625
  CI (99.9%): [1083.399, 1157.521] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 10)

# Run progress: 39.80% complete, ETA 00:20:43
# Fork: 1 of 1
# Warmup Iteration   1: 1143.411 ns/op
# Warmup Iteration   2: 1120.636 ns/op
# Warmup Iteration   3: 1133.092 ns/op
# Warmup Iteration   4: 1099.537 ns/op
# Warmup Iteration   5: 1096.446 ns/op
Iteration   1: 1096.177 ns/op
Iteration   2: 1081.060 ns/op
Iteration   3: 1092.539 ns/op
Iteration   4: 1143.025 ns/op
Iteration   5: 1115.564 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1105.673 ±(99.9%) 93.560 ns/op [Average]
  (min, avg, max) = (1081.060, 1105.673, 1143.025), stdev = 24.297
  CI (99.9%): [1012.113, 1199.233] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 50)

# Run progress: 40.31% complete, ETA 00:20:33
# Fork: 1 of 1
# Warmup Iteration   1: 1325.895 ns/op
# Warmup Iteration   2: 1242.111 ns/op
# Warmup Iteration   3: 1181.135 ns/op
# Warmup Iteration   4: 1211.314 ns/op
# Warmup Iteration   5: 1206.059 ns/op
Iteration   1: 1221.346 ns/op
Iteration   2: 1207.267 ns/op
Iteration   3: 1202.352 ns/op
Iteration   4: 1192.730 ns/op
Iteration   5: 1196.434 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1204.026 ±(99.9%) 42.989 ns/op [Average]
  (min, avg, max) = (1192.730, 1204.026, 1221.346), stdev = 11.164
  CI (99.9%): [1161.037, 1247.015] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 100)

# Run progress: 40.82% complete, ETA 00:20:22
# Fork: 1 of 1
# Warmup Iteration   1: 1344.893 ns/op
# Warmup Iteration   2: 1262.576 ns/op
# Warmup Iteration   3: 1233.779 ns/op
# Warmup Iteration   4: 1245.427 ns/op
# Warmup Iteration   5: 1245.533 ns/op
Iteration   1: 1271.561 ns/op
Iteration   2: 1246.161 ns/op
Iteration   3: 1265.360 ns/op
Iteration   4: 1266.022 ns/op
Iteration   5: 1268.681 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1263.557 ±(99.9%) 38.615 ns/op [Average]
  (min, avg, max) = (1246.161, 1263.557, 1271.561), stdev = 10.028
  CI (99.9%): [1224.942, 1302.172] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 500)

# Run progress: 41.33% complete, ETA 00:20:11
# Fork: 1 of 1
# Warmup Iteration   1: 1973.996 ns/op
# Warmup Iteration   2: 1811.991 ns/op
# Warmup Iteration   3: 1807.893 ns/op
# Warmup Iteration   4: 1789.721 ns/op
# Warmup Iteration   5: 1783.941 ns/op
Iteration   1: 1779.855 ns/op
Iteration   2: 1821.876 ns/op
Iteration   3: 1772.307 ns/op
Iteration   4: 1781.535 ns/op
Iteration   5: 1790.467 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1789.208 ±(99.9%) 74.588 ns/op [Average]
  (min, avg, max) = (1772.307, 1789.208, 1821.876), stdev = 19.370
  CI (99.9%): [1714.620, 1863.796] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 1000)

# Run progress: 41.84% complete, ETA 00:20:01
# Fork: 1 of 1
# Warmup Iteration   1: 2702.969 ns/op
# Warmup Iteration   2: 2545.940 ns/op
# Warmup Iteration   3: 2522.893 ns/op
# Warmup Iteration   4: 2502.568 ns/op
# Warmup Iteration   5: 2466.507 ns/op
Iteration   1: 2467.531 ns/op
Iteration   2: 2435.920 ns/op
Iteration   3: 2467.932 ns/op
Iteration   4: 2455.958 ns/op
Iteration   5: 2477.593 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  2460.987 ±(99.9%) 61.505 ns/op [Average]
  (min, avg, max) = (2435.920, 2460.987, 2477.593), stdev = 15.973
  CI (99.9%): [2399.482, 2522.492] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 10000)

# Run progress: 42.35% complete, ETA 00:19:50
# Fork: 1 of 1
# Warmup Iteration   1: 15813.871 ns/op
# Warmup Iteration   2: 14484.917 ns/op
# Warmup Iteration   3: 13439.865 ns/op
# Warmup Iteration   4: 13378.533 ns/op
# Warmup Iteration   5: 13448.506 ns/op
Iteration   1: 13264.458 ns/op
Iteration   2: 13565.575 ns/op
Iteration   3: 13193.169 ns/op
Iteration   4: 13886.702 ns/op
Iteration   5: 13323.319 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  13446.645 ±(99.9%) 1089.885 ns/op [Average]
  (min, avg, max) = (13193.169, 13446.645, 13886.702), stdev = 283.040
  CI (99.9%): [12356.760, 14536.530] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 1)

# Run progress: 42.86% complete, ETA 00:19:40
# Fork: 1 of 1
# Warmup Iteration   1: 1147.947 ns/op
# Warmup Iteration   2: 1156.581 ns/op
# Warmup Iteration   3: 1115.014 ns/op
# Warmup Iteration   4: 1115.262 ns/op
# Warmup Iteration   5: 1081.469 ns/op
Iteration   1: 1083.473 ns/op
Iteration   2: 1078.816 ns/op
Iteration   3: 1119.124 ns/op
Iteration   4: 1081.586 ns/op
Iteration   5: 1086.712 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1089.942 ±(99.9%) 63.783 ns/op [Average]
  (min, avg, max) = (1078.816, 1089.942, 1119.124), stdev = 16.564
  CI (99.9%): [1026.159, 1153.725] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 10)

# Run progress: 43.37% complete, ETA 00:19:29
# Fork: 1 of 1
# Warmup Iteration   1: 1206.931 ns/op
# Warmup Iteration   2: 1169.784 ns/op
# Warmup Iteration   3: 1151.158 ns/op
# Warmup Iteration   4: 1136.421 ns/op
# Warmup Iteration   5: 1120.639 ns/op
Iteration   1: 1125.492 ns/op
Iteration   2: 1116.503 ns/op
Iteration   3: 1119.719 ns/op
Iteration   4: 1111.150 ns/op
Iteration   5: 1127.011 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1119.975 ±(99.9%) 25.099 ns/op [Average]
  (min, avg, max) = (1111.150, 1119.975, 1127.011), stdev = 6.518
  CI (99.9%): [1094.876, 1145.074] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 50)

# Run progress: 43.88% complete, ETA 00:19:19
# Fork: 1 of 1
# Warmup Iteration   1: 1276.061 ns/op
# Warmup Iteration   2: 1261.043 ns/op
# Warmup Iteration   3: 1203.817 ns/op
# Warmup Iteration   4: 1198.844 ns/op
# Warmup Iteration   5: 1192.606 ns/op
Iteration   1: 1191.446 ns/op
Iteration   2: 1198.683 ns/op
Iteration   3: 1203.616 ns/op
Iteration   4: 1198.329 ns/op
Iteration   5: 1193.881 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1197.191 ±(99.9%) 18.140 ns/op [Average]
  (min, avg, max) = (1191.446, 1197.191, 1203.616), stdev = 4.711
  CI (99.9%): [1179.052, 1215.331] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 100)

# Run progress: 44.39% complete, ETA 00:19:08
# Fork: 1 of 1
# Warmup Iteration   1: 1399.013 ns/op
# Warmup Iteration   2: 1301.647 ns/op
# Warmup Iteration   3: 1299.507 ns/op
# Warmup Iteration   4: 1286.516 ns/op
# Warmup Iteration   5: 1300.220 ns/op
Iteration   1: 1330.429 ns/op
Iteration   2: 1302.319 ns/op
Iteration   3: 1295.587 ns/op
Iteration   4: 1273.616 ns/op
Iteration   5: 1306.329 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1301.656 ±(99.9%) 78.756 ns/op [Average]
  (min, avg, max) = (1273.616, 1301.656, 1330.429), stdev = 20.453
  CI (99.9%): [1222.900, 1380.412] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 500)

# Run progress: 44.90% complete, ETA 00:18:58
# Fork: 1 of 1
# Warmup Iteration   1: 1986.495 ns/op
# Warmup Iteration   2: 1854.106 ns/op
# Warmup Iteration   3: 1802.432 ns/op
# Warmup Iteration   4: 1835.696 ns/op
# Warmup Iteration   5: 1836.281 ns/op
Iteration   1: 1809.604 ns/op
Iteration   2: 1850.639 ns/op
Iteration   3: 1816.013 ns/op
Iteration   4: 1870.373 ns/op
Iteration   5: 1854.016 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1840.129 ±(99.9%) 100.621 ns/op [Average]
  (min, avg, max) = (1809.604, 1840.129, 1870.373), stdev = 26.131
  CI (99.9%): [1739.508, 1940.750] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 45.41% complete, ETA 00:18:47
# Fork: 1 of 1
# Warmup Iteration   1: 2778.964 ns/op
# Warmup Iteration   2: 2585.838 ns/op
# Warmup Iteration   3: 2714.313 ns/op
# Warmup Iteration   4: 2465.349 ns/op
# Warmup Iteration   5: 2546.850 ns/op
Iteration   1: 2462.684 ns/op
Iteration   2: 2698.271 ns/op
Iteration   3: 2494.144 ns/op
Iteration   4: 2515.369 ns/op
Iteration   5: 2533.207 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  2540.735 ±(99.9%) 353.863 ns/op [Average]
  (min, avg, max) = (2462.684, 2540.735, 2698.271), stdev = 91.897
  CI (99.9%): [2186.871, 2894.598] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 45.92% complete, ETA 00:18:37
# Fork: 1 of 1
# Warmup Iteration   1: 15506.628 ns/op
# Warmup Iteration   2: 14686.525 ns/op
# Warmup Iteration   3: 13902.583 ns/op
# Warmup Iteration   4: 13784.436 ns/op
# Warmup Iteration   5: 14160.029 ns/op
Iteration   1: 14009.912 ns/op
Iteration   2: 13668.687 ns/op
Iteration   3: 13812.619 ns/op
Iteration   4: 13878.648 ns/op
Iteration   5: 13984.740 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  13870.921 ±(99.9%) 532.972 ns/op [Average]
  (min, avg, max) = (13668.687, 13870.921, 14009.912), stdev = 138.411
  CI (99.9%): [13337.949, 14403.893] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 1)

# Run progress: 46.43% complete, ETA 00:18:26
# Fork: 1 of 1
# Warmup Iteration   1: 1140.889 ns/op
# Warmup Iteration   2: 1154.898 ns/op
# Warmup Iteration   3: 1138.605 ns/op
# Warmup Iteration   4: 1129.751 ns/op
# Warmup Iteration   5: 1105.428 ns/op
Iteration   1: 1092.309 ns/op
Iteration   2: 1099.176 ns/op
Iteration   3: 1109.293 ns/op
Iteration   4: 1122.755 ns/op
Iteration   5: 1081.363 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1100.979 ±(99.9%) 61.083 ns/op [Average]
  (min, avg, max) = (1081.363, 1100.979, 1122.755), stdev = 15.863
  CI (99.9%): [1039.896, 1162.062] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 10)

# Run progress: 46.94% complete, ETA 00:18:16
# Fork: 1 of 1
# Warmup Iteration   1: 1231.684 ns/op
# Warmup Iteration   2: 1208.018 ns/op
# Warmup Iteration   3: 1185.034 ns/op
# Warmup Iteration   4: 1169.351 ns/op
# Warmup Iteration   5: 1148.980 ns/op
Iteration   1: 1192.401 ns/op
Iteration   2: 1209.571 ns/op
Iteration   3: 1176.603 ns/op
Iteration   4: 1151.620 ns/op
Iteration   5: 1151.679 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1176.375 ±(99.9%) 97.823 ns/op [Average]
  (min, avg, max) = (1151.620, 1176.375, 1209.571), stdev = 25.404
  CI (99.9%): [1078.552, 1274.198] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 50)

# Run progress: 47.45% complete, ETA 00:18:05
# Fork: 1 of 1
# Warmup Iteration   1: 1346.276 ns/op
# Warmup Iteration   2: 1250.008 ns/op
# Warmup Iteration   3: 1223.135 ns/op
# Warmup Iteration   4: 1233.548 ns/op
# Warmup Iteration   5: 1197.236 ns/op
Iteration   1: 1221.833 ns/op
Iteration   2: 1198.085 ns/op
Iteration   3: 1232.981 ns/op
Iteration   4: 1220.877 ns/op
Iteration   5: 1224.633 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1219.682 ±(99.9%) 49.979 ns/op [Average]
  (min, avg, max) = (1198.085, 1219.682, 1232.981), stdev = 12.979
  CI (99.9%): [1169.703, 1269.660] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 100)

# Run progress: 47.96% complete, ETA 00:17:54
# Fork: 1 of 1
# Warmup Iteration   1: 1391.611 ns/op
# Warmup Iteration   2: 1310.655 ns/op
# Warmup Iteration   3: 1313.893 ns/op
# Warmup Iteration   4: 1291.718 ns/op
# Warmup Iteration   5: 1282.292 ns/op
Iteration   1: 1280.755 ns/op
Iteration   2: 1290.774 ns/op
Iteration   3: 1276.911 ns/op
Iteration   4: 1289.052 ns/op
Iteration   5: 1292.925 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1286.083 ±(99.9%) 26.549 ns/op [Average]
  (min, avg, max) = (1276.911, 1286.083, 1292.925), stdev = 6.895
  CI (99.9%): [1259.534, 1312.633] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 500)

# Run progress: 48.47% complete, ETA 00:17:44
# Fork: 1 of 1
# Warmup Iteration   1: 1938.215 ns/op
# Warmup Iteration   2: 1819.800 ns/op
# Warmup Iteration   3: 1812.673 ns/op
# Warmup Iteration   4: 1820.928 ns/op
# Warmup Iteration   5: 1822.101 ns/op
Iteration   1: 1826.026 ns/op
Iteration   2: 1815.361 ns/op
Iteration   3: 1788.654 ns/op
Iteration   4: 1798.323 ns/op
Iteration   5: 1814.962 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1808.665 ±(99.9%) 57.544 ns/op [Average]
  (min, avg, max) = (1788.654, 1808.665, 1826.026), stdev = 14.944
  CI (99.9%): [1751.121, 1866.209] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 1000)

# Run progress: 48.98% complete, ETA 00:17:33
# Fork: 1 of 1
# Warmup Iteration   1: 2785.966 ns/op
# Warmup Iteration   2: 2650.635 ns/op
# Warmup Iteration   3: 2614.447 ns/op
# Warmup Iteration   4: 2500.377 ns/op
# Warmup Iteration   5: 2600.905 ns/op
Iteration   1: 2522.101 ns/op
Iteration   2: 2615.702 ns/op
Iteration   3: 2573.984 ns/op
Iteration   4: 2742.548 ns/op
Iteration   5: 2566.406 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  2604.148 ±(99.9%) 324.199 ns/op [Average]
  (min, avg, max) = (2522.101, 2604.148, 2742.548), stdev = 84.193
  CI (99.9%): [2279.949, 2928.347] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.49% complete, ETA 00:17:23
# Fork: 1 of 1
# Warmup Iteration   1: 16366.463 ns/op
# Warmup Iteration   2: 14370.523 ns/op
# Warmup Iteration   3: 14415.853 ns/op
# Warmup Iteration   4: 13704.081 ns/op
# Warmup Iteration   5: 13745.674 ns/op
Iteration   1: 13707.578 ns/op
Iteration   2: 13822.298 ns/op
Iteration   3: 14640.288 ns/op
Iteration   4: 13833.785 ns/op
Iteration   5: 13801.264 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  13961.043 ±(99.9%) 1474.591 ns/op [Average]
  (min, avg, max) = (13707.578, 13961.043, 14640.288), stdev = 382.947
  CI (99.9%): [12486.451, 15435.634] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:17:12
# Fork: 1 of 1
# Warmup Iteration   1: 635.545 ns/op
# Warmup Iteration   2: 609.552 ns/op
# Warmup Iteration   3: 596.639 ns/op
# Warmup Iteration   4: 604.632 ns/op
# Warmup Iteration   5: 644.554 ns/op
Iteration   1: 584.904 ns/op
Iteration   2: 586.886 ns/op
Iteration   3: 580.350 ns/op
Iteration   4: 568.963 ns/op
Iteration   5: 587.959 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  581.813 ±(99.9%) 29.847 ns/op [Average]
  (min, avg, max) = (568.963, 581.813, 587.959), stdev = 7.751
  CI (99.9%): [551.965, 611.660] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.51% complete, ETA 00:17:01
# Fork: 1 of 1
# Warmup Iteration   1: 675.719 ns/op
# Warmup Iteration   2: 672.881 ns/op
# Warmup Iteration   3: 628.133 ns/op
# Warmup Iteration   4: 636.847 ns/op
# Warmup Iteration   5: 625.771 ns/op
Iteration   1: 634.061 ns/op
Iteration   2: 625.668 ns/op
Iteration   3: 626.836 ns/op
Iteration   4: 620.223 ns/op
Iteration   5: 621.034 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  625.565 ±(99.9%) 21.342 ns/op [Average]
  (min, avg, max) = (620.223, 625.565, 634.061), stdev = 5.542
  CI (99.9%): [604.223, 646.907] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 51.02% complete, ETA 00:16:51
# Fork: 1 of 1
# Warmup Iteration   1: 799.313 ns/op
# Warmup Iteration   2: 719.623 ns/op
# Warmup Iteration   3: 701.156 ns/op
# Warmup Iteration   4: 704.972 ns/op
# Warmup Iteration   5: 697.243 ns/op
Iteration   1: 709.536 ns/op
Iteration   2: 707.003 ns/op
Iteration   3: 713.346 ns/op
Iteration   4: 698.197 ns/op
Iteration   5: 714.233 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  708.463 ±(99.9%) 24.793 ns/op [Average]
  (min, avg, max) = (698.197, 708.463, 714.233), stdev = 6.439
  CI (99.9%): [683.670, 733.256] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 51.53% complete, ETA 00:16:40
# Fork: 1 of 1
# Warmup Iteration   1: 896.908 ns/op
# Warmup Iteration   2: 810.161 ns/op
# Warmup Iteration   3: 800.237 ns/op
# Warmup Iteration   4: 786.872 ns/op
# Warmup Iteration   5: 783.165 ns/op
Iteration   1: 793.987 ns/op
Iteration   2: 801.363 ns/op
Iteration   3: 802.952 ns/op
Iteration   4: 818.236 ns/op
Iteration   5: 807.914 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  804.891 ±(99.9%) 34.567 ns/op [Average]
  (min, avg, max) = (793.987, 804.891, 818.236), stdev = 8.977
  CI (99.9%): [770.324, 839.457] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 52.04% complete, ETA 00:16:30
# Fork: 1 of 1
# Warmup Iteration   1: 1484.278 ns/op
# Warmup Iteration   2: 1335.201 ns/op
# Warmup Iteration   3: 1315.947 ns/op
# Warmup Iteration   4: 1306.574 ns/op
# Warmup Iteration   5: 1297.906 ns/op
Iteration   1: 1326.749 ns/op
Iteration   2: 1396.785 ns/op
Iteration   3: 1339.627 ns/op
Iteration   4: 1296.385 ns/op
Iteration   5: 1341.615 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  1340.232 ±(99.9%) 140.230 ns/op [Average]
  (min, avg, max) = (1296.385, 1340.232, 1396.785), stdev = 36.417
  CI (99.9%): [1200.002, 1480.462] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 52.55% complete, ETA 00:16:19
# Fork: 1 of 1
# Warmup Iteration   1: 2348.232 ns/op
# Warmup Iteration   2: 2147.819 ns/op
# Warmup Iteration   3: 2108.134 ns/op
# Warmup Iteration   4: 2103.461 ns/op
# Warmup Iteration   5: 2110.178 ns/op
Iteration   1: 2023.481 ns/op
Iteration   2: 1956.997 ns/op
Iteration   3: 1955.903 ns/op
Iteration   4: 1952.483 ns/op
Iteration   5: 1969.464 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  1971.666 ±(99.9%) 114.248 ns/op [Average]
  (min, avg, max) = (1952.483, 1971.666, 2023.481), stdev = 29.670
  CI (99.9%): [1857.417, 2085.914] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 53.06% complete, ETA 00:16:09
# Fork: 1 of 1
# Warmup Iteration   1: 14522.852 ns/op
# Warmup Iteration   2: 13464.815 ns/op
# Warmup Iteration   3: 12575.682 ns/op
# Warmup Iteration   4: 12610.288 ns/op
# Warmup Iteration   5: 12740.107 ns/op
Iteration   1: 12592.589 ns/op
Iteration   2: 12661.711 ns/op
Iteration   3: 12601.065 ns/op
Iteration   4: 12624.024 ns/op
Iteration   5: 12589.037 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  12613.685 ±(99.9%) 115.924 ns/op [Average]
  (min, avg, max) = (12589.037, 12613.685, 12661.711), stdev = 30.105
  CI (99.9%): [12497.761, 12729.609] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 1)

# Run progress: 53.57% complete, ETA 00:15:58
# Fork: 1 of 1
# Warmup Iteration   1: 612.279 ns/op
# Warmup Iteration   2: 588.178 ns/op
# Warmup Iteration   3: 575.036 ns/op
# Warmup Iteration   4: 585.023 ns/op
# Warmup Iteration   5: 558.522 ns/op
Iteration   1: 559.668 ns/op
Iteration   2: 559.806 ns/op
Iteration   3: 560.098 ns/op
Iteration   4: 564.798 ns/op
Iteration   5: 559.262 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  560.727 ±(99.9%) 8.840 ns/op [Average]
  (min, avg, max) = (559.262, 560.727, 564.798), stdev = 2.296
  CI (99.9%): [551.886, 569.567] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 10)

# Run progress: 54.08% complete, ETA 00:15:48
# Fork: 1 of 1
# Warmup Iteration   1: 652.879 ns/op
# Warmup Iteration   2: 634.072 ns/op
# Warmup Iteration   3: 593.043 ns/op
# Warmup Iteration   4: 612.188 ns/op
# Warmup Iteration   5: 597.751 ns/op
Iteration   1: 599.180 ns/op
Iteration   2: 594.740 ns/op
Iteration   3: 597.737 ns/op
Iteration   4: 597.615 ns/op
Iteration   5: 594.879 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  596.830 ±(99.9%) 7.490 ns/op [Average]
  (min, avg, max) = (594.740, 596.830, 599.180), stdev = 1.945
  CI (99.9%): [589.340, 604.321] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 50)

# Run progress: 54.59% complete, ETA 00:15:37
# Fork: 1 of 1
# Warmup Iteration   1: 755.795 ns/op
# Warmup Iteration   2: 686.838 ns/op
# Warmup Iteration   3: 673.438 ns/op
# Warmup Iteration   4: 675.449 ns/op
# Warmup Iteration   5: 671.316 ns/op
Iteration   1: 680.700 ns/op
Iteration   2: 672.106 ns/op
Iteration   3: 675.771 ns/op
Iteration   4: 671.995 ns/op
Iteration   5: 681.747 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  676.464 ±(99.9%) 17.782 ns/op [Average]
  (min, avg, max) = (671.995, 676.464, 681.747), stdev = 4.618
  CI (99.9%): [658.682, 694.246] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 100)

# Run progress: 55.10% complete, ETA 00:15:27
# Fork: 1 of 1
# Warmup Iteration   1: 850.831 ns/op
# Warmup Iteration   2: 775.979 ns/op
# Warmup Iteration   3: 767.769 ns/op
# Warmup Iteration   4: 762.529 ns/op
# Warmup Iteration   5: 770.903 ns/op
Iteration   1: 766.319 ns/op
Iteration   2: 778.612 ns/op
Iteration   3: 763.998 ns/op
Iteration   4: 757.871 ns/op
Iteration   5: 757.402 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  764.840 ±(99.9%) 33.150 ns/op [Average]
  (min, avg, max) = (757.402, 764.840, 778.612), stdev = 8.609
  CI (99.9%): [731.690, 797.991] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 500)

# Run progress: 55.61% complete, ETA 00:15:16
# Fork: 1 of 1
# Warmup Iteration   1: 1390.861 ns/op
# Warmup Iteration   2: 1305.163 ns/op
# Warmup Iteration   3: 1288.921 ns/op
# Warmup Iteration   4: 1257.226 ns/op
# Warmup Iteration   5: 1250.019 ns/op
Iteration   1: 1249.809 ns/op
Iteration   2: 1253.669 ns/op
Iteration   3: 1254.648 ns/op
Iteration   4: 1247.614 ns/op
Iteration   5: 1244.813 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  1250.111 ±(99.9%) 15.834 ns/op [Average]
  (min, avg, max) = (1244.813, 1250.111, 1254.648), stdev = 4.112
  CI (99.9%): [1234.277, 1265.944] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 1000)

# Run progress: 56.12% complete, ETA 00:15:05
# Fork: 1 of 1
# Warmup Iteration   1: 2229.521 ns/op
# Warmup Iteration   2: 2040.563 ns/op
# Warmup Iteration   3: 1994.944 ns/op
# Warmup Iteration   4: 1974.788 ns/op
# Warmup Iteration   5: 1974.213 ns/op
Iteration   1: 1966.584 ns/op
Iteration   2: 1965.122 ns/op
Iteration   3: 2012.992 ns/op
Iteration   4: 1966.295 ns/op
Iteration   5: 1966.980 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  1975.595 ±(99.9%) 80.545 ns/op [Average]
  (min, avg, max) = (1965.122, 1975.595, 2012.992), stdev = 20.917
  CI (99.9%): [1895.049, 2056.140] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 10000)

# Run progress: 56.63% complete, ETA 00:14:55
# Fork: 1 of 1
# Warmup Iteration   1: 14623.329 ns/op
# Warmup Iteration   2: 13457.833 ns/op
# Warmup Iteration   3: 12503.696 ns/op
# Warmup Iteration   4: 12912.307 ns/op
# Warmup Iteration   5: 12589.009 ns/op
Iteration   1: 12574.418 ns/op
Iteration   2: 12562.965 ns/op
Iteration   3: 12555.686 ns/op
Iteration   4: 12505.577 ns/op
Iteration   5: 12545.125 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  12548.754 ±(99.9%) 101.626 ns/op [Average]
  (min, avg, max) = (12505.577, 12548.754, 12574.418), stdev = 26.392
  CI (99.9%): [12447.129, 12650.380] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 57.14% complete, ETA 00:14:44
# Fork: 1 of 1
# Warmup Iteration   1: 487.842 ns/op
# Warmup Iteration   2: 465.546 ns/op
# Warmup Iteration   3: 457.147 ns/op
# Warmup Iteration   4: 445.650 ns/op
# Warmup Iteration   5: 445.722 ns/op
Iteration   1: 446.538 ns/op
Iteration   2: 445.067 ns/op
Iteration   3: 447.304 ns/op
Iteration   4: 447.301 ns/op
Iteration   5: 442.638 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  445.769 ±(99.9%) 7.602 ns/op [Average]
  (min, avg, max) = (442.638, 445.769, 447.304), stdev = 1.974
  CI (99.9%): [438.167, 453.372] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 57.65% complete, ETA 00:14:34
# Fork: 1 of 1
# Warmup Iteration   1: 529.459 ns/op
# Warmup Iteration   2: 498.124 ns/op
# Warmup Iteration   3: 476.999 ns/op
# Warmup Iteration   4: 476.012 ns/op
# Warmup Iteration   5: 474.886 ns/op
Iteration   1: 475.762 ns/op
Iteration   2: 474.894 ns/op
Iteration   3: 474.789 ns/op
Iteration   4: 477.167 ns/op
Iteration   5: 478.381 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  476.199 ±(99.9%) 5.960 ns/op [Average]
  (min, avg, max) = (474.789, 476.199, 478.381), stdev = 1.548
  CI (99.9%): [470.239, 482.159] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 58.16% complete, ETA 00:14:23
# Fork: 1 of 1
# Warmup Iteration   1: 624.453 ns/op
# Warmup Iteration   2: 573.682 ns/op
# Warmup Iteration   3: 561.537 ns/op
# Warmup Iteration   4: 563.409 ns/op
# Warmup Iteration   5: 563.660 ns/op
Iteration   1: 582.544 ns/op
Iteration   2: 619.922 ns/op
Iteration   3: 564.445 ns/op
Iteration   4: 560.786 ns/op
Iteration   5: 561.056 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  577.750 ±(99.9%) 97.127 ns/op [Average]
  (min, avg, max) = (560.786, 577.750, 619.922), stdev = 25.224
  CI (99.9%): [480.623, 674.878] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 58.67% complete, ETA 00:14:13
# Fork: 1 of 1
# Warmup Iteration   1: 707.919 ns/op
# Warmup Iteration   2: 656.475 ns/op
# Warmup Iteration   3: 643.740 ns/op
# Warmup Iteration   4: 640.155 ns/op
# Warmup Iteration   5: 642.128 ns/op
Iteration   1: 639.912 ns/op
Iteration   2: 639.241 ns/op
Iteration   3: 634.574 ns/op
Iteration   4: 634.096 ns/op
Iteration   5: 635.860 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  636.736 ±(99.9%) 10.328 ns/op [Average]
  (min, avg, max) = (634.096, 636.736, 639.912), stdev = 2.682
  CI (99.9%): [626.409, 647.064] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 59.18% complete, ETA 00:14:02
# Fork: 1 of 1
# Warmup Iteration   1: 1254.937 ns/op
# Warmup Iteration   2: 1175.439 ns/op
# Warmup Iteration   3: 1128.756 ns/op
# Warmup Iteration   4: 1102.333 ns/op
# Warmup Iteration   5: 1098.808 ns/op
Iteration   1: 1098.311 ns/op
Iteration   2: 1099.016 ns/op
Iteration   3: 1098.010 ns/op
Iteration   4: 1104.290 ns/op
Iteration   5: 1098.511 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  1099.627 ±(99.9%) 10.136 ns/op [Average]
  (min, avg, max) = (1098.010, 1099.627, 1104.290), stdev = 2.632
  CI (99.9%): [1089.492, 1109.763] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 59.69% complete, ETA 00:13:52
# Fork: 1 of 1
# Warmup Iteration   1: 2075.038 ns/op
# Warmup Iteration   2: 1931.100 ns/op
# Warmup Iteration   3: 1866.438 ns/op
# Warmup Iteration   4: 1841.035 ns/op
# Warmup Iteration   5: 1832.634 ns/op
Iteration   1: 1841.307 ns/op
Iteration   2: 1838.070 ns/op
Iteration   3: 1839.921 ns/op
Iteration   4: 1834.518 ns/op
Iteration   5: 1832.085 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  1837.180 ±(99.9%) 14.711 ns/op [Average]
  (min, avg, max) = (1832.085, 1837.180, 1841.307), stdev = 3.820
  CI (99.9%): [1822.470, 1851.891] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 60.20% complete, ETA 00:13:41
# Fork: 1 of 1
# Warmup Iteration   1: 14418.243 ns/op
# Warmup Iteration   2: 13082.153 ns/op
# Warmup Iteration   3: 12369.393 ns/op
# Warmup Iteration   4: 12769.029 ns/op
# Warmup Iteration   5: 12324.968 ns/op
Iteration   1: 12674.076 ns/op
Iteration   2: 12316.310 ns/op
Iteration   3: 12377.675 ns/op
Iteration   4: 12290.655 ns/op
Iteration   5: 12385.047 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  12408.753 ±(99.9%) 591.601 ns/op [Average]
  (min, avg, max) = (12290.655, 12408.753, 12674.076), stdev = 153.637
  CI (99.9%): [11817.152, 13000.353] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 1)

# Run progress: 60.71% complete, ETA 00:13:31
# Fork: 1 of 1
# Warmup Iteration   1: 488.995 ns/op
# Warmup Iteration   2: 470.288 ns/op
# Warmup Iteration   3: 444.727 ns/op
# Warmup Iteration   4: 445.904 ns/op
# Warmup Iteration   5: 445.993 ns/op
Iteration   1: 446.941 ns/op
Iteration   2: 445.275 ns/op
Iteration   3: 446.770 ns/op
Iteration   4: 447.283 ns/op
Iteration   5: 445.940 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  446.442 ±(99.9%) 3.150 ns/op [Average]
  (min, avg, max) = (445.275, 446.442, 447.283), stdev = 0.818
  CI (99.9%): [443.292, 449.592] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 10)

# Run progress: 61.22% complete, ETA 00:13:20
# Fork: 1 of 1
# Warmup Iteration   1: 531.415 ns/op
# Warmup Iteration   2: 496.732 ns/op
# Warmup Iteration   3: 486.018 ns/op
# Warmup Iteration   4: 484.434 ns/op
# Warmup Iteration   5: 484.500 ns/op
Iteration   1: 484.551 ns/op
Iteration   2: 482.805 ns/op
Iteration   3: 483.848 ns/op
Iteration   4: 485.314 ns/op
Iteration   5: 484.808 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  484.265 ±(99.9%) 3.744 ns/op [Average]
  (min, avg, max) = (482.805, 484.265, 485.314), stdev = 0.972
  CI (99.9%): [480.521, 488.010] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 50)

# Run progress: 61.73% complete, ETA 00:13:09
# Fork: 1 of 1
# Warmup Iteration   1: 626.956 ns/op
# Warmup Iteration   2: 569.370 ns/op
# Warmup Iteration   3: 556.574 ns/op
# Warmup Iteration   4: 559.416 ns/op
# Warmup Iteration   5: 569.036 ns/op
Iteration   1: 598.032 ns/op
Iteration   2: 559.017 ns/op
Iteration   3: 569.470 ns/op
Iteration   4: 556.647 ns/op
Iteration   5: 557.027 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  568.039 ±(99.9%) 67.635 ns/op [Average]
  (min, avg, max) = (556.647, 568.039, 598.032), stdev = 17.565
  CI (99.9%): [500.403, 635.674] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 100)

# Run progress: 62.24% complete, ETA 00:12:59
# Fork: 1 of 1
# Warmup Iteration   1: 717.976 ns/op
# Warmup Iteration   2: 643.489 ns/op
# Warmup Iteration   3: 631.768 ns/op
# Warmup Iteration   4: 633.724 ns/op
# Warmup Iteration   5: 633.568 ns/op
Iteration   1: 632.540 ns/op
Iteration   2: 630.005 ns/op
Iteration   3: 625.999 ns/op
Iteration   4: 624.837 ns/op
Iteration   5: 626.384 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  627.953 ±(99.9%) 12.364 ns/op [Average]
  (min, avg, max) = (624.837, 627.953, 632.540), stdev = 3.211
  CI (99.9%): [615.590, 640.317] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 500)

# Run progress: 62.76% complete, ETA 00:12:48
# Fork: 1 of 1
# Warmup Iteration   1: 1279.134 ns/op
# Warmup Iteration   2: 1134.871 ns/op
# Warmup Iteration   3: 1110.682 ns/op
# Warmup Iteration   4: 1091.718 ns/op
# Warmup Iteration   5: 1094.006 ns/op
Iteration   1: 1096.363 ns/op
Iteration   2: 1094.856 ns/op
Iteration   3: 1094.541 ns/op
Iteration   4: 1094.358 ns/op
Iteration   5: 1109.928 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  1098.009 ±(99.9%) 25.837 ns/op [Average]
  (min, avg, max) = (1094.358, 1098.009, 1109.928), stdev = 6.710
  CI (99.9%): [1072.173, 1123.846] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 1000)

# Run progress: 63.27% complete, ETA 00:12:38
# Fork: 1 of 1
# Warmup Iteration   1: 2083.845 ns/op
# Warmup Iteration   2: 1947.363 ns/op
# Warmup Iteration   3: 1862.302 ns/op
# Warmup Iteration   4: 1831.655 ns/op
# Warmup Iteration   5: 1837.840 ns/op
Iteration   1: 1837.842 ns/op
Iteration   2: 1842.823 ns/op
Iteration   3: 1857.589 ns/op
Iteration   4: 1842.514 ns/op
Iteration   5: 1834.168 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  1842.987 ±(99.9%) 34.318 ns/op [Average]
  (min, avg, max) = (1834.168, 1842.987, 1857.589), stdev = 8.912
  CI (99.9%): [1808.670, 1877.305] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 10000)

# Run progress: 63.78% complete, ETA 00:12:27
# Fork: 1 of 1
# Warmup Iteration   1: 14605.198 ns/op
# Warmup Iteration   2: 13209.056 ns/op
# Warmup Iteration   3: 12394.754 ns/op
# Warmup Iteration   4: 12306.952 ns/op
# Warmup Iteration   5: 12431.736 ns/op
Iteration   1: 12407.042 ns/op
Iteration   2: 12405.453 ns/op
Iteration   3: 12400.666 ns/op
Iteration   4: 12364.177 ns/op
Iteration   5: 12373.285 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  12390.125 ±(99.9%) 76.751 ns/op [Average]
  (min, avg, max) = (12364.177, 12390.125, 12407.042), stdev = 19.932
  CI (99.9%): [12313.374, 12466.875] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 64.29% complete, ETA 00:12:17
# Fork: 1 of 1
# Warmup Iteration   1: 1469.893 ns/op
# Warmup Iteration   2: 1454.370 ns/op
# Warmup Iteration   3: 1426.975 ns/op
# Warmup Iteration   4: 1444.153 ns/op
# Warmup Iteration   5: 1428.487 ns/op
Iteration   1: 1407.064 ns/op
Iteration   2: 1401.789 ns/op
Iteration   3: 1401.964 ns/op
Iteration   4: 1408.696 ns/op
Iteration   5: 1419.820 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1407.867 ±(99.9%) 28.296 ns/op [Average]
  (min, avg, max) = (1401.789, 1407.867, 1419.820), stdev = 7.348
  CI (99.9%): [1379.571, 1436.162] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 64.80% complete, ETA 00:12:06
# Fork: 1 of 1
# Warmup Iteration   1: 1516.029 ns/op
# Warmup Iteration   2: 1501.528 ns/op
# Warmup Iteration   3: 1479.683 ns/op
# Warmup Iteration   4: 1489.379 ns/op
# Warmup Iteration   5: 1460.366 ns/op
Iteration   1: 1450.551 ns/op
Iteration   2: 1467.578 ns/op
Iteration   3: 1460.466 ns/op
Iteration   4: 1453.917 ns/op
Iteration   5: 1453.601 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1457.222 ±(99.9%) 26.280 ns/op [Average]
  (min, avg, max) = (1450.551, 1457.222, 1467.578), stdev = 6.825
  CI (99.9%): [1430.943, 1483.502] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 65.31% complete, ETA 00:11:56
# Fork: 1 of 1
# Warmup Iteration   1: 1608.024 ns/op
# Warmup Iteration   2: 1564.128 ns/op
# Warmup Iteration   3: 1511.485 ns/op
# Warmup Iteration   4: 1497.331 ns/op
# Warmup Iteration   5: 1503.759 ns/op
Iteration   1: 1507.128 ns/op
Iteration   2: 1502.439 ns/op
Iteration   3: 1505.107 ns/op
Iteration   4: 1581.230 ns/op
Iteration   5: 1515.404 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1522.261 ±(99.9%) 128.299 ns/op [Average]
  (min, avg, max) = (1502.439, 1522.261, 1581.230), stdev = 33.319
  CI (99.9%): [1393.963, 1650.560] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 65.82% complete, ETA 00:11:45
# Fork: 1 of 1
# Warmup Iteration   1: 1851.476 ns/op
# Warmup Iteration   2: 1682.019 ns/op
# Warmup Iteration   3: 1650.174 ns/op
# Warmup Iteration   4: 1654.922 ns/op
# Warmup Iteration   5: 1653.279 ns/op
Iteration   1: 1655.534 ns/op
Iteration   2: 1652.103 ns/op
Iteration   3: 1648.921 ns/op
Iteration   4: 1660.269 ns/op
Iteration   5: 1642.491 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1651.864 ±(99.9%) 25.879 ns/op [Average]
  (min, avg, max) = (1642.491, 1651.864, 1660.269), stdev = 6.721
  CI (99.9%): [1625.984, 1677.743] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 66.33% complete, ETA 00:11:34
# Fork: 1 of 1
# Warmup Iteration   1: 2358.813 ns/op
# Warmup Iteration   2: 2233.947 ns/op
# Warmup Iteration   3: 2264.894 ns/op
# Warmup Iteration   4: 2217.838 ns/op
# Warmup Iteration   5: 2218.826 ns/op
Iteration   1: 2171.057 ns/op
Iteration   2: 2173.440 ns/op
Iteration   3: 2178.709 ns/op
Iteration   4: 2231.092 ns/op
Iteration   5: 2256.945 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  2202.249 ±(99.9%) 151.364 ns/op [Average]
  (min, avg, max) = (2171.057, 2202.249, 2256.945), stdev = 39.309
  CI (99.9%): [2050.885, 2353.612] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 66.84% complete, ETA 00:11:24
# Fork: 1 of 1
# Warmup Iteration   1: 3093.980 ns/op
# Warmup Iteration   2: 2899.614 ns/op
# Warmup Iteration   3: 2798.259 ns/op
# Warmup Iteration   4: 2743.936 ns/op
# Warmup Iteration   5: 2746.117 ns/op
Iteration   1: 2756.239 ns/op
Iteration   2: 2743.358 ns/op
Iteration   3: 2739.266 ns/op
Iteration   4: 2723.527 ns/op
Iteration   5: 2750.536 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  2742.585 ±(99.9%) 48.113 ns/op [Average]
  (min, avg, max) = (2723.527, 2742.585, 2756.239), stdev = 12.495
  CI (99.9%): [2694.473, 2790.698] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 67.35% complete, ETA 00:11:13
# Fork: 1 of 1
# Warmup Iteration   1: 15273.524 ns/op
# Warmup Iteration   2: 14231.714 ns/op
# Warmup Iteration   3: 13205.327 ns/op
# Warmup Iteration   4: 13234.130 ns/op
# Warmup Iteration   5: 13216.433 ns/op
Iteration   1: 13243.116 ns/op
Iteration   2: 13575.383 ns/op
Iteration   3: 13166.742 ns/op
Iteration   4: 13356.763 ns/op
Iteration   5: 13381.445 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  13344.690 ±(99.9%) 598.706 ns/op [Average]
  (min, avg, max) = (13166.742, 13344.690, 13575.383), stdev = 155.482
  CI (99.9%): [12745.984, 13943.396] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 1)

# Run progress: 67.86% complete, ETA 00:11:03
# Fork: 1 of 1
# Warmup Iteration   1: 1518.106 ns/op
# Warmup Iteration   2: 1468.954 ns/op
# Warmup Iteration   3: 1466.715 ns/op
# Warmup Iteration   4: 1457.078 ns/op
# Warmup Iteration   5: 1470.691 ns/op
Iteration   1: 1496.670 ns/op
Iteration   2: 1429.410 ns/op
Iteration   3: 1454.179 ns/op
Iteration   4: 1428.879 ns/op
Iteration   5: 1436.821 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1449.192 ±(99.9%) 109.523 ns/op [Average]
  (min, avg, max) = (1428.879, 1449.192, 1496.670), stdev = 28.443
  CI (99.9%): [1339.669, 1558.714] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 10)

# Run progress: 68.37% complete, ETA 00:10:52
# Fork: 1 of 1
# Warmup Iteration   1: 1509.834 ns/op
# Warmup Iteration   2: 1516.872 ns/op
# Warmup Iteration   3: 1478.524 ns/op
# Warmup Iteration   4: 1519.842 ns/op
# Warmup Iteration   5: 1446.125 ns/op
Iteration   1: 1444.382 ns/op
Iteration   2: 1441.051 ns/op
Iteration   3: 1448.446 ns/op
Iteration   4: 1449.065 ns/op
Iteration   5: 1465.767 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1449.742 ±(99.9%) 36.692 ns/op [Average]
  (min, avg, max) = (1441.051, 1449.742, 1465.767), stdev = 9.529
  CI (99.9%): [1413.050, 1486.434] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 50)

# Run progress: 68.88% complete, ETA 00:10:42
# Fork: 1 of 1
# Warmup Iteration   1: 1611.531 ns/op
# Warmup Iteration   2: 1573.523 ns/op
# Warmup Iteration   3: 1528.679 ns/op
# Warmup Iteration   4: 1491.540 ns/op
# Warmup Iteration   5: 1503.188 ns/op
Iteration   1: 1502.981 ns/op
Iteration   2: 1502.823 ns/op
Iteration   3: 1506.747 ns/op
Iteration   4: 1496.362 ns/op
Iteration   5: 1516.981 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1505.179 ±(99.9%) 29.190 ns/op [Average]
  (min, avg, max) = (1496.362, 1505.179, 1516.981), stdev = 7.581
  CI (99.9%): [1475.988, 1534.369] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 100)

# Run progress: 69.39% complete, ETA 00:10:31
# Fork: 1 of 1
# Warmup Iteration   1: 1849.806 ns/op
# Warmup Iteration   2: 1685.369 ns/op
# Warmup Iteration   3: 1661.541 ns/op
# Warmup Iteration   4: 1655.362 ns/op
# Warmup Iteration   5: 1664.201 ns/op
Iteration   1: 1670.131 ns/op
Iteration   2: 1657.203 ns/op
Iteration   3: 1660.826 ns/op
Iteration   4: 1655.785 ns/op
Iteration   5: 1646.407 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1658.070 ±(99.9%) 33.073 ns/op [Average]
  (min, avg, max) = (1646.407, 1658.070, 1670.131), stdev = 8.589
  CI (99.9%): [1624.998, 1691.143] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 500)

# Run progress: 69.90% complete, ETA 00:10:21
# Fork: 1 of 1
# Warmup Iteration   1: 2307.527 ns/op
# Warmup Iteration   2: 2214.567 ns/op
# Warmup Iteration   3: 2202.727 ns/op
# Warmup Iteration   4: 2183.968 ns/op
# Warmup Iteration   5: 2163.689 ns/op
Iteration   1: 2159.749 ns/op
Iteration   2: 2175.242 ns/op
Iteration   3: 2162.278 ns/op
Iteration   4: 2203.434 ns/op
Iteration   5: 2227.509 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  2185.643 ±(99.9%) 112.164 ns/op [Average]
  (min, avg, max) = (2159.749, 2185.643, 2227.509), stdev = 29.129
  CI (99.9%): [2073.479, 2297.806] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 1000)

# Run progress: 70.41% complete, ETA 00:10:10
# Fork: 1 of 1
# Warmup Iteration   1: 2967.301 ns/op
# Warmup Iteration   2: 2837.782 ns/op
# Warmup Iteration   3: 2808.601 ns/op
# Warmup Iteration   4: 2755.478 ns/op
# Warmup Iteration   5: 2758.953 ns/op
Iteration   1: 2762.419 ns/op
Iteration   2: 2767.295 ns/op
Iteration   3: 2736.797 ns/op
Iteration   4: 2749.504 ns/op
Iteration   5: 2755.672 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  2754.337 ±(99.9%) 45.806 ns/op [Average]
  (min, avg, max) = (2736.797, 2754.337, 2767.295), stdev = 11.896
  CI (99.9%): [2708.531, 2800.143] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 10000)

# Run progress: 70.92% complete, ETA 00:10:00
# Fork: 1 of 1
# Warmup Iteration   1: 15768.650 ns/op
# Warmup Iteration   2: 14434.967 ns/op
# Warmup Iteration   3: 13527.916 ns/op
# Warmup Iteration   4: 13206.789 ns/op
# Warmup Iteration   5: 13315.580 ns/op
Iteration   1: 13265.357 ns/op
Iteration   2: 13232.066 ns/op
Iteration   3: 13310.123 ns/op
Iteration   4: 13241.170 ns/op
Iteration   5: 13298.064 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  13269.356 ±(99.9%) 131.812 ns/op [Average]
  (min, avg, max) = (13232.066, 13269.356, 13310.123), stdev = 34.231
  CI (99.9%): [13137.545, 13401.168] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 71.43% complete, ETA 00:09:49
# Fork: 1 of 1
# Warmup Iteration   1: 580.684 ns/op
# Warmup Iteration   2: 577.676 ns/op
# Warmup Iteration   3: 549.949 ns/op
# Warmup Iteration   4: 551.698 ns/op
# Warmup Iteration   5: 549.244 ns/op
Iteration   1: 553.774 ns/op
Iteration   2: 550.295 ns/op
Iteration   3: 551.974 ns/op
Iteration   4: 552.346 ns/op
Iteration   5: 545.944 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  550.867 ±(99.9%) 11.620 ns/op [Average]
  (min, avg, max) = (545.944, 550.867, 553.774), stdev = 3.018
  CI (99.9%): [539.247, 562.487] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 71.94% complete, ETA 00:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 605.628 ns/op
# Warmup Iteration   2: 593.622 ns/op
# Warmup Iteration   3: 569.718 ns/op
# Warmup Iteration   4: 564.135 ns/op
# Warmup Iteration   5: 567.087 ns/op
Iteration   1: 567.276 ns/op
Iteration   2: 570.070 ns/op
Iteration   3: 565.870 ns/op
Iteration   4: 566.727 ns/op
Iteration   5: 566.424 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  567.273 ±(99.9%) 6.330 ns/op [Average]
  (min, avg, max) = (565.870, 567.273, 570.070), stdev = 1.644
  CI (99.9%): [560.943, 573.603] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 72.45% complete, ETA 00:09:28
# Fork: 1 of 1
# Warmup Iteration   1: 684.021 ns/op
# Warmup Iteration   2: 639.769 ns/op
# Warmup Iteration   3: 638.377 ns/op
# Warmup Iteration   4: 619.039 ns/op
# Warmup Iteration   5: 622.498 ns/op
Iteration   1: 617.531 ns/op
Iteration   2: 637.068 ns/op
Iteration   3: 621.597 ns/op
Iteration   4: 617.921 ns/op
Iteration   5: 611.777 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  621.179 ±(99.9%) 36.780 ns/op [Average]
  (min, avg, max) = (611.777, 621.179, 637.068), stdev = 9.552
  CI (99.9%): [584.399, 657.959] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 72.96% complete, ETA 00:09:17
# Fork: 1 of 1
# Warmup Iteration   1: 757.776 ns/op
# Warmup Iteration   2: 700.823 ns/op
# Warmup Iteration   3: 685.496 ns/op
# Warmup Iteration   4: 685.158 ns/op
# Warmup Iteration   5: 687.233 ns/op
Iteration   1: 681.786 ns/op
Iteration   2: 680.880 ns/op
Iteration   3: 680.649 ns/op
Iteration   4: 679.617 ns/op
Iteration   5: 678.972 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  680.381 ±(99.9%) 4.247 ns/op [Average]
  (min, avg, max) = (678.972, 680.381, 681.786), stdev = 1.103
  CI (99.9%): [676.134, 684.627] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 73.47% complete, ETA 00:09:07
# Fork: 1 of 1
# Warmup Iteration   1: 1279.878 ns/op
# Warmup Iteration   2: 1207.999 ns/op
# Warmup Iteration   3: 1192.022 ns/op
# Warmup Iteration   4: 1137.446 ns/op
# Warmup Iteration   5: 1146.240 ns/op
Iteration   1: 1136.037 ns/op
Iteration   2: 1135.741 ns/op
Iteration   3: 1159.751 ns/op
Iteration   4: 1149.744 ns/op
Iteration   5: 1143.730 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  1145.000 ±(99.9%) 38.879 ns/op [Average]
  (min, avg, max) = (1135.741, 1145.000, 1159.751), stdev = 10.097
  CI (99.9%): [1106.122, 1183.879] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 73.98% complete, ETA 00:08:56
# Fork: 1 of 1
# Warmup Iteration   1: 2012.090 ns/op
# Warmup Iteration   2: 1932.919 ns/op
# Warmup Iteration   3: 1844.320 ns/op
# Warmup Iteration   4: 1815.215 ns/op
# Warmup Iteration   5: 1811.297 ns/op
Iteration   1: 1793.869 ns/op
Iteration   2: 1799.858 ns/op
Iteration   3: 1800.405 ns/op
Iteration   4: 1797.159 ns/op
Iteration   5: 1793.587 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  1796.976 ±(99.9%) 12.364 ns/op [Average]
  (min, avg, max) = (1793.587, 1796.976, 1800.405), stdev = 3.211
  CI (99.9%): [1784.611, 1809.340] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 74.49% complete, ETA 00:08:46
# Fork: 1 of 1
# Warmup Iteration   1: 13092.559 ns/op
# Warmup Iteration   2: 12001.640 ns/op
# Warmup Iteration   3: 11114.480 ns/op
# Warmup Iteration   4: 11128.853 ns/op
# Warmup Iteration   5: 11138.913 ns/op
Iteration   1: 11140.097 ns/op
Iteration   2: 11446.742 ns/op
Iteration   3: 11136.914 ns/op
Iteration   4: 11146.772 ns/op
Iteration   5: 11152.443 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  11204.594 ±(99.9%) 521.756 ns/op [Average]
  (min, avg, max) = (11136.914, 11204.594, 11446.742), stdev = 135.498
  CI (99.9%): [10682.837, 11726.350] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 1)

# Run progress: 75.00% complete, ETA 00:08:35
# Fork: 1 of 1
# Warmup Iteration   1: 579.925 ns/op
# Warmup Iteration   2: 579.120 ns/op
# Warmup Iteration   3: 559.871 ns/op
# Warmup Iteration   4: 562.068 ns/op
# Warmup Iteration   5: 562.321 ns/op
Iteration   1: 565.598 ns/op
Iteration   2: 563.189 ns/op
Iteration   3: 565.478 ns/op
Iteration   4: 563.757 ns/op
Iteration   5: 584.572 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  568.519 ±(99.9%) 34.792 ns/op [Average]
  (min, avg, max) = (563.189, 568.519, 584.572), stdev = 9.035
  CI (99.9%): [533.727, 603.311] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 10)

# Run progress: 75.51% complete, ETA 00:08:25
# Fork: 1 of 1
# Warmup Iteration   1: 604.573 ns/op
# Warmup Iteration   2: 599.285 ns/op
# Warmup Iteration   3: 568.486 ns/op
# Warmup Iteration   4: 563.736 ns/op
# Warmup Iteration   5: 568.360 ns/op
Iteration   1: 569.355 ns/op
Iteration   2: 570.137 ns/op
Iteration   3: 565.554 ns/op
Iteration   4: 567.031 ns/op
Iteration   5: 564.963 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  567.408 ±(99.9%) 8.779 ns/op [Average]
  (min, avg, max) = (564.963, 567.408, 570.137), stdev = 2.280
  CI (99.9%): [558.628, 576.187] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 50)

# Run progress: 76.02% complete, ETA 00:08:14
# Fork: 1 of 1
# Warmup Iteration   1: 691.400 ns/op
# Warmup Iteration   2: 641.703 ns/op
# Warmup Iteration   3: 626.674 ns/op
# Warmup Iteration   4: 626.310 ns/op
# Warmup Iteration   5: 623.996 ns/op
Iteration   1: 627.115 ns/op
Iteration   2: 626.684 ns/op
Iteration   3: 628.807 ns/op
Iteration   4: 626.371 ns/op
Iteration   5: 619.885 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  625.772 ±(99.9%) 13.180 ns/op [Average]
  (min, avg, max) = (619.885, 625.772, 628.807), stdev = 3.423
  CI (99.9%): [612.592, 638.952] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 100)

# Run progress: 76.53% complete, ETA 00:08:04
# Fork: 1 of 1
# Warmup Iteration   1: 753.335 ns/op
# Warmup Iteration   2: 700.219 ns/op
# Warmup Iteration   3: 687.784 ns/op
# Warmup Iteration   4: 689.505 ns/op
# Warmup Iteration   5: 689.681 ns/op
Iteration   1: 691.202 ns/op
Iteration   2: 679.088 ns/op
Iteration   3: 679.269 ns/op
Iteration   4: 682.374 ns/op
Iteration   5: 715.410 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  689.469 ±(99.9%) 58.969 ns/op [Average]
  (min, avg, max) = (679.088, 689.469, 715.410), stdev = 15.314
  CI (99.9%): [630.499, 748.438] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 500)

# Run progress: 77.04% complete, ETA 00:07:53
# Fork: 1 of 1
# Warmup Iteration   1: 1276.609 ns/op
# Warmup Iteration   2: 1200.780 ns/op
# Warmup Iteration   3: 1131.076 ns/op
# Warmup Iteration   4: 1123.171 ns/op
# Warmup Iteration   5: 1120.073 ns/op
Iteration   1: 1118.072 ns/op
Iteration   2: 1118.503 ns/op
Iteration   3: 1120.057 ns/op
Iteration   4: 1117.093 ns/op
Iteration   5: 1173.128 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  1129.371 ±(99.9%) 94.281 ns/op [Average]
  (min, avg, max) = (1117.093, 1129.371, 1173.128), stdev = 24.484
  CI (99.9%): [1035.090, 1223.651] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 1000)

# Run progress: 77.55% complete, ETA 00:07:43
# Fork: 1 of 1
# Warmup Iteration   1: 1988.368 ns/op
# Warmup Iteration   2: 1918.620 ns/op
# Warmup Iteration   3: 1779.939 ns/op
# Warmup Iteration   4: 1775.458 ns/op
# Warmup Iteration   5: 1774.811 ns/op
Iteration   1: 1776.440 ns/op
Iteration   2: 1774.964 ns/op
Iteration   3: 1772.574 ns/op
Iteration   4: 1799.693 ns/op
Iteration   5: 1806.006 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  1785.935 ±(99.9%) 60.308 ns/op [Average]
  (min, avg, max) = (1772.574, 1785.935, 1806.006), stdev = 15.662
  CI (99.9%): [1725.627, 1846.244] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 10000)

# Run progress: 78.06% complete, ETA 00:07:32
# Fork: 1 of 1
# Warmup Iteration   1: 13210.954 ns/op
# Warmup Iteration   2: 12141.351 ns/op
# Warmup Iteration   3: 11158.959 ns/op
# Warmup Iteration   4: 11141.400 ns/op
# Warmup Iteration   5: 11236.967 ns/op
Iteration   1: 11252.775 ns/op
Iteration   2: 11210.794 ns/op
Iteration   3: 11163.017 ns/op
Iteration   4: 11195.733 ns/op
Iteration   5: 11290.126 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  11222.489 ±(99.9%) 191.390 ns/op [Average]
  (min, avg, max) = (11163.017, 11222.489, 11290.126), stdev = 49.703
  CI (99.9%): [11031.099, 11413.879] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 78.57% complete, ETA 00:07:22
# Fork: 1 of 1
# Warmup Iteration   1: 456.199 ns/op
# Warmup Iteration   2: 449.524 ns/op
# Warmup Iteration   3: 429.425 ns/op
# Warmup Iteration   4: 425.519 ns/op
# Warmup Iteration   5: 429.778 ns/op
Iteration   1: 430.660 ns/op
Iteration   2: 426.135 ns/op
Iteration   3: 426.238 ns/op
Iteration   4: 427.388 ns/op
Iteration   5: 425.870 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  427.258 ±(99.9%) 7.657 ns/op [Average]
  (min, avg, max) = (425.870, 427.258, 430.660), stdev = 1.988
  CI (99.9%): [419.601, 434.915] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 79.08% complete, ETA 00:07:11
# Fork: 1 of 1
# Warmup Iteration   1: 484.129 ns/op
# Warmup Iteration   2: 464.330 ns/op
# Warmup Iteration   3: 448.189 ns/op
# Warmup Iteration   4: 448.176 ns/op
# Warmup Iteration   5: 448.378 ns/op
Iteration   1: 447.288 ns/op
Iteration   2: 447.101 ns/op
Iteration   3: 448.846 ns/op
Iteration   4: 448.333 ns/op
Iteration   5: 446.571 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  447.628 ±(99.9%) 3.597 ns/op [Average]
  (min, avg, max) = (446.571, 447.628, 448.846), stdev = 0.934
  CI (99.9%): [444.031, 451.225] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 79.59% complete, ETA 00:07:00
# Fork: 1 of 1
# Warmup Iteration   1: 571.438 ns/op
# Warmup Iteration   2: 518.762 ns/op
# Warmup Iteration   3: 510.515 ns/op
# Warmup Iteration   4: 508.892 ns/op
# Warmup Iteration   5: 509.831 ns/op
Iteration   1: 507.871 ns/op
Iteration   2: 509.235 ns/op
Iteration   3: 502.896 ns/op
Iteration   4: 504.372 ns/op
Iteration   5: 503.348 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  505.545 ±(99.9%) 10.933 ns/op [Average]
  (min, avg, max) = (502.896, 505.545, 509.235), stdev = 2.839
  CI (99.9%): [494.612, 516.478] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 80.10% complete, ETA 00:06:50
# Fork: 1 of 1
# Warmup Iteration   1: 635.534 ns/op
# Warmup Iteration   2: 592.007 ns/op
# Warmup Iteration   3: 586.047 ns/op
# Warmup Iteration   4: 586.914 ns/op
# Warmup Iteration   5: 581.679 ns/op
Iteration   1: 577.018 ns/op
Iteration   2: 600.415 ns/op
Iteration   3: 577.471 ns/op
Iteration   4: 564.629 ns/op
Iteration   5: 562.250 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  576.357 ±(99.9%) 58.304 ns/op [Average]
  (min, avg, max) = (562.250, 576.357, 600.415), stdev = 15.141
  CI (99.9%): [518.053, 634.660] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 80.61% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: 1118.692 ns/op
# Warmup Iteration   2: 1054.669 ns/op
# Warmup Iteration   3: 1001.524 ns/op
# Warmup Iteration   4: 994.027 ns/op
# Warmup Iteration   5: 993.766 ns/op
Iteration   1: 993.213 ns/op
Iteration   2: 1002.456 ns/op
Iteration   3: 993.663 ns/op
Iteration   4: 1000.071 ns/op
Iteration   5: 1002.934 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  998.468 ±(99.9%) 18.176 ns/op [Average]
  (min, avg, max) = (993.213, 998.468, 1002.934), stdev = 4.720
  CI (99.9%): [980.291, 1016.644] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 81.12% complete, ETA 00:06:29
# Fork: 1 of 1
# Warmup Iteration   1: 1749.925 ns/op
# Warmup Iteration   2: 1680.031 ns/op
# Warmup Iteration   3: 1545.869 ns/op
# Warmup Iteration   4: 1537.355 ns/op
# Warmup Iteration   5: 1533.020 ns/op
Iteration   1: 1536.402 ns/op
Iteration   2: 1541.151 ns/op
Iteration   3: 1545.609 ns/op
Iteration   4: 1543.076 ns/op
Iteration   5: 1541.471 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  1541.542 ±(99.9%) 12.983 ns/op [Average]
  (min, avg, max) = (1536.402, 1541.542, 1545.609), stdev = 3.372
  CI (99.9%): [1528.559, 1554.525] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 81.63% complete, ETA 00:06:18
# Fork: 1 of 1
# Warmup Iteration   1: 13033.715 ns/op
# Warmup Iteration   2: 12169.625 ns/op
# Warmup Iteration   3: 10938.608 ns/op
# Warmup Iteration   4: 10987.615 ns/op
# Warmup Iteration   5: 10963.766 ns/op
Iteration   1: 10961.156 ns/op
Iteration   2: 10987.159 ns/op
Iteration   3: 10988.016 ns/op
Iteration   4: 10923.697 ns/op
Iteration   5: 11013.219 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  10974.649 ±(99.9%) 130.595 ns/op [Average]
  (min, avg, max) = (10923.697, 10974.649, 11013.219), stdev = 33.915
  CI (99.9%): [10844.054, 11105.244] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 1)

# Run progress: 82.14% complete, ETA 00:06:08
# Fork: 1 of 1
# Warmup Iteration   1: 454.838 ns/op
# Warmup Iteration   2: 445.308 ns/op
# Warmup Iteration   3: 428.091 ns/op
# Warmup Iteration   4: 463.079 ns/op
# Warmup Iteration   5: 430.946 ns/op
Iteration   1: 430.851 ns/op
Iteration   2: 428.639 ns/op
Iteration   3: 428.372 ns/op
Iteration   4: 428.429 ns/op
Iteration   5: 429.074 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  429.073 ±(99.9%) 3.972 ns/op [Average]
  (min, avg, max) = (428.372, 429.073, 430.851), stdev = 1.032
  CI (99.9%): [425.101, 433.045] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 10)

# Run progress: 82.65% complete, ETA 00:05:57
# Fork: 1 of 1
# Warmup Iteration   1: 479.256 ns/op
# Warmup Iteration   2: 462.821 ns/op
# Warmup Iteration   3: 474.715 ns/op
# Warmup Iteration   4: 445.654 ns/op
# Warmup Iteration   5: 446.582 ns/op
Iteration   1: 448.196 ns/op
Iteration   2: 451.632 ns/op
Iteration   3: 452.675 ns/op
Iteration   4: 447.172 ns/op
Iteration   5: 443.642 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  448.664 ±(99.9%) 13.958 ns/op [Average]
  (min, avg, max) = (443.642, 448.664, 452.675), stdev = 3.625
  CI (99.9%): [434.705, 462.622] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 50)

# Run progress: 83.16% complete, ETA 00:05:47
# Fork: 1 of 1
# Warmup Iteration   1: 570.417 ns/op
# Warmup Iteration   2: 520.194 ns/op
# Warmup Iteration   3: 506.019 ns/op
# Warmup Iteration   4: 507.612 ns/op
# Warmup Iteration   5: 529.920 ns/op
Iteration   1: 508.607 ns/op
Iteration   2: 507.095 ns/op
Iteration   3: 504.207 ns/op
Iteration   4: 503.941 ns/op
Iteration   5: 501.237 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  505.018 ±(99.9%) 11.111 ns/op [Average]
  (min, avg, max) = (501.237, 505.018, 508.607), stdev = 2.886
  CI (99.9%): [493.906, 516.129] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 100)

# Run progress: 83.67% complete, ETA 00:05:36
# Fork: 1 of 1
# Warmup Iteration   1: 624.366 ns/op
# Warmup Iteration   2: 587.889 ns/op
# Warmup Iteration   3: 567.959 ns/op
# Warmup Iteration   4: 566.332 ns/op
# Warmup Iteration   5: 566.409 ns/op
Iteration   1: 564.537 ns/op
Iteration   2: 564.204 ns/op
Iteration   3: 565.704 ns/op
Iteration   4: 565.521 ns/op
Iteration   5: 563.892 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  564.771 ±(99.9%) 3.093 ns/op [Average]
  (min, avg, max) = (563.892, 564.771, 565.704), stdev = 0.803
  CI (99.9%): [561.678, 567.865] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 500)

# Run progress: 84.18% complete, ETA 00:05:26
# Fork: 1 of 1
# Warmup Iteration   1: 1126.026 ns/op
# Warmup Iteration   2: 1044.374 ns/op
# Warmup Iteration   3: 1009.838 ns/op
# Warmup Iteration   4: 1005.802 ns/op
# Warmup Iteration   5: 1006.357 ns/op
Iteration   1: 997.177 ns/op
Iteration   2: 1001.537 ns/op
Iteration   3: 1002.474 ns/op
Iteration   4: 998.776 ns/op
Iteration   5: 1008.382 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  1001.669 ±(99.9%) 16.594 ns/op [Average]
  (min, avg, max) = (997.177, 1001.669, 1008.382), stdev = 4.309
  CI (99.9%): [985.076, 1018.263] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 1000)

# Run progress: 84.69% complete, ETA 00:05:15
# Fork: 1 of 1
# Warmup Iteration   1: 1804.882 ns/op
# Warmup Iteration   2: 1654.978 ns/op
# Warmup Iteration   3: 1552.942 ns/op
# Warmup Iteration   4: 1556.240 ns/op
# Warmup Iteration   5: 1556.143 ns/op
Iteration   1: 1558.720 ns/op
Iteration   2: 1553.795 ns/op
Iteration   3: 1554.232 ns/op
Iteration   4: 1550.853 ns/op
Iteration   5: 1558.911 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  1555.302 ±(99.9%) 13.327 ns/op [Average]
  (min, avg, max) = (1550.853, 1555.302, 1558.911), stdev = 3.461
  CI (99.9%): [1541.975, 1568.630] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 10000)

# Run progress: 85.20% complete, ETA 00:05:05
# Fork: 1 of 1
# Warmup Iteration   1: 13176.677 ns/op
# Warmup Iteration   2: 11976.667 ns/op
# Warmup Iteration   3: 10938.882 ns/op
# Warmup Iteration   4: 10897.753 ns/op
# Warmup Iteration   5: 10923.250 ns/op
Iteration   1: 10966.951 ns/op
Iteration   2: 10903.727 ns/op
Iteration   3: 11176.067 ns/op
Iteration   4: 10950.047 ns/op
Iteration   5: 10948.796 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  10989.118 ±(99.9%) 412.420 ns/op [Average]
  (min, avg, max) = (10903.727, 10989.118, 11176.067), stdev = 107.104
  CI (99.9%): [10576.698, 11401.538] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 1)

# Run progress: 85.71% complete, ETA 00:04:54
# Fork: 1 of 1
# Warmup Iteration   1: 67.660 ns/op
# Warmup Iteration   2: 61.793 ns/op
# Warmup Iteration   3: 59.577 ns/op
# Warmup Iteration   4: 58.556 ns/op
# Warmup Iteration   5: 58.266 ns/op
Iteration   1: 58.129 ns/op
Iteration   2: 58.051 ns/op
Iteration   3: 58.260 ns/op
Iteration   4: 57.958 ns/op
Iteration   5: 58.003 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  58.080 ±(99.9%) 0.457 ns/op [Average]
  (min, avg, max) = (57.958, 58.080, 58.260), stdev = 0.119
  CI (99.9%): [57.623, 58.537] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 10)

# Run progress: 86.22% complete, ETA 00:04:44
# Fork: 1 of 1
# Warmup Iteration   1: 85.112 ns/op
# Warmup Iteration   2: 79.890 ns/op
# Warmup Iteration   3: 77.541 ns/op
# Warmup Iteration   4: 73.464 ns/op
# Warmup Iteration   5: 73.542 ns/op
Iteration   1: 73.303 ns/op
Iteration   2: 74.662 ns/op
Iteration   3: 73.641 ns/op
Iteration   4: 73.601 ns/op
Iteration   5: 73.361 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  73.713 ±(99.9%) 2.117 ns/op [Average]
  (min, avg, max) = (73.303, 73.713, 74.662), stdev = 0.550
  CI (99.9%): [71.596, 75.831] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 50)

# Run progress: 86.73% complete, ETA 00:04:33
# Fork: 1 of 1
# Warmup Iteration   1: 149.273 ns/op
# Warmup Iteration   2: 135.930 ns/op
# Warmup Iteration   3: 127.211 ns/op
# Warmup Iteration   4: 126.268 ns/op
# Warmup Iteration   5: 126.108 ns/op
Iteration   1: 125.936 ns/op
Iteration   2: 125.910 ns/op
Iteration   3: 126.283 ns/op
Iteration   4: 125.846 ns/op
Iteration   5: 127.061 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  126.207 ±(99.9%) 1.951 ns/op [Average]
  (min, avg, max) = (125.846, 126.207, 127.061), stdev = 0.507
  CI (99.9%): [124.256, 128.158] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 100)

# Run progress: 87.24% complete, ETA 00:04:23
# Fork: 1 of 1
# Warmup Iteration   1: 200.849 ns/op
# Warmup Iteration   2: 195.350 ns/op
# Warmup Iteration   3: 170.471 ns/op
# Warmup Iteration   4: 170.470 ns/op
# Warmup Iteration   5: 170.591 ns/op
Iteration   1: 170.806 ns/op
Iteration   2: 170.615 ns/op
Iteration   3: 170.858 ns/op
Iteration   4: 172.170 ns/op
Iteration   5: 172.426 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  171.375 ±(99.9%) 3.282 ns/op [Average]
  (min, avg, max) = (170.615, 171.375, 172.426), stdev = 0.852
  CI (99.9%): [168.094, 174.657] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 500)

# Run progress: 87.76% complete, ETA 00:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 689.893 ns/op
# Warmup Iteration   2: 628.467 ns/op
# Warmup Iteration   3: 581.154 ns/op
# Warmup Iteration   4: 580.138 ns/op
# Warmup Iteration   5: 582.305 ns/op
Iteration   1: 578.409 ns/op
Iteration   2: 582.611 ns/op
Iteration   3: 601.428 ns/op
Iteration   4: 579.259 ns/op
Iteration   5: 582.803 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  584.902 ±(99.9%) 36.365 ns/op [Average]
  (min, avg, max) = (578.409, 584.902, 601.428), stdev = 9.444
  CI (99.9%): [548.537, 621.267] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 88.27% complete, ETA 00:04:02
# Fork: 1 of 1
# Warmup Iteration   1: 1319.175 ns/op
# Warmup Iteration   2: 1264.956 ns/op
# Warmup Iteration   3: 1123.430 ns/op
# Warmup Iteration   4: 1131.660 ns/op
# Warmup Iteration   5: 1141.522 ns/op
Iteration   1: 1125.937 ns/op
Iteration   2: 1128.171 ns/op
Iteration   3: 1125.675 ns/op
Iteration   4: 1130.008 ns/op
Iteration   5: 1126.364 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  1127.231 ±(99.9%) 7.059 ns/op [Average]
  (min, avg, max) = (1125.675, 1127.231, 1130.008), stdev = 1.833
  CI (99.9%): [1120.172, 1134.290] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 88.78% complete, ETA 00:03:51
# Fork: 1 of 1
# Warmup Iteration   1: 12238.614 ns/op
# Warmup Iteration   2: 11110.999 ns/op
# Warmup Iteration   3: 10405.600 ns/op
# Warmup Iteration   4: 10410.538 ns/op
# Warmup Iteration   5: 10393.573 ns/op
Iteration   1: 10437.018 ns/op
Iteration   2: 10451.727 ns/op
Iteration   3: 10411.539 ns/op
Iteration   4: 10459.722 ns/op
Iteration   5: 10405.772 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  10433.156 ±(99.9%) 91.988 ns/op [Average]
  (min, avg, max) = (10405.772, 10433.156, 10459.722), stdev = 23.889
  CI (99.9%): [10341.168, 10525.144] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 1)

# Run progress: 89.29% complete, ETA 00:03:41
# Fork: 1 of 1
# Warmup Iteration   1: 70.629 ns/op
# Warmup Iteration   2: 62.662 ns/op
# Warmup Iteration   3: 59.073 ns/op
# Warmup Iteration   4: 58.928 ns/op
# Warmup Iteration   5: 58.363 ns/op
Iteration   1: 58.165 ns/op
Iteration   2: 58.040 ns/op
Iteration   3: 58.534 ns/op
Iteration   4: 58.120 ns/op
Iteration   5: 57.919 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  58.156 ±(99.9%) 0.889 ns/op [Average]
  (min, avg, max) = (57.919, 58.156, 58.534), stdev = 0.231
  CI (99.9%): [57.266, 59.045] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 10)

# Run progress: 89.80% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: 85.197 ns/op
# Warmup Iteration   2: 78.661 ns/op
# Warmup Iteration   3: 75.281 ns/op
# Warmup Iteration   4: 74.725 ns/op
# Warmup Iteration   5: 74.055 ns/op
Iteration   1: 74.109 ns/op
Iteration   2: 74.194 ns/op
Iteration   3: 74.280 ns/op
Iteration   4: 74.128 ns/op
Iteration   5: 73.602 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  74.063 ±(99.9%) 1.024 ns/op [Average]
  (min, avg, max) = (73.602, 74.063, 74.280), stdev = 0.266
  CI (99.9%): [73.039, 75.086] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 50)

# Run progress: 90.31% complete, ETA 00:03:19
# Fork: 1 of 1
# Warmup Iteration   1: 149.112 ns/op
# Warmup Iteration   2: 136.734 ns/op
# Warmup Iteration   3: 130.160 ns/op
# Warmup Iteration   4: 125.855 ns/op
# Warmup Iteration   5: 125.949 ns/op
Iteration   1: 125.722 ns/op
Iteration   2: 125.939 ns/op
Iteration   3: 125.600 ns/op
Iteration   4: 130.629 ns/op
Iteration   5: 126.295 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  126.837 ±(99.9%) 8.226 ns/op [Average]
  (min, avg, max) = (125.600, 126.837, 130.629), stdev = 2.136
  CI (99.9%): [118.611, 135.063] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 100)

# Run progress: 90.82% complete, ETA 00:03:09
# Fork: 1 of 1
# Warmup Iteration   1: 206.366 ns/op
# Warmup Iteration   2: 184.855 ns/op
# Warmup Iteration   3: 172.376 ns/op
# Warmup Iteration   4: 181.321 ns/op
# Warmup Iteration   5: 172.918 ns/op
Iteration   1: 173.048 ns/op
Iteration   2: 173.695 ns/op
Iteration   3: 172.246 ns/op
Iteration   4: 172.123 ns/op
Iteration   5: 172.899 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  172.802 ±(99.9%) 2.464 ns/op [Average]
  (min, avg, max) = (172.123, 172.802, 173.695), stdev = 0.640
  CI (99.9%): [170.338, 175.266] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 500)

# Run progress: 91.33% complete, ETA 00:02:58
# Fork: 1 of 1
# Warmup Iteration   1: 688.964 ns/op
# Warmup Iteration   2: 633.041 ns/op
# Warmup Iteration   3: 580.920 ns/op
# Warmup Iteration   4: 581.429 ns/op
# Warmup Iteration   5: 593.053 ns/op
Iteration   1: 582.498 ns/op
Iteration   2: 584.241 ns/op
Iteration   3: 583.369 ns/op
Iteration   4: 583.326 ns/op
Iteration   5: 585.130 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  583.713 ±(99.9%) 3.866 ns/op [Average]
  (min, avg, max) = (582.498, 583.713, 585.130), stdev = 1.004
  CI (99.9%): [579.847, 587.579] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 1000)

# Run progress: 91.84% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: 1328.497 ns/op
# Warmup Iteration   2: 1205.635 ns/op
# Warmup Iteration   3: 1134.578 ns/op
# Warmup Iteration   4: 1161.573 ns/op
# Warmup Iteration   5: 1126.154 ns/op
Iteration   1: 1136.902 ns/op
Iteration   2: 1131.835 ns/op
Iteration   3: 1193.054 ns/op
Iteration   4: 1121.649 ns/op
Iteration   5: 1121.347 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  1140.957 ±(99.9%) 115.056 ns/op [Average]
  (min, avg, max) = (1121.347, 1140.957, 1193.054), stdev = 29.880
  CI (99.9%): [1025.902, 1256.013] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 10000)

# Run progress: 92.35% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: 13077.636 ns/op
# Warmup Iteration   2: 11325.280 ns/op
# Warmup Iteration   3: 10372.538 ns/op
# Warmup Iteration   4: 10415.131 ns/op
# Warmup Iteration   5: 10358.721 ns/op
Iteration   1: 10350.176 ns/op
Iteration   2: 10406.906 ns/op
Iteration   3: 10385.390 ns/op
Iteration   4: 10535.478 ns/op
Iteration   5: 10371.411 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  10409.872 ±(99.9%) 281.834 ns/op [Average]
  (min, avg, max) = (10350.176, 10409.872, 10535.478), stdev = 73.191
  CI (99.9%): [10128.039, 10691.706] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 92.86% complete, ETA 00:02:27
# Fork: 1 of 1
# Warmup Iteration   1: 1136.405 ns/op
# Warmup Iteration   2: 1102.092 ns/op
# Warmup Iteration   3: 1091.999 ns/op
# Warmup Iteration   4: 1106.137 ns/op
# Warmup Iteration   5: 1082.080 ns/op
Iteration   1: 1074.605 ns/op
Iteration   2: 1076.979 ns/op
Iteration   3: 1081.448 ns/op
Iteration   4: 1074.147 ns/op
Iteration   5: 1074.448 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1076.325 ±(99.9%) 11.852 ns/op [Average]
  (min, avg, max) = (1074.147, 1076.325, 1081.448), stdev = 3.078
  CI (99.9%): [1064.473, 1088.177] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 93.37% complete, ETA 00:02:16
# Fork: 1 of 1
# Warmup Iteration   1: 1176.025 ns/op
# Warmup Iteration   2: 1176.740 ns/op
# Warmup Iteration   3: 1138.467 ns/op
# Warmup Iteration   4: 1101.229 ns/op
# Warmup Iteration   5: 1102.496 ns/op
Iteration   1: 1111.171 ns/op
Iteration   2: 1104.254 ns/op
Iteration   3: 1108.310 ns/op
Iteration   4: 1118.510 ns/op
Iteration   5: 1110.959 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1110.641 ±(99.9%) 20.059 ns/op [Average]
  (min, avg, max) = (1104.254, 1110.641, 1118.510), stdev = 5.209
  CI (99.9%): [1090.582, 1130.700] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 93.88% complete, ETA 00:02:06
# Fork: 1 of 1
# Warmup Iteration   1: 1368.337 ns/op
# Warmup Iteration   2: 1325.252 ns/op
# Warmup Iteration   3: 1276.537 ns/op
# Warmup Iteration   4: 1271.869 ns/op
# Warmup Iteration   5: 1278.936 ns/op
Iteration   1: 1278.417 ns/op
Iteration   2: 1277.856 ns/op
Iteration   3: 1341.418 ns/op
Iteration   4: 1282.412 ns/op
Iteration   5: 1288.115 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1293.644 ±(99.9%) 104.043 ns/op [Average]
  (min, avg, max) = (1277.856, 1293.644, 1341.418), stdev = 27.020
  CI (99.9%): [1189.600, 1397.687] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 94.39% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 1624.238 ns/op
# Warmup Iteration   2: 1553.539 ns/op
# Warmup Iteration   3: 1505.970 ns/op
# Warmup Iteration   4: 1498.047 ns/op
# Warmup Iteration   5: 1504.928 ns/op
Iteration   1: 1514.181 ns/op
Iteration   2: 1498.811 ns/op
Iteration   3: 1502.098 ns/op
Iteration   4: 1506.871 ns/op
Iteration   5: 1494.208 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1503.234 ±(99.9%) 29.538 ns/op [Average]
  (min, avg, max) = (1494.208, 1503.234, 1514.181), stdev = 7.671
  CI (99.9%): [1473.695, 1532.772] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 94.90% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: 3469.814 ns/op
# Warmup Iteration   2: 3263.970 ns/op
# Warmup Iteration   3: 3276.532 ns/op
# Warmup Iteration   4: 3210.894 ns/op
# Warmup Iteration   5: 3236.177 ns/op
Iteration   1: 3207.057 ns/op
Iteration   2: 3220.291 ns/op
Iteration   3: 3207.516 ns/op
Iteration   4: 3167.257 ns/op
Iteration   5: 3189.358 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  3198.296 ±(99.9%) 79.123 ns/op [Average]
  (min, avg, max) = (3167.257, 3198.296, 3220.291), stdev = 20.548
  CI (99.9%): [3119.173, 3277.419] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 95.41% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 5757.464 ns/op
# Warmup Iteration   2: 5403.370 ns/op
# Warmup Iteration   3: 5322.524 ns/op
# Warmup Iteration   4: 5303.935 ns/op
# Warmup Iteration   5: 5351.253 ns/op
Iteration   1: 5302.713 ns/op
Iteration   2: 5268.161 ns/op
Iteration   3: 5237.644 ns/op
Iteration   4: 5259.724 ns/op
Iteration   5: 5291.325 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  5271.914 ±(99.9%) 99.346 ns/op [Average]
  (min, avg, max) = (5237.644, 5271.914, 5302.713), stdev = 25.800
  CI (99.9%): [5172.568, 5371.260] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 95.92% complete, ETA 00:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 46160.649 ns/op
# Warmup Iteration   2: 43601.656 ns/op
# Warmup Iteration   3: 43587.134 ns/op
# Warmup Iteration   4: 43389.762 ns/op
# Warmup Iteration   5: 43522.910 ns/op
Iteration   1: 42909.287 ns/op
Iteration   2: 42830.419 ns/op
Iteration   3: 42855.418 ns/op
Iteration   4: 42899.879 ns/op
Iteration   5: 42904.145 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  42879.829 ±(99.9%) 134.749 ns/op [Average]
  (min, avg, max) = (42830.419, 42879.829, 42909.287), stdev = 34.994
  CI (99.9%): [42745.081, 43014.578] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 1)

# Run progress: 96.43% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 1139.938 ns/op
# Warmup Iteration   2: 1103.385 ns/op
# Warmup Iteration   3: 1089.481 ns/op
# Warmup Iteration   4: 1090.516 ns/op
# Warmup Iteration   5: 1064.789 ns/op
Iteration   1: 1062.810 ns/op
Iteration   2: 1118.536 ns/op
Iteration   3: 1092.260 ns/op
Iteration   4: 1080.318 ns/op
Iteration   5: 1070.233 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1084.831 ±(99.9%) 84.134 ns/op [Average]
  (min, avg, max) = (1062.810, 1084.831, 1118.536), stdev = 21.849
  CI (99.9%): [1000.697, 1168.965] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 10)

# Run progress: 96.94% complete, ETA 00:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 1184.977 ns/op
# Warmup Iteration   2: 1156.491 ns/op
# Warmup Iteration   3: 1141.360 ns/op
# Warmup Iteration   4: 1105.022 ns/op
# Warmup Iteration   5: 1101.903 ns/op
Iteration   1: 1114.535 ns/op
Iteration   2: 1118.540 ns/op
Iteration   3: 1148.566 ns/op
Iteration   4: 1109.182 ns/op
Iteration   5: 1110.849 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1120.334 ±(99.9%) 62.336 ns/op [Average]
  (min, avg, max) = (1109.182, 1120.334, 1148.566), stdev = 16.188
  CI (99.9%): [1057.999, 1182.670] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 50)

# Run progress: 97.45% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 1398.140 ns/op
# Warmup Iteration   2: 1349.511 ns/op
# Warmup Iteration   3: 1300.545 ns/op
# Warmup Iteration   4: 1292.177 ns/op
# Warmup Iteration   5: 1297.151 ns/op
Iteration   1: 1294.551 ns/op
Iteration   2: 1286.045 ns/op
Iteration   3: 1294.378 ns/op
Iteration   4: 1291.653 ns/op
Iteration   5: 1297.968 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1292.919 ±(99.9%) 17.128 ns/op [Average]
  (min, avg, max) = (1286.045, 1292.919, 1297.968), stdev = 4.448
  CI (99.9%): [1275.791, 1310.047] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 100)

# Run progress: 97.96% complete, ETA 00:00:42
# Fork: 1 of 1
# Warmup Iteration   1: 1696.260 ns/op
# Warmup Iteration   2: 1535.878 ns/op
# Warmup Iteration   3: 1518.654 ns/op
# Warmup Iteration   4: 1500.667 ns/op
# Warmup Iteration   5: 1585.876 ns/op
Iteration   1: 1508.186 ns/op
Iteration   2: 1499.613 ns/op
Iteration   3: 1496.857 ns/op
Iteration   4: 1498.268 ns/op
Iteration   5: 1506.299 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1501.845 ±(99.9%) 19.512 ns/op [Average]
  (min, avg, max) = (1496.857, 1501.845, 1508.186), stdev = 5.067
  CI (99.9%): [1482.333, 1521.357] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 500)

# Run progress: 98.47% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 3464.847 ns/op
# Warmup Iteration   2: 3271.772 ns/op
# Warmup Iteration   3: 3201.943 ns/op
# Warmup Iteration   4: 3204.581 ns/op
# Warmup Iteration   5: 3215.791 ns/op
Iteration   1: 3216.659 ns/op
Iteration   2: 3276.403 ns/op
Iteration   3: 3214.654 ns/op
Iteration   4: 3222.414 ns/op
Iteration   5: 3214.633 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  3228.953 ±(99.9%) 102.874 ns/op [Average]
  (min, avg, max) = (3214.633, 3228.953, 3276.403), stdev = 26.716
  CI (99.9%): [3126.079, 3331.827] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 1000)

# Run progress: 98.98% complete, ETA 00:00:21
# Fork: 1 of 1
# Warmup Iteration   1: 5860.660 ns/op
# Warmup Iteration   2: 5471.629 ns/op
# Warmup Iteration   3: 5383.255 ns/op
# Warmup Iteration   4: 5368.327 ns/op
# Warmup Iteration   5: 5393.957 ns/op
Iteration   1: 5393.503 ns/op
Iteration   2: 5358.302 ns/op
Iteration   3: 5342.436 ns/op
Iteration   4: 5339.964 ns/op
Iteration   5: 5345.856 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  5356.012 ±(99.9%) 85.146 ns/op [Average]
  (min, avg, max) = (5339.964, 5356.012, 5393.503), stdev = 22.112
  CI (99.9%): [5270.866, 5441.158] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.49% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 46734.411 ns/op
# Warmup Iteration   2: 43685.551 ns/op
# Warmup Iteration   3: 43455.980 ns/op
# Warmup Iteration   4: 43020.946 ns/op
# Warmup Iteration   5: 43536.262 ns/op
Iteration   1: 42843.695 ns/op
Iteration   2: 42946.900 ns/op
Iteration   3: 42937.126 ns/op
Iteration   4: 42768.457 ns/op
Iteration   5: 42873.772 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  42873.990 ±(99.9%) 281.369 ns/op [Average]
  (min, avg, max) = (42768.457, 42873.990, 42946.900), stdev = 73.071
  CI (99.9%): [42592.621, 43155.358] (assumes normal distribution)


# Run complete. Total time: 00:34:22

Benchmark                                       (dataset)  (length)  Mode  Cnt      Score      Error  Units
Base64JniBenchmarks.jdk_url_decode                  fixed         1  avgt    5     33.739 ±    1.123  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed        10  avgt    5     52.012 ±    1.773  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed        50  avgt    5    124.646 ±    7.863  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed       100  avgt    5    259.131 ±   41.972  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed       500  avgt    5    969.183 ±   37.861  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed      1000  avgt    5   1801.215 ±   82.714  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed     10000  avgt    5  19503.444 ± 1006.854  ns/op
Base64JniBenchmarks.jdk_url_decode                 random         1  avgt    5     34.600 ±    3.343  ns/op
Base64JniBenchmarks.jdk_url_decode                 random        10  avgt    5     51.552 ±    1.744  ns/op
Base64JniBenchmarks.jdk_url_decode                 random        50  avgt    5    124.400 ±   10.402  ns/op
Base64JniBenchmarks.jdk_url_decode                 random       100  avgt    5    247.357 ±   14.182  ns/op
Base64JniBenchmarks.jdk_url_decode                 random       500  avgt    5    933.730 ±   27.542  ns/op
Base64JniBenchmarks.jdk_url_decode                 random      1000  avgt    5   1832.686 ±  168.266  ns/op
Base64JniBenchmarks.jdk_url_decode                 random     10000  avgt    5  19363.632 ± 1073.060  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed         1  avgt    5     23.088 ±    2.165  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed        10  avgt    5     48.683 ±    2.469  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed        50  avgt    5    120.954 ±    3.737  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed       100  avgt    5    162.555 ±    7.834  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed       500  avgt    5    500.590 ±   19.348  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed      1000  avgt    5    927.305 ±   40.980  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed     10000  avgt    5   8879.001 ±  314.451  ns/op
Base64JniBenchmarks.jdk_url_encode                 random         1  avgt    5     21.970 ±    0.677  ns/op
Base64JniBenchmarks.jdk_url_encode                 random        10  avgt    5     49.278 ±    2.881  ns/op
Base64JniBenchmarks.jdk_url_encode                 random        50  avgt    5    120.038 ±    5.471  ns/op
Base64JniBenchmarks.jdk_url_encode                 random       100  avgt    5    166.058 ±   17.668  ns/op
Base64JniBenchmarks.jdk_url_encode                 random       500  avgt    5    508.975 ±   15.344  ns/op
Base64JniBenchmarks.jdk_url_encode                 random      1000  avgt    5    919.914 ±   26.077  ns/op
Base64JniBenchmarks.jdk_url_encode                 random     10000  avgt    5   8876.368 ±  379.980  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed         1  avgt    5   1535.774 ±   47.036  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed        10  avgt    5   1509.205 ±   58.248  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed        50  avgt    5   1592.018 ±   35.269  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed       100  avgt    5   1740.466 ±   86.463  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed       500  avgt    5   2279.386 ±  105.840  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed      1000  avgt    5   3032.521 ±  216.181  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed     10000  avgt    5  14494.468 ± 1009.592  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random         1  avgt    5   1516.211 ±   53.461  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random        10  avgt    5   1510.122 ±   70.832  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random        50  avgt    5   1600.248 ±   53.734  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random       100  avgt    5   1734.632 ±   65.700  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random       500  avgt    5   2282.795 ±   93.751  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random      1000  avgt    5   2998.546 ±  193.947  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random     10000  avgt    5  14501.757 ± 1214.242  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed         1  avgt    5   1335.376 ±   82.521  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed        10  avgt    5   1307.513 ±   65.690  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed        50  avgt    5   1392.682 ±   50.428  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed       100  avgt    5   1475.946 ±   68.615  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed       500  avgt    5   1998.886 ±   93.317  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed      1000  avgt    5   2903.537 ±  154.979  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed     10000  avgt    5  13963.017 ±  457.981  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random         1  avgt    5   1328.359 ±   57.111  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random        10  avgt    5   1317.779 ±   63.097  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random        50  avgt    5   1422.936 ±  123.294  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random       100  avgt    5   1489.069 ±  107.331  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random       500  avgt    5   1993.445 ±   68.604  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random      1000  avgt    5   2899.361 ±  211.887  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random     10000  avgt    5  14184.300 ±  412.883  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed         1  avgt    5   1165.598 ±   83.583  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed        10  avgt    5   1163.770 ±  195.300  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed        50  avgt    5   1255.816 ±   75.631  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed       100  avgt    5   1323.554 ±   59.178  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed       500  avgt    5   1954.504 ±   97.748  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed      1000  avgt    5   2717.092 ±  150.634  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed     10000  avgt    5  13850.024 ±  860.288  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random         1  avgt    5   1185.945 ±   70.795  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random        10  avgt    5   1169.305 ±   32.809  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random        50  avgt    5   1236.917 ±  101.481  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random       100  avgt    5   1312.040 ±   51.787  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random       500  avgt    5   1834.704 ±  121.456  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random      1000  avgt    5   2693.186 ±  153.626  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random     10000  avgt    5  13678.698 ±  675.641  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed         1  avgt    5   1109.100 ±   54.135  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed        10  avgt    5   1080.967 ±   31.014  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed        50  avgt    5   1160.544 ±   79.151  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed       100  avgt    5   1315.982 ±   33.520  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed       500  avgt    5   1776.693 ±   48.295  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed      1000  avgt    5   2544.056 ±  256.304  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed     10000  avgt    5  13716.867 ± 1338.250  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random         1  avgt    5   1120.460 ±   37.061  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random        10  avgt    5   1105.673 ±   93.560  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random        50  avgt    5   1204.026 ±   42.989  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random       100  avgt    5   1263.557 ±   38.615  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random       500  avgt    5   1789.208 ±   74.588  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random      1000  avgt    5   2460.987 ±   61.505  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random     10000  avgt    5  13446.645 ± 1089.885  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed         1  avgt    5   1089.942 ±   63.783  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed        10  avgt    5   1119.975 ±   25.099  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed        50  avgt    5   1197.191 ±   18.140  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed       100  avgt    5   1301.656 ±   78.756  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed       500  avgt    5   1840.129 ±  100.621  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed      1000  avgt    5   2540.735 ±  353.863  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed     10000  avgt    5  13870.921 ±  532.972  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random         1  avgt    5   1100.979 ±   61.083  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random        10  avgt    5   1176.375 ±   97.823  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random        50  avgt    5   1219.682 ±   49.979  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random       100  avgt    5   1286.083 ±   26.549  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random       500  avgt    5   1808.665 ±   57.544  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random      1000  avgt    5   2604.148 ±  324.199  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random     10000  avgt    5  13961.043 ± 1474.591  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed         1  avgt    5    581.813 ±   29.847  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed        10  avgt    5    625.565 ±   21.342  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed        50  avgt    5    708.463 ±   24.793  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed       100  avgt    5    804.891 ±   34.567  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed       500  avgt    5   1340.232 ±  140.230  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed      1000  avgt    5   1971.666 ±  114.248  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed     10000  avgt    5  12613.685 ±  115.924  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random         1  avgt    5    560.727 ±    8.840  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random        10  avgt    5    596.830 ±    7.490  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random        50  avgt    5    676.464 ±   17.782  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random       100  avgt    5    764.840 ±   33.150  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random       500  avgt    5   1250.111 ±   15.834  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random      1000  avgt    5   1975.595 ±   80.545  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random     10000  avgt    5  12548.754 ±  101.626  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed         1  avgt    5    445.769 ±    7.602  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed        10  avgt    5    476.199 ±    5.960  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed        50  avgt    5    577.750 ±   97.127  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed       100  avgt    5    636.736 ±   10.328  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed       500  avgt    5   1099.627 ±   10.136  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed      1000  avgt    5   1837.180 ±   14.711  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed     10000  avgt    5  12408.753 ±  591.601  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random         1  avgt    5    446.442 ±    3.150  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random        10  avgt    5    484.265 ±    3.744  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random        50  avgt    5    568.039 ±   67.635  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random       100  avgt    5    627.953 ±   12.364  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random       500  avgt    5   1098.009 ±   25.837  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random      1000  avgt    5   1842.987 ±   34.318  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random     10000  avgt    5  12390.125 ±   76.751  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed         1  avgt    5   1407.867 ±   28.296  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed        10  avgt    5   1457.222 ±   26.280  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed        50  avgt    5   1522.261 ±  128.299  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed       100  avgt    5   1651.864 ±   25.879  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed       500  avgt    5   2202.249 ±  151.364  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed      1000  avgt    5   2742.585 ±   48.113  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed     10000  avgt    5  13344.690 ±  598.706  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random         1  avgt    5   1449.192 ±  109.523  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random        10  avgt    5   1449.742 ±   36.692  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random        50  avgt    5   1505.179 ±   29.190  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random       100  avgt    5   1658.070 ±   33.073  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random       500  avgt    5   2185.643 ±  112.164  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random      1000  avgt    5   2754.337 ±   45.806  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random     10000  avgt    5  13269.356 ±  131.812  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed         1  avgt    5    550.867 ±   11.620  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed        10  avgt    5    567.273 ±    6.330  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed        50  avgt    5    621.179 ±   36.780  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed       100  avgt    5    680.381 ±    4.247  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed       500  avgt    5   1145.000 ±   38.879  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed      1000  avgt    5   1796.976 ±   12.364  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed     10000  avgt    5  11204.594 ±  521.756  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random         1  avgt    5    568.519 ±   34.792  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random        10  avgt    5    567.408 ±    8.779  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random        50  avgt    5    625.772 ±   13.180  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random       100  avgt    5    689.469 ±   58.969  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random       500  avgt    5   1129.371 ±   94.281  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random      1000  avgt    5   1785.935 ±   60.308  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random     10000  avgt    5  11222.489 ±  191.390  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed         1  avgt    5    427.258 ±    7.657  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed        10  avgt    5    447.628 ±    3.597  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed        50  avgt    5    505.545 ±   10.933  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed       100  avgt    5    576.357 ±   58.304  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed       500  avgt    5    998.468 ±   18.176  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed      1000  avgt    5   1541.542 ±   12.983  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed     10000  avgt    5  10974.649 ±  130.595  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random         1  avgt    5    429.073 ±    3.972  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random        10  avgt    5    448.664 ±   13.958  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random        50  avgt    5    505.018 ±   11.111  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random       100  avgt    5    564.771 ±    3.093  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random       500  avgt    5   1001.669 ±   16.594  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random      1000  avgt    5   1555.302 ±   13.327  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random     10000  avgt    5  10989.118 ±  412.420  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed         1  avgt    5     58.080 ±    0.457  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed        10  avgt    5     73.713 ±    2.117  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed        50  avgt    5    126.207 ±    1.951  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed       100  avgt    5    171.375 ±    3.282  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed       500  avgt    5    584.902 ±   36.365  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed      1000  avgt    5   1127.231 ±    7.059  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed     10000  avgt    5  10433.156 ±   91.988  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random         1  avgt    5     58.156 ±    0.889  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random        10  avgt    5     74.063 ±    1.024  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random        50  avgt    5    126.837 ±    8.226  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random       100  avgt    5    172.802 ±    2.464  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random       500  avgt    5    583.713 ±    3.866  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random      1000  avgt    5   1140.957 ±  115.056  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random     10000  avgt    5  10409.872 ±  281.834  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed         1  avgt    5   1076.325 ±   11.852  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed        10  avgt    5   1110.641 ±   20.059  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed        50  avgt    5   1293.644 ±  104.043  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed       100  avgt    5   1503.234 ±   29.538  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed       500  avgt    5   3198.296 ±   79.123  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed      1000  avgt    5   5271.914 ±   99.346  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed     10000  avgt    5  42879.829 ±  134.749  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random         1  avgt    5   1084.831 ±   84.134  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random        10  avgt    5   1120.334 ±   62.336  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random        50  avgt    5   1292.919 ±   17.128  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random       100  avgt    5   1501.845 ±   19.512  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random       500  avgt    5   3228.953 ±  102.874  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random      1000  avgt    5   5356.012 ±   85.146  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random     10000  avgt    5  42873.990 ±  281.369  ns/op

Benchmark result is saved to /static/data/charts/base64-jni/jdk11.json
