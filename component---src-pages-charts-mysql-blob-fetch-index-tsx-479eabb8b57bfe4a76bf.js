"use strict";(self.webpackChunkkomanov_com=self.webpackChunkkomanov_com||[]).push([[607,262,21],{3067:function(e,t,n){n.r(t),n.d(t,{AllCompressionRatios:function(){return l},CompressionRatioChooseComponent:function(){return u},DefaultCompressionRatio:function(){return o},comparisonValues:function(){return i},sideBySide:function(){return s}});var a=n(7294),r=n(9064),l=[{name:"low",value:"LOW_COMPRESSION_1_3"},{name:"medium",value:"MEDIUM_COMPRESSION_2_1"},{name:"high",value:"HIGH_COMPRESSION_3_4"},{name:"extra",value:"EXTRA_HIGH_COMPRESSION_6_2"}],o="MEDIUM_COMPRESSION_2_1",s=function(e){if(e.length<=0)throw new Error("empty array");if(e.find((function(t){return t.length!==e[0].length})))throw new Error("different lengths");for(var t=[],n=0;n<e[0].length;++n)for(var a=0;a<e.length;++a)t.push(e[a][n]);return t},i=function(e,t){return l.slice().reverse().map((function(n){return{name:e+" ["+n.name+"]",value:t+"-"+n.value}}))},u=function(e){var t=e.value,n=e.onChange;return a.createElement(r.NH,{label:"Compression Ratio:",value:t,items:l.map((function(e){return{label:e.name,value:e.value}})),onChange:n})};t.default=u},1590:function(e,t,n){n.r(t),n.d(t,{DatasetChooseComponent:function(){return c},DefaultRealDataset:function(){return o},RealLengthDesc:function(){return l},filterByDataset:function(){return i}});var a=n(7294),r=n(9064),l={title:"Real Input Size",prop:"length",values:["298","420","531","538","686","34011","42223","51771","62830","81207","94417","607930","751048","781196","866049","904172","1075724","1293080","1448911","1599048","4072805","4287156"]},o="607930-4287156",s=["all","34011-94417","607930-4287156"],i=function(e,t){return"all"===e||("34011-94417"===e?u(t.length,34011,94417):u(t.length,607930,4287156))};function u(e,t,n){var a=parseInt(e);return t<=a&&a<=n}var c=function(e){var t=e.dataset,n=e.datasetSet;return a.createElement(r.NH,{label:"Data set:",items:s.map((function(e){return{label:e,value:e}})),value:t,onChange:n})};t.default=c},8316:function(e,t,n){n.r(t);var a=n(2982),r=n(1597),l=n(7294),o=n(9064),s=n(8667),i=n(5e3),u=n(3067),c=n(1590);var m=function(){var e=[];function t(t){e.push({name:t+"KB",value:(1024*t).toString()})}function n(t,n){e.push({name:t+"."+n+"MB",value:(1024*t*1024+100*n*1024).toString(),default:5===t&&0===n})}t(1);for(var a=5;a<100;a+=5)t(a);for(var r=100;r<=900;r+=100)t(r);for(var l=1;l<=4;++l)for(var o=0;o<=9;++o)n(l,o);return n(5,0),e}(),h={title:"Compression Method",prop:"algorithm",values:[{name:"Uncompressed",value:"uncompressed"},{name:"Compressed table",value:"auto_mysql"},{name:"deflate",value:"deflate"},{name:"deflate+len MySQL",value:"explicit_mysql"},{name:"deflate+len Java",value:"deflateWithSize"}].concat((0,a.Z)(["gzip","snappy","zstd","brotli_0","brotli_6","brotli_11","lz4_fast","lz4_high9","lz4_high17"].map((function(e){return{name:e,value:e}}))))},f={title:"Data length",prop:"length",values:m},p={title:"Data length, bytes"},v={title:"throughput, bytes per second"},d={title:"time, microseconds"},E={textStyle:{fontSize:14}},g=function(e){return"/data/charts/mysql-blob-fetch/"+e},C=(0,o.wZ)((function(e){var t,n=e.jmhList,s=(0,l.useState)(m.find((function(e){return e.default})).value),C=s[0],b=s[1],y=(0,l.useState)(u.DefaultCompressionRatio),S=y[0],D=y[1],x=(0,l.useState)("big"),_=x[0],w=x[1],R=(0,l.useState)(c.DefaultRealDataset),M=R[0],L=R[1],B=(0,l.useState)("aws"),T=B[0],A=B[1],I=(0,l.useState)(!0),O=I[0],k=I[1],H=(0,l.useState)(i.mA),j=H[0],N=H[1],z=function(e){return"all"===_||("small"===_?parseInt(e.length)<=102400:parseInt(e.length)>=102400)},F=l.createElement(o.NH,{label:"Data set:",items:(t=["all","small","big"],t.map((function(e){return{label:e,value:e}}))),value:_,onChange:w}),P=l.createElement(c.DatasetChooseComponent,{dataset:M,datasetSet:L}),q=l.createElement(u.CompressionRatioChooseComponent,{value:S,onChange:D}),J=l.createElement(o.NH,{label:"Network:",items:[{label:"localhost",value:"localhost"},{label:"AWS",value:"aws"},{label:"1GBit Ethernet",value:"ethernet"},{label:"1GBit Wi-Fi",value:"wifi"}],value:T,onChange:A}),W=function(e){return e?l.createElement("div",null,J,P):l.createElement("div",null,J,q,F)},G=function(e){return e?function(t){return t.network===T&&t.realData===e&&(0,c.filterByDataset)(M,t)}:function(t){return t.network===T&&t.realData===e&&function(e){return e.compressionRatio===S}(t)&&z(t)}},Q=function(e){return O?null:l.createElement("div",null,l.createElement("h3",null,"Fetch BLOBs of different lengths"),W(e),l.createElement(o.ow,{chartType:"Line",dataTable:n,extractor:j.func,filter:G(e),xDesc:e?c.RealLengthDesc:f,yDesc:h,options:{hAxis:p,vAxis:d,legend:E}}))},V=function(e){var t=l.createElement("div",null,l.createElement("h3",null,"Effective throughput after decompression"),W(e),l.createElement(o.ow,{chartType:"Line",dataTable:n,extractor:function(e){return e.totalBytesReturned},filter:G(e),xDesc:e?c.RealLengthDesc:f,yDesc:h,options:{hAxis:p,vAxis:v,legend:E}}));return O?t:l.createElement("div",null,t,l.createElement("h3",null,"MySQL data throughput over the wire"),W(e),l.createElement(o.ow,{chartType:"Line",dataTable:n,extractor:function(e){return e.totalBytesFromMysql},filter:G(e),xDesc:e?c.RealLengthDesc:f,yDesc:h,options:{hAxis:p,vAxis:v,legend:E}}))},U=function(e,t){var a=l.createElement("div",null,l.createElement("h4",null,"Throughput"),F,J,l.createElement(o.ow,{chartType:"Line",dataTable:n,extractor:function(e){return e.totalBytesReturned},filter:function(e){return e.network===T&&z(e)},xDesc:f,yDesc:t,alternateColors:t.values.length%4==0?2:0,options:{hAxis:p,vAxis:v,legend:E,focusTarget:"category"}}));return O?l.createElement("div",null,l.createElement("h3",null,e," with different compression ratios"),a):l.createElement("div",null,l.createElement("h3",null,e," with different compression ratios"),l.createElement("h4",null,"Performance"),F,J,l.createElement(o.ow,{chartType:"Line",dataTable:n,extractor:j.func,filter:function(e){return e.network===T&&z(e)},xDesc:f,yDesc:t,alternateColors:t.values.length%4==0?2:0,options:{hAxis:p,vAxis:d,legend:E}}),a)};return l.createElement("div",{className:"markdown"},l.createElement("h2",null,"Introduction"),l.createElement("p",null,"Here are benchmarking results for"," ",l.createElement(r.Link,{to:"/p/mysql-blob-fetch-performance-in-java"},"«MySQL BLOB Fetch Performance In Java»")," ","blog post."),l.createElement("p",null,"The performance tests are performed via ",l.createElement("a",{href:"https://github.com/openjdk/jmh"},"JMH"),". The configuration of a hardware is Intel® Core™ i7-1165G7 @ 2.80GHz × 8 (4 core + 4 HT) with 16 GB RAM. Scala version: 2.13.6."),l.createElement("ul",null,l.createElement("li",null,l.createElement("a",{href:"#real-data"},"Charts for real data")),l.createElement("li",null,l.createElement("a",{href:"#stub-data"},"Charts for stub (random) data")),l.createElement("li",null,l.createElement("a",{href:"#comparisons"},"Comparisons for stub (random) data"))),l.createElement(o.NH,{label:"Hide irrelevant charts:",items:[{label:"Yes",value:!0},{label:"Show Me Everything",value:!1}],value:O,onChange:k}),l.createElement(o.J6,{onChange:function(e){return N({func:e})}}),l.createElement("h2",null,"Charts for real data"),Q(!0),V(!0),l.createElement("h2",null,"Charts for stub (random) data"),Q(!1),V(!1),l.createElement("h3",null,"Fetch performance for different compression ratios"),J,l.createElement(o.qv,{label:"Data length:",items:m.map((function(e){return{label:e.name,value:e.value,default:!0===e.default}})),onChange:function(e){return b(e)}}),l.createElement(o.ow,{chartType:"Bar",dataTable:n,extractor:function(e){return e.totalBytesReturned},filter:function(e){return e.length===C&&e.network===T},xDesc:{title:"Compression Ratio",prop:"compressionRatio",values:u.AllCompressionRatios},yDesc:h,options:{hAxis:{title:"Compression Ratio"},vAxis:v}}),l.createElement("h2",{id:"comparisons"},"Comparisons"),U("Uncompressed vs LZ4",{title:"Compression Method",prop:"comparison",values:[{name:"Uncompressed",value:"uncompressed-LOW_COMPRESSION_1_3"}].concat((0,a.Z)((0,u.comparisonValues)("lz4_high9","lz4_high9")))}),U("Compressed Table vs DECOMPRESS",{title:"Compression Method",prop:"comparison",values:(0,u.sideBySide)([(0,u.comparisonValues)("Compressed table","auto_mysql"),(0,u.comparisonValues)("deflate+len MySQL","explicit_mysql")])}),U("Java vs MySQL",{title:"Compression Method",prop:"comparison",values:(0,u.sideBySide)([(0,u.comparisonValues)("Java","deflateWithSize"),(0,u.comparisonValues)("MySQL","explicit_mysql")])}),l.createElement("p",null,"Full JMH logs: ",l.createElement("a",{href:g("localhost.log.txt")},"localhost")," (",l.createElement("a",{href:g("localhost.json")},"json"),"), ",l.createElement("a",{href:g("aws.log.txt")},"AWS")," (",l.createElement("a",{href:g("aws.json")},"json"),"), ",l.createElement("a",{href:g("ethernet.log.txt")},"Ethernet")," (",l.createElement("a",{href:g("ethernet.json")},"json"),"), ",l.createElement("a",{href:g("wifi.log.txt")},"Wi‑Fi")," (",l.createElement("a",{href:g("wifi.json")},"json"),")."))}),{fetchFunc:function(){return(0,s._l)(g("jmh.min.json"))},exportDimensionsFunc:function(e,t){return t},headerText:"MySQL BLOB Fetch Performance In Java (Charts)"});t.default=C}}]);
//# sourceMappingURL=component---src-pages-charts-mysql-blob-fetch-index-tsx-479eabb8b57bfe4a76bf.js.map