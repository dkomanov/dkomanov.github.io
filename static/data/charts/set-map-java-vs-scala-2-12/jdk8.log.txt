# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000)

# Run progress: 0.00% complete, ETA 00:22:24
# Fork: 1 of 1
# Warmup Iteration   1: 251.809 ns/op
# Warmup Iteration   2: 236.661 ns/op
Iteration   1: 221.346 ns/op
Iteration   2: 217.722 ns/op
Iteration   3: 220.720 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  219.929 ±(99.9%) 35.337 ns/op [Average]
  (min, avg, max) = (217.722, 219.929, 221.346), stdev = 1.937
  CI (99.9%): [184.592, 255.267] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 10000)

# Run progress: 1.56% complete, ETA 00:23:00
# Fork: 1 of 1
# Warmup Iteration   1: 251.427 ns/op
# Warmup Iteration   2: 222.978 ns/op
Iteration   1: 212.737 ns/op
Iteration   2: 215.043 ns/op
Iteration   3: 217.509 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  215.096 ±(99.9%) 43.537 ns/op [Average]
  (min, avg, max) = (212.737, 215.096, 217.509), stdev = 2.386
  CI (99.9%): [171.559, 258.634] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 100000)

# Run progress: 3.13% complete, ETA 00:22:38
# Fork: 1 of 1
# Warmup Iteration   1: 175.666 ns/op
# Warmup Iteration   2: 161.937 ns/op
Iteration   1: 160.389 ns/op
Iteration   2: 159.879 ns/op
Iteration   3: 159.903 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  160.057 ±(99.9%) 5.244 ns/op [Average]
  (min, avg, max) = (159.879, 160.057, 160.389), stdev = 0.287
  CI (99.9%): [154.813, 165.301] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000000)

# Run progress: 4.69% complete, ETA 00:22:23
# Fork: 1 of 1
# Warmup Iteration   1: 224.955 ns/op
# Warmup Iteration   2: 458.530 ns/op
Iteration   1: 169.667 ns/op
Iteration   2: 169.844 ns/op
Iteration   3: 169.530 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  169.680 ±(99.9%) 2.875 ns/op [Average]
  (min, avg, max) = (169.530, 169.680, 169.844), stdev = 0.158
  CI (99.9%): [166.805, 172.555] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000)

# Run progress: 6.25% complete, ETA 00:23:03
# Fork: 1 of 1
# Warmup Iteration   1: 231.208 ns/op
# Warmup Iteration   2: 211.299 ns/op
Iteration   1: 200.819 ns/op
Iteration   2: 199.736 ns/op
Iteration   3: 199.111 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  199.889 ±(99.9%) 15.767 ns/op [Average]
  (min, avg, max) = (199.111, 199.889, 200.819), stdev = 0.864
  CI (99.9%): [184.122, 215.656] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 10000)

# Run progress: 7.81% complete, ETA 00:22:25
# Fork: 1 of 1
# Warmup Iteration   1: 232.599 ns/op
# Warmup Iteration   2: 213.190 ns/op
Iteration   1: 200.132 ns/op
Iteration   2: 200.349 ns/op
Iteration   3: 200.933 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  200.471 ±(99.9%) 7.564 ns/op [Average]
  (min, avg, max) = (200.132, 200.471, 200.933), stdev = 0.415
  CI (99.9%): [192.907, 208.036] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 100000)

# Run progress: 9.38% complete, ETA 00:21:54
# Fork: 1 of 1
# Warmup Iteration   1: 148.991 ns/op
# Warmup Iteration   2: 134.207 ns/op
Iteration   1: 131.613 ns/op
Iteration   2: 131.839 ns/op
Iteration   3: 130.825 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  131.426 ±(99.9%) 9.704 ns/op [Average]
  (min, avg, max) = (130.825, 131.426, 131.839), stdev = 0.532
  CI (99.9%): [121.722, 141.129] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000000)

# Run progress: 10.94% complete, ETA 00:21:28
# Fork: 1 of 1
# Warmup Iteration   1: 186.280 ns/op
# Warmup Iteration   2: 375.782 ns/op
Iteration   1: 128.806 ns/op
Iteration   2: 127.850 ns/op
Iteration   3: 127.783 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  128.146 ±(99.9%) 10.435 ns/op [Average]
  (min, avg, max) = (127.783, 128.146, 128.806), stdev = 0.572
  CI (99.9%): [117.711, 138.581] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000)

# Run progress: 12.50% complete, ETA 00:21:30
# Fork: 1 of 1
# Warmup Iteration   1: 181.240 ns/op
# Warmup Iteration   2: 178.704 ns/op
Iteration   1: 162.988 ns/op
Iteration   2: 164.237 ns/op
Iteration   3: 163.554 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  163.593 ±(99.9%) 11.407 ns/op [Average]
  (min, avg, max) = (162.988, 163.593, 164.237), stdev = 0.625
  CI (99.9%): [152.186, 175.000] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 10000)

# Run progress: 14.06% complete, ETA 00:20:59
# Fork: 1 of 1
# Warmup Iteration   1: 177.545 ns/op
# Warmup Iteration   2: 167.771 ns/op
Iteration   1: 160.093 ns/op
Iteration   2: 162.958 ns/op
Iteration   3: 159.123 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  160.725 ±(99.9%) 36.377 ns/op [Average]
  (min, avg, max) = (159.123, 160.725, 162.958), stdev = 1.994
  CI (99.9%): [124.348, 197.102] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 100000)

# Run progress: 15.63% complete, ETA 00:20:31
# Fork: 1 of 1
# Warmup Iteration   1: 190.997 ns/op
# Warmup Iteration   2: 177.840 ns/op
Iteration   1: 168.118 ns/op
Iteration   2: 168.464 ns/op
Iteration   3: 170.830 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  169.137 ±(99.9%) 26.930 ns/op [Average]
  (min, avg, max) = (168.118, 169.137, 170.830), stdev = 1.476
  CI (99.9%): [142.207, 196.067] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000000)

# Run progress: 17.19% complete, ETA 00:20:06
# Fork: 1 of 1
# Warmup Iteration   1: 231.358 ns/op
# Warmup Iteration   2: 338.602 ns/op
Iteration   1: 179.007 ns/op
Iteration   2: 182.167 ns/op
Iteration   3: 181.451 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  180.875 ±(99.9%) 30.224 ns/op [Average]
  (min, avg, max) = (179.007, 180.875, 182.167), stdev = 1.657
  CI (99.9%): [150.651, 211.099] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000)

# Run progress: 18.75% complete, ETA 00:20:03
# Fork: 1 of 1
# Warmup Iteration   1: 163.628 ns/op
# Warmup Iteration   2: 153.607 ns/op
Iteration   1: 150.503 ns/op
Iteration   2: 150.430 ns/op
Iteration   3: 152.484 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  151.139 ±(99.9%) 21.262 ns/op [Average]
  (min, avg, max) = (150.430, 151.139, 152.484), stdev = 1.165
  CI (99.9%): [129.877, 172.401] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 10000)

# Run progress: 20.31% complete, ETA 00:19:35
# Fork: 1 of 1
# Warmup Iteration   1: 167.874 ns/op
# Warmup Iteration   2: 158.975 ns/op
Iteration   1: 150.812 ns/op
Iteration   2: 156.089 ns/op
Iteration   3: 155.626 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  154.176 ±(99.9%) 53.308 ns/op [Average]
  (min, avg, max) = (150.812, 154.176, 156.089), stdev = 2.922
  CI (99.9%): [100.867, 207.484] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 100000)

# Run progress: 21.88% complete, ETA 00:19:07
# Fork: 1 of 1
# Warmup Iteration   1: 170.002 ns/op
# Warmup Iteration   2: 156.986 ns/op
Iteration   1: 148.421 ns/op
Iteration   2: 149.462 ns/op
Iteration   3: 150.987 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  149.623 ±(99.9%) 23.541 ns/op [Average]
  (min, avg, max) = (148.421, 149.623, 150.987), stdev = 1.290
  CI (99.9%): [126.082, 173.164] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000000)

# Run progress: 23.44% complete, ETA 00:18:42
# Fork: 1 of 1
# Warmup Iteration   1: 215.740 ns/op
# Warmup Iteration   2: 337.092 ns/op
Iteration   1: 144.645 ns/op
Iteration   2: 147.842 ns/op
Iteration   3: 147.539 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  146.675 ±(99.9%) 32.201 ns/op [Average]
  (min, avg, max) = (144.645, 146.675, 147.842), stdev = 1.765
  CI (99.9%): [114.474, 178.877] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000)

# Run progress: 25.00% complete, ETA 00:18:31
# Fork: 1 of 1
# Warmup Iteration   1: 211.796 ns/op
# Warmup Iteration   2: 197.104 ns/op
Iteration   1: 188.204 ns/op
Iteration   2: 193.433 ns/op
Iteration   3: 191.864 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  191.167 ±(99.9%) 48.951 ns/op [Average]
  (min, avg, max) = (188.204, 191.167, 193.433), stdev = 2.683
  CI (99.9%): [142.216, 240.117] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 10000)

# Run progress: 26.56% complete, ETA 00:18:04
# Fork: 1 of 1
# Warmup Iteration   1: 227.912 ns/op
# Warmup Iteration   2: 217.221 ns/op
Iteration   1: 203.248 ns/op
Iteration   2: 201.951 ns/op
Iteration   3: 204.624 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  203.274 ±(99.9%) 24.389 ns/op [Average]
  (min, avg, max) = (201.951, 203.274, 204.624), stdev = 1.337
  CI (99.9%): [178.885, 227.663] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 100000)

# Run progress: 28.13% complete, ETA 00:17:38
# Fork: 1 of 1
# Warmup Iteration   1: 233.249 ns/op
# Warmup Iteration   2: 208.452 ns/op
Iteration   1: 201.051 ns/op
Iteration   2: 201.306 ns/op
Iteration   3: 201.901 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  201.420 ±(99.9%) 7.955 ns/op [Average]
  (min, avg, max) = (201.051, 201.420, 201.901), stdev = 0.436
  CI (99.9%): [193.464, 209.375] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000000)

# Run progress: 29.69% complete, ETA 00:17:13
# Fork: 1 of 1
# Warmup Iteration   1: 278.725 ns/op
# Warmup Iteration   2: 258.301 ns/op
Iteration   1: 346.543 ns/op
Iteration   2: 226.425 ns/op
Iteration   3: 227.926 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  266.965 ±(99.9%) 1257.368 ns/op [Average]
  (min, avg, max) = (226.425, 266.965, 346.543), stdev = 68.921
  CI (99.9%): [≈ 0, 1524.333] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000)

# Run progress: 31.25% complete, ETA 00:16:57
# Fork: 1 of 1
# Warmup Iteration   1: 287.384 ns/op
# Warmup Iteration   2: 271.729 ns/op
Iteration   1: 262.220 ns/op
Iteration   2: 259.160 ns/op
Iteration   3: 262.221 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  261.200 ±(99.9%) 32.234 ns/op [Average]
  (min, avg, max) = (259.160, 261.200, 262.221), stdev = 1.767
  CI (99.9%): [228.966, 293.434] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 10000)

# Run progress: 32.81% complete, ETA 00:16:31
# Fork: 1 of 1
# Warmup Iteration   1: 297.111 ns/op
# Warmup Iteration   2: 272.130 ns/op
Iteration   1: 267.682 ns/op
Iteration   2: 268.659 ns/op
Iteration   3: 269.571 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  268.637 ±(99.9%) 17.234 ns/op [Average]
  (min, avg, max) = (267.682, 268.637, 269.571), stdev = 0.945
  CI (99.9%): [251.403, 285.871] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 100000)

# Run progress: 34.38% complete, ETA 00:16:06
# Fork: 1 of 1
# Warmup Iteration   1: 290.223 ns/op
# Warmup Iteration   2: 266.213 ns/op
Iteration   1: 258.638 ns/op
Iteration   2: 258.968 ns/op
Iteration   3: 259.398 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  259.001 ±(99.9%) 6.954 ns/op [Average]
  (min, avg, max) = (258.638, 259.001, 259.398), stdev = 0.381
  CI (99.9%): [252.047, 265.955] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000000)

# Run progress: 35.94% complete, ETA 00:15:42
# Fork: 1 of 1
# Warmup Iteration   1: 332.606 ns/op
# Warmup Iteration   2: 318.421 ns/op
Iteration   1: 411.927 ns/op
Iteration   2: 258.571 ns/op
Iteration   3: 258.702 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  309.733 ±(99.9%) 1614.619 ns/op [Average]
  (min, avg, max) = (258.571, 309.733, 411.927), stdev = 88.503
  CI (99.9%): [≈ 0, 1924.352] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000)

# Run progress: 37.50% complete, ETA 00:15:24
# Fork: 1 of 1
# Warmup Iteration   1: 179.253 ns/op
# Warmup Iteration   2: 170.152 ns/op
Iteration   1: 161.006 ns/op
Iteration   2: 164.688 ns/op
Iteration   3: 161.598 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  162.431 ±(99.9%) 36.073 ns/op [Average]
  (min, avg, max) = (161.006, 162.431, 164.688), stdev = 1.977
  CI (99.9%): [126.358, 198.504] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 10000)

# Run progress: 39.06% complete, ETA 00:14:59
# Fork: 1 of 1
# Warmup Iteration   1: 186.561 ns/op
# Warmup Iteration   2: 180.205 ns/op
Iteration   1: 167.168 ns/op
Iteration   2: 174.929 ns/op
Iteration   3: 168.037 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  170.044 ±(99.9%) 77.575 ns/op [Average]
  (min, avg, max) = (167.168, 170.044, 174.929), stdev = 4.252
  CI (99.9%): [92.469, 247.620] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 100000)

# Run progress: 40.63% complete, ETA 00:14:34
# Fork: 1 of 1
# Warmup Iteration   1: 160.942 ns/op
# Warmup Iteration   2: 148.948 ns/op
Iteration   1: 147.062 ns/op
Iteration   2: 146.025 ns/op
Iteration   3: 147.533 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  146.873 ±(99.9%) 14.077 ns/op [Average]
  (min, avg, max) = (146.025, 146.873, 147.533), stdev = 0.772
  CI (99.9%): [132.797, 160.950] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000000)

# Run progress: 42.19% complete, ETA 00:14:10
# Fork: 1 of 1
# Warmup Iteration   1: 239.845 ns/op
# Warmup Iteration   2: 347.856 ns/op
Iteration   1: 165.996 ns/op
Iteration   2: 167.867 ns/op
Iteration   3: 170.341 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  168.068 ±(99.9%) 39.757 ns/op [Average]
  (min, avg, max) = (165.996, 168.068, 170.341), stdev = 2.179
  CI (99.9%): [128.311, 207.825] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000)

# Run progress: 43.75% complete, ETA 00:13:53
# Fork: 1 of 1
# Warmup Iteration   1: 169.469 ns/op
# Warmup Iteration   2: 157.825 ns/op
Iteration   1: 150.959 ns/op
Iteration   2: 150.106 ns/op
Iteration   3: 152.351 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  151.139 ±(99.9%) 20.679 ns/op [Average]
  (min, avg, max) = (150.106, 151.139, 152.351), stdev = 1.133
  CI (99.9%): [130.460, 171.817] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 10000)

# Run progress: 45.31% complete, ETA 00:13:28
# Fork: 1 of 1
# Warmup Iteration   1: 175.604 ns/op
# Warmup Iteration   2: 160.784 ns/op
Iteration   1: 156.841 ns/op
Iteration   2: 155.687 ns/op
Iteration   3: 156.446 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  156.324 ±(99.9%) 10.693 ns/op [Average]
  (min, avg, max) = (155.687, 156.324, 156.841), stdev = 0.586
  CI (99.9%): [145.631, 167.017] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 100000)

# Run progress: 46.88% complete, ETA 00:13:04
# Fork: 1 of 1
# Warmup Iteration   1: 179.136 ns/op
# Warmup Iteration   2: 162.459 ns/op
Iteration   1: 151.187 ns/op
Iteration   2: 152.587 ns/op
Iteration   3: 152.973 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  152.249 ±(99.9%) 17.147 ns/op [Average]
  (min, avg, max) = (151.187, 152.249, 152.973), stdev = 0.940
  CI (99.9%): [135.102, 169.396] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000000)

# Run progress: 48.44% complete, ETA 00:12:40
# Fork: 1 of 1
# Warmup Iteration   1: 172.745 ns/op
# Warmup Iteration   2: 145.510 ns/op
Iteration   1: 139.820 ns/op
Iteration   2: 138.685 ns/op
Iteration   3: 140.360 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  139.622 ±(99.9%) 15.599 ns/op [Average]
  (min, avg, max) = (138.685, 139.622, 140.360), stdev = 0.855
  CI (99.9%): [124.023, 155.221] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000)

# Run progress: 50.00% complete, ETA 00:12:21
# Fork: 1 of 1
# Warmup Iteration   1: 336.656 ns/op
# Warmup Iteration   2: 315.750 ns/op
Iteration   1: 307.867 ns/op
Iteration   2: 310.238 ns/op
Iteration   3: 310.631 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  309.579 ±(99.9%) 27.280 ns/op [Average]
  (min, avg, max) = (307.867, 309.579, 310.631), stdev = 1.495
  CI (99.9%): [282.299, 336.858] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 10000)

# Run progress: 51.56% complete, ETA 00:11:56
# Fork: 1 of 1
# Warmup Iteration   1: 378.506 ns/op
# Warmup Iteration   2: 348.841 ns/op
Iteration   1: 339.353 ns/op
Iteration   2: 340.946 ns/op
Iteration   3: 343.511 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  341.270 ±(99.9%) 38.278 ns/op [Average]
  (min, avg, max) = (339.353, 341.270, 343.511), stdev = 2.098
  CI (99.9%): [302.992, 379.548] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 100000)

# Run progress: 53.13% complete, ETA 00:11:32
# Fork: 1 of 1
# Warmup Iteration   1: 437.591 ns/op
# Warmup Iteration   2: 413.400 ns/op
Iteration   1: 404.516 ns/op
Iteration   2: 400.979 ns/op
Iteration   3: 400.326 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  401.941 ±(99.9%) 41.125 ns/op [Average]
  (min, avg, max) = (400.326, 401.941, 404.516), stdev = 2.254
  CI (99.9%): [360.815, 443.066] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000000)

# Run progress: 54.69% complete, ETA 00:11:08
# Fork: 1 of 1
# Warmup Iteration   1: 598.356 ns/op
# Warmup Iteration   2: 547.584 ns/op
Iteration   1: 793.452 ns/op
Iteration   2: 488.454 ns/op
Iteration   3: 489.714 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  590.540 ±(99.9%) 3205.939 ns/op [Average]
  (min, avg, max) = (488.454, 590.540, 793.452), stdev = 175.728
  CI (99.9%): [≈ 0, 3796.479] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000)

# Run progress: 56.25% complete, ETA 00:10:48
# Fork: 1 of 1
# Warmup Iteration   1: 246.858 ns/op
# Warmup Iteration   2: 232.656 ns/op
Iteration   1: 234.267 ns/op
Iteration   2: 235.506 ns/op
Iteration   3: 244.828 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  238.200 ±(99.9%) 105.329 ns/op [Average]
  (min, avg, max) = (234.267, 238.200, 244.828), stdev = 5.773
  CI (99.9%): [132.871, 343.530] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 10000)

# Run progress: 57.81% complete, ETA 00:10:24
# Fork: 1 of 1
# Warmup Iteration   1: 304.311 ns/op
# Warmup Iteration   2: 271.375 ns/op
Iteration   1: 261.864 ns/op
Iteration   2: 261.574 ns/op
Iteration   3: 264.758 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  262.732 ±(99.9%) 32.119 ns/op [Average]
  (min, avg, max) = (261.574, 262.732, 264.758), stdev = 1.761
  CI (99.9%): [230.613, 294.851] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 100000)

# Run progress: 59.38% complete, ETA 00:10:00
# Fork: 1 of 1
# Warmup Iteration   1: 363.602 ns/op
# Warmup Iteration   2: 344.642 ns/op
Iteration   1: 331.923 ns/op
Iteration   2: 332.447 ns/op
Iteration   3: 332.851 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  332.407 ±(99.9%) 8.494 ns/op [Average]
  (min, avg, max) = (331.923, 332.407, 332.851), stdev = 0.466
  CI (99.9%): [323.914, 340.901] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000000)

# Run progress: 60.94% complete, ETA 00:09:36
# Fork: 1 of 1
# Warmup Iteration   1: 446.946 ns/op
# Warmup Iteration   2: 407.057 ns/op
Iteration   1: 579.819 ns/op
Iteration   2: 372.415 ns/op
Iteration   3: 366.204 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  439.479 ±(99.9%) 2218.027 ns/op [Average]
  (min, avg, max) = (366.204, 439.479, 579.819), stdev = 121.578
  CI (99.9%): [≈ 0, 2657.507] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000)

# Run progress: 62.50% complete, ETA 00:09:15
# Fork: 1 of 1
# Warmup Iteration   1: 329.147 ns/op
# Warmup Iteration   2: 313.982 ns/op
Iteration   1: 304.484 ns/op
Iteration   2: 303.426 ns/op
Iteration   3: 302.693 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  303.534 ±(99.9%) 16.426 ns/op [Average]
  (min, avg, max) = (302.693, 303.534, 304.484), stdev = 0.900
  CI (99.9%): [287.108, 319.960] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 10000)

# Run progress: 64.06% complete, ETA 00:08:51
# Fork: 1 of 1
# Warmup Iteration   1: 337.128 ns/op
# Warmup Iteration   2: 314.932 ns/op
Iteration   1: 304.660 ns/op
Iteration   2: 303.834 ns/op
Iteration   3: 314.474 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  307.656 ±(99.9%) 107.983 ns/op [Average]
  (min, avg, max) = (303.834, 307.656, 314.474), stdev = 5.919
  CI (99.9%): [199.672, 415.639] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 100000)

# Run progress: 65.63% complete, ETA 00:08:27
# Fork: 1 of 1
# Warmup Iteration   1: 359.647 ns/op
# Warmup Iteration   2: 328.741 ns/op
Iteration   1: 317.108 ns/op
Iteration   2: 315.468 ns/op
Iteration   3: 313.327 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  315.301 ±(99.9%) 34.593 ns/op [Average]
  (min, avg, max) = (313.327, 315.301, 317.108), stdev = 1.896
  CI (99.9%): [280.708, 349.894] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000000)

# Run progress: 67.19% complete, ETA 00:08:04
# Fork: 1 of 1
# Warmup Iteration   1: 380.387 ns/op
# Warmup Iteration   2: 350.527 ns/op
Iteration   1: 497.860 ns/op
Iteration   2: 306.982 ns/op
Iteration   3: 307.076 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  370.640 ±(99.9%) 2010.031 ns/op [Average]
  (min, avg, max) = (306.982, 370.640, 497.860), stdev = 110.177
  CI (99.9%): [≈ 0, 2380.671] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000)

# Run progress: 68.75% complete, ETA 00:07:42
# Fork: 1 of 1
# Warmup Iteration   1: 295.776 ns/op
# Warmup Iteration   2: 277.423 ns/op
Iteration   1: 272.361 ns/op
Iteration   2: 275.382 ns/op
Iteration   3: 270.458 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  272.733 ±(99.9%) 45.298 ns/op [Average]
  (min, avg, max) = (270.458, 272.733, 275.382), stdev = 2.483
  CI (99.9%): [227.436, 318.031] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 10000)

# Run progress: 70.31% complete, ETA 00:07:19
# Fork: 1 of 1
# Warmup Iteration   1: 314.111 ns/op
# Warmup Iteration   2: 289.045 ns/op
Iteration   1: 281.656 ns/op
Iteration   2: 283.722 ns/op
Iteration   3: 286.139 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  283.839 ±(99.9%) 40.938 ns/op [Average]
  (min, avg, max) = (281.656, 283.839, 286.139), stdev = 2.244
  CI (99.9%): [242.901, 324.777] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 100000)

# Run progress: 71.88% complete, ETA 00:06:55
# Fork: 1 of 1
# Warmup Iteration   1: 319.394 ns/op
# Warmup Iteration   2: 297.243 ns/op
Iteration   1: 282.521 ns/op
Iteration   2: 283.816 ns/op
Iteration   3: 283.019 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  283.119 ±(99.9%) 11.922 ns/op [Average]
  (min, avg, max) = (282.521, 283.119, 283.816), stdev = 0.653
  CI (99.9%): [271.197, 295.041] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000000)

# Run progress: 73.44% complete, ETA 00:06:32
# Fork: 1 of 1
# Warmup Iteration   1: 346.108 ns/op
# Warmup Iteration   2: 339.316 ns/op
Iteration   1: 311.196 ns/op
Iteration   2: 297.036 ns/op
Iteration   3: 299.339 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  302.524 ±(99.9%) 138.620 ns/op [Average]
  (min, avg, max) = (297.036, 302.524, 311.196), stdev = 7.598
  CI (99.9%): [163.904, 441.143] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000)

# Run progress: 75.00% complete, ETA 00:06:10
# Fork: 1 of 1
# Warmup Iteration   1: 221.516 ns/op
# Warmup Iteration   2: 208.306 ns/op
Iteration   1: 201.948 ns/op
Iteration   2: 202.796 ns/op
Iteration   3: 206.828 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  203.857 ±(99.9%) 47.576 ns/op [Average]
  (min, avg, max) = (201.948, 203.857, 206.828), stdev = 2.608
  CI (99.9%): [156.282, 251.433] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 10000)

# Run progress: 76.56% complete, ETA 00:05:46
# Fork: 1 of 1
# Warmup Iteration   1: 213.340 ns/op
# Warmup Iteration   2: 203.716 ns/op
Iteration   1: 192.815 ns/op
Iteration   2: 191.695 ns/op
Iteration   3: 195.842 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  193.451 ±(99.9%) 39.140 ns/op [Average]
  (min, avg, max) = (191.695, 193.451, 195.842), stdev = 2.145
  CI (99.9%): [154.311, 232.591] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 100000)

# Run progress: 78.13% complete, ETA 00:05:23
# Fork: 1 of 1
# Warmup Iteration   1: 242.518 ns/op
# Warmup Iteration   2: 228.579 ns/op
Iteration   1: 213.819 ns/op
Iteration   2: 216.235 ns/op
Iteration   3: 213.397 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  214.484 ±(99.9%) 27.944 ns/op [Average]
  (min, avg, max) = (213.397, 214.484, 216.235), stdev = 1.532
  CI (99.9%): [186.539, 242.428] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000000)

# Run progress: 79.69% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 232.949 ns/op
# Warmup Iteration   2: 219.907 ns/op
Iteration   1: 198.227 ns/op
Iteration   2: 195.657 ns/op
Iteration   3: 195.469 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  196.451 ±(99.9%) 28.109 ns/op [Average]
  (min, avg, max) = (195.469, 196.451, 198.227), stdev = 1.541
  CI (99.9%): [168.342, 224.560] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000)

# Run progress: 81.25% complete, ETA 00:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 249.485 ns/op
# Warmup Iteration   2: 235.265 ns/op
Iteration   1: 254.798 ns/op
Iteration   2: 260.220 ns/op
Iteration   3: 257.680 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  257.566 ±(99.9%) 49.485 ns/op [Average]
  (min, avg, max) = (254.798, 257.566, 260.220), stdev = 2.712
  CI (99.9%): [208.081, 307.051] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 10000)

# Run progress: 82.81% complete, ETA 00:04:14
# Fork: 1 of 1
# Warmup Iteration   1: 244.486 ns/op
# Warmup Iteration   2: 230.995 ns/op
Iteration   1: 219.165 ns/op
Iteration   2: 218.547 ns/op
Iteration   3: 218.938 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  218.883 ±(99.9%) 5.703 ns/op [Average]
  (min, avg, max) = (218.547, 218.883, 219.165), stdev = 0.313
  CI (99.9%): [213.180, 224.586] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 100000)

# Run progress: 84.38% complete, ETA 00:03:51
# Fork: 1 of 1
# Warmup Iteration   1: 383.807 ns/op
# Warmup Iteration   2: 358.403 ns/op
Iteration   1: 339.515 ns/op
Iteration   2: 339.266 ns/op
Iteration   3: 342.822 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  340.534 ±(99.9%) 36.219 ns/op [Average]
  (min, avg, max) = (339.266, 340.534, 342.822), stdev = 1.985
  CI (99.9%): [304.315, 376.753] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000000)

# Run progress: 85.94% complete, ETA 00:03:27
# Fork: 1 of 1
# Warmup Iteration   1: 318.995 ns/op
# Warmup Iteration   2: 298.551 ns/op
Iteration   1: 289.786 ns/op
Iteration   2: 280.700 ns/op
Iteration   3: 279.129 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  283.205 ±(99.9%) 104.959 ns/op [Average]
  (min, avg, max) = (279.129, 283.205, 289.786), stdev = 5.753
  CI (99.9%): [178.246, 388.164] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000)

# Run progress: 87.50% complete, ETA 00:03:05
# Fork: 1 of 1
# Warmup Iteration   1: 321.068 ns/op
# Warmup Iteration   2: 298.969 ns/op
Iteration   1: 297.159 ns/op
Iteration   2: 297.718 ns/op
Iteration   3: 300.119 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  298.332 ±(99.9%) 28.696 ns/op [Average]
  (min, avg, max) = (297.159, 298.332, 300.119), stdev = 1.573
  CI (99.9%): [269.636, 327.028] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 10000)

# Run progress: 89.06% complete, ETA 00:02:42
# Fork: 1 of 1
# Warmup Iteration   1: 334.008 ns/op
# Warmup Iteration   2: 308.494 ns/op
Iteration   1: 301.586 ns/op
Iteration   2: 302.216 ns/op
Iteration   3: 310.052 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  304.618 ±(99.9%) 86.043 ns/op [Average]
  (min, avg, max) = (301.586, 304.618, 310.052), stdev = 4.716
  CI (99.9%): [218.575, 390.661] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 100000)

# Run progress: 90.63% complete, ETA 00:02:18
# Fork: 1 of 1
# Warmup Iteration   1: 422.986 ns/op
# Warmup Iteration   2: 398.526 ns/op
Iteration   1: 391.178 ns/op
Iteration   2: 392.186 ns/op
Iteration   3: 396.942 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  393.435 ±(99.9%) 56.159 ns/op [Average]
  (min, avg, max) = (391.178, 393.435, 396.942), stdev = 3.078
  CI (99.9%): [337.276, 449.594] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000000)

# Run progress: 92.19% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 505.042 ns/op
# Warmup Iteration   2: 470.406 ns/op
Iteration   1: 471.786 ns/op
Iteration   2: 454.390 ns/op
Iteration   3: 454.602 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  460.260 ±(99.9%) 182.127 ns/op [Average]
  (min, avg, max) = (454.390, 460.260, 471.786), stdev = 9.983
  CI (99.9%): [278.132, 642.387] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000)

# Run progress: 93.75% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: 214.283 ns/op
# Warmup Iteration   2: 206.691 ns/op
Iteration   1: 195.990 ns/op
Iteration   2: 198.517 ns/op
Iteration   3: 197.456 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  197.321 ±(99.9%) 23.156 ns/op [Average]
  (min, avg, max) = (195.990, 197.321, 198.517), stdev = 1.269
  CI (99.9%): [174.165, 220.476] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 10000)

# Run progress: 95.31% complete, ETA 00:01:09
# Fork: 1 of 1
# Warmup Iteration   1: 254.488 ns/op
# Warmup Iteration   2: 245.409 ns/op
Iteration   1: 232.000 ns/op
Iteration   2: 232.165 ns/op
Iteration   3: 236.600 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  233.588 ±(99.9%) 47.604 ns/op [Average]
  (min, avg, max) = (232.000, 233.588, 236.600), stdev = 2.609
  CI (99.9%): [185.984, 281.192] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 100000)

# Run progress: 96.88% complete, ETA 00:00:46
# Fork: 1 of 1
# Warmup Iteration   1: 305.677 ns/op
# Warmup Iteration   2: 276.719 ns/op
Iteration   1: 269.906 ns/op
Iteration   2: 270.347 ns/op
Iteration   3: 278.011 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  272.755 ±(99.9%) 83.145 ns/op [Average]
  (min, avg, max) = (269.906, 272.755, 278.011), stdev = 4.557
  CI (99.9%): [189.610, 355.900] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000000)

# Run progress: 98.44% complete, ETA 00:00:23
# Fork: 1 of 1
# Warmup Iteration   1: 348.745 ns/op
# Warmup Iteration   2: 334.163 ns/op
Iteration   1: 308.581 ns/op
Iteration   2: 302.918 ns/op
Iteration   3: 308.210 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  306.570 ±(99.9%) 57.797 ns/op [Average]
  (min, avg, max) = (302.918, 306.570, 308.581), stdev = 3.168
  CI (99.9%): [248.773, 364.366] (assumes normal distribution)


# Run complete. Total time: 00:24:43

Benchmark                                         (size)  Mode  Cnt    Score      Error  Units
SetMapJavaVsScalaBenchmarks.javaMapHit              1000  avgt    3  219.929 ±   35.337  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit             10000  avgt    3  215.096 ±   43.537  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit            100000  avgt    3  160.057 ±    5.244  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit           1000000  avgt    3  169.680 ±    2.875  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss             1000  avgt    3  199.889 ±   15.767  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss            10000  avgt    3  200.471 ±    7.564  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss           100000  avgt    3  131.426 ±    9.704  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss          1000000  avgt    3  128.146 ±   10.435  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit              1000  avgt    3  163.593 ±   11.407  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit             10000  avgt    3  160.725 ±   36.377  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit            100000  avgt    3  169.137 ±   26.930  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit           1000000  avgt    3  180.875 ±   30.224  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss             1000  avgt    3  151.139 ±   21.262  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss            10000  avgt    3  154.176 ±   53.308  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss           100000  avgt    3  149.623 ±   23.541  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss          1000000  avgt    3  146.675 ±   32.201  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit       1000  avgt    3  191.167 ±   48.951  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit      10000  avgt    3  203.274 ±   24.389  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit     100000  avgt    3  201.420 ±    7.955  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit    1000000  avgt    3  266.965 ± 1257.368  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss      1000  avgt    3  261.200 ±   32.234  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss     10000  avgt    3  268.637 ±   17.234  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss    100000  avgt    3  259.001 ±    6.954  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss   1000000  avgt    3  309.733 ± 1614.619  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit       1000  avgt    3  162.431 ±   36.073  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit      10000  avgt    3  170.044 ±   77.575  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit     100000  avgt    3  146.873 ±   14.077  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit    1000000  avgt    3  168.068 ±   39.757  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss      1000  avgt    3  151.139 ±   20.679  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss     10000  avgt    3  156.324 ±   10.693  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss    100000  avgt    3  152.249 ±   17.147  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss   1000000  avgt    3  139.622 ±   15.599  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit             1000  avgt    3  309.579 ±   27.280  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit            10000  avgt    3  341.270 ±   38.278  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit           100000  avgt    3  401.941 ±   41.125  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit          1000000  avgt    3  590.540 ± 3205.939  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss            1000  avgt    3  238.200 ±  105.329  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss           10000  avgt    3  262.732 ±   32.119  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss          100000  avgt    3  332.407 ±    8.494  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss         1000000  avgt    3  439.479 ± 2218.027  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit      1000  avgt    3  303.534 ±   16.426  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit     10000  avgt    3  307.656 ±  107.983  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit    100000  avgt    3  315.301 ±   34.593  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit   1000000  avgt    3  370.640 ± 2010.031  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss     1000  avgt    3  272.733 ±   45.298  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss    10000  avgt    3  283.839 ±   40.938  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss   100000  avgt    3  283.119 ±   11.922  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss  1000000  avgt    3  302.524 ±  138.620  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit      1000  avgt    3  203.857 ±   47.576  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit     10000  avgt    3  193.451 ±   39.140  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit    100000  avgt    3  214.484 ±   27.944  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit   1000000  avgt    3  196.451 ±   28.109  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss     1000  avgt    3  257.566 ±   49.485  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss    10000  avgt    3  218.883 ±    5.703  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss   100000  avgt    3  340.534 ±   36.219  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss  1000000  avgt    3  283.205 ±  104.959  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit             1000  avgt    3  298.332 ±   28.696  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit            10000  avgt    3  304.618 ±   86.043  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit           100000  avgt    3  393.435 ±   56.159  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit          1000000  avgt    3  460.260 ±  182.127  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss            1000  avgt    3  197.321 ±   23.156  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss           10000  avgt    3  233.588 ±   47.604  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss          100000  avgt    3  272.755 ±   83.145  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss         1000000  avgt    3  306.570 ±   57.797  ns/op

Benchmark result is saved to /static/data/charts/set-map-java-vs-scala-2-12/jdk8.json
