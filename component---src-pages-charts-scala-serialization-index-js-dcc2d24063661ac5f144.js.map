{"version":3,"sources":["webpack:///./src/pages/charts/scala-serialization/index.js"],"names":["xDesc","title","prop","values","name","value","valuesForMax","yDesc","findMax","data","max","forEach","v","indexOf","find","_ref","yDescContainValue","pm","scorePercentiles","Math","ScalaSerializationImpl","handleRunChange","date","_this","props","shared","currentRunDate","refetch","render","_this2","this","extractor","state","_this$props","jmhList","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","href","_components__WEBPACK_IMPORTED_MODULE_7__","runs","onChange","setState","id","dataTable","filter","d","dataType","action","findMaxFunc","React","Component","ScalaSerialization","JmhChartPage","fetchFunc","loadJson","exportDimensionsFunc","benchmark","params","_benchmark$split","split","dataTypePart","otherBenchmark","slice","length","Error","substring","lastIndexOf","library","converterType","dataSize","inputType","headerText","__webpack_exports__","query","allMarkdownRemark","edges","map","_ref3","node","fileAbsolutePath","substr","comment","html","Object","assign","_public_static_d_3669402259_json__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"component---src-pages-charts-scala-serialization-index-js-dcc2d24063661ac5f144.js","sourcesContent":["import {graphql, Link, StaticQuery} from 'gatsby';\nimport React from 'react';\nimport {Changelog, ChartAndTable, JmhChartPage, TimeUnits} from '../../../components';\nimport {loadJson} from '../../../util';\n\nconst xDesc = {\n  title: 'Converter',\n  prop: 'library',\n  values: [\n    {\n      name: 'Json',\n      value: 'JSON',\n    },\n    {\n      name: 'Cbor',\n      value: 'CBOR',\n    },\n    {\n      name: 'ScalaPb',\n      value: 'SCALA_PB',\n    },\n    {\n      name: 'JavaPb',\n      value: 'JAVA_PB',\n    },\n    {\n      name: 'JavaThrift',\n      value: 'JAVA_THRIFT',\n    },\n    {\n      name: 'Scrooge',\n      value: 'SCROOGE',\n    },\n    {\n      name: 'BooPickle',\n      value: 'BOOPICKLE',\n    },\n    {\n      name: 'Chill',\n      value: 'CHILL',\n    },\n    {\n      name: 'Scrooge',\n      value: 'SCROOGE',\n    },\n    {\n      name: 'Circe',\n      value: 'CIRCE',\n    },\n    {\n      name: 'Pickling',\n      value: 'PICKLING',\n    },\n    {\n      name: 'JavaSerialization',\n      value: 'SERIALIZABLE',\n    },\n  ],\n  valuesForMax: ['SCALA_PB', 'JAVA_PB', 'JAVA_THRIFT', 'SCROOGE', 'BOOPICKLE'],\n};\n\nconst yDesc = {\n  title: 'data size',\n  prop: 'dataSize',\n  values: [\n    {\n      name: '1k',\n      value: '_1_K',\n    },\n    {\n      name: '2k',\n      value: '_2_K',\n    },\n    {\n      name: '4k',\n      value: '_4_K',\n    },\n    {\n      name: '8k',\n      value: '_8_K',\n    },\n  ],\n};\n\nfunction yDescContainValue(v) {\n  return !!yDesc.values.find(({value}) => value === v);\n}\n\nfunction findMax(data) {\n  let max = 0;\n\n  data.forEach(v => {\n    if (xDesc.valuesForMax.indexOf(v[xDesc.prop]) !== -1 && yDescContainValue(v[yDesc.prop])) {\n      const value = v.pm.scorePercentiles['100.0'];\n      max = Math.max(value, max);\n    }\n  });\n  const onePercentOfMax = max / 100;\n  return max + onePercentOfMax;\n}\n\nclass ScalaSerializationImpl extends React.Component {\n  render() {\n    const {extractor} = this.state || {};\n    const {jmhList, shared} = this.props;\n\n    return (\n      <div>\n        <h3>Introduction</h3>\n\n        <p>\n          Here are present actual charts for performance comparison of serialization libraries for Scala for the corresponding\n          article <Link to=\"/p/scala-serialization\">&laquo;Scala Serialization&raquo;</Link>.\n        </p>\n\n        <p>\n          The legend for tests. &laquo;Site&raquo; is a data transfer object (DTO) with different types of data\n          (lists, enums, regular fields). &laquo;Events&raquo; are the primitive representation of this DTO for\n          Event Sourcing (many small objects). Data sizes (1k, 2k etc.) are the corresponding size of the DTO in JSON format.\n        </p>\n\n        <p>\n          Please notice, that unlike the article, here the performance tests are performed\n          via <a href=\"http://openjdk.java.net/projects/code-tools/jmh/\">JMH</a> and using 2 threads.\n          The configuration of a hardware is Intel® Core™ i7–5600U CPU @ 2.60GHz × 4 (2 core + 2 HT) with 16 GB RAM.\n        </p>\n\n        <Changelog runs={shared.runs} onChange={this.handleRunChange}/>\n\n        <h3>Charts</h3>\n\n        <ul>\n          <li><a href=\"#site-both\">Site Two-Way</a></li>\n          <li><a href=\"#events-both\">Events Two-Way</a></li>\n          <li><a href=\"#site-serialization\">Site Serialization</a></li>\n          <li><a href=\"#site-deserialization\">Site Deserialization</a></li>\n          <li><a href=\"#events-serialization\">Events Serialization</a></li>\n          <li><a href=\"#events-deserialization\">Events Deserialization</a></li>\n        </ul>\n\n        <TimeUnits onChange={extractor => this.setState({extractor})}/>\n\n        <h3 id=\"site-both\">Site Two-Way</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Site' && d.action === 'both'}\n          title=\"Two-way times for Site (DTO), nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <h3 id=\"events-both\">Events Two-Way</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Event' && d.action === 'both'}\n          title=\"Two-way times for Events, nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <h3 id=\"site-serialization\">Site Serialization</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Site' && d.action === 'serialization'}\n          title=\"Serialization times for Site (DTO), nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <h3 id=\"site-deserialization\">Site Deserialization</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Site' && d.action === 'deserialization'}\n          title=\"Deserialization times for Site (DTO), nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <h3 id=\"events-serialization\">Events Serialization</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Event' && d.action === 'serialization'}\n          title=\"Serialization times for Events, nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <h3 id=\"events-deserialization\">Events Deserialization</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Event' && d.action === 'deserialization'}\n          title=\"Deserialization times for Events, nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <p>\n          Full JMH log is <a href={`/data/charts/scala-serialization/jmh_${shared.currentRunDate}.log.txt`}>here</a>.\n        </p>\n\n      </div>\n    );\n  }\n\n  handleRunChange = date => {\n    this.props.shared.currentRunDate = date;\n    this.props.refetch();\n  };\n}\n\nfunction exportDimensions(benchmark, params) {\n  //'com.komanov.serialization.jmh.EventBenchmark.both'\n\n  const [dataTypePart, action, ...otherBenchmark] = benchmark.split('Benchmark.');\n  if (!action || otherBenchmark.length > 0) {\n    throw new Error('Expected 2 parts in a benchmark: ' + benchmark);\n  }\n\n  const dataType = dataTypePart.substring(dataTypePart.lastIndexOf('.') + 1);\n\n  return {\n    library: params.converterType,\n    action,\n    dataType,\n    dataSize: params.inputType,\n  };\n}\n\nconst ScalaSerialization = JmhChartPage(\n  ScalaSerializationImpl,\n  {\n    // function is important, by some reason () => {} doesn't work - can't bind this :(\n    fetchFunc: function () {\n      return loadJson(`/data/charts/scala-serialization/jmh_${this.props.shared.currentRunDate}.json`);\n    },\n    exportDimensionsFunc: exportDimensions,\n    headerText: 'Scala Serialization (Charts)',\n  },\n);\n\n//export default ScalaSerialization;\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\nquery ScalaSerializationQuery {\n  allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/charts/scala-serialization/\"}},\n    sort: { fields: [fileAbsolutePath], order: DESC }\n  ) {\n    edges {\n      node {\n        fileAbsolutePath\n        html\n      }\n    }\n  }\n}\n    `}\n    render={(data) => {\n      const runs = data.allMarkdownRemark.edges.map(({node}) => {\n        return {\n          date: node.fileAbsolutePath.substr(node.fileAbsolutePath.lastIndexOf('/') + 1, 10),\n          comment: node.html,\n        };\n      });\n\n      const shared = {\n        runs,\n        currentRunDate: runs[0].date,\n      };\n\n      return (\n        <ScalaSerialization shared={shared} {...props}/>\n      );\n    }}\n  />\n);\n"],"sourceRoot":""}