# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 36.486 ns/op
# Warmup Iteration   2: 33.342 ns/op
# Warmup Iteration   3: 33.054 ns/op
# Warmup Iteration   4: 32.355 ns/op
# Warmup Iteration   5: 32.247 ns/op
Iteration   1: 32.411 ns/op
Iteration   2: 32.308 ns/op
Iteration   3: 32.335 ns/op
Iteration   4: 32.524 ns/op
Iteration   5: 32.306 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  32.377 ±(99.9%) 0.356 ns/op [Average]
  (min, avg, max) = (32.306, 32.377, 32.524), stdev = 0.093
  CI (99.9%): [32.020, 32.733] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.51% complete, ETA 00:34:35
# Fork: 1 of 1
# Warmup Iteration   1: 57.750 ns/op
# Warmup Iteration   2: 52.359 ns/op
# Warmup Iteration   3: 50.868 ns/op
# Warmup Iteration   4: 50.525 ns/op
# Warmup Iteration   5: 50.197 ns/op
Iteration   1: 50.288 ns/op
Iteration   2: 50.072 ns/op
Iteration   3: 53.830 ns/op
Iteration   4: 50.186 ns/op
Iteration   5: 50.165 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  50.908 ±(99.9%) 6.296 ns/op [Average]
  (min, avg, max) = (50.072, 50.908, 53.830), stdev = 1.635
  CI (99.9%): [44.612, 57.204] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 1.02% complete, ETA 00:34:19
# Fork: 1 of 1
# Warmup Iteration   1: 135.473 ns/op
# Warmup Iteration   2: 122.818 ns/op
# Warmup Iteration   3: 122.362 ns/op
# Warmup Iteration   4: 119.461 ns/op
# Warmup Iteration   5: 119.579 ns/op
Iteration   1: 120.384 ns/op
Iteration   2: 119.669 ns/op
Iteration   3: 120.157 ns/op
Iteration   4: 119.535 ns/op
Iteration   5: 119.388 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  119.827 ±(99.9%) 1.636 ns/op [Average]
  (min, avg, max) = (119.388, 119.827, 120.384), stdev = 0.425
  CI (99.9%): [118.191, 121.462] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 1.53% complete, ETA 00:34:04
# Fork: 1 of 1
# Warmup Iteration   1: 273.916 ns/op
# Warmup Iteration   2: 247.401 ns/op
# Warmup Iteration   3: 245.161 ns/op
# Warmup Iteration   4: 240.469 ns/op
# Warmup Iteration   5: 240.773 ns/op
Iteration   1: 240.727 ns/op
Iteration   2: 240.295 ns/op
Iteration   3: 240.087 ns/op
Iteration   4: 240.590 ns/op
Iteration   5: 240.964 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  240.533 ±(99.9%) 1.337 ns/op [Average]
  (min, avg, max) = (240.087, 240.533, 240.964), stdev = 0.347
  CI (99.9%): [239.195, 241.870] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 2.04% complete, ETA 00:33:52
# Fork: 1 of 1
# Warmup Iteration   1: 1057.201 ns/op
# Warmup Iteration   2: 971.757 ns/op
# Warmup Iteration   3: 922.664 ns/op
# Warmup Iteration   4: 906.608 ns/op
# Warmup Iteration   5: 908.998 ns/op
Iteration   1: 912.071 ns/op
Iteration   2: 911.962 ns/op
Iteration   3: 910.182 ns/op
Iteration   4: 906.779 ns/op
Iteration   5: 908.802 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  909.959 ±(99.9%) 8.604 ns/op [Average]
  (min, avg, max) = (906.779, 909.959, 912.071), stdev = 2.234
  CI (99.9%): [901.356, 918.563] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 2.55% complete, ETA 00:33:40
# Fork: 1 of 1
# Warmup Iteration   1: 2009.641 ns/op
# Warmup Iteration   2: 1823.482 ns/op
# Warmup Iteration   3: 1755.636 ns/op
# Warmup Iteration   4: 1739.613 ns/op
# Warmup Iteration   5: 1740.223 ns/op
Iteration   1: 1737.769 ns/op
Iteration   2: 1739.781 ns/op
Iteration   3: 1736.801 ns/op
Iteration   4: 1737.740 ns/op
Iteration   5: 1737.314 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1737.881 ±(99.9%) 4.360 ns/op [Average]
  (min, avg, max) = (1736.801, 1737.881, 1739.781), stdev = 1.132
  CI (99.9%): [1733.521, 1742.241] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 3.06% complete, ETA 00:33:30
# Fork: 1 of 1
# Warmup Iteration   1: 21983.348 ns/op
# Warmup Iteration   2: 19674.026 ns/op
# Warmup Iteration   3: 19433.106 ns/op
# Warmup Iteration   4: 19123.004 ns/op
# Warmup Iteration   5: 18826.210 ns/op
Iteration   1: 18835.121 ns/op
Iteration   2: 18864.969 ns/op
Iteration   3: 18809.115 ns/op
Iteration   4: 18811.013 ns/op
Iteration   5: 18787.187 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  18821.481 ±(99.9%) 114.160 ns/op [Average]
  (min, avg, max) = (18787.187, 18821.481, 18864.969), stdev = 29.647
  CI (99.9%): [18707.320, 18935.641] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1)

# Run progress: 3.57% complete, ETA 00:33:18
# Fork: 1 of 1
# Warmup Iteration   1: 36.548 ns/op
# Warmup Iteration   2: 34.633 ns/op
# Warmup Iteration   3: 32.668 ns/op
# Warmup Iteration   4: 32.358 ns/op
# Warmup Iteration   5: 32.235 ns/op
Iteration   1: 32.214 ns/op
Iteration   2: 32.323 ns/op
Iteration   3: 32.360 ns/op
Iteration   4: 32.317 ns/op
Iteration   5: 32.377 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  32.318 ±(99.9%) 0.243 ns/op [Average]
  (min, avg, max) = (32.214, 32.318, 32.377), stdev = 0.063
  CI (99.9%): [32.075, 32.561] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10)

# Run progress: 4.08% complete, ETA 00:33:05
# Fork: 1 of 1
# Warmup Iteration   1: 56.746 ns/op
# Warmup Iteration   2: 52.139 ns/op
# Warmup Iteration   3: 50.014 ns/op
# Warmup Iteration   4: 50.590 ns/op
# Warmup Iteration   5: 49.206 ns/op
Iteration   1: 49.222 ns/op
Iteration   2: 49.502 ns/op
Iteration   3: 49.712 ns/op
Iteration   4: 49.369 ns/op
Iteration   5: 49.408 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  49.442 ±(99.9%) 0.698 ns/op [Average]
  (min, avg, max) = (49.222, 49.442, 49.712), stdev = 0.181
  CI (99.9%): [48.745, 50.140] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 50)

# Run progress: 4.59% complete, ETA 00:32:52
# Fork: 1 of 1
# Warmup Iteration   1: 141.075 ns/op
# Warmup Iteration   2: 129.524 ns/op
# Warmup Iteration   3: 125.444 ns/op
# Warmup Iteration   4: 124.427 ns/op
# Warmup Iteration   5: 123.714 ns/op
Iteration   1: 123.735 ns/op
Iteration   2: 123.996 ns/op
Iteration   3: 125.096 ns/op
Iteration   4: 127.677 ns/op
Iteration   5: 128.479 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  125.797 ±(99.9%) 8.329 ns/op [Average]
  (min, avg, max) = (123.735, 125.797, 128.479), stdev = 2.163
  CI (99.9%): [117.468, 134.126] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 100)

# Run progress: 5.10% complete, ETA 00:32:39
# Fork: 1 of 1
# Warmup Iteration   1: 267.565 ns/op
# Warmup Iteration   2: 252.498 ns/op
# Warmup Iteration   3: 243.012 ns/op
# Warmup Iteration   4: 240.273 ns/op
# Warmup Iteration   5: 240.379 ns/op
Iteration   1: 240.185 ns/op
Iteration   2: 239.706 ns/op
Iteration   3: 240.094 ns/op
Iteration   4: 240.418 ns/op
Iteration   5: 240.451 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  240.171 ±(99.9%) 1.158 ns/op [Average]
  (min, avg, max) = (239.706, 240.171, 240.451), stdev = 0.301
  CI (99.9%): [239.013, 241.329] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 500)

# Run progress: 5.61% complete, ETA 00:32:28
# Fork: 1 of 1
# Warmup Iteration   1: 1054.890 ns/op
# Warmup Iteration   2: 938.030 ns/op
# Warmup Iteration   3: 937.701 ns/op
# Warmup Iteration   4: 909.939 ns/op
# Warmup Iteration   5: 909.522 ns/op
Iteration   1: 909.353 ns/op
Iteration   2: 910.708 ns/op
Iteration   3: 906.552 ns/op
Iteration   4: 913.133 ns/op
Iteration   5: 909.098 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  909.769 ±(99.9%) 9.267 ns/op [Average]
  (min, avg, max) = (906.552, 909.769, 913.133), stdev = 2.407
  CI (99.9%): [900.502, 919.036] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1000)

# Run progress: 6.12% complete, ETA 00:32:16
# Fork: 1 of 1
# Warmup Iteration   1: 2049.028 ns/op
# Warmup Iteration   2: 1827.192 ns/op
# Warmup Iteration   3: 1801.693 ns/op
# Warmup Iteration   4: 1749.387 ns/op
# Warmup Iteration   5: 1749.376 ns/op
Iteration   1: 1778.527 ns/op
Iteration   2: 1744.764 ns/op
Iteration   3: 1742.710 ns/op
Iteration   4: 1745.131 ns/op
Iteration   5: 1761.542 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1754.535 ±(99.9%) 59.294 ns/op [Average]
  (min, avg, max) = (1742.710, 1754.535, 1778.527), stdev = 15.399
  CI (99.9%): [1695.241, 1813.829] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10000)

# Run progress: 6.63% complete, ETA 00:32:05
# Fork: 1 of 1
# Warmup Iteration   1: 23175.418 ns/op
# Warmup Iteration   2: 19183.449 ns/op
# Warmup Iteration   3: 19108.801 ns/op
# Warmup Iteration   4: 18799.531 ns/op
# Warmup Iteration   5: 18796.489 ns/op
Iteration   1: 18786.704 ns/op
Iteration   2: 19365.810 ns/op
Iteration   3: 18771.853 ns/op
Iteration   4: 18790.417 ns/op
Iteration   5: 18828.004 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  18908.558 ±(99.9%) 987.490 ns/op [Average]
  (min, avg, max) = (18771.853, 18908.558, 19365.810), stdev = 256.448
  CI (99.9%): [17921.068, 19896.048] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 7.14% complete, ETA 00:31:54
# Fork: 1 of 1
# Warmup Iteration   1: 24.899 ns/op
# Warmup Iteration   2: 22.521 ns/op
# Warmup Iteration   3: 21.207 ns/op
# Warmup Iteration   4: 21.168 ns/op
# Warmup Iteration   5: 21.112 ns/op
Iteration   1: 21.674 ns/op
Iteration   2: 21.097 ns/op
Iteration   3: 21.136 ns/op
Iteration   4: 22.211 ns/op
Iteration   5: 21.171 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  21.458 ±(99.9%) 1.856 ns/op [Average]
  (min, avg, max) = (21.097, 21.458, 22.211), stdev = 0.482
  CI (99.9%): [19.601, 23.314] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 7.65% complete, ETA 00:31:44
# Fork: 1 of 1
# Warmup Iteration   1: 54.437 ns/op
# Warmup Iteration   2: 51.357 ns/op
# Warmup Iteration   3: 47.663 ns/op
# Warmup Iteration   4: 47.391 ns/op
# Warmup Iteration   5: 47.169 ns/op
Iteration   1: 47.378 ns/op
Iteration   2: 47.247 ns/op
Iteration   3: 47.325 ns/op
Iteration   4: 47.305 ns/op
Iteration   5: 48.351 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  47.521 ±(99.9%) 1.796 ns/op [Average]
  (min, avg, max) = (47.247, 47.521, 48.351), stdev = 0.466
  CI (99.9%): [45.725, 49.317] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 8.16% complete, ETA 00:31:34
# Fork: 1 of 1
# Warmup Iteration   1: 132.563 ns/op
# Warmup Iteration   2: 124.521 ns/op
# Warmup Iteration   3: 115.704 ns/op
# Warmup Iteration   4: 114.790 ns/op
# Warmup Iteration   5: 114.879 ns/op
Iteration   1: 115.270 ns/op
Iteration   2: 119.194 ns/op
Iteration   3: 114.710 ns/op
Iteration   4: 115.491 ns/op
Iteration   5: 115.065 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  115.946 ±(99.9%) 7.079 ns/op [Average]
  (min, avg, max) = (114.710, 115.946, 119.194), stdev = 1.838
  CI (99.9%): [108.867, 123.025] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 8.67% complete, ETA 00:31:24
# Fork: 1 of 1
# Warmup Iteration   1: 186.505 ns/op
# Warmup Iteration   2: 167.254 ns/op
# Warmup Iteration   3: 158.800 ns/op
# Warmup Iteration   4: 159.648 ns/op
# Warmup Iteration   5: 158.555 ns/op
Iteration   1: 158.654 ns/op
Iteration   2: 158.645 ns/op
Iteration   3: 158.536 ns/op
Iteration   4: 158.635 ns/op
Iteration   5: 159.276 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  158.749 ±(99.9%) 1.148 ns/op [Average]
  (min, avg, max) = (158.536, 158.749, 159.276), stdev = 0.298
  CI (99.9%): [157.601, 159.897] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 9.18% complete, ETA 00:31:14
# Fork: 1 of 1
# Warmup Iteration   1: 585.168 ns/op
# Warmup Iteration   2: 499.619 ns/op
# Warmup Iteration   3: 479.219 ns/op
# Warmup Iteration   4: 477.028 ns/op
# Warmup Iteration   5: 478.579 ns/op
Iteration   1: 478.618 ns/op
Iteration   2: 477.282 ns/op
Iteration   3: 477.178 ns/op
Iteration   4: 476.932 ns/op
Iteration   5: 487.941 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  479.591 ±(99.9%) 18.153 ns/op [Average]
  (min, avg, max) = (476.932, 479.591, 487.941), stdev = 4.714
  CI (99.9%): [461.438, 497.743] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 9.69% complete, ETA 00:31:04
# Fork: 1 of 1
# Warmup Iteration   1: 1139.346 ns/op
# Warmup Iteration   2: 927.355 ns/op
# Warmup Iteration   3: 885.243 ns/op
# Warmup Iteration   4: 887.033 ns/op
# Warmup Iteration   5: 892.065 ns/op
Iteration   1: 886.489 ns/op
Iteration   2: 888.032 ns/op
Iteration   3: 884.620 ns/op
Iteration   4: 902.572 ns/op
Iteration   5: 906.923 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  893.727 ±(99.9%) 39.463 ns/op [Average]
  (min, avg, max) = (884.620, 893.727, 906.923), stdev = 10.248
  CI (99.9%): [854.264, 933.190] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 10.20% complete, ETA 00:30:54
# Fork: 1 of 1
# Warmup Iteration   1: 11175.164 ns/op
# Warmup Iteration   2: 9161.412 ns/op
# Warmup Iteration   3: 8741.119 ns/op
# Warmup Iteration   4: 8903.524 ns/op
# Warmup Iteration   5: 8728.952 ns/op
Iteration   1: 8701.251 ns/op
Iteration   2: 8730.978 ns/op
Iteration   3: 8723.664 ns/op
Iteration   4: 9062.980 ns/op
Iteration   5: 8733.845 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  8790.544 ±(99.9%) 588.502 ns/op [Average]
  (min, avg, max) = (8701.251, 8790.544, 9062.980), stdev = 152.832
  CI (99.9%): [8202.041, 9379.046] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1)

# Run progress: 10.71% complete, ETA 00:30:43
# Fork: 1 of 1
# Warmup Iteration   1: 24.747 ns/op
# Warmup Iteration   2: 23.529 ns/op
# Warmup Iteration   3: 21.164 ns/op
# Warmup Iteration   4: 21.164 ns/op
# Warmup Iteration   5: 21.095 ns/op
Iteration   1: 21.138 ns/op
Iteration   2: 21.148 ns/op
Iteration   3: 21.212 ns/op
Iteration   4: 21.057 ns/op
Iteration   5: 21.045 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  21.120 ±(99.9%) 0.266 ns/op [Average]
  (min, avg, max) = (21.045, 21.120, 21.212), stdev = 0.069
  CI (99.9%): [20.854, 21.387] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10)

# Run progress: 11.22% complete, ETA 00:30:32
# Fork: 1 of 1
# Warmup Iteration   1: 53.993 ns/op
# Warmup Iteration   2: 50.683 ns/op
# Warmup Iteration   3: 47.434 ns/op
# Warmup Iteration   4: 47.039 ns/op
# Warmup Iteration   5: 46.959 ns/op
Iteration   1: 47.264 ns/op
Iteration   2: 46.975 ns/op
Iteration   3: 46.854 ns/op
Iteration   4: 46.822 ns/op
Iteration   5: 48.402 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  47.263 ±(99.9%) 2.541 ns/op [Average]
  (min, avg, max) = (46.822, 47.263, 48.402), stdev = 0.660
  CI (99.9%): [44.722, 49.805] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 50)

# Run progress: 11.73% complete, ETA 00:30:21
# Fork: 1 of 1
# Warmup Iteration   1: 133.514 ns/op
# Warmup Iteration   2: 125.393 ns/op
# Warmup Iteration   3: 117.766 ns/op
# Warmup Iteration   4: 118.769 ns/op
# Warmup Iteration   5: 117.543 ns/op
Iteration   1: 115.915 ns/op
Iteration   2: 115.749 ns/op
Iteration   3: 116.102 ns/op
Iteration   4: 115.689 ns/op
Iteration   5: 116.094 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  115.910 ±(99.9%) 0.734 ns/op [Average]
  (min, avg, max) = (115.689, 115.910, 116.102), stdev = 0.191
  CI (99.9%): [115.175, 116.644] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 100)

# Run progress: 12.24% complete, ETA 00:30:10
# Fork: 1 of 1
# Warmup Iteration   1: 186.522 ns/op
# Warmup Iteration   2: 167.832 ns/op
# Warmup Iteration   3: 159.706 ns/op
# Warmup Iteration   4: 161.007 ns/op
# Warmup Iteration   5: 160.701 ns/op
Iteration   1: 161.160 ns/op
Iteration   2: 160.317 ns/op
Iteration   3: 160.630 ns/op
Iteration   4: 160.659 ns/op
Iteration   5: 160.592 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  160.671 ±(99.9%) 1.176 ns/op [Average]
  (min, avg, max) = (160.317, 160.671, 161.160), stdev = 0.305
  CI (99.9%): [159.496, 161.847] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 500)

# Run progress: 12.76% complete, ETA 00:29:59
# Fork: 1 of 1
# Warmup Iteration   1: 597.170 ns/op
# Warmup Iteration   2: 511.813 ns/op
# Warmup Iteration   3: 484.006 ns/op
# Warmup Iteration   4: 489.240 ns/op
# Warmup Iteration   5: 485.069 ns/op
Iteration   1: 483.999 ns/op
Iteration   2: 486.114 ns/op
Iteration   3: 483.204 ns/op
Iteration   4: 484.046 ns/op
Iteration   5: 491.381 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  485.749 ±(99.9%) 12.814 ns/op [Average]
  (min, avg, max) = (483.204, 485.749, 491.381), stdev = 3.328
  CI (99.9%): [472.934, 498.563] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1000)

# Run progress: 13.27% complete, ETA 00:29:48
# Fork: 1 of 1
# Warmup Iteration   1: 1091.388 ns/op
# Warmup Iteration   2: 927.053 ns/op
# Warmup Iteration   3: 885.210 ns/op
# Warmup Iteration   4: 882.941 ns/op
# Warmup Iteration   5: 885.240 ns/op
Iteration   1: 880.426 ns/op
Iteration   2: 880.451 ns/op
Iteration   3: 879.766 ns/op
Iteration   4: 884.907 ns/op
Iteration   5: 908.347 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  886.779 ±(99.9%) 47.093 ns/op [Average]
  (min, avg, max) = (879.766, 886.779, 908.347), stdev = 12.230
  CI (99.9%): [839.687, 933.872] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10000)

# Run progress: 13.78% complete, ETA 00:29:37
# Fork: 1 of 1
# Warmup Iteration   1: 11720.081 ns/op
# Warmup Iteration   2: 9226.341 ns/op
# Warmup Iteration   3: 8726.171 ns/op
# Warmup Iteration   4: 8742.305 ns/op
# Warmup Iteration   5: 8760.776 ns/op
Iteration   1: 8782.147 ns/op
Iteration   2: 8732.547 ns/op
Iteration   3: 8717.812 ns/op
Iteration   4: 8745.927 ns/op
Iteration   5: 8763.401 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  8748.367 ±(99.9%) 97.357 ns/op [Average]
  (min, avg, max) = (8717.812, 8748.367, 8782.147), stdev = 25.283
  CI (99.9%): [8651.010, 8845.724] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 14.29% complete, ETA 00:29:27
# Fork: 1 of 1
# Warmup Iteration   1: 1535.232 ns/op
# Warmup Iteration   2: 1525.794 ns/op
# Warmup Iteration   3: 1508.307 ns/op
# Warmup Iteration   4: 1503.236 ns/op
# Warmup Iteration   5: 1508.185 ns/op
Iteration   1: 1471.500 ns/op
Iteration   2: 1460.091 ns/op
Iteration   3: 1464.899 ns/op
Iteration   4: 1467.759 ns/op
Iteration   5: 1481.584 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1469.167 ±(99.9%) 31.176 ns/op [Average]
  (min, avg, max) = (1460.091, 1469.167, 1481.584), stdev = 8.096
  CI (99.9%): [1437.990, 1500.343] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 14.80% complete, ETA 00:29:16
# Fork: 1 of 1
# Warmup Iteration   1: 1519.776 ns/op
# Warmup Iteration   2: 1513.375 ns/op
# Warmup Iteration   3: 1483.889 ns/op
# Warmup Iteration   4: 1477.965 ns/op
# Warmup Iteration   5: 1438.828 ns/op
Iteration   1: 1438.290 ns/op
Iteration   2: 1447.347 ns/op
Iteration   3: 1444.823 ns/op
Iteration   4: 1491.128 ns/op
Iteration   5: 1451.377 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1454.593 ±(99.9%) 80.746 ns/op [Average]
  (min, avg, max) = (1438.290, 1454.593, 1491.128), stdev = 20.970
  CI (99.9%): [1373.847, 1535.339] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 15.31% complete, ETA 00:29:06
# Fork: 1 of 1
# Warmup Iteration   1: 1689.017 ns/op
# Warmup Iteration   2: 1644.598 ns/op
# Warmup Iteration   3: 1529.271 ns/op
# Warmup Iteration   4: 1544.509 ns/op
# Warmup Iteration   5: 1531.444 ns/op
Iteration   1: 1535.580 ns/op
Iteration   2: 1533.352 ns/op
Iteration   3: 1528.098 ns/op
Iteration   4: 1538.481 ns/op
Iteration   5: 1547.219 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1536.546 ±(99.9%) 27.240 ns/op [Average]
  (min, avg, max) = (1528.098, 1536.546, 1547.219), stdev = 7.074
  CI (99.9%): [1509.306, 1563.786] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 15.82% complete, ETA 00:28:56
# Fork: 1 of 1
# Warmup Iteration   1: 1819.371 ns/op
# Warmup Iteration   2: 1744.256 ns/op
# Warmup Iteration   3: 1695.025 ns/op
# Warmup Iteration   4: 1690.103 ns/op
# Warmup Iteration   5: 1683.291 ns/op
Iteration   1: 1671.722 ns/op
Iteration   2: 1672.647 ns/op
Iteration   3: 1674.577 ns/op
Iteration   4: 1660.046 ns/op
Iteration   5: 1680.317 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1671.862 ±(99.9%) 28.500 ns/op [Average]
  (min, avg, max) = (1660.046, 1671.862, 1680.317), stdev = 7.401
  CI (99.9%): [1643.362, 1700.362] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 16.33% complete, ETA 00:28:45
# Fork: 1 of 1
# Warmup Iteration   1: 2435.304 ns/op
# Warmup Iteration   2: 2281.813 ns/op
# Warmup Iteration   3: 2256.602 ns/op
# Warmup Iteration   4: 2254.541 ns/op
# Warmup Iteration   5: 2256.789 ns/op
Iteration   1: 2252.908 ns/op
Iteration   2: 2231.123 ns/op
Iteration   3: 2233.589 ns/op
Iteration   4: 2198.039 ns/op
Iteration   5: 2223.874 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2227.907 ±(99.9%) 76.433 ns/op [Average]
  (min, avg, max) = (2198.039, 2227.907, 2252.908), stdev = 19.849
  CI (99.9%): [2151.474, 2304.340] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 16.84% complete, ETA 00:28:35
# Fork: 1 of 1
# Warmup Iteration   1: 3231.568 ns/op
# Warmup Iteration   2: 3094.445 ns/op
# Warmup Iteration   3: 2989.504 ns/op
# Warmup Iteration   4: 2987.265 ns/op
# Warmup Iteration   5: 2948.185 ns/op
Iteration   1: 2943.322 ns/op
Iteration   2: 2956.592 ns/op
Iteration   3: 2956.369 ns/op
Iteration   4: 2994.091 ns/op
Iteration   5: 3009.466 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2971.968 ±(99.9%) 108.841 ns/op [Average]
  (min, avg, max) = (2943.322, 2971.968, 3009.466), stdev = 28.266
  CI (99.9%): [2863.127, 3080.810] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 17.35% complete, ETA 00:28:24
# Fork: 1 of 1
# Warmup Iteration   1: 15749.815 ns/op
# Warmup Iteration   2: 15135.210 ns/op
# Warmup Iteration   3: 13924.605 ns/op
# Warmup Iteration   4: 13920.971 ns/op
# Warmup Iteration   5: 13866.680 ns/op
Iteration   1: 13969.332 ns/op
Iteration   2: 13953.057 ns/op
Iteration   3: 13941.811 ns/op
Iteration   4: 13930.316 ns/op
Iteration   5: 14056.161 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  13970.135 ±(99.9%) 193.306 ns/op [Average]
  (min, avg, max) = (13930.316, 13970.135, 14056.161), stdev = 50.201
  CI (99.9%): [13776.829, 14163.442] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 1)

# Run progress: 17.86% complete, ETA 00:28:14
# Fork: 1 of 1
# Warmup Iteration   1: 1553.687 ns/op
# Warmup Iteration   2: 1527.672 ns/op
# Warmup Iteration   3: 1512.331 ns/op
# Warmup Iteration   4: 1527.580 ns/op
# Warmup Iteration   5: 1521.715 ns/op
Iteration   1: 1497.702 ns/op
Iteration   2: 1484.682 ns/op
Iteration   3: 1467.172 ns/op
Iteration   4: 1479.976 ns/op
Iteration   5: 1491.195 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1484.145 ±(99.9%) 44.708 ns/op [Average]
  (min, avg, max) = (1467.172, 1484.145, 1497.702), stdev = 11.611
  CI (99.9%): [1439.437, 1528.854] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 10)

# Run progress: 18.37% complete, ETA 00:28:03
# Fork: 1 of 1
# Warmup Iteration   1: 1537.272 ns/op
# Warmup Iteration   2: 1534.828 ns/op
# Warmup Iteration   3: 1507.384 ns/op
# Warmup Iteration   4: 1518.819 ns/op
# Warmup Iteration   5: 1461.311 ns/op
Iteration   1: 1461.068 ns/op
Iteration   2: 1474.163 ns/op
Iteration   3: 1479.598 ns/op
Iteration   4: 1456.857 ns/op
Iteration   5: 1543.715 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1483.080 ±(99.9%) 135.328 ns/op [Average]
  (min, avg, max) = (1456.857, 1483.080, 1543.715), stdev = 35.144
  CI (99.9%): [1347.753, 1618.408] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 50)

# Run progress: 18.88% complete, ETA 00:27:52
# Fork: 1 of 1
# Warmup Iteration   1: 1641.184 ns/op
# Warmup Iteration   2: 1632.703 ns/op
# Warmup Iteration   3: 1527.079 ns/op
# Warmup Iteration   4: 1530.463 ns/op
# Warmup Iteration   5: 1526.324 ns/op
Iteration   1: 1537.400 ns/op
Iteration   2: 1530.858 ns/op
Iteration   3: 1531.858 ns/op
Iteration   4: 1532.882 ns/op
Iteration   5: 1553.045 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1537.209 ±(99.9%) 35.424 ns/op [Average]
  (min, avg, max) = (1530.858, 1537.209, 1553.045), stdev = 9.199
  CI (99.9%): [1501.785, 1572.632] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 100)

# Run progress: 19.39% complete, ETA 00:27:41
# Fork: 1 of 1
# Warmup Iteration   1: 2073.747 ns/op
# Warmup Iteration   2: 2011.201 ns/op
# Warmup Iteration   3: 1932.683 ns/op
# Warmup Iteration   4: 1931.812 ns/op
# Warmup Iteration   5: 1931.884 ns/op
Iteration   1: 1939.810 ns/op
Iteration   2: 1941.272 ns/op
Iteration   3: 1940.349 ns/op
Iteration   4: 1939.602 ns/op
Iteration   5: 1979.789 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  1948.164 ±(99.9%) 68.119 ns/op [Average]
  (min, avg, max) = (1939.602, 1948.164, 1979.789), stdev = 17.690
  CI (99.9%): [1880.045, 2016.283] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 500)

# Run progress: 19.90% complete, ETA 00:27:31
# Fork: 1 of 1
# Warmup Iteration   1: 2435.586 ns/op
# Warmup Iteration   2: 2295.411 ns/op
# Warmup Iteration   3: 2253.532 ns/op
# Warmup Iteration   4: 2265.552 ns/op
# Warmup Iteration   5: 2263.274 ns/op
Iteration   1: 2239.977 ns/op
Iteration   2: 2240.649 ns/op
Iteration   3: 2238.063 ns/op
Iteration   4: 2211.783 ns/op
Iteration   5: 2200.622 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2226.219 ±(99.9%) 72.075 ns/op [Average]
  (min, avg, max) = (2200.622, 2226.219, 2240.649), stdev = 18.718
  CI (99.9%): [2154.144, 2298.293] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 1000)

# Run progress: 20.41% complete, ETA 00:27:20
# Fork: 1 of 1
# Warmup Iteration   1: 3234.607 ns/op
# Warmup Iteration   2: 3084.505 ns/op
# Warmup Iteration   3: 2989.759 ns/op
# Warmup Iteration   4: 2968.941 ns/op
# Warmup Iteration   5: 2949.694 ns/op
Iteration   1: 2942.213 ns/op
Iteration   2: 2943.035 ns/op
Iteration   3: 2939.385 ns/op
Iteration   4: 2950.668 ns/op
Iteration   5: 2987.307 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  2952.522 ±(99.9%) 76.586 ns/op [Average]
  (min, avg, max) = (2939.385, 2952.522, 2987.307), stdev = 19.889
  CI (99.9%): [2875.936, 3029.108] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1
# Parameters: (dataset = random, length = 10000)

# Run progress: 20.92% complete, ETA 00:27:09
# Fork: 1 of 1
# Warmup Iteration   1: 15834.054 ns/op
# Warmup Iteration   2: 15092.425 ns/op
# Warmup Iteration   3: 14077.485 ns/op
# Warmup Iteration   4: 13999.459 ns/op
# Warmup Iteration   5: 14258.044 ns/op
Iteration   1: 14080.789 ns/op
Iteration   2: 13985.329 ns/op
Iteration   3: 13989.952 ns/op
Iteration   4: 16959.540 ns/op
Iteration   5: 13938.213 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig1":
  14590.765 ±(99.9%) 5102.838 ns/op [Average]
  (min, avg, max) = (13938.213, 14590.765, 16959.540), stdev = 1325.191
  CI (99.9%): [9487.927, 19693.602] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 21.43% complete, ETA 00:26:59
# Fork: 1 of 1
# Warmup Iteration   1: 1351.714 ns/op
# Warmup Iteration   2: 1301.359 ns/op
# Warmup Iteration   3: 1295.115 ns/op
# Warmup Iteration   4: 1275.323 ns/op
# Warmup Iteration   5: 1305.873 ns/op
Iteration   1: 1247.480 ns/op
Iteration   2: 1300.621 ns/op
Iteration   3: 1250.265 ns/op
Iteration   4: 1262.932 ns/op
Iteration   5: 1249.475 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1262.154 ±(99.9%) 86.054 ns/op [Average]
  (min, avg, max) = (1247.480, 1262.154, 1300.621), stdev = 22.348
  CI (99.9%): [1176.100, 1348.209] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 21.94% complete, ETA 00:26:48
# Fork: 1 of 1
# Warmup Iteration   1: 1292.296 ns/op
# Warmup Iteration   2: 1276.852 ns/op
# Warmup Iteration   3: 1258.587 ns/op
# Warmup Iteration   4: 1245.373 ns/op
# Warmup Iteration   5: 1231.993 ns/op
Iteration   1: 1233.464 ns/op
Iteration   2: 1266.373 ns/op
Iteration   3: 1221.353 ns/op
Iteration   4: 1255.446 ns/op
Iteration   5: 1279.783 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1251.284 ±(99.9%) 91.742 ns/op [Average]
  (min, avg, max) = (1221.353, 1251.284, 1279.783), stdev = 23.825
  CI (99.9%): [1159.541, 1343.026] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 22.45% complete, ETA 00:26:38
# Fork: 1 of 1
# Warmup Iteration   1: 1403.148 ns/op
# Warmup Iteration   2: 1360.383 ns/op
# Warmup Iteration   3: 1306.846 ns/op
# Warmup Iteration   4: 1299.806 ns/op
# Warmup Iteration   5: 1306.333 ns/op
Iteration   1: 1308.689 ns/op
Iteration   2: 1300.086 ns/op
Iteration   3: 1309.155 ns/op
Iteration   4: 1305.495 ns/op
Iteration   5: 1312.177 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1307.120 ±(99.9%) 17.677 ns/op [Average]
  (min, avg, max) = (1300.086, 1307.120, 1312.177), stdev = 4.591
  CI (99.9%): [1289.444, 1324.797] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 22.96% complete, ETA 00:26:27
# Fork: 1 of 1
# Warmup Iteration   1: 1518.496 ns/op
# Warmup Iteration   2: 1402.740 ns/op
# Warmup Iteration   3: 1381.740 ns/op
# Warmup Iteration   4: 1383.797 ns/op
# Warmup Iteration   5: 1387.722 ns/op
Iteration   1: 1390.536 ns/op
Iteration   2: 1384.053 ns/op
Iteration   3: 1384.980 ns/op
Iteration   4: 1389.991 ns/op
Iteration   5: 1392.179 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1388.348 ±(99.9%) 13.877 ns/op [Average]
  (min, avg, max) = (1384.053, 1388.348, 1392.179), stdev = 3.604
  CI (99.9%): [1374.470, 1402.225] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 23.47% complete, ETA 00:26:17
# Fork: 1 of 1
# Warmup Iteration   1: 2110.219 ns/op
# Warmup Iteration   2: 1946.379 ns/op
# Warmup Iteration   3: 1928.410 ns/op
# Warmup Iteration   4: 1918.194 ns/op
# Warmup Iteration   5: 1914.488 ns/op
Iteration   1: 1892.076 ns/op
Iteration   2: 1894.663 ns/op
Iteration   3: 1898.630 ns/op
Iteration   4: 1902.048 ns/op
Iteration   5: 1900.782 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1897.640 ±(99.9%) 16.120 ns/op [Average]
  (min, avg, max) = (1892.076, 1897.640, 1902.048), stdev = 4.186
  CI (99.9%): [1881.520, 1913.760] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 23.98% complete, ETA 00:26:06
# Fork: 1 of 1
# Warmup Iteration   1: 3006.117 ns/op
# Warmup Iteration   2: 2819.067 ns/op
# Warmup Iteration   3: 2845.537 ns/op
# Warmup Iteration   4: 2750.017 ns/op
# Warmup Iteration   5: 2730.545 ns/op
Iteration   1: 2728.680 ns/op
Iteration   2: 2719.017 ns/op
Iteration   3: 2724.025 ns/op
Iteration   4: 2733.022 ns/op
Iteration   5: 2770.187 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  2734.986 ±(99.9%) 78.393 ns/op [Average]
  (min, avg, max) = (2719.017, 2734.986, 2770.187), stdev = 20.358
  CI (99.9%): [2656.593, 2813.380] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 24.49% complete, ETA 00:25:56
# Fork: 1 of 1
# Warmup Iteration   1: 15320.150 ns/op
# Warmup Iteration   2: 14626.643 ns/op
# Warmup Iteration   3: 13773.624 ns/op
# Warmup Iteration   4: 13658.972 ns/op
# Warmup Iteration   5: 13623.051 ns/op
Iteration   1: 13598.675 ns/op
Iteration   2: 13638.488 ns/op
Iteration   3: 13589.084 ns/op
Iteration   4: 13558.701 ns/op
Iteration   5: 13773.941 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  13631.778 ±(99.9%) 325.112 ns/op [Average]
  (min, avg, max) = (13558.701, 13631.778, 13773.941), stdev = 84.431
  CI (99.9%): [13306.665, 13956.890] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 1)

# Run progress: 25.00% complete, ETA 00:25:46
# Fork: 1 of 1
# Warmup Iteration   1: 1303.895 ns/op
# Warmup Iteration   2: 1280.957 ns/op
# Warmup Iteration   3: 1270.426 ns/op
# Warmup Iteration   4: 1266.602 ns/op
# Warmup Iteration   5: 1256.495 ns/op
Iteration   1: 1243.341 ns/op
Iteration   2: 1252.208 ns/op
Iteration   3: 1243.465 ns/op
Iteration   4: 1252.443 ns/op
Iteration   5: 1246.365 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1247.564 ±(99.9%) 17.375 ns/op [Average]
  (min, avg, max) = (1243.341, 1247.564, 1252.443), stdev = 4.512
  CI (99.9%): [1230.190, 1264.939] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 10)

# Run progress: 25.51% complete, ETA 00:25:35
# Fork: 1 of 1
# Warmup Iteration   1: 1302.238 ns/op
# Warmup Iteration   2: 1276.267 ns/op
# Warmup Iteration   3: 1258.766 ns/op
# Warmup Iteration   4: 1242.002 ns/op
# Warmup Iteration   5: 1231.796 ns/op
Iteration   1: 1224.095 ns/op
Iteration   2: 1231.434 ns/op
Iteration   3: 1226.013 ns/op
Iteration   4: 1228.615 ns/op
Iteration   5: 1239.845 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1230.000 ±(99.9%) 23.711 ns/op [Average]
  (min, avg, max) = (1224.095, 1230.000, 1239.845), stdev = 6.158
  CI (99.9%): [1206.289, 1253.711] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 50)

# Run progress: 26.02% complete, ETA 00:25:24
# Fork: 1 of 1
# Warmup Iteration   1: 1410.106 ns/op
# Warmup Iteration   2: 1377.692 ns/op
# Warmup Iteration   3: 1314.810 ns/op
# Warmup Iteration   4: 1304.267 ns/op
# Warmup Iteration   5: 1312.917 ns/op
Iteration   1: 1324.472 ns/op
Iteration   2: 1312.629 ns/op
Iteration   3: 1311.392 ns/op
Iteration   4: 1317.227 ns/op
Iteration   5: 1314.685 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1316.081 ±(99.9%) 19.969 ns/op [Average]
  (min, avg, max) = (1311.392, 1316.081, 1324.472), stdev = 5.186
  CI (99.9%): [1296.112, 1336.050] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 100)

# Run progress: 26.53% complete, ETA 00:25:14
# Fork: 1 of 1
# Warmup Iteration   1: 1537.141 ns/op
# Warmup Iteration   2: 1421.723 ns/op
# Warmup Iteration   3: 1387.493 ns/op
# Warmup Iteration   4: 1387.516 ns/op
# Warmup Iteration   5: 1390.448 ns/op
Iteration   1: 1390.001 ns/op
Iteration   2: 1388.781 ns/op
Iteration   3: 1387.688 ns/op
Iteration   4: 1398.069 ns/op
Iteration   5: 1398.199 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1392.548 ±(99.9%) 19.888 ns/op [Average]
  (min, avg, max) = (1387.688, 1392.548, 1398.199), stdev = 5.165
  CI (99.9%): [1372.660, 1412.435] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 500)

# Run progress: 27.04% complete, ETA 00:25:03
# Fork: 1 of 1
# Warmup Iteration   1: 2128.833 ns/op
# Warmup Iteration   2: 1950.344 ns/op
# Warmup Iteration   3: 1937.403 ns/op
# Warmup Iteration   4: 1927.776 ns/op
# Warmup Iteration   5: 1929.861 ns/op
Iteration   1: 1908.368 ns/op
Iteration   2: 1910.090 ns/op
Iteration   3: 1914.717 ns/op
Iteration   4: 1904.736 ns/op
Iteration   5: 1909.967 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  1909.576 ±(99.9%) 13.848 ns/op [Average]
  (min, avg, max) = (1904.736, 1909.576, 1914.717), stdev = 3.596
  CI (99.9%): [1895.728, 1923.424] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 1000)

# Run progress: 27.55% complete, ETA 00:24:52
# Fork: 1 of 1
# Warmup Iteration   1: 3064.233 ns/op
# Warmup Iteration   2: 3008.577 ns/op
# Warmup Iteration   3: 2909.718 ns/op
# Warmup Iteration   4: 2771.434 ns/op
# Warmup Iteration   5: 2747.675 ns/op
Iteration   1: 2768.797 ns/op
Iteration   2: 2737.900 ns/op
Iteration   3: 2728.460 ns/op
Iteration   4: 2814.018 ns/op
Iteration   5: 2738.665 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  2757.568 ±(99.9%) 134.829 ns/op [Average]
  (min, avg, max) = (2728.460, 2757.568, 2814.018), stdev = 35.015
  CI (99.9%): [2622.739, 2892.397] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2
# Parameters: (dataset = random, length = 10000)

# Run progress: 28.06% complete, ETA 00:24:42
# Fork: 1 of 1
# Warmup Iteration   1: 16420.618 ns/op
# Warmup Iteration   2: 14636.292 ns/op
# Warmup Iteration   3: 13794.971 ns/op
# Warmup Iteration   4: 13541.304 ns/op
# Warmup Iteration   5: 13571.661 ns/op
Iteration   1: 13547.236 ns/op
Iteration   2: 13558.804 ns/op
Iteration   3: 13622.846 ns/op
Iteration   4: 13643.792 ns/op
Iteration   5: 13894.957 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig2":
  13653.527 ±(99.9%) 543.181 ns/op [Average]
  (min, avg, max) = (13547.236, 13653.527, 13894.957), stdev = 141.063
  CI (99.9%): [13110.345, 14196.708] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 1)

# Run progress: 28.57% complete, ETA 00:24:31
# Fork: 1 of 1
# Warmup Iteration   1: 1143.132 ns/op
# Warmup Iteration   2: 1152.223 ns/op
# Warmup Iteration   3: 1103.479 ns/op
# Warmup Iteration   4: 1104.856 ns/op
# Warmup Iteration   5: 1088.273 ns/op
Iteration   1: 1086.848 ns/op
Iteration   2: 1213.011 ns/op
Iteration   3: 1089.138 ns/op
Iteration   4: 1088.827 ns/op
Iteration   5: 1112.337 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1118.032 ±(99.9%) 208.377 ns/op [Average]
  (min, avg, max) = (1086.848, 1118.032, 1213.011), stdev = 54.115
  CI (99.9%): [909.656, 1326.409] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 10)

# Run progress: 29.08% complete, ETA 00:24:21
# Fork: 1 of 1
# Warmup Iteration   1: 1127.719 ns/op
# Warmup Iteration   2: 1107.801 ns/op
# Warmup Iteration   3: 1094.316 ns/op
# Warmup Iteration   4: 1066.956 ns/op
# Warmup Iteration   5: 1065.209 ns/op
Iteration   1: 1115.124 ns/op
Iteration   2: 1078.373 ns/op
Iteration   3: 1079.147 ns/op
Iteration   4: 1084.266 ns/op
Iteration   5: 1076.520 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1086.686 ±(99.9%) 62.205 ns/op [Average]
  (min, avg, max) = (1076.520, 1086.686, 1115.124), stdev = 16.154
  CI (99.9%): [1024.481, 1148.891] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 50)

# Run progress: 29.59% complete, ETA 00:24:10
# Fork: 1 of 1
# Warmup Iteration   1: 1256.519 ns/op
# Warmup Iteration   2: 1202.842 ns/op
# Warmup Iteration   3: 1153.589 ns/op
# Warmup Iteration   4: 1152.690 ns/op
# Warmup Iteration   5: 1148.502 ns/op
Iteration   1: 1152.535 ns/op
Iteration   2: 1161.364 ns/op
Iteration   3: 1153.000 ns/op
Iteration   4: 1163.819 ns/op
Iteration   5: 1163.731 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1158.890 ±(99.9%) 21.861 ns/op [Average]
  (min, avg, max) = (1152.535, 1158.890, 1163.819), stdev = 5.677
  CI (99.9%): [1137.029, 1180.750] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 100)

# Run progress: 30.10% complete, ETA 00:24:00
# Fork: 1 of 1
# Warmup Iteration   1: 1415.377 ns/op
# Warmup Iteration   2: 1279.092 ns/op
# Warmup Iteration   3: 1256.550 ns/op
# Warmup Iteration   4: 1255.564 ns/op
# Warmup Iteration   5: 1297.216 ns/op
Iteration   1: 1307.054 ns/op
Iteration   2: 1283.734 ns/op
Iteration   3: 1299.031 ns/op
Iteration   4: 1246.075 ns/op
Iteration   5: 1238.356 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1274.850 ±(99.9%) 119.628 ns/op [Average]
  (min, avg, max) = (1238.356, 1274.850, 1307.054), stdev = 31.067
  CI (99.9%): [1155.222, 1394.478] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 500)

# Run progress: 30.61% complete, ETA 00:23:49
# Fork: 1 of 1
# Warmup Iteration   1: 1942.256 ns/op
# Warmup Iteration   2: 1794.301 ns/op
# Warmup Iteration   3: 1760.270 ns/op
# Warmup Iteration   4: 1765.284 ns/op
# Warmup Iteration   5: 1737.458 ns/op
Iteration   1: 1736.064 ns/op
Iteration   2: 1740.297 ns/op
Iteration   3: 1754.778 ns/op
Iteration   4: 1769.753 ns/op
Iteration   5: 1753.304 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1750.839 ±(99.9%) 51.257 ns/op [Average]
  (min, avg, max) = (1736.064, 1750.839, 1769.753), stdev = 13.311
  CI (99.9%): [1699.583, 1802.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 31.12% complete, ETA 00:23:39
# Fork: 1 of 1
# Warmup Iteration   1: 2843.914 ns/op
# Warmup Iteration   2: 2664.237 ns/op
# Warmup Iteration   3: 2609.055 ns/op
# Warmup Iteration   4: 2608.473 ns/op
# Warmup Iteration   5: 2571.658 ns/op
Iteration   1: 2578.645 ns/op
Iteration   2: 2571.737 ns/op
Iteration   3: 2582.104 ns/op
Iteration   4: 2570.857 ns/op
Iteration   5: 2586.552 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  2577.979 ±(99.9%) 25.877 ns/op [Average]
  (min, avg, max) = (2570.857, 2577.979, 2586.552), stdev = 6.720
  CI (99.9%): [2552.101, 2603.856] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 31.63% complete, ETA 00:23:28
# Fork: 1 of 1
# Warmup Iteration   1: 15059.266 ns/op
# Warmup Iteration   2: 14421.260 ns/op
# Warmup Iteration   3: 13304.950 ns/op
# Warmup Iteration   4: 13324.850 ns/op
# Warmup Iteration   5: 13304.234 ns/op
Iteration   1: 13301.156 ns/op
Iteration   2: 13355.661 ns/op
Iteration   3: 13336.130 ns/op
Iteration   4: 13330.705 ns/op
Iteration   5: 13398.866 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  13344.504 ±(99.9%) 139.093 ns/op [Average]
  (min, avg, max) = (13301.156, 13344.504, 13398.866), stdev = 36.122
  CI (99.9%): [13205.410, 13483.597] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 1)

# Run progress: 32.14% complete, ETA 00:23:18
# Fork: 1 of 1
# Warmup Iteration   1: 1135.076 ns/op
# Warmup Iteration   2: 1119.893 ns/op
# Warmup Iteration   3: 1105.317 ns/op
# Warmup Iteration   4: 1109.318 ns/op
# Warmup Iteration   5: 1086.072 ns/op
Iteration   1: 1089.441 ns/op
Iteration   2: 1085.945 ns/op
Iteration   3: 1092.173 ns/op
Iteration   4: 1106.751 ns/op
Iteration   5: 1127.295 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1100.321 ±(99.9%) 65.584 ns/op [Average]
  (min, avg, max) = (1085.945, 1100.321, 1127.295), stdev = 17.032
  CI (99.9%): [1034.737, 1165.905] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 10)

# Run progress: 32.65% complete, ETA 00:23:07
# Fork: 1 of 1
# Warmup Iteration   1: 1142.408 ns/op
# Warmup Iteration   2: 1121.874 ns/op
# Warmup Iteration   3: 1183.695 ns/op
# Warmup Iteration   4: 1073.195 ns/op
# Warmup Iteration   5: 1068.867 ns/op
Iteration   1: 1073.324 ns/op
Iteration   2: 1070.912 ns/op
Iteration   3: 1084.589 ns/op
Iteration   4: 1081.724 ns/op
Iteration   5: 1074.902 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1077.090 ±(99.9%) 22.357 ns/op [Average]
  (min, avg, max) = (1070.912, 1077.090, 1084.589), stdev = 5.806
  CI (99.9%): [1054.733, 1099.448] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 50)

# Run progress: 33.16% complete, ETA 00:22:57
# Fork: 1 of 1
# Warmup Iteration   1: 1251.689 ns/op
# Warmup Iteration   2: 1200.866 ns/op
# Warmup Iteration   3: 1150.535 ns/op
# Warmup Iteration   4: 1186.264 ns/op
# Warmup Iteration   5: 1147.000 ns/op
Iteration   1: 1155.482 ns/op
Iteration   2: 1154.562 ns/op
Iteration   3: 1153.230 ns/op
Iteration   4: 1152.150 ns/op
Iteration   5: 1157.162 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1154.517 ±(99.9%) 7.503 ns/op [Average]
  (min, avg, max) = (1152.150, 1154.517, 1157.162), stdev = 1.948
  CI (99.9%): [1147.014, 1162.020] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 100)

# Run progress: 33.67% complete, ETA 00:22:46
# Fork: 1 of 1
# Warmup Iteration   1: 1363.137 ns/op
# Warmup Iteration   2: 1283.429 ns/op
# Warmup Iteration   3: 1223.131 ns/op
# Warmup Iteration   4: 1225.415 ns/op
# Warmup Iteration   5: 1238.678 ns/op
Iteration   1: 1222.602 ns/op
Iteration   2: 1221.914 ns/op
Iteration   3: 1227.723 ns/op
Iteration   4: 1223.266 ns/op
Iteration   5: 1228.873 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1224.876 ±(99.9%) 12.271 ns/op [Average]
  (min, avg, max) = (1221.914, 1224.876, 1228.873), stdev = 3.187
  CI (99.9%): [1212.604, 1237.147] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 500)

# Run progress: 34.18% complete, ETA 00:22:36
# Fork: 1 of 1
# Warmup Iteration   1: 1925.036 ns/op
# Warmup Iteration   2: 1824.868 ns/op
# Warmup Iteration   3: 1750.727 ns/op
# Warmup Iteration   4: 1752.001 ns/op
# Warmup Iteration   5: 1746.968 ns/op
Iteration   1: 1750.525 ns/op
Iteration   2: 1734.976 ns/op
Iteration   3: 1736.195 ns/op
Iteration   4: 1732.277 ns/op
Iteration   5: 1745.753 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  1739.945 ±(99.9%) 30.027 ns/op [Average]
  (min, avg, max) = (1732.277, 1739.945, 1750.525), stdev = 7.798
  CI (99.9%): [1709.918, 1769.972] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 1000)

# Run progress: 34.69% complete, ETA 00:22:25
# Fork: 1 of 1
# Warmup Iteration   1: 2725.605 ns/op
# Warmup Iteration   2: 2670.286 ns/op
# Warmup Iteration   3: 2591.168 ns/op
# Warmup Iteration   4: 2564.838 ns/op
# Warmup Iteration   5: 2615.073 ns/op
Iteration   1: 2554.055 ns/op
Iteration   2: 2552.308 ns/op
Iteration   3: 2556.152 ns/op
Iteration   4: 2641.803 ns/op
Iteration   5: 2552.063 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  2571.276 ±(99.9%) 151.945 ns/op [Average]
  (min, avg, max) = (2552.063, 2571.276, 2641.803), stdev = 39.460
  CI (99.9%): [2419.331, 2723.221] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3
# Parameters: (dataset = random, length = 10000)

# Run progress: 35.20% complete, ETA 00:22:14
# Fork: 1 of 1
# Warmup Iteration   1: 15476.729 ns/op
# Warmup Iteration   2: 14131.971 ns/op
# Warmup Iteration   3: 13696.088 ns/op
# Warmup Iteration   4: 13406.578 ns/op
# Warmup Iteration   5: 13306.011 ns/op
Iteration   1: 13298.744 ns/op
Iteration   2: 13333.382 ns/op
Iteration   3: 13318.147 ns/op
Iteration   4: 13303.871 ns/op
Iteration   5: 13323.866 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig3":
  13315.602 ±(99.9%) 54.887 ns/op [Average]
  (min, avg, max) = (13298.744, 13315.602, 13333.382), stdev = 14.254
  CI (99.9%): [13260.715, 13370.489] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 1)

# Run progress: 35.71% complete, ETA 00:22:04
# Fork: 1 of 1
# Warmup Iteration   1: 1096.255 ns/op
# Warmup Iteration   2: 1082.918 ns/op
# Warmup Iteration   3: 1068.618 ns/op
# Warmup Iteration   4: 1073.955 ns/op
# Warmup Iteration   5: 1065.056 ns/op
Iteration   1: 1060.261 ns/op
Iteration   2: 1066.944 ns/op
Iteration   3: 1044.971 ns/op
Iteration   4: 1043.725 ns/op
Iteration   5: 1070.252 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1057.231 ±(99.9%) 47.389 ns/op [Average]
  (min, avg, max) = (1043.725, 1057.231, 1070.252), stdev = 12.307
  CI (99.9%): [1009.842, 1104.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 10)

# Run progress: 36.22% complete, ETA 00:21:53
# Fork: 1 of 1
# Warmup Iteration   1: 1094.502 ns/op
# Warmup Iteration   2: 1076.578 ns/op
# Warmup Iteration   3: 1064.112 ns/op
# Warmup Iteration   4: 1034.077 ns/op
# Warmup Iteration   5: 1031.750 ns/op
Iteration   1: 1035.630 ns/op
Iteration   2: 1028.409 ns/op
Iteration   3: 1033.488 ns/op
Iteration   4: 1028.961 ns/op
Iteration   5: 1042.777 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1033.853 ±(99.9%) 22.494 ns/op [Average]
  (min, avg, max) = (1028.409, 1033.853, 1042.777), stdev = 5.842
  CI (99.9%): [1011.359, 1056.347] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 50)

# Run progress: 36.73% complete, ETA 00:21:43
# Fork: 1 of 1
# Warmup Iteration   1: 1202.932 ns/op
# Warmup Iteration   2: 1142.358 ns/op
# Warmup Iteration   3: 1106.336 ns/op
# Warmup Iteration   4: 1106.511 ns/op
# Warmup Iteration   5: 1108.264 ns/op
Iteration   1: 1106.165 ns/op
Iteration   2: 1101.860 ns/op
Iteration   3: 1109.292 ns/op
Iteration   4: 1114.670 ns/op
Iteration   5: 1133.013 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1113.000 ±(99.9%) 46.681 ns/op [Average]
  (min, avg, max) = (1101.860, 1113.000, 1133.013), stdev = 12.123
  CI (99.9%): [1066.319, 1159.681] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 100)

# Run progress: 37.24% complete, ETA 00:21:32
# Fork: 1 of 1
# Warmup Iteration   1: 1307.528 ns/op
# Warmup Iteration   2: 1206.853 ns/op
# Warmup Iteration   3: 1186.485 ns/op
# Warmup Iteration   4: 1195.329 ns/op
# Warmup Iteration   5: 1183.853 ns/op
Iteration   1: 1183.747 ns/op
Iteration   2: 1189.716 ns/op
Iteration   3: 1183.544 ns/op
Iteration   4: 1182.732 ns/op
Iteration   5: 1202.062 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1188.360 ±(99.9%) 31.386 ns/op [Average]
  (min, avg, max) = (1182.732, 1188.360, 1202.062), stdev = 8.151
  CI (99.9%): [1156.975, 1219.746] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 500)

# Run progress: 37.76% complete, ETA 00:21:22
# Fork: 1 of 1
# Warmup Iteration   1: 1859.144 ns/op
# Warmup Iteration   2: 1751.038 ns/op
# Warmup Iteration   3: 1691.760 ns/op
# Warmup Iteration   4: 1686.555 ns/op
# Warmup Iteration   5: 1687.542 ns/op
Iteration   1: 1675.809 ns/op
Iteration   2: 1672.504 ns/op
Iteration   3: 1671.986 ns/op
Iteration   4: 1671.887 ns/op
Iteration   5: 1682.336 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1674.904 ±(99.9%) 17.159 ns/op [Average]
  (min, avg, max) = (1671.887, 1674.904, 1682.336), stdev = 4.456
  CI (99.9%): [1657.745, 1692.063] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 38.27% complete, ETA 00:21:11
# Fork: 1 of 1
# Warmup Iteration   1: 2577.521 ns/op
# Warmup Iteration   2: 2547.308 ns/op
# Warmup Iteration   3: 2412.299 ns/op
# Warmup Iteration   4: 2390.118 ns/op
# Warmup Iteration   5: 2496.965 ns/op
Iteration   1: 2380.040 ns/op
Iteration   2: 2370.870 ns/op
Iteration   3: 2369.970 ns/op
Iteration   4: 2521.166 ns/op
Iteration   5: 2387.080 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  2405.825 ±(99.9%) 249.752 ns/op [Average]
  (min, avg, max) = (2369.970, 2405.825, 2521.166), stdev = 64.860
  CI (99.9%): [2156.073, 2655.578] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 38.78% complete, ETA 00:21:01
# Fork: 1 of 1
# Warmup Iteration   1: 14664.063 ns/op
# Warmup Iteration   2: 13855.115 ns/op
# Warmup Iteration   3: 13028.738 ns/op
# Warmup Iteration   4: 12963.694 ns/op
# Warmup Iteration   5: 13043.968 ns/op
Iteration   1: 13216.919 ns/op
Iteration   2: 12897.743 ns/op
Iteration   3: 12932.938 ns/op
Iteration   4: 12879.953 ns/op
Iteration   5: 12916.768 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  12968.864 ±(99.9%) 539.432 ns/op [Average]
  (min, avg, max) = (12879.953, 12968.864, 13216.919), stdev = 140.089
  CI (99.9%): [12429.432, 13508.296] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 1)

# Run progress: 39.29% complete, ETA 00:20:51
# Fork: 1 of 1
# Warmup Iteration   1: 1094.032 ns/op
# Warmup Iteration   2: 1085.537 ns/op
# Warmup Iteration   3: 1065.677 ns/op
# Warmup Iteration   4: 1063.672 ns/op
# Warmup Iteration   5: 1041.595 ns/op
Iteration   1: 1042.397 ns/op
Iteration   2: 1047.331 ns/op
Iteration   3: 1042.140 ns/op
Iteration   4: 1068.759 ns/op
Iteration   5: 1068.862 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1053.898 ±(99.9%) 53.022 ns/op [Average]
  (min, avg, max) = (1042.140, 1053.898, 1068.862), stdev = 13.770
  CI (99.9%): [1000.876, 1106.920] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 10)

# Run progress: 39.80% complete, ETA 00:20:40
# Fork: 1 of 1
# Warmup Iteration   1: 1089.847 ns/op
# Warmup Iteration   2: 1086.137 ns/op
# Warmup Iteration   3: 1060.616 ns/op
# Warmup Iteration   4: 1030.230 ns/op
# Warmup Iteration   5: 1029.713 ns/op
Iteration   1: 1034.038 ns/op
Iteration   2: 1031.661 ns/op
Iteration   3: 1033.747 ns/op
Iteration   4: 1027.701 ns/op
Iteration   5: 1039.704 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1033.370 ±(99.9%) 16.759 ns/op [Average]
  (min, avg, max) = (1027.701, 1033.370, 1039.704), stdev = 4.352
  CI (99.9%): [1016.611, 1050.129] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 50)

# Run progress: 40.31% complete, ETA 00:20:29
# Fork: 1 of 1
# Warmup Iteration   1: 1202.659 ns/op
# Warmup Iteration   2: 1182.347 ns/op
# Warmup Iteration   3: 1112.958 ns/op
# Warmup Iteration   4: 1109.675 ns/op
# Warmup Iteration   5: 1111.447 ns/op
Iteration   1: 1105.055 ns/op
Iteration   2: 1111.153 ns/op
Iteration   3: 1114.309 ns/op
Iteration   4: 1118.115 ns/op
Iteration   5: 1124.524 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1114.631 ±(99.9%) 28.159 ns/op [Average]
  (min, avg, max) = (1105.055, 1114.631, 1124.524), stdev = 7.313
  CI (99.9%): [1086.472, 1142.791] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 100)

# Run progress: 40.82% complete, ETA 00:20:19
# Fork: 1 of 1
# Warmup Iteration   1: 1323.119 ns/op
# Warmup Iteration   2: 1198.876 ns/op
# Warmup Iteration   3: 1180.452 ns/op
# Warmup Iteration   4: 1182.845 ns/op
# Warmup Iteration   5: 1177.074 ns/op
Iteration   1: 1215.360 ns/op
Iteration   2: 1182.431 ns/op
Iteration   3: 1187.694 ns/op
Iteration   4: 1178.603 ns/op
Iteration   5: 1198.537 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1192.525 ±(99.9%) 57.006 ns/op [Average]
  (min, avg, max) = (1178.603, 1192.525, 1215.360), stdev = 14.804
  CI (99.9%): [1135.519, 1249.531] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 500)

# Run progress: 41.33% complete, ETA 00:20:08
# Fork: 1 of 1
# Warmup Iteration   1: 1868.453 ns/op
# Warmup Iteration   2: 1762.283 ns/op
# Warmup Iteration   3: 1699.706 ns/op
# Warmup Iteration   4: 1693.152 ns/op
# Warmup Iteration   5: 1690.646 ns/op
Iteration   1: 1690.513 ns/op
Iteration   2: 1681.669 ns/op
Iteration   3: 1679.591 ns/op
Iteration   4: 1682.341 ns/op
Iteration   5: 1679.280 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  1682.679 ±(99.9%) 17.603 ns/op [Average]
  (min, avg, max) = (1679.280, 1682.679, 1690.513), stdev = 4.572
  CI (99.9%): [1665.075, 1700.282] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 1000)

# Run progress: 41.84% complete, ETA 00:19:58
# Fork: 1 of 1
# Warmup Iteration   1: 2668.757 ns/op
# Warmup Iteration   2: 2472.513 ns/op
# Warmup Iteration   3: 2447.876 ns/op
# Warmup Iteration   4: 2427.056 ns/op
# Warmup Iteration   5: 2440.321 ns/op
Iteration   1: 2410.620 ns/op
Iteration   2: 2400.742 ns/op
Iteration   3: 2409.495 ns/op
Iteration   4: 2424.246 ns/op
Iteration   5: 2409.211 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  2410.863 ±(99.9%) 32.571 ns/op [Average]
  (min, avg, max) = (2400.742, 2410.863, 2424.246), stdev = 8.459
  CI (99.9%): [2378.292, 2443.434] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4
# Parameters: (dataset = random, length = 10000)

# Run progress: 42.35% complete, ETA 00:19:47
# Fork: 1 of 1
# Warmup Iteration   1: 14919.803 ns/op
# Warmup Iteration   2: 14877.957 ns/op
# Warmup Iteration   3: 12971.301 ns/op
# Warmup Iteration   4: 12968.017 ns/op
# Warmup Iteration   5: 12997.787 ns/op
Iteration   1: 13019.123 ns/op
Iteration   2: 13065.576 ns/op
Iteration   3: 13066.229 ns/op
Iteration   4: 13064.423 ns/op
Iteration   5: 13102.056 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfig4":
  13063.481 ±(99.9%) 113.391 ns/op [Average]
  (min, avg, max) = (13019.123, 13063.481, 13102.056), stdev = 29.447
  CI (99.9%): [12950.091, 13176.872] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 42.86% complete, ETA 00:19:36
# Fork: 1 of 1
# Warmup Iteration   1: 1071.131 ns/op
# Warmup Iteration   2: 1051.891 ns/op
# Warmup Iteration   3: 1063.550 ns/op
# Warmup Iteration   4: 1032.227 ns/op
# Warmup Iteration   5: 1011.413 ns/op
Iteration   1: 1011.579 ns/op
Iteration   2: 1018.045 ns/op
Iteration   3: 1014.426 ns/op
Iteration   4: 1016.495 ns/op
Iteration   5: 1021.937 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1016.496 ±(99.9%) 14.972 ns/op [Average]
  (min, avg, max) = (1011.579, 1016.496, 1021.937), stdev = 3.888
  CI (99.9%): [1001.525, 1031.468] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 43.37% complete, ETA 00:19:26
# Fork: 1 of 1
# Warmup Iteration   1: 1134.396 ns/op
# Warmup Iteration   2: 1094.012 ns/op
# Warmup Iteration   3: 1079.301 ns/op
# Warmup Iteration   4: 1060.264 ns/op
# Warmup Iteration   5: 1056.410 ns/op
Iteration   1: 1060.690 ns/op
Iteration   2: 1057.099 ns/op
Iteration   3: 1061.158 ns/op
Iteration   4: 1056.296 ns/op
Iteration   5: 1060.408 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1059.130 ±(99.9%) 8.681 ns/op [Average]
  (min, avg, max) = (1056.296, 1059.130, 1061.158), stdev = 2.255
  CI (99.9%): [1050.449, 1067.812] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 43.88% complete, ETA 00:19:16
# Fork: 1 of 1
# Warmup Iteration   1: 1240.160 ns/op
# Warmup Iteration   2: 1175.830 ns/op
# Warmup Iteration   3: 1141.720 ns/op
# Warmup Iteration   4: 1142.055 ns/op
# Warmup Iteration   5: 1142.224 ns/op
Iteration   1: 1134.447 ns/op
Iteration   2: 1138.420 ns/op
Iteration   3: 1141.732 ns/op
Iteration   4: 1151.740 ns/op
Iteration   5: 1149.614 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1143.191 ±(99.9%) 28.275 ns/op [Average]
  (min, avg, max) = (1134.447, 1143.191, 1151.740), stdev = 7.343
  CI (99.9%): [1114.916, 1171.466] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 44.39% complete, ETA 00:19:05
# Fork: 1 of 1
# Warmup Iteration   1: 1490.116 ns/op
# Warmup Iteration   2: 1359.241 ns/op
# Warmup Iteration   3: 1337.386 ns/op
# Warmup Iteration   4: 1339.840 ns/op
# Warmup Iteration   5: 1343.187 ns/op
Iteration   1: 1337.823 ns/op
Iteration   2: 1341.254 ns/op
Iteration   3: 1346.948 ns/op
Iteration   4: 1334.717 ns/op
Iteration   5: 1429.195 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1357.987 ±(99.9%) 154.273 ns/op [Average]
  (min, avg, max) = (1334.717, 1357.987, 1429.195), stdev = 40.064
  CI (99.9%): [1203.715, 1512.260] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 44.90% complete, ETA 00:18:55
# Fork: 1 of 1
# Warmup Iteration   1: 1896.894 ns/op
# Warmup Iteration   2: 1768.755 ns/op
# Warmup Iteration   3: 1744.079 ns/op
# Warmup Iteration   4: 1740.446 ns/op
# Warmup Iteration   5: 1716.957 ns/op
Iteration   1: 1719.672 ns/op
Iteration   2: 1716.903 ns/op
Iteration   3: 1715.947 ns/op
Iteration   4: 1720.288 ns/op
Iteration   5: 1742.095 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1722.981 ±(99.9%) 41.738 ns/op [Average]
  (min, avg, max) = (1715.947, 1722.981, 1742.095), stdev = 10.839
  CI (99.9%): [1681.243, 1764.719] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 45.41% complete, ETA 00:18:44
# Fork: 1 of 1
# Warmup Iteration   1: 2697.894 ns/op
# Warmup Iteration   2: 2481.532 ns/op
# Warmup Iteration   3: 2453.705 ns/op
# Warmup Iteration   4: 2541.383 ns/op
# Warmup Iteration   5: 2417.140 ns/op
Iteration   1: 2419.831 ns/op
Iteration   2: 2424.760 ns/op
Iteration   3: 2415.329 ns/op
Iteration   4: 2422.136 ns/op
Iteration   5: 2443.316 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  2425.074 ±(99.9%) 41.471 ns/op [Average]
  (min, avg, max) = (2415.329, 2425.074, 2443.316), stdev = 10.770
  CI (99.9%): [2383.603, 2466.545] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 45.92% complete, ETA 00:18:34
# Fork: 1 of 1
# Warmup Iteration   1: 15040.340 ns/op
# Warmup Iteration   2: 14030.498 ns/op
# Warmup Iteration   3: 13916.609 ns/op
# Warmup Iteration   4: 13341.510 ns/op
# Warmup Iteration   5: 13344.971 ns/op
Iteration   1: 13315.380 ns/op
Iteration   2: 14380.836 ns/op
Iteration   3: 13295.267 ns/op
Iteration   4: 13249.563 ns/op
Iteration   5: 13192.737 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  13486.757 ±(99.9%) 1933.127 ns/op [Average]
  (min, avg, max) = (13192.737, 13486.757, 14380.836), stdev = 502.027
  CI (99.9%): [11553.630, 15419.883] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 1)

# Run progress: 46.43% complete, ETA 00:18:23
# Fork: 1 of 1
# Warmup Iteration   1: 1068.632 ns/op
# Warmup Iteration   2: 1050.630 ns/op
# Warmup Iteration   3: 1034.507 ns/op
# Warmup Iteration   4: 1030.920 ns/op
# Warmup Iteration   5: 1012.611 ns/op
Iteration   1: 1013.102 ns/op
Iteration   2: 1018.796 ns/op
Iteration   3: 1014.689 ns/op
Iteration   4: 1023.072 ns/op
Iteration   5: 1022.999 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1018.532 ±(99.9%) 17.738 ns/op [Average]
  (min, avg, max) = (1013.102, 1018.532, 1023.072), stdev = 4.606
  CI (99.9%): [1000.794, 1036.270] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 10)

# Run progress: 46.94% complete, ETA 00:18:13
# Fork: 1 of 1
# Warmup Iteration   1: 1122.267 ns/op
# Warmup Iteration   2: 1107.237 ns/op
# Warmup Iteration   3: 1085.060 ns/op
# Warmup Iteration   4: 1056.130 ns/op
# Warmup Iteration   5: 1060.882 ns/op
Iteration   1: 1066.097 ns/op
Iteration   2: 1059.946 ns/op
Iteration   3: 1066.145 ns/op
Iteration   4: 1052.458 ns/op
Iteration   5: 1071.974 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1063.324 ±(99.9%) 28.554 ns/op [Average]
  (min, avg, max) = (1052.458, 1063.324, 1071.974), stdev = 7.415
  CI (99.9%): [1034.770, 1091.878] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 50)

# Run progress: 47.45% complete, ETA 00:18:02
# Fork: 1 of 1
# Warmup Iteration   1: 1251.062 ns/op
# Warmup Iteration   2: 1188.133 ns/op
# Warmup Iteration   3: 1165.911 ns/op
# Warmup Iteration   4: 1170.591 ns/op
# Warmup Iteration   5: 1163.771 ns/op
Iteration   1: 1175.678 ns/op
Iteration   2: 1171.394 ns/op
Iteration   3: 1171.507 ns/op
Iteration   4: 1162.071 ns/op
Iteration   5: 1181.200 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1172.370 ±(99.9%) 27.001 ns/op [Average]
  (min, avg, max) = (1162.071, 1172.370, 1181.200), stdev = 7.012
  CI (99.9%): [1145.369, 1199.372] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 100)

# Run progress: 47.96% complete, ETA 00:17:51
# Fork: 1 of 1
# Warmup Iteration   1: 1348.826 ns/op
# Warmup Iteration   2: 1229.580 ns/op
# Warmup Iteration   3: 1213.563 ns/op
# Warmup Iteration   4: 1210.043 ns/op
# Warmup Iteration   5: 1218.799 ns/op
Iteration   1: 1211.908 ns/op
Iteration   2: 1210.503 ns/op
Iteration   3: 1217.120 ns/op
Iteration   4: 1213.029 ns/op
Iteration   5: 1215.553 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1213.623 ±(99.9%) 10.365 ns/op [Average]
  (min, avg, max) = (1210.503, 1213.623, 1217.120), stdev = 2.692
  CI (99.9%): [1203.258, 1223.987] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 500)

# Run progress: 48.47% complete, ETA 00:17:41
# Fork: 1 of 1
# Warmup Iteration   1: 1900.684 ns/op
# Warmup Iteration   2: 1765.780 ns/op
# Warmup Iteration   3: 1750.198 ns/op
# Warmup Iteration   4: 1757.351 ns/op
# Warmup Iteration   5: 1715.329 ns/op
Iteration   1: 1711.702 ns/op
Iteration   2: 1709.585 ns/op
Iteration   3: 1709.494 ns/op
Iteration   4: 1726.902 ns/op
Iteration   5: 1717.434 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  1715.023 ±(99.9%) 28.433 ns/op [Average]
  (min, avg, max) = (1709.494, 1715.023, 1726.902), stdev = 7.384
  CI (99.9%): [1686.590, 1743.457] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 1000)

# Run progress: 48.98% complete, ETA 00:17:30
# Fork: 1 of 1
# Warmup Iteration   1: 2729.272 ns/op
# Warmup Iteration   2: 2441.195 ns/op
# Warmup Iteration   3: 2416.445 ns/op
# Warmup Iteration   4: 2475.345 ns/op
# Warmup Iteration   5: 2438.272 ns/op
Iteration   1: 2391.235 ns/op
Iteration   2: 2392.839 ns/op
Iteration   3: 2391.196 ns/op
Iteration   4: 2385.609 ns/op
Iteration   5: 2399.352 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  2392.046 ±(99.9%) 18.944 ns/op [Average]
  (min, avg, max) = (2385.609, 2392.046, 2399.352), stdev = 4.920
  CI (99.9%): [2373.102, 2410.991] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.49% complete, ETA 00:17:20
# Fork: 1 of 1
# Warmup Iteration   1: 15898.500 ns/op
# Warmup Iteration   2: 14244.926 ns/op
# Warmup Iteration   3: 13453.449 ns/op
# Warmup Iteration   4: 13288.873 ns/op
# Warmup Iteration   5: 13276.058 ns/op
Iteration   1: 13356.731 ns/op
Iteration   2: 13390.007 ns/op
Iteration   3: 13404.041 ns/op
Iteration   4: 13434.577 ns/op
Iteration   5: 13262.894 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1":
  13369.650 ±(99.9%) 253.795 ns/op [Average]
  (min, avg, max) = (13262.894, 13369.650, 13434.577), stdev = 65.910
  CI (99.9%): [13115.854, 13623.445] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:17:09
# Fork: 1 of 1
# Warmup Iteration   1: 607.584 ns/op
# Warmup Iteration   2: 582.460 ns/op
# Warmup Iteration   3: 549.102 ns/op
# Warmup Iteration   4: 551.859 ns/op
# Warmup Iteration   5: 548.205 ns/op
Iteration   1: 550.892 ns/op
Iteration   2: 550.316 ns/op
Iteration   3: 550.832 ns/op
Iteration   4: 550.256 ns/op
Iteration   5: 547.866 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  550.032 ±(99.9%) 4.794 ns/op [Average]
  (min, avg, max) = (547.866, 550.032, 550.892), stdev = 1.245
  CI (99.9%): [545.238, 554.826] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.51% complete, ETA 00:16:59
# Fork: 1 of 1
# Warmup Iteration   1: 649.250 ns/op
# Warmup Iteration   2: 619.068 ns/op
# Warmup Iteration   3: 582.856 ns/op
# Warmup Iteration   4: 581.239 ns/op
# Warmup Iteration   5: 586.285 ns/op
Iteration   1: 585.678 ns/op
Iteration   2: 582.105 ns/op
Iteration   3: 584.755 ns/op
Iteration   4: 584.550 ns/op
Iteration   5: 585.747 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  584.567 ±(99.9%) 5.686 ns/op [Average]
  (min, avg, max) = (582.105, 584.567, 585.747), stdev = 1.477
  CI (99.9%): [578.881, 590.253] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 51.02% complete, ETA 00:16:48
# Fork: 1 of 1
# Warmup Iteration   1: 757.471 ns/op
# Warmup Iteration   2: 685.368 ns/op
# Warmup Iteration   3: 669.027 ns/op
# Warmup Iteration   4: 666.432 ns/op
# Warmup Iteration   5: 667.841 ns/op
Iteration   1: 675.948 ns/op
Iteration   2: 666.348 ns/op
Iteration   3: 674.214 ns/op
Iteration   4: 673.266 ns/op
Iteration   5: 665.993 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  671.154 ±(99.9%) 17.910 ns/op [Average]
  (min, avg, max) = (665.993, 671.154, 675.948), stdev = 4.651
  CI (99.9%): [653.244, 689.064] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 51.53% complete, ETA 00:16:38
# Fork: 1 of 1
# Warmup Iteration   1: 841.332 ns/op
# Warmup Iteration   2: 769.651 ns/op
# Warmup Iteration   3: 754.118 ns/op
# Warmup Iteration   4: 751.108 ns/op
# Warmup Iteration   5: 749.365 ns/op
Iteration   1: 750.511 ns/op
Iteration   2: 749.763 ns/op
Iteration   3: 744.879 ns/op
Iteration   4: 744.118 ns/op
Iteration   5: 747.410 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  747.336 ±(99.9%) 10.953 ns/op [Average]
  (min, avg, max) = (744.118, 747.336, 750.511), stdev = 2.844
  CI (99.9%): [736.384, 758.289] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 52.04% complete, ETA 00:16:27
# Fork: 1 of 1
# Warmup Iteration   1: 1411.936 ns/op
# Warmup Iteration   2: 1271.064 ns/op
# Warmup Iteration   3: 1249.911 ns/op
# Warmup Iteration   4: 1242.526 ns/op
# Warmup Iteration   5: 1236.083 ns/op
Iteration   1: 1240.267 ns/op
Iteration   2: 1236.323 ns/op
Iteration   3: 1237.686 ns/op
Iteration   4: 1236.744 ns/op
Iteration   5: 1240.652 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1238.335 ±(99.9%) 7.726 ns/op [Average]
  (min, avg, max) = (1236.323, 1238.335, 1240.652), stdev = 2.006
  CI (99.9%): [1230.609, 1246.061] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 52.55% complete, ETA 00:16:17
# Fork: 1 of 1
# Warmup Iteration   1: 2219.814 ns/op
# Warmup Iteration   2: 2018.084 ns/op
# Warmup Iteration   3: 2021.889 ns/op
# Warmup Iteration   4: 2027.190 ns/op
# Warmup Iteration   5: 1946.347 ns/op
Iteration   1: 1945.197 ns/op
Iteration   2: 1944.860 ns/op
Iteration   3: 1958.729 ns/op
Iteration   4: 1962.705 ns/op
Iteration   5: 2000.178 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1962.334 ±(99.9%) 87.052 ns/op [Average]
  (min, avg, max) = (1944.860, 1962.334, 2000.178), stdev = 22.607
  CI (99.9%): [1875.282, 2049.386] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 53.06% complete, ETA 00:16:06
# Fork: 1 of 1
# Warmup Iteration   1: 14604.255 ns/op
# Warmup Iteration   2: 13548.020 ns/op
# Warmup Iteration   3: 12780.637 ns/op
# Warmup Iteration   4: 12782.248 ns/op
# Warmup Iteration   5: 12763.334 ns/op
Iteration   1: 13162.892 ns/op
Iteration   2: 13664.472 ns/op
Iteration   3: 12770.404 ns/op
Iteration   4: 12802.735 ns/op
Iteration   5: 12812.837 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  13042.668 ±(99.9%) 1473.358 ns/op [Average]
  (min, avg, max) = (12770.404, 13042.668, 13664.472), stdev = 382.626
  CI (99.9%): [11569.310, 14516.026] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1)

# Run progress: 53.57% complete, ETA 00:15:56
# Fork: 1 of 1
# Warmup Iteration   1: 667.864 ns/op
# Warmup Iteration   2: 589.351 ns/op
# Warmup Iteration   3: 555.720 ns/op
# Warmup Iteration   4: 554.008 ns/op
# Warmup Iteration   5: 552.009 ns/op
Iteration   1: 552.453 ns/op
Iteration   2: 551.848 ns/op
Iteration   3: 636.016 ns/op
Iteration   4: 550.372 ns/op
Iteration   5: 552.522 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  568.642 ±(99.9%) 145.066 ns/op [Average]
  (min, avg, max) = (550.372, 568.642, 636.016), stdev = 37.673
  CI (99.9%): [423.576, 713.708] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10)

# Run progress: 54.08% complete, ETA 00:15:45
# Fork: 1 of 1
# Warmup Iteration   1: 646.419 ns/op
# Warmup Iteration   2: 618.991 ns/op
# Warmup Iteration   3: 583.362 ns/op
# Warmup Iteration   4: 586.785 ns/op
# Warmup Iteration   5: 585.810 ns/op
Iteration   1: 590.960 ns/op
Iteration   2: 594.251 ns/op
Iteration   3: 588.654 ns/op
Iteration   4: 589.605 ns/op
Iteration   5: 586.590 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  590.012 ±(99.9%) 10.990 ns/op [Average]
  (min, avg, max) = (586.590, 590.012, 594.251), stdev = 2.854
  CI (99.9%): [579.022, 601.002] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 50)

# Run progress: 54.59% complete, ETA 00:15:35
# Fork: 1 of 1
# Warmup Iteration   1: 763.027 ns/op
# Warmup Iteration   2: 683.102 ns/op
# Warmup Iteration   3: 665.171 ns/op
# Warmup Iteration   4: 667.019 ns/op
# Warmup Iteration   5: 665.619 ns/op
Iteration   1: 669.972 ns/op
Iteration   2: 666.124 ns/op
Iteration   3: 670.664 ns/op
Iteration   4: 670.703 ns/op
Iteration   5: 666.827 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  668.858 ±(99.9%) 8.503 ns/op [Average]
  (min, avg, max) = (666.124, 668.858, 670.703), stdev = 2.208
  CI (99.9%): [660.355, 677.361] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 100)

# Run progress: 55.10% complete, ETA 00:15:24
# Fork: 1 of 1
# Warmup Iteration   1: 835.497 ns/op
# Warmup Iteration   2: 764.823 ns/op
# Warmup Iteration   3: 751.074 ns/op
# Warmup Iteration   4: 763.945 ns/op
# Warmup Iteration   5: 749.249 ns/op
Iteration   1: 747.923 ns/op
Iteration   2: 747.154 ns/op
Iteration   3: 746.059 ns/op
Iteration   4: 743.653 ns/op
Iteration   5: 742.740 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  745.506 ±(99.9%) 8.599 ns/op [Average]
  (min, avg, max) = (742.740, 745.506, 747.923), stdev = 2.233
  CI (99.9%): [736.907, 754.105] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 500)

# Run progress: 55.61% complete, ETA 00:15:14
# Fork: 1 of 1
# Warmup Iteration   1: 1369.724 ns/op
# Warmup Iteration   2: 1300.868 ns/op
# Warmup Iteration   3: 1249.190 ns/op
# Warmup Iteration   4: 1229.849 ns/op
# Warmup Iteration   5: 1229.423 ns/op
Iteration   1: 1224.759 ns/op
Iteration   2: 1228.435 ns/op
Iteration   3: 1229.819 ns/op
Iteration   4: 1230.716 ns/op
Iteration   5: 1227.721 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1228.290 ±(99.9%) 8.829 ns/op [Average]
  (min, avg, max) = (1224.759, 1228.290, 1230.716), stdev = 2.293
  CI (99.9%): [1219.461, 1237.119] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1000)

# Run progress: 56.12% complete, ETA 00:15:03
# Fork: 1 of 1
# Warmup Iteration   1: 2202.931 ns/op
# Warmup Iteration   2: 2011.564 ns/op
# Warmup Iteration   3: 2017.149 ns/op
# Warmup Iteration   4: 1947.773 ns/op
# Warmup Iteration   5: 1942.539 ns/op
Iteration   1: 1942.911 ns/op
Iteration   2: 1942.606 ns/op
Iteration   3: 1953.748 ns/op
Iteration   4: 1963.386 ns/op
Iteration   5: 1958.458 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  1952.222 ±(99.9%) 35.762 ns/op [Average]
  (min, avg, max) = (1942.606, 1952.222, 1963.386), stdev = 9.287
  CI (99.9%): [1916.460, 1987.984] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10000)

# Run progress: 56.63% complete, ETA 00:14:53
# Fork: 1 of 1
# Warmup Iteration   1: 14869.304 ns/op
# Warmup Iteration   2: 14708.971 ns/op
# Warmup Iteration   3: 12751.039 ns/op
# Warmup Iteration   4: 12711.749 ns/op
# Warmup Iteration   5: 12743.881 ns/op
Iteration   1: 12812.719 ns/op
Iteration   2: 12791.058 ns/op
Iteration   3: 12764.102 ns/op
Iteration   4: 12703.446 ns/op
Iteration   5: 12800.016 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache":
  12774.268 ±(99.9%) 167.209 ns/op [Average]
  (min, avg, max) = (12703.446, 12774.268, 12812.719), stdev = 43.424
  CI (99.9%): [12607.059, 12941.477] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 57.14% complete, ETA 00:14:42
# Fork: 1 of 1
# Warmup Iteration   1: 484.593 ns/op
# Warmup Iteration   2: 457.773 ns/op
# Warmup Iteration   3: 439.089 ns/op
# Warmup Iteration   4: 437.294 ns/op
# Warmup Iteration   5: 442.418 ns/op
Iteration   1: 440.143 ns/op
Iteration   2: 437.383 ns/op
Iteration   3: 440.952 ns/op
Iteration   4: 441.259 ns/op
Iteration   5: 440.923 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  440.132 ±(99.9%) 6.126 ns/op [Average]
  (min, avg, max) = (437.383, 440.132, 441.259), stdev = 1.591
  CI (99.9%): [434.006, 446.258] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 57.65% complete, ETA 00:14:32
# Fork: 1 of 1
# Warmup Iteration   1: 524.764 ns/op
# Warmup Iteration   2: 492.095 ns/op
# Warmup Iteration   3: 469.203 ns/op
# Warmup Iteration   4: 468.971 ns/op
# Warmup Iteration   5: 470.182 ns/op
Iteration   1: 471.773 ns/op
Iteration   2: 471.351 ns/op
Iteration   3: 471.002 ns/op
Iteration   4: 468.574 ns/op
Iteration   5: 471.043 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  470.749 ±(99.9%) 4.829 ns/op [Average]
  (min, avg, max) = (468.574, 470.749, 471.773), stdev = 1.254
  CI (99.9%): [465.920, 475.577] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 58.16% complete, ETA 00:14:21
# Fork: 1 of 1
# Warmup Iteration   1: 619.315 ns/op
# Warmup Iteration   2: 561.591 ns/op
# Warmup Iteration   3: 550.900 ns/op
# Warmup Iteration   4: 551.368 ns/op
# Warmup Iteration   5: 552.576 ns/op
Iteration   1: 552.624 ns/op
Iteration   2: 549.764 ns/op
Iteration   3: 552.998 ns/op
Iteration   4: 552.896 ns/op
Iteration   5: 549.581 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  551.573 ±(99.9%) 6.705 ns/op [Average]
  (min, avg, max) = (549.581, 551.573, 552.998), stdev = 1.741
  CI (99.9%): [544.868, 558.278] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 58.67% complete, ETA 00:14:11
# Fork: 1 of 1
# Warmup Iteration   1: 704.022 ns/op
# Warmup Iteration   2: 638.724 ns/op
# Warmup Iteration   3: 630.477 ns/op
# Warmup Iteration   4: 626.706 ns/op
# Warmup Iteration   5: 630.662 ns/op
Iteration   1: 626.617 ns/op
Iteration   2: 624.734 ns/op
Iteration   3: 621.211 ns/op
Iteration   4: 625.208 ns/op
Iteration   5: 623.338 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  624.222 ±(99.9%) 7.895 ns/op [Average]
  (min, avg, max) = (621.211, 624.222, 626.617), stdev = 2.050
  CI (99.9%): [616.327, 632.117] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 59.18% complete, ETA 00:14:00
# Fork: 1 of 1
# Warmup Iteration   1: 1287.773 ns/op
# Warmup Iteration   2: 1155.146 ns/op
# Warmup Iteration   3: 1126.445 ns/op
# Warmup Iteration   4: 1104.940 ns/op
# Warmup Iteration   5: 1105.529 ns/op
Iteration   1: 1130.172 ns/op
Iteration   2: 1102.329 ns/op
Iteration   3: 1105.990 ns/op
Iteration   4: 1106.331 ns/op
Iteration   5: 1106.937 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1110.352 ±(99.9%) 43.226 ns/op [Average]
  (min, avg, max) = (1102.329, 1110.352, 1130.172), stdev = 11.226
  CI (99.9%): [1067.126, 1153.578] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 59.69% complete, ETA 00:13:50
# Fork: 1 of 1
# Warmup Iteration   1: 2019.356 ns/op
# Warmup Iteration   2: 1943.186 ns/op
# Warmup Iteration   3: 1822.399 ns/op
# Warmup Iteration   4: 1818.200 ns/op
# Warmup Iteration   5: 1791.170 ns/op
Iteration   1: 1803.019 ns/op
Iteration   2: 1808.086 ns/op
Iteration   3: 1808.210 ns/op
Iteration   4: 1811.961 ns/op
Iteration   5: 1807.803 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1807.816 ±(99.9%) 12.241 ns/op [Average]
  (min, avg, max) = (1803.019, 1807.816, 1811.961), stdev = 3.179
  CI (99.9%): [1795.575, 1820.056] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 60.20% complete, ETA 00:13:39
# Fork: 1 of 1
# Warmup Iteration   1: 14426.164 ns/op
# Warmup Iteration   2: 13375.684 ns/op
# Warmup Iteration   3: 12559.529 ns/op
# Warmup Iteration   4: 12491.890 ns/op
# Warmup Iteration   5: 12476.680 ns/op
Iteration   1: 12509.949 ns/op
Iteration   2: 12453.887 ns/op
Iteration   3: 12565.207 ns/op
Iteration   4: 12498.057 ns/op
Iteration   5: 12404.951 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  12486.410 ±(99.9%) 232.575 ns/op [Average]
  (min, avg, max) = (12404.951, 12486.410, 12565.207), stdev = 60.399
  CI (99.9%): [12253.835, 12718.985] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 1)

# Run progress: 60.71% complete, ETA 00:13:29
# Fork: 1 of 1
# Warmup Iteration   1: 486.336 ns/op
# Warmup Iteration   2: 460.530 ns/op
# Warmup Iteration   3: 440.570 ns/op
# Warmup Iteration   4: 438.752 ns/op
# Warmup Iteration   5: 440.419 ns/op
Iteration   1: 462.933 ns/op
Iteration   2: 438.215 ns/op
Iteration   3: 439.732 ns/op
Iteration   4: 440.348 ns/op
Iteration   5: 436.052 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  443.456 ±(99.9%) 42.409 ns/op [Average]
  (min, avg, max) = (436.052, 443.456, 462.933), stdev = 11.013
  CI (99.9%): [401.048, 485.865] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 10)

# Run progress: 61.22% complete, ETA 00:13:18
# Fork: 1 of 1
# Warmup Iteration   1: 527.683 ns/op
# Warmup Iteration   2: 496.261 ns/op
# Warmup Iteration   3: 468.708 ns/op
# Warmup Iteration   4: 468.359 ns/op
# Warmup Iteration   5: 469.293 ns/op
Iteration   1: 469.149 ns/op
Iteration   2: 468.167 ns/op
Iteration   3: 467.603 ns/op
Iteration   4: 473.484 ns/op
Iteration   5: 472.675 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  470.216 ±(99.9%) 10.349 ns/op [Average]
  (min, avg, max) = (467.603, 470.216, 473.484), stdev = 2.688
  CI (99.9%): [459.866, 480.565] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 50)

# Run progress: 61.73% complete, ETA 00:13:08
# Fork: 1 of 1
# Warmup Iteration   1: 628.251 ns/op
# Warmup Iteration   2: 568.079 ns/op
# Warmup Iteration   3: 554.020 ns/op
# Warmup Iteration   4: 555.634 ns/op
# Warmup Iteration   5: 562.444 ns/op
Iteration   1: 555.818 ns/op
Iteration   2: 616.516 ns/op
Iteration   3: 557.864 ns/op
Iteration   4: 553.188 ns/op
Iteration   5: 553.660 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  567.409 ±(99.9%) 105.948 ns/op [Average]
  (min, avg, max) = (553.188, 567.409, 616.516), stdev = 27.514
  CI (99.9%): [461.461, 673.358] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 100)

# Run progress: 62.24% complete, ETA 00:12:57
# Fork: 1 of 1
# Warmup Iteration   1: 718.645 ns/op
# Warmup Iteration   2: 644.108 ns/op
# Warmup Iteration   3: 633.749 ns/op
# Warmup Iteration   4: 636.219 ns/op
# Warmup Iteration   5: 634.243 ns/op
Iteration   1: 635.268 ns/op
Iteration   2: 646.183 ns/op
Iteration   3: 626.471 ns/op
Iteration   4: 628.662 ns/op
Iteration   5: 626.909 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  632.699 ±(99.9%) 32.044 ns/op [Average]
  (min, avg, max) = (626.471, 632.699, 646.183), stdev = 8.322
  CI (99.9%): [600.654, 664.743] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 500)

# Run progress: 62.76% complete, ETA 00:12:46
# Fork: 1 of 1
# Warmup Iteration   1: 1254.149 ns/op
# Warmup Iteration   2: 1162.392 ns/op
# Warmup Iteration   3: 1121.707 ns/op
# Warmup Iteration   4: 1108.578 ns/op
# Warmup Iteration   5: 1105.879 ns/op
Iteration   1: 1106.500 ns/op
Iteration   2: 1105.898 ns/op
Iteration   3: 1107.420 ns/op
Iteration   4: 1109.450 ns/op
Iteration   5: 1111.189 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1108.091 ±(99.9%) 8.444 ns/op [Average]
  (min, avg, max) = (1105.898, 1108.091, 1111.189), stdev = 2.193
  CI (99.9%): [1099.647, 1116.536] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 1000)

# Run progress: 63.27% complete, ETA 00:12:36
# Fork: 1 of 1
# Warmup Iteration   1: 2037.013 ns/op
# Warmup Iteration   2: 1893.711 ns/op
# Warmup Iteration   3: 1827.688 ns/op
# Warmup Iteration   4: 1802.775 ns/op
# Warmup Iteration   5: 1799.317 ns/op
Iteration   1: 1800.073 ns/op
Iteration   2: 1799.086 ns/op
Iteration   3: 1801.944 ns/op
Iteration   4: 1795.854 ns/op
Iteration   5: 1800.786 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  1799.548 ±(99.9%) 8.908 ns/op [Average]
  (min, avg, max) = (1795.854, 1799.548, 1801.944), stdev = 2.313
  CI (99.9%): [1790.640, 1808.457] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache
# Parameters: (dataset = random, length = 10000)

# Run progress: 63.78% complete, ETA 00:12:25
# Fork: 1 of 1
# Warmup Iteration   1: 14605.516 ns/op
# Warmup Iteration   2: 13332.942 ns/op
# Warmup Iteration   3: 12526.570 ns/op
# Warmup Iteration   4: 12738.826 ns/op
# Warmup Iteration   5: 12486.269 ns/op
Iteration   1: 12573.399 ns/op
Iteration   2: 12542.998 ns/op
Iteration   3: 12557.190 ns/op
Iteration   4: 12524.340 ns/op
Iteration   5: 12520.087 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache":
  12543.603 ±(99.9%) 86.034 ns/op [Average]
  (min, avg, max) = (12520.087, 12543.603, 12573.399), stdev = 22.343
  CI (99.9%): [12457.569, 12629.637] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 1)

# Run progress: 64.29% complete, ETA 00:12:15
# Fork: 1 of 1
# Warmup Iteration   1: 80.386 ns/op
# Warmup Iteration   2: 77.358 ns/op
# Warmup Iteration   3: 75.701 ns/op
# Warmup Iteration   4: 73.977 ns/op
# Warmup Iteration   5: 72.742 ns/op
Iteration   1: 72.716 ns/op
Iteration   2: 72.981 ns/op
Iteration   3: 75.686 ns/op
Iteration   4: 73.022 ns/op
Iteration   5: 72.789 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  73.439 ±(99.9%) 4.862 ns/op [Average]
  (min, avg, max) = (72.716, 73.439, 75.686), stdev = 1.263
  CI (99.9%): [68.577, 78.301] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 10)

# Run progress: 64.80% complete, ETA 00:12:04
# Fork: 1 of 1
# Warmup Iteration   1: 105.951 ns/op
# Warmup Iteration   2: 99.513 ns/op
# Warmup Iteration   3: 94.506 ns/op
# Warmup Iteration   4: 94.132 ns/op
# Warmup Iteration   5: 92.644 ns/op
Iteration   1: 92.759 ns/op
Iteration   2: 93.390 ns/op
Iteration   3: 92.836 ns/op
Iteration   4: 92.676 ns/op
Iteration   5: 93.175 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  92.967 ±(99.9%) 1.167 ns/op [Average]
  (min, avg, max) = (92.676, 92.967, 93.390), stdev = 0.303
  CI (99.9%): [91.801, 94.134] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 50)

# Run progress: 65.31% complete, ETA 00:11:54
# Fork: 1 of 1
# Warmup Iteration   1: 162.380 ns/op
# Warmup Iteration   2: 154.700 ns/op
# Warmup Iteration   3: 146.488 ns/op
# Warmup Iteration   4: 141.540 ns/op
# Warmup Iteration   5: 141.016 ns/op
Iteration   1: 144.157 ns/op
Iteration   2: 149.506 ns/op
Iteration   3: 143.119 ns/op
Iteration   4: 142.299 ns/op
Iteration   5: 143.956 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  144.607 ±(99.9%) 10.920 ns/op [Average]
  (min, avg, max) = (142.299, 144.607, 149.506), stdev = 2.836
  CI (99.9%): [133.687, 155.527] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 100)

# Run progress: 65.82% complete, ETA 00:11:43
# Fork: 1 of 1
# Warmup Iteration   1: 239.650 ns/op
# Warmup Iteration   2: 220.045 ns/op
# Warmup Iteration   3: 210.944 ns/op
# Warmup Iteration   4: 208.728 ns/op
# Warmup Iteration   5: 208.130 ns/op
Iteration   1: 209.727 ns/op
Iteration   2: 209.580 ns/op
Iteration   3: 208.513 ns/op
Iteration   4: 209.860 ns/op
Iteration   5: 218.649 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  211.266 ±(99.9%) 16.024 ns/op [Average]
  (min, avg, max) = (208.513, 211.266, 218.649), stdev = 4.162
  CI (99.9%): [195.241, 227.290] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 500)

# Run progress: 66.33% complete, ETA 00:11:33
# Fork: 1 of 1
# Warmup Iteration   1: 750.702 ns/op
# Warmup Iteration   2: 701.657 ns/op
# Warmup Iteration   3: 658.365 ns/op
# Warmup Iteration   4: 661.550 ns/op
# Warmup Iteration   5: 648.584 ns/op
Iteration   1: 651.336 ns/op
Iteration   2: 649.462 ns/op
Iteration   3: 648.326 ns/op
Iteration   4: 648.690 ns/op
Iteration   5: 651.035 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  649.770 ±(99.9%) 5.236 ns/op [Average]
  (min, avg, max) = (648.326, 649.770, 651.336), stdev = 1.360
  CI (99.9%): [644.534, 655.006] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 66.84% complete, ETA 00:11:23
# Fork: 1 of 1
# Warmup Iteration   1: 1450.737 ns/op
# Warmup Iteration   2: 1335.688 ns/op
# Warmup Iteration   3: 1242.649 ns/op
# Warmup Iteration   4: 1242.617 ns/op
# Warmup Iteration   5: 1240.588 ns/op
Iteration   1: 1236.196 ns/op
Iteration   2: 1243.226 ns/op
Iteration   3: 1242.629 ns/op
Iteration   4: 1265.998 ns/op
Iteration   5: 1247.721 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  1247.154 ±(99.9%) 43.540 ns/op [Average]
  (min, avg, max) = (1236.196, 1247.154, 1265.998), stdev = 11.307
  CI (99.9%): [1203.614, 1290.694] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 67.35% complete, ETA 00:11:12
# Fork: 1 of 1
# Warmup Iteration   1: 13754.908 ns/op
# Warmup Iteration   2: 12560.372 ns/op
# Warmup Iteration   3: 11773.191 ns/op
# Warmup Iteration   4: 11808.106 ns/op
# Warmup Iteration   5: 11883.142 ns/op
Iteration   1: 11815.562 ns/op
Iteration   2: 11788.865 ns/op
Iteration   3: 11837.936 ns/op
Iteration   4: 11823.757 ns/op
Iteration   5: 11815.434 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  11816.311 ±(99.9%) 68.819 ns/op [Average]
  (min, avg, max) = (11788.865, 11816.311, 11837.936), stdev = 17.872
  CI (99.9%): [11747.491, 11885.130] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 1)

# Run progress: 67.86% complete, ETA 00:11:02
# Fork: 1 of 1
# Warmup Iteration   1: 86.869 ns/op
# Warmup Iteration   2: 73.214 ns/op
# Warmup Iteration   3: 71.965 ns/op
# Warmup Iteration   4: 72.295 ns/op
# Warmup Iteration   5: 70.168 ns/op
Iteration   1: 70.639 ns/op
Iteration   2: 71.174 ns/op
Iteration   3: 70.177 ns/op
Iteration   4: 70.321 ns/op
Iteration   5: 70.389 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  70.540 ±(99.9%) 1.508 ns/op [Average]
  (min, avg, max) = (70.177, 70.540, 71.174), stdev = 0.392
  CI (99.9%): [69.032, 72.048] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 10)

# Run progress: 68.37% complete, ETA 00:10:51
# Fork: 1 of 1
# Warmup Iteration   1: 106.042 ns/op
# Warmup Iteration   2: 97.975 ns/op
# Warmup Iteration   3: 93.946 ns/op
# Warmup Iteration   4: 98.971 ns/op
# Warmup Iteration   5: 92.798 ns/op
Iteration   1: 92.723 ns/op
Iteration   2: 92.705 ns/op
Iteration   3: 92.594 ns/op
Iteration   4: 92.667 ns/op
Iteration   5: 92.552 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  92.648 ±(99.9%) 0.281 ns/op [Average]
  (min, avg, max) = (92.552, 92.648, 92.723), stdev = 0.073
  CI (99.9%): [92.367, 92.930] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 50)

# Run progress: 68.88% complete, ETA 00:10:40
# Fork: 1 of 1
# Warmup Iteration   1: 175.978 ns/op
# Warmup Iteration   2: 158.403 ns/op
# Warmup Iteration   3: 152.258 ns/op
# Warmup Iteration   4: 149.751 ns/op
# Warmup Iteration   5: 154.724 ns/op
Iteration   1: 149.036 ns/op
Iteration   2: 149.097 ns/op
Iteration   3: 149.528 ns/op
Iteration   4: 149.483 ns/op
Iteration   5: 149.348 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  149.299 ±(99.9%) 0.858 ns/op [Average]
  (min, avg, max) = (149.036, 149.299, 149.528), stdev = 0.223
  CI (99.9%): [148.441, 150.156] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 100)

# Run progress: 69.39% complete, ETA 00:10:30
# Fork: 1 of 1
# Warmup Iteration   1: 244.499 ns/op
# Warmup Iteration   2: 216.182 ns/op
# Warmup Iteration   3: 214.951 ns/op
# Warmup Iteration   4: 207.716 ns/op
# Warmup Iteration   5: 207.745 ns/op
Iteration   1: 207.605 ns/op
Iteration   2: 207.387 ns/op
Iteration   3: 207.584 ns/op
Iteration   4: 215.011 ns/op
Iteration   5: 215.548 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  210.627 ±(99.9%) 16.374 ns/op [Average]
  (min, avg, max) = (207.387, 210.627, 215.548), stdev = 4.252
  CI (99.9%): [194.253, 227.001] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 500)

# Run progress: 69.90% complete, ETA 00:10:19
# Fork: 1 of 1
# Warmup Iteration   1: 762.803 ns/op
# Warmup Iteration   2: 706.185 ns/op
# Warmup Iteration   3: 652.971 ns/op
# Warmup Iteration   4: 655.992 ns/op
# Warmup Iteration   5: 649.402 ns/op
Iteration   1: 647.787 ns/op
Iteration   2: 649.482 ns/op
Iteration   3: 649.631 ns/op
Iteration   4: 651.463 ns/op
Iteration   5: 648.627 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  649.398 ±(99.9%) 5.279 ns/op [Average]
  (min, avg, max) = (647.787, 649.398, 651.463), stdev = 1.371
  CI (99.9%): [644.119, 654.677] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 1000)

# Run progress: 70.41% complete, ETA 00:10:09
# Fork: 1 of 1
# Warmup Iteration   1: 1442.627 ns/op
# Warmup Iteration   2: 1305.204 ns/op
# Warmup Iteration   3: 1232.538 ns/op
# Warmup Iteration   4: 1238.869 ns/op
# Warmup Iteration   5: 1230.360 ns/op
Iteration   1: 1232.623 ns/op
Iteration   2: 1233.887 ns/op
Iteration   3: 1227.937 ns/op
Iteration   4: 1224.917 ns/op
Iteration   5: 1226.956 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  1229.264 ±(99.9%) 14.743 ns/op [Average]
  (min, avg, max) = (1224.917, 1229.264, 1233.887), stdev = 3.829
  CI (99.9%): [1214.521, 1244.007] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput
# Parameters: (dataset = random, length = 10000)

# Run progress: 70.92% complete, ETA 00:09:58
# Fork: 1 of 1
# Warmup Iteration   1: 14606.181 ns/op
# Warmup Iteration   2: 12750.802 ns/op
# Warmup Iteration   3: 11848.881 ns/op
# Warmup Iteration   4: 11725.609 ns/op
# Warmup Iteration   5: 11985.430 ns/op
Iteration   1: 11795.331 ns/op
Iteration   2: 11781.711 ns/op
Iteration   3: 11826.610 ns/op
Iteration   4: 11770.012 ns/op
Iteration   5: 11799.155 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput":
  11794.564 ±(99.9%) 82.061 ns/op [Average]
  (min, avg, max) = (11770.012, 11794.564, 11826.610), stdev = 21.311
  CI (99.9%): [11712.503, 11876.625] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 1)

# Run progress: 71.43% complete, ETA 00:09:48
# Fork: 1 of 1
# Warmup Iteration   1: 1656.694 ns/op
# Warmup Iteration   2: 1631.906 ns/op
# Warmup Iteration   3: 1612.737 ns/op
# Warmup Iteration   4: 1610.676 ns/op
# Warmup Iteration   5: 1612.007 ns/op
Iteration   1: 1603.754 ns/op
Iteration   2: 1577.522 ns/op
Iteration   3: 1578.350 ns/op
Iteration   4: 1572.677 ns/op
Iteration   5: 1660.152 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1598.491 ±(99.9%) 140.714 ns/op [Average]
  (min, avg, max) = (1572.677, 1598.491, 1660.152), stdev = 36.543
  CI (99.9%): [1457.777, 1739.204] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 10)

# Run progress: 71.94% complete, ETA 00:09:37
# Fork: 1 of 1
# Warmup Iteration   1: 1513.596 ns/op
# Warmup Iteration   2: 1518.130 ns/op
# Warmup Iteration   3: 1491.876 ns/op
# Warmup Iteration   4: 1484.092 ns/op
# Warmup Iteration   5: 1445.456 ns/op
Iteration   1: 1446.017 ns/op
Iteration   2: 1442.924 ns/op
Iteration   3: 1452.164 ns/op
Iteration   4: 1447.010 ns/op
Iteration   5: 1452.789 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1448.181 ±(99.9%) 16.199 ns/op [Average]
  (min, avg, max) = (1442.924, 1448.181, 1452.789), stdev = 4.207
  CI (99.9%): [1431.982, 1464.380] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 50)

# Run progress: 72.45% complete, ETA 00:09:27
# Fork: 1 of 1
# Warmup Iteration   1: 1657.922 ns/op
# Warmup Iteration   2: 1618.915 ns/op
# Warmup Iteration   3: 1544.311 ns/op
# Warmup Iteration   4: 1531.062 ns/op
# Warmup Iteration   5: 1542.620 ns/op
Iteration   1: 1539.344 ns/op
Iteration   2: 1543.562 ns/op
Iteration   3: 1534.023 ns/op
Iteration   4: 1614.994 ns/op
Iteration   5: 1568.141 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1560.013 ±(99.9%) 128.612 ns/op [Average]
  (min, avg, max) = (1534.023, 1560.013, 1614.994), stdev = 33.400
  CI (99.9%): [1431.401, 1688.625] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 100)

# Run progress: 72.96% complete, ETA 00:09:16
# Fork: 1 of 1
# Warmup Iteration   1: 1868.905 ns/op
# Warmup Iteration   2: 1693.165 ns/op
# Warmup Iteration   3: 1647.079 ns/op
# Warmup Iteration   4: 1642.838 ns/op
# Warmup Iteration   5: 1638.837 ns/op
Iteration   1: 1646.470 ns/op
Iteration   2: 1641.317 ns/op
Iteration   3: 1633.314 ns/op
Iteration   4: 1630.389 ns/op
Iteration   5: 1649.136 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1640.125 ±(99.9%) 31.286 ns/op [Average]
  (min, avg, max) = (1630.389, 1640.125, 1649.136), stdev = 8.125
  CI (99.9%): [1608.840, 1671.411] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 500)

# Run progress: 73.47% complete, ETA 00:09:06
# Fork: 1 of 1
# Warmup Iteration   1: 2316.875 ns/op
# Warmup Iteration   2: 2285.256 ns/op
# Warmup Iteration   3: 2165.132 ns/op
# Warmup Iteration   4: 2158.118 ns/op
# Warmup Iteration   5: 2126.944 ns/op
Iteration   1: 2121.976 ns/op
Iteration   2: 2125.380 ns/op
Iteration   3: 2126.104 ns/op
Iteration   4: 2175.819 ns/op
Iteration   5: 2171.717 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2144.199 ±(99.9%) 104.261 ns/op [Average]
  (min, avg, max) = (2121.976, 2144.199, 2175.819), stdev = 27.076
  CI (99.9%): [2039.938, 2248.461] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 73.98% complete, ETA 00:08:55
# Fork: 1 of 1
# Warmup Iteration   1: 2976.175 ns/op
# Warmup Iteration   2: 2880.337 ns/op
# Warmup Iteration   3: 2739.067 ns/op
# Warmup Iteration   4: 2682.302 ns/op
# Warmup Iteration   5: 2685.240 ns/op
Iteration   1: 2687.255 ns/op
Iteration   2: 2699.473 ns/op
Iteration   3: 2685.881 ns/op
Iteration   4: 2685.527 ns/op
Iteration   5: 2699.107 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2691.449 ±(99.9%) 27.680 ns/op [Average]
  (min, avg, max) = (2685.527, 2691.449, 2699.473), stdev = 7.188
  CI (99.9%): [2663.769, 2719.128] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 74.49% complete, ETA 00:08:45
# Fork: 1 of 1
# Warmup Iteration   1: 15445.190 ns/op
# Warmup Iteration   2: 14337.858 ns/op
# Warmup Iteration   3: 13790.734 ns/op
# Warmup Iteration   4: 13471.493 ns/op
# Warmup Iteration   5: 13352.936 ns/op
Iteration   1: 13404.901 ns/op
Iteration   2: 13475.654 ns/op
Iteration   3: 13521.782 ns/op
Iteration   4: 13429.139 ns/op
Iteration   5: 13373.516 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  13440.998 ±(99.9%) 225.554 ns/op [Average]
  (min, avg, max) = (13373.516, 13440.998, 13521.782), stdev = 58.576
  CI (99.9%): [13215.444, 13666.553] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 1)

# Run progress: 75.00% complete, ETA 00:08:34
# Fork: 1 of 1
# Warmup Iteration   1: 1486.771 ns/op
# Warmup Iteration   2: 1482.313 ns/op
# Warmup Iteration   3: 1462.658 ns/op
# Warmup Iteration   4: 1454.402 ns/op
# Warmup Iteration   5: 1455.218 ns/op
Iteration   1: 1428.830 ns/op
Iteration   2: 1421.444 ns/op
Iteration   3: 1421.119 ns/op
Iteration   4: 1422.759 ns/op
Iteration   5: 1433.865 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1425.604 ±(99.9%) 21.453 ns/op [Average]
  (min, avg, max) = (1421.119, 1425.604, 1433.865), stdev = 5.571
  CI (99.9%): [1404.150, 1447.057] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 10)

# Run progress: 75.51% complete, ETA 00:08:24
# Fork: 1 of 1
# Warmup Iteration   1: 1518.281 ns/op
# Warmup Iteration   2: 1536.207 ns/op
# Warmup Iteration   3: 1500.246 ns/op
# Warmup Iteration   4: 1506.844 ns/op
# Warmup Iteration   5: 1462.418 ns/op
Iteration   1: 1465.128 ns/op
Iteration   2: 1468.593 ns/op
Iteration   3: 1562.817 ns/op
Iteration   4: 1457.741 ns/op
Iteration   5: 1475.193 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1485.895 ±(99.9%) 167.347 ns/op [Average]
  (min, avg, max) = (1457.741, 1485.895, 1562.817), stdev = 43.459
  CI (99.9%): [1318.548, 1653.241] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 50)

# Run progress: 76.02% complete, ETA 00:08:13
# Fork: 1 of 1
# Warmup Iteration   1: 1619.630 ns/op
# Warmup Iteration   2: 1593.324 ns/op
# Warmup Iteration   3: 1505.391 ns/op
# Warmup Iteration   4: 1493.592 ns/op
# Warmup Iteration   5: 1509.358 ns/op
Iteration   1: 1514.932 ns/op
Iteration   2: 1501.263 ns/op
Iteration   3: 1494.645 ns/op
Iteration   4: 1491.057 ns/op
Iteration   5: 1529.532 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1506.286 ±(99.9%) 61.121 ns/op [Average]
  (min, avg, max) = (1491.057, 1506.286, 1529.532), stdev = 15.873
  CI (99.9%): [1445.165, 1567.406] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 100)

# Run progress: 76.53% complete, ETA 00:08:03
# Fork: 1 of 1
# Warmup Iteration   1: 1842.764 ns/op
# Warmup Iteration   2: 1714.669 ns/op
# Warmup Iteration   3: 1645.608 ns/op
# Warmup Iteration   4: 1646.345 ns/op
# Warmup Iteration   5: 1646.301 ns/op
Iteration   1: 1658.739 ns/op
Iteration   2: 1700.133 ns/op
Iteration   3: 1651.748 ns/op
Iteration   4: 1639.230 ns/op
Iteration   5: 1655.693 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  1661.108 ±(99.9%) 88.735 ns/op [Average]
  (min, avg, max) = (1639.230, 1661.108, 1700.133), stdev = 23.044
  CI (99.9%): [1572.374, 1749.843] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 500)

# Run progress: 77.04% complete, ETA 00:07:52
# Fork: 1 of 1
# Warmup Iteration   1: 2282.710 ns/op
# Warmup Iteration   2: 2204.031 ns/op
# Warmup Iteration   3: 2155.955 ns/op
# Warmup Iteration   4: 2145.541 ns/op
# Warmup Iteration   5: 2125.721 ns/op
Iteration   1: 2132.968 ns/op
Iteration   2: 2128.507 ns/op
Iteration   3: 2125.954 ns/op
Iteration   4: 2182.142 ns/op
Iteration   5: 2178.677 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2149.650 ±(99.9%) 108.659 ns/op [Average]
  (min, avg, max) = (2125.954, 2149.650, 2182.142), stdev = 28.218
  CI (99.9%): [2040.990, 2258.309] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 1000)

# Run progress: 77.55% complete, ETA 00:07:42
# Fork: 1 of 1
# Warmup Iteration   1: 2920.426 ns/op
# Warmup Iteration   2: 2862.538 ns/op
# Warmup Iteration   3: 2768.905 ns/op
# Warmup Iteration   4: 2712.822 ns/op
# Warmup Iteration   5: 2710.414 ns/op
Iteration   1: 2710.526 ns/op
Iteration   2: 2711.564 ns/op
Iteration   3: 2706.262 ns/op
Iteration   4: 2692.396 ns/op
Iteration   5: 2703.660 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  2704.882 ±(99.9%) 29.566 ns/op [Average]
  (min, avg, max) = (2692.396, 2704.882, 2711.564), stdev = 7.678
  CI (99.9%): [2675.316, 2734.447] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig
# Parameters: (dataset = random, length = 10000)

# Run progress: 78.06% complete, ETA 00:07:31
# Fork: 1 of 1
# Warmup Iteration   1: 15961.477 ns/op
# Warmup Iteration   2: 14392.680 ns/op
# Warmup Iteration   3: 13373.022 ns/op
# Warmup Iteration   4: 13375.978 ns/op
# Warmup Iteration   5: 13419.687 ns/op
Iteration   1: 14056.290 ns/op
Iteration   2: 13365.666 ns/op
Iteration   3: 13326.706 ns/op
Iteration   4: 13314.717 ns/op
Iteration   5: 13305.625 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfig":
  13473.801 ±(99.9%) 1256.948 ns/op [Average]
  (min, avg, max) = (13305.625, 13473.801, 14056.290), stdev = 326.425
  CI (99.9%): [12216.852, 14730.749] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 78.57% complete, ETA 00:07:21
# Fork: 1 of 1
# Warmup Iteration   1: 456.579 ns/op
# Warmup Iteration   2: 443.876 ns/op
# Warmup Iteration   3: 427.396 ns/op
# Warmup Iteration   4: 424.749 ns/op
# Warmup Iteration   5: 426.555 ns/op
Iteration   1: 427.672 ns/op
Iteration   2: 426.046 ns/op
Iteration   3: 423.593 ns/op
Iteration   4: 426.904 ns/op
Iteration   5: 424.830 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  425.809 ±(99.9%) 6.267 ns/op [Average]
  (min, avg, max) = (423.593, 425.809, 427.672), stdev = 1.628
  CI (99.9%): [419.542, 432.076] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 79.08% complete, ETA 00:07:10
# Fork: 1 of 1
# Warmup Iteration   1: 487.065 ns/op
# Warmup Iteration   2: 476.733 ns/op
# Warmup Iteration   3: 459.187 ns/op
# Warmup Iteration   4: 452.516 ns/op
# Warmup Iteration   5: 449.185 ns/op
Iteration   1: 449.870 ns/op
Iteration   2: 448.683 ns/op
Iteration   3: 448.540 ns/op
Iteration   4: 450.176 ns/op
Iteration   5: 449.760 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  449.406 ±(99.9%) 2.859 ns/op [Average]
  (min, avg, max) = (448.540, 449.406, 450.176), stdev = 0.743
  CI (99.9%): [446.546, 452.265] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 79.59% complete, ETA 00:07:00
# Fork: 1 of 1
# Warmup Iteration   1: 559.228 ns/op
# Warmup Iteration   2: 515.246 ns/op
# Warmup Iteration   3: 507.060 ns/op
# Warmup Iteration   4: 506.615 ns/op
# Warmup Iteration   5: 508.914 ns/op
Iteration   1: 507.829 ns/op
Iteration   2: 509.967 ns/op
Iteration   3: 503.615 ns/op
Iteration   4: 501.421 ns/op
Iteration   5: 500.898 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  504.746 ±(99.9%) 15.391 ns/op [Average]
  (min, avg, max) = (500.898, 504.746, 509.967), stdev = 3.997
  CI (99.9%): [489.355, 520.137] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 80.10% complete, ETA 00:06:49
# Fork: 1 of 1
# Warmup Iteration   1: 616.717 ns/op
# Warmup Iteration   2: 580.519 ns/op
# Warmup Iteration   3: 572.101 ns/op
# Warmup Iteration   4: 565.873 ns/op
# Warmup Iteration   5: 568.814 ns/op
Iteration   1: 559.697 ns/op
Iteration   2: 566.755 ns/op
Iteration   3: 565.726 ns/op
Iteration   4: 552.917 ns/op
Iteration   5: 553.066 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  559.632 ±(99.9%) 25.548 ns/op [Average]
  (min, avg, max) = (552.917, 559.632, 566.755), stdev = 6.635
  CI (99.9%): [534.084, 585.181] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 80.61% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: 1180.622 ns/op
# Warmup Iteration   2: 1045.216 ns/op
# Warmup Iteration   3: 1001.815 ns/op
# Warmup Iteration   4: 1045.694 ns/op
# Warmup Iteration   5: 992.115 ns/op
Iteration   1: 996.808 ns/op
Iteration   2: 991.956 ns/op
Iteration   3: 997.637 ns/op
Iteration   4: 997.091 ns/op
Iteration   5: 986.190 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  993.937 ±(99.9%) 18.846 ns/op [Average]
  (min, avg, max) = (986.190, 993.937, 997.637), stdev = 4.894
  CI (99.9%): [975.090, 1012.783] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 81.12% complete, ETA 00:06:28
# Fork: 1 of 1
# Warmup Iteration   1: 1768.482 ns/op
# Warmup Iteration   2: 1693.134 ns/op
# Warmup Iteration   3: 1552.912 ns/op
# Warmup Iteration   4: 1554.167 ns/op
# Warmup Iteration   5: 1559.445 ns/op
Iteration   1: 1551.369 ns/op
Iteration   2: 1552.192 ns/op
Iteration   3: 1554.799 ns/op
Iteration   4: 1555.455 ns/op
Iteration   5: 1545.557 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  1551.874 ±(99.9%) 15.115 ns/op [Average]
  (min, avg, max) = (1545.557, 1551.874, 1555.455), stdev = 3.925
  CI (99.9%): [1536.759, 1566.990] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 81.63% complete, ETA 00:06:18
# Fork: 1 of 1
# Warmup Iteration   1: 13144.943 ns/op
# Warmup Iteration   2: 12081.070 ns/op
# Warmup Iteration   3: 11096.809 ns/op
# Warmup Iteration   4: 12508.126 ns/op
# Warmup Iteration   5: 11049.553 ns/op
Iteration   1: 11036.680 ns/op
Iteration   2: 11056.335 ns/op
Iteration   3: 11060.540 ns/op
Iteration   4: 11040.232 ns/op
Iteration   5: 11040.775 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  11046.913 ±(99.9%) 41.360 ns/op [Average]
  (min, avg, max) = (11036.680, 11046.913, 11060.540), stdev = 10.741
  CI (99.9%): [11005.553, 11088.273] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 1)

# Run progress: 82.14% complete, ETA 00:06:07
# Fork: 1 of 1
# Warmup Iteration   1: 453.775 ns/op
# Warmup Iteration   2: 441.867 ns/op
# Warmup Iteration   3: 424.235 ns/op
# Warmup Iteration   4: 421.849 ns/op
# Warmup Iteration   5: 439.775 ns/op
Iteration   1: 425.080 ns/op
Iteration   2: 424.240 ns/op
Iteration   3: 423.448 ns/op
Iteration   4: 424.389 ns/op
Iteration   5: 422.102 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  423.852 ±(99.9%) 4.379 ns/op [Average]
  (min, avg, max) = (422.102, 423.852, 425.080), stdev = 1.137
  CI (99.9%): [419.473, 428.231] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 10)

# Run progress: 82.65% complete, ETA 00:05:57
# Fork: 1 of 1
# Warmup Iteration   1: 488.351 ns/op
# Warmup Iteration   2: 470.851 ns/op
# Warmup Iteration   3: 448.370 ns/op
# Warmup Iteration   4: 446.039 ns/op
# Warmup Iteration   5: 460.507 ns/op
Iteration   1: 446.088 ns/op
Iteration   2: 446.744 ns/op
Iteration   3: 447.016 ns/op
Iteration   4: 448.991 ns/op
Iteration   5: 444.707 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  446.709 ±(99.9%) 5.995 ns/op [Average]
  (min, avg, max) = (444.707, 446.709, 448.991), stdev = 1.557
  CI (99.9%): [440.714, 452.705] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 50)

# Run progress: 83.16% complete, ETA 00:05:46
# Fork: 1 of 1
# Warmup Iteration   1: 561.995 ns/op
# Warmup Iteration   2: 529.734 ns/op
# Warmup Iteration   3: 516.494 ns/op
# Warmup Iteration   4: 518.742 ns/op
# Warmup Iteration   5: 516.740 ns/op
Iteration   1: 517.115 ns/op
Iteration   2: 515.565 ns/op
Iteration   3: 511.764 ns/op
Iteration   4: 506.683 ns/op
Iteration   5: 503.802 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  510.986 ±(99.9%) 21.891 ns/op [Average]
  (min, avg, max) = (503.802, 510.986, 517.115), stdev = 5.685
  CI (99.9%): [489.095, 532.876] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 100)

# Run progress: 83.67% complete, ETA 00:05:36
# Fork: 1 of 1
# Warmup Iteration   1: 627.794 ns/op
# Warmup Iteration   2: 569.289 ns/op
# Warmup Iteration   3: 569.387 ns/op
# Warmup Iteration   4: 569.061 ns/op
# Warmup Iteration   5: 570.605 ns/op
Iteration   1: 563.199 ns/op
Iteration   2: 560.613 ns/op
Iteration   3: 559.318 ns/op
Iteration   4: 560.369 ns/op
Iteration   5: 570.596 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  562.819 ±(99.9%) 17.620 ns/op [Average]
  (min, avg, max) = (559.318, 562.819, 570.596), stdev = 4.576
  CI (99.9%): [545.199, 580.439] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 500)

# Run progress: 84.18% complete, ETA 00:05:25
# Fork: 1 of 1
# Warmup Iteration   1: 1133.095 ns/op
# Warmup Iteration   2: 1057.876 ns/op
# Warmup Iteration   3: 995.740 ns/op
# Warmup Iteration   4: 1056.209 ns/op
# Warmup Iteration   5: 988.044 ns/op
Iteration   1: 990.319 ns/op
Iteration   2: 998.771 ns/op
Iteration   3: 991.036 ns/op
Iteration   4: 986.383 ns/op
Iteration   5: 985.005 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  990.303 ±(99.9%) 20.709 ns/op [Average]
  (min, avg, max) = (985.005, 990.303, 998.771), stdev = 5.378
  CI (99.9%): [969.594, 1011.012] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 1000)

# Run progress: 84.69% complete, ETA 00:05:15
# Fork: 1 of 1
# Warmup Iteration   1: 1786.199 ns/op
# Warmup Iteration   2: 1634.292 ns/op
# Warmup Iteration   3: 1553.079 ns/op
# Warmup Iteration   4: 1546.273 ns/op
# Warmup Iteration   5: 1568.475 ns/op
Iteration   1: 1558.937 ns/op
Iteration   2: 1550.824 ns/op
Iteration   3: 1549.851 ns/op
Iteration   4: 1542.687 ns/op
Iteration   5: 1543.505 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  1549.161 ±(99.9%) 25.302 ns/op [Average]
  (min, avg, max) = (1542.687, 1549.161, 1558.937), stdev = 6.571
  CI (99.9%): [1523.859, 1574.463] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache
# Parameters: (dataset = random, length = 10000)

# Run progress: 85.20% complete, ETA 00:05:04
# Fork: 1 of 1
# Warmup Iteration   1: 13957.059 ns/op
# Warmup Iteration   2: 11836.555 ns/op
# Warmup Iteration   3: 11128.862 ns/op
# Warmup Iteration   4: 11056.606 ns/op
# Warmup Iteration   5: 11019.361 ns/op
Iteration   1: 11029.597 ns/op
Iteration   2: 11035.434 ns/op
Iteration   3: 11028.965 ns/op
Iteration   4: 11051.247 ns/op
Iteration   5: 11131.323 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache":
  11055.313 ±(99.9%) 167.235 ns/op [Average]
  (min, avg, max) = (11028.965, 11055.313, 11131.323), stdev = 43.430
  CI (99.9%): [10888.078, 11222.548] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1)

# Run progress: 85.71% complete, ETA 00:04:54
# Fork: 1 of 1
# Warmup Iteration   1: 575.004 ns/op
# Warmup Iteration   2: 589.503 ns/op
# Warmup Iteration   3: 544.506 ns/op
# Warmup Iteration   4: 547.445 ns/op
# Warmup Iteration   5: 544.229 ns/op
Iteration   1: 548.670 ns/op
Iteration   2: 547.323 ns/op
Iteration   3: 587.535 ns/op
Iteration   4: 548.442 ns/op
Iteration   5: 544.734 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  555.341 ±(99.9%) 69.561 ns/op [Average]
  (min, avg, max) = (544.734, 555.341, 587.535), stdev = 18.065
  CI (99.9%): [485.780, 624.902] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10)

# Run progress: 86.22% complete, ETA 00:04:43
# Fork: 1 of 1
# Warmup Iteration   1: 602.906 ns/op
# Warmup Iteration   2: 590.234 ns/op
# Warmup Iteration   3: 567.923 ns/op
# Warmup Iteration   4: 565.403 ns/op
# Warmup Iteration   5: 566.585 ns/op
Iteration   1: 566.714 ns/op
Iteration   2: 571.054 ns/op
Iteration   3: 564.712 ns/op
Iteration   4: 566.662 ns/op
Iteration   5: 564.957 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  566.820 ±(99.9%) 9.793 ns/op [Average]
  (min, avg, max) = (564.712, 566.820, 571.054), stdev = 2.543
  CI (99.9%): [557.027, 576.613] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 50)

# Run progress: 86.73% complete, ETA 00:04:33
# Fork: 1 of 1
# Warmup Iteration   1: 741.908 ns/op
# Warmup Iteration   2: 680.398 ns/op
# Warmup Iteration   3: 659.242 ns/op
# Warmup Iteration   4: 662.497 ns/op
# Warmup Iteration   5: 661.218 ns/op
Iteration   1: 661.509 ns/op
Iteration   2: 666.458 ns/op
Iteration   3: 658.758 ns/op
Iteration   4: 661.582 ns/op
Iteration   5: 657.097 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  661.081 ±(99.9%) 13.698 ns/op [Average]
  (min, avg, max) = (657.097, 661.081, 666.458), stdev = 3.557
  CI (99.9%): [647.383, 674.779] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 100)

# Run progress: 87.24% complete, ETA 00:04:22
# Fork: 1 of 1
# Warmup Iteration   1: 749.228 ns/op
# Warmup Iteration   2: 697.597 ns/op
# Warmup Iteration   3: 682.161 ns/op
# Warmup Iteration   4: 682.458 ns/op
# Warmup Iteration   5: 682.624 ns/op
Iteration   1: 679.665 ns/op
Iteration   2: 675.514 ns/op
Iteration   3: 681.065 ns/op
Iteration   4: 675.994 ns/op
Iteration   5: 674.604 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  677.369 ±(99.9%) 10.875 ns/op [Average]
  (min, avg, max) = (674.604, 677.369, 681.065), stdev = 2.824
  CI (99.9%): [666.494, 688.244] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 500)

# Run progress: 87.76% complete, ETA 00:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 1256.349 ns/op
# Warmup Iteration   2: 1209.088 ns/op
# Warmup Iteration   3: 1125.374 ns/op
# Warmup Iteration   4: 1111.736 ns/op
# Warmup Iteration   5: 1115.481 ns/op
Iteration   1: 1110.670 ns/op
Iteration   2: 1109.819 ns/op
Iteration   3: 1108.243 ns/op
Iteration   4: 1111.742 ns/op
Iteration   5: 1110.973 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1110.289 ±(99.9%) 5.141 ns/op [Average]
  (min, avg, max) = (1108.243, 1110.289, 1111.742), stdev = 1.335
  CI (99.9%): [1105.148, 1115.430] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 88.27% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 2009.163 ns/op
# Warmup Iteration   2: 1935.144 ns/op
# Warmup Iteration   3: 1797.960 ns/op
# Warmup Iteration   4: 1758.853 ns/op
# Warmup Iteration   5: 1750.618 ns/op
Iteration   1: 1755.689 ns/op
Iteration   2: 1755.920 ns/op
Iteration   3: 1752.257 ns/op
Iteration   4: 1786.460 ns/op
Iteration   5: 1755.685 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1761.202 ±(99.9%) 54.684 ns/op [Average]
  (min, avg, max) = (1752.257, 1761.202, 1786.460), stdev = 14.201
  CI (99.9%): [1706.518, 1815.886] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 88.78% complete, ETA 00:03:51
# Fork: 1 of 1
# Warmup Iteration   1: 13402.146 ns/op
# Warmup Iteration   2: 11948.474 ns/op
# Warmup Iteration   3: 11297.825 ns/op
# Warmup Iteration   4: 11294.199 ns/op
# Warmup Iteration   5: 11265.398 ns/op
Iteration   1: 11310.165 ns/op
Iteration   2: 11335.426 ns/op
Iteration   3: 11285.192 ns/op
Iteration   4: 11242.066 ns/op
Iteration   5: 11296.728 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  11293.915 ±(99.9%) 132.826 ns/op [Average]
  (min, avg, max) = (11242.066, 11293.915, 11335.426), stdev = 34.495
  CI (99.9%): [11161.089, 11426.742] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1)

# Run progress: 89.29% complete, ETA 00:03:40
# Fork: 1 of 1
# Warmup Iteration   1: 575.742 ns/op
# Warmup Iteration   2: 580.668 ns/op
# Warmup Iteration   3: 546.842 ns/op
# Warmup Iteration   4: 549.630 ns/op
# Warmup Iteration   5: 550.915 ns/op
Iteration   1: 548.679 ns/op
Iteration   2: 550.792 ns/op
Iteration   3: 547.398 ns/op
Iteration   4: 548.938 ns/op
Iteration   5: 545.403 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  548.242 ±(99.9%) 7.688 ns/op [Average]
  (min, avg, max) = (545.403, 548.242, 550.792), stdev = 1.997
  CI (99.9%): [540.554, 555.931] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10)

# Run progress: 89.80% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: 606.041 ns/op
# Warmup Iteration   2: 595.459 ns/op
# Warmup Iteration   3: 567.468 ns/op
# Warmup Iteration   4: 563.286 ns/op
# Warmup Iteration   5: 566.034 ns/op
Iteration   1: 567.045 ns/op
Iteration   2: 566.330 ns/op
Iteration   3: 564.314 ns/op
Iteration   4: 565.441 ns/op
Iteration   5: 563.147 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  565.255 ±(99.9%) 6.003 ns/op [Average]
  (min, avg, max) = (563.147, 565.255, 567.045), stdev = 1.559
  CI (99.9%): [559.252, 571.259] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 50)

# Run progress: 90.31% complete, ETA 00:03:19
# Fork: 1 of 1
# Warmup Iteration   1: 681.996 ns/op
# Warmup Iteration   2: 628.890 ns/op
# Warmup Iteration   3: 619.987 ns/op
# Warmup Iteration   4: 617.514 ns/op
# Warmup Iteration   5: 614.816 ns/op
Iteration   1: 614.244 ns/op
Iteration   2: 612.267 ns/op
Iteration   3: 614.613 ns/op
Iteration   4: 614.643 ns/op
Iteration   5: 608.415 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  612.836 ±(99.9%) 10.238 ns/op [Average]
  (min, avg, max) = (608.415, 612.836, 614.643), stdev = 2.659
  CI (99.9%): [602.598, 623.075] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 100)

# Run progress: 90.82% complete, ETA 00:03:09
# Fork: 1 of 1
# Warmup Iteration   1: 750.210 ns/op
# Warmup Iteration   2: 698.374 ns/op
# Warmup Iteration   3: 682.876 ns/op
# Warmup Iteration   4: 682.484 ns/op
# Warmup Iteration   5: 695.517 ns/op
Iteration   1: 676.516 ns/op
Iteration   2: 677.020 ns/op
Iteration   3: 672.049 ns/op
Iteration   4: 696.702 ns/op
Iteration   5: 687.392 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  681.936 ±(99.9%) 38.464 ns/op [Average]
  (min, avg, max) = (672.049, 681.936, 696.702), stdev = 9.989
  CI (99.9%): [643.472, 720.400] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 500)

# Run progress: 91.33% complete, ETA 00:02:58
# Fork: 1 of 1
# Warmup Iteration   1: 1248.050 ns/op
# Warmup Iteration   2: 1170.634 ns/op
# Warmup Iteration   3: 1140.192 ns/op
# Warmup Iteration   4: 1111.131 ns/op
# Warmup Iteration   5: 1119.006 ns/op
Iteration   1: 1113.618 ns/op
Iteration   2: 1109.067 ns/op
Iteration   3: 1105.289 ns/op
Iteration   4: 1107.176 ns/op
Iteration   5: 1159.092 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1118.849 ±(99.9%) 87.442 ns/op [Average]
  (min, avg, max) = (1105.289, 1118.849, 1159.092), stdev = 22.709
  CI (99.9%): [1031.406, 1206.291] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 1000)

# Run progress: 91.84% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: 1994.835 ns/op
# Warmup Iteration   2: 1899.107 ns/op
# Warmup Iteration   3: 1746.161 ns/op
# Warmup Iteration   4: 1746.922 ns/op
# Warmup Iteration   5: 1741.699 ns/op
Iteration   1: 1751.513 ns/op
Iteration   2: 1754.300 ns/op
Iteration   3: 1742.975 ns/op
Iteration   4: 1739.890 ns/op
Iteration   5: 1737.427 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  1745.221 ±(99.9%) 28.310 ns/op [Average]
  (min, avg, max) = (1737.427, 1745.221, 1754.300), stdev = 7.352
  CI (99.9%): [1716.911, 1773.531] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache
# Parameters: (dataset = random, length = 10000)

# Run progress: 92.35% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: 13706.268 ns/op
# Warmup Iteration   2: 12528.034 ns/op
# Warmup Iteration   3: 12664.635 ns/op
# Warmup Iteration   4: 11887.227 ns/op
# Warmup Iteration   5: 11240.408 ns/op
Iteration   1: 11280.958 ns/op
Iteration   2: 11286.014 ns/op
Iteration   3: 11279.792 ns/op
Iteration   4: 11293.300 ns/op
Iteration   5: 11802.975 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache":
  11388.608 ±(99.9%) 892.193 ns/op [Average]
  (min, avg, max) = (11279.792, 11388.608, 11802.975), stdev = 231.700
  CI (99.9%): [10496.415, 12280.800] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 1)

# Run progress: 92.86% complete, ETA 00:02:27
# Fork: 1 of 1
# Warmup Iteration   1: 69.194 ns/op
# Warmup Iteration   2: 63.438 ns/op
# Warmup Iteration   3: 59.367 ns/op
# Warmup Iteration   4: 59.079 ns/op
# Warmup Iteration   5: 58.527 ns/op
Iteration   1: 58.387 ns/op
Iteration   2: 58.534 ns/op
Iteration   3: 58.476 ns/op
Iteration   4: 58.210 ns/op
Iteration   5: 58.188 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  58.359 ±(99.9%) 0.598 ns/op [Average]
  (min, avg, max) = (58.188, 58.359, 58.534), stdev = 0.155
  CI (99.9%): [57.761, 58.957] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 10)

# Run progress: 93.37% complete, ETA 00:02:16
# Fork: 1 of 1
# Warmup Iteration   1: 91.012 ns/op
# Warmup Iteration   2: 83.413 ns/op
# Warmup Iteration   3: 77.108 ns/op
# Warmup Iteration   4: 75.885 ns/op
# Warmup Iteration   5: 75.506 ns/op
Iteration   1: 75.537 ns/op
Iteration   2: 75.551 ns/op
Iteration   3: 75.289 ns/op
Iteration   4: 75.279 ns/op
Iteration   5: 76.095 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  75.550 ±(99.9%) 1.275 ns/op [Average]
  (min, avg, max) = (75.279, 75.550, 76.095), stdev = 0.331
  CI (99.9%): [74.275, 76.826] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 50)

# Run progress: 93.88% complete, ETA 00:02:06
# Fork: 1 of 1
# Warmup Iteration   1: 150.965 ns/op
# Warmup Iteration   2: 135.252 ns/op
# Warmup Iteration   3: 127.641 ns/op
# Warmup Iteration   4: 127.390 ns/op
# Warmup Iteration   5: 126.545 ns/op
Iteration   1: 126.623 ns/op
Iteration   2: 126.371 ns/op
Iteration   3: 129.816 ns/op
Iteration   4: 127.491 ns/op
Iteration   5: 127.411 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  127.543 ±(99.9%) 5.240 ns/op [Average]
  (min, avg, max) = (126.371, 127.543, 129.816), stdev = 1.361
  CI (99.9%): [122.302, 132.783] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 100)

# Run progress: 94.39% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 206.966 ns/op
# Warmup Iteration   2: 187.327 ns/op
# Warmup Iteration   3: 171.462 ns/op
# Warmup Iteration   4: 181.422 ns/op
# Warmup Iteration   5: 171.520 ns/op
Iteration   1: 171.154 ns/op
Iteration   2: 171.515 ns/op
Iteration   3: 171.142 ns/op
Iteration   4: 171.352 ns/op
Iteration   5: 171.807 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  171.394 ±(99.9%) 1.068 ns/op [Average]
  (min, avg, max) = (171.142, 171.394, 171.807), stdev = 0.277
  CI (99.9%): [170.326, 172.462] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 500)

# Run progress: 94.90% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: 690.069 ns/op
# Warmup Iteration   2: 624.743 ns/op
# Warmup Iteration   3: 616.712 ns/op
# Warmup Iteration   4: 581.154 ns/op
# Warmup Iteration   5: 578.678 ns/op
Iteration   1: 577.968 ns/op
Iteration   2: 581.270 ns/op
Iteration   3: 577.305 ns/op
Iteration   4: 580.870 ns/op
Iteration   5: 576.374 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  578.757 ±(99.9%) 8.434 ns/op [Average]
  (min, avg, max) = (576.374, 578.757, 581.270), stdev = 2.190
  CI (99.9%): [570.323, 587.192] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 95.41% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 1326.602 ns/op
# Warmup Iteration   2: 1203.242 ns/op
# Warmup Iteration   3: 1127.173 ns/op
# Warmup Iteration   4: 1125.223 ns/op
# Warmup Iteration   5: 1127.161 ns/op
Iteration   1: 1128.318 ns/op
Iteration   2: 1132.467 ns/op
Iteration   3: 1133.963 ns/op
Iteration   4: 1142.052 ns/op
Iteration   5: 1135.048 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  1134.370 ±(99.9%) 19.243 ns/op [Average]
  (min, avg, max) = (1128.318, 1134.370, 1142.052), stdev = 4.997
  CI (99.9%): [1115.127, 1153.613] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 95.92% complete, ETA 00:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 12326.741 ns/op
# Warmup Iteration   2: 11463.503 ns/op
# Warmup Iteration   3: 10576.513 ns/op
# Warmup Iteration   4: 10467.632 ns/op
# Warmup Iteration   5: 10454.574 ns/op
Iteration   1: 10495.309 ns/op
Iteration   2: 10470.328 ns/op
Iteration   3: 10530.619 ns/op
Iteration   4: 10455.419 ns/op
Iteration   5: 10500.995 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  10490.534 ±(99.9%) 111.940 ns/op [Average]
  (min, avg, max) = (10455.419, 10490.534, 10530.619), stdev = 29.071
  CI (99.9%): [10378.593, 10602.474] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 1)

# Run progress: 96.43% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 69.259 ns/op
# Warmup Iteration   2: 62.257 ns/op
# Warmup Iteration   3: 59.229 ns/op
# Warmup Iteration   4: 58.859 ns/op
# Warmup Iteration   5: 58.665 ns/op
Iteration   1: 58.841 ns/op
Iteration   2: 58.508 ns/op
Iteration   3: 58.510 ns/op
Iteration   4: 58.544 ns/op
Iteration   5: 58.520 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  58.584 ±(99.9%) 0.554 ns/op [Average]
  (min, avg, max) = (58.508, 58.584, 58.841), stdev = 0.144
  CI (99.9%): [58.031, 59.138] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 10)

# Run progress: 96.94% complete, ETA 00:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 87.909 ns/op
# Warmup Iteration   2: 79.493 ns/op
# Warmup Iteration   3: 75.416 ns/op
# Warmup Iteration   4: 74.508 ns/op
# Warmup Iteration   5: 73.884 ns/op
Iteration   1: 76.903 ns/op
Iteration   2: 74.292 ns/op
Iteration   3: 73.761 ns/op
Iteration   4: 74.032 ns/op
Iteration   5: 73.830 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  74.563 ±(99.9%) 5.098 ns/op [Average]
  (min, avg, max) = (73.761, 74.563, 76.903), stdev = 1.324
  CI (99.9%): [69.465, 79.661] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 50)

# Run progress: 97.45% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 149.468 ns/op
# Warmup Iteration   2: 135.604 ns/op
# Warmup Iteration   3: 126.700 ns/op
# Warmup Iteration   4: 125.872 ns/op
# Warmup Iteration   5: 134.545 ns/op
Iteration   1: 125.659 ns/op
Iteration   2: 126.084 ns/op
Iteration   3: 125.781 ns/op
Iteration   4: 125.814 ns/op
Iteration   5: 127.086 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  126.085 ±(99.9%) 2.237 ns/op [Average]
  (min, avg, max) = (125.659, 126.085, 127.086), stdev = 0.581
  CI (99.9%): [123.848, 128.322] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 100)

# Run progress: 97.96% complete, ETA 00:00:42
# Fork: 1 of 1
# Warmup Iteration   1: 209.007 ns/op
# Warmup Iteration   2: 184.390 ns/op
# Warmup Iteration   3: 173.786 ns/op
# Warmup Iteration   4: 173.221 ns/op
# Warmup Iteration   5: 174.120 ns/op
Iteration   1: 173.124 ns/op
Iteration   2: 173.816 ns/op
Iteration   3: 174.382 ns/op
Iteration   4: 174.254 ns/op
Iteration   5: 171.542 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  173.424 ±(99.9%) 4.471 ns/op [Average]
  (min, avg, max) = (171.542, 173.424, 174.382), stdev = 1.161
  CI (99.9%): [168.952, 177.895] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 500)

# Run progress: 98.47% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 690.167 ns/op
# Warmup Iteration   2: 629.586 ns/op
# Warmup Iteration   3: 591.759 ns/op
# Warmup Iteration   4: 589.158 ns/op
# Warmup Iteration   5: 587.865 ns/op
Iteration   1: 585.545 ns/op
Iteration   2: 588.360 ns/op
Iteration   3: 587.045 ns/op
Iteration   4: 587.009 ns/op
Iteration   5: 586.996 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  586.991 ±(99.9%) 3.836 ns/op [Average]
  (min, avg, max) = (585.545, 586.991, 588.360), stdev = 0.996
  CI (99.9%): [583.155, 590.827] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 1000)

# Run progress: 98.98% complete, ETA 00:00:21
# Fork: 1 of 1
# Warmup Iteration   1: 1328.406 ns/op
# Warmup Iteration   2: 1238.956 ns/op
# Warmup Iteration   3: 1130.155 ns/op
# Warmup Iteration   4: 1128.746 ns/op
# Warmup Iteration   5: 1211.344 ns/op
Iteration   1: 1130.099 ns/op
Iteration   2: 1132.572 ns/op
Iteration   3: 1128.707 ns/op
Iteration   4: 1138.713 ns/op
Iteration   5: 1128.967 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  1131.812 ±(99.9%) 15.978 ns/op [Average]
  (min, avg, max) = (1128.707, 1131.812, 1138.713), stdev = 4.149
  CI (99.9%): [1115.834, 1147.789] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.49% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 13229.507 ns/op
# Warmup Iteration   2: 11697.414 ns/op
# Warmup Iteration   3: 10555.983 ns/op
# Warmup Iteration   4: 10546.726 ns/op
# Warmup Iteration   5: 10553.546 ns/op
Iteration   1: 10541.268 ns/op
Iteration   2: 10532.427 ns/op
Iteration   3: 10526.664 ns/op
Iteration   4: 10468.589 ns/op
Iteration   5: 10487.001 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput":
  10511.190 ±(99.9%) 121.693 ns/op [Average]
  (min, avg, max) = (10468.589, 10511.190, 10541.268), stdev = 31.603
  CI (99.9%): [10389.496, 10632.883] (assumes normal distribution)


# Run complete. Total time: 00:34:19

Benchmark                                                       (dataset)  (length)  Mode  Cnt      Score      Error  Units
Base64JniBenchmarks.jdk_url_decode                                  fixed         1  avgt    5     32.377 ±    0.356  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed        10  avgt    5     50.908 ±    6.296  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed        50  avgt    5    119.827 ±    1.636  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed       100  avgt    5    240.533 ±    1.337  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed       500  avgt    5    909.959 ±    8.604  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed      1000  avgt    5   1737.881 ±    4.360  ns/op
Base64JniBenchmarks.jdk_url_decode                                  fixed     10000  avgt    5  18821.481 ±  114.160  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random         1  avgt    5     32.318 ±    0.243  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random        10  avgt    5     49.442 ±    0.698  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random        50  avgt    5    125.797 ±    8.329  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random       100  avgt    5    240.171 ±    1.158  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random       500  avgt    5    909.769 ±    9.267  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random      1000  avgt    5   1754.535 ±   59.294  ns/op
Base64JniBenchmarks.jdk_url_decode                                 random     10000  avgt    5  18908.558 ±  987.490  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed         1  avgt    5     21.458 ±    1.856  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed        10  avgt    5     47.521 ±    1.796  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed        50  avgt    5    115.946 ±    7.079  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed       100  avgt    5    158.749 ±    1.148  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed       500  avgt    5    479.591 ±   18.153  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed      1000  avgt    5    893.727 ±   39.463  ns/op
Base64JniBenchmarks.jdk_url_encode                                  fixed     10000  avgt    5   8790.544 ±  588.502  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random         1  avgt    5     21.120 ±    0.266  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random        10  avgt    5     47.263 ±    2.541  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random        50  avgt    5    115.910 ±    0.734  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random       100  avgt    5    160.671 ±    1.176  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random       500  avgt    5    485.749 ±   12.814  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random      1000  avgt    5    886.779 ±   47.093  ns/op
Base64JniBenchmarks.jdk_url_encode                                 random     10000  avgt    5   8748.367 ±   97.357  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed         1  avgt    5   1469.167 ±   31.176  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed        10  avgt    5   1454.593 ±   80.746  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed        50  avgt    5   1536.546 ±   27.240  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed       100  avgt    5   1671.862 ±   28.500  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed       500  avgt    5   2227.907 ±   76.433  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed      1000  avgt    5   2971.968 ±  108.841  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                           fixed     10000  avgt    5  13970.135 ±  193.306  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random         1  avgt    5   1484.145 ±   44.708  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random        10  avgt    5   1483.080 ±  135.328  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random        50  avgt    5   1537.209 ±   35.424  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random       100  avgt    5   1948.164 ±   68.119  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random       500  avgt    5   2226.219 ±   72.075  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random      1000  avgt    5   2952.522 ±   76.586  ns/op
Base64JniBenchmarks.jni_url_decodeConfig1                          random     10000  avgt    5  14590.765 ± 5102.838  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed         1  avgt    5   1262.154 ±   86.054  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed        10  avgt    5   1251.284 ±   91.742  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed        50  avgt    5   1307.120 ±   17.677  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed       100  avgt    5   1388.348 ±   13.877  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed       500  avgt    5   1897.640 ±   16.120  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed      1000  avgt    5   2734.986 ±   78.393  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                           fixed     10000  avgt    5  13631.778 ±  325.112  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random         1  avgt    5   1247.564 ±   17.375  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random        10  avgt    5   1230.000 ±   23.711  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random        50  avgt    5   1316.081 ±   19.969  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random       100  avgt    5   1392.548 ±   19.888  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random       500  avgt    5   1909.576 ±   13.848  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random      1000  avgt    5   2757.568 ±  134.829  ns/op
Base64JniBenchmarks.jni_url_decodeConfig2                          random     10000  avgt    5  13653.527 ±  543.181  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed         1  avgt    5   1118.032 ±  208.377  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed        10  avgt    5   1086.686 ±   62.205  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed        50  avgt    5   1158.890 ±   21.861  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed       100  avgt    5   1274.850 ±  119.628  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed       500  avgt    5   1750.839 ±   51.257  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed      1000  avgt    5   2577.979 ±   25.877  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                           fixed     10000  avgt    5  13344.504 ±  139.093  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random         1  avgt    5   1100.321 ±   65.584  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random        10  avgt    5   1077.090 ±   22.357  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random        50  avgt    5   1154.517 ±    7.503  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random       100  avgt    5   1224.876 ±   12.271  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random       500  avgt    5   1739.945 ±   30.027  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random      1000  avgt    5   2571.276 ±  151.945  ns/op
Base64JniBenchmarks.jni_url_decodeConfig3                          random     10000  avgt    5  13315.602 ±   54.887  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed         1  avgt    5   1057.231 ±   47.389  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed        10  avgt    5   1033.853 ±   22.494  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed        50  avgt    5   1113.000 ±   46.681  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed       100  avgt    5   1188.360 ±   31.386  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed       500  avgt    5   1674.904 ±   17.159  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed      1000  avgt    5   2405.825 ±  249.752  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                           fixed     10000  avgt    5  12968.864 ±  539.432  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random         1  avgt    5   1053.898 ±   53.022  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random        10  avgt    5   1033.370 ±   16.759  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random        50  avgt    5   1114.631 ±   28.159  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random       100  avgt    5   1192.525 ±   57.006  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random       500  avgt    5   1682.679 ±   17.603  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random      1000  avgt    5   2410.863 ±   32.571  ns/op
Base64JniBenchmarks.jni_url_decodeConfig4                          random     10000  avgt    5  13063.481 ±  113.391  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed         1  avgt    5   1016.496 ±   14.972  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed        10  avgt    5   1059.130 ±    8.681  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed        50  avgt    5   1143.191 ±   28.275  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed       100  avgt    5   1357.987 ±  154.273  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed       500  avgt    5   1722.981 ±   41.738  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed      1000  avgt    5   2425.074 ±   41.471  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                      fixed     10000  avgt    5  13486.757 ± 1933.127  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random         1  avgt    5   1018.532 ±   17.738  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random        10  avgt    5   1063.324 ±   28.554  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random        50  avgt    5   1172.370 ±   27.001  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random       100  avgt    5   1213.623 ±   10.365  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random       500  avgt    5   1715.023 ±   28.433  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random      1000  avgt    5   2392.046 ±   18.944  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1                     random     10000  avgt    5  13369.650 ±  253.795  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed         1  avgt    5    550.032 ±    4.794  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed        10  avgt    5    584.567 ±    5.686  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed        50  avgt    5    671.154 ±   17.910  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed       100  avgt    5    747.336 ±   10.953  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed       500  avgt    5   1238.335 ±    7.726  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed      1000  avgt    5   1962.334 ±   87.052  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache               fixed     10000  avgt    5  13042.668 ± 1473.358  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random         1  avgt    5    568.642 ±  145.066  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random        10  avgt    5    590.012 ±   10.990  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random        50  avgt    5    668.858 ±    8.503  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random       100  avgt    5    745.506 ±    8.599  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random       500  avgt    5   1228.290 ±    8.829  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random      1000  avgt    5   1952.222 ±   35.762  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice1NoCache              random     10000  avgt    5  12774.268 ±  167.209  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed         1  avgt    5    440.132 ±    6.126  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed        10  avgt    5    470.749 ±    4.829  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed        50  avgt    5    551.573 ±    6.705  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed       100  avgt    5    624.222 ±    7.895  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed       500  avgt    5   1110.352 ±   43.226  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed      1000  avgt    5   1807.816 ±   12.241  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                 fixed     10000  avgt    5  12486.410 ±  232.575  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random         1  avgt    5    443.456 ±   42.409  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random        10  avgt    5    470.216 ±   10.349  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random        50  avgt    5    567.409 ±  105.948  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random       100  avgt    5    632.699 ±   32.044  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random       500  avgt    5   1108.091 ±    8.444  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random      1000  avgt    5   1799.548 ±    8.908  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice2Cache                random     10000  avgt    5  12543.603 ±   86.034  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed         1  avgt    5     73.439 ±    4.862  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed        10  avgt    5     92.967 ±    1.167  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed        50  avgt    5    144.607 ±   10.920  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed       100  avgt    5    211.266 ±   16.024  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed       500  avgt    5    649.770 ±    5.236  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed      1000  avgt    5   1247.154 ±   43.540  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput      fixed     10000  avgt    5  11816.311 ±   68.819  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random         1  avgt    5     70.540 ±    1.508  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random        10  avgt    5     92.648 ±    0.281  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random        50  avgt    5    149.299 ±    0.858  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random       100  avgt    5    210.627 ±   16.374  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random       500  avgt    5    649.398 ±    5.279  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random      1000  avgt    5   1229.264 ±   14.743  ns/op
Base64JniBenchmarks.jni_url_decodeConfigSlice3CacheInputOutput     random     10000  avgt    5  11794.564 ±   82.061  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed         1  avgt    5   1598.491 ±  140.714  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed        10  avgt    5   1448.181 ±   16.199  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed        50  avgt    5   1560.013 ±  128.612  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed       100  avgt    5   1640.125 ±   31.286  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed       500  avgt    5   2144.199 ±  104.261  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed      1000  avgt    5   2691.449 ±   27.680  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                            fixed     10000  avgt    5  13440.998 ±  225.554  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random         1  avgt    5   1425.604 ±   21.453  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random        10  avgt    5   1485.895 ±  167.347  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random        50  avgt    5   1506.286 ±   61.121  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random       100  avgt    5   1661.108 ±   88.735  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random       500  avgt    5   2149.650 ±  108.659  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random      1000  avgt    5   2704.882 ±   29.566  ns/op
Base64JniBenchmarks.jni_url_encodeConfig                           random     10000  avgt    5  13473.801 ± 1256.948  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed         1  avgt    5    425.809 ±    6.267  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed        10  avgt    5    449.406 ±    2.859  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed        50  avgt    5    504.746 ±   15.391  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed       100  avgt    5    559.632 ±   25.548  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed       500  avgt    5    993.937 ±   18.846  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed      1000  avgt    5   1551.874 ±   15.115  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                 fixed     10000  avgt    5  11046.913 ±   41.360  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random         1  avgt    5    423.852 ±    4.379  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random        10  avgt    5    446.709 ±    5.995  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random        50  avgt    5    510.986 ±   21.891  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random       100  avgt    5    562.819 ±   17.620  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random       500  avgt    5    990.303 ±   20.709  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random      1000  avgt    5   1549.161 ±   25.302  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1Cache                random     10000  avgt    5  11055.313 ±  167.235  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed         1  avgt    5    555.341 ±   69.561  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed        10  avgt    5    566.820 ±    9.793  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed        50  avgt    5    661.081 ±   13.698  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed       100  avgt    5    677.369 ±   10.875  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed       500  avgt    5   1110.289 ±    5.141  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed      1000  avgt    5   1761.202 ±   54.684  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache               fixed     10000  avgt    5  11293.915 ±  132.826  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random         1  avgt    5    548.242 ±    7.688  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random        10  avgt    5    565.255 ±    6.003  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random        50  avgt    5    612.836 ±   10.238  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random       100  avgt    5    681.936 ±   38.464  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random       500  avgt    5   1118.849 ±   87.442  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random      1000  avgt    5   1745.221 ±   28.310  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice1NoCache              random     10000  avgt    5  11388.608 ±  892.193  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed         1  avgt    5     58.359 ±    0.598  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed        10  avgt    5     75.550 ±    1.275  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed        50  avgt    5    127.543 ±    5.240  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed       100  avgt    5    171.394 ±    1.068  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed       500  avgt    5    578.757 ±    8.434  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed      1000  avgt    5   1134.370 ±   19.243  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput      fixed     10000  avgt    5  10490.534 ±  111.940  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random         1  avgt    5     58.584 ±    0.554  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random        10  avgt    5     74.563 ±    5.098  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random        50  avgt    5    126.085 ±    2.237  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random       100  avgt    5    173.424 ±    4.471  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random       500  avgt    5    586.991 ±    3.836  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random      1000  avgt    5   1131.812 ±   15.978  ns/op
Base64JniBenchmarks.jni_url_encodeConfigSlice2CacheInputOutput     random     10000  avgt    5  10511.190 ±  121.693  ns/op

Benchmark result is saved to /static/data/charts/base64-jni/jdk11.json
