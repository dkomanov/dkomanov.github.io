{"version":3,"file":"component---src-pages-charts-scala-serialization-2022-index-tsx-2a150229b776526a66c6.js","mappings":"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","sources":["webpack://komanov.com/./src/pages/charts/scala-serialization-2022/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport { JmhBenchmarkRun } from '../../..';\nimport {\n  ChartAndTable,\n  Choose,\n  getChooseItems,\n  JmhChartComponentProps,\n  JmhChartPage,\n  TimeUnits,\n  JdkVersion,\n  Jdks,\n} from '../../../components';\nimport { loadJson } from '../../../util';\n\nconst fastLibraries = [\n  {\n    name: 'Jackson (JSON)',\n    value: 'JSON',\n  },\n  {\n    name: 'Jackson (Cbor)',\n    value: 'CBOR',\n  },\n  {\n    name: 'Jackson (Smile)',\n    value: 'SMILE',\n  },\n  {\n    name: 'ScalaPb',\n    value: 'SCALA_PB',\n  },\n  {\n    name: 'JavaPb',\n    value: 'JAVA_PB',\n  },\n  {\n    name: 'JavaThrift',\n    value: 'JAVA_THRIFT',\n  },\n  {\n    name: 'BooPickle',\n    value: 'BOOPICKLE',\n  },\n  {\n    name: 'Chill',\n    value: 'CHILL',\n  },\n  {\n    name: 'Jsoniter',\n    value: 'JSONITER',\n  },\n  {\n    name: 'uPickle JSON',\n    value: 'UPICKLE_JSON',\n  },\n  {\n    name: 'uPickle MskPack',\n    value: 'UPICKLE_MSGPACK',\n  },\n];\nconst slowLibraries = [\n  {\n    name: 'Circe',\n    value: 'CIRCE',\n  },\n  {\n    name: 'JavaSerialization',\n    value: 'SERIALIZABLE',\n  },\n];\n\nconst xDesc = {\n  title: 'Converter',\n  prop: 'library',\n  values: fastLibraries.concat(slowLibraries),\n};\n\nconst xDescNoSlow = {\n  title: 'Converter',\n  prop: 'library',\n  values: fastLibraries,\n};\n\nconst yDesc = {\n  title: 'JDK',\n  prop: 'jdk',\n  values: Jdks,\n};\n\nconst DataSizes = [\n  {\n    name: '1K',\n    value: 1000,\n  },\n  {\n    name: '2K',\n    value: 2000,\n  },\n  {\n    name: '4K',\n    value: 4000,\n  },\n  {\n    name: '8K',\n    value: 8000,\n  },\n  {\n    name: '64K',\n    value: 64000,\n  },\n];\n\ntype Action = 'both' | 'serialization' | 'deserialization';\nconst Actions = [\n  {\n    label: 'parse + serialize',\n    value: 'both',\n    default: true,\n  },\n  {\n    label: 'serialize only',\n    value: 'serialization',\n  },\n  {\n    label: 'parse only',\n    value: 'deserialization',\n  },\n];\nfunction actionToLabel(action: Action) {\n  return Actions.find((v) => v.value === action)?.label;\n}\n\nconst ScalaSerialization2022Impl = ({ jmhList }: JmhChartComponentProps) => {\n  const [excludeSlow, excludeSlowSet] = useState(false);\n  const [dataSize, dataSizeSet] = useState(4000);\n  const [action, actionSet] = useState<Action>('both');\n  const [extractor, extractorSet] = useState({ func: null });\n  const [jdk, jdkSet] = useState<JdkVersion>('openjdk-17');\n\n  const microExtractor = (pm: any) => {\n    return extractor.func(pm) / 1000;\n  };\n\n  return (\n    <div className=\"markdown\">\n      <h3>Introduction</h3>\n\n      <p>\n        Here are benchmarking results for{' '}\n        <Link to=\"/p/scala-serialization-2022\">\n          &laquo;Scala Serialization 2022&raquo;\n        </Link>{' '}\n        blog post. Graphs from the previous runs (2016-2018) are{' '}\n        <Link to=\"/charts/scala-serialization\">here</Link>.\n      </p>\n\n      <p>\n        The performance tests are performed via{' '}\n        <a href=\"https://github.com/openjdk/jmh\">JMH</a>. The configuration of a\n        hardware is Intel® Core™ i7-1165G7 @ 2.80GHz × 8 (4 core + 4 HT) with 16\n        GB RAM. Scala version: 2.13.6.\n      </p>\n\n      <h3>Misc</h3>\n\n      <ul>\n        <li>Latest version of jsoniter doesn't work on openjdk-8.</li>\n        <li>\n          Java Serialization, circe and chill are by far the slowest. You may\n          turn it off on charts to make it more readable.\n        </li>\n      </ul>\n\n      <h3>Charts</h3>\n\n      <Choose\n        label=\"Data Size:\"\n        items={DataSizes.map(({ name, value }) => ({\n          label: name,\n          value,\n          default: value === 4000,\n        }))}\n        onChange={(value: number) => dataSizeSet(value)}\n      />\n      <Choose\n        label=\"Action:\"\n        items={Actions}\n        onChange={(value: Action) => actionSet(value)}\n      />\n      <Choose\n        label=\"Exclude slowest:\"\n        items={[\n          {\n            label: 'No',\n            value: false,\n            default: true,\n          },\n          {\n            label: 'Yes, please',\n            value: true,\n          },\n        ]}\n        onChange={(value: boolean) => excludeSlowSet(value)}\n      />\n      <TimeUnits onChange={(func: any) => extractorSet({ func })} />\n\n      <h3 id=\"site\">Site DTO</h3>\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={microExtractor}\n        filter={(d: any) =>\n          d.dataType === 'Site' &&\n          d.action === action &&\n          d.dataSize === dataSize\n        }\n        title={`Times of ${actionToLabel(\n          action\n        )} for Site class (DTO), microseconds`}\n        xDesc={excludeSlow ? xDescNoSlow : xDesc}\n        yDesc={yDesc}\n        options={{}}\n      />\n\n      <h3 id=\"events\">Events</h3>\n\n      <ChartAndTable\n        dataTable={jmhList}\n        extractor={microExtractor}\n        filter={(d: any) =>\n          d.dataType === 'Event' &&\n          d.action === action &&\n          d.dataSize === dataSize\n        }\n        title={`Times of ${actionToLabel(\n          action\n        )} for list of Events, microseconds`}\n        xDesc={excludeSlow ? xDescNoSlow : xDesc}\n        yDesc={yDesc}\n      />\n\n      <h3 id=\"progression\">Progression depending on data size</h3>\n\n      <p>It doesn't show anything unusual, which is a good sign.</p>\n\n      <Choose\n        label=\"JDK:\"\n        items={getChooseItems(Jdks, (_, index) => index === 0)}\n        onChange={(value: JdkVersion) => jdkSet(value)}\n      />\n\n      <h4>Site DTO</h4>\n\n      <ChartAndTable\n        chartType=\"LineChart\"\n        dataTable={jmhList}\n        extractor={microExtractor}\n        filter={(d: any) =>\n          d.dataType === 'Site' && d.action === action && d.jdk === jdk\n        }\n        title={`Times of ${actionToLabel(\n          action\n        )} for Site class (DTO), microseconds`}\n        xDesc={excludeSlow ? xDescNoSlow : xDesc}\n        yDesc={{\n          title: 'Data Size',\n          prop: 'dataSize',\n          values: [1000, 2000, 4000, 8000, 64000],\n        }}\n        options={{\n          hAxis: {\n            title: 'Data Size, bytes',\n          },\n          vAxis: {\n            title: 'time, microseconds',\n          },\n        }}\n      />\n\n      <h4>Events</h4>\n\n      <ChartAndTable\n        chartType=\"LineChart\"\n        dataTable={jmhList}\n        extractor={microExtractor}\n        filter={(d: any) =>\n          d.dataType === 'Event' && d.action === action && d.jdk === jdk\n        }\n        title={`Times of ${actionToLabel(\n          action\n        )} for list of Events, microseconds`}\n        xDesc={excludeSlow ? xDescNoSlow : xDesc}\n        yDesc={{\n          title: 'Data Size',\n          prop: 'dataSize',\n          values: [1000, 2000, 4000, 8000, 64000],\n          minValue: 10,\n        }}\n        options={{\n          hAxis: {\n            title: 'Data Size, bytes',\n          },\n          vAxis: {\n            title: 'time, microseconds',\n          },\n        }}\n      />\n\n      <p>\n        Full JMH logs:\n        <a href={filePath('jdk8.log.txt')}>openjdk-8</a>,{' '}\n        <a href={filePath('jdk11.log.txt')}>openjdk-11</a>,{' '}\n        <a href={filePath('jdk17.log.txt')}>openjdk-17</a>.\n      </p>\n    </div>\n  );\n};\n\nfunction exportDimensions(benchmark: string, params: any) {\n  //'com.komanov.serialization.jmh.EventBenchmark.both'\n\n  const [dataTypePart, action, ...otherBenchmark] =\n    benchmark.split('Benchmark.');\n  if (!action || otherBenchmark.length > 0) {\n    throw new Error('Expected 2 parts in a benchmark: ' + benchmark);\n  }\n\n  const dataType = dataTypePart.substring(dataTypePart.lastIndexOf('.') + 1);\n  const dataSize =\n    parseInt((/_(\\d+)_K/.exec(params.inputType) || [])[1], 10) * 1000;\n\n  return {\n    library: params.converterType,\n    action,\n    dataType,\n    dataSize,\n    jdk: params.jdk,\n  };\n}\n\nconst filePath = (name: string) =>\n  `/data/charts/scala-serialization-2022/${name}`;\n\nconst fetchAndCombineResults = () => {\n  return Promise.all([\n    loadJson(filePath('jdk8.json')),\n    loadJson(filePath('jdk11.json')),\n    loadJson(filePath('jdk17.json')),\n  ]).then((values: any[]) => {\n    function setJdk(index: number, jdk: JdkVersion) {\n      const list: JmhBenchmarkRun[] = values[index].data;\n      list.forEach((v) => (v.params = { ...v.params, jdk }));\n      return list;\n    }\n\n    return {\n      data: [\n        ...setJdk(0, 'openjdk-8'),\n        ...setJdk(1, 'openjdk-11'),\n        ...setJdk(2, 'openjdk-17'),\n      ],\n    };\n  });\n};\n\nconst ScalaSerialization2022 = JmhChartPage(ScalaSerialization2022Impl, {\n  fetchFunc: fetchAndCombineResults,\n  exportDimensionsFunc: exportDimensions,\n  headerText: 'Scala Serialization 2022 (Charts)',\n});\n\nexport default ScalaSerialization2022;\n"],"names":["fastLibraries","name","value","xDesc","title","prop","values","concat","xDescNoSlow","yDesc","Jdks","DataSizes","Actions","label","default","actionToLabel","action","find","v","_Actions$find","filePath","ScalaSerialization2022","JmhChartPage","jmhList","useState","excludeSlow","excludeSlowSet","dataSize","dataSizeSet","actionSet","func","extractor","extractorSet","jdk","jdkSet","microExtractor","pm","React","className","Link","to","href","Choose","items","map","onChange","TimeUnits","id","ChartAndTable","dataTable","filter","d","dataType","options","getChooseItems","_","index","chartType","hAxis","vAxis","minValue","fetchFunc","Promise","all","loadJson","then","setJdk","list","data","forEach","params","exportDimensionsFunc","benchmark","split","dataTypePart","otherBenchmark","length","Error","substring","lastIndexOf","parseInt","exec","inputType","library","converterType","headerText"],"sourceRoot":""}