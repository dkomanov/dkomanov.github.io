"use strict";(self.webpackChunkkomanov_com=self.webpackChunkkomanov_com||[]).push([[944],{2531:function(e,n,t){t.r(n);var a=t(2982),o=t(7294),r=t(1597),c=t(5224),l=t(4271),s=["openjdk-17","openjdk-11","openjdk-8"],u=["1","10","50","100","500","1000","10000"],m="10000",d={title:"Library and Operation",prop:"method",values:[{name:"j.u.Base64 regular decode",value:"jdkDecode"},{name:"j.u.Base64 urlSafe decode",value:"jdkUrlDecode"},{name:"Commons regular decode",value:"commonsDecode"},{name:"Commons urlSafe decode",value:"commonsUrlDecode"},{name:"j.u.Base64 regular encode",value:"jdkEncode"},{name:"j.u.Base64 urlSafe encode",value:"jdkUrlEncode"},{name:"Commons regular encode",value:"commonsEncode"},{name:"Commons urlSafe encode",value:"commonsUrlEncode"}]},i={title:"JDK",prop:"jdk",values:s};var f=function(e){return"/data/charts/base64-jdk-vs-apache-commons/"+e},h=(0,c.wZ)((function(e){var n=e.jmhList,t=(0,o.useState)(m),a=t[0],l=t[1],h=(0,o.useState)("openjdk-17"),p=h[0],j=h[1],k=(0,o.useState)({func:null}),g=k[0],E=k[1];return o.createElement("div",{className:"markdown"},o.createElement("h3",null,"Introduction"),o.createElement("p",null,"Here are benchmarking results for"," ",o.createElement(r.Link,{to:"/p/base64-encoding-performance-jdk-vs-apache-commons"},"«Base64 Encoding Performance: JDK vs Apache Commons»")," ","blog post."),o.createElement("p",null,"The performance tests are performed via"," ",o.createElement("a",{href:"https://github.com/openjdk/jmh"},"JMH"),". The configuration of a hardware is Intel® Core™ i7-1165G7 @ 2.80GHz × 8 (4 core + 4 HT) with 16 GB RAM. Scala version: 2.13.6."),o.createElement("h3",null,"Charts"),o.createElement(c.V2,{label:"Data length:",items:(0,c.getChooseItems)(u,(function(e){return e===m})),onChange:function(e){return l(e)}}),o.createElement(c.J6,{onChange:function(e){return E({func:e})}}),o.createElement("h4",null,"Encoding/Decoding Performance for various JDKs"),o.createElement(c.We,{dataTable:n,extractor:g.func,filter:function(e){return e.length===a},title:"Encoding/Decoding, nanos",xDesc:d,yDesc:i}),o.createElement("h4",null,"Performance for different data sizes"),o.createElement(c.V2,{label:"JDK:",items:(0,c.getChooseItems)(s,(function(e,n){return 0===n})),onChange:function(e){return j(e)}}),o.createElement(c.We,{chartType:"LineChart",dataTable:n,extractor:g.func,filter:function(e){return e.jdk===p},title:"Encoding/Decoding, nanos",xDesc:d,yDesc:{title:"Data length",prop:"length",values:u},options:{hAxis:{title:"Data length"},vAxis:{title:"time, nanoseconds"}}}),o.createElement("p",null,"Full JMH logs:",o.createElement("a",{href:f("jdk8.log.txt")},"openjdk-8"),","," ",o.createElement("a",{href:f("jdk11.log.txt")},"openjdk-11"),","," ",o.createElement("a",{href:f("jdk17.log.txt")},"openjdk-17"),"."))}),{fetchFunc:function(){return Promise.all([(0,l._l)(f("jdk8.json")),(0,l._l)(f("jdk11.json")),(0,l._l)(f("jdk17.json"))]).then((function(e){function n(n,t){var a=e[n].data;return a.forEach((function(e){return e.params=Object.assign({},e.params,{jdk:t})})),a}return{data:[].concat((0,a.Z)(n(0,"openjdk-8")),(0,a.Z)(n(1,"openjdk-11")),(0,a.Z)(n(2,"openjdk-17")))}}))},exportDimensionsFunc:function(e,n){var t=e.substring(e.lastIndexOf(".")+1);return Object.assign({method:t},n)},headerText:"Base64 Encoding Performance: JDK vs Apache Commons (Charts)"});n.default=h}}]);
//# sourceMappingURL=component---src-pages-charts-base-64-jdk-vs-apache-commons-index-tsx-25d7c6504918e562c515.js.map