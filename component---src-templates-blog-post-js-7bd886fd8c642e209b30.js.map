{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostMeta","render","post","this","props","className","tags","frontmatter","React","Component","BlogPostTemplate","data","markdownRemark","teaserUrl","cover","title","rawDate","date","description","excerpt","canonicalUrl","itemScope","itemType","html","pageQuery"],"mappings":"4UAOMA,E,wFAKJC,OAAA,WAAU,IACDC,EAAQC,KAAKC,MAAbF,KAEP,OACE,yBAAKG,UAAU,kBACb,kBAAC,IAAD,CAAMC,KAAMJ,EAAKK,YAAYD,OAC7B,6BACA,kBAAC,IAAD,CAAcJ,KAAMA,M,GAZDM,IAAMC,WAkB3BC,E,wFACJT,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMO,KAAKC,eAG7B,OACE,kBAAC,IAAD,CACEC,UAAWX,EAAKK,YAAYO,MAAOC,MAAOb,EAAKK,YAAYQ,MAC3DC,QAASd,EAAKK,YAAYS,QAASC,KAAMf,EAAKK,YAAYU,MAE1D,kBAAC,IAAD,CACEF,MAAOb,EAAKK,YAAYQ,MACxBG,YAAahB,EAAKK,YAAYW,aAAehB,EAAKiB,QAClDC,aAAclB,EAAKK,YAAYa,eAEjC,yBAAKf,UAAU,YAAYgB,WAAS,EAACC,SAAS,6BAE1CpB,EAAKK,YAAYO,OACjB,4BAAKZ,EAAKa,OAEZ,kBAAC,IAAD,CAAUQ,KAAMrB,EAAKqB,QAEvB,kBAACvB,EAAD,CAAcE,KAAMA,M,GAtBGM,IAAMC,WAgDtBC,YAER,IAAMc,EAAS","file":"component---src-templates-blog-post-js-7bd886fd8c642e209b30.js","sourcesContent":["import {graphql} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Layout, Markdown, Seo, ShareButtons, Tags} from '../components';\nimport '../components/fragments';\nimport './BlogPost.css';\n\nclass BlogPostMeta extends React.Component {\n  static propTypes = {\n    post: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {post} = this.props;\n\n    return (\n      <div className=\"blog-post-meta\">\n        <Tags tags={post.frontmatter.tags}/>\n        <hr/>\n        <ShareButtons post={post}/>\n      </div>\n    );\n  }\n}\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    //const {previous, next} = this.props.pageContext;\n\n    return (\n      <Layout\n        teaserUrl={post.frontmatter.cover} title={post.frontmatter.title}\n        rawDate={post.frontmatter.rawDate} date={post.frontmatter.date}\n      >\n        <Seo\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          canonicalUrl={post.frontmatter.canonicalUrl}\n        />\n        <div className=\"blog-post\" itemScope itemType=\"http://schema.org/Article\">\n          {\n            post.frontmatter.cover &&\n            <h1>{post.title}</h1>\n          }\n          <Markdown html={post.html}/>\n        </div>\n        <BlogPostMeta post={post}/>\n      </Layout>\n    );\n  }\n}\n\n/*\n<ul>\n  <li>\n    {previous && (\n      <Link to={previous.fields.slug} rel=\"prev\">\n        ← {previous.frontmatter.title}\n      </Link>\n    )}\n  </li>\n  <li>\n    {next && (\n      <Link to={next.fields.slug} rel=\"next\">\n        {next.frontmatter.title} →\n      </Link>\n    )}\n  </li>\n</ul>\n*/\n\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            fields {\n                slug\n            }\n            frontmatter {\n                rawDate: date\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                description\n                tags\n                canonicalUrl\n                cover {\n                    ...coverUrl\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}