# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000)

# Run progress: 0.00% complete, ETA 00:22:24
# Fork: 1 of 1
# Warmup Iteration   1: 113.683 ns/op
# Warmup Iteration   2: 120.106 ns/op
Iteration   1: 115.814 ns/op
Iteration   2: 114.706 ns/op
Iteration   3: 114.378 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  114.966 ±(99.9%) 13.725 ns/op [Average]
  (min, avg, max) = (114.378, 114.966, 115.814), stdev = 0.752
  CI (99.9%): [101.241, 128.690] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 10000)

# Run progress: 1.56% complete, ETA 00:22:51
# Fork: 1 of 1
# Warmup Iteration   1: 119.319 ns/op
# Warmup Iteration   2: 117.665 ns/op
Iteration   1: 114.024 ns/op
Iteration   2: 115.772 ns/op
Iteration   3: 115.819 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  115.205 ±(99.9%) 18.664 ns/op [Average]
  (min, avg, max) = (114.024, 115.205, 115.819), stdev = 1.023
  CI (99.9%): [96.541, 133.868] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 100000)

# Run progress: 3.13% complete, ETA 00:22:28
# Fork: 1 of 1
# Warmup Iteration   1: 127.252 ns/op
# Warmup Iteration   2: 122.920 ns/op
Iteration   1: 115.953 ns/op
Iteration   2: 116.005 ns/op
Iteration   3: 115.102 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  115.687 ±(99.9%) 9.255 ns/op [Average]
  (min, avg, max) = (115.102, 115.687, 116.005), stdev = 0.507
  CI (99.9%): [106.432, 124.942] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000000)

# Run progress: 4.69% complete, ETA 00:22:12
# Fork: 1 of 1
# Warmup Iteration   1: 85.203 ns/op
# Warmup Iteration   2: 83.081 ns/op
Iteration   1: 80.443 ns/op
Iteration   2: 81.277 ns/op
Iteration   3: 80.618 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  80.779 ±(99.9%) 8.026 ns/op [Average]
  (min, avg, max) = (80.443, 80.779, 81.277), stdev = 0.440
  CI (99.9%): [72.753, 88.805] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000)

# Run progress: 6.25% complete, ETA 00:22:45
# Fork: 1 of 1
# Warmup Iteration   1: 83.838 ns/op
# Warmup Iteration   2: 78.160 ns/op
Iteration   1: 65.925 ns/op
Iteration   2: 66.033 ns/op
Iteration   3: 65.967 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  65.975 ±(99.9%) 0.993 ns/op [Average]
  (min, avg, max) = (65.925, 65.975, 66.033), stdev = 0.054
  CI (99.9%): [64.983, 66.968] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 10000)

# Run progress: 7.81% complete, ETA 00:22:09
# Fork: 1 of 1
# Warmup Iteration   1: 76.777 ns/op
# Warmup Iteration   2: 72.691 ns/op
Iteration   1: 59.270 ns/op
Iteration   2: 59.351 ns/op
Iteration   3: 59.387 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  59.336 ±(99.9%) 1.091 ns/op [Average]
  (min, avg, max) = (59.270, 59.336, 59.387), stdev = 0.060
  CI (99.9%): [58.245, 60.427] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 100000)

# Run progress: 9.38% complete, ETA 00:21:39
# Fork: 1 of 1
# Warmup Iteration   1: 77.410 ns/op
# Warmup Iteration   2: 73.154 ns/op
Iteration   1: 60.485 ns/op
Iteration   2: 60.572 ns/op
Iteration   3: 60.480 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  60.512 ±(99.9%) 0.939 ns/op [Average]
  (min, avg, max) = (60.480, 60.512, 60.572), stdev = 0.051
  CI (99.9%): [59.573, 61.452] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000000)

# Run progress: 10.94% complete, ETA 00:21:13
# Fork: 1 of 1
# Warmup Iteration   1: 71.994 ns/op
# Warmup Iteration   2: 73.268 ns/op
Iteration   1: 75.464 ns/op
Iteration   2: 75.443 ns/op
Iteration   3: 75.417 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  75.441 ±(99.9%) 0.438 ns/op [Average]
  (min, avg, max) = (75.417, 75.441, 75.464), stdev = 0.024
  CI (99.9%): [75.003, 75.880] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000)

# Run progress: 12.50% complete, ETA 00:21:13
# Fork: 1 of 1
# Warmup Iteration   1: 115.522 ns/op
# Warmup Iteration   2: 111.157 ns/op
Iteration   1: 102.280 ns/op
Iteration   2: 102.329 ns/op
Iteration   3: 102.266 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  102.292 ±(99.9%) 0.600 ns/op [Average]
  (min, avg, max) = (102.266, 102.292, 102.329), stdev = 0.033
  CI (99.9%): [101.692, 102.892] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 10000)

# Run progress: 14.06% complete, ETA 00:20:44
# Fork: 1 of 1
# Warmup Iteration   1: 122.561 ns/op
# Warmup Iteration   2: 117.704 ns/op
Iteration   1: 103.033 ns/op
Iteration   2: 105.086 ns/op
Iteration   3: 103.173 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  103.764 ±(99.9%) 20.924 ns/op [Average]
  (min, avg, max) = (103.033, 103.764, 105.086), stdev = 1.147
  CI (99.9%): [82.840, 124.687] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 100000)

# Run progress: 15.63% complete, ETA 00:20:16
# Fork: 1 of 1
# Warmup Iteration   1: 120.918 ns/op
# Warmup Iteration   2: 119.441 ns/op
Iteration   1: 102.027 ns/op
Iteration   2: 103.431 ns/op
Iteration   3: 102.251 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  102.570 ±(99.9%) 13.759 ns/op [Average]
  (min, avg, max) = (102.027, 102.570, 103.431), stdev = 0.754
  CI (99.9%): [88.810, 116.329] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000000)

# Run progress: 17.19% complete, ETA 00:19:52
# Fork: 1 of 1
# Warmup Iteration   1: 93.026 ns/op
# Warmup Iteration   2: 91.044 ns/op
Iteration   1: 82.765 ns/op
Iteration   2: 82.668 ns/op
Iteration   3: 82.843 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  82.758 ±(99.9%) 1.601 ns/op [Average]
  (min, avg, max) = (82.668, 82.758, 82.843), stdev = 0.088
  CI (99.9%): [81.158, 84.359] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000)

# Run progress: 18.75% complete, ETA 00:19:43
# Fork: 1 of 1
# Warmup Iteration   1: 84.639 ns/op
# Warmup Iteration   2: 89.385 ns/op
Iteration   1: 65.537 ns/op
Iteration   2: 65.380 ns/op
Iteration   3: 65.462 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  65.460 ±(99.9%) 1.435 ns/op [Average]
  (min, avg, max) = (65.380, 65.460, 65.537), stdev = 0.079
  CI (99.9%): [64.025, 66.894] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 10000)

# Run progress: 20.31% complete, ETA 00:19:16
# Fork: 1 of 1
# Warmup Iteration   1: 85.927 ns/op
# Warmup Iteration   2: 90.324 ns/op
Iteration   1: 65.428 ns/op
Iteration   2: 65.474 ns/op
Iteration   3: 65.434 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  65.445 ±(99.9%) 0.460 ns/op [Average]
  (min, avg, max) = (65.428, 65.445, 65.474), stdev = 0.025
  CI (99.9%): [64.986, 65.905] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 100000)

# Run progress: 21.88% complete, ETA 00:18:49
# Fork: 1 of 1
# Warmup Iteration   1: 89.354 ns/op
# Warmup Iteration   2: 93.731 ns/op
Iteration   1: 68.630 ns/op
Iteration   2: 68.469 ns/op
Iteration   3: 68.580 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  68.560 ±(99.9%) 1.507 ns/op [Average]
  (min, avg, max) = (68.469, 68.560, 68.630), stdev = 0.083
  CI (99.9%): [67.052, 70.067] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000000)

# Run progress: 23.44% complete, ETA 00:18:25
# Fork: 1 of 1
# Warmup Iteration   1: 71.562 ns/op
# Warmup Iteration   2: 73.521 ns/op
Iteration   1: 77.022 ns/op
Iteration   2: 77.106 ns/op
Iteration   3: 77.079 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  77.069 ±(99.9%) 0.786 ns/op [Average]
  (min, avg, max) = (77.022, 77.069, 77.106), stdev = 0.043
  CI (99.9%): [76.283, 77.854] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000)

# Run progress: 25.00% complete, ETA 00:18:12
# Fork: 1 of 1
# Warmup Iteration   1: 201.393 ns/op
# Warmup Iteration   2: 190.609 ns/op
Iteration   1: 189.244 ns/op
Iteration   2: 187.035 ns/op
Iteration   3: 185.429 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  187.236 ±(99.9%) 34.948 ns/op [Average]
  (min, avg, max) = (185.429, 187.236, 189.244), stdev = 1.916
  CI (99.9%): [152.288, 222.183] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 10000)

# Run progress: 26.56% complete, ETA 00:17:46
# Fork: 1 of 1
# Warmup Iteration   1: 208.544 ns/op
# Warmup Iteration   2: 190.871 ns/op
Iteration   1: 190.485 ns/op
Iteration   2: 189.281 ns/op
Iteration   3: 196.518 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  192.095 ±(99.9%) 70.745 ns/op [Average]
  (min, avg, max) = (189.281, 192.095, 196.518), stdev = 3.878
  CI (99.9%): [121.350, 262.840] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 100000)

# Run progress: 28.13% complete, ETA 00:17:21
# Fork: 1 of 1
# Warmup Iteration   1: 206.761 ns/op
# Warmup Iteration   2: 190.778 ns/op
Iteration   1: 194.064 ns/op
Iteration   2: 190.121 ns/op
Iteration   3: 189.511 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  191.232 ±(99.9%) 45.090 ns/op [Average]
  (min, avg, max) = (189.511, 191.232, 194.064), stdev = 2.472
  CI (99.9%): [146.142, 236.322] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000000)

# Run progress: 29.69% complete, ETA 00:16:57
# Fork: 1 of 1
# Warmup Iteration   1: 264.921 ns/op
# Warmup Iteration   2: 396.530 ns/op
Iteration   1: 199.702 ns/op
Iteration   2: 199.018 ns/op
Iteration   3: 200.947 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  199.889 ±(99.9%) 17.844 ns/op [Average]
  (min, avg, max) = (199.018, 199.889, 200.947), stdev = 0.978
  CI (99.9%): [182.045, 217.733] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000)

# Run progress: 31.25% complete, ETA 00:16:41
# Fork: 1 of 1
# Warmup Iteration   1: 123.568 ns/op
# Warmup Iteration   2: 119.824 ns/op
Iteration   1: 120.864 ns/op
Iteration   2: 120.819 ns/op
Iteration   3: 120.834 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  120.839 ±(99.9%) 0.414 ns/op [Average]
  (min, avg, max) = (120.819, 120.839, 120.864), stdev = 0.023
  CI (99.9%): [120.424, 121.253] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 10000)

# Run progress: 32.81% complete, ETA 00:16:16
# Fork: 1 of 1
# Warmup Iteration   1: 116.345 ns/op
# Warmup Iteration   2: 110.690 ns/op
Iteration   1: 114.916 ns/op
Iteration   2: 113.189 ns/op
Iteration   3: 113.083 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  113.729 ±(99.9%) 18.772 ns/op [Average]
  (min, avg, max) = (113.083, 113.729, 114.916), stdev = 1.029
  CI (99.9%): [94.957, 132.502] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 100000)

# Run progress: 34.38% complete, ETA 00:15:51
# Fork: 1 of 1
# Warmup Iteration   1: 116.469 ns/op
# Warmup Iteration   2: 113.439 ns/op
Iteration   1: 114.409 ns/op
Iteration   2: 114.012 ns/op
Iteration   3: 114.761 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  114.394 ±(99.9%) 6.840 ns/op [Average]
  (min, avg, max) = (114.012, 114.394, 114.761), stdev = 0.375
  CI (99.9%): [107.554, 121.234] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000000)

# Run progress: 35.94% complete, ETA 00:15:27
# Fork: 1 of 1
# Warmup Iteration   1: 165.327 ns/op
# Warmup Iteration   2: 162.693 ns/op
Iteration   1: 151.838 ns/op
Iteration   2: 151.974 ns/op
Iteration   3: 152.181 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  151.998 ±(99.9%) 3.151 ns/op [Average]
  (min, avg, max) = (151.838, 151.998, 152.181), stdev = 0.173
  CI (99.9%): [148.846, 155.149] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000)

# Run progress: 37.50% complete, ETA 00:15:10
# Fork: 1 of 1
# Warmup Iteration   1: 126.017 ns/op
# Warmup Iteration   2: 129.507 ns/op
Iteration   1: 120.991 ns/op
Iteration   2: 120.808 ns/op
Iteration   3: 121.923 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  121.241 ±(99.9%) 10.909 ns/op [Average]
  (min, avg, max) = (120.808, 121.241, 121.923), stdev = 0.598
  CI (99.9%): [110.331, 132.150] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 10000)

# Run progress: 39.06% complete, ETA 00:14:45
# Fork: 1 of 1
# Warmup Iteration   1: 129.725 ns/op
# Warmup Iteration   2: 133.722 ns/op
Iteration   1: 128.524 ns/op
Iteration   2: 129.197 ns/op
Iteration   3: 128.478 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  128.733 ±(99.9%) 7.344 ns/op [Average]
  (min, avg, max) = (128.478, 128.733, 129.197), stdev = 0.403
  CI (99.9%): [121.389, 136.077] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 100000)

# Run progress: 40.63% complete, ETA 00:14:21
# Fork: 1 of 1
# Warmup Iteration   1: 125.336 ns/op
# Warmup Iteration   2: 128.511 ns/op
Iteration   1: 115.160 ns/op
Iteration   2: 115.202 ns/op
Iteration   3: 117.044 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  115.802 ±(99.9%) 19.629 ns/op [Average]
  (min, avg, max) = (115.160, 115.802, 117.044), stdev = 1.076
  CI (99.9%): [96.174, 135.431] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000000)

# Run progress: 42.19% complete, ETA 00:13:57
# Fork: 1 of 1
# Warmup Iteration   1: 93.650 ns/op
# Warmup Iteration   2: 95.039 ns/op
Iteration   1: 89.085 ns/op
Iteration   2: 88.922 ns/op
Iteration   3: 88.732 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  88.913 ±(99.9%) 3.221 ns/op [Average]
  (min, avg, max) = (88.732, 88.913, 89.085), stdev = 0.177
  CI (99.9%): [85.692, 92.134] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000)

# Run progress: 43.75% complete, ETA 00:13:39
# Fork: 1 of 1
# Warmup Iteration   1: 98.043 ns/op
# Warmup Iteration   2: 120.989 ns/op
Iteration   1: 70.401 ns/op
Iteration   2: 69.970 ns/op
Iteration   3: 70.065 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  70.145 ±(99.9%) 4.131 ns/op [Average]
  (min, avg, max) = (69.970, 70.145, 70.401), stdev = 0.226
  CI (99.9%): [66.014, 74.277] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 10000)

# Run progress: 45.31% complete, ETA 00:13:15
# Fork: 1 of 1
# Warmup Iteration   1: 102.755 ns/op
# Warmup Iteration   2: 104.326 ns/op
Iteration   1: 77.594 ns/op
Iteration   2: 79.812 ns/op
Iteration   3: 77.762 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  78.389 ±(99.9%) 22.533 ns/op [Average]
  (min, avg, max) = (77.594, 78.389, 79.812), stdev = 1.235
  CI (99.9%): [55.857, 100.922] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 100000)

# Run progress: 46.88% complete, ETA 00:12:51
# Fork: 1 of 1
# Warmup Iteration   1: 90.356 ns/op
# Warmup Iteration   2: 95.254 ns/op
Iteration   1: 68.031 ns/op
Iteration   2: 67.970 ns/op
Iteration   3: 67.911 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  67.970 ±(99.9%) 1.095 ns/op [Average]
  (min, avg, max) = (67.911, 67.970, 68.031), stdev = 0.060
  CI (99.9%): [66.876, 69.065] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000000)

# Run progress: 48.44% complete, ETA 00:12:27
# Fork: 1 of 1
# Warmup Iteration   1: 72.780 ns/op
# Warmup Iteration   2: 72.903 ns/op
Iteration   1: 75.256 ns/op
Iteration   2: 75.246 ns/op
Iteration   3: 75.231 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  75.244 ±(99.9%) 0.228 ns/op [Average]
  (min, avg, max) = (75.231, 75.244, 75.256), stdev = 0.012
  CI (99.9%): [75.016, 75.472] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000)

# Run progress: 50.00% complete, ETA 00:12:07
# Fork: 1 of 1
# Warmup Iteration   1: 278.358 ns/op
# Warmup Iteration   2: 263.781 ns/op
Iteration   1: 274.203 ns/op
Iteration   2: 274.695 ns/op
Iteration   3: 276.444 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  275.114 ±(99.9%) 21.492 ns/op [Average]
  (min, avg, max) = (274.203, 275.114, 276.444), stdev = 1.178
  CI (99.9%): [253.622, 296.606] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 10000)

# Run progress: 51.56% complete, ETA 00:11:44
# Fork: 1 of 1
# Warmup Iteration   1: 369.674 ns/op
# Warmup Iteration   2: 362.099 ns/op
Iteration   1: 364.816 ns/op
Iteration   2: 363.891 ns/op
Iteration   3: 364.145 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  364.284 ±(99.9%) 8.716 ns/op [Average]
  (min, avg, max) = (363.891, 364.284, 364.816), stdev = 0.478
  CI (99.9%): [355.568, 373.000] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 100000)

# Run progress: 53.13% complete, ETA 00:11:20
# Fork: 1 of 1
# Warmup Iteration   1: 488.087 ns/op
# Warmup Iteration   2: 482.209 ns/op
Iteration   1: 477.201 ns/op
Iteration   2: 480.628 ns/op
Iteration   3: 480.826 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  479.551 ±(99.9%) 37.183 ns/op [Average]
  (min, avg, max) = (477.201, 479.551, 480.826), stdev = 2.038
  CI (99.9%): [442.368, 516.735] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000000)

# Run progress: 54.69% complete, ETA 00:10:57
# Fork: 1 of 1
# Warmup Iteration   1: 509.027 ns/op
# Warmup Iteration   2: 501.508 ns/op
Iteration   1: 499.718 ns/op
Iteration   2: 500.228 ns/op
Iteration   3: 513.049 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  504.332 ±(99.9%) 137.809 ns/op [Average]
  (min, avg, max) = (499.718, 504.332, 513.049), stdev = 7.554
  CI (99.9%): [366.523, 642.141] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000)

# Run progress: 56.25% complete, ETA 00:10:37
# Fork: 1 of 1
# Warmup Iteration   1: 195.967 ns/op
# Warmup Iteration   2: 193.046 ns/op
Iteration   1: 191.840 ns/op
Iteration   2: 191.916 ns/op
Iteration   3: 191.772 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  191.843 ±(99.9%) 1.317 ns/op [Average]
  (min, avg, max) = (191.772, 191.843, 191.916), stdev = 0.072
  CI (99.9%): [190.525, 193.160] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 10000)

# Run progress: 57.81% complete, ETA 00:10:13
# Fork: 1 of 1
# Warmup Iteration   1: 266.893 ns/op
# Warmup Iteration   2: 265.005 ns/op
Iteration   1: 260.632 ns/op
Iteration   2: 260.692 ns/op
Iteration   3: 260.161 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  260.495 ±(99.9%) 5.305 ns/op [Average]
  (min, avg, max) = (260.161, 260.495, 260.692), stdev = 0.291
  CI (99.9%): [255.190, 265.800] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 100000)

# Run progress: 59.38% complete, ETA 00:09:50
# Fork: 1 of 1
# Warmup Iteration   1: 385.532 ns/op
# Warmup Iteration   2: 382.862 ns/op
Iteration   1: 383.669 ns/op
Iteration   2: 383.247 ns/op
Iteration   3: 383.042 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  383.319 ±(99.9%) 5.833 ns/op [Average]
  (min, avg, max) = (383.042, 383.319, 383.669), stdev = 0.320
  CI (99.9%): [377.486, 389.152] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000000)

# Run progress: 60.94% complete, ETA 00:09:26
# Fork: 1 of 1
# Warmup Iteration   1: 462.971 ns/op
# Warmup Iteration   2: 456.083 ns/op
Iteration   1: 454.963 ns/op
Iteration   2: 457.362 ns/op
Iteration   3: 456.800 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  456.375 ±(99.9%) 22.890 ns/op [Average]
  (min, avg, max) = (454.963, 456.375, 457.362), stdev = 1.255
  CI (99.9%): [433.485, 479.265] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000)

# Run progress: 62.50% complete, ETA 00:09:05
# Fork: 1 of 1
# Warmup Iteration   1: 96.575 ns/op
# Warmup Iteration   2: 107.355 ns/op
Iteration   1: 86.858 ns/op
Iteration   2: 87.002 ns/op
Iteration   3: 86.940 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  86.933 ±(99.9%) 1.314 ns/op [Average]
  (min, avg, max) = (86.858, 86.933, 87.002), stdev = 0.072
  CI (99.9%): [85.619, 88.247] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 10000)

# Run progress: 64.06% complete, ETA 00:08:42
# Fork: 1 of 1
# Warmup Iteration   1: 115.999 ns/op
# Warmup Iteration   2: 129.323 ns/op
Iteration   1: 111.881 ns/op
Iteration   2: 105.894 ns/op
Iteration   3: 106.226 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  108.000 ±(99.9%) 61.383 ns/op [Average]
  (min, avg, max) = (105.894, 108.000, 111.881), stdev = 3.365
  CI (99.9%): [46.617, 169.384] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 100000)

# Run progress: 65.63% complete, ETA 00:08:19
# Fork: 1 of 1
# Warmup Iteration   1: 99.157 ns/op
# Warmup Iteration   2: 107.278 ns/op
Iteration   1: 94.789 ns/op
Iteration   2: 92.310 ns/op
Iteration   3: 90.946 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  92.682 ±(99.9%) 35.546 ns/op [Average]
  (min, avg, max) = (90.946, 92.682, 94.789), stdev = 1.948
  CI (99.9%): [57.136, 128.227] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000000)

# Run progress: 67.19% complete, ETA 00:07:56
# Fork: 1 of 1
# Warmup Iteration   1: 119.828 ns/op
# Warmup Iteration   2: 119.098 ns/op
Iteration   1: 101.271 ns/op
Iteration   2: 100.023 ns/op
Iteration   3: 100.053 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  100.449 ±(99.9%) 12.985 ns/op [Average]
  (min, avg, max) = (100.023, 100.449, 101.271), stdev = 0.712
  CI (99.9%): [87.464, 113.434] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000)

# Run progress: 68.75% complete, ETA 00:07:35
# Fork: 1 of 1
# Warmup Iteration   1: 51.139 ns/op
# Warmup Iteration   2: 51.245 ns/op
Iteration   1: 48.629 ns/op
Iteration   2: 48.623 ns/op
Iteration   3: 48.651 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  48.634 ±(99.9%) 0.270 ns/op [Average]
  (min, avg, max) = (48.623, 48.634, 48.651), stdev = 0.015
  CI (99.9%): [48.364, 48.904] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 10000)

# Run progress: 70.31% complete, ETA 00:07:11
# Fork: 1 of 1
# Warmup Iteration   1: 49.589 ns/op
# Warmup Iteration   2: 51.225 ns/op
Iteration   1: 48.410 ns/op
Iteration   2: 48.444 ns/op
Iteration   3: 48.404 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  48.419 ±(99.9%) 0.385 ns/op [Average]
  (min, avg, max) = (48.404, 48.419, 48.444), stdev = 0.021
  CI (99.9%): [48.034, 48.805] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 100000)

# Run progress: 71.88% complete, ETA 00:06:48
# Fork: 1 of 1
# Warmup Iteration   1: 50.886 ns/op
# Warmup Iteration   2: 50.606 ns/op
Iteration   1: 48.252 ns/op
Iteration   2: 48.472 ns/op
Iteration   3: 48.242 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  48.322 ±(99.9%) 2.370 ns/op [Average]
  (min, avg, max) = (48.242, 48.322, 48.472), stdev = 0.130
  CI (99.9%): [45.952, 50.692] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000000)

# Run progress: 73.44% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 61.021 ns/op
# Warmup Iteration   2: 58.599 ns/op
Iteration   1: 55.542 ns/op
Iteration   2: 55.564 ns/op
Iteration   3: 55.513 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  55.540 ±(99.9%) 0.471 ns/op [Average]
  (min, avg, max) = (55.513, 55.540, 55.564), stdev = 0.026
  CI (99.9%): [55.069, 56.011] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000)

# Run progress: 75.00% complete, ETA 00:06:03
# Fork: 1 of 1
# Warmup Iteration   1: 103.103 ns/op
# Warmup Iteration   2: 103.512 ns/op
Iteration   1: 89.684 ns/op
Iteration   2: 89.929 ns/op
Iteration   3: 89.812 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  89.808 ±(99.9%) 2.239 ns/op [Average]
  (min, avg, max) = (89.684, 89.808, 89.929), stdev = 0.123
  CI (99.9%): [87.570, 92.047] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 10000)

# Run progress: 76.56% complete, ETA 00:05:40
# Fork: 1 of 1
# Warmup Iteration   1: 102.033 ns/op
# Warmup Iteration   2: 109.335 ns/op
Iteration   1: 91.180 ns/op
Iteration   2: 90.585 ns/op
Iteration   3: 90.390 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  90.718 ±(99.9%) 7.501 ns/op [Average]
  (min, avg, max) = (90.390, 90.718, 91.180), stdev = 0.411
  CI (99.9%): [83.217, 98.219] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 100000)

# Run progress: 78.13% complete, ETA 00:05:17
# Fork: 1 of 1
# Warmup Iteration   1: 101.019 ns/op
# Warmup Iteration   2: 108.762 ns/op
Iteration   1: 90.421 ns/op
Iteration   2: 90.344 ns/op
Iteration   3: 90.336 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  90.367 ±(99.9%) 0.853 ns/op [Average]
  (min, avg, max) = (90.336, 90.367, 90.421), stdev = 0.047
  CI (99.9%): [89.515, 91.220] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000000)

# Run progress: 79.69% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 111.288 ns/op
# Warmup Iteration   2: 110.729 ns/op
Iteration   1: 93.474 ns/op
Iteration   2: 94.561 ns/op
Iteration   3: 94.405 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  94.147 ±(99.9%) 10.726 ns/op [Average]
  (min, avg, max) = (93.474, 94.147, 94.561), stdev = 0.588
  CI (99.9%): [83.421, 104.873] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000)

# Run progress: 81.25% complete, ETA 00:04:32
# Fork: 1 of 1
# Warmup Iteration   1: 49.095 ns/op
# Warmup Iteration   2: 50.369 ns/op
Iteration   1: 47.737 ns/op
Iteration   2: 47.610 ns/op
Iteration   3: 47.692 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  47.680 ±(99.9%) 1.174 ns/op [Average]
  (min, avg, max) = (47.610, 47.680, 47.737), stdev = 0.064
  CI (99.9%): [46.506, 48.854] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 10000)

# Run progress: 82.81% complete, ETA 00:04:10
# Fork: 1 of 1
# Warmup Iteration   1: 48.683 ns/op
# Warmup Iteration   2: 50.156 ns/op
Iteration   1: 47.697 ns/op
Iteration   2: 47.851 ns/op
Iteration   3: 47.818 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  47.788 ±(99.9%) 1.474 ns/op [Average]
  (min, avg, max) = (47.697, 47.788, 47.851), stdev = 0.081
  CI (99.9%): [46.314, 49.263] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 100000)

# Run progress: 84.38% complete, ETA 00:03:47
# Fork: 1 of 1
# Warmup Iteration   1: 47.478 ns/op
# Warmup Iteration   2: 50.153 ns/op
Iteration   1: 46.618 ns/op
Iteration   2: 46.735 ns/op
Iteration   3: 46.701 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  46.685 ±(99.9%) 1.095 ns/op [Average]
  (min, avg, max) = (46.618, 46.685, 46.735), stdev = 0.060
  CI (99.9%): [45.590, 47.779] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000000)

# Run progress: 85.94% complete, ETA 00:03:24
# Fork: 1 of 1
# Warmup Iteration   1: 47.872 ns/op
# Warmup Iteration   2: 49.214 ns/op
Iteration   1: 47.221 ns/op
Iteration   2: 47.180 ns/op
Iteration   3: 47.228 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  47.210 ±(99.9%) 0.466 ns/op [Average]
  (min, avg, max) = (47.180, 47.210, 47.228), stdev = 0.026
  CI (99.9%): [46.743, 47.676] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000)

# Run progress: 87.50% complete, ETA 00:03:01
# Fork: 1 of 1
# Warmup Iteration   1: 265.953 ns/op
# Warmup Iteration   2: 256.112 ns/op
Iteration   1: 271.409 ns/op
Iteration   2: 260.428 ns/op
Iteration   3: 261.014 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  264.284 ±(99.9%) 112.708 ns/op [Average]
  (min, avg, max) = (260.428, 264.284, 271.409), stdev = 6.178
  CI (99.9%): [151.576, 376.992] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 10000)

# Run progress: 89.06% complete, ETA 00:02:39
# Fork: 1 of 1
# Warmup Iteration   1: 397.301 ns/op
# Warmup Iteration   2: 384.549 ns/op
Iteration   1: 385.962 ns/op
Iteration   2: 385.634 ns/op
Iteration   3: 385.772 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  385.789 ±(99.9%) 3.006 ns/op [Average]
  (min, avg, max) = (385.634, 385.789, 385.962), stdev = 0.165
  CI (99.9%): [382.784, 388.795] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 100000)

# Run progress: 90.63% complete, ETA 00:02:16
# Fork: 1 of 1
# Warmup Iteration   1: 409.281 ns/op
# Warmup Iteration   2: 400.850 ns/op
Iteration   1: 407.968 ns/op
Iteration   2: 404.613 ns/op
Iteration   3: 404.483 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  405.688 ±(99.9%) 36.043 ns/op [Average]
  (min, avg, max) = (404.483, 405.688, 407.968), stdev = 1.976
  CI (99.9%): [369.645, 441.731] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000000)

# Run progress: 92.19% complete, ETA 00:01:53
# Fork: 1 of 1
# Warmup Iteration   1: 521.369 ns/op
# Warmup Iteration   2: 511.094 ns/op
Iteration   1: 508.957 ns/op
Iteration   2: 509.905 ns/op
Iteration   3: 508.595 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  509.152 ±(99.9%) 12.344 ns/op [Average]
  (min, avg, max) = (508.595, 509.152, 509.905), stdev = 0.677
  CI (99.9%): [496.809, 521.496] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000)

# Run progress: 93.75% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 208.478 ns/op
# Warmup Iteration   2: 209.546 ns/op
Iteration   1: 206.254 ns/op
Iteration   2: 205.307 ns/op
Iteration   3: 205.359 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  205.640 ±(99.9%) 9.717 ns/op [Average]
  (min, avg, max) = (205.307, 205.640, 206.254), stdev = 0.533
  CI (99.9%): [195.924, 215.357] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 10000)

# Run progress: 95.31% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 267.407 ns/op
# Warmup Iteration   2: 264.008 ns/op
Iteration   1: 263.408 ns/op
Iteration   2: 263.473 ns/op
Iteration   3: 263.207 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  263.363 ±(99.9%) 2.529 ns/op [Average]
  (min, avg, max) = (263.207, 263.363, 263.473), stdev = 0.139
  CI (99.9%): [260.834, 265.891] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 100000)

# Run progress: 96.88% complete, ETA 00:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 329.844 ns/op
# Warmup Iteration   2: 329.217 ns/op
Iteration   1: 321.568 ns/op
Iteration   2: 321.926 ns/op
Iteration   3: 321.822 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  321.772 ±(99.9%) 3.355 ns/op [Average]
  (min, avg, max) = (321.568, 321.772, 321.926), stdev = 0.184
  CI (99.9%): [318.416, 325.127] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000000)

# Run progress: 98.44% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 382.039 ns/op
# Warmup Iteration   2: 378.137 ns/op
Iteration   1: 379.716 ns/op
Iteration   2: 379.726 ns/op
Iteration   3: 379.877 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  379.773 ±(99.9%) 1.648 ns/op [Average]
  (min, avg, max) = (379.716, 379.773, 379.877), stdev = 0.090
  CI (99.9%): [378.125, 381.420] (assumes normal distribution)


# Run complete. Total time: 00:24:15

Benchmark                                         (size)  Mode  Cnt    Score     Error  Units
SetMapJavaVsScalaBenchmarks.javaMapHit              1000  avgt    3  114.966 ±  13.725  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit             10000  avgt    3  115.205 ±  18.664  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit            100000  avgt    3  115.687 ±   9.255  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit           1000000  avgt    3   80.779 ±   8.026  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss             1000  avgt    3   65.975 ±   0.993  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss            10000  avgt    3   59.336 ±   1.091  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss           100000  avgt    3   60.512 ±   0.939  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss          1000000  avgt    3   75.441 ±   0.438  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit              1000  avgt    3  102.292 ±   0.600  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit             10000  avgt    3  103.764 ±  20.924  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit            100000  avgt    3  102.570 ±  13.759  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit           1000000  avgt    3   82.758 ±   1.601  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss             1000  avgt    3   65.460 ±   1.435  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss            10000  avgt    3   65.445 ±   0.460  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss           100000  avgt    3   68.560 ±   1.507  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss          1000000  avgt    3   77.069 ±   0.786  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit       1000  avgt    3  187.236 ±  34.948  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit      10000  avgt    3  192.095 ±  70.745  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit     100000  avgt    3  191.232 ±  45.090  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit    1000000  avgt    3  199.889 ±  17.844  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss      1000  avgt    3  120.839 ±   0.414  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss     10000  avgt    3  113.729 ±  18.772  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss    100000  avgt    3  114.394 ±   6.840  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss   1000000  avgt    3  151.998 ±   3.151  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit       1000  avgt    3  121.241 ±  10.909  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit      10000  avgt    3  128.733 ±   7.344  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit     100000  avgt    3  115.802 ±  19.629  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit    1000000  avgt    3   88.913 ±   3.221  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss      1000  avgt    3   70.145 ±   4.131  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss     10000  avgt    3   78.389 ±  22.533  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss    100000  avgt    3   67.970 ±   1.095  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss   1000000  avgt    3   75.244 ±   0.228  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit             1000  avgt    3  275.114 ±  21.492  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit            10000  avgt    3  364.284 ±   8.716  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit           100000  avgt    3  479.551 ±  37.183  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit          1000000  avgt    3  504.332 ± 137.809  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss            1000  avgt    3  191.843 ±   1.317  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss           10000  avgt    3  260.495 ±   5.305  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss          100000  avgt    3  383.319 ±   5.833  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss         1000000  avgt    3  456.375 ±  22.890  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit      1000  avgt    3   86.933 ±   1.314  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit     10000  avgt    3  108.000 ±  61.383  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit    100000  avgt    3   92.682 ±  35.546  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit   1000000  avgt    3  100.449 ±  12.985  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss     1000  avgt    3   48.634 ±   0.270  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss    10000  avgt    3   48.419 ±   0.385  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss   100000  avgt    3   48.322 ±   2.370  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss  1000000  avgt    3   55.540 ±   0.471  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit      1000  avgt    3   89.808 ±   2.239  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit     10000  avgt    3   90.718 ±   7.501  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit    100000  avgt    3   90.367 ±   0.853  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit   1000000  avgt    3   94.147 ±  10.726  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss     1000  avgt    3   47.680 ±   1.174  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss    10000  avgt    3   47.788 ±   1.474  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss   100000  avgt    3   46.685 ±   1.095  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss  1000000  avgt    3   47.210 ±   0.466  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit             1000  avgt    3  264.284 ± 112.708  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit            10000  avgt    3  385.789 ±   3.006  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit           100000  avgt    3  405.688 ±  36.043  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit          1000000  avgt    3  509.152 ±  12.344  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss            1000  avgt    3  205.640 ±   9.717  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss           10000  avgt    3  263.363 ±   2.529  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss          100000  avgt    3  321.772 ±   3.355  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss         1000000  avgt    3  379.773 ±   1.648  ns/op

Benchmark result is saved to /static/data/charts/set-map-java-vs-scala-2-13/jdk8.json
