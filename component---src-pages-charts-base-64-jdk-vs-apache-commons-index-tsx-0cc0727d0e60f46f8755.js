"use strict";(self.webpackChunkkomanov_com=self.webpackChunkkomanov_com||[]).push([[944],{2531:function(e,n,t){t.r(n);var a=t(2982),o=t(1597),r=t(7294),c=t(5224),l=t(4271),s=["openjdk-17","openjdk-11","openjdk-8"],u=["1","10","50","100","500","1000","10000"],d="10000",m="fixed",i={title:"Library and Operation",prop:"method",values:[{name:"j.u.Base64 regular decode",value:"jdkDecode"},{name:"j.u.Base64 urlSafe decode",value:"jdkUrlDecode"},{name:"Commons regular decode",value:"commonsDecode"},{name:"Commons urlSafe decode",value:"commonsUrlDecode"},{name:"j.u.Base64 regular encode",value:"jdkEncode"},{name:"j.u.Base64 urlSafe encode",value:"jdkUrlEncode"},{name:"Commons regular encode",value:"commonsEncode"},{name:"Commons urlSafe encode",value:"commonsUrlEncode"}]},f={title:"JDK",prop:"jdk",values:s};var h=function(e){return"/data/charts/base64-jdk-vs-apache-commons/"+e},p=(0,c.wZ)((function(e){var n=e.jmhList,t=(0,r.useState)(d),a=t[0],l=t[1],p=(0,r.useState)(m),j=p[0],k=p[1],g=(0,r.useState)("openjdk-17"),E=g[0],v=g[1],D=(0,r.useState)({func:null}),b=D[0],C=D[1];return r.createElement("div",{className:"markdown"},r.createElement("h3",null,"Introduction"),r.createElement("p",null,"Here are benchmarking results for"," ",r.createElement(o.Link,{to:"/p/base64-encoding-performance-jdk-vs-apache-commons"},"«Base64 Encoding Performance: JDK vs Apache Commons»")," ","blog post."),r.createElement("p",null,"The performance tests are performed via"," ",r.createElement("a",{href:"https://github.com/openjdk/jmh"},"JMH"),". The configuration of a hardware is Intel® Core™ i7-1165G7 @ 2.80GHz × 8 (4 core + 4 HT) with 16 GB RAM. Scala version: 2.13.6."),r.createElement("h3",null,"Charts"),r.createElement(c.V2,{label:"Data length:",items:(0,c.Jw)(u,(function(e){return e===d})),onChange:function(e){return l(e)}}),r.createElement(c.V2,{label:"Data set:",items:(0,c.Jw)(["fixed","random"],(function(e){return e===m})),onChange:function(e){return k(e)}}),r.createElement(c.J6,{onChange:function(e){return C({func:e})}}),r.createElement("h4",null,"Encoding/Decoding Performance for various JDKs"),r.createElement(c.We,{dataTable:n,extractor:b.func,filter:function(e){return e.length===a&&e.dataset===j},title:"Encoding/Decoding, nanos",xDesc:i,yDesc:f}),r.createElement("h4",null,"Performance for different data sizes"),r.createElement(c.V2,{label:"JDK:",items:(0,c.Jw)(s,(function(e,n){return 0===n})),onChange:function(e){return v(e)}}),r.createElement(c.We,{chartType:"LineChart",dataTable:n,extractor:b.func,filter:function(e){return e.jdk===E&&e.dataset===j},title:"Encoding/Decoding, nanos",xDesc:i,yDesc:{title:"Data length",prop:"length",values:u},options:{hAxis:{title:"Data length"},vAxis:{title:"time, nanoseconds"}}}),r.createElement("p",null,"Full JMH logs:",r.createElement("a",{href:h("jdk8.log.txt")},"openjdk-8"),","," ",r.createElement("a",{href:h("jdk11.log.txt")},"openjdk-11"),","," ",r.createElement("a",{href:h("jdk17.log.txt")},"openjdk-17"),"."))}),{fetchFunc:function(){return Promise.all([(0,l._l)(h("jdk8.json")),(0,l._l)(h("jdk11.json")),(0,l._l)(h("jdk17.json"))]).then((function(e){function n(n,t){var a=e[n].data;return a.forEach((function(e){return e.params=Object.assign({},e.params,{jdk:t})})),a}return{data:[].concat((0,a.Z)(n(0,"openjdk-8")),(0,a.Z)(n(1,"openjdk-11")),(0,a.Z)(n(2,"openjdk-17")))}}))},exportDimensionsFunc:function(e,n){var t=e.substring(e.lastIndexOf(".")+1);return Object.assign({method:t},n)},headerText:"Base64 Encoding Performance: JDK vs Apache Commons (Charts)"});n.default=p}}]);
//# sourceMappingURL=component---src-pages-charts-base-64-jdk-vs-apache-commons-index-tsx-0cc0727d0e60f46f8755.js.map