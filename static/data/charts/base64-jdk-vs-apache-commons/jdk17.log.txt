# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:18:40
# Fork: 1 of 1
# Warmup Iteration   1: 1960.877 ns/op
# Warmup Iteration   2: 1220.440 ns/op
# Warmup Iteration   3: 1259.725 ns/op
# Warmup Iteration   4: 1556.585 ns/op
# Warmup Iteration   5: 1621.087 ns/op
Iteration   1: 1522.751 ns/op
Iteration   2: 1330.780 ns/op
Iteration   3: 1281.411 ns/op
Iteration   4: 1020.803 ns/op
Iteration   5: 1042.387 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1239.626 ±(99.9%) 810.013 ns/op [Average]
  (min, avg, max) = (1020.803, 1239.626, 1522.751), stdev = 210.358
  CI (99.9%): [429.613, 2049.640] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.89% complete, ETA 00:19:34
# Fork: 1 of 1
# Warmup Iteration   1: 1500.442 ns/op
# Warmup Iteration   2: 1586.297 ns/op
# Warmup Iteration   3: 1679.810 ns/op
# Warmup Iteration   4: 1202.362 ns/op
# Warmup Iteration   5: 1278.140 ns/op
Iteration   1: 1292.449 ns/op
Iteration   2: 1186.114 ns/op
Iteration   3: 1349.023 ns/op
Iteration   4: 1270.443 ns/op
Iteration   5: 1378.686 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1295.343 ±(99.9%) 288.072 ns/op [Average]
  (min, avg, max) = (1186.114, 1295.343, 1378.686), stdev = 74.811
  CI (99.9%): [1007.272, 1583.415] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 1.79% complete, ETA 00:19:23
# Fork: 1 of 1
# Warmup Iteration   1: 2703.605 ns/op
# Warmup Iteration   2: 2459.549 ns/op
# Warmup Iteration   3: 1828.379 ns/op
# Warmup Iteration   4: 1814.956 ns/op
# Warmup Iteration   5: 1859.641 ns/op
Iteration   1: 1878.616 ns/op
Iteration   2: 1928.787 ns/op
Iteration   3: 1884.486 ns/op
Iteration   4: 2288.282 ns/op
Iteration   5: 1934.955 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1983.025 ±(99.9%) 664.293 ns/op [Average]
  (min, avg, max) = (1878.616, 1983.025, 2288.282), stdev = 172.515
  CI (99.9%): [1318.732, 2647.318] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 2.68% complete, ETA 00:19:12
# Fork: 1 of 1
# Warmup Iteration   1: 3233.260 ns/op
# Warmup Iteration   2: 2717.182 ns/op
# Warmup Iteration   3: 2758.739 ns/op
# Warmup Iteration   4: 2696.948 ns/op
# Warmup Iteration   5: 2654.180 ns/op
Iteration   1: 2503.746 ns/op
Iteration   2: 2468.104 ns/op
Iteration   3: 2557.870 ns/op
Iteration   4: 2589.871 ns/op
Iteration   5: 2570.531 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  2538.024 ±(99.9%) 194.473 ns/op [Average]
  (min, avg, max) = (2468.104, 2538.024, 2589.871), stdev = 50.504
  CI (99.9%): [2343.552, 2732.497] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 3.57% complete, ETA 00:19:01
# Fork: 1 of 1
# Warmup Iteration   1: 9761.545 ns/op
# Warmup Iteration   2: 8797.469 ns/op
# Warmup Iteration   3: 8654.149 ns/op
# Warmup Iteration   4: 8631.920 ns/op
# Warmup Iteration   5: 8466.717 ns/op
Iteration   1: 8780.359 ns/op
Iteration   2: 8690.123 ns/op
Iteration   3: 8526.736 ns/op
Iteration   4: 8762.102 ns/op
Iteration   5: 8570.183 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  8665.901 ±(99.9%) 436.801 ns/op [Average]
  (min, avg, max) = (8526.736, 8665.901, 8780.359), stdev = 113.436
  CI (99.9%): [8229.099, 9102.702] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 4.46% complete, ETA 00:18:49
# Fork: 1 of 1
# Warmup Iteration   1: 16106.800 ns/op
# Warmup Iteration   2: 15368.842 ns/op
# Warmup Iteration   3: 14625.225 ns/op
# Warmup Iteration   4: 14409.379 ns/op
# Warmup Iteration   5: 14637.763 ns/op
Iteration   1: 14461.001 ns/op
Iteration   2: 14710.397 ns/op
Iteration   3: 14341.970 ns/op
Iteration   4: 15053.350 ns/op
Iteration   5: 14564.253 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  14626.194 ±(99.9%) 1057.107 ns/op [Average]
  (min, avg, max) = (14341.970, 14626.194, 15053.350), stdev = 274.527
  CI (99.9%): [13569.087, 15683.302] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 5.36% complete, ETA 00:18:37
# Fork: 1 of 1
# Warmup Iteration   1: 135769.093 ns/op
# Warmup Iteration   2: 122061.283 ns/op
# Warmup Iteration   3: 123259.202 ns/op
# Warmup Iteration   4: 126748.651 ns/op
# Warmup Iteration   5: 123744.503 ns/op
Iteration   1: 123025.464 ns/op
Iteration   2: 125563.500 ns/op
Iteration   3: 130800.035 ns/op
Iteration   4: 125936.285 ns/op
Iteration   5: 121340.346 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  125333.126 ±(99.9%) 13826.382 ns/op [Average]
  (min, avg, max) = (121340.346, 125333.126, 130800.035), stdev = 3590.667
  CI (99.9%): [111506.745, 139159.508] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 6.25% complete, ETA 00:18:26
# Fork: 1 of 1
# Warmup Iteration   1: 1248.097 ns/op
# Warmup Iteration   2: 990.519 ns/op
# Warmup Iteration   3: 1002.172 ns/op
# Warmup Iteration   4: 978.807 ns/op
# Warmup Iteration   5: 978.801 ns/op
Iteration   1: 1011.668 ns/op
Iteration   2: 988.071 ns/op
Iteration   3: 1011.663 ns/op
Iteration   4: 1048.796 ns/op
Iteration   5: 993.542 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1010.748 ±(99.9%) 91.521 ns/op [Average]
  (min, avg, max) = (988.071, 1010.748, 1048.796), stdev = 23.768
  CI (99.9%): [919.227, 1102.269] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 7.14% complete, ETA 00:18:15
# Fork: 1 of 1
# Warmup Iteration   1: 1351.712 ns/op
# Warmup Iteration   2: 1054.976 ns/op
# Warmup Iteration   3: 1074.680 ns/op
# Warmup Iteration   4: 1034.296 ns/op
# Warmup Iteration   5: 1010.267 ns/op
Iteration   1: 1050.444 ns/op
Iteration   2: 1104.059 ns/op
Iteration   3: 996.320 ns/op
Iteration   4: 1003.175 ns/op
Iteration   5: 1006.524 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1032.104 ±(99.9%) 175.253 ns/op [Average]
  (min, avg, max) = (996.320, 1032.104, 1104.059), stdev = 45.513
  CI (99.9%): [856.852, 1207.357] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 8.04% complete, ETA 00:18:05
# Fork: 1 of 1
# Warmup Iteration   1: 1642.980 ns/op
# Warmup Iteration   2: 1327.009 ns/op
# Warmup Iteration   3: 1292.467 ns/op
# Warmup Iteration   4: 1297.230 ns/op
# Warmup Iteration   5: 1299.104 ns/op
Iteration   1: 1294.941 ns/op
Iteration   2: 1299.041 ns/op
Iteration   3: 1291.910 ns/op
Iteration   4: 1293.470 ns/op
Iteration   5: 1296.116 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1295.096 ±(99.9%) 10.444 ns/op [Average]
  (min, avg, max) = (1291.910, 1295.096, 1299.041), stdev = 2.712
  CI (99.9%): [1284.652, 1305.540] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 8.93% complete, ETA 00:17:54
# Fork: 1 of 1
# Warmup Iteration   1: 2077.210 ns/op
# Warmup Iteration   2: 1715.406 ns/op
# Warmup Iteration   3: 1696.620 ns/op
# Warmup Iteration   4: 1698.175 ns/op
# Warmup Iteration   5: 1696.652 ns/op
Iteration   1: 1698.438 ns/op
Iteration   2: 1691.710 ns/op
Iteration   3: 1693.690 ns/op
Iteration   4: 1693.242 ns/op
Iteration   5: 1697.377 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1694.891 ±(99.9%) 11.067 ns/op [Average]
  (min, avg, max) = (1691.710, 1694.891, 1698.438), stdev = 2.874
  CI (99.9%): [1683.824, 1705.959] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 9.82% complete, ETA 00:17:43
# Fork: 1 of 1
# Warmup Iteration   1: 5867.751 ns/op
# Warmup Iteration   2: 5112.067 ns/op
# Warmup Iteration   3: 5043.960 ns/op
# Warmup Iteration   4: 5055.844 ns/op
# Warmup Iteration   5: 5070.930 ns/op
Iteration   1: 5083.960 ns/op
Iteration   2: 5025.778 ns/op
Iteration   3: 5045.234 ns/op
Iteration   4: 5078.506 ns/op
Iteration   5: 5048.894 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  5056.474 ±(99.9%) 93.669 ns/op [Average]
  (min, avg, max) = (5025.778, 5056.474, 5083.960), stdev = 24.325
  CI (99.9%): [4962.806, 5150.143] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 10.71% complete, ETA 00:17:32
# Fork: 1 of 1
# Warmup Iteration   1: 10565.702 ns/op
# Warmup Iteration   2: 9561.752 ns/op
# Warmup Iteration   3: 9550.803 ns/op
# Warmup Iteration   4: 9450.608 ns/op
# Warmup Iteration   5: 9353.977 ns/op
Iteration   1: 10314.903 ns/op
Iteration   2: 9740.143 ns/op
Iteration   3: 9427.336 ns/op
Iteration   4: 9409.308 ns/op
Iteration   5: 9419.117 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  9662.161 ±(99.9%) 1504.097 ns/op [Average]
  (min, avg, max) = (9409.308, 9662.161, 10314.903), stdev = 390.609
  CI (99.9%): [8158.065, 11166.258] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 11.61% complete, ETA 00:17:22
# Fork: 1 of 1
# Warmup Iteration   1: 101131.263 ns/op
# Warmup Iteration   2: 89275.743 ns/op
# Warmup Iteration   3: 88349.150 ns/op
# Warmup Iteration   4: 88530.399 ns/op
# Warmup Iteration   5: 88480.348 ns/op
Iteration   1: 107587.266 ns/op
Iteration   2: 87635.181 ns/op
Iteration   3: 88717.133 ns/op
Iteration   4: 92508.506 ns/op
Iteration   5: 102116.942 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  95713.006 ±(99.9%) 33705.276 ns/op [Average]
  (min, avg, max) = (87635.181, 95713.006, 107587.266), stdev = 8753.153
  CI (99.9%): [62007.730, 129418.282] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 12.50% complete, ETA 00:17:11
# Fork: 1 of 1
# Warmup Iteration   1: 1484.041 ns/op
# Warmup Iteration   2: 1133.139 ns/op
# Warmup Iteration   3: 1044.457 ns/op
# Warmup Iteration   4: 1096.417 ns/op
# Warmup Iteration   5: 978.514 ns/op
Iteration   1: 987.618 ns/op
Iteration   2: 969.488 ns/op
Iteration   3: 979.749 ns/op
Iteration   4: 968.013 ns/op
Iteration   5: 972.778 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  975.529 ±(99.9%) 31.313 ns/op [Average]
  (min, avg, max) = (968.013, 975.529, 987.618), stdev = 8.132
  CI (99.9%): [944.216, 1006.842] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 13.39% complete, ETA 00:17:01
# Fork: 1 of 1
# Warmup Iteration   1: 1358.963 ns/op
# Warmup Iteration   2: 1050.770 ns/op
# Warmup Iteration   3: 1012.469 ns/op
# Warmup Iteration   4: 1010.055 ns/op
# Warmup Iteration   5: 1051.983 ns/op
Iteration   1: 1037.860 ns/op
Iteration   2: 1013.053 ns/op
Iteration   3: 1078.359 ns/op
Iteration   4: 1125.131 ns/op
Iteration   5: 1060.647 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1063.010 ±(99.9%) 163.691 ns/op [Average]
  (min, avg, max) = (1013.053, 1063.010, 1125.131), stdev = 42.510
  CI (99.9%): [899.319, 1226.701] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 14.29% complete, ETA 00:16:50
# Fork: 1 of 1
# Warmup Iteration   1: 1985.876 ns/op
# Warmup Iteration   2: 1734.170 ns/op
# Warmup Iteration   3: 1524.282 ns/op
# Warmup Iteration   4: 1530.574 ns/op
# Warmup Iteration   5: 1494.057 ns/op
Iteration   1: 1501.597 ns/op
Iteration   2: 1664.975 ns/op
Iteration   3: 1586.008 ns/op
Iteration   4: 1603.929 ns/op
Iteration   5: 1493.745 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1570.051 ±(99.9%) 278.484 ns/op [Average]
  (min, avg, max) = (1493.745, 1570.051, 1664.975), stdev = 72.321
  CI (99.9%): [1291.567, 1848.534] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 15.18% complete, ETA 00:16:40
# Fork: 1 of 1
# Warmup Iteration   1: 2658.567 ns/op
# Warmup Iteration   2: 2270.720 ns/op
# Warmup Iteration   3: 2159.950 ns/op
# Warmup Iteration   4: 2167.456 ns/op
# Warmup Iteration   5: 2215.767 ns/op
Iteration   1: 2188.156 ns/op
Iteration   2: 2166.385 ns/op
Iteration   3: 2214.741 ns/op
Iteration   4: 2179.084 ns/op
Iteration   5: 2167.872 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  2183.248 ±(99.9%) 75.897 ns/op [Average]
  (min, avg, max) = (2166.385, 2183.248, 2214.741), stdev = 19.710
  CI (99.9%): [2107.350, 2259.145] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 16.07% complete, ETA 00:16:29
# Fork: 1 of 1
# Warmup Iteration   1: 8362.271 ns/op
# Warmup Iteration   2: 7485.988 ns/op
# Warmup Iteration   3: 7408.345 ns/op
# Warmup Iteration   4: 7397.262 ns/op
# Warmup Iteration   5: 7442.291 ns/op
Iteration   1: 7399.867 ns/op
Iteration   2: 7412.702 ns/op
Iteration   3: 7386.816 ns/op
Iteration   4: 7607.379 ns/op
Iteration   5: 7395.174 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  7440.388 ±(99.9%) 361.266 ns/op [Average]
  (min, avg, max) = (7386.816, 7440.388, 7607.379), stdev = 93.820
  CI (99.9%): [7079.122, 7801.654] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 16.96% complete, ETA 00:16:19
# Fork: 1 of 1
# Warmup Iteration   1: 15820.679 ns/op
# Warmup Iteration   2: 14505.597 ns/op
# Warmup Iteration   3: 14267.038 ns/op
# Warmup Iteration   4: 14264.092 ns/op
# Warmup Iteration   5: 14229.831 ns/op
Iteration   1: 14217.816 ns/op
Iteration   2: 14228.183 ns/op
Iteration   3: 14270.691 ns/op
Iteration   4: 14262.620 ns/op
Iteration   5: 14277.045 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  14251.271 ±(99.9%) 102.288 ns/op [Average]
  (min, avg, max) = (14217.816, 14251.271, 14277.045), stdev = 26.564
  CI (99.9%): [14148.983, 14353.559] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 17.86% complete, ETA 00:16:08
# Fork: 1 of 1
# Warmup Iteration   1: 146888.164 ns/op
# Warmup Iteration   2: 134737.504 ns/op
# Warmup Iteration   3: 132462.923 ns/op
# Warmup Iteration   4: 132536.763 ns/op
# Warmup Iteration   5: 132351.668 ns/op
Iteration   1: 132611.802 ns/op
Iteration   2: 132722.639 ns/op
Iteration   3: 151579.506 ns/op
Iteration   4: 134347.108 ns/op
Iteration   5: 134699.995 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  137192.210 ±(99.9%) 31179.354 ns/op [Average]
  (min, avg, max) = (132611.802, 137192.210, 151579.506), stdev = 8097.179
  CI (99.9%): [106012.856, 168371.564] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 18.75% complete, ETA 00:15:57
# Fork: 1 of 1
# Warmup Iteration   1: 1316.619 ns/op
# Warmup Iteration   2: 1110.576 ns/op
# Warmup Iteration   3: 1039.475 ns/op
# Warmup Iteration   4: 980.104 ns/op
# Warmup Iteration   5: 995.993 ns/op
Iteration   1: 968.670 ns/op
Iteration   2: 978.340 ns/op
Iteration   3: 975.724 ns/op
Iteration   4: 976.041 ns/op
Iteration   5: 974.487 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  974.652 ±(99.9%) 13.949 ns/op [Average]
  (min, avg, max) = (968.670, 974.652, 978.340), stdev = 3.623
  CI (99.9%): [960.703, 988.602] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 19.64% complete, ETA 00:15:47
# Fork: 1 of 1
# Warmup Iteration   1: 1304.154 ns/op
# Warmup Iteration   2: 1043.065 ns/op
# Warmup Iteration   3: 999.940 ns/op
# Warmup Iteration   4: 999.260 ns/op
# Warmup Iteration   5: 992.665 ns/op
Iteration   1: 1002.101 ns/op
Iteration   2: 997.084 ns/op
Iteration   3: 1004.672 ns/op
Iteration   4: 998.017 ns/op
Iteration   5: 1012.635 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1002.902 ±(99.9%) 24.064 ns/op [Average]
  (min, avg, max) = (997.084, 1002.902, 1012.635), stdev = 6.249
  CI (99.9%): [978.838, 1026.966] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 20.54% complete, ETA 00:15:36
# Fork: 1 of 1
# Warmup Iteration   1: 1845.851 ns/op
# Warmup Iteration   2: 1360.628 ns/op
# Warmup Iteration   3: 1368.785 ns/op
# Warmup Iteration   4: 1398.807 ns/op
# Warmup Iteration   5: 1538.876 ns/op
Iteration   1: 1388.223 ns/op
Iteration   2: 1404.758 ns/op
Iteration   3: 1352.443 ns/op
Iteration   4: 1336.769 ns/op
Iteration   5: 1346.798 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1365.798 ±(99.9%) 112.311 ns/op [Average]
  (min, avg, max) = (1336.769, 1365.798, 1404.758), stdev = 29.167
  CI (99.9%): [1253.487, 1478.109] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 21.43% complete, ETA 00:15:25
# Fork: 1 of 1
# Warmup Iteration   1: 2245.758 ns/op
# Warmup Iteration   2: 1960.867 ns/op
# Warmup Iteration   3: 1950.666 ns/op
# Warmup Iteration   4: 1849.347 ns/op
# Warmup Iteration   5: 1897.150 ns/op
Iteration   1: 1996.213 ns/op
Iteration   2: 1840.621 ns/op
Iteration   3: 1855.629 ns/op
Iteration   4: 1842.962 ns/op
Iteration   5: 1842.518 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1875.589 ±(99.9%) 260.663 ns/op [Average]
  (min, avg, max) = (1840.621, 1875.589, 1996.213), stdev = 67.693
  CI (99.9%): [1614.926, 2136.251] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 22.32% complete, ETA 00:15:15
# Fork: 1 of 1
# Warmup Iteration   1: 6742.369 ns/op
# Warmup Iteration   2: 5922.351 ns/op
# Warmup Iteration   3: 5856.165 ns/op
# Warmup Iteration   4: 6053.939 ns/op
# Warmup Iteration   5: 5851.820 ns/op
Iteration   1: 5827.217 ns/op
Iteration   2: 5865.542 ns/op
Iteration   3: 5839.306 ns/op
Iteration   4: 5891.841 ns/op
Iteration   5: 5877.097 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  5860.201 ±(99.9%) 102.598 ns/op [Average]
  (min, avg, max) = (5827.217, 5860.201, 5891.841), stdev = 26.644
  CI (99.9%): [5757.603, 5962.798] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 23.21% complete, ETA 00:15:04
# Fork: 1 of 1
# Warmup Iteration   1: 12445.738 ns/op
# Warmup Iteration   2: 11132.461 ns/op
# Warmup Iteration   3: 11179.462 ns/op
# Warmup Iteration   4: 11033.924 ns/op
# Warmup Iteration   5: 11067.749 ns/op
Iteration   1: 11085.400 ns/op
Iteration   2: 11735.721 ns/op
Iteration   3: 11583.060 ns/op
Iteration   4: 11388.924 ns/op
Iteration   5: 11543.618 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  11467.344 ±(99.9%) 949.605 ns/op [Average]
  (min, avg, max) = (11085.400, 11467.344, 11735.721), stdev = 246.609
  CI (99.9%): [10517.739, 12416.950] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 24.11% complete, ETA 00:14:54
# Fork: 1 of 1
# Warmup Iteration   1: 113304.502 ns/op
# Warmup Iteration   2: 98960.033 ns/op
# Warmup Iteration   3: 97948.091 ns/op
# Warmup Iteration   4: 100901.326 ns/op
# Warmup Iteration   5: 98512.789 ns/op
Iteration   1: 99812.201 ns/op
Iteration   2: 99754.392 ns/op
Iteration   3: 97827.970 ns/op
Iteration   4: 98304.218 ns/op
Iteration   5: 98092.374 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  98758.231 ±(99.9%) 3662.199 ns/op [Average]
  (min, avg, max) = (97827.970, 98758.231, 99812.201), stdev = 951.061
  CI (99.9%): [95096.033, 102420.430] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 25.00% complete, ETA 00:14:43
# Fork: 1 of 1
# Warmup Iteration   1: 1291.008 ns/op
# Warmup Iteration   2: 1045.336 ns/op
# Warmup Iteration   3: 1006.910 ns/op
# Warmup Iteration   4: 1053.057 ns/op
# Warmup Iteration   5: 1039.515 ns/op
Iteration   1: 1009.098 ns/op
Iteration   2: 1007.208 ns/op
Iteration   3: 1005.658 ns/op
Iteration   4: 1096.636 ns/op
Iteration   5: 1087.327 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1041.185 ±(99.9%) 179.067 ns/op [Average]
  (min, avg, max) = (1005.658, 1041.185, 1096.636), stdev = 46.503
  CI (99.9%): [862.118, 1220.253] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 25.89% complete, ETA 00:14:33
# Fork: 1 of 1
# Warmup Iteration   1: 1462.913 ns/op
# Warmup Iteration   2: 1141.311 ns/op
# Warmup Iteration   3: 1199.519 ns/op
# Warmup Iteration   4: 1194.942 ns/op
# Warmup Iteration   5: 1379.671 ns/op
Iteration   1: 1344.987 ns/op
Iteration   2: 1541.295 ns/op
Iteration   3: 1348.065 ns/op
Iteration   4: 1187.867 ns/op
Iteration   5: 1250.847 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1334.612 ±(99.9%) 515.027 ns/op [Average]
  (min, avg, max) = (1187.867, 1334.612, 1541.295), stdev = 133.751
  CI (99.9%): [819.585, 1849.640] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 26.79% complete, ETA 00:14:22
# Fork: 1 of 1
# Warmup Iteration   1: 2150.087 ns/op
# Warmup Iteration   2: 1787.685 ns/op
# Warmup Iteration   3: 1747.519 ns/op
# Warmup Iteration   4: 1750.873 ns/op
# Warmup Iteration   5: 2085.371 ns/op
Iteration   1: 2089.633 ns/op
Iteration   2: 1811.838 ns/op
Iteration   3: 2006.099 ns/op
Iteration   4: 1773.602 ns/op
Iteration   5: 1778.282 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1891.891 ±(99.9%) 562.816 ns/op [Average]
  (min, avg, max) = (1773.602, 1891.891, 2089.633), stdev = 146.162
  CI (99.9%): [1329.075, 2454.707] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 27.68% complete, ETA 00:14:12
# Fork: 1 of 1
# Warmup Iteration   1: 3148.885 ns/op
# Warmup Iteration   2: 2737.513 ns/op
# Warmup Iteration   3: 2668.447 ns/op
# Warmup Iteration   4: 2714.231 ns/op
# Warmup Iteration   5: 2626.923 ns/op
Iteration   1: 2682.963 ns/op
Iteration   2: 2612.966 ns/op
Iteration   3: 2740.135 ns/op
Iteration   4: 2678.041 ns/op
Iteration   5: 2688.403 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  2680.502 ±(99.9%) 174.258 ns/op [Average]
  (min, avg, max) = (2612.966, 2680.502, 2740.135), stdev = 45.254
  CI (99.9%): [2506.243, 2854.760] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 28.57% complete, ETA 00:14:01
# Fork: 1 of 1
# Warmup Iteration   1: 10847.870 ns/op
# Warmup Iteration   2: 9727.399 ns/op
# Warmup Iteration   3: 9687.053 ns/op
# Warmup Iteration   4: 9793.620 ns/op
# Warmup Iteration   5: 9622.774 ns/op
Iteration   1: 9604.619 ns/op
Iteration   2: 9636.543 ns/op
Iteration   3: 9590.651 ns/op
Iteration   4: 9570.579 ns/op
Iteration   5: 9553.342 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  9591.147 ±(99.9%) 123.203 ns/op [Average]
  (min, avg, max) = (9553.342, 9591.147, 9636.543), stdev = 31.995
  CI (99.9%): [9467.944, 9714.349] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 29.46% complete, ETA 00:13:51
# Fork: 1 of 1
# Warmup Iteration   1: 15002.042 ns/op
# Warmup Iteration   2: 13668.603 ns/op
# Warmup Iteration   3: 13578.185 ns/op
# Warmup Iteration   4: 14371.545 ns/op
# Warmup Iteration   5: 13502.756 ns/op
Iteration   1: 13312.997 ns/op
Iteration   2: 13964.034 ns/op
Iteration   3: 13501.747 ns/op
Iteration   4: 13433.704 ns/op
Iteration   5: 13961.853 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  13634.867 ±(99.9%) 1182.246 ns/op [Average]
  (min, avg, max) = (13312.997, 13634.867, 13964.034), stdev = 307.026
  CI (99.9%): [12452.621, 14817.113] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 30.36% complete, ETA 00:13:40
# Fork: 1 of 1
# Warmup Iteration   1: 154010.624 ns/op
# Warmup Iteration   2: 145567.756 ns/op
# Warmup Iteration   3: 131292.587 ns/op
# Warmup Iteration   4: 124033.269 ns/op
# Warmup Iteration   5: 122781.809 ns/op
Iteration   1: 123518.114 ns/op
Iteration   2: 123206.069 ns/op
Iteration   3: 128778.063 ns/op
Iteration   4: 122874.679 ns/op
Iteration   5: 127176.368 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  125110.659 ±(99.9%) 10346.751 ns/op [Average]
  (min, avg, max) = (122874.679, 125110.659, 128778.063), stdev = 2687.018
  CI (99.9%): [114763.907, 135457.410] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 31.25% complete, ETA 00:13:29
# Fork: 1 of 1
# Warmup Iteration   1: 1247.164 ns/op
# Warmup Iteration   2: 1028.405 ns/op
# Warmup Iteration   3: 1042.725 ns/op
# Warmup Iteration   4: 992.341 ns/op
# Warmup Iteration   5: 991.055 ns/op
Iteration   1: 996.753 ns/op
Iteration   2: 991.798 ns/op
Iteration   3: 982.491 ns/op
Iteration   4: 998.630 ns/op
Iteration   5: 987.584 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  991.451 ±(99.9%) 25.470 ns/op [Average]
  (min, avg, max) = (982.491, 991.451, 998.630), stdev = 6.614
  CI (99.9%): [965.981, 1016.921] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 32.14% complete, ETA 00:13:19
# Fork: 1 of 1
# Warmup Iteration   1: 1329.117 ns/op
# Warmup Iteration   2: 1162.082 ns/op
# Warmup Iteration   3: 994.589 ns/op
# Warmup Iteration   4: 1000.816 ns/op
# Warmup Iteration   5: 1031.541 ns/op
Iteration   1: 1029.648 ns/op
Iteration   2: 996.980 ns/op
Iteration   3: 1023.574 ns/op
Iteration   4: 998.617 ns/op
Iteration   5: 1026.193 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1015.002 ±(99.9%) 61.081 ns/op [Average]
  (min, avg, max) = (996.980, 1015.002, 1029.648), stdev = 15.863
  CI (99.9%): [953.921, 1076.083] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 33.04% complete, ETA 00:13:08
# Fork: 1 of 1
# Warmup Iteration   1: 1625.582 ns/op
# Warmup Iteration   2: 1312.149 ns/op
# Warmup Iteration   3: 1292.063 ns/op
# Warmup Iteration   4: 1299.899 ns/op
# Warmup Iteration   5: 1294.014 ns/op
Iteration   1: 1302.291 ns/op
Iteration   2: 1440.144 ns/op
Iteration   3: 1394.217 ns/op
Iteration   4: 1294.272 ns/op
Iteration   5: 1317.722 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1349.729 ±(99.9%) 247.345 ns/op [Average]
  (min, avg, max) = (1294.272, 1349.729, 1440.144), stdev = 64.235
  CI (99.9%): [1102.385, 1597.074] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 33.93% complete, ETA 00:12:58
# Fork: 1 of 1
# Warmup Iteration   1: 2172.738 ns/op
# Warmup Iteration   2: 1746.631 ns/op
# Warmup Iteration   3: 1726.707 ns/op
# Warmup Iteration   4: 1722.166 ns/op
# Warmup Iteration   5: 1732.672 ns/op
Iteration   1: 1767.805 ns/op
Iteration   2: 1770.068 ns/op
Iteration   3: 1777.954 ns/op
Iteration   4: 1745.910 ns/op
Iteration   5: 1895.041 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1791.355 ±(99.9%) 227.834 ns/op [Average]
  (min, avg, max) = (1745.910, 1791.355, 1895.041), stdev = 59.168
  CI (99.9%): [1563.522, 2019.189] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 34.82% complete, ETA 00:12:47
# Fork: 1 of 1
# Warmup Iteration   1: 5976.562 ns/op
# Warmup Iteration   2: 5492.937 ns/op
# Warmup Iteration   3: 5650.051 ns/op
# Warmup Iteration   4: 7865.594 ns/op
# Warmup Iteration   5: 6722.487 ns/op
Iteration   1: 6650.252 ns/op
Iteration   2: 5951.919 ns/op
Iteration   3: 5416.981 ns/op
Iteration   4: 5342.741 ns/op
Iteration   5: 5761.020 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  5824.583 ±(99.9%) 2019.564 ns/op [Average]
  (min, avg, max) = (5342.741, 5824.583, 6650.252), stdev = 524.474
  CI (99.9%): [3805.018, 7844.147] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 35.71% complete, ETA 00:12:37
# Fork: 1 of 1
# Warmup Iteration   1: 12070.038 ns/op
# Warmup Iteration   2: 9964.950 ns/op
# Warmup Iteration   3: 9630.615 ns/op
# Warmup Iteration   4: 10436.459 ns/op
# Warmup Iteration   5: 10046.934 ns/op
Iteration   1: 9514.573 ns/op
Iteration   2: 9876.130 ns/op
Iteration   3: 10044.060 ns/op
Iteration   4: 10115.294 ns/op
Iteration   5: 9538.730 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  9817.758 ±(99.9%) 1077.020 ns/op [Average]
  (min, avg, max) = (9514.573, 9817.758, 10115.294), stdev = 279.699
  CI (99.9%): [8740.737, 10894.778] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 36.61% complete, ETA 00:12:26
# Fork: 1 of 1
# Warmup Iteration   1: 110077.719 ns/op
# Warmup Iteration   2: 89805.806 ns/op
# Warmup Iteration   3: 89638.983 ns/op
# Warmup Iteration   4: 87479.592 ns/op
# Warmup Iteration   5: 91757.323 ns/op
Iteration   1: 95238.311 ns/op
Iteration   2: 95069.859 ns/op
Iteration   3: 105880.522 ns/op
Iteration   4: 89845.643 ns/op
Iteration   5: 89688.398 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  95144.546 ±(99.9%) 25332.691 ns/op [Average]
  (min, avg, max) = (89688.398, 95144.546, 105880.522), stdev = 6578.820
  CI (99.9%): [69811.855, 120477.238] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 37.50% complete, ETA 00:12:16
# Fork: 1 of 1
# Warmup Iteration   1: 1362.999 ns/op
# Warmup Iteration   2: 983.448 ns/op
# Warmup Iteration   3: 972.363 ns/op
# Warmup Iteration   4: 972.945 ns/op
# Warmup Iteration   5: 968.723 ns/op
Iteration   1: 1019.374 ns/op
Iteration   2: 978.172 ns/op
Iteration   3: 1042.337 ns/op
Iteration   4: 1062.069 ns/op
Iteration   5: 1000.475 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1020.486 ±(99.9%) 127.693 ns/op [Average]
  (min, avg, max) = (978.172, 1020.486, 1062.069), stdev = 33.162
  CI (99.9%): [892.792, 1148.179] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 38.39% complete, ETA 00:12:05
# Fork: 1 of 1
# Warmup Iteration   1: 1386.569 ns/op
# Warmup Iteration   2: 1033.058 ns/op
# Warmup Iteration   3: 1074.571 ns/op
# Warmup Iteration   4: 1055.275 ns/op
# Warmup Iteration   5: 1278.224 ns/op
Iteration   1: 1262.098 ns/op
Iteration   2: 1185.235 ns/op
Iteration   3: 1121.739 ns/op
Iteration   4: 1155.103 ns/op
Iteration   5: 1110.422 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1166.919 ±(99.9%) 233.967 ns/op [Average]
  (min, avg, max) = (1110.422, 1166.919, 1262.098), stdev = 60.761
  CI (99.9%): [932.952, 1400.886] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 39.29% complete, ETA 00:11:55
# Fork: 1 of 1
# Warmup Iteration   1: 2035.956 ns/op
# Warmup Iteration   2: 1927.628 ns/op
# Warmup Iteration   3: 1763.185 ns/op
# Warmup Iteration   4: 1818.812 ns/op
# Warmup Iteration   5: 1677.517 ns/op
Iteration   1: 1597.974 ns/op
Iteration   2: 1656.726 ns/op
Iteration   3: 1564.405 ns/op
Iteration   4: 1640.171 ns/op
Iteration   5: 1762.791 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1644.413 ±(99.9%) 290.339 ns/op [Average]
  (min, avg, max) = (1564.405, 1644.413, 1762.791), stdev = 75.400
  CI (99.9%): [1354.074, 1934.753] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 40.18% complete, ETA 00:11:44
# Fork: 1 of 1
# Warmup Iteration   1: 3013.277 ns/op
# Warmup Iteration   2: 2261.895 ns/op
# Warmup Iteration   3: 2468.893 ns/op
# Warmup Iteration   4: 2616.040 ns/op
# Warmup Iteration   5: 2503.229 ns/op
Iteration   1: 2291.154 ns/op
Iteration   2: 2144.636 ns/op
Iteration   3: 2260.047 ns/op
Iteration   4: 2278.529 ns/op
Iteration   5: 2308.545 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  2256.582 ±(99.9%) 250.447 ns/op [Average]
  (min, avg, max) = (2144.636, 2256.582, 2308.545), stdev = 65.040
  CI (99.9%): [2006.136, 2507.029] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 41.07% complete, ETA 00:11:34
# Fork: 1 of 1
# Warmup Iteration   1: 9043.970 ns/op
# Warmup Iteration   2: 7881.060 ns/op
# Warmup Iteration   3: 7784.808 ns/op
# Warmup Iteration   4: 7989.804 ns/op
# Warmup Iteration   5: 7820.204 ns/op
Iteration   1: 7682.603 ns/op
Iteration   2: 7882.322 ns/op
Iteration   3: 7928.366 ns/op
Iteration   4: 8566.295 ns/op
Iteration   5: 8082.266 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  8028.370 ±(99.9%) 1281.683 ns/op [Average]
  (min, avg, max) = (7682.603, 8028.370, 8566.295), stdev = 332.849
  CI (99.9%): [6746.687, 9310.053] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 41.96% complete, ETA 00:11:23
# Fork: 1 of 1
# Warmup Iteration   1: 15916.037 ns/op
# Warmup Iteration   2: 15306.549 ns/op
# Warmup Iteration   3: 14175.981 ns/op
# Warmup Iteration   4: 14281.450 ns/op
# Warmup Iteration   5: 14367.307 ns/op
Iteration   1: 14230.373 ns/op
Iteration   2: 14343.667 ns/op
Iteration   3: 14409.218 ns/op
Iteration   4: 14811.237 ns/op
Iteration   5: 14324.446 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  14423.788 ±(99.9%) 869.654 ns/op [Average]
  (min, avg, max) = (14230.373, 14423.788, 14811.237), stdev = 225.846
  CI (99.9%): [13554.134, 15293.442] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 42.86% complete, ETA 00:11:13
# Fork: 1 of 1
# Warmup Iteration   1: 146020.771 ns/op
# Warmup Iteration   2: 134499.526 ns/op
# Warmup Iteration   3: 132208.898 ns/op
# Warmup Iteration   4: 132255.351 ns/op
# Warmup Iteration   5: 133085.073 ns/op
Iteration   1: 139555.300 ns/op
Iteration   2: 134320.184 ns/op
Iteration   3: 134469.239 ns/op
Iteration   4: 131735.505 ns/op
Iteration   5: 138483.618 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  135712.769 ±(99.9%) 12439.865 ns/op [Average]
  (min, avg, max) = (131735.505, 135712.769, 139555.300), stdev = 3230.594
  CI (99.9%): [123272.904, 148152.634] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 43.75% complete, ETA 00:11:02
# Fork: 1 of 1
# Warmup Iteration   1: 1375.016 ns/op
# Warmup Iteration   2: 1043.355 ns/op
# Warmup Iteration   3: 1017.068 ns/op
# Warmup Iteration   4: 1006.962 ns/op
# Warmup Iteration   5: 996.373 ns/op
Iteration   1: 971.467 ns/op
Iteration   2: 1122.750 ns/op
Iteration   3: 1086.991 ns/op
Iteration   4: 1137.277 ns/op
Iteration   5: 1141.561 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1092.009 ±(99.9%) 272.317 ns/op [Average]
  (min, avg, max) = (971.467, 1092.009, 1141.561), stdev = 70.720
  CI (99.9%): [819.692, 1364.326] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 44.64% complete, ETA 00:10:52
# Fork: 1 of 1
# Warmup Iteration   1: 1375.782 ns/op
# Warmup Iteration   2: 1157.415 ns/op
# Warmup Iteration   3: 1057.048 ns/op
# Warmup Iteration   4: 1129.260 ns/op
# Warmup Iteration   5: 1017.349 ns/op
Iteration   1: 1063.646 ns/op
Iteration   2: 1024.668 ns/op
Iteration   3: 1090.786 ns/op
Iteration   4: 1032.068 ns/op
Iteration   5: 1031.623 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1048.558 ±(99.9%) 107.892 ns/op [Average]
  (min, avg, max) = (1024.668, 1048.558, 1090.786), stdev = 28.019
  CI (99.9%): [940.666, 1156.450] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 45.54% complete, ETA 00:10:41
# Fork: 1 of 1
# Warmup Iteration   1: 1676.357 ns/op
# Warmup Iteration   2: 1394.438 ns/op
# Warmup Iteration   3: 1361.422 ns/op
# Warmup Iteration   4: 1359.428 ns/op
# Warmup Iteration   5: 1359.326 ns/op
Iteration   1: 1364.612 ns/op
Iteration   2: 1353.863 ns/op
Iteration   3: 1361.974 ns/op
Iteration   4: 1361.829 ns/op
Iteration   5: 1356.173 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1359.690 ±(99.9%) 17.257 ns/op [Average]
  (min, avg, max) = (1353.863, 1359.690, 1364.612), stdev = 4.482
  CI (99.9%): [1342.433, 1376.947] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 46.43% complete, ETA 00:10:31
# Fork: 1 of 1
# Warmup Iteration   1: 2471.235 ns/op
# Warmup Iteration   2: 1843.304 ns/op
# Warmup Iteration   3: 1829.830 ns/op
# Warmup Iteration   4: 2014.479 ns/op
# Warmup Iteration   5: 1868.670 ns/op
Iteration   1: 1844.483 ns/op
Iteration   2: 1877.635 ns/op
Iteration   3: 1829.698 ns/op
Iteration   4: 1830.617 ns/op
Iteration   5: 2072.844 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1891.056 ±(99.9%) 398.378 ns/op [Average]
  (min, avg, max) = (1829.698, 1891.056, 2072.844), stdev = 103.457
  CI (99.9%): [1492.678, 2289.433] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 47.32% complete, ETA 00:10:20
# Fork: 1 of 1
# Warmup Iteration   1: 6674.484 ns/op
# Warmup Iteration   2: 5903.736 ns/op
# Warmup Iteration   3: 5771.536 ns/op
# Warmup Iteration   4: 5896.464 ns/op
# Warmup Iteration   5: 6026.702 ns/op
Iteration   1: 6166.715 ns/op
Iteration   2: 6052.061 ns/op
Iteration   3: 6259.840 ns/op
Iteration   4: 6100.379 ns/op
Iteration   5: 6176.861 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  6151.171 ±(99.9%) 305.108 ns/op [Average]
  (min, avg, max) = (6052.061, 6151.171, 6259.840), stdev = 79.235
  CI (99.9%): [5846.064, 6456.279] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 48.21% complete, ETA 00:10:10
# Fork: 1 of 1
# Warmup Iteration   1: 12377.898 ns/op
# Warmup Iteration   2: 12999.591 ns/op
# Warmup Iteration   3: 12227.067 ns/op
# Warmup Iteration   4: 11528.786 ns/op
# Warmup Iteration   5: 11192.669 ns/op
Iteration   1: 11429.150 ns/op
Iteration   2: 11220.544 ns/op
Iteration   3: 11288.255 ns/op
Iteration   4: 11100.762 ns/op
Iteration   5: 11126.987 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  11233.140 ±(99.9%) 510.877 ns/op [Average]
  (min, avg, max) = (11100.762, 11233.140, 11429.150), stdev = 132.673
  CI (99.9%): [10722.262, 11744.017] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.11% complete, ETA 00:09:59
# Fork: 1 of 1
# Warmup Iteration   1: 119952.888 ns/op
# Warmup Iteration   2: 118309.956 ns/op
# Warmup Iteration   3: 106440.594 ns/op
# Warmup Iteration   4: 115996.516 ns/op
# Warmup Iteration   5: 101725.051 ns/op
Iteration   1: 102094.993 ns/op
Iteration   2: 103402.680 ns/op
Iteration   3: 106591.759 ns/op
Iteration   4: 97894.828 ns/op
Iteration   5: 104456.423 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  102888.136 ±(99.9%) 12478.002 ns/op [Average]
  (min, avg, max) = (97894.828, 102888.136, 106591.759), stdev = 3240.497
  CI (99.9%): [90410.135, 115366.138] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:09:49
# Fork: 1 of 1
# Warmup Iteration   1: 52.374 ns/op
# Warmup Iteration   2: 53.154 ns/op
# Warmup Iteration   3: 54.588 ns/op
# Warmup Iteration   4: 58.182 ns/op
# Warmup Iteration   5: 61.304 ns/op
Iteration   1: 50.208 ns/op
Iteration   2: 52.551 ns/op
Iteration   3: 51.829 ns/op
Iteration   4: 47.471 ns/op
Iteration   5: 49.414 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  50.295 ±(99.9%) 7.749 ns/op [Average]
  (min, avg, max) = (47.471, 50.295, 52.551), stdev = 2.012
  CI (99.9%): [42.546, 58.043] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.89% complete, ETA 00:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 76.821 ns/op
# Warmup Iteration   2: 73.519 ns/op
# Warmup Iteration   3: 67.026 ns/op
# Warmup Iteration   4: 68.236 ns/op
# Warmup Iteration   5: 68.108 ns/op
Iteration   1: 66.682 ns/op
Iteration   2: 69.104 ns/op
Iteration   3: 66.715 ns/op
Iteration   4: 73.188 ns/op
Iteration   5: 74.864 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  70.111 ±(99.9%) 14.454 ns/op [Average]
  (min, avg, max) = (66.682, 70.111, 74.864), stdev = 3.754
  CI (99.9%): [55.656, 84.565] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 51.79% complete, ETA 00:09:28
# Fork: 1 of 1
# Warmup Iteration   1: 212.880 ns/op
# Warmup Iteration   2: 196.923 ns/op
# Warmup Iteration   3: 210.511 ns/op
# Warmup Iteration   4: 192.346 ns/op
# Warmup Iteration   5: 190.164 ns/op
Iteration   1: 193.945 ns/op
Iteration   2: 195.226 ns/op
Iteration   3: 186.391 ns/op
Iteration   4: 186.321 ns/op
Iteration   5: 197.130 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  191.803 ±(99.9%) 19.636 ns/op [Average]
  (min, avg, max) = (186.321, 191.803, 197.130), stdev = 5.099
  CI (99.9%): [172.167, 211.439] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 52.68% complete, ETA 00:09:17
# Fork: 1 of 1
# Warmup Iteration   1: 345.287 ns/op
# Warmup Iteration   2: 350.581 ns/op
# Warmup Iteration   3: 358.070 ns/op
# Warmup Iteration   4: 419.388 ns/op
# Warmup Iteration   5: 395.890 ns/op
Iteration   1: 315.750 ns/op
Iteration   2: 330.231 ns/op
Iteration   3: 309.341 ns/op
Iteration   4: 314.172 ns/op
Iteration   5: 339.014 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  321.702 ±(99.9%) 47.838 ns/op [Average]
  (min, avg, max) = (309.341, 321.702, 339.014), stdev = 12.423
  CI (99.9%): [273.863, 369.540] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 53.57% complete, ETA 00:09:07
# Fork: 1 of 1
# Warmup Iteration   1: 1637.034 ns/op
# Warmup Iteration   2: 1308.744 ns/op
# Warmup Iteration   3: 1310.008 ns/op
# Warmup Iteration   4: 1394.060 ns/op
# Warmup Iteration   5: 1305.691 ns/op
Iteration   1: 1357.553 ns/op
Iteration   2: 1340.867 ns/op
Iteration   3: 1362.163 ns/op
Iteration   4: 1427.344 ns/op
Iteration   5: 1386.934 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  1374.972 ±(99.9%) 129.391 ns/op [Average]
  (min, avg, max) = (1340.867, 1374.972, 1427.344), stdev = 33.602
  CI (99.9%): [1245.581, 1504.363] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 54.46% complete, ETA 00:08:56
# Fork: 1 of 1
# Warmup Iteration   1: 3948.629 ns/op
# Warmup Iteration   2: 2773.772 ns/op
# Warmup Iteration   3: 2675.861 ns/op
# Warmup Iteration   4: 2617.596 ns/op
# Warmup Iteration   5: 2588.176 ns/op
Iteration   1: 2640.672 ns/op
Iteration   2: 2591.031 ns/op
Iteration   3: 2575.546 ns/op
Iteration   4: 2619.031 ns/op
Iteration   5: 2577.748 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  2600.805 ±(99.9%) 108.688 ns/op [Average]
  (min, avg, max) = (2575.546, 2600.805, 2640.672), stdev = 28.226
  CI (99.9%): [2492.118, 2709.493] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 55.36% complete, ETA 00:08:46
# Fork: 1 of 1
# Warmup Iteration   1: 27623.958 ns/op
# Warmup Iteration   2: 25977.134 ns/op
# Warmup Iteration   3: 25954.515 ns/op
# Warmup Iteration   4: 26131.226 ns/op
# Warmup Iteration   5: 32617.252 ns/op
Iteration   1: 34186.703 ns/op
Iteration   2: 30056.232 ns/op
Iteration   3: 29476.282 ns/op
Iteration   4: 27942.079 ns/op
Iteration   5: 32390.796 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  30810.419 ±(99.9%) 9524.601 ns/op [Average]
  (min, avg, max) = (27942.079, 30810.419, 34186.703), stdev = 2473.509
  CI (99.9%): [21285.818, 40335.019] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 56.25% complete, ETA 00:08:35
# Fork: 1 of 1
# Warmup Iteration   1: 44.133 ns/op
# Warmup Iteration   2: 39.863 ns/op
# Warmup Iteration   3: 36.456 ns/op
# Warmup Iteration   4: 34.966 ns/op
# Warmup Iteration   5: 35.724 ns/op
Iteration   1: 34.504 ns/op
Iteration   2: 35.351 ns/op
Iteration   3: 34.637 ns/op
Iteration   4: 34.753 ns/op
Iteration   5: 34.706 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  34.790 ±(99.9%) 1.260 ns/op [Average]
  (min, avg, max) = (34.504, 34.790, 35.351), stdev = 0.327
  CI (99.9%): [33.530, 36.050] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 57.14% complete, ETA 00:08:25
# Fork: 1 of 1
# Warmup Iteration   1: 56.198 ns/op
# Warmup Iteration   2: 54.568 ns/op
# Warmup Iteration   3: 50.891 ns/op
# Warmup Iteration   4: 49.958 ns/op
# Warmup Iteration   5: 49.080 ns/op
Iteration   1: 47.953 ns/op
Iteration   2: 49.749 ns/op
Iteration   3: 47.937 ns/op
Iteration   4: 48.283 ns/op
Iteration   5: 49.043 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  48.593 ±(99.9%) 3.029 ns/op [Average]
  (min, avg, max) = (47.937, 48.593, 49.749), stdev = 0.787
  CI (99.9%): [45.564, 51.622] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 58.04% complete, ETA 00:08:14
# Fork: 1 of 1
# Warmup Iteration   1: 133.640 ns/op
# Warmup Iteration   2: 117.856 ns/op
# Warmup Iteration   3: 119.246 ns/op
# Warmup Iteration   4: 118.561 ns/op
# Warmup Iteration   5: 124.579 ns/op
Iteration   1: 118.020 ns/op
Iteration   2: 118.991 ns/op
Iteration   3: 116.333 ns/op
Iteration   4: 116.369 ns/op
Iteration   5: 114.063 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  116.755 ±(99.9%) 7.249 ns/op [Average]
  (min, avg, max) = (114.063, 116.755, 118.991), stdev = 1.882
  CI (99.9%): [109.507, 124.004] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 58.93% complete, ETA 00:08:03
# Fork: 1 of 1
# Warmup Iteration   1: 230.915 ns/op
# Warmup Iteration   2: 215.953 ns/op
# Warmup Iteration   3: 212.389 ns/op
# Warmup Iteration   4: 214.445 ns/op
# Warmup Iteration   5: 212.388 ns/op
Iteration   1: 211.240 ns/op
Iteration   2: 213.796 ns/op
Iteration   3: 216.799 ns/op
Iteration   4: 210.909 ns/op
Iteration   5: 211.290 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  212.807 ±(99.9%) 9.679 ns/op [Average]
  (min, avg, max) = (210.909, 212.807, 216.799), stdev = 2.514
  CI (99.9%): [203.128, 222.486] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 59.82% complete, ETA 00:07:53
# Fork: 1 of 1
# Warmup Iteration   1: 952.346 ns/op
# Warmup Iteration   2: 894.462 ns/op
# Warmup Iteration   3: 895.703 ns/op
# Warmup Iteration   4: 905.566 ns/op
# Warmup Iteration   5: 891.950 ns/op
Iteration   1: 903.420 ns/op
Iteration   2: 949.267 ns/op
Iteration   3: 877.604 ns/op
Iteration   4: 876.395 ns/op
Iteration   5: 901.520 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  901.641 ±(99.9%) 113.685 ns/op [Average]
  (min, avg, max) = (876.395, 901.641, 949.267), stdev = 29.524
  CI (99.9%): [787.956, 1015.327] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 60.71% complete, ETA 00:07:42
# Fork: 1 of 1
# Warmup Iteration   1: 1927.718 ns/op
# Warmup Iteration   2: 1825.540 ns/op
# Warmup Iteration   3: 1790.877 ns/op
# Warmup Iteration   4: 1797.680 ns/op
# Warmup Iteration   5: 1771.844 ns/op
Iteration   1: 2108.343 ns/op
Iteration   2: 1758.768 ns/op
Iteration   3: 1829.216 ns/op
Iteration   4: 1868.244 ns/op
Iteration   5: 1808.315 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  1874.577 ±(99.9%) 525.674 ns/op [Average]
  (min, avg, max) = (1758.768, 1874.577, 2108.343), stdev = 136.516
  CI (99.9%): [1348.903, 2400.252] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 61.61% complete, ETA 00:07:32
# Fork: 1 of 1
# Warmup Iteration   1: 22121.672 ns/op
# Warmup Iteration   2: 20109.199 ns/op
# Warmup Iteration   3: 21251.919 ns/op
# Warmup Iteration   4: 19502.539 ns/op
# Warmup Iteration   5: 26687.110 ns/op
Iteration   1: 20700.839 ns/op
Iteration   2: 23132.731 ns/op
Iteration   3: 19490.590 ns/op
Iteration   4: 18934.901 ns/op
Iteration   5: 18890.858 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  20229.984 ±(99.9%) 6851.779 ns/op [Average]
  (min, avg, max) = (18890.858, 20229.984, 23132.731), stdev = 1779.385
  CI (99.9%): [13378.205, 27081.763] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 62.50% complete, ETA 00:07:21
# Fork: 1 of 1
# Warmup Iteration   1: 44.765 ns/op
# Warmup Iteration   2: 47.372 ns/op
# Warmup Iteration   3: 40.766 ns/op
# Warmup Iteration   4: 39.701 ns/op
# Warmup Iteration   5: 39.286 ns/op
Iteration   1: 40.964 ns/op
Iteration   2: 42.493 ns/op
Iteration   3: 38.856 ns/op
Iteration   4: 39.342 ns/op
Iteration   5: 38.810 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  40.093 ±(99.9%) 6.167 ns/op [Average]
  (min, avg, max) = (38.810, 40.093, 42.493), stdev = 1.601
  CI (99.9%): [33.926, 46.259] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 63.39% complete, ETA 00:07:11
# Fork: 1 of 1
# Warmup Iteration   1: 63.290 ns/op
# Warmup Iteration   2: 59.859 ns/op
# Warmup Iteration   3: 58.822 ns/op
# Warmup Iteration   4: 57.520 ns/op
# Warmup Iteration   5: 61.029 ns/op
Iteration   1: 58.092 ns/op
Iteration   2: 56.698 ns/op
Iteration   3: 60.841 ns/op
Iteration   4: 70.428 ns/op
Iteration   5: 77.303 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  64.672 ±(99.9%) 34.129 ns/op [Average]
  (min, avg, max) = (56.698, 64.672, 77.303), stdev = 8.863
  CI (99.9%): [30.544, 98.801] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 64.29% complete, ETA 00:07:00
# Fork: 1 of 1
# Warmup Iteration   1: 142.095 ns/op
# Warmup Iteration   2: 127.780 ns/op
# Warmup Iteration   3: 104.595 ns/op
# Warmup Iteration   4: 105.707 ns/op
# Warmup Iteration   5: 98.350 ns/op
Iteration   1: 103.250 ns/op
Iteration   2: 105.885 ns/op
Iteration   3: 119.593 ns/op
Iteration   4: 133.214 ns/op
Iteration   5: 106.399 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  113.668 ±(99.9%) 48.672 ns/op [Average]
  (min, avg, max) = (103.250, 113.668, 133.214), stdev = 12.640
  CI (99.9%): [64.996, 162.340] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 65.18% complete, ETA 00:06:50
# Fork: 1 of 1
# Warmup Iteration   1: 183.462 ns/op
# Warmup Iteration   2: 165.343 ns/op
# Warmup Iteration   3: 155.946 ns/op
# Warmup Iteration   4: 162.980 ns/op
# Warmup Iteration   5: 158.192 ns/op
Iteration   1: 164.665 ns/op
Iteration   2: 157.402 ns/op
Iteration   3: 161.264 ns/op
Iteration   4: 157.520 ns/op
Iteration   5: 155.967 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  159.364 ±(99.9%) 13.681 ns/op [Average]
  (min, avg, max) = (155.967, 159.364, 164.665), stdev = 3.553
  CI (99.9%): [145.683, 173.045] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 66.07% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: 670.927 ns/op
# Warmup Iteration   2: 640.024 ns/op
# Warmup Iteration   3: 688.047 ns/op
# Warmup Iteration   4: 678.683 ns/op
# Warmup Iteration   5: 611.506 ns/op
Iteration   1: 603.834 ns/op
Iteration   2: 628.530 ns/op
Iteration   3: 683.042 ns/op
Iteration   4: 651.875 ns/op
Iteration   5: 613.338 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  636.124 ±(99.9%) 122.813 ns/op [Average]
  (min, avg, max) = (603.834, 636.124, 683.042), stdev = 31.894
  CI (99.9%): [513.310, 758.937] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 66.96% complete, ETA 00:06:29
# Fork: 1 of 1
# Warmup Iteration   1: 1382.373 ns/op
# Warmup Iteration   2: 1206.030 ns/op
# Warmup Iteration   3: 1157.777 ns/op
# Warmup Iteration   4: 1179.574 ns/op
# Warmup Iteration   5: 1174.649 ns/op
Iteration   1: 1143.137 ns/op
Iteration   2: 1162.353 ns/op
Iteration   3: 1168.250 ns/op
Iteration   4: 1180.776 ns/op
Iteration   5: 1167.445 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  1164.392 ±(99.9%) 52.678 ns/op [Average]
  (min, avg, max) = (1143.137, 1164.392, 1180.776), stdev = 13.680
  CI (99.9%): [1111.714, 1217.070] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 67.86% complete, ETA 00:06:18
# Fork: 1 of 1
# Warmup Iteration   1: 15849.708 ns/op
# Warmup Iteration   2: 12643.116 ns/op
# Warmup Iteration   3: 12484.835 ns/op
# Warmup Iteration   4: 12737.110 ns/op
# Warmup Iteration   5: 12483.095 ns/op
Iteration   1: 12839.780 ns/op
Iteration   2: 12776.186 ns/op
Iteration   3: 12677.247 ns/op
Iteration   4: 13196.817 ns/op
Iteration   5: 12484.510 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  12794.908 ±(99.9%) 1007.968 ns/op [Average]
  (min, avg, max) = (12484.510, 12794.908, 13196.817), stdev = 261.766
  CI (99.9%): [11786.940, 13802.876] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 68.75% complete, ETA 00:06:08
# Fork: 1 of 1
# Warmup Iteration   1: 36.852 ns/op
# Warmup Iteration   2: 34.156 ns/op
# Warmup Iteration   3: 34.255 ns/op
# Warmup Iteration   4: 34.325 ns/op
# Warmup Iteration   5: 34.235 ns/op
Iteration   1: 34.315 ns/op
Iteration   2: 34.857 ns/op
Iteration   3: 33.785 ns/op
Iteration   4: 35.009 ns/op
Iteration   5: 35.053 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  34.604 ±(99.9%) 2.095 ns/op [Average]
  (min, avg, max) = (33.785, 34.604, 35.053), stdev = 0.544
  CI (99.9%): [32.509, 36.699] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 69.64% complete, ETA 00:05:57
# Fork: 1 of 1
# Warmup Iteration   1: 53.481 ns/op
# Warmup Iteration   2: 49.793 ns/op
# Warmup Iteration   3: 48.105 ns/op
# Warmup Iteration   4: 49.279 ns/op
# Warmup Iteration   5: 49.156 ns/op
Iteration   1: 49.078 ns/op
Iteration   2: 48.179 ns/op
Iteration   3: 48.865 ns/op
Iteration   4: 48.629 ns/op
Iteration   5: 51.037 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  49.158 ±(99.9%) 4.244 ns/op [Average]
  (min, avg, max) = (48.179, 49.158, 51.037), stdev = 1.102
  CI (99.9%): [44.913, 53.402] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 70.54% complete, ETA 00:05:47
# Fork: 1 of 1
# Warmup Iteration   1: 98.625 ns/op
# Warmup Iteration   2: 94.997 ns/op
# Warmup Iteration   3: 86.297 ns/op
# Warmup Iteration   4: 92.710 ns/op
# Warmup Iteration   5: 93.650 ns/op
Iteration   1: 85.931 ns/op
Iteration   2: 87.668 ns/op
Iteration   3: 88.378 ns/op
Iteration   4: 85.626 ns/op
Iteration   5: 85.589 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  86.639 ±(99.9%) 4.988 ns/op [Average]
  (min, avg, max) = (85.589, 86.639, 88.378), stdev = 1.295
  CI (99.9%): [81.651, 91.626] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 71.43% complete, ETA 00:05:36
# Fork: 1 of 1
# Warmup Iteration   1: 145.229 ns/op
# Warmup Iteration   2: 136.410 ns/op
# Warmup Iteration   3: 136.071 ns/op
# Warmup Iteration   4: 138.021 ns/op
# Warmup Iteration   5: 150.213 ns/op
Iteration   1: 141.409 ns/op
Iteration   2: 141.534 ns/op
Iteration   3: 135.975 ns/op
Iteration   4: 136.070 ns/op
Iteration   5: 130.186 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  137.035 ±(99.9%) 18.095 ns/op [Average]
  (min, avg, max) = (130.186, 137.035, 141.534), stdev = 4.699
  CI (99.9%): [118.940, 155.130] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 72.32% complete, ETA 00:05:26
# Fork: 1 of 1
# Warmup Iteration   1: 513.459 ns/op
# Warmup Iteration   2: 454.333 ns/op
# Warmup Iteration   3: 469.691 ns/op
# Warmup Iteration   4: 442.676 ns/op
# Warmup Iteration   5: 449.970 ns/op
Iteration   1: 488.070 ns/op
Iteration   2: 476.995 ns/op
Iteration   3: 479.728 ns/op
Iteration   4: 470.671 ns/op
Iteration   5: 462.752 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  475.643 ±(99.9%) 36.725 ns/op [Average]
  (min, avg, max) = (462.752, 475.643, 488.070), stdev = 9.537
  CI (99.9%): [438.918, 512.368] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 73.21% complete, ETA 00:05:15
# Fork: 1 of 1
# Warmup Iteration   1: 1063.225 ns/op
# Warmup Iteration   2: 924.240 ns/op
# Warmup Iteration   3: 944.069 ns/op
# Warmup Iteration   4: 891.786 ns/op
# Warmup Iteration   5: 897.478 ns/op
Iteration   1: 894.446 ns/op
Iteration   2: 943.611 ns/op
Iteration   3: 895.411 ns/op
Iteration   4: 921.721 ns/op
Iteration   5: 910.926 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  913.223 ±(99.9%) 78.698 ns/op [Average]
  (min, avg, max) = (894.446, 913.223, 943.611), stdev = 20.437
  CI (99.9%): [834.525, 991.920] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 74.11% complete, ETA 00:05:05
# Fork: 1 of 1
# Warmup Iteration   1: 11431.841 ns/op
# Warmup Iteration   2: 9673.453 ns/op
# Warmup Iteration   3: 9327.725 ns/op
# Warmup Iteration   4: 9334.712 ns/op
# Warmup Iteration   5: 9296.173 ns/op
Iteration   1: 9507.228 ns/op
Iteration   2: 9527.503 ns/op
Iteration   3: 9414.247 ns/op
Iteration   4: 9306.357 ns/op
Iteration   5: 9368.219 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  9424.711 ±(99.9%) 358.565 ns/op [Average]
  (min, avg, max) = (9306.357, 9424.711, 9527.503), stdev = 93.118
  CI (99.9%): [9066.146, 9783.275] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 75.00% complete, ETA 00:04:54
# Fork: 1 of 1
# Warmup Iteration   1: 46.260 ns/op
# Warmup Iteration   2: 41.940 ns/op
# Warmup Iteration   3: 41.260 ns/op
# Warmup Iteration   4: 41.125 ns/op
# Warmup Iteration   5: 46.324 ns/op
Iteration   1: 43.836 ns/op
Iteration   2: 42.960 ns/op
Iteration   3: 42.306 ns/op
Iteration   4: 41.467 ns/op
Iteration   5: 44.060 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  42.926 ±(99.9%) 4.142 ns/op [Average]
  (min, avg, max) = (41.467, 42.926, 44.060), stdev = 1.076
  CI (99.9%): [38.784, 47.068] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 75.89% complete, ETA 00:04:44
# Fork: 1 of 1
# Warmup Iteration   1: 74.044 ns/op
# Warmup Iteration   2: 70.198 ns/op
# Warmup Iteration   3: 69.788 ns/op
# Warmup Iteration   4: 71.573 ns/op
# Warmup Iteration   5: 70.449 ns/op
Iteration   1: 69.075 ns/op
Iteration   2: 75.400 ns/op
Iteration   3: 68.041 ns/op
Iteration   4: 70.901 ns/op
Iteration   5: 67.531 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  70.189 ±(99.9%) 12.265 ns/op [Average]
  (min, avg, max) = (67.531, 70.189, 75.400), stdev = 3.185
  CI (99.9%): [57.925, 82.454] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 76.79% complete, ETA 00:04:33
# Fork: 1 of 1
# Warmup Iteration   1: 196.502 ns/op
# Warmup Iteration   2: 181.533 ns/op
# Warmup Iteration   3: 179.569 ns/op
# Warmup Iteration   4: 177.877 ns/op
# Warmup Iteration   5: 191.935 ns/op
Iteration   1: 175.957 ns/op
Iteration   2: 179.707 ns/op
Iteration   3: 206.011 ns/op
Iteration   4: 204.240 ns/op
Iteration   5: 240.686 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  201.320 ±(99.9%) 99.869 ns/op [Average]
  (min, avg, max) = (175.957, 201.320, 240.686), stdev = 25.936
  CI (99.9%): [101.451, 301.189] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 77.68% complete, ETA 00:04:22
# Fork: 1 of 1
# Warmup Iteration   1: 558.986 ns/op
# Warmup Iteration   2: 351.131 ns/op
# Warmup Iteration   3: 312.206 ns/op
# Warmup Iteration   4: 326.711 ns/op
# Warmup Iteration   5: 320.391 ns/op
Iteration   1: 326.654 ns/op
Iteration   2: 323.903 ns/op
Iteration   3: 308.775 ns/op
Iteration   4: 307.500 ns/op
Iteration   5: 320.062 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  317.379 ±(99.9%) 33.757 ns/op [Average]
  (min, avg, max) = (307.500, 317.379, 326.654), stdev = 8.767
  CI (99.9%): [283.621, 351.136] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 78.57% complete, ETA 00:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 1488.941 ns/op
# Warmup Iteration   2: 1442.907 ns/op
# Warmup Iteration   3: 1728.817 ns/op
# Warmup Iteration   4: 1513.577 ns/op
# Warmup Iteration   5: 1293.037 ns/op
Iteration   1: 1298.072 ns/op
Iteration   2: 1354.976 ns/op
Iteration   3: 1385.026 ns/op
Iteration   4: 1391.708 ns/op
Iteration   5: 1318.451 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  1349.647 ±(99.9%) 157.388 ns/op [Average]
  (min, avg, max) = (1298.072, 1349.647, 1391.708), stdev = 40.873
  CI (99.9%): [1192.259, 1507.034] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 79.46% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 2821.453 ns/op
# Warmup Iteration   2: 2781.492 ns/op
# Warmup Iteration   3: 2724.711 ns/op
# Warmup Iteration   4: 2690.950 ns/op
# Warmup Iteration   5: 2739.831 ns/op
Iteration   1: 2691.592 ns/op
Iteration   2: 2710.095 ns/op
Iteration   3: 2867.613 ns/op
Iteration   4: 3003.128 ns/op
Iteration   5: 2669.384 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  2788.362 ±(99.9%) 551.500 ns/op [Average]
  (min, avg, max) = (2669.384, 2788.362, 3003.128), stdev = 143.223
  CI (99.9%): [2236.862, 3339.863] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 80.36% complete, ETA 00:03:51
# Fork: 1 of 1
# Warmup Iteration   1: 29760.232 ns/op
# Warmup Iteration   2: 27284.810 ns/op
# Warmup Iteration   3: 30196.413 ns/op
# Warmup Iteration   4: 26971.046 ns/op
# Warmup Iteration   5: 31617.365 ns/op
Iteration   1: 31218.228 ns/op
Iteration   2: 28633.505 ns/op
Iteration   3: 29164.974 ns/op
Iteration   4: 28977.989 ns/op
Iteration   5: 26871.297 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  28973.199 ±(99.9%) 5968.603 ns/op [Average]
  (min, avg, max) = (26871.297, 28973.199, 31218.228), stdev = 1550.027
  CI (99.9%): [23004.596, 34941.802] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 81.25% complete, ETA 00:03:40
# Fork: 1 of 1
# Warmup Iteration   1: 40.499 ns/op
# Warmup Iteration   2: 37.889 ns/op
# Warmup Iteration   3: 36.759 ns/op
# Warmup Iteration   4: 36.641 ns/op
# Warmup Iteration   5: 38.198 ns/op
Iteration   1: 36.823 ns/op
Iteration   2: 35.522 ns/op
Iteration   3: 35.281 ns/op
Iteration   4: 35.245 ns/op
Iteration   5: 37.752 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  36.125 ±(99.9%) 4.298 ns/op [Average]
  (min, avg, max) = (35.245, 36.125, 37.752), stdev = 1.116
  CI (99.9%): [31.826, 40.423] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 82.14% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: 55.959 ns/op
# Warmup Iteration   2: 50.342 ns/op
# Warmup Iteration   3: 48.042 ns/op
# Warmup Iteration   4: 50.456 ns/op
# Warmup Iteration   5: 48.423 ns/op
Iteration   1: 48.555 ns/op
Iteration   2: 48.244 ns/op
Iteration   3: 49.225 ns/op
Iteration   4: 57.704 ns/op
Iteration   5: 61.837 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  53.113 ±(99.9%) 24.108 ns/op [Average]
  (min, avg, max) = (48.244, 53.113, 61.837), stdev = 6.261
  CI (99.9%): [29.005, 77.221] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 83.04% complete, ETA 00:03:19
# Fork: 1 of 1
# Warmup Iteration   1: 170.145 ns/op
# Warmup Iteration   2: 151.830 ns/op
# Warmup Iteration   3: 134.328 ns/op
# Warmup Iteration   4: 125.207 ns/op
# Warmup Iteration   5: 120.270 ns/op
Iteration   1: 118.112 ns/op
Iteration   2: 120.081 ns/op
Iteration   3: 117.727 ns/op
Iteration   4: 117.373 ns/op
Iteration   5: 120.161 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  118.691 ±(99.9%) 5.129 ns/op [Average]
  (min, avg, max) = (117.373, 118.691, 120.161), stdev = 1.332
  CI (99.9%): [113.562, 123.820] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 83.93% complete, ETA 00:03:09
# Fork: 1 of 1
# Warmup Iteration   1: 238.513 ns/op
# Warmup Iteration   2: 224.498 ns/op
# Warmup Iteration   3: 228.860 ns/op
# Warmup Iteration   4: 226.980 ns/op
# Warmup Iteration   5: 237.660 ns/op
Iteration   1: 231.228 ns/op
Iteration   2: 237.162 ns/op
Iteration   3: 232.444 ns/op
Iteration   4: 227.695 ns/op
Iteration   5: 233.161 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  232.338 ±(99.9%) 13.165 ns/op [Average]
  (min, avg, max) = (227.695, 232.338, 237.162), stdev = 3.419
  CI (99.9%): [219.173, 245.503] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 84.82% complete, ETA 00:02:58
# Fork: 1 of 1
# Warmup Iteration   1: 1420.001 ns/op
# Warmup Iteration   2: 1046.960 ns/op
# Warmup Iteration   3: 991.958 ns/op
# Warmup Iteration   4: 918.973 ns/op
# Warmup Iteration   5: 1004.066 ns/op
Iteration   1: 904.634 ns/op
Iteration   2: 908.212 ns/op
Iteration   3: 902.934 ns/op
Iteration   4: 909.616 ns/op
Iteration   5: 883.717 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  901.822 ±(99.9%) 40.317 ns/op [Average]
  (min, avg, max) = (883.717, 901.822, 909.616), stdev = 10.470
  CI (99.9%): [861.505, 942.140] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 85.71% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: 2085.115 ns/op
# Warmup Iteration   2: 2140.695 ns/op
# Warmup Iteration   3: 2126.357 ns/op
# Warmup Iteration   4: 2826.984 ns/op
# Warmup Iteration   5: 2568.196 ns/op
Iteration   1: 2728.091 ns/op
Iteration   2: 2427.374 ns/op
Iteration   3: 1889.302 ns/op
Iteration   4: 2051.915 ns/op
Iteration   5: 1821.609 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  2183.658 ±(99.9%) 1479.977 ns/op [Average]
  (min, avg, max) = (1821.609, 2183.658, 2728.091), stdev = 384.345
  CI (99.9%): [703.681, 3663.635] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 86.61% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: 21143.176 ns/op
# Warmup Iteration   2: 19509.640 ns/op
# Warmup Iteration   3: 20743.421 ns/op
# Warmup Iteration   4: 19936.393 ns/op
# Warmup Iteration   5: 19249.530 ns/op
Iteration   1: 18399.157 ns/op
Iteration   2: 20523.795 ns/op
Iteration   3: 19279.237 ns/op
Iteration   4: 20765.041 ns/op
Iteration   5: 18915.698 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  19576.586 ±(99.9%) 3955.662 ns/op [Average]
  (min, avg, max) = (18399.157, 19576.586, 20765.041), stdev = 1027.273
  CI (99.9%): [15620.924, 23532.247] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 87.50% complete, ETA 00:02:27
# Fork: 1 of 1
# Warmup Iteration   1: 42.701 ns/op
# Warmup Iteration   2: 42.955 ns/op
# Warmup Iteration   3: 45.152 ns/op
# Warmup Iteration   4: 42.852 ns/op
# Warmup Iteration   5: 43.033 ns/op
Iteration   1: 38.266 ns/op
Iteration   2: 37.648 ns/op
Iteration   3: 38.148 ns/op
Iteration   4: 38.201 ns/op
Iteration   5: 38.532 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  38.159 ±(99.9%) 1.238 ns/op [Average]
  (min, avg, max) = (37.648, 38.159, 38.532), stdev = 0.322
  CI (99.9%): [36.921, 39.398] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 88.39% complete, ETA 00:02:16
# Fork: 1 of 1
# Warmup Iteration   1: 65.249 ns/op
# Warmup Iteration   2: 62.875 ns/op
# Warmup Iteration   3: 63.288 ns/op
# Warmup Iteration   4: 61.557 ns/op
# Warmup Iteration   5: 62.304 ns/op
Iteration   1: 66.391 ns/op
Iteration   2: 63.977 ns/op
Iteration   3: 61.901 ns/op
Iteration   4: 61.365 ns/op
Iteration   5: 58.767 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  62.480 ±(99.9%) 11.044 ns/op [Average]
  (min, avg, max) = (58.767, 62.480, 66.391), stdev = 2.868
  CI (99.9%): [51.436, 73.525] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 89.29% complete, ETA 00:02:06
# Fork: 1 of 1
# Warmup Iteration   1: 116.111 ns/op
# Warmup Iteration   2: 102.821 ns/op
# Warmup Iteration   3: 102.614 ns/op
# Warmup Iteration   4: 98.326 ns/op
# Warmup Iteration   5: 114.368 ns/op
Iteration   1: 107.331 ns/op
Iteration   2: 100.443 ns/op
Iteration   3: 100.636 ns/op
Iteration   4: 102.467 ns/op
Iteration   5: 107.067 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  103.589 ±(99.9%) 13.054 ns/op [Average]
  (min, avg, max) = (100.443, 103.589, 107.331), stdev = 3.390
  CI (99.9%): [90.535, 116.642] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 90.18% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 178.510 ns/op
# Warmup Iteration   2: 164.374 ns/op
# Warmup Iteration   3: 157.665 ns/op
# Warmup Iteration   4: 156.754 ns/op
# Warmup Iteration   5: 178.526 ns/op
Iteration   1: 165.518 ns/op
Iteration   2: 162.560 ns/op
Iteration   3: 166.665 ns/op
Iteration   4: 168.928 ns/op
Iteration   5: 161.842 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  165.103 ±(99.9%) 11.283 ns/op [Average]
  (min, avg, max) = (161.842, 165.103, 168.928), stdev = 2.930
  CI (99.9%): [153.819, 176.386] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 91.07% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: 707.865 ns/op
# Warmup Iteration   2: 608.657 ns/op
# Warmup Iteration   3: 592.818 ns/op
# Warmup Iteration   4: 594.571 ns/op
# Warmup Iteration   5: 594.784 ns/op
Iteration   1: 594.593 ns/op
Iteration   2: 596.586 ns/op
Iteration   3: 597.574 ns/op
Iteration   4: 613.511 ns/op
Iteration   5: 611.695 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  602.792 ±(99.9%) 34.822 ns/op [Average]
  (min, avg, max) = (594.593, 602.792, 613.511), stdev = 9.043
  CI (99.9%): [567.970, 637.613] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 91.96% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 1396.311 ns/op
# Warmup Iteration   2: 1190.658 ns/op
# Warmup Iteration   3: 1191.724 ns/op
# Warmup Iteration   4: 1168.144 ns/op
# Warmup Iteration   5: 1171.733 ns/op
Iteration   1: 1180.690 ns/op
Iteration   2: 1214.018 ns/op
Iteration   3: 1171.044 ns/op
Iteration   4: 1312.117 ns/op
Iteration   5: 1185.925 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  1212.759 ±(99.9%) 222.557 ns/op [Average]
  (min, avg, max) = (1171.044, 1212.759, 1312.117), stdev = 57.797
  CI (99.9%): [990.201, 1435.316] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 92.86% complete, ETA 00:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 15626.631 ns/op
# Warmup Iteration   2: 13843.855 ns/op
# Warmup Iteration   3: 13465.190 ns/op
# Warmup Iteration   4: 14756.340 ns/op
# Warmup Iteration   5: 18681.544 ns/op
Iteration   1: 13769.725 ns/op
Iteration   2: 13067.731 ns/op
Iteration   3: 13050.311 ns/op
Iteration   4: 12903.257 ns/op
Iteration   5: 14569.884 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  13472.182 ±(99.9%) 2694.565 ns/op [Average]
  (min, avg, max) = (12903.257, 13472.182, 14569.884), stdev = 699.770
  CI (99.9%): [10777.616, 16166.747] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 93.75% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 36.359 ns/op
# Warmup Iteration   2: 34.082 ns/op
# Warmup Iteration   3: 34.025 ns/op
# Warmup Iteration   4: 35.328 ns/op
# Warmup Iteration   5: 35.762 ns/op
Iteration   1: 32.406 ns/op
Iteration   2: 32.010 ns/op
Iteration   3: 31.923 ns/op
Iteration   4: 32.586 ns/op
Iteration   5: 32.057 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  32.196 ±(99.9%) 1.098 ns/op [Average]
  (min, avg, max) = (31.923, 32.196, 32.586), stdev = 0.285
  CI (99.9%): [31.099, 33.294] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 94.64% complete, ETA 00:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 52.423 ns/op
# Warmup Iteration   2: 49.733 ns/op
# Warmup Iteration   3: 47.762 ns/op
# Warmup Iteration   4: 47.745 ns/op
# Warmup Iteration   5: 48.075 ns/op
Iteration   1: 50.797 ns/op
Iteration   2: 51.147 ns/op
Iteration   3: 50.191 ns/op
Iteration   4: 50.246 ns/op
Iteration   5: 48.470 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  50.170 ±(99.9%) 3.966 ns/op [Average]
  (min, avg, max) = (48.470, 50.170, 51.147), stdev = 1.030
  CI (99.9%): [46.204, 54.136] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 95.54% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 96.184 ns/op
# Warmup Iteration   2: 88.699 ns/op
# Warmup Iteration   3: 85.466 ns/op
# Warmup Iteration   4: 85.061 ns/op
# Warmup Iteration   5: 84.614 ns/op
Iteration   1: 85.589 ns/op
Iteration   2: 84.754 ns/op
Iteration   3: 84.374 ns/op
Iteration   4: 84.019 ns/op
Iteration   5: 84.218 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  84.591 ±(99.9%) 2.386 ns/op [Average]
  (min, avg, max) = (84.019, 84.591, 85.589), stdev = 0.620
  CI (99.9%): [82.205, 86.977] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 96.43% complete, ETA 00:00:42
# Fork: 1 of 1
# Warmup Iteration   1: 148.791 ns/op
# Warmup Iteration   2: 140.035 ns/op
# Warmup Iteration   3: 131.824 ns/op
# Warmup Iteration   4: 132.878 ns/op
# Warmup Iteration   5: 131.752 ns/op
Iteration   1: 129.887 ns/op
Iteration   2: 130.047 ns/op
Iteration   3: 133.279 ns/op
Iteration   4: 130.021 ns/op
Iteration   5: 130.832 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  130.813 ±(99.9%) 5.496 ns/op [Average]
  (min, avg, max) = (129.887, 130.813, 133.279), stdev = 1.427
  CI (99.9%): [125.317, 136.309] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 97.32% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 522.930 ns/op
# Warmup Iteration   2: 463.203 ns/op
# Warmup Iteration   3: 461.477 ns/op
# Warmup Iteration   4: 456.670 ns/op
# Warmup Iteration   5: 463.760 ns/op
Iteration   1: 472.627 ns/op
Iteration   2: 457.535 ns/op
Iteration   3: 491.144 ns/op
Iteration   4: 498.059 ns/op
Iteration   5: 462.793 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  476.432 ±(99.9%) 67.846 ns/op [Average]
  (min, avg, max) = (457.535, 476.432, 498.059), stdev = 17.619
  CI (99.9%): [408.586, 544.277] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 98.21% complete, ETA 00:00:21
# Fork: 1 of 1
# Warmup Iteration   1: 1044.344 ns/op
# Warmup Iteration   2: 909.911 ns/op
# Warmup Iteration   3: 881.298 ns/op
# Warmup Iteration   4: 918.417 ns/op
# Warmup Iteration   5: 1017.668 ns/op
Iteration   1: 916.807 ns/op
Iteration   2: 907.842 ns/op
Iteration   3: 871.409 ns/op
Iteration   4: 906.547 ns/op
Iteration   5: 907.722 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  902.065 ±(99.9%) 67.868 ns/op [Average]
  (min, avg, max) = (871.409, 902.065, 916.807), stdev = 17.625
  CI (99.9%): [834.197, 969.934] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.11% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 12444.333 ns/op
# Warmup Iteration   2: 10031.582 ns/op
# Warmup Iteration   3: 9538.268 ns/op
# Warmup Iteration   4: 9296.491 ns/op
# Warmup Iteration   5: 10064.537 ns/op
Iteration   1: 9386.242 ns/op
Iteration   2: 9654.766 ns/op
Iteration   3: 9604.630 ns/op
Iteration   4: 9667.073 ns/op
Iteration   5: 9399.763 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  9542.495 ±(99.9%) 533.466 ns/op [Average]
  (min, avg, max) = (9386.242, 9542.495, 9667.073), stdev = 138.539
  CI (99.9%): [9009.029, 10075.961] (assumes normal distribution)


# Run complete. Total time: 00:19:38

Benchmark                          (dataset)  (length)  Mode  Cnt       Score       Error  Units
Base64Benchmarks.commonsDecode         fixed         1  avgt    5    1239.626 ±   810.013  ns/op
Base64Benchmarks.commonsDecode         fixed        10  avgt    5    1295.343 ±   288.072  ns/op
Base64Benchmarks.commonsDecode         fixed        50  avgt    5    1983.025 ±   664.293  ns/op
Base64Benchmarks.commonsDecode         fixed       100  avgt    5    2538.024 ±   194.473  ns/op
Base64Benchmarks.commonsDecode         fixed       500  avgt    5    8665.901 ±   436.801  ns/op
Base64Benchmarks.commonsDecode         fixed      1000  avgt    5   14626.194 ±  1057.107  ns/op
Base64Benchmarks.commonsDecode         fixed     10000  avgt    5  125333.126 ± 13826.382  ns/op
Base64Benchmarks.commonsDecode        random         1  avgt    5    1010.748 ±    91.521  ns/op
Base64Benchmarks.commonsDecode        random        10  avgt    5    1032.104 ±   175.253  ns/op
Base64Benchmarks.commonsDecode        random        50  avgt    5    1295.096 ±    10.444  ns/op
Base64Benchmarks.commonsDecode        random       100  avgt    5    1694.891 ±    11.067  ns/op
Base64Benchmarks.commonsDecode        random       500  avgt    5    5056.474 ±    93.669  ns/op
Base64Benchmarks.commonsDecode        random      1000  avgt    5    9662.161 ±  1504.097  ns/op
Base64Benchmarks.commonsDecode        random     10000  avgt    5   95713.006 ± 33705.276  ns/op
Base64Benchmarks.commonsEncode         fixed         1  avgt    5     975.529 ±    31.313  ns/op
Base64Benchmarks.commonsEncode         fixed        10  avgt    5    1063.010 ±   163.691  ns/op
Base64Benchmarks.commonsEncode         fixed        50  avgt    5    1570.051 ±   278.484  ns/op
Base64Benchmarks.commonsEncode         fixed       100  avgt    5    2183.248 ±    75.897  ns/op
Base64Benchmarks.commonsEncode         fixed       500  avgt    5    7440.388 ±   361.266  ns/op
Base64Benchmarks.commonsEncode         fixed      1000  avgt    5   14251.271 ±   102.288  ns/op
Base64Benchmarks.commonsEncode         fixed     10000  avgt    5  137192.210 ± 31179.354  ns/op
Base64Benchmarks.commonsEncode        random         1  avgt    5     974.652 ±    13.949  ns/op
Base64Benchmarks.commonsEncode        random        10  avgt    5    1002.902 ±    24.064  ns/op
Base64Benchmarks.commonsEncode        random        50  avgt    5    1365.798 ±   112.311  ns/op
Base64Benchmarks.commonsEncode        random       100  avgt    5    1875.589 ±   260.663  ns/op
Base64Benchmarks.commonsEncode        random       500  avgt    5    5860.201 ±   102.598  ns/op
Base64Benchmarks.commonsEncode        random      1000  avgt    5   11467.344 ±   949.605  ns/op
Base64Benchmarks.commonsEncode        random     10000  avgt    5   98758.231 ±  3662.199  ns/op
Base64Benchmarks.commonsUrlDecode      fixed         1  avgt    5    1041.185 ±   179.067  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        10  avgt    5    1334.612 ±   515.027  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        50  avgt    5    1891.891 ±   562.816  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       100  avgt    5    2680.502 ±   174.258  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       500  avgt    5    9591.147 ±   123.203  ns/op
Base64Benchmarks.commonsUrlDecode      fixed      1000  avgt    5   13634.867 ±  1182.246  ns/op
Base64Benchmarks.commonsUrlDecode      fixed     10000  avgt    5  125110.659 ± 10346.751  ns/op
Base64Benchmarks.commonsUrlDecode     random         1  avgt    5     991.451 ±    25.470  ns/op
Base64Benchmarks.commonsUrlDecode     random        10  avgt    5    1015.002 ±    61.081  ns/op
Base64Benchmarks.commonsUrlDecode     random        50  avgt    5    1349.729 ±   247.345  ns/op
Base64Benchmarks.commonsUrlDecode     random       100  avgt    5    1791.355 ±   227.834  ns/op
Base64Benchmarks.commonsUrlDecode     random       500  avgt    5    5824.583 ±  2019.564  ns/op
Base64Benchmarks.commonsUrlDecode     random      1000  avgt    5    9817.758 ±  1077.020  ns/op
Base64Benchmarks.commonsUrlDecode     random     10000  avgt    5   95144.546 ± 25332.691  ns/op
Base64Benchmarks.commonsUrlEncode      fixed         1  avgt    5    1020.486 ±   127.693  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        10  avgt    5    1166.919 ±   233.967  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        50  avgt    5    1644.413 ±   290.339  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       100  avgt    5    2256.582 ±   250.447  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       500  avgt    5    8028.370 ±  1281.683  ns/op
Base64Benchmarks.commonsUrlEncode      fixed      1000  avgt    5   14423.788 ±   869.654  ns/op
Base64Benchmarks.commonsUrlEncode      fixed     10000  avgt    5  135712.769 ± 12439.865  ns/op
Base64Benchmarks.commonsUrlEncode     random         1  avgt    5    1092.009 ±   272.317  ns/op
Base64Benchmarks.commonsUrlEncode     random        10  avgt    5    1048.558 ±   107.892  ns/op
Base64Benchmarks.commonsUrlEncode     random        50  avgt    5    1359.690 ±    17.257  ns/op
Base64Benchmarks.commonsUrlEncode     random       100  avgt    5    1891.056 ±   398.378  ns/op
Base64Benchmarks.commonsUrlEncode     random       500  avgt    5    6151.171 ±   305.108  ns/op
Base64Benchmarks.commonsUrlEncode     random      1000  avgt    5   11233.140 ±   510.877  ns/op
Base64Benchmarks.commonsUrlEncode     random     10000  avgt    5  102888.136 ± 12478.002  ns/op
Base64Benchmarks.jdkDecode             fixed         1  avgt    5      50.295 ±     7.749  ns/op
Base64Benchmarks.jdkDecode             fixed        10  avgt    5      70.111 ±    14.454  ns/op
Base64Benchmarks.jdkDecode             fixed        50  avgt    5     191.803 ±    19.636  ns/op
Base64Benchmarks.jdkDecode             fixed       100  avgt    5     321.702 ±    47.838  ns/op
Base64Benchmarks.jdkDecode             fixed       500  avgt    5    1374.972 ±   129.391  ns/op
Base64Benchmarks.jdkDecode             fixed      1000  avgt    5    2600.805 ±   108.688  ns/op
Base64Benchmarks.jdkDecode             fixed     10000  avgt    5   30810.419 ±  9524.601  ns/op
Base64Benchmarks.jdkDecode            random         1  avgt    5      34.790 ±     1.260  ns/op
Base64Benchmarks.jdkDecode            random        10  avgt    5      48.593 ±     3.029  ns/op
Base64Benchmarks.jdkDecode            random        50  avgt    5     116.755 ±     7.249  ns/op
Base64Benchmarks.jdkDecode            random       100  avgt    5     212.807 ±     9.679  ns/op
Base64Benchmarks.jdkDecode            random       500  avgt    5     901.641 ±   113.685  ns/op
Base64Benchmarks.jdkDecode            random      1000  avgt    5    1874.577 ±   525.674  ns/op
Base64Benchmarks.jdkDecode            random     10000  avgt    5   20229.984 ±  6851.779  ns/op
Base64Benchmarks.jdkEncode             fixed         1  avgt    5      40.093 ±     6.167  ns/op
Base64Benchmarks.jdkEncode             fixed        10  avgt    5      64.672 ±    34.129  ns/op
Base64Benchmarks.jdkEncode             fixed        50  avgt    5     113.668 ±    48.672  ns/op
Base64Benchmarks.jdkEncode             fixed       100  avgt    5     159.364 ±    13.681  ns/op
Base64Benchmarks.jdkEncode             fixed       500  avgt    5     636.124 ±   122.813  ns/op
Base64Benchmarks.jdkEncode             fixed      1000  avgt    5    1164.392 ±    52.678  ns/op
Base64Benchmarks.jdkEncode             fixed     10000  avgt    5   12794.908 ±  1007.968  ns/op
Base64Benchmarks.jdkEncode            random         1  avgt    5      34.604 ±     2.095  ns/op
Base64Benchmarks.jdkEncode            random        10  avgt    5      49.158 ±     4.244  ns/op
Base64Benchmarks.jdkEncode            random        50  avgt    5      86.639 ±     4.988  ns/op
Base64Benchmarks.jdkEncode            random       100  avgt    5     137.035 ±    18.095  ns/op
Base64Benchmarks.jdkEncode            random       500  avgt    5     475.643 ±    36.725  ns/op
Base64Benchmarks.jdkEncode            random      1000  avgt    5     913.223 ±    78.698  ns/op
Base64Benchmarks.jdkEncode            random     10000  avgt    5    9424.711 ±   358.565  ns/op
Base64Benchmarks.jdkUrlDecode          fixed         1  avgt    5      42.926 ±     4.142  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        10  avgt    5      70.189 ±    12.265  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        50  avgt    5     201.320 ±    99.869  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       100  avgt    5     317.379 ±    33.757  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       500  avgt    5    1349.647 ±   157.388  ns/op
Base64Benchmarks.jdkUrlDecode          fixed      1000  avgt    5    2788.362 ±   551.500  ns/op
Base64Benchmarks.jdkUrlDecode          fixed     10000  avgt    5   28973.199 ±  5968.603  ns/op
Base64Benchmarks.jdkUrlDecode         random         1  avgt    5      36.125 ±     4.298  ns/op
Base64Benchmarks.jdkUrlDecode         random        10  avgt    5      53.113 ±    24.108  ns/op
Base64Benchmarks.jdkUrlDecode         random        50  avgt    5     118.691 ±     5.129  ns/op
Base64Benchmarks.jdkUrlDecode         random       100  avgt    5     232.338 ±    13.165  ns/op
Base64Benchmarks.jdkUrlDecode         random       500  avgt    5     901.822 ±    40.317  ns/op
Base64Benchmarks.jdkUrlDecode         random      1000  avgt    5    2183.658 ±  1479.977  ns/op
Base64Benchmarks.jdkUrlDecode         random     10000  avgt    5   19576.586 ±  3955.662  ns/op
Base64Benchmarks.jdkUrlEncode          fixed         1  avgt    5      38.159 ±     1.238  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        10  avgt    5      62.480 ±    11.044  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        50  avgt    5     103.589 ±    13.054  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       100  avgt    5     165.103 ±    11.283  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       500  avgt    5     602.792 ±    34.822  ns/op
Base64Benchmarks.jdkUrlEncode          fixed      1000  avgt    5    1212.759 ±   222.557  ns/op
Base64Benchmarks.jdkUrlEncode          fixed     10000  avgt    5   13472.182 ±  2694.565  ns/op
Base64Benchmarks.jdkUrlEncode         random         1  avgt    5      32.196 ±     1.098  ns/op
Base64Benchmarks.jdkUrlEncode         random        10  avgt    5      50.170 ±     3.966  ns/op
Base64Benchmarks.jdkUrlEncode         random        50  avgt    5      84.591 ±     2.386  ns/op
Base64Benchmarks.jdkUrlEncode         random       100  avgt    5     130.813 ±     5.496  ns/op
Base64Benchmarks.jdkUrlEncode         random       500  avgt    5     476.432 ±    67.846  ns/op
Base64Benchmarks.jdkUrlEncode         random      1000  avgt    5     902.065 ±    67.868  ns/op
Base64Benchmarks.jdkUrlEncode         random     10000  avgt    5    9542.495 ±   533.466  ns/op

Benchmark result is saved to /static/data/charts/base64-jni/jdk17.json
