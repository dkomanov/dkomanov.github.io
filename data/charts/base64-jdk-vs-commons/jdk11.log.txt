# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:52:16
# Fork: 1 of 1
# Warmup Iteration   1: 1320.703 ns/op
# Warmup Iteration   2: 776.379 ns/op
# Warmup Iteration   3: 753.281 ns/op
# Warmup Iteration   4: 759.371 ns/op
# Warmup Iteration   5: 767.251 ns/op
Iteration   1: 764.345 ns/op
Iteration   2: 760.409 ns/op
Iteration   3: 756.615 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  760.456 ±(99.9%) 70.511 ns/op [Average]
  (min, avg, max) = (756.615, 760.456, 764.345), stdev = 3.865
  CI (99.9%): [689.946, 830.967] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.45% complete, ETA 00:54:34
# Fork: 1 of 1
# Warmup Iteration   1: 1364.057 ns/op
# Warmup Iteration   2: 872.544 ns/op
# Warmup Iteration   3: 871.883 ns/op
# Warmup Iteration   4: 871.647 ns/op
# Warmup Iteration   5: 867.015 ns/op
Iteration   1: 873.479 ns/op
Iteration   2: 867.131 ns/op
Iteration   3: 868.190 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  869.600 ±(99.9%) 62.043 ns/op [Average]
  (min, avg, max) = (867.131, 869.600, 873.479), stdev = 3.401
  CI (99.9%): [807.556, 931.643] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 0.89% complete, ETA 00:54:15
# Fork: 1 of 1
# Warmup Iteration   1: 2168.578 ns/op
# Warmup Iteration   2: 1445.177 ns/op
# Warmup Iteration   3: 1423.165 ns/op
# Warmup Iteration   4: 1423.169 ns/op
# Warmup Iteration   5: 1414.801 ns/op
Iteration   1: 1411.334 ns/op
Iteration   2: 1412.812 ns/op
Iteration   3: 1411.987 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1412.044 ±(99.9%) 13.515 ns/op [Average]
  (min, avg, max) = (1411.334, 1412.044, 1412.812), stdev = 0.741
  CI (99.9%): [1398.529, 1425.560] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 1.34% complete, ETA 00:53:57
# Fork: 1 of 1
# Warmup Iteration   1: 3124.037 ns/op
# Warmup Iteration   2: 2219.647 ns/op
# Warmup Iteration   3: 2202.788 ns/op
# Warmup Iteration   4: 2112.799 ns/op
# Warmup Iteration   5: 2121.369 ns/op
Iteration   1: 2113.277 ns/op
Iteration   2: 2119.099 ns/op
Iteration   3: 2111.593 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  2114.656 ±(99.9%) 71.848 ns/op [Average]
  (min, avg, max) = (2111.593, 2114.656, 2119.099), stdev = 3.938
  CI (99.9%): [2042.808, 2186.504] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 1.79% complete, ETA 00:53:40
# Fork: 1 of 1
# Warmup Iteration   1: 9086.308 ns/op
# Warmup Iteration   2: 8137.208 ns/op
# Warmup Iteration   3: 7483.877 ns/op
# Warmup Iteration   4: 7466.332 ns/op
# Warmup Iteration   5: 7507.496 ns/op
Iteration   1: 7454.495 ns/op
Iteration   2: 7483.246 ns/op
Iteration   3: 7476.682 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  7471.474 ±(99.9%) 274.869 ns/op [Average]
  (min, avg, max) = (7454.495, 7471.474, 7483.246), stdev = 15.067
  CI (99.9%): [7196.605, 7746.344] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 2.23% complete, ETA 00:53:23
# Fork: 1 of 1
# Warmup Iteration   1: 13833.406 ns/op
# Warmup Iteration   2: 12331.123 ns/op
# Warmup Iteration   3: 11483.001 ns/op
# Warmup Iteration   4: 11512.600 ns/op
# Warmup Iteration   5: 11504.844 ns/op
Iteration   1: 11551.931 ns/op
Iteration   2: 11555.136 ns/op
Iteration   3: 11524.456 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  11543.841 ±(99.9%) 307.664 ns/op [Average]
  (min, avg, max) = (11524.456, 11543.841, 11555.136), stdev = 16.864
  CI (99.9%): [11236.177, 11851.506] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 2.68% complete, ETA 00:53:07
# Fork: 1 of 1
# Warmup Iteration   1: 122744.595 ns/op
# Warmup Iteration   2: 110359.928 ns/op
# Warmup Iteration   3: 111737.979 ns/op
# Warmup Iteration   4: 122829.151 ns/op
# Warmup Iteration   5: 107995.396 ns/op
Iteration   1: 108252.670 ns/op
Iteration   2: 108017.185 ns/op
Iteration   3: 108199.779 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  108156.545 ±(99.9%) 2254.052 ns/op [Average]
  (min, avg, max) = (108017.185, 108156.545, 108252.670), stdev = 123.552
  CI (99.9%): [105902.492, 110410.597] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 3.13% complete, ETA 00:52:51
# Fork: 1 of 1
# Warmup Iteration   1: 1108.734 ns/op
# Warmup Iteration   2: 703.573 ns/op
# Warmup Iteration   3: 694.757 ns/op
# Warmup Iteration   4: 697.394 ns/op
# Warmup Iteration   5: 693.952 ns/op
Iteration   1: 727.325 ns/op
Iteration   2: 690.481 ns/op
Iteration   3: 690.283 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  702.696 ±(99.9%) 389.132 ns/op [Average]
  (min, avg, max) = (690.283, 702.696, 727.325), stdev = 21.330
  CI (99.9%): [313.565, 1091.828] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 3.57% complete, ETA 00:52:37
# Fork: 1 of 1
# Warmup Iteration   1: 1193.868 ns/op
# Warmup Iteration   2: 850.489 ns/op
# Warmup Iteration   3: 758.098 ns/op
# Warmup Iteration   4: 787.476 ns/op
# Warmup Iteration   5: 734.025 ns/op
Iteration   1: 745.070 ns/op
Iteration   2: 739.286 ns/op
Iteration   3: 751.918 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  745.425 ±(99.9%) 115.368 ns/op [Average]
  (min, avg, max) = (739.286, 745.425, 751.918), stdev = 6.324
  CI (99.9%): [630.057, 860.793] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 4.02% complete, ETA 00:52:23
# Fork: 1 of 1
# Warmup Iteration   1: 1585.697 ns/op
# Warmup Iteration   2: 1032.188 ns/op
# Warmup Iteration   3: 995.326 ns/op
# Warmup Iteration   4: 1001.626 ns/op
# Warmup Iteration   5: 1002.187 ns/op
Iteration   1: 989.346 ns/op
Iteration   2: 993.073 ns/op
Iteration   3: 991.488 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  991.302 ±(99.9%) 34.124 ns/op [Average]
  (min, avg, max) = (989.346, 991.302, 993.073), stdev = 1.870
  CI (99.9%): [957.179, 1025.426] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 4.46% complete, ETA 00:52:08
# Fork: 1 of 1
# Warmup Iteration   1: 2083.428 ns/op
# Warmup Iteration   2: 1465.314 ns/op
# Warmup Iteration   3: 1338.367 ns/op
# Warmup Iteration   4: 1385.296 ns/op
# Warmup Iteration   5: 1345.014 ns/op
Iteration   1: 1331.802 ns/op
Iteration   2: 1334.933 ns/op
Iteration   3: 1334.387 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  1333.707 ±(99.9%) 30.509 ns/op [Average]
  (min, avg, max) = (1331.802, 1333.707, 1334.933), stdev = 1.672
  CI (99.9%): [1303.198, 1364.217] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 4.91% complete, ETA 00:51:54
# Fork: 1 of 1
# Warmup Iteration   1: 5303.286 ns/op
# Warmup Iteration   2: 4380.131 ns/op
# Warmup Iteration   3: 4106.369 ns/op
# Warmup Iteration   4: 4111.630 ns/op
# Warmup Iteration   5: 4096.828 ns/op
Iteration   1: 4094.681 ns/op
Iteration   2: 4107.791 ns/op
Iteration   3: 4090.364 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  4097.612 ±(99.9%) 165.578 ns/op [Average]
  (min, avg, max) = (4090.364, 4097.612, 4107.791), stdev = 9.076
  CI (99.9%): [3932.035, 4263.190] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 5.36% complete, ETA 00:51:38
# Fork: 1 of 1
# Warmup Iteration   1: 9308.543 ns/op
# Warmup Iteration   2: 9024.736 ns/op
# Warmup Iteration   3: 7685.149 ns/op
# Warmup Iteration   4: 7680.782 ns/op
# Warmup Iteration   5: 7776.532 ns/op
Iteration   1: 7723.759 ns/op
Iteration   2: 7748.609 ns/op
Iteration   3: 7732.598 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  7734.989 ±(99.9%) 229.796 ns/op [Average]
  (min, avg, max) = (7723.759, 7734.989, 7748.609), stdev = 12.596
  CI (99.9%): [7505.192, 7964.785] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 5.80% complete, ETA 00:51:23
# Fork: 1 of 1
# Warmup Iteration   1: 97418.674 ns/op
# Warmup Iteration   2: 84377.290 ns/op
# Warmup Iteration   3: 83292.820 ns/op
# Warmup Iteration   4: 81911.239 ns/op
# Warmup Iteration   5: 81633.870 ns/op
Iteration   1: 81101.079 ns/op
Iteration   2: 80973.448 ns/op
Iteration   3: 81044.915 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsDecode":
  81039.814 ±(99.9%) 1167.020 ns/op [Average]
  (min, avg, max) = (80973.448, 81039.814, 81101.079), stdev = 63.968
  CI (99.9%): [79872.794, 82206.834] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 6.25% complete, ETA 00:51:08
# Fork: 1 of 1
# Warmup Iteration   1: 1157.093 ns/op
# Warmup Iteration   2: 762.418 ns/op
# Warmup Iteration   3: 716.128 ns/op
# Warmup Iteration   4: 740.087 ns/op
# Warmup Iteration   5: 720.809 ns/op
Iteration   1: 715.536 ns/op
Iteration   2: 729.906 ns/op
Iteration   3: 714.896 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  720.113 ±(99.9%) 154.835 ns/op [Average]
  (min, avg, max) = (714.896, 720.113, 729.906), stdev = 8.487
  CI (99.9%): [565.277, 874.948] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 6.70% complete, ETA 00:50:53
# Fork: 1 of 1
# Warmup Iteration   1: 1246.824 ns/op
# Warmup Iteration   2: 781.071 ns/op
# Warmup Iteration   3: 775.337 ns/op
# Warmup Iteration   4: 789.282 ns/op
# Warmup Iteration   5: 874.362 ns/op
Iteration   1: 773.513 ns/op
Iteration   2: 771.966 ns/op
Iteration   3: 770.498 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  771.992 ±(99.9%) 27.510 ns/op [Average]
  (min, avg, max) = (770.498, 771.992, 773.513), stdev = 1.508
  CI (99.9%): [744.482, 799.502] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 7.14% complete, ETA 00:50:39
# Fork: 1 of 1
# Warmup Iteration   1: 1926.746 ns/op
# Warmup Iteration   2: 1208.144 ns/op
# Warmup Iteration   3: 1212.768 ns/op
# Warmup Iteration   4: 1211.505 ns/op
# Warmup Iteration   5: 1210.668 ns/op
Iteration   1: 1208.622 ns/op
Iteration   2: 1205.380 ns/op
Iteration   3: 1212.753 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1208.918 ±(99.9%) 67.423 ns/op [Average]
  (min, avg, max) = (1205.380, 1208.918, 1212.753), stdev = 3.696
  CI (99.9%): [1141.495, 1276.342] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 7.59% complete, ETA 00:50:24
# Fork: 1 of 1
# Warmup Iteration   1: 2870.408 ns/op
# Warmup Iteration   2: 1960.193 ns/op
# Warmup Iteration   3: 1896.699 ns/op
# Warmup Iteration   4: 1888.747 ns/op
# Warmup Iteration   5: 1881.459 ns/op
Iteration   1: 1892.592 ns/op
Iteration   2: 1882.672 ns/op
Iteration   3: 1891.829 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1889.031 ±(99.9%) 100.712 ns/op [Average]
  (min, avg, max) = (1882.672, 1889.031, 1892.592), stdev = 5.520
  CI (99.9%): [1788.319, 1989.743] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 8.04% complete, ETA 00:50:10
# Fork: 1 of 1
# Warmup Iteration   1: 8446.176 ns/op
# Warmup Iteration   2: 7497.497 ns/op
# Warmup Iteration   3: 6946.030 ns/op
# Warmup Iteration   4: 7018.611 ns/op
# Warmup Iteration   5: 6956.813 ns/op
Iteration   1: 6917.510 ns/op
Iteration   2: 6944.593 ns/op
Iteration   3: 6931.966 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  6931.356 ±(99.9%) 247.234 ns/op [Average]
  (min, avg, max) = (6917.510, 6931.356, 6944.593), stdev = 13.552
  CI (99.9%): [6684.122, 7178.590] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 8.48% complete, ETA 00:49:55
# Fork: 1 of 1
# Warmup Iteration   1: 16095.413 ns/op
# Warmup Iteration   2: 14163.858 ns/op
# Warmup Iteration   3: 14049.708 ns/op
# Warmup Iteration   4: 13647.403 ns/op
# Warmup Iteration   5: 13540.898 ns/op
Iteration   1: 13686.500 ns/op
Iteration   2: 13571.539 ns/op
Iteration   3: 13582.363 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  13613.467 ±(99.9%) 1158.097 ns/op [Average]
  (min, avg, max) = (13571.539, 13613.467, 13686.500), stdev = 63.479
  CI (99.9%): [12455.370, 14771.564] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 8.93% complete, ETA 00:49:39
# Fork: 1 of 1
# Warmup Iteration   1: 151153.018 ns/op
# Warmup Iteration   2: 136239.486 ns/op
# Warmup Iteration   3: 135337.456 ns/op
# Warmup Iteration   4: 131490.909 ns/op
# Warmup Iteration   5: 130570.739 ns/op
Iteration   1: 129834.707 ns/op
Iteration   2: 130384.516 ns/op
Iteration   3: 129325.711 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  129848.311 ±(99.9%) 9660.671 ns/op [Average]
  (min, avg, max) = (129325.711, 129848.311, 130384.516), stdev = 529.534
  CI (99.9%): [120187.641, 139508.982] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 9.38% complete, ETA 00:49:24
# Fork: 1 of 1
# Warmup Iteration   1: 1099.391 ns/op
# Warmup Iteration   2: 707.785 ns/op
# Warmup Iteration   3: 703.931 ns/op
# Warmup Iteration   4: 704.404 ns/op
# Warmup Iteration   5: 698.699 ns/op
Iteration   1: 694.313 ns/op
Iteration   2: 696.101 ns/op
Iteration   3: 698.255 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  696.223 ±(99.9%) 36.012 ns/op [Average]
  (min, avg, max) = (694.313, 696.223, 698.255), stdev = 1.974
  CI (99.9%): [660.211, 732.235] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 9.82% complete, ETA 00:49:10
# Fork: 1 of 1
# Warmup Iteration   1: 1178.772 ns/op
# Warmup Iteration   2: 764.859 ns/op
# Warmup Iteration   3: 736.482 ns/op
# Warmup Iteration   4: 736.152 ns/op
# Warmup Iteration   5: 741.085 ns/op
Iteration   1: 738.800 ns/op
Iteration   2: 746.578 ns/op
Iteration   3: 742.475 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  742.618 ±(99.9%) 70.992 ns/op [Average]
  (min, avg, max) = (738.800, 742.618, 746.578), stdev = 3.891
  CI (99.9%): [671.626, 813.610] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 10.27% complete, ETA 00:48:55
# Fork: 1 of 1
# Warmup Iteration   1: 1675.186 ns/op
# Warmup Iteration   2: 1069.645 ns/op
# Warmup Iteration   3: 1078.379 ns/op
# Warmup Iteration   4: 1072.968 ns/op
# Warmup Iteration   5: 1072.597 ns/op
Iteration   1: 1065.171 ns/op
Iteration   2: 1063.539 ns/op
Iteration   3: 1061.349 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1063.353 ±(99.9%) 34.988 ns/op [Average]
  (min, avg, max) = (1061.349, 1063.353, 1065.171), stdev = 1.918
  CI (99.9%): [1028.364, 1098.341] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 10.71% complete, ETA 00:48:41
# Fork: 1 of 1
# Warmup Iteration   1: 2348.831 ns/op
# Warmup Iteration   2: 1563.486 ns/op
# Warmup Iteration   3: 1557.349 ns/op
# Warmup Iteration   4: 1565.382 ns/op
# Warmup Iteration   5: 1553.795 ns/op
Iteration   1: 1538.867 ns/op
Iteration   2: 1548.201 ns/op
Iteration   3: 1539.553 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  1542.207 ±(99.9%) 94.914 ns/op [Average]
  (min, avg, max) = (1538.867, 1542.207, 1548.201), stdev = 5.203
  CI (99.9%): [1447.293, 1637.121] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 11.16% complete, ETA 00:48:26
# Fork: 1 of 1
# Warmup Iteration   1: 6845.524 ns/op
# Warmup Iteration   2: 5706.141 ns/op
# Warmup Iteration   3: 5468.747 ns/op
# Warmup Iteration   4: 5451.459 ns/op
# Warmup Iteration   5: 5456.155 ns/op
Iteration   1: 5416.666 ns/op
Iteration   2: 5457.628 ns/op
Iteration   3: 5421.748 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  5432.014 ±(99.9%) 407.331 ns/op [Average]
  (min, avg, max) = (5416.666, 5432.014, 5457.628), stdev = 22.327
  CI (99.9%): [5024.683, 5839.346] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 11.61% complete, ETA 00:48:12
# Fork: 1 of 1
# Warmup Iteration   1: 12364.150 ns/op
# Warmup Iteration   2: 10910.146 ns/op
# Warmup Iteration   3: 11401.080 ns/op
# Warmup Iteration   4: 10444.768 ns/op
# Warmup Iteration   5: 10549.300 ns/op
Iteration   1: 10568.532 ns/op
Iteration   2: 10533.370 ns/op
Iteration   3: 10510.201 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  10537.367 ±(99.9%) 535.826 ns/op [Average]
  (min, avg, max) = (10510.201, 10537.367, 10568.532), stdev = 29.370
  CI (99.9%): [10001.541, 11073.194] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 12.05% complete, ETA 00:47:57
# Fork: 1 of 1
# Warmup Iteration   1: 113759.967 ns/op
# Warmup Iteration   2: 98839.613 ns/op
# Warmup Iteration   3: 97117.638 ns/op
# Warmup Iteration   4: 96387.026 ns/op
# Warmup Iteration   5: 96381.033 ns/op
Iteration   1: 95641.782 ns/op
Iteration   2: 95752.502 ns/op
Iteration   3: 96135.023 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsEncode":
  95843.102 ±(99.9%) 4721.490 ns/op [Average]
  (min, avg, max) = (95641.782, 95843.102, 96135.023), stdev = 258.801
  CI (99.9%): [91121.612, 100564.592] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 12.50% complete, ETA 00:47:42
# Fork: 1 of 1
# Warmup Iteration   1: 1117.222 ns/op
# Warmup Iteration   2: 731.505 ns/op
# Warmup Iteration   3: 718.242 ns/op
# Warmup Iteration   4: 737.222 ns/op
# Warmup Iteration   5: 709.480 ns/op
Iteration   1: 708.593 ns/op
Iteration   2: 714.434 ns/op
Iteration   3: 709.577 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  710.868 ±(99.9%) 57.047 ns/op [Average]
  (min, avg, max) = (708.593, 710.868, 714.434), stdev = 3.127
  CI (99.9%): [653.820, 767.915] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 12.95% complete, ETA 00:47:27
# Fork: 1 of 1
# Warmup Iteration   1: 1273.965 ns/op
# Warmup Iteration   2: 818.937 ns/op
# Warmup Iteration   3: 816.432 ns/op
# Warmup Iteration   4: 816.266 ns/op
# Warmup Iteration   5: 811.004 ns/op
Iteration   1: 812.658 ns/op
Iteration   2: 807.599 ns/op
Iteration   3: 812.675 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  810.977 ±(99.9%) 53.378 ns/op [Average]
  (min, avg, max) = (807.599, 810.977, 812.675), stdev = 2.926
  CI (99.9%): [757.599, 864.356] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 13.39% complete, ETA 00:47:13
# Fork: 1 of 1
# Warmup Iteration   1: 1982.688 ns/op
# Warmup Iteration   2: 1303.116 ns/op
# Warmup Iteration   3: 1247.810 ns/op
# Warmup Iteration   4: 1261.785 ns/op
# Warmup Iteration   5: 1257.074 ns/op
Iteration   1: 1285.558 ns/op
Iteration   2: 1278.518 ns/op
Iteration   3: 1249.060 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1271.045 ±(99.9%) 353.239 ns/op [Average]
  (min, avg, max) = (1249.060, 1271.045, 1285.558), stdev = 19.362
  CI (99.9%): [917.806, 1624.285] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 13.84% complete, ETA 00:46:58
# Fork: 1 of 1
# Warmup Iteration   1: 3001.690 ns/op
# Warmup Iteration   2: 1961.792 ns/op
# Warmup Iteration   3: 1944.249 ns/op
# Warmup Iteration   4: 1932.437 ns/op
# Warmup Iteration   5: 1933.747 ns/op
Iteration   1: 1925.096 ns/op
Iteration   2: 1928.541 ns/op
Iteration   3: 1933.102 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1928.913 ±(99.9%) 73.265 ns/op [Average]
  (min, avg, max) = (1925.096, 1928.913, 1933.102), stdev = 4.016
  CI (99.9%): [1855.648, 2002.178] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 14.29% complete, ETA 00:46:44
# Fork: 1 of 1
# Warmup Iteration   1: 8077.315 ns/op
# Warmup Iteration   2: 7056.638 ns/op
# Warmup Iteration   3: 6577.311 ns/op
# Warmup Iteration   4: 6541.654 ns/op
# Warmup Iteration   5: 6609.530 ns/op
Iteration   1: 6562.498 ns/op
Iteration   2: 6584.973 ns/op
Iteration   3: 6607.271 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  6584.914 ±(99.9%) 408.414 ns/op [Average]
  (min, avg, max) = (6562.498, 6584.914, 6607.271), stdev = 22.387
  CI (99.9%): [6176.500, 6993.328] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 14.73% complete, ETA 00:46:29
# Fork: 1 of 1
# Warmup Iteration   1: 13902.305 ns/op
# Warmup Iteration   2: 12498.851 ns/op
# Warmup Iteration   3: 11600.840 ns/op
# Warmup Iteration   4: 11762.203 ns/op
# Warmup Iteration   5: 11658.239 ns/op
Iteration   1: 11676.881 ns/op
Iteration   2: 11692.960 ns/op
Iteration   3: 11702.307 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  11690.716 ±(99.9%) 234.624 ns/op [Average]
  (min, avg, max) = (11676.881, 11690.716, 11702.307), stdev = 12.861
  CI (99.9%): [11456.092, 11925.340] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 15.18% complete, ETA 00:46:14
# Fork: 1 of 1
# Warmup Iteration   1: 124398.843 ns/op
# Warmup Iteration   2: 113574.065 ns/op
# Warmup Iteration   3: 110061.453 ns/op
# Warmup Iteration   4: 110572.561 ns/op
# Warmup Iteration   5: 107936.326 ns/op
Iteration   1: 108179.235 ns/op
Iteration   2: 108224.328 ns/op
Iteration   3: 108252.531 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  108218.698 ±(99.9%) 674.487 ns/op [Average]
  (min, avg, max) = (108179.235, 108218.698, 108252.531), stdev = 36.971
  CI (99.9%): [107544.211, 108893.185] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 15.63% complete, ETA 00:45:59
# Fork: 1 of 1
# Warmup Iteration   1: 1099.808 ns/op
# Warmup Iteration   2: 723.100 ns/op
# Warmup Iteration   3: 696.904 ns/op
# Warmup Iteration   4: 713.495 ns/op
# Warmup Iteration   5: 696.728 ns/op
Iteration   1: 693.304 ns/op
Iteration   2: 693.699 ns/op
Iteration   3: 696.068 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  694.357 ±(99.9%) 27.265 ns/op [Average]
  (min, avg, max) = (693.304, 694.357, 696.068), stdev = 1.494
  CI (99.9%): [667.092, 721.622] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 16.07% complete, ETA 00:45:45
# Fork: 1 of 1
# Warmup Iteration   1: 1173.507 ns/op
# Warmup Iteration   2: 766.049 ns/op
# Warmup Iteration   3: 754.266 ns/op
# Warmup Iteration   4: 750.907 ns/op
# Warmup Iteration   5: 747.476 ns/op
Iteration   1: 750.808 ns/op
Iteration   2: 788.026 ns/op
Iteration   3: 745.582 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  761.472 ±(99.9%) 422.243 ns/op [Average]
  (min, avg, max) = (745.582, 761.472, 788.026), stdev = 23.145
  CI (99.9%): [339.230, 1183.715] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 16.52% complete, ETA 00:45:30
# Fork: 1 of 1
# Warmup Iteration   1: 1603.444 ns/op
# Warmup Iteration   2: 1142.329 ns/op
# Warmup Iteration   3: 1007.466 ns/op
# Warmup Iteration   4: 1070.586 ns/op
# Warmup Iteration   5: 1008.871 ns/op
Iteration   1: 1001.238 ns/op
Iteration   2: 1000.597 ns/op
Iteration   3: 996.522 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  999.452 ±(99.9%) 46.660 ns/op [Average]
  (min, avg, max) = (996.522, 999.452, 1001.238), stdev = 2.558
  CI (99.9%): [952.792, 1046.113] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 16.96% complete, ETA 00:45:16
# Fork: 1 of 1
# Warmup Iteration   1: 2155.327 ns/op
# Warmup Iteration   2: 1355.708 ns/op
# Warmup Iteration   3: 1336.907 ns/op
# Warmup Iteration   4: 1344.451 ns/op
# Warmup Iteration   5: 1347.795 ns/op
Iteration   1: 1336.301 ns/op
Iteration   2: 1338.291 ns/op
Iteration   3: 1339.176 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  1337.923 ±(99.9%) 26.867 ns/op [Average]
  (min, avg, max) = (1336.301, 1337.923, 1339.176), stdev = 1.473
  CI (99.9%): [1311.056, 1364.789] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 17.41% complete, ETA 00:45:01
# Fork: 1 of 1
# Warmup Iteration   1: 5370.918 ns/op
# Warmup Iteration   2: 4751.548 ns/op
# Warmup Iteration   3: 4087.558 ns/op
# Warmup Iteration   4: 4125.519 ns/op
# Warmup Iteration   5: 4227.378 ns/op
Iteration   1: 4100.044 ns/op
Iteration   2: 4100.150 ns/op
Iteration   3: 4103.516 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  4101.236 ±(99.9%) 36.030 ns/op [Average]
  (min, avg, max) = (4100.044, 4101.236, 4103.516), stdev = 1.975
  CI (99.9%): [4065.206, 4137.267] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 17.86% complete, ETA 00:44:47
# Fork: 1 of 1
# Warmup Iteration   1: 9336.914 ns/op
# Warmup Iteration   2: 8446.832 ns/op
# Warmup Iteration   3: 7740.340 ns/op
# Warmup Iteration   4: 7753.052 ns/op
# Warmup Iteration   5: 7711.543 ns/op
Iteration   1: 7722.156 ns/op
Iteration   2: 7765.836 ns/op
Iteration   3: 7721.587 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  7736.526 ±(99.9%) 463.113 ns/op [Average]
  (min, avg, max) = (7721.587, 7736.526, 7765.836), stdev = 25.385
  CI (99.9%): [7273.414, 8199.639] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 18.30% complete, ETA 00:44:32
# Fork: 1 of 1
# Warmup Iteration   1: 97294.976 ns/op
# Warmup Iteration   2: 84549.572 ns/op
# Warmup Iteration   3: 83605.252 ns/op
# Warmup Iteration   4: 81838.207 ns/op
# Warmup Iteration   5: 85362.789 ns/op
Iteration   1: 80892.941 ns/op
Iteration   2: 81315.290 ns/op
Iteration   3: 81049.744 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlDecode":
  81085.991 ±(99.9%) 3894.943 ns/op [Average]
  (min, avg, max) = (80892.941, 81085.991, 81315.290), stdev = 213.495
  CI (99.9%): [77191.048, 84980.934] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 18.75% complete, ETA 00:44:17
# Fork: 1 of 1
# Warmup Iteration   1: 1168.182 ns/op
# Warmup Iteration   2: 752.902 ns/op
# Warmup Iteration   3: 718.377 ns/op
# Warmup Iteration   4: 710.535 ns/op
# Warmup Iteration   5: 713.632 ns/op
Iteration   1: 712.845 ns/op
Iteration   2: 728.743 ns/op
Iteration   3: 711.822 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  717.803 ±(99.9%) 173.096 ns/op [Average]
  (min, avg, max) = (711.822, 717.803, 728.743), stdev = 9.488
  CI (99.9%): [544.707, 890.900] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 19.20% complete, ETA 00:44:03
# Fork: 1 of 1
# Warmup Iteration   1: 1235.911 ns/op
# Warmup Iteration   2: 783.903 ns/op
# Warmup Iteration   3: 764.481 ns/op
# Warmup Iteration   4: 766.962 ns/op
# Warmup Iteration   5: 773.578 ns/op
Iteration   1: 766.190 ns/op
Iteration   2: 762.409 ns/op
Iteration   3: 786.611 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  771.737 ±(99.9%) 237.528 ns/op [Average]
  (min, avg, max) = (762.409, 771.737, 786.611), stdev = 13.020
  CI (99.9%): [534.209, 1009.265] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 19.64% complete, ETA 00:43:48
# Fork: 1 of 1
# Warmup Iteration   1: 1912.675 ns/op
# Warmup Iteration   2: 1227.021 ns/op
# Warmup Iteration   3: 1211.741 ns/op
# Warmup Iteration   4: 1218.255 ns/op
# Warmup Iteration   5: 1280.371 ns/op
Iteration   1: 1198.061 ns/op
Iteration   2: 1233.800 ns/op
Iteration   3: 1194.388 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1208.750 ±(99.9%) 397.198 ns/op [Average]
  (min, avg, max) = (1194.388, 1208.750, 1233.800), stdev = 21.772
  CI (99.9%): [811.552, 1605.947] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 20.09% complete, ETA 00:43:34
# Fork: 1 of 1
# Warmup Iteration   1: 2883.052 ns/op
# Warmup Iteration   2: 1899.318 ns/op
# Warmup Iteration   3: 1866.694 ns/op
# Warmup Iteration   4: 1855.498 ns/op
# Warmup Iteration   5: 1848.120 ns/op
Iteration   1: 1864.389 ns/op
Iteration   2: 1859.186 ns/op
Iteration   3: 1859.108 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1860.894 ±(99.9%) 55.225 ns/op [Average]
  (min, avg, max) = (1859.108, 1860.894, 1864.389), stdev = 3.027
  CI (99.9%): [1805.669, 1916.119] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 20.54% complete, ETA 00:43:19
# Fork: 1 of 1
# Warmup Iteration   1: 8626.019 ns/op
# Warmup Iteration   2: 7879.066 ns/op
# Warmup Iteration   3: 6978.110 ns/op
# Warmup Iteration   4: 6952.776 ns/op
# Warmup Iteration   5: 6947.249 ns/op
Iteration   1: 6992.423 ns/op
Iteration   2: 6993.611 ns/op
Iteration   3: 6963.351 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  6983.128 ±(99.9%) 312.663 ns/op [Average]
  (min, avg, max) = (6963.351, 6983.128, 6993.611), stdev = 17.138
  CI (99.9%): [6670.466, 7295.791] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 20.98% complete, ETA 00:43:04
# Fork: 1 of 1
# Warmup Iteration   1: 15690.186 ns/op
# Warmup Iteration   2: 14212.096 ns/op
# Warmup Iteration   3: 14307.604 ns/op
# Warmup Iteration   4: 15340.036 ns/op
# Warmup Iteration   5: 13544.197 ns/op
Iteration   1: 13510.299 ns/op
Iteration   2: 13741.624 ns/op
Iteration   3: 13411.893 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  13554.606 ±(99.9%) 3088.151 ns/op [Average]
  (min, avg, max) = (13411.893, 13554.606, 13741.624), stdev = 169.272
  CI (99.9%): [10466.455, 16642.756] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 21.43% complete, ETA 00:42:50
# Fork: 1 of 1
# Warmup Iteration   1: 151384.228 ns/op
# Warmup Iteration   2: 133713.581 ns/op
# Warmup Iteration   3: 135112.852 ns/op
# Warmup Iteration   4: 131478.421 ns/op
# Warmup Iteration   5: 130937.341 ns/op
Iteration   1: 131869.988 ns/op
Iteration   2: 130219.592 ns/op
Iteration   3: 130218.928 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  130769.503 ±(99.9%) 17387.144 ns/op [Average]
  (min, avg, max) = (130218.928, 130769.503, 131869.988), stdev = 953.048
  CI (99.9%): [113382.359, 148156.646] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 21.88% complete, ETA 00:42:35
# Fork: 1 of 1
# Warmup Iteration   1: 1068.821 ns/op
# Warmup Iteration   2: 721.038 ns/op
# Warmup Iteration   3: 697.906 ns/op
# Warmup Iteration   4: 697.487 ns/op
# Warmup Iteration   5: 804.397 ns/op
Iteration   1: 696.354 ns/op
Iteration   2: 696.354 ns/op
Iteration   3: 703.314 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  698.674 ±(99.9%) 73.308 ns/op [Average]
  (min, avg, max) = (696.354, 698.674, 703.314), stdev = 4.018
  CI (99.9%): [625.366, 771.982] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 22.32% complete, ETA 00:42:20
# Fork: 1 of 1
# Warmup Iteration   1: 1185.942 ns/op
# Warmup Iteration   2: 869.122 ns/op
# Warmup Iteration   3: 739.823 ns/op
# Warmup Iteration   4: 744.063 ns/op
# Warmup Iteration   5: 738.010 ns/op
Iteration   1: 739.288 ns/op
Iteration   2: 737.385 ns/op
Iteration   3: 749.365 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  742.013 ±(99.9%) 117.451 ns/op [Average]
  (min, avg, max) = (737.385, 742.013, 749.365), stdev = 6.438
  CI (99.9%): [624.562, 859.463] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 22.77% complete, ETA 00:42:06
# Fork: 1 of 1
# Warmup Iteration   1: 1669.723 ns/op
# Warmup Iteration   2: 1071.839 ns/op
# Warmup Iteration   3: 1130.259 ns/op
# Warmup Iteration   4: 1065.671 ns/op
# Warmup Iteration   5: 1059.742 ns/op
Iteration   1: 1054.400 ns/op
Iteration   2: 1052.593 ns/op
Iteration   3: 1070.084 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1059.026 ±(99.9%) 175.499 ns/op [Average]
  (min, avg, max) = (1052.593, 1059.026, 1070.084), stdev = 9.620
  CI (99.9%): [883.527, 1234.524] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 23.21% complete, ETA 00:41:51
# Fork: 1 of 1
# Warmup Iteration   1: 2937.265 ns/op
# Warmup Iteration   2: 1657.378 ns/op
# Warmup Iteration   3: 1605.658 ns/op
# Warmup Iteration   4: 1533.403 ns/op
# Warmup Iteration   5: 1532.594 ns/op
Iteration   1: 1532.899 ns/op
Iteration   2: 1536.381 ns/op
Iteration   3: 1539.557 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  1536.279 ±(99.9%) 60.760 ns/op [Average]
  (min, avg, max) = (1532.899, 1536.279, 1539.557), stdev = 3.330
  CI (99.9%): [1475.519, 1597.039] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 23.66% complete, ETA 00:41:37
# Fork: 1 of 1
# Warmup Iteration   1: 6983.904 ns/op
# Warmup Iteration   2: 5689.898 ns/op
# Warmup Iteration   3: 5462.245 ns/op
# Warmup Iteration   4: 5397.957 ns/op
# Warmup Iteration   5: 5422.721 ns/op
Iteration   1: 5406.664 ns/op
Iteration   2: 5414.432 ns/op
Iteration   3: 5411.414 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  5410.837 ±(99.9%) 71.437 ns/op [Average]
  (min, avg, max) = (5406.664, 5410.837, 5414.432), stdev = 3.916
  CI (99.9%): [5339.400, 5482.274] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 24.11% complete, ETA 00:41:22
# Fork: 1 of 1
# Warmup Iteration   1: 12474.658 ns/op
# Warmup Iteration   2: 11140.029 ns/op
# Warmup Iteration   3: 10926.954 ns/op
# Warmup Iteration   4: 10497.656 ns/op
# Warmup Iteration   5: 10624.368 ns/op
Iteration   1: 10506.790 ns/op
Iteration   2: 10458.962 ns/op
Iteration   3: 10451.603 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  10472.452 ±(99.9%) 546.668 ns/op [Average]
  (min, avg, max) = (10451.603, 10472.452, 10506.790), stdev = 29.965
  CI (99.9%): [9925.784, 11019.120] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 24.55% complete, ETA 00:41:07
# Fork: 1 of 1
# Warmup Iteration   1: 112505.230 ns/op
# Warmup Iteration   2: 99049.430 ns/op
# Warmup Iteration   3: 101356.386 ns/op
# Warmup Iteration   4: 96028.961 ns/op
# Warmup Iteration   5: 95691.871 ns/op
Iteration   1: 95383.318 ns/op
Iteration   2: 95937.886 ns/op
Iteration   3: 95687.762 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.commonsUrlEncode":
  95669.655 ±(99.9%) 5066.768 ns/op [Average]
  (min, avg, max) = (95383.318, 95669.655, 95937.886), stdev = 277.727
  CI (99.9%): [90602.888, 100736.423] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 25.00% complete, ETA 00:40:53
# Fork: 1 of 1
# Warmup Iteration   1: 47.492 ns/op
# Warmup Iteration   2: 43.792 ns/op
# Warmup Iteration   3: 41.624 ns/op
# Warmup Iteration   4: 40.773 ns/op
# Warmup Iteration   5: 41.161 ns/op
Iteration   1: 40.618 ns/op
Iteration   2: 40.845 ns/op
Iteration   3: 40.530 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  40.665 ±(99.9%) 2.962 ns/op [Average]
  (min, avg, max) = (40.530, 40.665, 40.845), stdev = 0.162
  CI (99.9%): [37.703, 43.626] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 25.45% complete, ETA 00:40:38
# Fork: 1 of 1
# Warmup Iteration   1: 69.595 ns/op
# Warmup Iteration   2: 64.777 ns/op
# Warmup Iteration   3: 62.219 ns/op
# Warmup Iteration   4: 61.530 ns/op
# Warmup Iteration   5: 61.511 ns/op
Iteration   1: 61.253 ns/op
Iteration   2: 61.212 ns/op
Iteration   3: 61.162 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  61.209 ±(99.9%) 0.829 ns/op [Average]
  (min, avg, max) = (61.162, 61.209, 61.253), stdev = 0.045
  CI (99.9%): [60.380, 62.038] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 25.89% complete, ETA 00:40:23
# Fork: 1 of 1
# Warmup Iteration   1: 219.189 ns/op
# Warmup Iteration   2: 210.778 ns/op
# Warmup Iteration   3: 202.049 ns/op
# Warmup Iteration   4: 210.071 ns/op
# Warmup Iteration   5: 197.450 ns/op
Iteration   1: 197.353 ns/op
Iteration   2: 197.578 ns/op
Iteration   3: 197.496 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  197.476 ±(99.9%) 2.071 ns/op [Average]
  (min, avg, max) = (197.353, 197.476, 197.578), stdev = 0.113
  CI (99.9%): [195.405, 199.546] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 26.34% complete, ETA 00:40:08
# Fork: 1 of 1
# Warmup Iteration   1: 338.873 ns/op
# Warmup Iteration   2: 306.095 ns/op
# Warmup Iteration   3: 309.594 ns/op
# Warmup Iteration   4: 299.714 ns/op
# Warmup Iteration   5: 298.104 ns/op
Iteration   1: 298.911 ns/op
Iteration   2: 298.852 ns/op
Iteration   3: 298.329 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  298.698 ±(99.9%) 5.849 ns/op [Average]
  (min, avg, max) = (298.329, 298.698, 298.911), stdev = 0.321
  CI (99.9%): [292.848, 304.547] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 26.79% complete, ETA 00:39:54
# Fork: 1 of 1
# Warmup Iteration   1: 1354.993 ns/op
# Warmup Iteration   2: 1228.716 ns/op
# Warmup Iteration   3: 1190.557 ns/op
# Warmup Iteration   4: 1175.026 ns/op
# Warmup Iteration   5: 1174.734 ns/op
Iteration   1: 1170.590 ns/op
Iteration   2: 1173.810 ns/op
Iteration   3: 1172.291 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  1172.230 ±(99.9%) 29.389 ns/op [Average]
  (min, avg, max) = (1170.590, 1172.230, 1173.810), stdev = 1.611
  CI (99.9%): [1142.841, 1201.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 27.23% complete, ETA 00:39:39
# Fork: 1 of 1
# Warmup Iteration   1: 2689.400 ns/op
# Warmup Iteration   2: 2361.678 ns/op
# Warmup Iteration   3: 2376.063 ns/op
# Warmup Iteration   4: 2308.748 ns/op
# Warmup Iteration   5: 2294.314 ns/op
Iteration   1: 2298.093 ns/op
Iteration   2: 2303.264 ns/op
Iteration   3: 2293.506 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  2298.288 ±(99.9%) 89.061 ns/op [Average]
  (min, avg, max) = (2293.506, 2298.288, 2303.264), stdev = 4.882
  CI (99.9%): [2209.227, 2387.349] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 27.68% complete, ETA 00:39:24
# Fork: 1 of 1
# Warmup Iteration   1: 26482.405 ns/op
# Warmup Iteration   2: 23606.870 ns/op
# Warmup Iteration   3: 22547.433 ns/op
# Warmup Iteration   4: 22394.681 ns/op
# Warmup Iteration   5: 22363.217 ns/op
Iteration   1: 22324.236 ns/op
Iteration   2: 22279.667 ns/op
Iteration   3: 22361.351 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  22321.752 ±(99.9%) 746.145 ns/op [Average]
  (min, avg, max) = (22279.667, 22321.752, 22361.351), stdev = 40.899
  CI (99.9%): [21575.606, 23067.897] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 28.13% complete, ETA 00:39:10
# Fork: 1 of 1
# Warmup Iteration   1: 39.910 ns/op
# Warmup Iteration   2: 37.284 ns/op
# Warmup Iteration   3: 35.630 ns/op
# Warmup Iteration   4: 36.196 ns/op
# Warmup Iteration   5: 35.380 ns/op
Iteration   1: 35.400 ns/op
Iteration   2: 35.474 ns/op
Iteration   3: 35.409 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  35.428 ±(99.9%) 0.736 ns/op [Average]
  (min, avg, max) = (35.400, 35.428, 35.474), stdev = 0.040
  CI (99.9%): [34.692, 36.164] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 28.57% complete, ETA 00:38:55
# Fork: 1 of 1
# Warmup Iteration   1: 50.516 ns/op
# Warmup Iteration   2: 48.797 ns/op
# Warmup Iteration   3: 45.279 ns/op
# Warmup Iteration   4: 45.818 ns/op
# Warmup Iteration   5: 44.335 ns/op
Iteration   1: 44.401 ns/op
Iteration   2: 44.393 ns/op
Iteration   3: 44.348 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  44.381 ±(99.9%) 0.519 ns/op [Average]
  (min, avg, max) = (44.348, 44.381, 44.401), stdev = 0.028
  CI (99.9%): [43.861, 44.900] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 29.02% complete, ETA 00:38:40
# Fork: 1 of 1
# Warmup Iteration   1: 124.113 ns/op
# Warmup Iteration   2: 116.962 ns/op
# Warmup Iteration   3: 109.903 ns/op
# Warmup Iteration   4: 109.147 ns/op
# Warmup Iteration   5: 109.078 ns/op
Iteration   1: 109.430 ns/op
Iteration   2: 109.436 ns/op
Iteration   3: 109.167 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  109.344 ±(99.9%) 2.803 ns/op [Average]
  (min, avg, max) = (109.167, 109.344, 109.436), stdev = 0.154
  CI (99.9%): [106.542, 112.147] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 29.46% complete, ETA 00:38:26
# Fork: 1 of 1
# Warmup Iteration   1: 267.817 ns/op
# Warmup Iteration   2: 243.171 ns/op
# Warmup Iteration   3: 242.155 ns/op
# Warmup Iteration   4: 235.562 ns/op
# Warmup Iteration   5: 231.832 ns/op
Iteration   1: 231.882 ns/op
Iteration   2: 232.318 ns/op
Iteration   3: 231.933 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  232.044 ±(99.9%) 4.348 ns/op [Average]
  (min, avg, max) = (231.882, 232.044, 232.318), stdev = 0.238
  CI (99.9%): [227.697, 236.392] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 29.91% complete, ETA 00:38:11
# Fork: 1 of 1
# Warmup Iteration   1: 998.148 ns/op
# Warmup Iteration   2: 935.983 ns/op
# Warmup Iteration   3: 923.216 ns/op
# Warmup Iteration   4: 894.046 ns/op
# Warmup Iteration   5: 892.235 ns/op
Iteration   1: 893.777 ns/op
Iteration   2: 893.311 ns/op
Iteration   3: 892.975 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  893.354 ±(99.9%) 7.348 ns/op [Average]
  (min, avg, max) = (892.975, 893.354, 893.777), stdev = 0.403
  CI (99.9%): [886.006, 900.703] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 30.36% complete, ETA 00:37:56
# Fork: 1 of 1
# Warmup Iteration   1: 2025.266 ns/op
# Warmup Iteration   2: 1815.606 ns/op
# Warmup Iteration   3: 1727.354 ns/op
# Warmup Iteration   4: 1717.158 ns/op
# Warmup Iteration   5: 1713.772 ns/op
Iteration   1: 1712.369 ns/op
Iteration   2: 1711.756 ns/op
Iteration   3: 1753.797 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  1725.974 ±(99.9%) 439.629 ns/op [Average]
  (min, avg, max) = (1711.756, 1725.974, 1753.797), stdev = 24.098
  CI (99.9%): [1286.345, 2165.603] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 30.80% complete, ETA 00:37:42
# Fork: 1 of 1
# Warmup Iteration   1: 21482.144 ns/op
# Warmup Iteration   2: 18068.494 ns/op
# Warmup Iteration   3: 17742.982 ns/op
# Warmup Iteration   4: 17349.539 ns/op
# Warmup Iteration   5: 17267.073 ns/op
Iteration   1: 17237.726 ns/op
Iteration   2: 17182.017 ns/op
Iteration   3: 17231.146 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkDecode":
  17216.963 ±(99.9%) 555.381 ns/op [Average]
  (min, avg, max) = (17182.017, 17216.963, 17237.726), stdev = 30.442
  CI (99.9%): [16661.582, 17772.345] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 31.25% complete, ETA 00:37:27
# Fork: 1 of 1
# Warmup Iteration   1: 44.060 ns/op
# Warmup Iteration   2: 41.593 ns/op
# Warmup Iteration   3: 37.948 ns/op
# Warmup Iteration   4: 36.557 ns/op
# Warmup Iteration   5: 36.684 ns/op
Iteration   1: 36.636 ns/op
Iteration   2: 36.715 ns/op
Iteration   3: 36.521 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  36.624 ±(99.9%) 1.778 ns/op [Average]
  (min, avg, max) = (36.521, 36.624, 36.715), stdev = 0.097
  CI (99.9%): [34.846, 38.402] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 31.70% complete, ETA 00:37:13
# Fork: 1 of 1
# Warmup Iteration   1: 64.379 ns/op
# Warmup Iteration   2: 60.065 ns/op
# Warmup Iteration   3: 55.919 ns/op
# Warmup Iteration   4: 58.871 ns/op
# Warmup Iteration   5: 55.756 ns/op
Iteration   1: 55.530 ns/op
Iteration   2: 55.665 ns/op
Iteration   3: 55.686 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  55.627 ±(99.9%) 1.543 ns/op [Average]
  (min, avg, max) = (55.530, 55.627, 55.686), stdev = 0.085
  CI (99.9%): [54.084, 57.170] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 32.14% complete, ETA 00:36:58
# Fork: 1 of 1
# Warmup Iteration   1: 150.521 ns/op
# Warmup Iteration   2: 137.487 ns/op
# Warmup Iteration   3: 132.834 ns/op
# Warmup Iteration   4: 131.393 ns/op
# Warmup Iteration   5: 130.927 ns/op
Iteration   1: 131.227 ns/op
Iteration   2: 131.352 ns/op
Iteration   3: 131.049 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  131.210 ±(99.9%) 2.777 ns/op [Average]
  (min, avg, max) = (131.049, 131.210, 131.352), stdev = 0.152
  CI (99.9%): [128.433, 133.987] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 32.59% complete, ETA 00:36:43
# Fork: 1 of 1
# Warmup Iteration   1: 210.561 ns/op
# Warmup Iteration   2: 189.914 ns/op
# Warmup Iteration   3: 180.630 ns/op
# Warmup Iteration   4: 180.949 ns/op
# Warmup Iteration   5: 180.988 ns/op
Iteration   1: 180.240 ns/op
Iteration   2: 180.011 ns/op
Iteration   3: 180.469 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  180.240 ±(99.9%) 4.178 ns/op [Average]
  (min, avg, max) = (180.011, 180.240, 180.469), stdev = 0.229
  CI (99.9%): [176.062, 184.418] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 33.04% complete, ETA 00:36:29
# Fork: 1 of 1
# Warmup Iteration   1: 764.857 ns/op
# Warmup Iteration   2: 658.675 ns/op
# Warmup Iteration   3: 625.127 ns/op
# Warmup Iteration   4: 620.985 ns/op
# Warmup Iteration   5: 640.542 ns/op
Iteration   1: 625.701 ns/op
Iteration   2: 623.163 ns/op
Iteration   3: 618.970 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  622.612 ±(99.9%) 62.022 ns/op [Average]
  (min, avg, max) = (618.970, 622.612, 625.701), stdev = 3.400
  CI (99.9%): [560.590, 684.633] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 33.48% complete, ETA 00:36:14
# Fork: 1 of 1
# Warmup Iteration   1: 1446.601 ns/op
# Warmup Iteration   2: 1260.632 ns/op
# Warmup Iteration   3: 1154.971 ns/op
# Warmup Iteration   4: 1152.545 ns/op
# Warmup Iteration   5: 1152.422 ns/op
Iteration   1: 1154.013 ns/op
Iteration   2: 1155.111 ns/op
Iteration   3: 1156.113 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  1155.079 ±(99.9%) 19.160 ns/op [Average]
  (min, avg, max) = (1154.013, 1155.079, 1156.113), stdev = 1.050
  CI (99.9%): [1135.919, 1174.238] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 33.93% complete, ETA 00:35:59
# Fork: 1 of 1
# Warmup Iteration   1: 15116.545 ns/op
# Warmup Iteration   2: 12527.949 ns/op
# Warmup Iteration   3: 12885.958 ns/op
# Warmup Iteration   4: 11928.834 ns/op
# Warmup Iteration   5: 11641.451 ns/op
Iteration   1: 11650.832 ns/op
Iteration   2: 11691.494 ns/op
Iteration   3: 11696.411 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  11679.579 ±(99.9%) 456.399 ns/op [Average]
  (min, avg, max) = (11650.832, 11679.579, 11696.411), stdev = 25.017
  CI (99.9%): [11223.180, 12135.978] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 34.38% complete, ETA 00:35:45
# Fork: 1 of 1
# Warmup Iteration   1: 37.669 ns/op
# Warmup Iteration   2: 35.103 ns/op
# Warmup Iteration   3: 32.348 ns/op
# Warmup Iteration   4: 32.141 ns/op
# Warmup Iteration   5: 32.049 ns/op
Iteration   1: 32.118 ns/op
Iteration   2: 32.191 ns/op
Iteration   3: 32.129 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  32.146 ±(99.9%) 0.715 ns/op [Average]
  (min, avg, max) = (32.118, 32.146, 32.191), stdev = 0.039
  CI (99.9%): [31.431, 32.861] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 34.82% complete, ETA 00:35:30
# Fork: 1 of 1
# Warmup Iteration   1: 54.605 ns/op
# Warmup Iteration   2: 51.203 ns/op
# Warmup Iteration   3: 48.993 ns/op
# Warmup Iteration   4: 49.274 ns/op
# Warmup Iteration   5: 48.987 ns/op
Iteration   1: 48.922 ns/op
Iteration   2: 48.932 ns/op
Iteration   3: 49.052 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  48.969 ±(99.9%) 1.323 ns/op [Average]
  (min, avg, max) = (48.922, 48.969, 49.052), stdev = 0.073
  CI (99.9%): [47.646, 50.292] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 35.27% complete, ETA 00:35:15
# Fork: 1 of 1
# Warmup Iteration   1: 128.781 ns/op
# Warmup Iteration   2: 121.641 ns/op
# Warmup Iteration   3: 117.070 ns/op
# Warmup Iteration   4: 113.925 ns/op
# Warmup Iteration   5: 113.482 ns/op
Iteration   1: 113.689 ns/op
Iteration   2: 113.540 ns/op
Iteration   3: 113.595 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  113.608 ±(99.9%) 1.372 ns/op [Average]
  (min, avg, max) = (113.540, 113.608, 113.689), stdev = 0.075
  CI (99.9%): [112.236, 114.980] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 35.71% complete, ETA 00:35:01
# Fork: 1 of 1
# Warmup Iteration   1: 187.074 ns/op
# Warmup Iteration   2: 170.527 ns/op
# Warmup Iteration   3: 159.382 ns/op
# Warmup Iteration   4: 158.959 ns/op
# Warmup Iteration   5: 159.253 ns/op
Iteration   1: 158.823 ns/op
Iteration   2: 159.137 ns/op
Iteration   3: 158.897 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  158.952 ±(99.9%) 2.993 ns/op [Average]
  (min, avg, max) = (158.823, 158.952, 159.137), stdev = 0.164
  CI (99.9%): [155.959, 161.945] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 36.16% complete, ETA 00:34:46
# Fork: 1 of 1
# Warmup Iteration   1: 593.782 ns/op
# Warmup Iteration   2: 512.701 ns/op
# Warmup Iteration   3: 491.496 ns/op
# Warmup Iteration   4: 490.240 ns/op
# Warmup Iteration   5: 496.512 ns/op
Iteration   1: 490.966 ns/op
Iteration   2: 489.593 ns/op
Iteration   3: 489.832 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  490.130 ±(99.9%) 13.377 ns/op [Average]
  (min, avg, max) = (489.593, 490.130, 490.966), stdev = 0.733
  CI (99.9%): [476.753, 503.507] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 36.61% complete, ETA 00:34:32
# Fork: 1 of 1
# Warmup Iteration   1: 1111.839 ns/op
# Warmup Iteration   2: 932.520 ns/op
# Warmup Iteration   3: 885.983 ns/op
# Warmup Iteration   4: 887.057 ns/op
# Warmup Iteration   5: 887.915 ns/op
Iteration   1: 883.268 ns/op
Iteration   2: 882.409 ns/op
Iteration   3: 884.055 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  883.244 ±(99.9%) 15.027 ns/op [Average]
  (min, avg, max) = (882.409, 883.244, 884.055), stdev = 0.824
  CI (99.9%): [868.217, 898.271] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 37.05% complete, ETA 00:34:17
# Fork: 1 of 1
# Warmup Iteration   1: 11772.569 ns/op
# Warmup Iteration   2: 9359.216 ns/op
# Warmup Iteration   3: 8762.117 ns/op
# Warmup Iteration   4: 8776.285 ns/op
# Warmup Iteration   5: 8802.186 ns/op
Iteration   1: 8718.452 ns/op
Iteration   2: 8749.155 ns/op
Iteration   3: 8714.629 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkEncode":
  8727.412 ±(99.9%) 345.294 ns/op [Average]
  (min, avg, max) = (8714.629, 8727.412, 8749.155), stdev = 18.927
  CI (99.9%): [8382.119, 9072.706] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 37.50% complete, ETA 00:34:02
# Fork: 1 of 1
# Warmup Iteration   1: 41.501 ns/op
# Warmup Iteration   2: 38.890 ns/op
# Warmup Iteration   3: 36.682 ns/op
# Warmup Iteration   4: 35.951 ns/op
# Warmup Iteration   5: 36.683 ns/op
Iteration   1: 36.069 ns/op
Iteration   2: 35.943 ns/op
Iteration   3: 35.986 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  35.999 ±(99.9%) 1.163 ns/op [Average]
  (min, avg, max) = (35.943, 35.999, 36.069), stdev = 0.064
  CI (99.9%): [34.836, 37.163] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 37.95% complete, ETA 00:33:48
# Fork: 1 of 1
# Warmup Iteration   1: 67.593 ns/op
# Warmup Iteration   2: 61.942 ns/op
# Warmup Iteration   3: 61.451 ns/op
# Warmup Iteration   4: 59.484 ns/op
# Warmup Iteration   5: 59.405 ns/op
Iteration   1: 59.311 ns/op
Iteration   2: 59.351 ns/op
Iteration   3: 59.328 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  59.330 ±(99.9%) 0.374 ns/op [Average]
  (min, avg, max) = (59.311, 59.330, 59.351), stdev = 0.020
  CI (99.9%): [58.956, 59.704] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 38.39% complete, ETA 00:33:33
# Fork: 1 of 1
# Warmup Iteration   1: 216.760 ns/op
# Warmup Iteration   2: 192.988 ns/op
# Warmup Iteration   3: 192.274 ns/op
# Warmup Iteration   4: 188.346 ns/op
# Warmup Iteration   5: 187.510 ns/op
Iteration   1: 187.123 ns/op
Iteration   2: 186.873 ns/op
Iteration   3: 187.482 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  187.159 ±(99.9%) 5.587 ns/op [Average]
  (min, avg, max) = (186.873, 187.159, 187.482), stdev = 0.306
  CI (99.9%): [181.572, 192.746] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 38.84% complete, ETA 00:33:18
# Fork: 1 of 1
# Warmup Iteration   1: 338.084 ns/op
# Warmup Iteration   2: 304.224 ns/op
# Warmup Iteration   3: 302.816 ns/op
# Warmup Iteration   4: 296.233 ns/op
# Warmup Iteration   5: 296.615 ns/op
Iteration   1: 296.463 ns/op
Iteration   2: 296.340 ns/op
Iteration   3: 296.169 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  296.324 ±(99.9%) 2.689 ns/op [Average]
  (min, avg, max) = (296.169, 296.324, 296.463), stdev = 0.147
  CI (99.9%): [293.636, 299.013] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 39.29% complete, ETA 00:33:04
# Fork: 1 of 1
# Warmup Iteration   1: 1383.201 ns/op
# Warmup Iteration   2: 1248.426 ns/op
# Warmup Iteration   3: 1201.911 ns/op
# Warmup Iteration   4: 1187.360 ns/op
# Warmup Iteration   5: 1185.992 ns/op
Iteration   1: 1197.310 ns/op
Iteration   2: 1182.919 ns/op
Iteration   3: 1186.435 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  1188.888 ±(99.9%) 136.872 ns/op [Average]
  (min, avg, max) = (1182.919, 1188.888, 1197.310), stdev = 7.502
  CI (99.9%): [1052.016, 1325.760] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 39.73% complete, ETA 00:32:49
# Fork: 1 of 1
# Warmup Iteration   1: 2696.792 ns/op
# Warmup Iteration   2: 2397.340 ns/op
# Warmup Iteration   3: 2411.788 ns/op
# Warmup Iteration   4: 2353.111 ns/op
# Warmup Iteration   5: 2329.289 ns/op
Iteration   1: 2330.867 ns/op
Iteration   2: 2332.924 ns/op
Iteration   3: 2330.388 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  2331.393 ±(99.9%) 24.585 ns/op [Average]
  (min, avg, max) = (2330.388, 2331.393, 2332.924), stdev = 1.348
  CI (99.9%): [2306.808, 2355.978] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 40.18% complete, ETA 00:32:34
# Fork: 1 of 1
# Warmup Iteration   1: 30078.423 ns/op
# Warmup Iteration   2: 26747.745 ns/op
# Warmup Iteration   3: 25386.597 ns/op
# Warmup Iteration   4: 24845.913 ns/op
# Warmup Iteration   5: 24958.393 ns/op
Iteration   1: 24871.761 ns/op
Iteration   2: 24873.530 ns/op
Iteration   3: 24886.381 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  24877.224 ±(99.9%) 145.572 ns/op [Average]
  (min, avg, max) = (24871.761, 24877.224, 24886.381), stdev = 7.979
  CI (99.9%): [24731.652, 25022.796] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 40.63% complete, ETA 00:32:20
# Fork: 1 of 1
# Warmup Iteration   1: 39.693 ns/op
# Warmup Iteration   2: 37.190 ns/op
# Warmup Iteration   3: 35.256 ns/op
# Warmup Iteration   4: 35.727 ns/op
# Warmup Iteration   5: 35.277 ns/op
Iteration   1: 34.966 ns/op
Iteration   2: 34.992 ns/op
Iteration   3: 35.123 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  35.027 ±(99.9%) 1.532 ns/op [Average]
  (min, avg, max) = (34.966, 35.027, 35.123), stdev = 0.084
  CI (99.9%): [33.495, 36.559] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 41.07% complete, ETA 00:32:05
# Fork: 1 of 1
# Warmup Iteration   1: 50.646 ns/op
# Warmup Iteration   2: 47.537 ns/op
# Warmup Iteration   3: 44.844 ns/op
# Warmup Iteration   4: 44.025 ns/op
# Warmup Iteration   5: 44.752 ns/op
Iteration   1: 43.825 ns/op
Iteration   2: 43.955 ns/op
Iteration   3: 43.956 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  43.912 ±(99.9%) 1.373 ns/op [Average]
  (min, avg, max) = (43.825, 43.912, 43.956), stdev = 0.075
  CI (99.9%): [42.539, 45.285] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 41.52% complete, ETA 00:31:51
# Fork: 1 of 1
# Warmup Iteration   1: 125.812 ns/op
# Warmup Iteration   2: 117.273 ns/op
# Warmup Iteration   3: 110.106 ns/op
# Warmup Iteration   4: 109.429 ns/op
# Warmup Iteration   5: 110.240 ns/op
Iteration   1: 109.484 ns/op
Iteration   2: 110.178 ns/op
Iteration   3: 109.723 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  109.795 ±(99.9%) 6.429 ns/op [Average]
  (min, avg, max) = (109.484, 109.795, 110.178), stdev = 0.352
  CI (99.9%): [103.365, 116.224] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 41.96% complete, ETA 00:31:36
# Fork: 1 of 1
# Warmup Iteration   1: 264.128 ns/op
# Warmup Iteration   2: 240.691 ns/op
# Warmup Iteration   3: 239.699 ns/op
# Warmup Iteration   4: 232.325 ns/op
# Warmup Iteration   5: 232.402 ns/op
Iteration   1: 232.204 ns/op
Iteration   2: 232.280 ns/op
Iteration   3: 232.624 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  232.370 ±(99.9%) 4.079 ns/op [Average]
  (min, avg, max) = (232.204, 232.370, 232.624), stdev = 0.224
  CI (99.9%): [228.290, 236.449] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 42.41% complete, ETA 00:31:21
# Fork: 1 of 1
# Warmup Iteration   1: 1028.654 ns/op
# Warmup Iteration   2: 940.117 ns/op
# Warmup Iteration   3: 905.725 ns/op
# Warmup Iteration   4: 894.575 ns/op
# Warmup Iteration   5: 892.993 ns/op
Iteration   1: 893.039 ns/op
Iteration   2: 898.158 ns/op
Iteration   3: 911.765 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  900.987 ±(99.9%) 176.566 ns/op [Average]
  (min, avg, max) = (893.039, 900.987, 911.765), stdev = 9.678
  CI (99.9%): [724.421, 1077.553] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 42.86% complete, ETA 00:31:07
# Fork: 1 of 1
# Warmup Iteration   1: 1976.603 ns/op
# Warmup Iteration   2: 1884.861 ns/op
# Warmup Iteration   3: 1732.801 ns/op
# Warmup Iteration   4: 1733.923 ns/op
# Warmup Iteration   5: 1724.944 ns/op
Iteration   1: 1753.356 ns/op
Iteration   2: 1713.127 ns/op
Iteration   3: 1710.259 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  1725.581 ±(99.9%) 439.613 ns/op [Average]
  (min, avg, max) = (1710.259, 1725.581, 1753.356), stdev = 24.097
  CI (99.9%): [1285.968, 2165.193] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 43.30% complete, ETA 00:30:52
# Fork: 1 of 1
# Warmup Iteration   1: 21095.716 ns/op
# Warmup Iteration   2: 17755.154 ns/op
# Warmup Iteration   3: 18211.684 ns/op
# Warmup Iteration   4: 17166.219 ns/op
# Warmup Iteration   5: 17201.740 ns/op
Iteration   1: 17223.147 ns/op
Iteration   2: 17189.610 ns/op
Iteration   3: 17203.497 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlDecode":
  17205.418 ±(99.9%) 307.422 ns/op [Average]
  (min, avg, max) = (17189.610, 17205.418, 17223.147), stdev = 16.851
  CI (99.9%): [16897.996, 17512.839] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 43.75% complete, ETA 00:30:38
# Fork: 1 of 1
# Warmup Iteration   1: 43.857 ns/op
# Warmup Iteration   2: 40.558 ns/op
# Warmup Iteration   3: 37.706 ns/op
# Warmup Iteration   4: 36.760 ns/op
# Warmup Iteration   5: 36.750 ns/op
Iteration   1: 36.728 ns/op
Iteration   2: 36.610 ns/op
Iteration   3: 36.684 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  36.674 ±(99.9%) 1.090 ns/op [Average]
  (min, avg, max) = (36.610, 36.674, 36.728), stdev = 0.060
  CI (99.9%): [35.584, 37.764] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 44.20% complete, ETA 00:30:23
# Fork: 1 of 1
# Warmup Iteration   1: 64.824 ns/op
# Warmup Iteration   2: 60.650 ns/op
# Warmup Iteration   3: 57.122 ns/op
# Warmup Iteration   4: 57.141 ns/op
# Warmup Iteration   5: 56.223 ns/op
Iteration   1: 56.122 ns/op
Iteration   2: 56.201 ns/op
Iteration   3: 56.699 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  56.341 ±(99.9%) 5.707 ns/op [Average]
  (min, avg, max) = (56.122, 56.341, 56.699), stdev = 0.313
  CI (99.9%): [50.634, 62.047] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 44.64% complete, ETA 00:30:08
# Fork: 1 of 1
# Warmup Iteration   1: 154.463 ns/op
# Warmup Iteration   2: 138.685 ns/op
# Warmup Iteration   3: 133.000 ns/op
# Warmup Iteration   4: 132.433 ns/op
# Warmup Iteration   5: 132.941 ns/op
Iteration   1: 132.450 ns/op
Iteration   2: 132.626 ns/op
Iteration   3: 132.324 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  132.467 ±(99.9%) 2.769 ns/op [Average]
  (min, avg, max) = (132.324, 132.467, 132.626), stdev = 0.152
  CI (99.9%): [129.698, 135.236] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 45.09% complete, ETA 00:29:54
# Fork: 1 of 1
# Warmup Iteration   1: 211.176 ns/op
# Warmup Iteration   2: 194.270 ns/op
# Warmup Iteration   3: 181.828 ns/op
# Warmup Iteration   4: 180.919 ns/op
# Warmup Iteration   5: 181.951 ns/op
Iteration   1: 181.683 ns/op
Iteration   2: 181.111 ns/op
Iteration   3: 181.702 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  181.499 ±(99.9%) 6.120 ns/op [Average]
  (min, avg, max) = (181.111, 181.499, 181.702), stdev = 0.335
  CI (99.9%): [175.378, 187.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 45.54% complete, ETA 00:29:39
# Fork: 1 of 1
# Warmup Iteration   1: 777.512 ns/op
# Warmup Iteration   2: 647.096 ns/op
# Warmup Iteration   3: 616.620 ns/op
# Warmup Iteration   4: 618.447 ns/op
# Warmup Iteration   5: 617.527 ns/op
Iteration   1: 617.795 ns/op
Iteration   2: 617.677 ns/op
Iteration   3: 619.015 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  618.162 ±(99.9%) 13.515 ns/op [Average]
  (min, avg, max) = (617.677, 618.162, 619.015), stdev = 0.741
  CI (99.9%): [604.648, 631.677] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 45.98% complete, ETA 00:29:25
# Fork: 1 of 1
# Warmup Iteration   1: 1452.895 ns/op
# Warmup Iteration   2: 1209.336 ns/op
# Warmup Iteration   3: 1151.181 ns/op
# Warmup Iteration   4: 1151.381 ns/op
# Warmup Iteration   5: 1155.963 ns/op
Iteration   1: 1145.996 ns/op
Iteration   2: 1147.098 ns/op
Iteration   3: 1152.745 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  1148.613 ±(99.9%) 66.054 ns/op [Average]
  (min, avg, max) = (1145.996, 1148.613, 1152.745), stdev = 3.621
  CI (99.9%): [1082.559, 1214.666] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 46.43% complete, ETA 00:29:10
# Fork: 1 of 1
# Warmup Iteration   1: 14798.138 ns/op
# Warmup Iteration   2: 13065.903 ns/op
# Warmup Iteration   3: 11661.511 ns/op
# Warmup Iteration   4: 11687.616 ns/op
# Warmup Iteration   5: 12002.521 ns/op
Iteration   1: 11674.322 ns/op
Iteration   2: 11733.448 ns/op
Iteration   3: 11646.881 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  11684.884 ±(99.9%) 807.096 ns/op [Average]
  (min, avg, max) = (11646.881, 11684.884, 11733.448), stdev = 44.240
  CI (99.9%): [10877.788, 12491.980] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 46.88% complete, ETA 00:28:55
# Fork: 1 of 1
# Warmup Iteration   1: 37.897 ns/op
# Warmup Iteration   2: 34.777 ns/op
# Warmup Iteration   3: 33.272 ns/op
# Warmup Iteration   4: 32.276 ns/op
# Warmup Iteration   5: 32.366 ns/op
Iteration   1: 32.276 ns/op
Iteration   2: 32.267 ns/op
Iteration   3: 32.547 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  32.363 ±(99.9%) 2.910 ns/op [Average]
  (min, avg, max) = (32.267, 32.363, 32.547), stdev = 0.160
  CI (99.9%): [29.453, 35.273] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 47.32% complete, ETA 00:28:41
# Fork: 1 of 1
# Warmup Iteration   1: 54.062 ns/op
# Warmup Iteration   2: 50.835 ns/op
# Warmup Iteration   3: 47.433 ns/op
# Warmup Iteration   4: 48.136 ns/op
# Warmup Iteration   5: 47.105 ns/op
Iteration   1: 47.053 ns/op
Iteration   2: 47.016 ns/op
Iteration   3: 47.110 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  47.060 ±(99.9%) 0.860 ns/op [Average]
  (min, avg, max) = (47.016, 47.060, 47.110), stdev = 0.047
  CI (99.9%): [46.200, 47.920] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 47.77% complete, ETA 00:28:26
# Fork: 1 of 1
# Warmup Iteration   1: 128.536 ns/op
# Warmup Iteration   2: 117.542 ns/op
# Warmup Iteration   3: 117.448 ns/op
# Warmup Iteration   4: 115.078 ns/op
# Warmup Iteration   5: 115.044 ns/op
Iteration   1: 114.922 ns/op
Iteration   2: 114.468 ns/op
Iteration   3: 114.284 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  114.558 ±(99.9%) 5.993 ns/op [Average]
  (min, avg, max) = (114.284, 114.558, 114.922), stdev = 0.329
  CI (99.9%): [108.565, 120.551] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 48.21% complete, ETA 00:28:12
# Fork: 1 of 1
# Warmup Iteration   1: 184.307 ns/op
# Warmup Iteration   2: 164.018 ns/op
# Warmup Iteration   3: 159.070 ns/op
# Warmup Iteration   4: 157.790 ns/op
# Warmup Iteration   5: 158.039 ns/op
Iteration   1: 157.618 ns/op
Iteration   2: 158.319 ns/op
Iteration   3: 158.140 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  158.026 ±(99.9%) 6.651 ns/op [Average]
  (min, avg, max) = (157.618, 158.026, 158.319), stdev = 0.365
  CI (99.9%): [151.374, 164.677] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 48.66% complete, ETA 00:27:57
# Fork: 1 of 1
# Warmup Iteration   1: 582.591 ns/op
# Warmup Iteration   2: 531.433 ns/op
# Warmup Iteration   3: 488.260 ns/op
# Warmup Iteration   4: 492.187 ns/op
# Warmup Iteration   5: 490.783 ns/op
Iteration   1: 489.865 ns/op
Iteration   2: 488.645 ns/op
Iteration   3: 488.704 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  489.072 ±(99.9%) 12.547 ns/op [Average]
  (min, avg, max) = (488.645, 489.072, 489.865), stdev = 0.688
  CI (99.9%): [476.524, 501.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 49.11% complete, ETA 00:27:42
# Fork: 1 of 1
# Warmup Iteration   1: 1092.652 ns/op
# Warmup Iteration   2: 950.409 ns/op
# Warmup Iteration   3: 899.554 ns/op
# Warmup Iteration   4: 895.400 ns/op
# Warmup Iteration   5: 900.764 ns/op
Iteration   1: 898.212 ns/op
Iteration   2: 901.374 ns/op
Iteration   3: 917.411 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  905.665 ±(99.9%) 187.808 ns/op [Average]
  (min, avg, max) = (898.212, 905.665, 917.411), stdev = 10.294
  CI (99.9%): [717.857, 1093.474] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.55% complete, ETA 00:27:28
# Fork: 1 of 1
# Warmup Iteration   1: 11832.506 ns/op
# Warmup Iteration   2: 9268.736 ns/op
# Warmup Iteration   3: 8756.623 ns/op
# Warmup Iteration   4: 8778.054 ns/op
# Warmup Iteration   5: 8936.039 ns/op
Iteration   1: 8759.787 ns/op
Iteration   2: 8739.220 ns/op
Iteration   3: 8744.471 ns/op


Result "com.komanov.jwt.base64.jmh.Base64Benchmarks.jdkUrlEncode":
  8747.826 ±(99.9%) 194.955 ns/op [Average]
  (min, avg, max) = (8739.220, 8747.826, 8759.787), stdev = 10.686
  CI (99.9%): [8552.871, 8942.781] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:27:13
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.45% complete, ETA 00:26:45
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 50.89% complete, ETA 00:26:17
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 51.34% complete, ETA 00:25:49
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 51.79% complete, ETA 00:25:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 52.23% complete, ETA 00:24:56
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 52.68% complete, ETA 00:24:30
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 53.13% complete, ETA 00:24:04
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 53.57% complete, ETA 00:23:39
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 54.02% complete, ETA 00:23:14
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 54.46% complete, ETA 00:22:50
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 54.91% complete, ETA 00:22:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 55.36% complete, ETA 00:22:02
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 55.80% complete, ETA 00:21:39
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniDecode(Base64Benchmarks.scala:219)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_avgt_jmhStub(Base64Benchmarks_jniDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniDecode_jmhTest.jniDecode_AverageTime(Base64Benchmarks_jniDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 56.25% complete, ETA 00:21:16
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 56.70% complete, ETA 00:20:53
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 57.14% complete, ETA 00:20:31
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 57.59% complete, ETA 00:20:09
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 58.04% complete, ETA 00:19:47
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 58.48% complete, ETA 00:19:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 58.93% complete, ETA 00:19:05
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 59.38% complete, ETA 00:18:45
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 59.82% complete, ETA 00:18:24
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 60.27% complete, ETA 00:18:04
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 60.71% complete, ETA 00:17:45
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 61.16% complete, ETA 00:17:25
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 61.61% complete, ETA 00:17:06
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 62.05% complete, ETA 00:16:47
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniEncode(Base64Benchmarks.scala:249)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_avgt_jmhStub(Base64Benchmarks_jniEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniEncode_jmhTest.jniEncode_AverageTime(Base64Benchmarks_jniEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 62.50% complete, ETA 00:16:28
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 62.95% complete, ETA 00:16:10
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 63.39% complete, ETA 00:15:52
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 63.84% complete, ETA 00:15:34
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 64.29% complete, ETA 00:15:16
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 64.73% complete, ETA 00:14:59
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 65.18% complete, ETA 00:14:42
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 1)

# Run progress: 65.63% complete, ETA 00:14:25
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 10)

# Run progress: 66.07% complete, ETA 00:14:08
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 50)

# Run progress: 66.52% complete, ETA 00:13:51
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 100)

# Run progress: 66.96% complete, ETA 00:13:35
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 500)

# Run progress: 67.41% complete, ETA 00:13:19
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 1000)

# Run progress: 67.86% complete, ETA 00:13:03
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode
# Parameters: (dataset = random, length = 10000)

# Run progress: 68.30% complete, ETA 00:12:47
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecode(Base64Benchmarks.scala:228)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_avgt_jmhStub(Base64Benchmarks_jniUrlDecode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecode_jmhTest.jniUrlDecode_AverageTime(Base64Benchmarks_jniUrlDecode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 68.75% complete, ETA 00:12:32
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 69.20% complete, ETA 00:12:17
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 69.64% complete, ETA 00:12:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 70.09% complete, ETA 00:11:46
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 70.54% complete, ETA 00:11:32
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 70.98% complete, ETA 00:11:17
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 71.43% complete, ETA 00:11:03
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 1)

# Run progress: 71.88% complete, ETA 00:10:49
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 10)

# Run progress: 72.32% complete, ETA 00:10:34
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 50)

# Run progress: 72.77% complete, ETA 00:10:21
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 100)

# Run progress: 73.21% complete, ETA 00:10:07
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 500)

# Run progress: 73.66% complete, ETA 00:09:53
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 1000)

# Run progress: 74.11% complete, ETA 00:09:40
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1
# Parameters: (dataset = random, length = 10000)

# Run progress: 74.55% complete, ETA 00:09:27
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster1(Base64Benchmarks.scala:231)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.jniUrlDecodeFaster1_AverageTime(Base64Benchmarks_jniUrlDecodeFaster1_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 75.00% complete, ETA 00:09:14
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 75.45% complete, ETA 00:09:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 75.89% complete, ETA 00:08:48
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 76.34% complete, ETA 00:08:35
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 76.79% complete, ETA 00:08:23
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 77.23% complete, ETA 00:08:10
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 77.68% complete, ETA 00:07:58
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 1)

# Run progress: 78.13% complete, ETA 00:07:46
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 10)

# Run progress: 78.57% complete, ETA 00:07:34
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 50)

# Run progress: 79.02% complete, ETA 00:07:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 100)

# Run progress: 79.46% complete, ETA 00:07:10
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 500)

# Run progress: 79.91% complete, ETA 00:06:59
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 1000)

# Run progress: 80.36% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2
# Parameters: (dataset = random, length = 10000)

# Run progress: 80.80% complete, ETA 00:06:36
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster2(Base64Benchmarks.scala:234)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.jniUrlDecodeFaster2_AverageTime(Base64Benchmarks_jniUrlDecodeFaster2_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 1)

# Run progress: 81.25% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 10)

# Run progress: 81.70% complete, ETA 00:06:14
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 50)

# Run progress: 82.14% complete, ETA 00:06:03
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 100)

# Run progress: 82.59% complete, ETA 00:05:52
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 500)

# Run progress: 83.04% complete, ETA 00:05:41
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 83.48% complete, ETA 00:05:30
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 83.93% complete, ETA 00:05:20
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 1)

# Run progress: 84.38% complete, ETA 00:05:09
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 10)

# Run progress: 84.82% complete, ETA 00:04:59
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 50)

# Run progress: 85.27% complete, ETA 00:04:49
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 100)

# Run progress: 85.71% complete, ETA 00:04:39
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 500)

# Run progress: 86.16% complete, ETA 00:04:29
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 1000)

# Run progress: 86.61% complete, ETA 00:04:19
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3
# Parameters: (dataset = random, length = 10000)

# Run progress: 87.05% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster3(Base64Benchmarks.scala:237)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.jniUrlDecodeFaster3_AverageTime(Base64Benchmarks_jniUrlDecodeFaster3_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 1)

# Run progress: 87.50% complete, ETA 00:03:59
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 10)

# Run progress: 87.95% complete, ETA 00:03:49
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 50)

# Run progress: 88.39% complete, ETA 00:03:40
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 100)

# Run progress: 88.84% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 500)

# Run progress: 89.29% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 89.73% complete, ETA 00:03:12
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 90.18% complete, ETA 00:03:02
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 1)

# Run progress: 90.63% complete, ETA 00:02:53
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 10)

# Run progress: 91.07% complete, ETA 00:02:44
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 50)

# Run progress: 91.52% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 100)

# Run progress: 91.96% complete, ETA 00:02:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 500)

# Run progress: 92.41% complete, ETA 00:02:18
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 1000)

# Run progress: 92.86% complete, ETA 00:02:09
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4
# Parameters: (dataset = random, length = 10000)

# Run progress: 93.30% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlDecodeFaster4(Base64Benchmarks.scala:240)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_avgt_jmhStub(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.jniUrlDecodeFaster4_AverageTime(Base64Benchmarks_jniUrlDecodeFaster4_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 93.75% complete, ETA 00:01:52
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 94.20% complete, ETA 00:01:43
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 94.64% complete, ETA 00:01:35
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 95.09% complete, ETA 00:01:27
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 95.54% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 95.98% complete, ETA 00:01:10
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 96.43% complete, ETA 00:01:02
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 1)

# Run progress: 96.88% complete, ETA 00:00:54
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 10)

# Run progress: 97.32% complete, ETA 00:00:46
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 50)

# Run progress: 97.77% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 100)

# Run progress: 98.21% complete, ETA 00:00:30
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 500)

# Run progress: 98.66% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 1000)

# Run progress: 99.11% complete, ETA 00:00:15
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.55% complete, ETA 00:00:07
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.UnsatisfiedLinkError: no base64_lib in java.library.path: [rs/base64]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2673)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:830)
	at java.base/java.lang.System.loadLibrary(System.java:1873)
	at com.komanov.jwt.base64.jni.Native.<clinit>(Native.java:5)
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class com.komanov.jwt.base64.jni.Native
	at com.komanov.jwt.base64.jmh.Base64Benchmarks.jniUrlEncode(Base64Benchmarks.scala:258)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_avgt_jmhStub(Base64Benchmarks_jniUrlEncode_jmhTest.java:232)
	at com.komanov.jwt.base64.jmh.generated.Base64Benchmarks_jniUrlEncode_jmhTest.jniUrlEncode_AverageTime(Base64Benchmarks_jniUrlEncode_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# Run complete. Total time: 00:28:10

Benchmark                          (dataset)  (length)  Mode  Cnt       Score       Error  Units
Base64Benchmarks.commonsDecode         fixed         1  avgt    3     760.456 ±    70.511  ns/op
Base64Benchmarks.commonsDecode         fixed        10  avgt    3     869.600 ±    62.043  ns/op
Base64Benchmarks.commonsDecode         fixed        50  avgt    3    1412.044 ±    13.515  ns/op
Base64Benchmarks.commonsDecode         fixed       100  avgt    3    2114.656 ±    71.848  ns/op
Base64Benchmarks.commonsDecode         fixed       500  avgt    3    7471.474 ±   274.869  ns/op
Base64Benchmarks.commonsDecode         fixed      1000  avgt    3   11543.841 ±   307.664  ns/op
Base64Benchmarks.commonsDecode         fixed     10000  avgt    3  108156.545 ±  2254.052  ns/op
Base64Benchmarks.commonsDecode        random         1  avgt    3     702.696 ±   389.132  ns/op
Base64Benchmarks.commonsDecode        random        10  avgt    3     745.425 ±   115.368  ns/op
Base64Benchmarks.commonsDecode        random        50  avgt    3     991.302 ±    34.124  ns/op
Base64Benchmarks.commonsDecode        random       100  avgt    3    1333.707 ±    30.509  ns/op
Base64Benchmarks.commonsDecode        random       500  avgt    3    4097.612 ±   165.578  ns/op
Base64Benchmarks.commonsDecode        random      1000  avgt    3    7734.989 ±   229.796  ns/op
Base64Benchmarks.commonsDecode        random     10000  avgt    3   81039.814 ±  1167.020  ns/op
Base64Benchmarks.commonsEncode         fixed         1  avgt    3     720.113 ±   154.835  ns/op
Base64Benchmarks.commonsEncode         fixed        10  avgt    3     771.992 ±    27.510  ns/op
Base64Benchmarks.commonsEncode         fixed        50  avgt    3    1208.918 ±    67.423  ns/op
Base64Benchmarks.commonsEncode         fixed       100  avgt    3    1889.031 ±   100.712  ns/op
Base64Benchmarks.commonsEncode         fixed       500  avgt    3    6931.356 ±   247.234  ns/op
Base64Benchmarks.commonsEncode         fixed      1000  avgt    3   13613.467 ±  1158.097  ns/op
Base64Benchmarks.commonsEncode         fixed     10000  avgt    3  129848.311 ±  9660.671  ns/op
Base64Benchmarks.commonsEncode        random         1  avgt    3     696.223 ±    36.012  ns/op
Base64Benchmarks.commonsEncode        random        10  avgt    3     742.618 ±    70.992  ns/op
Base64Benchmarks.commonsEncode        random        50  avgt    3    1063.353 ±    34.988  ns/op
Base64Benchmarks.commonsEncode        random       100  avgt    3    1542.207 ±    94.914  ns/op
Base64Benchmarks.commonsEncode        random       500  avgt    3    5432.014 ±   407.331  ns/op
Base64Benchmarks.commonsEncode        random      1000  avgt    3   10537.367 ±   535.826  ns/op
Base64Benchmarks.commonsEncode        random     10000  avgt    3   95843.102 ±  4721.490  ns/op
Base64Benchmarks.commonsUrlDecode      fixed         1  avgt    3     710.868 ±    57.047  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        10  avgt    3     810.977 ±    53.378  ns/op
Base64Benchmarks.commonsUrlDecode      fixed        50  avgt    3    1271.045 ±   353.239  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       100  avgt    3    1928.913 ±    73.265  ns/op
Base64Benchmarks.commonsUrlDecode      fixed       500  avgt    3    6584.914 ±   408.414  ns/op
Base64Benchmarks.commonsUrlDecode      fixed      1000  avgt    3   11690.716 ±   234.624  ns/op
Base64Benchmarks.commonsUrlDecode      fixed     10000  avgt    3  108218.698 ±   674.487  ns/op
Base64Benchmarks.commonsUrlDecode     random         1  avgt    3     694.357 ±    27.265  ns/op
Base64Benchmarks.commonsUrlDecode     random        10  avgt    3     761.472 ±   422.243  ns/op
Base64Benchmarks.commonsUrlDecode     random        50  avgt    3     999.452 ±    46.660  ns/op
Base64Benchmarks.commonsUrlDecode     random       100  avgt    3    1337.923 ±    26.867  ns/op
Base64Benchmarks.commonsUrlDecode     random       500  avgt    3    4101.236 ±    36.030  ns/op
Base64Benchmarks.commonsUrlDecode     random      1000  avgt    3    7736.526 ±   463.113  ns/op
Base64Benchmarks.commonsUrlDecode     random     10000  avgt    3   81085.991 ±  3894.943  ns/op
Base64Benchmarks.commonsUrlEncode      fixed         1  avgt    3     717.803 ±   173.096  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        10  avgt    3     771.737 ±   237.528  ns/op
Base64Benchmarks.commonsUrlEncode      fixed        50  avgt    3    1208.750 ±   397.198  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       100  avgt    3    1860.894 ±    55.225  ns/op
Base64Benchmarks.commonsUrlEncode      fixed       500  avgt    3    6983.128 ±   312.663  ns/op
Base64Benchmarks.commonsUrlEncode      fixed      1000  avgt    3   13554.606 ±  3088.151  ns/op
Base64Benchmarks.commonsUrlEncode      fixed     10000  avgt    3  130769.503 ± 17387.144  ns/op
Base64Benchmarks.commonsUrlEncode     random         1  avgt    3     698.674 ±    73.308  ns/op
Base64Benchmarks.commonsUrlEncode     random        10  avgt    3     742.013 ±   117.451  ns/op
Base64Benchmarks.commonsUrlEncode     random        50  avgt    3    1059.026 ±   175.499  ns/op
Base64Benchmarks.commonsUrlEncode     random       100  avgt    3    1536.279 ±    60.760  ns/op
Base64Benchmarks.commonsUrlEncode     random       500  avgt    3    5410.837 ±    71.437  ns/op
Base64Benchmarks.commonsUrlEncode     random      1000  avgt    3   10472.452 ±   546.668  ns/op
Base64Benchmarks.commonsUrlEncode     random     10000  avgt    3   95669.655 ±  5066.768  ns/op
Base64Benchmarks.jdkDecode             fixed         1  avgt    3      40.665 ±     2.962  ns/op
Base64Benchmarks.jdkDecode             fixed        10  avgt    3      61.209 ±     0.829  ns/op
Base64Benchmarks.jdkDecode             fixed        50  avgt    3     197.476 ±     2.071  ns/op
Base64Benchmarks.jdkDecode             fixed       100  avgt    3     298.698 ±     5.849  ns/op
Base64Benchmarks.jdkDecode             fixed       500  avgt    3    1172.230 ±    29.389  ns/op
Base64Benchmarks.jdkDecode             fixed      1000  avgt    3    2298.288 ±    89.061  ns/op
Base64Benchmarks.jdkDecode             fixed     10000  avgt    3   22321.752 ±   746.145  ns/op
Base64Benchmarks.jdkDecode            random         1  avgt    3      35.428 ±     0.736  ns/op
Base64Benchmarks.jdkDecode            random        10  avgt    3      44.381 ±     0.519  ns/op
Base64Benchmarks.jdkDecode            random        50  avgt    3     109.344 ±     2.803  ns/op
Base64Benchmarks.jdkDecode            random       100  avgt    3     232.044 ±     4.348  ns/op
Base64Benchmarks.jdkDecode            random       500  avgt    3     893.354 ±     7.348  ns/op
Base64Benchmarks.jdkDecode            random      1000  avgt    3    1725.974 ±   439.629  ns/op
Base64Benchmarks.jdkDecode            random     10000  avgt    3   17216.963 ±   555.381  ns/op
Base64Benchmarks.jdkEncode             fixed         1  avgt    3      36.624 ±     1.778  ns/op
Base64Benchmarks.jdkEncode             fixed        10  avgt    3      55.627 ±     1.543  ns/op
Base64Benchmarks.jdkEncode             fixed        50  avgt    3     131.210 ±     2.777  ns/op
Base64Benchmarks.jdkEncode             fixed       100  avgt    3     180.240 ±     4.178  ns/op
Base64Benchmarks.jdkEncode             fixed       500  avgt    3     622.612 ±    62.022  ns/op
Base64Benchmarks.jdkEncode             fixed      1000  avgt    3    1155.079 ±    19.160  ns/op
Base64Benchmarks.jdkEncode             fixed     10000  avgt    3   11679.579 ±   456.399  ns/op
Base64Benchmarks.jdkEncode            random         1  avgt    3      32.146 ±     0.715  ns/op
Base64Benchmarks.jdkEncode            random        10  avgt    3      48.969 ±     1.323  ns/op
Base64Benchmarks.jdkEncode            random        50  avgt    3     113.608 ±     1.372  ns/op
Base64Benchmarks.jdkEncode            random       100  avgt    3     158.952 ±     2.993  ns/op
Base64Benchmarks.jdkEncode            random       500  avgt    3     490.130 ±    13.377  ns/op
Base64Benchmarks.jdkEncode            random      1000  avgt    3     883.244 ±    15.027  ns/op
Base64Benchmarks.jdkEncode            random     10000  avgt    3    8727.412 ±   345.294  ns/op
Base64Benchmarks.jdkUrlDecode          fixed         1  avgt    3      35.999 ±     1.163  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        10  avgt    3      59.330 ±     0.374  ns/op
Base64Benchmarks.jdkUrlDecode          fixed        50  avgt    3     187.159 ±     5.587  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       100  avgt    3     296.324 ±     2.689  ns/op
Base64Benchmarks.jdkUrlDecode          fixed       500  avgt    3    1188.888 ±   136.872  ns/op
Base64Benchmarks.jdkUrlDecode          fixed      1000  avgt    3    2331.393 ±    24.585  ns/op
Base64Benchmarks.jdkUrlDecode          fixed     10000  avgt    3   24877.224 ±   145.572  ns/op
Base64Benchmarks.jdkUrlDecode         random         1  avgt    3      35.027 ±     1.532  ns/op
Base64Benchmarks.jdkUrlDecode         random        10  avgt    3      43.912 ±     1.373  ns/op
Base64Benchmarks.jdkUrlDecode         random        50  avgt    3     109.795 ±     6.429  ns/op
Base64Benchmarks.jdkUrlDecode         random       100  avgt    3     232.370 ±     4.079  ns/op
Base64Benchmarks.jdkUrlDecode         random       500  avgt    3     900.987 ±   176.566  ns/op
Base64Benchmarks.jdkUrlDecode         random      1000  avgt    3    1725.581 ±   439.613  ns/op
Base64Benchmarks.jdkUrlDecode         random     10000  avgt    3   17205.418 ±   307.422  ns/op
Base64Benchmarks.jdkUrlEncode          fixed         1  avgt    3      36.674 ±     1.090  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        10  avgt    3      56.341 ±     5.707  ns/op
Base64Benchmarks.jdkUrlEncode          fixed        50  avgt    3     132.467 ±     2.769  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       100  avgt    3     181.499 ±     6.120  ns/op
Base64Benchmarks.jdkUrlEncode          fixed       500  avgt    3     618.162 ±    13.515  ns/op
Base64Benchmarks.jdkUrlEncode          fixed      1000  avgt    3    1148.613 ±    66.054  ns/op
Base64Benchmarks.jdkUrlEncode          fixed     10000  avgt    3   11684.884 ±   807.096  ns/op
Base64Benchmarks.jdkUrlEncode         random         1  avgt    3      32.363 ±     2.910  ns/op
Base64Benchmarks.jdkUrlEncode         random        10  avgt    3      47.060 ±     0.860  ns/op
Base64Benchmarks.jdkUrlEncode         random        50  avgt    3     114.558 ±     5.993  ns/op
Base64Benchmarks.jdkUrlEncode         random       100  avgt    3     158.026 ±     6.651  ns/op
Base64Benchmarks.jdkUrlEncode         random       500  avgt    3     489.072 ±    12.547  ns/op
Base64Benchmarks.jdkUrlEncode         random      1000  avgt    3     905.665 ±   187.808  ns/op
Base64Benchmarks.jdkUrlEncode         random     10000  avgt    3    8747.826 ±   194.955  ns/op

Benchmark result is saved to /static/data/charts/base64-jdk-vs-commons/jdk11.json
