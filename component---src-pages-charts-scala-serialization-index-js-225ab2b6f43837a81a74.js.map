{"version":3,"file":"component---src-pages-charts-scala-serialization-index-js-225ab2b6f43837a81a74.js","mappings":"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","sources":["webpack://komanov.com/./src/pages/charts/scala-serialization/index.js"],"sourcesContent":["import {graphql, Link, StaticQuery} from 'gatsby';\nimport React from 'react';\nimport {Changelog, ChartAndTable, JmhChartPage, TimeUnits} from '../../../components';\nimport {loadJson} from '../../../util';\n\nconst xDesc = {\n  title: 'Converter',\n  prop: 'library',\n  values: [\n    {\n      name: 'Json',\n      value: 'JSON',\n    },\n    {\n      name: 'Cbor',\n      value: 'CBOR',\n    },\n    {\n      name: 'ScalaPb',\n      value: 'SCALA_PB',\n    },\n    {\n      name: 'JavaPb',\n      value: 'JAVA_PB',\n    },\n    {\n      name: 'JavaThrift',\n      value: 'JAVA_THRIFT',\n    },\n    {\n      name: 'Scrooge',\n      value: 'SCROOGE',\n    },\n    {\n      name: 'BooPickle',\n      value: 'BOOPICKLE',\n    },\n    {\n      name: 'Chill',\n      value: 'CHILL',\n    },\n    {\n      name: 'Scrooge',\n      value: 'SCROOGE',\n    },\n    {\n      name: 'Circe',\n      value: 'CIRCE',\n    },\n    {\n      name: 'Pickling',\n      value: 'PICKLING',\n    },\n    {\n      name: 'JavaSerialization',\n      value: 'SERIALIZABLE',\n    },\n  ],\n  valuesForMax: ['SCALA_PB', 'JAVA_PB', 'JAVA_THRIFT', 'SCROOGE', 'BOOPICKLE'],\n};\n\nconst yDesc = {\n  title: 'data size',\n  prop: 'dataSize',\n  values: [\n    {\n      name: '1k',\n      value: '_1_K',\n    },\n    {\n      name: '2k',\n      value: '_2_K',\n    },\n    {\n      name: '4k',\n      value: '_4_K',\n    },\n    {\n      name: '8k',\n      value: '_8_K',\n    },\n  ],\n};\n\nfunction yDescContainValue(v) {\n  return !!yDesc.values.find(({value}) => value === v);\n}\n\nfunction findMax(data) {\n  let max = 0;\n\n  data.forEach(v => {\n    if (xDesc.valuesForMax.indexOf(v[xDesc.prop]) !== -1 && yDescContainValue(v[yDesc.prop])) {\n      const value = v.pm.scorePercentiles['100.0'];\n      max = Math.max(value, max);\n    }\n  });\n  const onePercentOfMax = max / 100;\n  return max + onePercentOfMax;\n}\n\nclass ScalaSerializationImpl extends React.Component {\n  render() {\n    const {extractor} = this.state || {};\n    const {jmhList, shared} = this.props;\n\n    return (\n      <div className=\"markdown\">\n        <h3>Introduction</h3>\n\n        <p>\n          Here are present actual charts for performance comparison of serialization libraries for Scala for the corresponding\n          article <Link to=\"/p/scala-serialization\">&laquo;Scala Serialization&raquo;</Link>.\n        </p>\n\n        <p>\n          The legend for tests. &laquo;Site&raquo; is a data transfer object (DTO) with different types of data\n          (lists, enums, regular fields). &laquo;Events&raquo; are the primitive representation of this DTO for\n          Event Sourcing (many small objects). Data sizes (1k, 2k etc.) are the corresponding size of the DTO in JSON format.\n        </p>\n\n        <p>\n          Please notice, that unlike the article, here the performance tests are performed\n          via <a href=\"http://openjdk.java.net/projects/code-tools/jmh/\">JMH</a> and using 2 threads.\n          The configuration of a hardware is Intel® Core™ i7–5600U CPU @ 2.60GHz × 4 (2 core + 2 HT) with 16 GB RAM.\n        </p>\n\n        <Changelog runs={shared.runs} onChange={this.handleRunChange}/>\n\n        <h3>Charts</h3>\n\n        <ul>\n          <li><a href=\"#site-both\">Site Two-Way</a></li>\n          <li><a href=\"#events-both\">Events Two-Way</a></li>\n          <li><a href=\"#site-serialization\">Site Serialization</a></li>\n          <li><a href=\"#site-deserialization\">Site Deserialization</a></li>\n          <li><a href=\"#events-serialization\">Events Serialization</a></li>\n          <li><a href=\"#events-deserialization\">Events Deserialization</a></li>\n        </ul>\n\n        <TimeUnits onChange={extractor => this.setState({extractor})}/>\n\n        <h3 id=\"site-both\">Site Two-Way</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Site' && d.action === 'both'}\n          title=\"Two-way times for Site (DTO), nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <h3 id=\"events-both\">Events Two-Way</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Event' && d.action === 'both'}\n          title=\"Two-way times for Events, nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <h3 id=\"site-serialization\">Site Serialization</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Site' && d.action === 'serialization'}\n          title=\"Serialization times for Site (DTO), nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <h3 id=\"site-deserialization\">Site Deserialization</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Site' && d.action === 'deserialization'}\n          title=\"Deserialization times for Site (DTO), nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <h3 id=\"events-serialization\">Events Serialization</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Event' && d.action === 'serialization'}\n          title=\"Serialization times for Events, nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <h3 id=\"events-deserialization\">Events Deserialization</h3>\n\n        <ChartAndTable\n          dataTable={jmhList}\n          extractor={extractor}\n          filter={d => d.dataType === 'Event' && d.action === 'deserialization'}\n          title=\"Deserialization times for Events, nanos\"\n          xDesc={xDesc}\n          yDesc={yDesc}\n          findMaxFunc={findMax}\n        />\n\n        <p>\n          Full JMH log is <a href={`/data/charts/scala-serialization/jmh_${shared.currentRunDate}.log.txt`}>here</a>.\n        </p>\n\n      </div>\n    );\n  }\n\n  handleRunChange = date => {\n    this.props.shared.currentRunDate = date;\n    this.props.refetch();\n  };\n}\n\nfunction exportDimensions(benchmark, params) {\n  //'com.komanov.serialization.jmh.EventBenchmark.both'\n\n  const [dataTypePart, action, ...otherBenchmark] = benchmark.split('Benchmark.');\n  if (!action || otherBenchmark.length > 0) {\n    throw new Error('Expected 2 parts in a benchmark: ' + benchmark);\n  }\n\n  const dataType = dataTypePart.substring(dataTypePart.lastIndexOf('.') + 1);\n\n  return {\n    library: params.converterType,\n    action,\n    dataType,\n    dataSize: params.inputType,\n  };\n}\n\nconst ScalaSerialization = JmhChartPage(\n  ScalaSerializationImpl,\n  {\n    // function is important, by some reason () => {} doesn't work - can't bind this :(\n    fetchFunc: function () {\n      return loadJson(`/data/charts/scala-serialization/jmh_${this.props.shared.currentRunDate}.json`);\n    },\n    exportDimensionsFunc: exportDimensions,\n    headerText: 'Scala Serialization (Charts)',\n  },\n);\n\n//export default ScalaSerialization;\n\nconst props = () => (\n  <StaticQuery\n    query={graphql`\nquery ScalaSerializationQuery {\n  allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/charts/scala-serialization/\"}},\n    sort: { fields: frontmatter___date, order: DESC }\n  ) {\n    edges {\n      node {\n        frontmatter {\n          date\n        }\n        html\n      }\n    }\n  }\n}\n    `}\n    render={(data) => {\n      const runs = data.allMarkdownRemark.edges.map(({node}) => {\n        return {\n          date: node.frontmatter.date.substring(0, 10),\n          comment: node.html,\n        };\n      });\n\n      const shared = {\n        runs,\n        currentRunDate: runs[0].date,\n      };\n\n      return (\n        <ScalaSerialization shared={shared} {...props}/>\n      );\n    }}\n  />\n);\n\nexport default props;"],"names":["xDesc","title","prop","values","name","value","valuesForMax","yDesc","findMax","data","max","forEach","v","indexOf","find","yDescContainValue","pm","scorePercentiles","Math","ScalaSerializationImpl","handleRunChange","date","props","shared","currentRunDate","refetch","render","extractor","this","state","jmhList","className","Link","to","href","runs","onChange","setState","id","dataTable","filter","d","dataType","action","findMaxFunc","React","ScalaSerialization","JmhChartPage","fetchFunc","loadJson","exportDimensionsFunc","benchmark","params","split","dataTypePart","otherBenchmark","length","Error","substring","lastIndexOf","library","converterType","dataSize","inputType","headerText","StaticQuery","query","allMarkdownRemark","edges","map","node","frontmatter","comment","html"],"sourceRoot":""}