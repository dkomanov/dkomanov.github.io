# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 0.00% complete, ETA 00:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 34.444 ns/op
# Warmup Iteration   2: 33.618 ns/op
# Warmup Iteration   3: 32.844 ns/op
# Warmup Iteration   4: 32.564 ns/op
# Warmup Iteration   5: 32.528 ns/op
Iteration   1: 32.639 ns/op
Iteration   2: 32.677 ns/op
Iteration   3: 32.605 ns/op
Iteration   4: 33.155 ns/op
Iteration   5: 33.259 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  32.867 ±(99.9%) 1.208 ns/op [Average]
  (min, avg, max) = (32.605, 32.867, 33.259), stdev = 0.314
  CI (99.9%): [31.659, 34.075] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 0.51% complete, ETA 00:34:17
# Fork: 1 of 1
# Warmup Iteration   1: 59.991 ns/op
# Warmup Iteration   2: 55.489 ns/op
# Warmup Iteration   3: 53.241 ns/op
# Warmup Iteration   4: 53.217 ns/op
# Warmup Iteration   5: 53.390 ns/op
Iteration   1: 53.354 ns/op
Iteration   2: 53.276 ns/op
Iteration   3: 55.253 ns/op
Iteration   4: 54.213 ns/op
Iteration   5: 53.388 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  53.897 ±(99.9%) 3.267 ns/op [Average]
  (min, avg, max) = (53.276, 53.897, 55.253), stdev = 0.848
  CI (99.9%): [50.630, 57.164] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 1.02% complete, ETA 00:34:03
# Fork: 1 of 1
# Warmup Iteration   1: 146.248 ns/op
# Warmup Iteration   2: 136.564 ns/op
# Warmup Iteration   3: 133.455 ns/op
# Warmup Iteration   4: 133.249 ns/op
# Warmup Iteration   5: 132.739 ns/op
Iteration   1: 132.677 ns/op
Iteration   2: 133.383 ns/op
Iteration   3: 133.123 ns/op
Iteration   4: 133.069 ns/op
Iteration   5: 133.794 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  133.209 ±(99.9%) 1.590 ns/op [Average]
  (min, avg, max) = (132.677, 133.209, 133.794), stdev = 0.413
  CI (99.9%): [131.620, 134.799] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 1.53% complete, ETA 00:33:52
# Fork: 1 of 1
# Warmup Iteration   1: 252.227 ns/op
# Warmup Iteration   2: 237.307 ns/op
# Warmup Iteration   3: 231.803 ns/op
# Warmup Iteration   4: 230.563 ns/op
# Warmup Iteration   5: 231.494 ns/op
Iteration   1: 230.673 ns/op
Iteration   2: 230.941 ns/op
Iteration   3: 233.658 ns/op
Iteration   4: 231.161 ns/op
Iteration   5: 230.317 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  231.350 ±(99.9%) 5.114 ns/op [Average]
  (min, avg, max) = (230.317, 231.350, 233.658), stdev = 1.328
  CI (99.9%): [226.236, 236.465] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 2.04% complete, ETA 00:33:39
# Fork: 1 of 1
# Warmup Iteration   1: 1058.955 ns/op
# Warmup Iteration   2: 1002.863 ns/op
# Warmup Iteration   3: 972.067 ns/op
# Warmup Iteration   4: 970.256 ns/op
# Warmup Iteration   5: 968.440 ns/op
Iteration   1: 994.407 ns/op
Iteration   2: 972.266 ns/op
Iteration   3: 972.106 ns/op
Iteration   4: 972.178 ns/op
Iteration   5: 969.825 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  976.156 ±(99.9%) 39.482 ns/op [Average]
  (min, avg, max) = (969.825, 976.156, 994.407), stdev = 10.253
  CI (99.9%): [936.674, 1015.639] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 2.55% complete, ETA 00:33:27
# Fork: 1 of 1
# Warmup Iteration   1: 2084.304 ns/op
# Warmup Iteration   2: 1945.493 ns/op
# Warmup Iteration   3: 1920.525 ns/op
# Warmup Iteration   4: 1914.175 ns/op
# Warmup Iteration   5: 1914.260 ns/op
Iteration   1: 1938.388 ns/op
Iteration   2: 1916.979 ns/op
Iteration   3: 1919.096 ns/op
Iteration   4: 1913.915 ns/op
Iteration   5: 1912.422 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1920.160 ±(99.9%) 40.495 ns/op [Average]
  (min, avg, max) = (1912.422, 1920.160, 1938.388), stdev = 10.517
  CI (99.9%): [1879.665, 1960.656] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 3.06% complete, ETA 00:33:16
# Fork: 1 of 1
# Warmup Iteration   1: 21167.801 ns/op
# Warmup Iteration   2: 20134.799 ns/op
# Warmup Iteration   3: 19537.122 ns/op
# Warmup Iteration   4: 19466.052 ns/op
# Warmup Iteration   5: 19405.348 ns/op
Iteration   1: 19403.685 ns/op
Iteration   2: 19417.631 ns/op
Iteration   3: 19518.669 ns/op
Iteration   4: 19478.132 ns/op
Iteration   5: 19470.843 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  19457.792 ±(99.9%) 180.924 ns/op [Average]
  (min, avg, max) = (19403.685, 19457.792, 19518.669), stdev = 46.985
  CI (99.9%): [19276.867, 19638.716] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1)

# Run progress: 3.57% complete, ETA 00:33:05
# Fork: 1 of 1
# Warmup Iteration   1: 34.807 ns/op
# Warmup Iteration   2: 32.534 ns/op
# Warmup Iteration   3: 32.424 ns/op
# Warmup Iteration   4: 32.276 ns/op
# Warmup Iteration   5: 32.275 ns/op
Iteration   1: 32.352 ns/op
Iteration   2: 34.786 ns/op
Iteration   3: 32.733 ns/op
Iteration   4: 32.297 ns/op
Iteration   5: 32.738 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  32.981 ±(99.9%) 3.965 ns/op [Average]
  (min, avg, max) = (32.297, 32.981, 34.786), stdev = 1.030
  CI (99.9%): [29.016, 36.946] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10)

# Run progress: 4.08% complete, ETA 00:32:53
# Fork: 1 of 1
# Warmup Iteration   1: 57.495 ns/op
# Warmup Iteration   2: 53.637 ns/op
# Warmup Iteration   3: 51.188 ns/op
# Warmup Iteration   4: 51.202 ns/op
# Warmup Iteration   5: 51.055 ns/op
Iteration   1: 51.194 ns/op
Iteration   2: 51.443 ns/op
Iteration   3: 51.304 ns/op
Iteration   4: 51.285 ns/op
Iteration   5: 51.205 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  51.286 ±(99.9%) 0.385 ns/op [Average]
  (min, avg, max) = (51.194, 51.286, 51.443), stdev = 0.100
  CI (99.9%): [50.902, 51.671] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 50)

# Run progress: 4.59% complete, ETA 00:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 140.823 ns/op
# Warmup Iteration   2: 131.737 ns/op
# Warmup Iteration   3: 128.994 ns/op
# Warmup Iteration   4: 128.755 ns/op
# Warmup Iteration   5: 128.911 ns/op
Iteration   1: 128.852 ns/op
Iteration   2: 128.595 ns/op
Iteration   3: 128.817 ns/op
Iteration   4: 129.160 ns/op
Iteration   5: 131.085 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  129.302 ±(99.9%) 3.916 ns/op [Average]
  (min, avg, max) = (128.595, 129.302, 131.085), stdev = 1.017
  CI (99.9%): [125.385, 133.218] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 100)

# Run progress: 5.10% complete, ETA 00:32:28
# Fork: 1 of 1
# Warmup Iteration   1: 252.586 ns/op
# Warmup Iteration   2: 236.137 ns/op
# Warmup Iteration   3: 233.197 ns/op
# Warmup Iteration   4: 232.913 ns/op
# Warmup Iteration   5: 232.286 ns/op
Iteration   1: 237.492 ns/op
Iteration   2: 233.001 ns/op
Iteration   3: 232.217 ns/op
Iteration   4: 235.415 ns/op
Iteration   5: 245.499 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  236.725 ±(99.9%) 20.510 ns/op [Average]
  (min, avg, max) = (232.217, 236.725, 245.499), stdev = 5.326
  CI (99.9%): [216.215, 257.235] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 500)

# Run progress: 5.61% complete, ETA 00:32:16
# Fork: 1 of 1
# Warmup Iteration   1: 1053.344 ns/op
# Warmup Iteration   2: 991.735 ns/op
# Warmup Iteration   3: 1026.830 ns/op
# Warmup Iteration   4: 971.083 ns/op
# Warmup Iteration   5: 970.375 ns/op
Iteration   1: 969.077 ns/op
Iteration   2: 980.187 ns/op
Iteration   3: 971.016 ns/op
Iteration   4: 993.602 ns/op
Iteration   5: 968.543 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  976.485 ±(99.9%) 41.048 ns/op [Average]
  (min, avg, max) = (968.543, 976.485, 993.602), stdev = 10.660
  CI (99.9%): [935.437, 1017.533] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 1000)

# Run progress: 6.12% complete, ETA 00:32:05
# Fork: 1 of 1
# Warmup Iteration   1: 2095.192 ns/op
# Warmup Iteration   2: 1951.482 ns/op
# Warmup Iteration   3: 1918.201 ns/op
# Warmup Iteration   4: 1967.398 ns/op
# Warmup Iteration   5: 1919.637 ns/op
Iteration   1: 1906.666 ns/op
Iteration   2: 1909.503 ns/op
Iteration   3: 1906.555 ns/op
Iteration   4: 1907.896 ns/op
Iteration   5: 1905.263 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  1907.176 ±(99.9%) 6.161 ns/op [Average]
  (min, avg, max) = (1905.263, 1907.176, 1909.503), stdev = 1.600
  CI (99.9%): [1901.016, 1913.337] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode
# Parameters: (dataset = random, length = 10000)

# Run progress: 6.63% complete, ETA 00:31:54
# Fork: 1 of 1
# Warmup Iteration   1: 22699.415 ns/op
# Warmup Iteration   2: 20329.052 ns/op
# Warmup Iteration   3: 19886.163 ns/op
# Warmup Iteration   4: 19856.927 ns/op
# Warmup Iteration   5: 19834.696 ns/op
Iteration   1: 19810.228 ns/op
Iteration   2: 19823.704 ns/op
Iteration   3: 19812.724 ns/op
Iteration   4: 19860.702 ns/op
Iteration   5: 19865.924 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_decode":
  19834.656 ±(99.9%) 102.851 ns/op [Average]
  (min, avg, max) = (19810.228, 19834.656, 19865.924), stdev = 26.710
  CI (99.9%): [19731.805, 19937.507] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 7.14% complete, ETA 00:31:43
# Fork: 1 of 1
# Warmup Iteration   1: 26.058 ns/op
# Warmup Iteration   2: 24.470 ns/op
# Warmup Iteration   3: 23.649 ns/op
# Warmup Iteration   4: 22.747 ns/op
# Warmup Iteration   5: 22.791 ns/op
Iteration   1: 22.718 ns/op
Iteration   2: 22.953 ns/op
Iteration   3: 22.764 ns/op
Iteration   4: 22.814 ns/op
Iteration   5: 22.750 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  22.800 ±(99.9%) 0.356 ns/op [Average]
  (min, avg, max) = (22.718, 22.800, 22.953), stdev = 0.092
  CI (99.9%): [22.444, 23.156] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 7.65% complete, ETA 00:31:33
# Fork: 1 of 1
# Warmup Iteration   1: 52.872 ns/op
# Warmup Iteration   2: 50.064 ns/op
# Warmup Iteration   3: 46.817 ns/op
# Warmup Iteration   4: 46.954 ns/op
# Warmup Iteration   5: 46.971 ns/op
Iteration   1: 46.877 ns/op
Iteration   2: 46.935 ns/op
Iteration   3: 47.014 ns/op
Iteration   4: 46.938 ns/op
Iteration   5: 46.819 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  46.917 ±(99.9%) 0.280 ns/op [Average]
  (min, avg, max) = (46.819, 46.917, 47.014), stdev = 0.073
  CI (99.9%): [46.636, 47.197] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 8.16% complete, ETA 00:31:23
# Fork: 1 of 1
# Warmup Iteration   1: 96.927 ns/op
# Warmup Iteration   2: 89.602 ns/op
# Warmup Iteration   3: 85.894 ns/op
# Warmup Iteration   4: 86.165 ns/op
# Warmup Iteration   5: 85.646 ns/op
Iteration   1: 85.685 ns/op
Iteration   2: 85.728 ns/op
Iteration   3: 85.823 ns/op
Iteration   4: 85.756 ns/op
Iteration   5: 85.514 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  85.701 ±(99.9%) 0.447 ns/op [Average]
  (min, avg, max) = (85.514, 85.701, 85.823), stdev = 0.116
  CI (99.9%): [85.254, 86.149] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 8.67% complete, ETA 00:31:12
# Fork: 1 of 1
# Warmup Iteration   1: 148.911 ns/op
# Warmup Iteration   2: 131.689 ns/op
# Warmup Iteration   3: 130.219 ns/op
# Warmup Iteration   4: 127.941 ns/op
# Warmup Iteration   5: 127.601 ns/op
Iteration   1: 128.517 ns/op
Iteration   2: 130.867 ns/op
Iteration   3: 130.633 ns/op
Iteration   4: 127.421 ns/op
Iteration   5: 128.115 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  129.110 ±(99.9%) 5.965 ns/op [Average]
  (min, avg, max) = (127.421, 129.110, 130.867), stdev = 1.549
  CI (99.9%): [123.145, 135.076] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 9.18% complete, ETA 00:31:02
# Fork: 1 of 1
# Warmup Iteration   1: 507.694 ns/op
# Warmup Iteration   2: 463.577 ns/op
# Warmup Iteration   3: 458.427 ns/op
# Warmup Iteration   4: 458.924 ns/op
# Warmup Iteration   5: 467.505 ns/op
Iteration   1: 468.163 ns/op
Iteration   2: 456.654 ns/op
Iteration   3: 459.709 ns/op
Iteration   4: 458.336 ns/op
Iteration   5: 457.471 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  460.067 ±(99.9%) 17.964 ns/op [Average]
  (min, avg, max) = (456.654, 460.067, 468.163), stdev = 4.665
  CI (99.9%): [442.103, 478.030] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 9.69% complete, ETA 00:30:52
# Fork: 1 of 1
# Warmup Iteration   1: 982.128 ns/op
# Warmup Iteration   2: 883.412 ns/op
# Warmup Iteration   3: 931.186 ns/op
# Warmup Iteration   4: 869.728 ns/op
# Warmup Iteration   5: 870.058 ns/op
Iteration   1: 871.252 ns/op
Iteration   2: 868.784 ns/op
Iteration   3: 877.641 ns/op
Iteration   4: 869.709 ns/op
Iteration   5: 873.022 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  872.081 ±(99.9%) 13.475 ns/op [Average]
  (min, avg, max) = (868.784, 872.081, 877.641), stdev = 3.499
  CI (99.9%): [858.606, 885.556] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 10.20% complete, ETA 00:30:42
# Fork: 1 of 1
# Warmup Iteration   1: 10767.554 ns/op
# Warmup Iteration   2: 9198.359 ns/op
# Warmup Iteration   3: 9124.705 ns/op
# Warmup Iteration   4: 9252.505 ns/op
# Warmup Iteration   5: 9384.417 ns/op
Iteration   1: 9179.918 ns/op
Iteration   2: 9156.463 ns/op
Iteration   3: 9172.918 ns/op
Iteration   4: 9162.620 ns/op
Iteration   5: 9328.935 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  9200.171 ±(99.9%) 279.361 ns/op [Average]
  (min, avg, max) = (9156.463, 9200.171, 9328.935), stdev = 72.549
  CI (99.9%): [8920.810, 9479.532] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1)

# Run progress: 10.71% complete, ETA 00:30:31
# Fork: 1 of 1
# Warmup Iteration   1: 26.348 ns/op
# Warmup Iteration   2: 26.375 ns/op
# Warmup Iteration   3: 22.797 ns/op
# Warmup Iteration   4: 22.818 ns/op
# Warmup Iteration   5: 23.841 ns/op
Iteration   1: 23.068 ns/op
Iteration   2: 22.765 ns/op
Iteration   3: 22.709 ns/op
Iteration   4: 23.046 ns/op
Iteration   5: 23.087 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  22.935 ±(99.9%) 0.702 ns/op [Average]
  (min, avg, max) = (22.709, 22.935, 23.087), stdev = 0.182
  CI (99.9%): [22.233, 23.637] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10)

# Run progress: 11.22% complete, ETA 00:30:20
# Fork: 1 of 1
# Warmup Iteration   1: 52.065 ns/op
# Warmup Iteration   2: 49.540 ns/op
# Warmup Iteration   3: 46.563 ns/op
# Warmup Iteration   4: 46.678 ns/op
# Warmup Iteration   5: 46.715 ns/op
Iteration   1: 47.587 ns/op
Iteration   2: 46.658 ns/op
Iteration   3: 46.874 ns/op
Iteration   4: 47.098 ns/op
Iteration   5: 47.225 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  47.088 ±(99.9%) 1.360 ns/op [Average]
  (min, avg, max) = (46.658, 47.088, 47.587), stdev = 0.353
  CI (99.9%): [45.729, 48.448] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 50)

# Run progress: 11.73% complete, ETA 00:30:09
# Fork: 1 of 1
# Warmup Iteration   1: 99.144 ns/op
# Warmup Iteration   2: 91.671 ns/op
# Warmup Iteration   3: 85.115 ns/op
# Warmup Iteration   4: 85.048 ns/op
# Warmup Iteration   5: 84.836 ns/op
Iteration   1: 84.793 ns/op
Iteration   2: 84.706 ns/op
Iteration   3: 85.136 ns/op
Iteration   4: 85.012 ns/op
Iteration   5: 85.466 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  85.023 ±(99.9%) 1.158 ns/op [Average]
  (min, avg, max) = (84.706, 85.023, 85.466), stdev = 0.301
  CI (99.9%): [83.864, 86.181] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 100)

# Run progress: 12.24% complete, ETA 00:29:59
# Fork: 1 of 1
# Warmup Iteration   1: 147.712 ns/op
# Warmup Iteration   2: 136.976 ns/op
# Warmup Iteration   3: 131.723 ns/op
# Warmup Iteration   4: 128.081 ns/op
# Warmup Iteration   5: 127.774 ns/op
Iteration   1: 127.869 ns/op
Iteration   2: 127.843 ns/op
Iteration   3: 127.746 ns/op
Iteration   4: 128.131 ns/op
Iteration   5: 127.959 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  127.910 ±(99.9%) 0.560 ns/op [Average]
  (min, avg, max) = (127.746, 127.910, 128.131), stdev = 0.145
  CI (99.9%): [127.350, 128.469] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 500)

# Run progress: 12.76% complete, ETA 00:29:48
# Fork: 1 of 1
# Warmup Iteration   1: 524.892 ns/op
# Warmup Iteration   2: 468.572 ns/op
# Warmup Iteration   3: 457.882 ns/op
# Warmup Iteration   4: 458.255 ns/op
# Warmup Iteration   5: 457.570 ns/op
Iteration   1: 458.430 ns/op
Iteration   2: 459.077 ns/op
Iteration   3: 458.534 ns/op
Iteration   4: 459.184 ns/op
Iteration   5: 458.477 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  458.740 ±(99.9%) 1.387 ns/op [Average]
  (min, avg, max) = (458.430, 458.740, 459.184), stdev = 0.360
  CI (99.9%): [457.353, 460.127] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 1000)

# Run progress: 13.27% complete, ETA 00:29:37
# Fork: 1 of 1
# Warmup Iteration   1: 985.173 ns/op
# Warmup Iteration   2: 884.576 ns/op
# Warmup Iteration   3: 874.845 ns/op
# Warmup Iteration   4: 874.796 ns/op
# Warmup Iteration   5: 872.833 ns/op
Iteration   1: 894.616 ns/op
Iteration   2: 873.564 ns/op
Iteration   3: 872.494 ns/op
Iteration   4: 873.885 ns/op
Iteration   5: 881.194 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  879.150 ±(99.9%) 35.845 ns/op [Average]
  (min, avg, max) = (872.494, 879.150, 894.616), stdev = 9.309
  CI (99.9%): [843.305, 914.996] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode
# Parameters: (dataset = random, length = 10000)

# Run progress: 13.78% complete, ETA 00:29:26
# Fork: 1 of 1
# Warmup Iteration   1: 10833.662 ns/op
# Warmup Iteration   2: 9186.509 ns/op
# Warmup Iteration   3: 9154.463 ns/op
# Warmup Iteration   4: 9155.362 ns/op
# Warmup Iteration   5: 9146.486 ns/op
Iteration   1: 9121.578 ns/op
Iteration   2: 9129.206 ns/op
Iteration   3: 9124.044 ns/op
Iteration   4: 9118.617 ns/op
Iteration   5: 9121.280 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jdk_url_encode":
  9122.945 ±(99.9%) 15.377 ns/op [Average]
  (min, avg, max) = (9118.617, 9122.945, 9129.206), stdev = 3.993
  CI (99.9%): [9107.568, 9138.322] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 14.29% complete, ETA 00:29:16
# Fork: 1 of 1
# Warmup Iteration   1: 1435.251 ns/op
# Warmup Iteration   2: 1420.493 ns/op
# Warmup Iteration   3: 1400.635 ns/op
# Warmup Iteration   4: 1415.280 ns/op
# Warmup Iteration   5: 1408.800 ns/op
Iteration   1: 1417.127 ns/op
Iteration   2: 1386.279 ns/op
Iteration   3: 1389.065 ns/op
Iteration   4: 1387.681 ns/op
Iteration   5: 1389.866 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1394.004 ±(99.9%) 50.053 ns/op [Average]
  (min, avg, max) = (1386.279, 1394.004, 1417.127), stdev = 12.999
  CI (99.9%): [1343.951, 1444.056] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 14.80% complete, ETA 00:29:05
# Fork: 1 of 1
# Warmup Iteration   1: 1429.332 ns/op
# Warmup Iteration   2: 1398.647 ns/op
# Warmup Iteration   3: 1392.047 ns/op
# Warmup Iteration   4: 1395.654 ns/op
# Warmup Iteration   5: 1383.600 ns/op
Iteration   1: 1366.801 ns/op
Iteration   2: 1363.939 ns/op
Iteration   3: 1375.370 ns/op
Iteration   4: 1369.251 ns/op
Iteration   5: 1372.735 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1369.619 ±(99.9%) 17.554 ns/op [Average]
  (min, avg, max) = (1363.939, 1369.619, 1375.370), stdev = 4.559
  CI (99.9%): [1352.066, 1387.173] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 15.31% complete, ETA 00:28:55
# Fork: 1 of 1
# Warmup Iteration   1: 1521.910 ns/op
# Warmup Iteration   2: 1533.610 ns/op
# Warmup Iteration   3: 1536.689 ns/op
# Warmup Iteration   4: 1461.876 ns/op
# Warmup Iteration   5: 1455.010 ns/op
Iteration   1: 1502.041 ns/op
Iteration   2: 1458.693 ns/op
Iteration   3: 1451.399 ns/op
Iteration   4: 1459.544 ns/op
Iteration   5: 1459.929 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1466.321 ±(99.9%) 78.053 ns/op [Average]
  (min, avg, max) = (1451.399, 1466.321, 1502.041), stdev = 20.270
  CI (99.9%): [1388.268, 1544.374] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 15.82% complete, ETA 00:28:44
# Fork: 1 of 1
# Warmup Iteration   1: 1673.268 ns/op
# Warmup Iteration   2: 1661.455 ns/op
# Warmup Iteration   3: 1599.291 ns/op
# Warmup Iteration   4: 1599.803 ns/op
# Warmup Iteration   5: 1603.807 ns/op
Iteration   1: 1594.542 ns/op
Iteration   2: 1601.148 ns/op
Iteration   3: 1593.122 ns/op
Iteration   4: 1594.985 ns/op
Iteration   5: 1599.299 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1596.619 ±(99.9%) 13.186 ns/op [Average]
  (min, avg, max) = (1593.122, 1596.619, 1601.148), stdev = 3.424
  CI (99.9%): [1583.433, 1609.806] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 16.33% complete, ETA 00:28:34
# Fork: 1 of 1
# Warmup Iteration   1: 2279.010 ns/op
# Warmup Iteration   2: 2206.662 ns/op
# Warmup Iteration   3: 2144.024 ns/op
# Warmup Iteration   4: 2125.893 ns/op
# Warmup Iteration   5: 2150.694 ns/op
Iteration   1: 2266.971 ns/op
Iteration   2: 2160.642 ns/op
Iteration   3: 2160.702 ns/op
Iteration   4: 2252.794 ns/op
Iteration   5: 2140.260 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  2196.274 ±(99.9%) 226.708 ns/op [Average]
  (min, avg, max) = (2140.260, 2196.274, 2266.971), stdev = 58.875
  CI (99.9%): [1969.566, 2422.982] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 16.84% complete, ETA 00:28:24
# Fork: 1 of 1
# Warmup Iteration   1: 3001.034 ns/op
# Warmup Iteration   2: 2864.716 ns/op
# Warmup Iteration   3: 2854.522 ns/op
# Warmup Iteration   4: 2994.466 ns/op
# Warmup Iteration   5: 2882.303 ns/op
Iteration   1: 2830.953 ns/op
Iteration   2: 2809.498 ns/op
Iteration   3: 2804.918 ns/op
Iteration   4: 2801.679 ns/op
Iteration   5: 2872.213 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  2823.852 ±(99.9%) 113.012 ns/op [Average]
  (min, avg, max) = (2801.679, 2823.852, 2872.213), stdev = 29.349
  CI (99.9%): [2710.840, 2936.864] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 17.35% complete, ETA 00:28:13
# Fork: 1 of 1
# Warmup Iteration   1: 14629.881 ns/op
# Warmup Iteration   2: 13793.787 ns/op
# Warmup Iteration   3: 13704.728 ns/op
# Warmup Iteration   4: 13554.190 ns/op
# Warmup Iteration   5: 15024.200 ns/op
Iteration   1: 14024.947 ns/op
Iteration   2: 14268.299 ns/op
Iteration   3: 13979.527 ns/op
Iteration   4: 14228.639 ns/op
Iteration   5: 14776.401 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  14255.563 ±(99.9%) 1220.020 ns/op [Average]
  (min, avg, max) = (13979.527, 14255.563, 14776.401), stdev = 316.835
  CI (99.9%): [13035.543, 15475.583] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 1)

# Run progress: 17.86% complete, ETA 00:28:03
# Fork: 1 of 1
# Warmup Iteration   1: 1477.671 ns/op
# Warmup Iteration   2: 1483.021 ns/op
# Warmup Iteration   3: 1430.975 ns/op
# Warmup Iteration   4: 1445.514 ns/op
# Warmup Iteration   5: 1487.277 ns/op
Iteration   1: 1469.286 ns/op
Iteration   2: 1509.168 ns/op
Iteration   3: 1454.077 ns/op
Iteration   4: 1462.431 ns/op
Iteration   5: 1428.092 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1464.611 ±(99.9%) 113.193 ns/op [Average]
  (min, avg, max) = (1428.092, 1464.611, 1509.168), stdev = 29.396
  CI (99.9%): [1351.418, 1577.804] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 10)

# Run progress: 18.37% complete, ETA 00:27:52
# Fork: 1 of 1
# Warmup Iteration   1: 1540.171 ns/op
# Warmup Iteration   2: 1499.419 ns/op
# Warmup Iteration   3: 1490.688 ns/op
# Warmup Iteration   4: 1449.230 ns/op
# Warmup Iteration   5: 1455.426 ns/op
Iteration   1: 1457.182 ns/op
Iteration   2: 1431.529 ns/op
Iteration   3: 1482.862 ns/op
Iteration   4: 1476.679 ns/op
Iteration   5: 1442.188 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1458.088 ±(99.9%) 84.327 ns/op [Average]
  (min, avg, max) = (1431.529, 1458.088, 1482.862), stdev = 21.900
  CI (99.9%): [1373.761, 1542.415] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 50)

# Run progress: 18.88% complete, ETA 00:27:42
# Fork: 1 of 1
# Warmup Iteration   1: 1591.746 ns/op
# Warmup Iteration   2: 1661.687 ns/op
# Warmup Iteration   3: 1531.503 ns/op
# Warmup Iteration   4: 1505.213 ns/op
# Warmup Iteration   5: 1531.986 ns/op
Iteration   1: 1578.360 ns/op
Iteration   2: 1530.321 ns/op
Iteration   3: 1481.102 ns/op
Iteration   4: 1451.646 ns/op
Iteration   5: 1450.131 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1498.312 ±(99.9%) 212.900 ns/op [Average]
  (min, avg, max) = (1450.131, 1498.312, 1578.360), stdev = 55.289
  CI (99.9%): [1285.412, 1711.212] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 100)

# Run progress: 19.39% complete, ETA 00:27:31
# Fork: 1 of 1
# Warmup Iteration   1: 1674.180 ns/op
# Warmup Iteration   2: 1650.917 ns/op
# Warmup Iteration   3: 1593.652 ns/op
# Warmup Iteration   4: 1603.696 ns/op
# Warmup Iteration   5: 1642.534 ns/op
Iteration   1: 1715.342 ns/op
Iteration   2: 1701.173 ns/op
Iteration   3: 1725.504 ns/op
Iteration   4: 1676.537 ns/op
Iteration   5: 1681.458 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  1700.003 ±(99.9%) 81.265 ns/op [Average]
  (min, avg, max) = (1676.537, 1700.003, 1725.504), stdev = 21.104
  CI (99.9%): [1618.738, 1781.268] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 500)

# Run progress: 19.90% complete, ETA 00:27:20
# Fork: 1 of 1
# Warmup Iteration   1: 2424.954 ns/op
# Warmup Iteration   2: 2268.656 ns/op
# Warmup Iteration   3: 2310.165 ns/op
# Warmup Iteration   4: 2303.853 ns/op
# Warmup Iteration   5: 2318.682 ns/op
Iteration   1: 2288.189 ns/op
Iteration   2: 2189.421 ns/op
Iteration   3: 2230.553 ns/op
Iteration   4: 2240.247 ns/op
Iteration   5: 2255.606 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  2240.803 ±(99.9%) 138.970 ns/op [Average]
  (min, avg, max) = (2189.421, 2240.803, 2288.189), stdev = 36.090
  CI (99.9%): [2101.833, 2379.774] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 1000)

# Run progress: 20.41% complete, ETA 00:27:10
# Fork: 1 of 1
# Warmup Iteration   1: 3231.754 ns/op
# Warmup Iteration   2: 3195.640 ns/op
# Warmup Iteration   3: 2968.585 ns/op
# Warmup Iteration   4: 3007.003 ns/op
# Warmup Iteration   5: 3051.712 ns/op
Iteration   1: 3030.279 ns/op
Iteration   2: 3007.706 ns/op
Iteration   3: 3020.166 ns/op
Iteration   4: 2939.215 ns/op
Iteration   5: 2944.339 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  2988.341 ±(99.9%) 166.695 ns/op [Average]
  (min, avg, max) = (2939.215, 2988.341, 3030.279), stdev = 43.290
  CI (99.9%): [2821.646, 3155.036] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode
# Parameters: (dataset = random, length = 10000)

# Run progress: 20.92% complete, ETA 00:26:59
# Fork: 1 of 1
# Warmup Iteration   1: 16003.506 ns/op
# Warmup Iteration   2: 14630.345 ns/op
# Warmup Iteration   3: 14246.935 ns/op
# Warmup Iteration   4: 14419.042 ns/op
# Warmup Iteration   5: 14448.727 ns/op
Iteration   1: 14377.011 ns/op
Iteration   2: 14175.133 ns/op
Iteration   3: 14472.752 ns/op
Iteration   4: 14625.547 ns/op
Iteration   5: 14628.205 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode":
  14455.729 ±(99.9%) 730.117 ns/op [Average]
  (min, avg, max) = (14175.133, 14455.729, 14628.205), stdev = 189.609
  CI (99.9%): [13725.613, 15185.846] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 21.43% complete, ETA 00:26:49
# Fork: 1 of 1
# Warmup Iteration   1: 1382.336 ns/op
# Warmup Iteration   2: 1409.190 ns/op
# Warmup Iteration   3: 1284.732 ns/op
# Warmup Iteration   4: 1307.636 ns/op
# Warmup Iteration   5: 1296.461 ns/op
Iteration   1: 1296.709 ns/op
Iteration   2: 1302.834 ns/op
Iteration   3: 1293.785 ns/op
Iteration   4: 1284.284 ns/op
Iteration   5: 1340.849 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1303.692 ±(99.9%) 84.033 ns/op [Average]
  (min, avg, max) = (1284.284, 1303.692, 1340.849), stdev = 21.823
  CI (99.9%): [1219.660, 1387.725] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 21.94% complete, ETA 00:26:39
# Fork: 1 of 1
# Warmup Iteration   1: 1290.712 ns/op
# Warmup Iteration   2: 1324.514 ns/op
# Warmup Iteration   3: 1300.662 ns/op
# Warmup Iteration   4: 1330.054 ns/op
# Warmup Iteration   5: 1295.377 ns/op
Iteration   1: 1264.987 ns/op
Iteration   2: 1267.126 ns/op
Iteration   3: 1285.189 ns/op
Iteration   4: 1251.269 ns/op
Iteration   5: 1242.335 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1262.181 ±(99.9%) 63.115 ns/op [Average]
  (min, avg, max) = (1242.335, 1262.181, 1285.189), stdev = 16.391
  CI (99.9%): [1199.066, 1325.296] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 22.45% complete, ETA 00:26:28
# Fork: 1 of 1
# Warmup Iteration   1: 1438.342 ns/op
# Warmup Iteration   2: 1475.053 ns/op
# Warmup Iteration   3: 1395.255 ns/op
# Warmup Iteration   4: 1395.838 ns/op
# Warmup Iteration   5: 1399.064 ns/op
Iteration   1: 1384.975 ns/op
Iteration   2: 1363.723 ns/op
Iteration   3: 1371.199 ns/op
Iteration   4: 1424.617 ns/op
Iteration   5: 1399.017 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1388.706 ±(99.9%) 93.143 ns/op [Average]
  (min, avg, max) = (1363.723, 1388.706, 1424.617), stdev = 24.189
  CI (99.9%): [1295.563, 1481.850] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 22.96% complete, ETA 00:26:18
# Fork: 1 of 1
# Warmup Iteration   1: 1537.290 ns/op
# Warmup Iteration   2: 1478.739 ns/op
# Warmup Iteration   3: 1511.455 ns/op
# Warmup Iteration   4: 1470.638 ns/op
# Warmup Iteration   5: 1447.342 ns/op
Iteration   1: 1497.565 ns/op
Iteration   2: 1492.156 ns/op
Iteration   3: 1513.608 ns/op
Iteration   4: 1543.669 ns/op
Iteration   5: 1507.758 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1510.951 ±(99.9%) 77.495 ns/op [Average]
  (min, avg, max) = (1492.156, 1510.951, 1543.669), stdev = 20.125
  CI (99.9%): [1433.456, 1588.447] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 23.47% complete, ETA 00:26:08
# Fork: 1 of 1
# Warmup Iteration   1: 2138.244 ns/op
# Warmup Iteration   2: 2058.805 ns/op
# Warmup Iteration   3: 1992.946 ns/op
# Warmup Iteration   4: 1973.971 ns/op
# Warmup Iteration   5: 2071.557 ns/op
Iteration   1: 1934.992 ns/op
Iteration   2: 2033.637 ns/op
Iteration   3: 1998.876 ns/op
Iteration   4: 1956.691 ns/op
Iteration   5: 1931.191 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1971.077 ±(99.9%) 169.893 ns/op [Average]
  (min, avg, max) = (1931.191, 1971.077, 2033.637), stdev = 44.121
  CI (99.9%): [1801.185, 2140.970] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 23.98% complete, ETA 00:25:57
# Fork: 1 of 1
# Warmup Iteration   1: 2947.063 ns/op
# Warmup Iteration   2: 2898.181 ns/op
# Warmup Iteration   3: 2858.932 ns/op
# Warmup Iteration   4: 2923.130 ns/op
# Warmup Iteration   5: 2827.695 ns/op
Iteration   1: 2797.563 ns/op
Iteration   2: 2812.404 ns/op
Iteration   3: 2888.560 ns/op
Iteration   4: 2902.761 ns/op
Iteration   5: 2793.901 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  2839.038 ±(99.9%) 201.745 ns/op [Average]
  (min, avg, max) = (2793.901, 2839.038, 2902.761), stdev = 52.392
  CI (99.9%): [2637.293, 3040.782] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 24.49% complete, ETA 00:25:47
# Fork: 1 of 1
# Warmup Iteration   1: 15448.385 ns/op
# Warmup Iteration   2: 14118.917 ns/op
# Warmup Iteration   3: 14190.221 ns/op
# Warmup Iteration   4: 13819.997 ns/op
# Warmup Iteration   5: 13995.818 ns/op
Iteration   1: 14322.049 ns/op
Iteration   2: 14023.030 ns/op
Iteration   3: 13945.196 ns/op
Iteration   4: 13897.503 ns/op
Iteration   5: 14101.966 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  14057.949 ±(99.9%) 642.497 ns/op [Average]
  (min, avg, max) = (13897.503, 14057.949, 14322.049), stdev = 166.854
  CI (99.9%): [13415.452, 14700.446] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 1)

# Run progress: 25.00% complete, ETA 00:25:37
# Fork: 1 of 1
# Warmup Iteration   1: 1286.539 ns/op
# Warmup Iteration   2: 1296.724 ns/op
# Warmup Iteration   3: 1270.570 ns/op
# Warmup Iteration   4: 1289.456 ns/op
# Warmup Iteration   5: 1273.884 ns/op
Iteration   1: 1285.300 ns/op
Iteration   2: 1247.996 ns/op
Iteration   3: 1288.902 ns/op
Iteration   4: 1296.937 ns/op
Iteration   5: 1263.771 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1276.581 ±(99.9%) 77.574 ns/op [Average]
  (min, avg, max) = (1247.996, 1276.581, 1296.937), stdev = 20.146
  CI (99.9%): [1199.007, 1354.155] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 10)

# Run progress: 25.51% complete, ETA 00:25:26
# Fork: 1 of 1
# Warmup Iteration   1: 1335.703 ns/op
# Warmup Iteration   2: 1355.003 ns/op
# Warmup Iteration   3: 1351.858 ns/op
# Warmup Iteration   4: 1369.604 ns/op
# Warmup Iteration   5: 1328.070 ns/op
Iteration   1: 1332.679 ns/op
Iteration   2: 1319.367 ns/op
Iteration   3: 1338.053 ns/op
Iteration   4: 1289.811 ns/op
Iteration   5: 1323.722 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1320.727 ±(99.9%) 72.287 ns/op [Average]
  (min, avg, max) = (1289.811, 1320.727, 1338.053), stdev = 18.773
  CI (99.9%): [1248.440, 1393.013] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 50)

# Run progress: 26.02% complete, ETA 00:25:16
# Fork: 1 of 1
# Warmup Iteration   1: 1393.433 ns/op
# Warmup Iteration   2: 1416.906 ns/op
# Warmup Iteration   3: 1360.897 ns/op
# Warmup Iteration   4: 1379.770 ns/op
# Warmup Iteration   5: 1351.589 ns/op
Iteration   1: 1368.657 ns/op
Iteration   2: 1356.714 ns/op
Iteration   3: 1337.671 ns/op
Iteration   4: 1355.463 ns/op
Iteration   5: 1349.476 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1353.596 ±(99.9%) 43.506 ns/op [Average]
  (min, avg, max) = (1337.671, 1353.596, 1368.657), stdev = 11.298
  CI (99.9%): [1310.090, 1397.102] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 100)

# Run progress: 26.53% complete, ETA 00:25:05
# Fork: 1 of 1
# Warmup Iteration   1: 1521.338 ns/op
# Warmup Iteration   2: 1469.708 ns/op
# Warmup Iteration   3: 1415.620 ns/op
# Warmup Iteration   4: 1437.292 ns/op
# Warmup Iteration   5: 1433.704 ns/op
Iteration   1: 1481.561 ns/op
Iteration   2: 1456.718 ns/op
Iteration   3: 1452.827 ns/op
Iteration   4: 1436.460 ns/op
Iteration   5: 1431.495 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1451.812 ±(99.9%) 76.009 ns/op [Average]
  (min, avg, max) = (1431.495, 1451.812, 1481.561), stdev = 19.739
  CI (99.9%): [1375.803, 1527.821] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 500)

# Run progress: 27.04% complete, ETA 00:24:55
# Fork: 1 of 1
# Warmup Iteration   1: 2168.767 ns/op
# Warmup Iteration   2: 2003.134 ns/op
# Warmup Iteration   3: 2114.275 ns/op
# Warmup Iteration   4: 2035.824 ns/op
# Warmup Iteration   5: 1953.167 ns/op
Iteration   1: 1952.703 ns/op
Iteration   2: 1937.009 ns/op
Iteration   3: 1935.018 ns/op
Iteration   4: 1935.530 ns/op
Iteration   5: 1931.947 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  1938.441 ±(99.9%) 31.508 ns/op [Average]
  (min, avg, max) = (1931.947, 1938.441, 1952.703), stdev = 8.183
  CI (99.9%): [1906.933, 1969.950] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 1000)

# Run progress: 27.55% complete, ETA 00:24:44
# Fork: 1 of 1
# Warmup Iteration   1: 2844.275 ns/op
# Warmup Iteration   2: 2727.095 ns/op
# Warmup Iteration   3: 2776.737 ns/op
# Warmup Iteration   4: 2728.953 ns/op
# Warmup Iteration   5: 2669.598 ns/op
Iteration   1: 2707.404 ns/op
Iteration   2: 2680.757 ns/op
Iteration   3: 2655.770 ns/op
Iteration   4: 2705.115 ns/op
Iteration   5: 2859.684 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  2721.746 ±(99.9%) 307.703 ns/op [Average]
  (min, avg, max) = (2655.770, 2721.746, 2859.684), stdev = 79.910
  CI (99.9%): [2414.043, 3029.449] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1
# Parameters: (dataset = random, length = 10000)

# Run progress: 28.06% complete, ETA 00:24:33
# Fork: 1 of 1
# Warmup Iteration   1: 16124.003 ns/op
# Warmup Iteration   2: 13657.243 ns/op
# Warmup Iteration   3: 13422.869 ns/op
# Warmup Iteration   4: 13365.505 ns/op
# Warmup Iteration   5: 13359.414 ns/op
Iteration   1: 13494.398 ns/op
Iteration   2: 13433.730 ns/op
Iteration   3: 13417.614 ns/op
Iteration   4: 13419.946 ns/op
Iteration   5: 13683.567 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode1":
  13489.851 ±(99.9%) 433.950 ns/op [Average]
  (min, avg, max) = (13417.614, 13489.851, 13683.567), stdev = 112.695
  CI (99.9%): [13055.901, 13923.801] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 28.57% complete, ETA 00:24:23
# Fork: 1 of 1
# Warmup Iteration   1: 1163.395 ns/op
# Warmup Iteration   2: 1164.469 ns/op
# Warmup Iteration   3: 1148.202 ns/op
# Warmup Iteration   4: 1144.865 ns/op
# Warmup Iteration   5: 1138.653 ns/op
Iteration   1: 1132.316 ns/op
Iteration   2: 1135.485 ns/op
Iteration   3: 1123.152 ns/op
Iteration   4: 1125.495 ns/op
Iteration   5: 1116.059 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1126.501 ±(99.9%) 29.565 ns/op [Average]
  (min, avg, max) = (1116.059, 1126.501, 1135.485), stdev = 7.678
  CI (99.9%): [1096.936, 1156.067] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 29.08% complete, ETA 00:24:12
# Fork: 1 of 1
# Warmup Iteration   1: 1094.255 ns/op
# Warmup Iteration   2: 1096.192 ns/op
# Warmup Iteration   3: 1099.758 ns/op
# Warmup Iteration   4: 1088.221 ns/op
# Warmup Iteration   5: 1101.876 ns/op
Iteration   1: 1065.077 ns/op
Iteration   2: 1065.601 ns/op
Iteration   3: 1065.588 ns/op
Iteration   4: 1087.392 ns/op
Iteration   5: 1055.222 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1067.776 ±(99.9%) 45.529 ns/op [Average]
  (min, avg, max) = (1055.222, 1067.776, 1087.392), stdev = 11.824
  CI (99.9%): [1022.247, 1113.305] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 29.59% complete, ETA 00:24:02
# Fork: 1 of 1
# Warmup Iteration   1: 1232.948 ns/op
# Warmup Iteration   2: 1248.763 ns/op
# Warmup Iteration   3: 1191.897 ns/op
# Warmup Iteration   4: 1363.673 ns/op
# Warmup Iteration   5: 1259.005 ns/op
Iteration   1: 1259.142 ns/op
Iteration   2: 1249.256 ns/op
Iteration   3: 1215.401 ns/op
Iteration   4: 1230.157 ns/op
Iteration   5: 1242.647 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1239.320 ±(99.9%) 65.540 ns/op [Average]
  (min, avg, max) = (1215.401, 1239.320, 1259.142), stdev = 17.021
  CI (99.9%): [1173.780, 1304.861] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 30.10% complete, ETA 00:23:52
# Fork: 1 of 1
# Warmup Iteration   1: 1334.475 ns/op
# Warmup Iteration   2: 1297.561 ns/op
# Warmup Iteration   3: 1270.363 ns/op
# Warmup Iteration   4: 1276.707 ns/op
# Warmup Iteration   5: 1257.658 ns/op
Iteration   1: 1268.689 ns/op
Iteration   2: 1293.440 ns/op
Iteration   3: 1262.252 ns/op
Iteration   4: 1318.322 ns/op
Iteration   5: 1284.708 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1285.482 ±(99.9%) 85.325 ns/op [Average]
  (min, avg, max) = (1262.252, 1285.482, 1318.322), stdev = 22.159
  CI (99.9%): [1200.157, 1370.808] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 30.61% complete, ETA 00:23:41
# Fork: 1 of 1
# Warmup Iteration   1: 2058.782 ns/op
# Warmup Iteration   2: 1987.516 ns/op
# Warmup Iteration   3: 1892.393 ns/op
# Warmup Iteration   4: 1879.992 ns/op
# Warmup Iteration   5: 1869.612 ns/op
Iteration   1: 1909.401 ns/op
Iteration   2: 1988.169 ns/op
Iteration   3: 1851.201 ns/op
Iteration   4: 1844.201 ns/op
Iteration   5: 1851.913 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1888.977 ±(99.9%) 236.288 ns/op [Average]
  (min, avg, max) = (1844.201, 1888.977, 1988.169), stdev = 61.363
  CI (99.9%): [1652.689, 2125.265] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 31.12% complete, ETA 00:23:31
# Fork: 1 of 1
# Warmup Iteration   1: 2828.119 ns/op
# Warmup Iteration   2: 2843.938 ns/op
# Warmup Iteration   3: 2690.442 ns/op
# Warmup Iteration   4: 2680.678 ns/op
# Warmup Iteration   5: 2695.508 ns/op
Iteration   1: 2658.059 ns/op
Iteration   2: 2719.514 ns/op
Iteration   3: 2716.850 ns/op
Iteration   4: 2769.421 ns/op
Iteration   5: 2746.060 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  2721.981 ±(99.9%) 160.494 ns/op [Average]
  (min, avg, max) = (2658.059, 2721.981, 2769.421), stdev = 41.680
  CI (99.9%): [2561.487, 2882.475] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 31.63% complete, ETA 00:23:21
# Fork: 1 of 1
# Warmup Iteration   1: 14643.712 ns/op
# Warmup Iteration   2: 13908.218 ns/op
# Warmup Iteration   3: 13680.514 ns/op
# Warmup Iteration   4: 13971.933 ns/op
# Warmup Iteration   5: 13621.273 ns/op
Iteration   1: 13711.099 ns/op
Iteration   2: 14022.562 ns/op
Iteration   3: 13857.777 ns/op
Iteration   4: 13919.066 ns/op
Iteration   5: 14024.064 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  13906.914 ±(99.9%) 502.077 ns/op [Average]
  (min, avg, max) = (13711.099, 13906.914, 14024.064), stdev = 130.388
  CI (99.9%): [13404.836, 14408.991] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 1)

# Run progress: 32.14% complete, ETA 00:23:10
# Fork: 1 of 1
# Warmup Iteration   1: 1147.443 ns/op
# Warmup Iteration   2: 1127.794 ns/op
# Warmup Iteration   3: 1111.780 ns/op
# Warmup Iteration   4: 1108.400 ns/op
# Warmup Iteration   5: 1129.927 ns/op
Iteration   1: 1148.370 ns/op
Iteration   2: 1090.237 ns/op
Iteration   3: 1114.566 ns/op
Iteration   4: 1084.737 ns/op
Iteration   5: 1113.529 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1110.288 ±(99.9%) 96.918 ns/op [Average]
  (min, avg, max) = (1084.737, 1110.288, 1148.370), stdev = 25.169
  CI (99.9%): [1013.370, 1207.206] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 10)

# Run progress: 32.65% complete, ETA 00:23:00
# Fork: 1 of 1
# Warmup Iteration   1: 1131.782 ns/op
# Warmup Iteration   2: 1136.470 ns/op
# Warmup Iteration   3: 1113.087 ns/op
# Warmup Iteration   4: 1118.320 ns/op
# Warmup Iteration   5: 1112.267 ns/op
Iteration   1: 1102.690 ns/op
Iteration   2: 1116.952 ns/op
Iteration   3: 1106.109 ns/op
Iteration   4: 1098.388 ns/op
Iteration   5: 1089.658 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1102.759 ±(99.9%) 38.670 ns/op [Average]
  (min, avg, max) = (1089.658, 1102.759, 1116.952), stdev = 10.042
  CI (99.9%): [1064.089, 1141.429] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 50)

# Run progress: 33.16% complete, ETA 00:22:49
# Fork: 1 of 1
# Warmup Iteration   1: 1212.752 ns/op
# Warmup Iteration   2: 1235.135 ns/op
# Warmup Iteration   3: 1177.557 ns/op
# Warmup Iteration   4: 1180.234 ns/op
# Warmup Iteration   5: 1187.338 ns/op
Iteration   1: 1198.917 ns/op
Iteration   2: 1235.622 ns/op
Iteration   3: 1188.979 ns/op
Iteration   4: 1199.042 ns/op
Iteration   5: 1168.734 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1198.259 ±(99.9%) 93.431 ns/op [Average]
  (min, avg, max) = (1168.734, 1198.259, 1235.622), stdev = 24.264
  CI (99.9%): [1104.828, 1291.690] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 100)

# Run progress: 33.67% complete, ETA 00:22:39
# Fork: 1 of 1
# Warmup Iteration   1: 1336.920 ns/op
# Warmup Iteration   2: 1335.944 ns/op
# Warmup Iteration   3: 1263.535 ns/op
# Warmup Iteration   4: 1267.746 ns/op
# Warmup Iteration   5: 1294.811 ns/op
Iteration   1: 1267.568 ns/op
Iteration   2: 1262.750 ns/op
Iteration   3: 1288.209 ns/op
Iteration   4: 1258.018 ns/op
Iteration   5: 1280.228 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1271.355 ±(99.9%) 48.289 ns/op [Average]
  (min, avg, max) = (1258.018, 1271.355, 1288.209), stdev = 12.540
  CI (99.9%): [1223.066, 1319.643] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 500)

# Run progress: 34.18% complete, ETA 00:22:28
# Fork: 1 of 1
# Warmup Iteration   1: 2018.691 ns/op
# Warmup Iteration   2: 1834.502 ns/op
# Warmup Iteration   3: 1820.810 ns/op
# Warmup Iteration   4: 1839.574 ns/op
# Warmup Iteration   5: 1808.078 ns/op
Iteration   1: 1797.079 ns/op
Iteration   2: 1827.114 ns/op
Iteration   3: 1824.346 ns/op
Iteration   4: 1806.263 ns/op
Iteration   5: 1758.854 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  1802.731 ±(99.9%) 106.004 ns/op [Average]
  (min, avg, max) = (1758.854, 1802.731, 1827.114), stdev = 27.529
  CI (99.9%): [1696.727, 1908.735] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 1000)

# Run progress: 34.69% complete, ETA 00:22:18
# Fork: 1 of 1
# Warmup Iteration   1: 2779.550 ns/op
# Warmup Iteration   2: 2676.986 ns/op
# Warmup Iteration   3: 2693.825 ns/op
# Warmup Iteration   4: 2701.087 ns/op
# Warmup Iteration   5: 2633.397 ns/op
Iteration   1: 2696.663 ns/op
Iteration   2: 2675.415 ns/op
Iteration   3: 2755.884 ns/op
Iteration   4: 2588.931 ns/op
Iteration   5: 2597.944 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  2662.967 ±(99.9%) 269.774 ns/op [Average]
  (min, avg, max) = (2588.931, 2662.967, 2755.884), stdev = 70.059
  CI (99.9%): [2393.194, 2932.741] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2
# Parameters: (dataset = random, length = 10000)

# Run progress: 35.20% complete, ETA 00:22:07
# Fork: 1 of 1
# Warmup Iteration   1: 15760.757 ns/op
# Warmup Iteration   2: 14170.696 ns/op
# Warmup Iteration   3: 13767.873 ns/op
# Warmup Iteration   4: 13779.419 ns/op
# Warmup Iteration   5: 13715.920 ns/op
Iteration   1: 13784.887 ns/op
Iteration   2: 14053.263 ns/op
Iteration   3: 13644.846 ns/op
Iteration   4: 13472.144 ns/op
Iteration   5: 13892.326 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode2":
  13769.493 ±(99.9%) 860.608 ns/op [Average]
  (min, avg, max) = (13472.144, 13769.493, 14053.263), stdev = 223.497
  CI (99.9%): [12908.885, 14630.101] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 1)

# Run progress: 35.71% complete, ETA 00:21:57
# Fork: 1 of 1
# Warmup Iteration   1: 1067.881 ns/op
# Warmup Iteration   2: 1065.737 ns/op
# Warmup Iteration   3: 1048.621 ns/op
# Warmup Iteration   4: 1092.819 ns/op
# Warmup Iteration   5: 1078.632 ns/op
Iteration   1: 1040.210 ns/op
Iteration   2: 1040.581 ns/op
Iteration   3: 1038.393 ns/op
Iteration   4: 1058.465 ns/op
Iteration   5: 1050.196 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1045.569 ±(99.9%) 32.945 ns/op [Average]
  (min, avg, max) = (1038.393, 1045.569, 1058.465), stdev = 8.556
  CI (99.9%): [1012.624, 1078.515] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 10)

# Run progress: 36.22% complete, ETA 00:21:46
# Fork: 1 of 1
# Warmup Iteration   1: 1066.995 ns/op
# Warmup Iteration   2: 1062.972 ns/op
# Warmup Iteration   3: 1075.278 ns/op
# Warmup Iteration   4: 1064.825 ns/op
# Warmup Iteration   5: 1048.324 ns/op
Iteration   1: 1028.693 ns/op
Iteration   2: 1020.185 ns/op
Iteration   3: 1030.184 ns/op
Iteration   4: 1045.268 ns/op
Iteration   5: 1030.475 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1030.961 ±(99.9%) 34.805 ns/op [Average]
  (min, avg, max) = (1020.185, 1030.961, 1045.268), stdev = 9.039
  CI (99.9%): [996.156, 1065.766] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 50)

# Run progress: 36.73% complete, ETA 00:21:36
# Fork: 1 of 1
# Warmup Iteration   1: 1275.220 ns/op
# Warmup Iteration   2: 1177.039 ns/op
# Warmup Iteration   3: 1122.977 ns/op
# Warmup Iteration   4: 1117.705 ns/op
# Warmup Iteration   5: 1112.832 ns/op
Iteration   1: 1151.863 ns/op
Iteration   2: 1124.422 ns/op
Iteration   3: 1136.086 ns/op
Iteration   4: 1152.570 ns/op
Iteration   5: 1134.701 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1139.929 ±(99.9%) 46.558 ns/op [Average]
  (min, avg, max) = (1124.422, 1139.929, 1152.570), stdev = 12.091
  CI (99.9%): [1093.370, 1186.487] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 100)

# Run progress: 37.24% complete, ETA 00:21:26
# Fork: 1 of 1
# Warmup Iteration   1: 1368.874 ns/op
# Warmup Iteration   2: 1265.999 ns/op
# Warmup Iteration   3: 1174.704 ns/op
# Warmup Iteration   4: 1197.317 ns/op
# Warmup Iteration   5: 1191.893 ns/op
Iteration   1: 1198.483 ns/op
Iteration   2: 1239.798 ns/op
Iteration   3: 1187.900 ns/op
Iteration   4: 1275.571 ns/op
Iteration   5: 1213.910 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1223.132 ±(99.9%) 135.616 ns/op [Average]
  (min, avg, max) = (1187.900, 1223.132, 1275.571), stdev = 35.219
  CI (99.9%): [1087.517, 1358.748] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 500)

# Run progress: 37.76% complete, ETA 00:21:15
# Fork: 1 of 1
# Warmup Iteration   1: 1861.649 ns/op
# Warmup Iteration   2: 1763.954 ns/op
# Warmup Iteration   3: 1752.338 ns/op
# Warmup Iteration   4: 1837.523 ns/op
# Warmup Iteration   5: 1727.674 ns/op
Iteration   1: 1750.998 ns/op
Iteration   2: 1763.801 ns/op
Iteration   3: 1716.384 ns/op
Iteration   4: 1714.525 ns/op
Iteration   5: 1742.486 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1737.639 ±(99.9%) 83.312 ns/op [Average]
  (min, avg, max) = (1714.525, 1737.639, 1763.801), stdev = 21.636
  CI (99.9%): [1654.327, 1820.951] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 38.27% complete, ETA 00:21:05
# Fork: 1 of 1
# Warmup Iteration   1: 2621.410 ns/op
# Warmup Iteration   2: 2522.645 ns/op
# Warmup Iteration   3: 2453.985 ns/op
# Warmup Iteration   4: 2457.275 ns/op
# Warmup Iteration   5: 2428.186 ns/op
Iteration   1: 2401.894 ns/op
Iteration   2: 2434.041 ns/op
Iteration   3: 2479.031 ns/op
Iteration   4: 2422.174 ns/op
Iteration   5: 2525.616 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  2452.551 ±(99.9%) 191.289 ns/op [Average]
  (min, avg, max) = (2401.894, 2452.551, 2525.616), stdev = 49.677
  CI (99.9%): [2261.263, 2643.840] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 38.78% complete, ETA 00:20:55
# Fork: 1 of 1
# Warmup Iteration   1: 14446.062 ns/op
# Warmup Iteration   2: 14292.767 ns/op
# Warmup Iteration   3: 13067.534 ns/op
# Warmup Iteration   4: 13133.064 ns/op
# Warmup Iteration   5: 13070.442 ns/op
Iteration   1: 13934.119 ns/op
Iteration   2: 13079.568 ns/op
Iteration   3: 13414.432 ns/op
Iteration   4: 13436.766 ns/op
Iteration   5: 13434.846 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  13459.946 ±(99.9%) 1175.497 ns/op [Average]
  (min, avg, max) = (13079.568, 13459.946, 13934.119), stdev = 305.273
  CI (99.9%): [12284.449, 14635.443] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 1)

# Run progress: 39.29% complete, ETA 00:20:44
# Fork: 1 of 1
# Warmup Iteration   1: 1087.903 ns/op
# Warmup Iteration   2: 1057.793 ns/op
# Warmup Iteration   3: 1126.660 ns/op
# Warmup Iteration   4: 1076.931 ns/op
# Warmup Iteration   5: 1100.019 ns/op
Iteration   1: 1067.605 ns/op
Iteration   2: 1077.891 ns/op
Iteration   3: 1064.948 ns/op
Iteration   4: 1048.328 ns/op
Iteration   5: 1080.571 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1067.869 ±(99.9%) 49.170 ns/op [Average]
  (min, avg, max) = (1048.328, 1067.869, 1080.571), stdev = 12.769
  CI (99.9%): [1018.698, 1117.039] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 10)

# Run progress: 39.80% complete, ETA 00:20:34
# Fork: 1 of 1
# Warmup Iteration   1: 1091.229 ns/op
# Warmup Iteration   2: 1086.282 ns/op
# Warmup Iteration   3: 1074.030 ns/op
# Warmup Iteration   4: 1077.839 ns/op
# Warmup Iteration   5: 1078.162 ns/op
Iteration   1: 1078.442 ns/op
Iteration   2: 1060.303 ns/op
Iteration   3: 1081.339 ns/op
Iteration   4: 1069.867 ns/op
Iteration   5: 1031.520 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1064.294 ±(99.9%) 77.298 ns/op [Average]
  (min, avg, max) = (1031.520, 1064.294, 1081.339), stdev = 20.074
  CI (99.9%): [986.996, 1141.592] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 50)

# Run progress: 40.31% complete, ETA 00:20:23
# Fork: 1 of 1
# Warmup Iteration   1: 1163.099 ns/op
# Warmup Iteration   2: 1207.758 ns/op
# Warmup Iteration   3: 1206.100 ns/op
# Warmup Iteration   4: 1185.141 ns/op
# Warmup Iteration   5: 1128.074 ns/op
Iteration   1: 1136.117 ns/op
Iteration   2: 1146.197 ns/op
Iteration   3: 1114.933 ns/op
Iteration   4: 1141.040 ns/op
Iteration   5: 1132.960 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1134.249 ±(99.9%) 45.851 ns/op [Average]
  (min, avg, max) = (1114.933, 1134.249, 1146.197), stdev = 11.907
  CI (99.9%): [1088.398, 1180.100] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 100)

# Run progress: 40.82% complete, ETA 00:20:13
# Fork: 1 of 1
# Warmup Iteration   1: 1344.003 ns/op
# Warmup Iteration   2: 1330.816 ns/op
# Warmup Iteration   3: 1220.929 ns/op
# Warmup Iteration   4: 1217.463 ns/op
# Warmup Iteration   5: 1204.572 ns/op
Iteration   1: 1218.579 ns/op
Iteration   2: 1220.179 ns/op
Iteration   3: 1210.483 ns/op
Iteration   4: 1271.555 ns/op
Iteration   5: 1262.210 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1236.601 ±(99.9%) 108.131 ns/op [Average]
  (min, avg, max) = (1210.483, 1236.601, 1271.555), stdev = 28.081
  CI (99.9%): [1128.470, 1344.733] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 500)

# Run progress: 41.33% complete, ETA 00:20:02
# Fork: 1 of 1
# Warmup Iteration   1: 1886.305 ns/op
# Warmup Iteration   2: 1795.470 ns/op
# Warmup Iteration   3: 1833.976 ns/op
# Warmup Iteration   4: 1788.761 ns/op
# Warmup Iteration   5: 1746.076 ns/op
Iteration   1: 1808.675 ns/op
Iteration   2: 1764.426 ns/op
Iteration   3: 1770.060 ns/op
Iteration   4: 1847.899 ns/op
Iteration   5: 1738.889 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  1785.990 ±(99.9%) 164.325 ns/op [Average]
  (min, avg, max) = (1738.889, 1785.990, 1847.899), stdev = 42.675
  CI (99.9%): [1621.664, 1950.315] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 1000)

# Run progress: 41.84% complete, ETA 00:19:52
# Fork: 1 of 1
# Warmup Iteration   1: 2798.850 ns/op
# Warmup Iteration   2: 2484.647 ns/op
# Warmup Iteration   3: 2500.684 ns/op
# Warmup Iteration   4: 2451.966 ns/op
# Warmup Iteration   5: 2493.532 ns/op
Iteration   1: 2422.382 ns/op
Iteration   2: 2440.455 ns/op
Iteration   3: 2501.975 ns/op
Iteration   4: 2425.575 ns/op
Iteration   5: 2439.488 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  2445.975 ±(99.9%) 124.497 ns/op [Average]
  (min, avg, max) = (2422.382, 2445.975, 2501.975), stdev = 32.331
  CI (99.9%): [2321.478, 2570.472] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3
# Parameters: (dataset = random, length = 10000)

# Run progress: 42.35% complete, ETA 00:19:41
# Fork: 1 of 1
# Warmup Iteration   1: 16633.439 ns/op
# Warmup Iteration   2: 14139.612 ns/op
# Warmup Iteration   3: 13476.047 ns/op
# Warmup Iteration   4: 13440.612 ns/op
# Warmup Iteration   5: 13232.968 ns/op
Iteration   1: 13567.826 ns/op
Iteration   2: 13277.860 ns/op
Iteration   3: 13706.934 ns/op
Iteration   4: 13463.185 ns/op
Iteration   5: 14167.850 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode3":
  13636.731 ±(99.9%) 1292.507 ns/op [Average]
  (min, avg, max) = (13277.860, 13636.731, 14167.850), stdev = 335.660
  CI (99.9%): [12344.223, 14929.238] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 1)

# Run progress: 42.86% complete, ETA 00:19:31
# Fork: 1 of 1
# Warmup Iteration   1: 1112.211 ns/op
# Warmup Iteration   2: 1052.541 ns/op
# Warmup Iteration   3: 1062.191 ns/op
# Warmup Iteration   4: 1075.375 ns/op
# Warmup Iteration   5: 1070.060 ns/op
Iteration   1: 1036.038 ns/op
Iteration   2: 1026.038 ns/op
Iteration   3: 1078.663 ns/op
Iteration   4: 1055.588 ns/op
Iteration   5: 1033.570 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1045.979 ±(99.9%) 81.935 ns/op [Average]
  (min, avg, max) = (1026.038, 1045.979, 1078.663), stdev = 21.278
  CI (99.9%): [964.044, 1127.914] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 10)

# Run progress: 43.37% complete, ETA 00:19:20
# Fork: 1 of 1
# Warmup Iteration   1: 1181.670 ns/op
# Warmup Iteration   2: 1158.577 ns/op
# Warmup Iteration   3: 1149.467 ns/op
# Warmup Iteration   4: 1159.061 ns/op
# Warmup Iteration   5: 1152.557 ns/op
Iteration   1: 1143.024 ns/op
Iteration   2: 1159.311 ns/op
Iteration   3: 1153.515 ns/op
Iteration   4: 1158.171 ns/op
Iteration   5: 1169.612 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1156.727 ±(99.9%) 37.178 ns/op [Average]
  (min, avg, max) = (1143.024, 1156.727, 1169.612), stdev = 9.655
  CI (99.9%): [1119.549, 1193.905] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 50)

# Run progress: 43.88% complete, ETA 00:19:10
# Fork: 1 of 1
# Warmup Iteration   1: 1197.723 ns/op
# Warmup Iteration   2: 1259.540 ns/op
# Warmup Iteration   3: 1209.132 ns/op
# Warmup Iteration   4: 1183.206 ns/op
# Warmup Iteration   5: 1215.793 ns/op
Iteration   1: 1189.101 ns/op
Iteration   2: 1201.626 ns/op
Iteration   3: 1199.463 ns/op
Iteration   4: 1181.403 ns/op
Iteration   5: 1163.226 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1186.964 ±(99.9%) 59.970 ns/op [Average]
  (min, avg, max) = (1163.226, 1186.964, 1201.626), stdev = 15.574
  CI (99.9%): [1126.994, 1246.934] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 100)

# Run progress: 44.39% complete, ETA 00:18:59
# Fork: 1 of 1
# Warmup Iteration   1: 1361.709 ns/op
# Warmup Iteration   2: 1365.009 ns/op
# Warmup Iteration   3: 1306.000 ns/op
# Warmup Iteration   4: 1313.956 ns/op
# Warmup Iteration   5: 1311.807 ns/op
Iteration   1: 1281.778 ns/op
Iteration   2: 1306.946 ns/op
Iteration   3: 1331.992 ns/op
Iteration   4: 1306.167 ns/op
Iteration   5: 1280.563 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1301.489 ±(99.9%) 81.878 ns/op [Average]
  (min, avg, max) = (1280.563, 1301.489, 1331.992), stdev = 21.263
  CI (99.9%): [1219.611, 1383.368] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 500)

# Run progress: 44.90% complete, ETA 00:18:49
# Fork: 1 of 1
# Warmup Iteration   1: 2058.775 ns/op
# Warmup Iteration   2: 1857.846 ns/op
# Warmup Iteration   3: 1836.132 ns/op
# Warmup Iteration   4: 1822.229 ns/op
# Warmup Iteration   5: 1814.744 ns/op
Iteration   1: 1863.035 ns/op
Iteration   2: 1814.659 ns/op
Iteration   3: 1864.721 ns/op
Iteration   4: 1865.775 ns/op
Iteration   5: 1804.415 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1842.521 ±(99.9%) 116.840 ns/op [Average]
  (min, avg, max) = (1804.415, 1842.521, 1865.775), stdev = 30.343
  CI (99.9%): [1725.681, 1959.361] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 45.41% complete, ETA 00:18:39
# Fork: 1 of 1
# Warmup Iteration   1: 2931.471 ns/op
# Warmup Iteration   2: 2623.124 ns/op
# Warmup Iteration   3: 2594.440 ns/op
# Warmup Iteration   4: 2583.863 ns/op
# Warmup Iteration   5: 2523.639 ns/op
Iteration   1: 2560.802 ns/op
Iteration   2: 2572.593 ns/op
Iteration   3: 2592.662 ns/op
Iteration   4: 2664.820 ns/op
Iteration   5: 2515.712 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  2581.318 ±(99.9%) 210.049 ns/op [Average]
  (min, avg, max) = (2515.712, 2581.318, 2664.820), stdev = 54.549
  CI (99.9%): [2371.269, 2791.366] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 45.92% complete, ETA 00:18:28
# Fork: 1 of 1
# Warmup Iteration   1: 14696.428 ns/op
# Warmup Iteration   2: 14110.256 ns/op
# Warmup Iteration   3: 14288.378 ns/op
# Warmup Iteration   4: 13660.081 ns/op
# Warmup Iteration   5: 13881.728 ns/op
Iteration   1: 14103.183 ns/op
Iteration   2: 13604.215 ns/op
Iteration   3: 13623.761 ns/op
Iteration   4: 13574.619 ns/op
Iteration   5: 14078.574 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  13796.871 ±(99.9%) 1036.214 ns/op [Average]
  (min, avg, max) = (13574.619, 13796.871, 14103.183), stdev = 269.102
  CI (99.9%): [12760.656, 14833.085] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 1)

# Run progress: 46.43% complete, ETA 00:18:18
# Fork: 1 of 1
# Warmup Iteration   1: 1073.991 ns/op
# Warmup Iteration   2: 1101.728 ns/op
# Warmup Iteration   3: 1063.398 ns/op
# Warmup Iteration   4: 1059.444 ns/op
# Warmup Iteration   5: 1062.073 ns/op
Iteration   1: 1052.052 ns/op
Iteration   2: 1064.686 ns/op
Iteration   3: 1058.999 ns/op
Iteration   4: 1040.589 ns/op
Iteration   5: 1023.739 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1048.013 ±(99.9%) 62.664 ns/op [Average]
  (min, avg, max) = (1023.739, 1048.013, 1064.686), stdev = 16.274
  CI (99.9%): [985.349, 1110.677] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 10)

# Run progress: 46.94% complete, ETA 00:18:07
# Fork: 1 of 1
# Warmup Iteration   1: 1128.970 ns/op
# Warmup Iteration   2: 1142.175 ns/op
# Warmup Iteration   3: 1128.643 ns/op
# Warmup Iteration   4: 1154.994 ns/op
# Warmup Iteration   5: 1083.518 ns/op
Iteration   1: 1125.846 ns/op
Iteration   2: 1100.339 ns/op
Iteration   3: 1100.247 ns/op
Iteration   4: 1098.413 ns/op
Iteration   5: 1062.283 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1097.426 ±(99.9%) 87.388 ns/op [Average]
  (min, avg, max) = (1062.283, 1097.426, 1125.846), stdev = 22.694
  CI (99.9%): [1010.037, 1184.814] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 50)

# Run progress: 47.45% complete, ETA 00:17:57
# Fork: 1 of 1
# Warmup Iteration   1: 1319.603 ns/op
# Warmup Iteration   2: 1352.328 ns/op
# Warmup Iteration   3: 1193.941 ns/op
# Warmup Iteration   4: 1221.885 ns/op
# Warmup Iteration   5: 1207.397 ns/op
Iteration   1: 1245.800 ns/op
Iteration   2: 1256.029 ns/op
Iteration   3: 1270.683 ns/op
Iteration   4: 1223.576 ns/op
Iteration   5: 1216.944 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1242.606 ±(99.9%) 86.090 ns/op [Average]
  (min, avg, max) = (1216.944, 1242.606, 1270.683), stdev = 22.357
  CI (99.9%): [1156.517, 1328.696] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 100)

# Run progress: 47.96% complete, ETA 00:17:46
# Fork: 1 of 1
# Warmup Iteration   1: 1321.942 ns/op
# Warmup Iteration   2: 1301.079 ns/op
# Warmup Iteration   3: 1282.086 ns/op
# Warmup Iteration   4: 1251.440 ns/op
# Warmup Iteration   5: 1256.188 ns/op
Iteration   1: 1246.131 ns/op
Iteration   2: 1264.964 ns/op
Iteration   3: 1257.768 ns/op
Iteration   4: 1281.544 ns/op
Iteration   5: 1269.380 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1263.957 ±(99.9%) 50.786 ns/op [Average]
  (min, avg, max) = (1246.131, 1263.957, 1281.544), stdev = 13.189
  CI (99.9%): [1213.171, 1314.743] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 500)

# Run progress: 48.47% complete, ETA 00:17:36
# Fork: 1 of 1
# Warmup Iteration   1: 1928.379 ns/op
# Warmup Iteration   2: 1920.795 ns/op
# Warmup Iteration   3: 1820.597 ns/op
# Warmup Iteration   4: 1803.838 ns/op
# Warmup Iteration   5: 1824.609 ns/op
Iteration   1: 1786.215 ns/op
Iteration   2: 1785.930 ns/op
Iteration   3: 1801.529 ns/op
Iteration   4: 1829.148 ns/op
Iteration   5: 1793.738 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  1799.312 ±(99.9%) 68.796 ns/op [Average]
  (min, avg, max) = (1785.930, 1799.312, 1829.148), stdev = 17.866
  CI (99.9%): [1730.516, 1868.108] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 1000)

# Run progress: 48.98% complete, ETA 00:17:25
# Fork: 1 of 1
# Warmup Iteration   1: 2696.617 ns/op
# Warmup Iteration   2: 2616.806 ns/op
# Warmup Iteration   3: 2543.210 ns/op
# Warmup Iteration   4: 2530.516 ns/op
# Warmup Iteration   5: 2495.542 ns/op
Iteration   1: 2556.644 ns/op
Iteration   2: 2644.095 ns/op
Iteration   3: 2592.611 ns/op
Iteration   4: 2512.404 ns/op
Iteration   5: 2518.295 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  2564.810 ±(99.9%) 211.223 ns/op [Average]
  (min, avg, max) = (2512.404, 2564.810, 2644.095), stdev = 54.854
  CI (99.9%): [2353.587, 2776.033] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4
# Parameters: (dataset = random, length = 10000)

# Run progress: 49.49% complete, ETA 00:17:15
# Fork: 1 of 1
# Warmup Iteration   1: 16733.376 ns/op
# Warmup Iteration   2: 13944.945 ns/op
# Warmup Iteration   3: 14040.586 ns/op
# Warmup Iteration   4: 13614.765 ns/op
# Warmup Iteration   5: 13628.245 ns/op
Iteration   1: 13956.417 ns/op
Iteration   2: 13841.033 ns/op
Iteration   3: 13567.791 ns/op
Iteration   4: 13806.394 ns/op
Iteration   5: 13688.368 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decode4":
  13772.000 ±(99.9%) 573.261 ns/op [Average]
  (min, avg, max) = (13567.791, 13772.000, 13956.417), stdev = 148.874
  CI (99.9%): [13198.739, 14345.261] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 50.00% complete, ETA 00:17:04
# Fork: 1 of 1
# Warmup Iteration   1: 569.661 ns/op
# Warmup Iteration   2: 549.975 ns/op
# Warmup Iteration   3: 543.520 ns/op
# Warmup Iteration   4: 539.943 ns/op
# Warmup Iteration   5: 528.587 ns/op
Iteration   1: 545.887 ns/op
Iteration   2: 527.818 ns/op
Iteration   3: 538.368 ns/op
Iteration   4: 537.906 ns/op
Iteration   5: 600.941 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  550.184 ±(99.9%) 112.023 ns/op [Average]
  (min, avg, max) = (527.818, 550.184, 600.941), stdev = 29.092
  CI (99.9%): [438.161, 662.207] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 50.51% complete, ETA 00:16:54
# Fork: 1 of 1
# Warmup Iteration   1: 596.273 ns/op
# Warmup Iteration   2: 599.690 ns/op
# Warmup Iteration   3: 562.482 ns/op
# Warmup Iteration   4: 574.269 ns/op
# Warmup Iteration   5: 562.893 ns/op
Iteration   1: 557.881 ns/op
Iteration   2: 566.413 ns/op
Iteration   3: 574.824 ns/op
Iteration   4: 606.392 ns/op
Iteration   5: 613.472 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  583.796 ±(99.9%) 95.212 ns/op [Average]
  (min, avg, max) = (557.881, 583.796, 613.472), stdev = 24.726
  CI (99.9%): [488.585, 679.008] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 51.02% complete, ETA 00:16:44
# Fork: 1 of 1
# Warmup Iteration   1: 781.732 ns/op
# Warmup Iteration   2: 727.971 ns/op
# Warmup Iteration   3: 703.054 ns/op
# Warmup Iteration   4: 694.378 ns/op
# Warmup Iteration   5: 708.798 ns/op
Iteration   1: 690.181 ns/op
Iteration   2: 697.835 ns/op
Iteration   3: 740.580 ns/op
Iteration   4: 707.444 ns/op
Iteration   5: 704.378 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  708.084 ±(99.9%) 74.461 ns/op [Average]
  (min, avg, max) = (690.181, 708.084, 740.580), stdev = 19.337
  CI (99.9%): [633.622, 782.545] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 51.53% complete, ETA 00:16:33
# Fork: 1 of 1
# Warmup Iteration   1: 799.963 ns/op
# Warmup Iteration   2: 741.438 ns/op
# Warmup Iteration   3: 739.526 ns/op
# Warmup Iteration   4: 742.717 ns/op
# Warmup Iteration   5: 741.982 ns/op
Iteration   1: 727.521 ns/op
Iteration   2: 783.743 ns/op
Iteration   3: 753.446 ns/op
Iteration   4: 723.983 ns/op
Iteration   5: 767.072 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  751.153 ±(99.9%) 98.503 ns/op [Average]
  (min, avg, max) = (723.983, 751.153, 783.743), stdev = 25.581
  CI (99.9%): [652.650, 849.656] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 52.04% complete, ETA 00:16:23
# Fork: 1 of 1
# Warmup Iteration   1: 1440.816 ns/op
# Warmup Iteration   2: 1341.610 ns/op
# Warmup Iteration   3: 1321.430 ns/op
# Warmup Iteration   4: 1304.170 ns/op
# Warmup Iteration   5: 1469.271 ns/op
Iteration   1: 1294.806 ns/op
Iteration   2: 1293.057 ns/op
Iteration   3: 1312.672 ns/op
Iteration   4: 1288.174 ns/op
Iteration   5: 1293.329 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  1296.408 ±(99.9%) 36.307 ns/op [Average]
  (min, avg, max) = (1288.174, 1296.408, 1312.672), stdev = 9.429
  CI (99.9%): [1260.101, 1332.714] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 52.55% complete, ETA 00:16:12
# Fork: 1 of 1
# Warmup Iteration   1: 2166.072 ns/op
# Warmup Iteration   2: 2020.500 ns/op
# Warmup Iteration   3: 1992.598 ns/op
# Warmup Iteration   4: 2011.563 ns/op
# Warmup Iteration   5: 1970.969 ns/op
Iteration   1: 1996.858 ns/op
Iteration   2: 2036.220 ns/op
Iteration   3: 1983.552 ns/op
Iteration   4: 2007.073 ns/op
Iteration   5: 1987.566 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  2002.254 ±(99.9%) 81.037 ns/op [Average]
  (min, avg, max) = (1983.552, 2002.254, 2036.220), stdev = 21.045
  CI (99.9%): [1921.217, 2083.290] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 53.06% complete, ETA 00:16:02
# Fork: 1 of 1
# Warmup Iteration   1: 14428.961 ns/op
# Warmup Iteration   2: 13569.559 ns/op
# Warmup Iteration   3: 13042.040 ns/op
# Warmup Iteration   4: 12901.188 ns/op
# Warmup Iteration   5: 13109.502 ns/op
Iteration   1: 13962.707 ns/op
Iteration   2: 13567.820 ns/op
Iteration   3: 13158.030 ns/op
Iteration   4: 13314.924 ns/op
Iteration   5: 13435.502 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  13487.797 ±(99.9%) 1176.353 ns/op [Average]
  (min, avg, max) = (13158.030, 13487.797, 13962.707), stdev = 305.495
  CI (99.9%): [12311.444, 14664.150] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 1)

# Run progress: 53.57% complete, ETA 00:15:51
# Fork: 1 of 1
# Warmup Iteration   1: 574.758 ns/op
# Warmup Iteration   2: 546.147 ns/op
# Warmup Iteration   3: 531.981 ns/op
# Warmup Iteration   4: 538.731 ns/op
# Warmup Iteration   5: 528.451 ns/op
Iteration   1: 524.719 ns/op
Iteration   2: 527.322 ns/op
Iteration   3: 537.600 ns/op
Iteration   4: 521.724 ns/op
Iteration   5: 528.518 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  527.977 ±(99.9%) 23.027 ns/op [Average]
  (min, avg, max) = (521.724, 527.977, 537.600), stdev = 5.980
  CI (99.9%): [504.949, 551.004] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 10)

# Run progress: 54.08% complete, ETA 00:15:41
# Fork: 1 of 1
# Warmup Iteration   1: 614.185 ns/op
# Warmup Iteration   2: 611.497 ns/op
# Warmup Iteration   3: 572.027 ns/op
# Warmup Iteration   4: 566.290 ns/op
# Warmup Iteration   5: 560.570 ns/op
Iteration   1: 577.112 ns/op
Iteration   2: 574.578 ns/op
Iteration   3: 566.433 ns/op
Iteration   4: 564.622 ns/op
Iteration   5: 565.123 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  569.574 ±(99.9%) 22.457 ns/op [Average]
  (min, avg, max) = (564.622, 569.574, 577.112), stdev = 5.832
  CI (99.9%): [547.117, 592.031] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 50)

# Run progress: 54.59% complete, ETA 00:15:30
# Fork: 1 of 1
# Warmup Iteration   1: 709.618 ns/op
# Warmup Iteration   2: 664.408 ns/op
# Warmup Iteration   3: 654.339 ns/op
# Warmup Iteration   4: 657.772 ns/op
# Warmup Iteration   5: 660.598 ns/op
Iteration   1: 658.437 ns/op
Iteration   2: 639.993 ns/op
Iteration   3: 653.030 ns/op
Iteration   4: 648.202 ns/op
Iteration   5: 647.241 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  649.381 ±(99.9%) 26.498 ns/op [Average]
  (min, avg, max) = (639.993, 649.381, 658.437), stdev = 6.881
  CI (99.9%): [622.883, 675.878] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 100)

# Run progress: 55.10% complete, ETA 00:15:20
# Fork: 1 of 1
# Warmup Iteration   1: 830.865 ns/op
# Warmup Iteration   2: 748.544 ns/op
# Warmup Iteration   3: 740.866 ns/op
# Warmup Iteration   4: 756.666 ns/op
# Warmup Iteration   5: 755.790 ns/op
Iteration   1: 756.955 ns/op
Iteration   2: 737.439 ns/op
Iteration   3: 757.071 ns/op
Iteration   4: 747.418 ns/op
Iteration   5: 757.377 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  751.252 ±(99.9%) 33.866 ns/op [Average]
  (min, avg, max) = (737.439, 751.252, 757.377), stdev = 8.795
  CI (99.9%): [717.386, 785.118] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 500)

# Run progress: 55.61% complete, ETA 00:15:09
# Fork: 1 of 1
# Warmup Iteration   1: 1357.425 ns/op
# Warmup Iteration   2: 1313.517 ns/op
# Warmup Iteration   3: 1309.103 ns/op
# Warmup Iteration   4: 1285.681 ns/op
# Warmup Iteration   5: 1252.891 ns/op
Iteration   1: 1221.347 ns/op
Iteration   2: 1229.230 ns/op
Iteration   3: 1233.817 ns/op
Iteration   4: 1259.118 ns/op
Iteration   5: 1264.054 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  1241.513 ±(99.9%) 72.928 ns/op [Average]
  (min, avg, max) = (1221.347, 1241.513, 1264.054), stdev = 18.939
  CI (99.9%): [1168.585, 1314.442] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 1000)

# Run progress: 56.12% complete, ETA 00:14:59
# Fork: 1 of 1
# Warmup Iteration   1: 2151.194 ns/op
# Warmup Iteration   2: 2116.743 ns/op
# Warmup Iteration   3: 2027.095 ns/op
# Warmup Iteration   4: 2023.949 ns/op
# Warmup Iteration   5: 1964.049 ns/op
Iteration   1: 2010.949 ns/op
Iteration   2: 1986.593 ns/op
Iteration   3: 2070.672 ns/op
Iteration   4: 2005.349 ns/op
Iteration   5: 1986.182 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  2011.949 ±(99.9%) 133.387 ns/op [Average]
  (min, avg, max) = (1986.182, 2011.949, 2070.672), stdev = 34.640
  CI (99.9%): [1878.562, 2145.336] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1
# Parameters: (dataset = random, length = 10000)

# Run progress: 56.63% complete, ETA 00:14:48
# Fork: 1 of 1
# Warmup Iteration   1: 15213.770 ns/op
# Warmup Iteration   2: 13657.056 ns/op
# Warmup Iteration   3: 13522.409 ns/op
# Warmup Iteration   4: 13471.798 ns/op
# Warmup Iteration   5: 13641.462 ns/op
Iteration   1: 12968.979 ns/op
Iteration   2: 12959.367 ns/op
Iteration   3: 13176.977 ns/op
Iteration   4: 13359.896 ns/op
Iteration   5: 13836.940 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky1":
  13260.432 ±(99.9%) 1394.769 ns/op [Average]
  (min, avg, max) = (12959.367, 13260.432, 13836.940), stdev = 362.217
  CI (99.9%): [11865.663, 14655.201] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 57.14% complete, ETA 00:14:38
# Fork: 1 of 1
# Warmup Iteration   1: 487.147 ns/op
# Warmup Iteration   2: 461.465 ns/op
# Warmup Iteration   3: 442.803 ns/op
# Warmup Iteration   4: 441.180 ns/op
# Warmup Iteration   5: 436.890 ns/op
Iteration   1: 444.977 ns/op
Iteration   2: 437.082 ns/op
Iteration   3: 445.191 ns/op
Iteration   4: 450.032 ns/op
Iteration   5: 439.561 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  443.369 ±(99.9%) 19.665 ns/op [Average]
  (min, avg, max) = (437.082, 443.369, 450.032), stdev = 5.107
  CI (99.9%): [423.703, 463.034] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 57.65% complete, ETA 00:14:28
# Fork: 1 of 1
# Warmup Iteration   1: 548.999 ns/op
# Warmup Iteration   2: 535.679 ns/op
# Warmup Iteration   3: 536.587 ns/op
# Warmup Iteration   4: 516.555 ns/op
# Warmup Iteration   5: 521.391 ns/op
Iteration   1: 520.352 ns/op
Iteration   2: 519.107 ns/op
Iteration   3: 526.326 ns/op
Iteration   4: 511.232 ns/op
Iteration   5: 524.820 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  520.367 ±(99.9%) 22.812 ns/op [Average]
  (min, avg, max) = (511.232, 520.367, 526.326), stdev = 5.924
  CI (99.9%): [497.556, 543.179] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 58.16% complete, ETA 00:14:17
# Fork: 1 of 1
# Warmup Iteration   1: 605.867 ns/op
# Warmup Iteration   2: 570.557 ns/op
# Warmup Iteration   3: 549.317 ns/op
# Warmup Iteration   4: 557.528 ns/op
# Warmup Iteration   5: 552.793 ns/op
Iteration   1: 562.388 ns/op
Iteration   2: 567.307 ns/op
Iteration   3: 546.420 ns/op
Iteration   4: 549.591 ns/op
Iteration   5: 552.989 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  555.739 ±(99.9%) 33.913 ns/op [Average]
  (min, avg, max) = (546.420, 555.739, 567.307), stdev = 8.807
  CI (99.9%): [521.826, 589.652] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 58.67% complete, ETA 00:14:07
# Fork: 1 of 1
# Warmup Iteration   1: 668.478 ns/op
# Warmup Iteration   2: 633.862 ns/op
# Warmup Iteration   3: 634.028 ns/op
# Warmup Iteration   4: 632.053 ns/op
# Warmup Iteration   5: 618.401 ns/op
Iteration   1: 626.146 ns/op
Iteration   2: 634.449 ns/op
Iteration   3: 655.571 ns/op
Iteration   4: 630.622 ns/op
Iteration   5: 624.139 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  634.186 ±(99.9%) 48.543 ns/op [Average]
  (min, avg, max) = (624.139, 634.186, 655.571), stdev = 12.606
  CI (99.9%): [585.643, 682.728] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 59.18% complete, ETA 00:13:56
# Fork: 1 of 1
# Warmup Iteration   1: 1244.381 ns/op
# Warmup Iteration   2: 1181.252 ns/op
# Warmup Iteration   3: 1168.218 ns/op
# Warmup Iteration   4: 1147.917 ns/op
# Warmup Iteration   5: 1154.285 ns/op
Iteration   1: 1141.175 ns/op
Iteration   2: 1163.530 ns/op
Iteration   3: 1204.388 ns/op
Iteration   4: 1190.548 ns/op
Iteration   5: 1204.823 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  1180.893 ±(99.9%) 107.144 ns/op [Average]
  (min, avg, max) = (1141.175, 1180.893, 1204.823), stdev = 27.825
  CI (99.9%): [1073.749, 1288.037] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 59.69% complete, ETA 00:13:46
# Fork: 1 of 1
# Warmup Iteration   1: 1970.707 ns/op
# Warmup Iteration   2: 1901.894 ns/op
# Warmup Iteration   3: 1876.323 ns/op
# Warmup Iteration   4: 1831.129 ns/op
# Warmup Iteration   5: 1947.900 ns/op
Iteration   1: 1864.599 ns/op
Iteration   2: 1900.383 ns/op
Iteration   3: 1905.482 ns/op
Iteration   4: 1911.071 ns/op
Iteration   5: 1868.380 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  1889.983 ±(99.9%) 84.014 ns/op [Average]
  (min, avg, max) = (1864.599, 1889.983, 1911.071), stdev = 21.818
  CI (99.9%): [1805.969, 1973.997] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 60.20% complete, ETA 00:13:35
# Fork: 1 of 1
# Warmup Iteration   1: 14364.625 ns/op
# Warmup Iteration   2: 13801.007 ns/op
# Warmup Iteration   3: 13098.525 ns/op
# Warmup Iteration   4: 13388.240 ns/op
# Warmup Iteration   5: 13127.733 ns/op
Iteration   1: 13367.188 ns/op
Iteration   2: 13583.284 ns/op
Iteration   3: 13302.649 ns/op
Iteration   4: 13753.074 ns/op
Iteration   5: 14042.610 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  13609.761 ±(99.9%) 1158.010 ns/op [Average]
  (min, avg, max) = (13302.649, 13609.761, 14042.610), stdev = 300.731
  CI (99.9%): [12451.751, 14767.771] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 1)

# Run progress: 60.71% complete, ETA 00:13:25
# Fork: 1 of 1
# Warmup Iteration   1: 468.465 ns/op
# Warmup Iteration   2: 461.182 ns/op
# Warmup Iteration   3: 449.031 ns/op
# Warmup Iteration   4: 458.463 ns/op
# Warmup Iteration   5: 453.271 ns/op
Iteration   1: 464.033 ns/op
Iteration   2: 484.476 ns/op
Iteration   3: 449.465 ns/op
Iteration   4: 449.517 ns/op
Iteration   5: 438.057 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  457.110 ±(99.9%) 68.774 ns/op [Average]
  (min, avg, max) = (438.057, 457.110, 484.476), stdev = 17.860
  CI (99.9%): [388.335, 525.884] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 10)

# Run progress: 61.22% complete, ETA 00:13:15
# Fork: 1 of 1
# Warmup Iteration   1: 498.433 ns/op
# Warmup Iteration   2: 494.600 ns/op
# Warmup Iteration   3: 476.446 ns/op
# Warmup Iteration   4: 521.026 ns/op
# Warmup Iteration   5: 493.887 ns/op
Iteration   1: 479.726 ns/op
Iteration   2: 480.037 ns/op
Iteration   3: 490.088 ns/op
Iteration   4: 478.484 ns/op
Iteration   5: 471.830 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  480.033 ±(99.9%) 25.168 ns/op [Average]
  (min, avg, max) = (471.830, 480.033, 490.088), stdev = 6.536
  CI (99.9%): [454.865, 505.201] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 50)

# Run progress: 61.73% complete, ETA 00:13:04
# Fork: 1 of 1
# Warmup Iteration   1: 623.179 ns/op
# Warmup Iteration   2: 570.126 ns/op
# Warmup Iteration   3: 565.107 ns/op
# Warmup Iteration   4: 561.192 ns/op
# Warmup Iteration   5: 541.411 ns/op
Iteration   1: 556.056 ns/op
Iteration   2: 564.051 ns/op
Iteration   3: 573.109 ns/op
Iteration   4: 556.524 ns/op
Iteration   5: 558.976 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  561.743 ±(99.9%) 27.346 ns/op [Average]
  (min, avg, max) = (556.056, 561.743, 573.109), stdev = 7.102
  CI (99.9%): [534.397, 589.090] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 100)

# Run progress: 62.24% complete, ETA 00:12:54
# Fork: 1 of 1
# Warmup Iteration   1: 702.259 ns/op
# Warmup Iteration   2: 630.305 ns/op
# Warmup Iteration   3: 632.873 ns/op
# Warmup Iteration   4: 624.974 ns/op
# Warmup Iteration   5: 679.621 ns/op
Iteration   1: 623.701 ns/op
Iteration   2: 652.399 ns/op
Iteration   3: 649.236 ns/op
Iteration   4: 632.452 ns/op
Iteration   5: 642.813 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  640.120 ±(99.9%) 45.947 ns/op [Average]
  (min, avg, max) = (623.701, 640.120, 652.399), stdev = 11.932
  CI (99.9%): [594.173, 686.067] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 500)

# Run progress: 62.76% complete, ETA 00:12:43
# Fork: 1 of 1
# Warmup Iteration   1: 1544.219 ns/op
# Warmup Iteration   2: 1260.166 ns/op
# Warmup Iteration   3: 1274.012 ns/op
# Warmup Iteration   4: 1230.124 ns/op
# Warmup Iteration   5: 1135.612 ns/op
Iteration   1: 1134.244 ns/op
Iteration   2: 1195.262 ns/op
Iteration   3: 1148.491 ns/op
Iteration   4: 1155.955 ns/op
Iteration   5: 1121.949 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  1151.180 ±(99.9%) 107.449 ns/op [Average]
  (min, avg, max) = (1121.949, 1151.180, 1195.262), stdev = 27.904
  CI (99.9%): [1043.731, 1258.629] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 1000)

# Run progress: 63.27% complete, ETA 00:12:33
# Fork: 1 of 1
# Warmup Iteration   1: 2032.500 ns/op
# Warmup Iteration   2: 1875.370 ns/op
# Warmup Iteration   3: 1900.215 ns/op
# Warmup Iteration   4: 1843.289 ns/op
# Warmup Iteration   5: 1847.049 ns/op
Iteration   1: 1875.736 ns/op
Iteration   2: 1835.192 ns/op
Iteration   3: 1833.685 ns/op
Iteration   4: 1847.724 ns/op
Iteration   5: 1841.599 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  1846.787 ±(99.9%) 65.910 ns/op [Average]
  (min, avg, max) = (1833.685, 1846.787, 1875.736), stdev = 17.117
  CI (99.9%): [1780.877, 1912.698] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2
# Parameters: (dataset = random, length = 10000)

# Run progress: 63.78% complete, ETA 00:12:22
# Fork: 1 of 1
# Warmup Iteration   1: 14081.556 ns/op
# Warmup Iteration   2: 13292.607 ns/op
# Warmup Iteration   3: 12792.300 ns/op
# Warmup Iteration   4: 12811.389 ns/op
# Warmup Iteration   5: 12826.450 ns/op
Iteration   1: 13447.274 ns/op
Iteration   2: 13238.274 ns/op
Iteration   3: 13361.648 ns/op
Iteration   4: 13099.258 ns/op
Iteration   5: 12954.986 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_decodeHacky2":
  13220.288 ±(99.9%) 762.540 ns/op [Average]
  (min, avg, max) = (12954.986, 13220.288, 13447.274), stdev = 198.029
  CI (99.9%): [12457.748, 13982.828] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 64.29% complete, ETA 00:12:12
# Fork: 1 of 1
# Warmup Iteration   1: 1448.332 ns/op
# Warmup Iteration   2: 1459.548 ns/op
# Warmup Iteration   3: 1397.426 ns/op
# Warmup Iteration   4: 1446.469 ns/op
# Warmup Iteration   5: 1451.611 ns/op
Iteration   1: 1511.371 ns/op
Iteration   2: 1433.358 ns/op
Iteration   3: 1427.895 ns/op
Iteration   4: 1430.641 ns/op
Iteration   5: 1462.404 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1453.134 ±(99.9%) 136.298 ns/op [Average]
  (min, avg, max) = (1427.895, 1453.134, 1511.371), stdev = 35.396
  CI (99.9%): [1316.836, 1589.431] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 64.80% complete, ETA 00:12:01
# Fork: 1 of 1
# Warmup Iteration   1: 1472.237 ns/op
# Warmup Iteration   2: 1448.067 ns/op
# Warmup Iteration   3: 1471.582 ns/op
# Warmup Iteration   4: 1489.339 ns/op
# Warmup Iteration   5: 1498.496 ns/op
Iteration   1: 1494.142 ns/op
Iteration   2: 1464.949 ns/op
Iteration   3: 1442.625 ns/op
Iteration   4: 1444.206 ns/op
Iteration   5: 1467.994 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1462.783 ±(99.9%) 80.925 ns/op [Average]
  (min, avg, max) = (1442.625, 1462.783, 1494.142), stdev = 21.016
  CI (99.9%): [1381.858, 1543.709] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 65.31% complete, ETA 00:11:51
# Fork: 1 of 1
# Warmup Iteration   1: 1599.765 ns/op
# Warmup Iteration   2: 1594.567 ns/op
# Warmup Iteration   3: 1541.912 ns/op
# Warmup Iteration   4: 1503.958 ns/op
# Warmup Iteration   5: 1490.009 ns/op
Iteration   1: 1542.292 ns/op
Iteration   2: 1553.603 ns/op
Iteration   3: 1511.377 ns/op
Iteration   4: 1519.220 ns/op
Iteration   5: 1493.480 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1523.994 ±(99.9%) 92.827 ns/op [Average]
  (min, avg, max) = (1493.480, 1523.994, 1553.603), stdev = 24.107
  CI (99.9%): [1431.167, 1616.821] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 65.82% complete, ETA 00:11:40
# Fork: 1 of 1
# Warmup Iteration   1: 1821.857 ns/op
# Warmup Iteration   2: 1685.351 ns/op
# Warmup Iteration   3: 1663.780 ns/op
# Warmup Iteration   4: 1648.592 ns/op
# Warmup Iteration   5: 1667.458 ns/op
Iteration   1: 1664.636 ns/op
Iteration   2: 1668.622 ns/op
Iteration   3: 1719.283 ns/op
Iteration   4: 1687.286 ns/op
Iteration   5: 1616.475 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1671.260 ±(99.9%) 144.274 ns/op [Average]
  (min, avg, max) = (1616.475, 1671.260, 1719.283), stdev = 37.467
  CI (99.9%): [1526.987, 1815.534] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 66.33% complete, ETA 00:11:30
# Fork: 1 of 1
# Warmup Iteration   1: 2382.090 ns/op
# Warmup Iteration   2: 2317.900 ns/op
# Warmup Iteration   3: 2521.510 ns/op
# Warmup Iteration   4: 2324.645 ns/op
# Warmup Iteration   5: 2335.192 ns/op
Iteration   1: 2325.496 ns/op
Iteration   2: 2288.206 ns/op
Iteration   3: 2276.315 ns/op
Iteration   4: 2221.526 ns/op
Iteration   5: 2225.745 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  2267.458 ±(99.9%) 169.243 ns/op [Average]
  (min, avg, max) = (2221.526, 2267.458, 2325.496), stdev = 43.952
  CI (99.9%): [2098.214, 2436.701] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 66.84% complete, ETA 00:11:19
# Fork: 1 of 1
# Warmup Iteration   1: 3004.296 ns/op
# Warmup Iteration   2: 2828.337 ns/op
# Warmup Iteration   3: 2821.811 ns/op
# Warmup Iteration   4: 2751.178 ns/op
# Warmup Iteration   5: 3124.102 ns/op
Iteration   1: 2820.182 ns/op
Iteration   2: 2767.525 ns/op
Iteration   3: 2764.804 ns/op
Iteration   4: 2826.903 ns/op
Iteration   5: 2789.021 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  2793.687 ±(99.9%) 111.366 ns/op [Average]
  (min, avg, max) = (2764.804, 2793.687, 2826.903), stdev = 28.921
  CI (99.9%): [2682.321, 2905.053] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 67.35% complete, ETA 00:11:09
# Fork: 1 of 1
# Warmup Iteration   1: 15534.993 ns/op
# Warmup Iteration   2: 13834.934 ns/op
# Warmup Iteration   3: 13637.616 ns/op
# Warmup Iteration   4: 13811.948 ns/op
# Warmup Iteration   5: 13780.023 ns/op
Iteration   1: 13860.009 ns/op
Iteration   2: 13655.055 ns/op
Iteration   3: 13744.653 ns/op
Iteration   4: 13870.068 ns/op
Iteration   5: 13888.988 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  13803.755 ±(99.9%) 387.134 ns/op [Average]
  (min, avg, max) = (13655.055, 13803.755, 13888.988), stdev = 100.538
  CI (99.9%): [13416.620, 14190.889] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 1)

# Run progress: 67.86% complete, ETA 00:10:59
# Fork: 1 of 1
# Warmup Iteration   1: 1472.017 ns/op
# Warmup Iteration   2: 1451.203 ns/op
# Warmup Iteration   3: 1425.627 ns/op
# Warmup Iteration   4: 1451.905 ns/op
# Warmup Iteration   5: 1462.601 ns/op
Iteration   1: 1475.353 ns/op
Iteration   2: 1424.487 ns/op
Iteration   3: 1397.241 ns/op
Iteration   4: 1428.692 ns/op
Iteration   5: 1396.536 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1424.462 ±(99.9%) 123.710 ns/op [Average]
  (min, avg, max) = (1396.536, 1424.462, 1475.353), stdev = 32.127
  CI (99.9%): [1300.752, 1548.172] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 10)

# Run progress: 68.37% complete, ETA 00:10:48
# Fork: 1 of 1
# Warmup Iteration   1: 1487.906 ns/op
# Warmup Iteration   2: 1457.397 ns/op
# Warmup Iteration   3: 1476.346 ns/op
# Warmup Iteration   4: 1464.953 ns/op
# Warmup Iteration   5: 1454.063 ns/op
Iteration   1: 1417.513 ns/op
Iteration   2: 1418.390 ns/op
Iteration   3: 1432.641 ns/op
Iteration   4: 1442.378 ns/op
Iteration   5: 1431.119 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1428.408 ±(99.9%) 40.361 ns/op [Average]
  (min, avg, max) = (1417.513, 1428.408, 1442.378), stdev = 10.482
  CI (99.9%): [1388.047, 1468.769] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 50)

# Run progress: 68.88% complete, ETA 00:10:38
# Fork: 1 of 1
# Warmup Iteration   1: 1543.814 ns/op
# Warmup Iteration   2: 1566.229 ns/op
# Warmup Iteration   3: 1490.834 ns/op
# Warmup Iteration   4: 1487.947 ns/op
# Warmup Iteration   5: 1519.950 ns/op
Iteration   1: 1481.310 ns/op
Iteration   2: 1469.901 ns/op
Iteration   3: 1477.807 ns/op
Iteration   4: 1472.775 ns/op
Iteration   5: 1508.122 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1481.983 ±(99.9%) 58.774 ns/op [Average]
  (min, avg, max) = (1469.901, 1481.983, 1508.122), stdev = 15.263
  CI (99.9%): [1423.209, 1540.757] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 100)

# Run progress: 69.39% complete, ETA 00:10:27
# Fork: 1 of 1
# Warmup Iteration   1: 1773.787 ns/op
# Warmup Iteration   2: 1749.940 ns/op
# Warmup Iteration   3: 1662.718 ns/op
# Warmup Iteration   4: 1672.530 ns/op
# Warmup Iteration   5: 1648.832 ns/op
Iteration   1: 1700.064 ns/op
Iteration   2: 1661.682 ns/op
Iteration   3: 1706.072 ns/op
Iteration   4: 1770.208 ns/op
Iteration   5: 1632.122 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  1694.029 ±(99.9%) 200.673 ns/op [Average]
  (min, avg, max) = (1632.122, 1694.029, 1770.208), stdev = 52.114
  CI (99.9%): [1493.356, 1894.703] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 500)

# Run progress: 69.90% complete, ETA 00:10:17
# Fork: 1 of 1
# Warmup Iteration   1: 2335.756 ns/op
# Warmup Iteration   2: 2318.231 ns/op
# Warmup Iteration   3: 2242.230 ns/op
# Warmup Iteration   4: 2230.413 ns/op
# Warmup Iteration   5: 2236.479 ns/op
Iteration   1: 2212.270 ns/op
Iteration   2: 2267.693 ns/op
Iteration   3: 2313.320 ns/op
Iteration   4: 2284.438 ns/op
Iteration   5: 2206.329 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  2256.810 ±(99.9%) 178.622 ns/op [Average]
  (min, avg, max) = (2206.329, 2256.810, 2313.320), stdev = 46.388
  CI (99.9%): [2078.188, 2435.432] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 1000)

# Run progress: 70.41% complete, ETA 00:10:06
# Fork: 1 of 1
# Warmup Iteration   1: 2994.393 ns/op
# Warmup Iteration   2: 2839.665 ns/op
# Warmup Iteration   3: 2822.891 ns/op
# Warmup Iteration   4: 2826.292 ns/op
# Warmup Iteration   5: 2802.747 ns/op
Iteration   1: 2758.081 ns/op
Iteration   2: 2752.944 ns/op
Iteration   3: 2743.640 ns/op
Iteration   4: 2979.546 ns/op
Iteration   5: 2807.782 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  2808.399 ±(99.9%) 380.672 ns/op [Average]
  (min, avg, max) = (2743.640, 2808.399, 2979.546), stdev = 98.859
  CI (99.9%): [2427.726, 3189.071] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode
# Parameters: (dataset = random, length = 10000)

# Run progress: 70.92% complete, ETA 00:09:56
# Fork: 1 of 1
# Warmup Iteration   1: 15339.675 ns/op
# Warmup Iteration   2: 13804.164 ns/op
# Warmup Iteration   3: 13509.830 ns/op
# Warmup Iteration   4: 13550.513 ns/op
# Warmup Iteration   5: 13423.913 ns/op
Iteration   1: 13491.403 ns/op
Iteration   2: 13708.780 ns/op
Iteration   3: 13808.860 ns/op
Iteration   4: 13694.345 ns/op
Iteration   5: 15066.197 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encode":
  13953.917 ±(99.9%) 2435.055 ns/op [Average]
  (min, avg, max) = (13491.403, 13953.917, 15066.197), stdev = 632.376
  CI (99.9%): [11518.862, 16388.972] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 1)

# Run progress: 71.43% complete, ETA 00:09:45
# Fork: 1 of 1
# Warmup Iteration   1: 576.829 ns/op
# Warmup Iteration   2: 556.814 ns/op
# Warmup Iteration   3: 501.710 ns/op
# Warmup Iteration   4: 510.649 ns/op
# Warmup Iteration   5: 515.771 ns/op
Iteration   1: 516.825 ns/op
Iteration   2: 516.468 ns/op
Iteration   3: 519.767 ns/op
Iteration   4: 505.085 ns/op
Iteration   5: 506.902 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  513.009 ±(99.9%) 25.271 ns/op [Average]
  (min, avg, max) = (505.085, 513.009, 519.767), stdev = 6.563
  CI (99.9%): [487.738, 538.281] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 10)

# Run progress: 71.94% complete, ETA 00:09:35
# Fork: 1 of 1
# Warmup Iteration   1: 555.867 ns/op
# Warmup Iteration   2: 559.844 ns/op
# Warmup Iteration   3: 534.689 ns/op
# Warmup Iteration   4: 529.971 ns/op
# Warmup Iteration   5: 519.236 ns/op
Iteration   1: 533.872 ns/op
Iteration   2: 540.750 ns/op
Iteration   3: 524.107 ns/op
Iteration   4: 533.026 ns/op
Iteration   5: 523.876 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  531.126 ±(99.9%) 27.608 ns/op [Average]
  (min, avg, max) = (523.876, 531.126, 540.750), stdev = 7.170
  CI (99.9%): [503.519, 558.734] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 50)

# Run progress: 72.45% complete, ETA 00:09:24
# Fork: 1 of 1
# Warmup Iteration   1: 613.920 ns/op
# Warmup Iteration   2: 593.098 ns/op
# Warmup Iteration   3: 561.117 ns/op
# Warmup Iteration   4: 571.338 ns/op
# Warmup Iteration   5: 593.509 ns/op
Iteration   1: 575.906 ns/op
Iteration   2: 576.613 ns/op
Iteration   3: 578.243 ns/op
Iteration   4: 573.617 ns/op
Iteration   5: 609.545 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  582.785 ±(99.9%) 57.958 ns/op [Average]
  (min, avg, max) = (573.617, 582.785, 609.545), stdev = 15.052
  CI (99.9%): [524.826, 640.743] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 100)

# Run progress: 72.96% complete, ETA 00:09:14
# Fork: 1 of 1
# Warmup Iteration   1: 694.856 ns/op
# Warmup Iteration   2: 660.275 ns/op
# Warmup Iteration   3: 641.455 ns/op
# Warmup Iteration   4: 649.849 ns/op
# Warmup Iteration   5: 660.490 ns/op
Iteration   1: 660.266 ns/op
Iteration   2: 644.125 ns/op
Iteration   3: 650.287 ns/op
Iteration   4: 649.604 ns/op
Iteration   5: 664.155 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  653.688 ±(99.9%) 31.784 ns/op [Average]
  (min, avg, max) = (644.125, 653.688, 664.155), stdev = 8.254
  CI (99.9%): [621.904, 685.471] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 500)

# Run progress: 73.47% complete, ETA 00:09:03
# Fork: 1 of 1
# Warmup Iteration   1: 1236.709 ns/op
# Warmup Iteration   2: 1119.990 ns/op
# Warmup Iteration   3: 1096.852 ns/op
# Warmup Iteration   4: 1089.507 ns/op
# Warmup Iteration   5: 1070.102 ns/op
Iteration   1: 1072.832 ns/op
Iteration   2: 1133.792 ns/op
Iteration   3: 1126.826 ns/op
Iteration   4: 1304.032 ns/op
Iteration   5: 1106.008 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  1148.698 ±(99.9%) 346.597 ns/op [Average]
  (min, avg, max) = (1072.832, 1148.698, 1304.032), stdev = 90.010
  CI (99.9%): [802.101, 1495.295] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 73.98% complete, ETA 00:08:53
# Fork: 1 of 1
# Warmup Iteration   1: 1882.547 ns/op
# Warmup Iteration   2: 1787.014 ns/op
# Warmup Iteration   3: 1842.149 ns/op
# Warmup Iteration   4: 1797.253 ns/op
# Warmup Iteration   5: 1733.031 ns/op
Iteration   1: 1779.381 ns/op
Iteration   2: 1769.720 ns/op
Iteration   3: 1819.715 ns/op
Iteration   4: 1752.413 ns/op
Iteration   5: 1800.927 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  1784.431 ±(99.9%) 101.589 ns/op [Average]
  (min, avg, max) = (1752.413, 1784.431, 1819.715), stdev = 26.382
  CI (99.9%): [1682.842, 1886.020] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 74.49% complete, ETA 00:08:43
# Fork: 1 of 1
# Warmup Iteration   1: 13070.126 ns/op
# Warmup Iteration   2: 11895.798 ns/op
# Warmup Iteration   3: 11683.627 ns/op
# Warmup Iteration   4: 12015.395 ns/op
# Warmup Iteration   5: 12002.566 ns/op
Iteration   1: 12041.562 ns/op
Iteration   2: 11776.250 ns/op
Iteration   3: 12140.883 ns/op
Iteration   4: 12065.816 ns/op
Iteration   5: 11723.528 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  11949.608 ±(99.9%) 719.646 ns/op [Average]
  (min, avg, max) = (11723.528, 11949.608, 12140.883), stdev = 186.890
  CI (99.9%): [11229.962, 12669.254] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 1)

# Run progress: 75.00% complete, ETA 00:08:32
# Fork: 1 of 1
# Warmup Iteration   1: 530.552 ns/op
# Warmup Iteration   2: 518.125 ns/op
# Warmup Iteration   3: 512.959 ns/op
# Warmup Iteration   4: 513.265 ns/op
# Warmup Iteration   5: 502.856 ns/op
Iteration   1: 511.680 ns/op
Iteration   2: 513.980 ns/op
Iteration   3: 517.335 ns/op
Iteration   4: 512.249 ns/op
Iteration   5: 503.848 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  511.818 ±(99.9%) 19.141 ns/op [Average]
  (min, avg, max) = (503.848, 511.818, 517.335), stdev = 4.971
  CI (99.9%): [492.678, 530.959] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 10)

# Run progress: 75.51% complete, ETA 00:08:22
# Fork: 1 of 1
# Warmup Iteration   1: 605.648 ns/op
# Warmup Iteration   2: 599.716 ns/op
# Warmup Iteration   3: 572.780 ns/op
# Warmup Iteration   4: 574.235 ns/op
# Warmup Iteration   5: 585.174 ns/op
Iteration   1: 578.524 ns/op
Iteration   2: 590.647 ns/op
Iteration   3: 588.841 ns/op
Iteration   4: 593.639 ns/op
Iteration   5: 565.333 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  583.397 ±(99.9%) 44.622 ns/op [Average]
  (min, avg, max) = (565.333, 583.397, 593.639), stdev = 11.588
  CI (99.9%): [538.775, 628.019] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 50)

# Run progress: 76.02% complete, ETA 00:08:11
# Fork: 1 of 1
# Warmup Iteration   1: 637.841 ns/op
# Warmup Iteration   2: 599.192 ns/op
# Warmup Iteration   3: 598.596 ns/op
# Warmup Iteration   4: 611.100 ns/op
# Warmup Iteration   5: 590.935 ns/op
Iteration   1: 598.981 ns/op
Iteration   2: 610.828 ns/op
Iteration   3: 594.557 ns/op
Iteration   4: 578.495 ns/op
Iteration   5: 582.455 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  593.063 ±(99.9%) 50.118 ns/op [Average]
  (min, avg, max) = (578.495, 593.063, 610.828), stdev = 13.016
  CI (99.9%): [542.945, 643.181] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 100)

# Run progress: 76.53% complete, ETA 00:08:01
# Fork: 1 of 1
# Warmup Iteration   1: 788.074 ns/op
# Warmup Iteration   2: 743.248 ns/op
# Warmup Iteration   3: 720.180 ns/op
# Warmup Iteration   4: 719.383 ns/op
# Warmup Iteration   5: 720.688 ns/op
Iteration   1: 743.691 ns/op
Iteration   2: 714.171 ns/op
Iteration   3: 725.011 ns/op
Iteration   4: 732.272 ns/op
Iteration   5: 733.064 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  729.642 ±(99.9%) 42.040 ns/op [Average]
  (min, avg, max) = (714.171, 729.642, 743.691), stdev = 10.918
  CI (99.9%): [687.601, 771.682] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 500)

# Run progress: 77.04% complete, ETA 00:07:50
# Fork: 1 of 1
# Warmup Iteration   1: 1239.719 ns/op
# Warmup Iteration   2: 1114.722 ns/op
# Warmup Iteration   3: 1095.985 ns/op
# Warmup Iteration   4: 1093.890 ns/op
# Warmup Iteration   5: 1133.447 ns/op
Iteration   1: 1109.580 ns/op
Iteration   2: 1084.355 ns/op
Iteration   3: 1061.228 ns/op
Iteration   4: 1059.051 ns/op
Iteration   5: 1072.591 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  1077.361 ±(99.9%) 79.506 ns/op [Average]
  (min, avg, max) = (1059.051, 1077.361, 1109.580), stdev = 20.647
  CI (99.9%): [997.855, 1156.866] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 1000)

# Run progress: 77.55% complete, ETA 00:07:40
# Fork: 1 of 1
# Warmup Iteration   1: 1929.994 ns/op
# Warmup Iteration   2: 1804.871 ns/op
# Warmup Iteration   3: 1787.653 ns/op
# Warmup Iteration   4: 1862.914 ns/op
# Warmup Iteration   5: 1803.340 ns/op
Iteration   1: 1959.758 ns/op
Iteration   2: 1831.928 ns/op
Iteration   3: 1939.179 ns/op
Iteration   4: 1904.443 ns/op
Iteration   5: 1942.638 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  1915.589 ±(99.9%) 195.990 ns/op [Average]
  (min, avg, max) = (1831.928, 1915.589, 1959.758), stdev = 50.898
  CI (99.9%): [1719.599, 2111.579] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1
# Parameters: (dataset = random, length = 10000)

# Run progress: 78.06% complete, ETA 00:07:29
# Fork: 1 of 1
# Warmup Iteration   1: 13722.650 ns/op
# Warmup Iteration   2: 12686.046 ns/op
# Warmup Iteration   3: 12232.031 ns/op
# Warmup Iteration   4: 12404.807 ns/op
# Warmup Iteration   5: 12223.962 ns/op
Iteration   1: 12009.652 ns/op
Iteration   2: 12313.298 ns/op
Iteration   3: 12267.211 ns/op
Iteration   4: 12334.165 ns/op
Iteration   5: 11953.234 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky1":
  12175.512 ±(99.9%) 692.799 ns/op [Average]
  (min, avg, max) = (11953.234, 12175.512, 12334.165), stdev = 179.918
  CI (99.9%): [11482.714, 12868.311] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 1)

# Run progress: 78.57% complete, ETA 00:07:19
# Fork: 1 of 1
# Warmup Iteration   1: 449.879 ns/op
# Warmup Iteration   2: 451.453 ns/op
# Warmup Iteration   3: 418.787 ns/op
# Warmup Iteration   4: 446.499 ns/op
# Warmup Iteration   5: 419.622 ns/op
Iteration   1: 425.029 ns/op
Iteration   2: 414.069 ns/op
Iteration   3: 443.319 ns/op
Iteration   4: 421.656 ns/op
Iteration   5: 411.147 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  423.044 ±(99.9%) 48.671 ns/op [Average]
  (min, avg, max) = (411.147, 423.044, 443.319), stdev = 12.640
  CI (99.9%): [374.373, 471.715] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 10)

# Run progress: 79.08% complete, ETA 00:07:08
# Fork: 1 of 1
# Warmup Iteration   1: 469.217 ns/op
# Warmup Iteration   2: 470.969 ns/op
# Warmup Iteration   3: 432.874 ns/op
# Warmup Iteration   4: 440.404 ns/op
# Warmup Iteration   5: 437.148 ns/op
Iteration   1: 438.019 ns/op
Iteration   2: 450.107 ns/op
Iteration   3: 449.765 ns/op
Iteration   4: 446.667 ns/op
Iteration   5: 446.511 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  446.214 ±(99.9%) 18.787 ns/op [Average]
  (min, avg, max) = (438.019, 446.214, 450.107), stdev = 4.879
  CI (99.9%): [427.427, 465.001] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 50)

# Run progress: 79.59% complete, ETA 00:06:58
# Fork: 1 of 1
# Warmup Iteration   1: 559.702 ns/op
# Warmup Iteration   2: 544.962 ns/op
# Warmup Iteration   3: 528.903 ns/op
# Warmup Iteration   4: 532.054 ns/op
# Warmup Iteration   5: 523.338 ns/op
Iteration   1: 520.964 ns/op
Iteration   2: 520.185 ns/op
Iteration   3: 532.202 ns/op
Iteration   4: 531.023 ns/op
Iteration   5: 542.045 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  529.284 ±(99.9%) 34.784 ns/op [Average]
  (min, avg, max) = (520.185, 529.284, 542.045), stdev = 9.033
  CI (99.9%): [494.500, 564.068] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 100)

# Run progress: 80.10% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: 612.317 ns/op
# Warmup Iteration   2: 586.816 ns/op
# Warmup Iteration   3: 550.814 ns/op
# Warmup Iteration   4: 564.817 ns/op
# Warmup Iteration   5: 569.553 ns/op
Iteration   1: 550.088 ns/op
Iteration   2: 557.535 ns/op
Iteration   3: 564.424 ns/op
Iteration   4: 556.201 ns/op
Iteration   5: 559.546 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  557.559 ±(99.9%) 20.077 ns/op [Average]
  (min, avg, max) = (550.088, 557.559, 564.424), stdev = 5.214
  CI (99.9%): [537.482, 577.636] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 500)

# Run progress: 80.61% complete, ETA 00:06:37
# Fork: 1 of 1
# Warmup Iteration   1: 1061.772 ns/op
# Warmup Iteration   2: 993.685 ns/op
# Warmup Iteration   3: 961.530 ns/op
# Warmup Iteration   4: 1000.531 ns/op
# Warmup Iteration   5: 978.727 ns/op
Iteration   1: 970.843 ns/op
Iteration   2: 1000.563 ns/op
Iteration   3: 976.158 ns/op
Iteration   4: 975.327 ns/op
Iteration   5: 978.772 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  980.332 ±(99.9%) 44.917 ns/op [Average]
  (min, avg, max) = (970.843, 980.332, 1000.563), stdev = 11.665
  CI (99.9%): [935.416, 1025.249] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 81.12% complete, ETA 00:06:27
# Fork: 1 of 1
# Warmup Iteration   1: 1752.638 ns/op
# Warmup Iteration   2: 1567.527 ns/op
# Warmup Iteration   3: 1570.002 ns/op
# Warmup Iteration   4: 1669.345 ns/op
# Warmup Iteration   5: 1565.581 ns/op
Iteration   1: 1534.886 ns/op
Iteration   2: 1540.779 ns/op
Iteration   3: 1541.534 ns/op
Iteration   4: 1546.610 ns/op
Iteration   5: 1580.282 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  1548.818 ±(99.9%) 69.597 ns/op [Average]
  (min, avg, max) = (1534.886, 1548.818, 1580.282), stdev = 18.074
  CI (99.9%): [1479.222, 1618.415] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 81.63% complete, ETA 00:06:16
# Fork: 1 of 1
# Warmup Iteration   1: 13529.430 ns/op
# Warmup Iteration   2: 11923.101 ns/op
# Warmup Iteration   3: 12201.273 ns/op
# Warmup Iteration   4: 12756.858 ns/op
# Warmup Iteration   5: 12225.393 ns/op
Iteration   1: 11948.176 ns/op
Iteration   2: 12158.933 ns/op
Iteration   3: 11988.095 ns/op
Iteration   4: 13600.701 ns/op
Iteration   5: 13059.219 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  12551.025 ±(99.9%) 2851.905 ns/op [Average]
  (min, avg, max) = (11948.176, 12551.025, 13600.701), stdev = 740.631
  CI (99.9%): [9699.120, 15402.930] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 1)

# Run progress: 82.14% complete, ETA 00:06:06
# Fork: 1 of 1
# Warmup Iteration   1: 459.572 ns/op
# Warmup Iteration   2: 458.792 ns/op
# Warmup Iteration   3: 421.160 ns/op
# Warmup Iteration   4: 431.423 ns/op
# Warmup Iteration   5: 430.842 ns/op
Iteration   1: 438.157 ns/op
Iteration   2: 427.010 ns/op
Iteration   3: 444.871 ns/op
Iteration   4: 419.940 ns/op
Iteration   5: 446.427 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  435.281 ±(99.9%) 44.250 ns/op [Average]
  (min, avg, max) = (419.940, 435.281, 446.427), stdev = 11.492
  CI (99.9%): [391.030, 479.531] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 10)

# Run progress: 82.65% complete, ETA 00:05:55
# Fork: 1 of 1
# Warmup Iteration   1: 478.964 ns/op
# Warmup Iteration   2: 459.759 ns/op
# Warmup Iteration   3: 443.587 ns/op
# Warmup Iteration   4: 434.420 ns/op
# Warmup Iteration   5: 431.426 ns/op
Iteration   1: 431.318 ns/op
Iteration   2: 427.163 ns/op
Iteration   3: 437.632 ns/op
Iteration   4: 444.025 ns/op
Iteration   5: 432.736 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  434.575 ±(99.9%) 24.924 ns/op [Average]
  (min, avg, max) = (427.163, 434.575, 444.025), stdev = 6.473
  CI (99.9%): [409.651, 459.498] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 50)

# Run progress: 83.16% complete, ETA 00:05:45
# Fork: 1 of 1
# Warmup Iteration   1: 570.944 ns/op
# Warmup Iteration   2: 550.521 ns/op
# Warmup Iteration   3: 541.766 ns/op
# Warmup Iteration   4: 526.949 ns/op
# Warmup Iteration   5: 535.861 ns/op
Iteration   1: 537.233 ns/op
Iteration   2: 519.817 ns/op
Iteration   3: 537.523 ns/op
Iteration   4: 542.832 ns/op
Iteration   5: 526.222 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  532.725 ±(99.9%) 36.245 ns/op [Average]
  (min, avg, max) = (519.817, 532.725, 542.832), stdev = 9.413
  CI (99.9%): [496.481, 568.970] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 100)

# Run progress: 83.67% complete, ETA 00:05:34
# Fork: 1 of 1
# Warmup Iteration   1: 651.938 ns/op
# Warmup Iteration   2: 602.592 ns/op
# Warmup Iteration   3: 595.499 ns/op
# Warmup Iteration   4: 595.843 ns/op
# Warmup Iteration   5: 589.605 ns/op
Iteration   1: 577.693 ns/op
Iteration   2: 582.803 ns/op
Iteration   3: 579.242 ns/op
Iteration   4: 605.105 ns/op
Iteration   5: 600.237 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  589.016 ±(99.9%) 48.977 ns/op [Average]
  (min, avg, max) = (577.693, 589.016, 605.105), stdev = 12.719
  CI (99.9%): [540.039, 637.993] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 500)

# Run progress: 84.18% complete, ETA 00:05:24
# Fork: 1 of 1
# Warmup Iteration   1: 1081.663 ns/op
# Warmup Iteration   2: 997.449 ns/op
# Warmup Iteration   3: 972.525 ns/op
# Warmup Iteration   4: 961.624 ns/op
# Warmup Iteration   5: 972.228 ns/op
Iteration   1: 987.829 ns/op
Iteration   2: 998.514 ns/op
Iteration   3: 975.612 ns/op
Iteration   4: 985.878 ns/op
Iteration   5: 977.270 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  985.021 ±(99.9%) 35.464 ns/op [Average]
  (min, avg, max) = (975.612, 985.021, 998.514), stdev = 9.210
  CI (99.9%): [949.556, 1020.485] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 1000)

# Run progress: 84.69% complete, ETA 00:05:13
# Fork: 1 of 1
# Warmup Iteration   1: 1691.728 ns/op
# Warmup Iteration   2: 1540.449 ns/op
# Warmup Iteration   3: 1562.496 ns/op
# Warmup Iteration   4: 1531.176 ns/op
# Warmup Iteration   5: 1496.620 ns/op
Iteration   1: 1578.463 ns/op
Iteration   2: 1535.218 ns/op
Iteration   3: 1511.332 ns/op
Iteration   4: 1527.977 ns/op
Iteration   5: 1513.611 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  1533.320 ±(99.9%) 104.430 ns/op [Average]
  (min, avg, max) = (1511.332, 1533.320, 1578.463), stdev = 27.120
  CI (99.9%): [1428.891, 1637.750] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2
# Parameters: (dataset = random, length = 10000)

# Run progress: 85.20% complete, ETA 00:05:03
# Fork: 1 of 1
# Warmup Iteration   1: 13503.856 ns/op
# Warmup Iteration   2: 12285.858 ns/op
# Warmup Iteration   3: 12192.463 ns/op
# Warmup Iteration   4: 11995.274 ns/op
# Warmup Iteration   5: 12005.035 ns/op
Iteration   1: 12204.363 ns/op
Iteration   2: 11851.251 ns/op
Iteration   3: 11747.991 ns/op
Iteration   4: 11587.936 ns/op
Iteration   5: 12026.802 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky2":
  11883.669 ±(99.9%) 923.851 ns/op [Average]
  (min, avg, max) = (11587.936, 11883.669, 12204.363), stdev = 239.921
  CI (99.9%): [10959.818, 12807.520] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 1)

# Run progress: 85.71% complete, ETA 00:04:52
# Fork: 1 of 1
# Warmup Iteration   1: 62.962 ns/op
# Warmup Iteration   2: 60.108 ns/op
# Warmup Iteration   3: 61.389 ns/op
# Warmup Iteration   4: 59.533 ns/op
# Warmup Iteration   5: 59.745 ns/op
Iteration   1: 59.641 ns/op
Iteration   2: 61.295 ns/op
Iteration   3: 59.841 ns/op
Iteration   4: 60.080 ns/op
Iteration   5: 62.098 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  60.591 ±(99.9%) 4.080 ns/op [Average]
  (min, avg, max) = (59.641, 60.591, 62.098), stdev = 1.060
  CI (99.9%): [56.511, 64.672] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 10)

# Run progress: 86.22% complete, ETA 00:04:42
# Fork: 1 of 1
# Warmup Iteration   1: 78.616 ns/op
# Warmup Iteration   2: 74.989 ns/op
# Warmup Iteration   3: 70.148 ns/op
# Warmup Iteration   4: 70.539 ns/op
# Warmup Iteration   5: 70.661 ns/op
Iteration   1: 70.030 ns/op
Iteration   2: 70.141 ns/op
Iteration   3: 71.333 ns/op
Iteration   4: 69.799 ns/op
Iteration   5: 69.870 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  70.235 ±(99.9%) 2.419 ns/op [Average]
  (min, avg, max) = (69.799, 70.235, 71.333), stdev = 0.628
  CI (99.9%): [67.816, 72.653] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 50)

# Run progress: 86.73% complete, ETA 00:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 125.358 ns/op
# Warmup Iteration   2: 118.425 ns/op
# Warmup Iteration   3: 110.781 ns/op
# Warmup Iteration   4: 112.300 ns/op
# Warmup Iteration   5: 112.250 ns/op
Iteration   1: 113.655 ns/op
Iteration   2: 112.919 ns/op
Iteration   3: 112.677 ns/op
Iteration   4: 113.136 ns/op
Iteration   5: 112.416 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  112.960 ±(99.9%) 1.818 ns/op [Average]
  (min, avg, max) = (112.416, 112.960, 113.655), stdev = 0.472
  CI (99.9%): [111.143, 114.778] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 100)

# Run progress: 87.24% complete, ETA 00:04:21
# Fork: 1 of 1
# Warmup Iteration   1: 180.527 ns/op
# Warmup Iteration   2: 171.391 ns/op
# Warmup Iteration   3: 167.007 ns/op
# Warmup Iteration   4: 164.751 ns/op
# Warmup Iteration   5: 163.636 ns/op
Iteration   1: 161.274 ns/op
Iteration   2: 162.276 ns/op
Iteration   3: 175.459 ns/op
Iteration   4: 163.700 ns/op
Iteration   5: 163.168 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  165.175 ±(99.9%) 22.419 ns/op [Average]
  (min, avg, max) = (161.274, 165.175, 175.459), stdev = 5.822
  CI (99.9%): [142.756, 187.595] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 500)

# Run progress: 87.76% complete, ETA 00:04:11
# Fork: 1 of 1
# Warmup Iteration   1: 649.429 ns/op
# Warmup Iteration   2: 605.711 ns/op
# Warmup Iteration   3: 591.704 ns/op
# Warmup Iteration   4: 584.260 ns/op
# Warmup Iteration   5: 579.658 ns/op
Iteration   1: 580.301 ns/op
Iteration   2: 584.732 ns/op
Iteration   3: 585.757 ns/op
Iteration   4: 583.457 ns/op
Iteration   5: 574.351 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  581.719 ±(99.9%) 17.719 ns/op [Average]
  (min, avg, max) = (574.351, 581.719, 585.757), stdev = 4.601
  CI (99.9%): [564.001, 599.438] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 88.27% complete, ETA 00:04:00
# Fork: 1 of 1
# Warmup Iteration   1: 1296.269 ns/op
# Warmup Iteration   2: 1154.449 ns/op
# Warmup Iteration   3: 1105.682 ns/op
# Warmup Iteration   4: 1155.637 ns/op
# Warmup Iteration   5: 1157.256 ns/op
Iteration   1: 1133.877 ns/op
Iteration   2: 1128.011 ns/op
Iteration   3: 1146.125 ns/op
Iteration   4: 1147.695 ns/op
Iteration   5: 1152.838 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  1141.709 ±(99.9%) 39.840 ns/op [Average]
  (min, avg, max) = (1128.011, 1141.709, 1152.838), stdev = 10.346
  CI (99.9%): [1101.869, 1181.549] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 88.78% complete, ETA 00:03:50
# Fork: 1 of 1
# Warmup Iteration   1: 12382.025 ns/op
# Warmup Iteration   2: 11523.481 ns/op
# Warmup Iteration   3: 11170.110 ns/op
# Warmup Iteration   4: 11429.529 ns/op
# Warmup Iteration   5: 11408.687 ns/op
Iteration   1: 10922.988 ns/op
Iteration   2: 11103.927 ns/op
Iteration   3: 11194.973 ns/op
Iteration   4: 10982.277 ns/op
Iteration   5: 11290.634 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  11098.960 ±(99.9%) 579.401 ns/op [Average]
  (min, avg, max) = (10922.988, 11098.960, 11290.634), stdev = 150.469
  CI (99.9%): [10519.558, 11678.361] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 1)

# Run progress: 89.29% complete, ETA 00:03:39
# Fork: 1 of 1
# Warmup Iteration   1: 63.765 ns/op
# Warmup Iteration   2: 61.885 ns/op
# Warmup Iteration   3: 58.399 ns/op
# Warmup Iteration   4: 56.925 ns/op
# Warmup Iteration   5: 57.683 ns/op
Iteration   1: 57.566 ns/op
Iteration   2: 57.240 ns/op
Iteration   3: 57.848 ns/op
Iteration   4: 57.977 ns/op
Iteration   5: 59.508 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  58.028 ±(99.9%) 3.368 ns/op [Average]
  (min, avg, max) = (57.240, 58.028, 59.508), stdev = 0.875
  CI (99.9%): [54.660, 61.396] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 10)

# Run progress: 89.80% complete, ETA 00:03:29
# Fork: 1 of 1
# Warmup Iteration   1: 80.151 ns/op
# Warmup Iteration   2: 74.540 ns/op
# Warmup Iteration   3: 70.556 ns/op
# Warmup Iteration   4: 70.360 ns/op
# Warmup Iteration   5: 72.598 ns/op
Iteration   1: 73.072 ns/op
Iteration   2: 71.580 ns/op
Iteration   3: 72.856 ns/op
Iteration   4: 73.038 ns/op
Iteration   5: 75.183 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  73.146 ±(99.9%) 4.985 ns/op [Average]
  (min, avg, max) = (71.580, 73.146, 75.183), stdev = 1.295
  CI (99.9%): [68.161, 78.131] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 50)

# Run progress: 90.31% complete, ETA 00:03:18
# Fork: 1 of 1
# Warmup Iteration   1: 121.720 ns/op
# Warmup Iteration   2: 115.479 ns/op
# Warmup Iteration   3: 113.765 ns/op
# Warmup Iteration   4: 117.304 ns/op
# Warmup Iteration   5: 115.445 ns/op
Iteration   1: 115.056 ns/op
Iteration   2: 114.333 ns/op
Iteration   3: 119.148 ns/op
Iteration   4: 115.541 ns/op
Iteration   5: 111.837 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  115.183 ±(99.9%) 10.148 ns/op [Average]
  (min, avg, max) = (111.837, 115.183, 119.148), stdev = 2.635
  CI (99.9%): [105.035, 125.331] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 100)

# Run progress: 90.82% complete, ETA 00:03:08
# Fork: 1 of 1
# Warmup Iteration   1: 187.129 ns/op
# Warmup Iteration   2: 166.882 ns/op
# Warmup Iteration   3: 164.925 ns/op
# Warmup Iteration   4: 165.180 ns/op
# Warmup Iteration   5: 161.242 ns/op
Iteration   1: 165.130 ns/op
Iteration   2: 164.124 ns/op
Iteration   3: 161.801 ns/op
Iteration   4: 162.853 ns/op
Iteration   5: 170.487 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  164.879 ±(99.9%) 13.010 ns/op [Average]
  (min, avg, max) = (161.801, 164.879, 170.487), stdev = 3.379
  CI (99.9%): [151.869, 177.889] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 500)

# Run progress: 91.33% complete, ETA 00:02:57
# Fork: 1 of 1
# Warmup Iteration   1: 667.146 ns/op
# Warmup Iteration   2: 627.294 ns/op
# Warmup Iteration   3: 596.824 ns/op
# Warmup Iteration   4: 579.753 ns/op
# Warmup Iteration   5: 610.886 ns/op
Iteration   1: 589.152 ns/op
Iteration   2: 589.664 ns/op
Iteration   3: 613.663 ns/op
Iteration   4: 607.466 ns/op
Iteration   5: 604.776 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  600.944 ±(99.9%) 42.413 ns/op [Average]
  (min, avg, max) = (589.152, 600.944, 613.663), stdev = 11.015
  CI (99.9%): [558.531, 643.358] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 1000)

# Run progress: 91.84% complete, ETA 00:02:47
# Fork: 1 of 1
# Warmup Iteration   1: 1311.845 ns/op
# Warmup Iteration   2: 1186.669 ns/op
# Warmup Iteration   3: 1130.017 ns/op
# Warmup Iteration   4: 1118.948 ns/op
# Warmup Iteration   5: 1149.978 ns/op
Iteration   1: 1136.222 ns/op
Iteration   2: 1131.801 ns/op
Iteration   3: 1132.022 ns/op
Iteration   4: 1127.733 ns/op
Iteration   5: 1126.130 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  1130.782 ±(99.9%) 15.294 ns/op [Average]
  (min, avg, max) = (1126.130, 1130.782, 1136.222), stdev = 3.972
  CI (99.9%): [1115.487, 1146.076] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3
# Parameters: (dataset = random, length = 10000)

# Run progress: 92.35% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 13909.873 ns/op
# Warmup Iteration   2: 11840.922 ns/op
# Warmup Iteration   3: 11492.867 ns/op
# Warmup Iteration   4: 11114.627 ns/op
# Warmup Iteration   5: 11229.851 ns/op
Iteration   1: 11658.787 ns/op
Iteration   2: 11084.125 ns/op
Iteration   3: 11226.426 ns/op
Iteration   4: 11746.985 ns/op
Iteration   5: 11150.365 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniBase64_url_encodeHacky3":
  11373.338 ±(99.9%) 1180.644 ns/op [Average]
  (min, avg, max) = (11084.125, 11373.338, 11746.985), stdev = 306.610
  CI (99.9%): [10192.693, 12553.982] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 1)

# Run progress: 92.86% complete, ETA 00:02:26
# Fork: 1 of 1
# Warmup Iteration   1: 1191.838 ns/op
# Warmup Iteration   2: 1151.965 ns/op
# Warmup Iteration   3: 1092.087 ns/op
# Warmup Iteration   4: 1122.158 ns/op
# Warmup Iteration   5: 1102.802 ns/op
Iteration   1: 1112.294 ns/op
Iteration   2: 1072.343 ns/op
Iteration   3: 1080.758 ns/op
Iteration   4: 1091.504 ns/op
Iteration   5: 1078.432 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1087.066 ±(99.9%) 60.495 ns/op [Average]
  (min, avg, max) = (1072.343, 1087.066, 1112.294), stdev = 15.710
  CI (99.9%): [1026.571, 1147.562] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 10)

# Run progress: 93.37% complete, ETA 00:02:15
# Fork: 1 of 1
# Warmup Iteration   1: 1179.722 ns/op
# Warmup Iteration   2: 1179.747 ns/op
# Warmup Iteration   3: 1158.322 ns/op
# Warmup Iteration   4: 1164.846 ns/op
# Warmup Iteration   5: 1133.559 ns/op
Iteration   1: 1175.790 ns/op
Iteration   2: 1168.312 ns/op
Iteration   3: 1144.567 ns/op
Iteration   4: 1125.249 ns/op
Iteration   5: 1114.842 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1145.752 ±(99.9%) 101.668 ns/op [Average]
  (min, avg, max) = (1114.842, 1145.752, 1175.790), stdev = 26.403
  CI (99.9%): [1044.084, 1247.420] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 50)

# Run progress: 93.88% complete, ETA 00:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 1498.256 ns/op
# Warmup Iteration   2: 1424.856 ns/op
# Warmup Iteration   3: 1355.216 ns/op
# Warmup Iteration   4: 1361.581 ns/op
# Warmup Iteration   5: 1377.807 ns/op
Iteration   1: 1364.963 ns/op
Iteration   2: 1357.341 ns/op
Iteration   3: 1398.934 ns/op
Iteration   4: 1393.859 ns/op
Iteration   5: 1370.944 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1377.208 ±(99.9%) 70.298 ns/op [Average]
  (min, avg, max) = (1357.341, 1377.208, 1398.934), stdev = 18.256
  CI (99.9%): [1306.910, 1447.506] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 100)

# Run progress: 94.39% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 1692.235 ns/op
# Warmup Iteration   2: 1628.842 ns/op
# Warmup Iteration   3: 1625.005 ns/op
# Warmup Iteration   4: 1614.797 ns/op
# Warmup Iteration   5: 1623.290 ns/op
Iteration   1: 1608.851 ns/op
Iteration   2: 1626.675 ns/op
Iteration   3: 1654.427 ns/op
Iteration   4: 1628.655 ns/op
Iteration   5: 1605.193 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1624.760 ±(99.9%) 75.430 ns/op [Average]
  (min, avg, max) = (1605.193, 1624.760, 1654.427), stdev = 19.589
  CI (99.9%): [1549.330, 1700.190] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 500)

# Run progress: 94.90% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: 3520.676 ns/op
# Warmup Iteration   2: 3563.647 ns/op
# Warmup Iteration   3: 3288.052 ns/op
# Warmup Iteration   4: 3238.601 ns/op
# Warmup Iteration   5: 3289.746 ns/op
Iteration   1: 3233.159 ns/op
Iteration   2: 3270.405 ns/op
Iteration   3: 3321.670 ns/op
Iteration   4: 3237.623 ns/op
Iteration   5: 3336.241 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  3279.820 ±(99.9%) 182.462 ns/op [Average]
  (min, avg, max) = (3233.159, 3279.820, 3336.241), stdev = 47.385
  CI (99.9%): [3097.358, 3462.281] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 1000)

# Run progress: 95.41% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 5813.492 ns/op
# Warmup Iteration   2: 5590.454 ns/op
# Warmup Iteration   3: 5482.627 ns/op
# Warmup Iteration   4: 5519.385 ns/op
# Warmup Iteration   5: 5462.867 ns/op
Iteration   1: 5519.393 ns/op
Iteration   2: 5381.764 ns/op
Iteration   3: 5437.648 ns/op
Iteration   4: 5432.018 ns/op
Iteration   5: 5415.393 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  5437.243 ±(99.9%) 195.696 ns/op [Average]
  (min, avg, max) = (5381.764, 5437.243, 5519.393), stdev = 50.822
  CI (99.9%): [5241.547, 5632.939] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = fixed, length = 10000)

# Run progress: 95.92% complete, ETA 00:01:23
# Fork: 1 of 1
# Warmup Iteration   1: 46548.101 ns/op
# Warmup Iteration   2: 44494.820 ns/op
# Warmup Iteration   3: 44523.338 ns/op
# Warmup Iteration   4: 44840.290 ns/op
# Warmup Iteration   5: 44447.242 ns/op
Iteration   1: 43200.898 ns/op
Iteration   2: 43955.604 ns/op
Iteration   3: 44189.784 ns/op
Iteration   4: 42735.708 ns/op
Iteration   5: 44401.105 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  43696.620 ±(99.9%) 2706.208 ns/op [Average]
  (min, avg, max) = (42735.708, 43696.620, 44401.105), stdev = 702.794
  CI (99.9%): [40990.412, 46402.828] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 1)

# Run progress: 96.43% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 1124.070 ns/op
# Warmup Iteration   2: 1103.355 ns/op
# Warmup Iteration   3: 1101.290 ns/op
# Warmup Iteration   4: 1117.763 ns/op
# Warmup Iteration   5: 1153.313 ns/op
Iteration   1: 1121.800 ns/op
Iteration   2: 1083.762 ns/op
Iteration   3: 1096.235 ns/op
Iteration   4: 1095.949 ns/op
Iteration   5: 1076.393 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1094.828 ±(99.9%) 66.502 ns/op [Average]
  (min, avg, max) = (1076.393, 1094.828, 1121.800), stdev = 17.270
  CI (99.9%): [1028.325, 1161.330] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 10)

# Run progress: 96.94% complete, ETA 00:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 1179.328 ns/op
# Warmup Iteration   2: 1122.568 ns/op
# Warmup Iteration   3: 1153.578 ns/op
# Warmup Iteration   4: 1186.441 ns/op
# Warmup Iteration   5: 1137.886 ns/op
Iteration   1: 1154.012 ns/op
Iteration   2: 1169.623 ns/op
Iteration   3: 1153.601 ns/op
Iteration   4: 1144.585 ns/op
Iteration   5: 1187.995 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1161.963 ±(99.9%) 65.898 ns/op [Average]
  (min, avg, max) = (1144.585, 1161.963, 1187.995), stdev = 17.113
  CI (99.9%): [1096.065, 1227.861] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 50)

# Run progress: 97.45% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 1337.619 ns/op
# Warmup Iteration   2: 1369.968 ns/op
# Warmup Iteration   3: 1298.875 ns/op
# Warmup Iteration   4: 1304.430 ns/op
# Warmup Iteration   5: 1318.772 ns/op
Iteration   1: 1290.149 ns/op
Iteration   2: 1322.581 ns/op
Iteration   3: 1306.466 ns/op
Iteration   4: 1354.574 ns/op
Iteration   5: 1297.020 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1314.158 ±(99.9%) 98.807 ns/op [Average]
  (min, avg, max) = (1290.149, 1314.158, 1354.574), stdev = 25.660
  CI (99.9%): [1215.351, 1412.965] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 100)

# Run progress: 97.96% complete, ETA 00:00:41
# Fork: 1 of 1
# Warmup Iteration   1: 1710.894 ns/op
# Warmup Iteration   2: 1682.338 ns/op
# Warmup Iteration   3: 1594.294 ns/op
# Warmup Iteration   4: 1633.487 ns/op
# Warmup Iteration   5: 1596.156 ns/op
Iteration   1: 1644.846 ns/op
Iteration   2: 1632.764 ns/op
Iteration   3: 1597.735 ns/op
Iteration   4: 1612.213 ns/op
Iteration   5: 1597.026 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  1616.917 ±(99.9%) 82.067 ns/op [Average]
  (min, avg, max) = (1597.026, 1616.917, 1644.846), stdev = 21.312
  CI (99.9%): [1534.850, 1698.983] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 500)

# Run progress: 98.47% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 3535.045 ns/op
# Warmup Iteration   2: 3513.666 ns/op
# Warmup Iteration   3: 3249.846 ns/op
# Warmup Iteration   4: 3304.953 ns/op
# Warmup Iteration   5: 3332.261 ns/op
Iteration   1: 3312.524 ns/op
Iteration   2: 3324.247 ns/op
Iteration   3: 3379.411 ns/op
Iteration   4: 3355.191 ns/op
Iteration   5: 3306.182 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  3335.511 ±(99.9%) 119.152 ns/op [Average]
  (min, avg, max) = (3306.182, 3335.511, 3379.411), stdev = 30.943
  CI (99.9%): [3216.359, 3454.663] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 1000)

# Run progress: 98.98% complete, ETA 00:00:20
# Fork: 1 of 1
# Warmup Iteration   1: 6031.108 ns/op
# Warmup Iteration   2: 5655.470 ns/op
# Warmup Iteration   3: 5588.820 ns/op
# Warmup Iteration   4: 5588.383 ns/op
# Warmup Iteration   5: 5571.335 ns/op
Iteration   1: 5673.597 ns/op
Iteration   2: 5786.004 ns/op
Iteration   3: 5516.103 ns/op
Iteration   4: 5609.090 ns/op
Iteration   5: 5675.442 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  5652.047 ±(99.9%) 381.593 ns/op [Average]
  (min, avg, max) = (5516.103, 5652.047, 5786.004), stdev = 99.098
  CI (99.9%): [5270.454, 6033.640] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G -Djava.library.path=bazel-bin/rs/base64:rs/base64
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode
# Parameters: (dataset = random, length = 10000)

# Run progress: 99.49% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 47609.771 ns/op
# Warmup Iteration   2: 44933.432 ns/op
# Warmup Iteration   3: 45600.735 ns/op
# Warmup Iteration   4: 45433.108 ns/op
# Warmup Iteration   5: 44135.803 ns/op
Iteration   1: 44419.966 ns/op
Iteration   2: 43796.906 ns/op
Iteration   3: 45372.268 ns/op
Iteration   4: 43557.530 ns/op
Iteration   5: 43602.089 ns/op


Result "com.komanov.jwt.base64.jni.jmh.Base64JniBenchmarks.jniCrypto2_url_decode":
  44149.752 ±(99.9%) 2946.890 ns/op [Average]
  (min, avg, max) = (43557.530, 44149.752, 45372.268), stdev = 765.298
  CI (99.9%): [41202.861, 47096.642] (assumes normal distribution)


# Run complete. Total time: 00:34:10

Benchmark                                       (dataset)  (length)  Mode  Cnt      Score      Error  Units
Base64JniBenchmarks.jdk_url_decode                  fixed         1  avgt    5     32.867 ±    1.208  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed        10  avgt    5     53.897 ±    3.267  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed        50  avgt    5    133.209 ±    1.590  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed       100  avgt    5    231.350 ±    5.114  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed       500  avgt    5    976.156 ±   39.482  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed      1000  avgt    5   1920.160 ±   40.495  ns/op
Base64JniBenchmarks.jdk_url_decode                  fixed     10000  avgt    5  19457.792 ±  180.924  ns/op
Base64JniBenchmarks.jdk_url_decode                 random         1  avgt    5     32.981 ±    3.965  ns/op
Base64JniBenchmarks.jdk_url_decode                 random        10  avgt    5     51.286 ±    0.385  ns/op
Base64JniBenchmarks.jdk_url_decode                 random        50  avgt    5    129.302 ±    3.916  ns/op
Base64JniBenchmarks.jdk_url_decode                 random       100  avgt    5    236.725 ±   20.510  ns/op
Base64JniBenchmarks.jdk_url_decode                 random       500  avgt    5    976.485 ±   41.048  ns/op
Base64JniBenchmarks.jdk_url_decode                 random      1000  avgt    5   1907.176 ±    6.161  ns/op
Base64JniBenchmarks.jdk_url_decode                 random     10000  avgt    5  19834.656 ±  102.851  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed         1  avgt    5     22.800 ±    0.356  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed        10  avgt    5     46.917 ±    0.280  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed        50  avgt    5     85.701 ±    0.447  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed       100  avgt    5    129.110 ±    5.965  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed       500  avgt    5    460.067 ±   17.964  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed      1000  avgt    5    872.081 ±   13.475  ns/op
Base64JniBenchmarks.jdk_url_encode                  fixed     10000  avgt    5   9200.171 ±  279.361  ns/op
Base64JniBenchmarks.jdk_url_encode                 random         1  avgt    5     22.935 ±    0.702  ns/op
Base64JniBenchmarks.jdk_url_encode                 random        10  avgt    5     47.088 ±    1.360  ns/op
Base64JniBenchmarks.jdk_url_encode                 random        50  avgt    5     85.023 ±    1.158  ns/op
Base64JniBenchmarks.jdk_url_encode                 random       100  avgt    5    127.910 ±    0.560  ns/op
Base64JniBenchmarks.jdk_url_encode                 random       500  avgt    5    458.740 ±    1.387  ns/op
Base64JniBenchmarks.jdk_url_encode                 random      1000  avgt    5    879.150 ±   35.845  ns/op
Base64JniBenchmarks.jdk_url_encode                 random     10000  avgt    5   9122.945 ±   15.377  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed         1  avgt    5   1394.004 ±   50.053  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed        10  avgt    5   1369.619 ±   17.554  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed        50  avgt    5   1466.321 ±   78.053  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed       100  avgt    5   1596.619 ±   13.186  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed       500  avgt    5   2196.274 ±  226.708  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed      1000  avgt    5   2823.852 ±  113.012  ns/op
Base64JniBenchmarks.jniBase64_url_decode            fixed     10000  avgt    5  14255.563 ± 1220.020  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random         1  avgt    5   1464.611 ±  113.193  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random        10  avgt    5   1458.088 ±   84.327  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random        50  avgt    5   1498.312 ±  212.900  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random       100  avgt    5   1700.003 ±   81.265  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random       500  avgt    5   2240.803 ±  138.970  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random      1000  avgt    5   2988.341 ±  166.695  ns/op
Base64JniBenchmarks.jniBase64_url_decode           random     10000  avgt    5  14455.729 ±  730.117  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed         1  avgt    5   1303.692 ±   84.033  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed        10  avgt    5   1262.181 ±   63.115  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed        50  avgt    5   1388.706 ±   93.143  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed       100  avgt    5   1510.951 ±   77.495  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed       500  avgt    5   1971.077 ±  169.893  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed      1000  avgt    5   2839.038 ±  201.745  ns/op
Base64JniBenchmarks.jniBase64_url_decode1           fixed     10000  avgt    5  14057.949 ±  642.497  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random         1  avgt    5   1276.581 ±   77.574  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random        10  avgt    5   1320.727 ±   72.287  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random        50  avgt    5   1353.596 ±   43.506  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random       100  avgt    5   1451.812 ±   76.009  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random       500  avgt    5   1938.441 ±   31.508  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random      1000  avgt    5   2721.746 ±  307.703  ns/op
Base64JniBenchmarks.jniBase64_url_decode1          random     10000  avgt    5  13489.851 ±  433.950  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed         1  avgt    5   1126.501 ±   29.565  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed        10  avgt    5   1067.776 ±   45.529  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed        50  avgt    5   1239.320 ±   65.540  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed       100  avgt    5   1285.482 ±   85.325  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed       500  avgt    5   1888.977 ±  236.288  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed      1000  avgt    5   2721.981 ±  160.494  ns/op
Base64JniBenchmarks.jniBase64_url_decode2           fixed     10000  avgt    5  13906.914 ±  502.077  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random         1  avgt    5   1110.288 ±   96.918  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random        10  avgt    5   1102.759 ±   38.670  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random        50  avgt    5   1198.259 ±   93.431  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random       100  avgt    5   1271.355 ±   48.289  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random       500  avgt    5   1802.731 ±  106.004  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random      1000  avgt    5   2662.967 ±  269.774  ns/op
Base64JniBenchmarks.jniBase64_url_decode2          random     10000  avgt    5  13769.493 ±  860.608  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed         1  avgt    5   1045.569 ±   32.945  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed        10  avgt    5   1030.961 ±   34.805  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed        50  avgt    5   1139.929 ±   46.558  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed       100  avgt    5   1223.132 ±  135.616  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed       500  avgt    5   1737.639 ±   83.312  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed      1000  avgt    5   2452.551 ±  191.289  ns/op
Base64JniBenchmarks.jniBase64_url_decode3           fixed     10000  avgt    5  13459.946 ± 1175.497  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random         1  avgt    5   1067.869 ±   49.170  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random        10  avgt    5   1064.294 ±   77.298  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random        50  avgt    5   1134.249 ±   45.851  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random       100  avgt    5   1236.601 ±  108.131  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random       500  avgt    5   1785.990 ±  164.325  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random      1000  avgt    5   2445.975 ±  124.497  ns/op
Base64JniBenchmarks.jniBase64_url_decode3          random     10000  avgt    5  13636.731 ± 1292.507  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed         1  avgt    5   1045.979 ±   81.935  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed        10  avgt    5   1156.727 ±   37.178  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed        50  avgt    5   1186.964 ±   59.970  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed       100  avgt    5   1301.489 ±   81.878  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed       500  avgt    5   1842.521 ±  116.840  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed      1000  avgt    5   2581.318 ±  210.049  ns/op
Base64JniBenchmarks.jniBase64_url_decode4           fixed     10000  avgt    5  13796.871 ± 1036.214  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random         1  avgt    5   1048.013 ±   62.664  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random        10  avgt    5   1097.426 ±   87.388  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random        50  avgt    5   1242.606 ±   86.090  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random       100  avgt    5   1263.957 ±   50.786  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random       500  avgt    5   1799.312 ±   68.796  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random      1000  avgt    5   2564.810 ±  211.223  ns/op
Base64JniBenchmarks.jniBase64_url_decode4          random     10000  avgt    5  13772.000 ±  573.261  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed         1  avgt    5    550.184 ±  112.023  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed        10  avgt    5    583.796 ±   95.212  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed        50  avgt    5    708.084 ±   74.461  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed       100  avgt    5    751.153 ±   98.503  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed       500  avgt    5   1296.408 ±   36.307  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed      1000  avgt    5   2002.254 ±   81.037  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1      fixed     10000  avgt    5  13487.797 ± 1176.353  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random         1  avgt    5    527.977 ±   23.027  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random        10  avgt    5    569.574 ±   22.457  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random        50  avgt    5    649.381 ±   26.498  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random       100  avgt    5    751.252 ±   33.866  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random       500  avgt    5   1241.513 ±   72.928  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random      1000  avgt    5   2011.949 ±  133.387  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky1     random     10000  avgt    5  13260.432 ± 1394.769  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed         1  avgt    5    443.369 ±   19.665  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed        10  avgt    5    520.367 ±   22.812  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed        50  avgt    5    555.739 ±   33.913  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed       100  avgt    5    634.186 ±   48.543  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed       500  avgt    5   1180.893 ±  107.144  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed      1000  avgt    5   1889.983 ±   84.014  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2      fixed     10000  avgt    5  13609.761 ± 1158.010  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random         1  avgt    5    457.110 ±   68.774  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random        10  avgt    5    480.033 ±   25.168  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random        50  avgt    5    561.743 ±   27.346  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random       100  avgt    5    640.120 ±   45.947  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random       500  avgt    5   1151.180 ±  107.449  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random      1000  avgt    5   1846.787 ±   65.910  ns/op
Base64JniBenchmarks.jniBase64_url_decodeHacky2     random     10000  avgt    5  13220.288 ±  762.540  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed         1  avgt    5   1453.134 ±  136.298  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed        10  avgt    5   1462.783 ±   80.925  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed        50  avgt    5   1523.994 ±   92.827  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed       100  avgt    5   1671.260 ±  144.274  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed       500  avgt    5   2267.458 ±  169.243  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed      1000  avgt    5   2793.687 ±  111.366  ns/op
Base64JniBenchmarks.jniBase64_url_encode            fixed     10000  avgt    5  13803.755 ±  387.134  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random         1  avgt    5   1424.462 ±  123.710  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random        10  avgt    5   1428.408 ±   40.361  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random        50  avgt    5   1481.983 ±   58.774  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random       100  avgt    5   1694.029 ±  200.673  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random       500  avgt    5   2256.810 ±  178.622  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random      1000  avgt    5   2808.399 ±  380.672  ns/op
Base64JniBenchmarks.jniBase64_url_encode           random     10000  avgt    5  13953.917 ± 2435.055  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed         1  avgt    5    513.009 ±   25.271  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed        10  avgt    5    531.126 ±   27.608  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed        50  avgt    5    582.785 ±   57.958  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed       100  avgt    5    653.688 ±   31.784  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed       500  avgt    5   1148.698 ±  346.597  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed      1000  avgt    5   1784.431 ±  101.589  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1      fixed     10000  avgt    5  11949.608 ±  719.646  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random         1  avgt    5    511.818 ±   19.141  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random        10  avgt    5    583.397 ±   44.622  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random        50  avgt    5    593.063 ±   50.118  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random       100  avgt    5    729.642 ±   42.040  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random       500  avgt    5   1077.361 ±   79.506  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random      1000  avgt    5   1915.589 ±  195.990  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky1     random     10000  avgt    5  12175.512 ±  692.799  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed         1  avgt    5    423.044 ±   48.671  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed        10  avgt    5    446.214 ±   18.787  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed        50  avgt    5    529.284 ±   34.784  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed       100  avgt    5    557.559 ±   20.077  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed       500  avgt    5    980.332 ±   44.917  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed      1000  avgt    5   1548.818 ±   69.597  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2      fixed     10000  avgt    5  12551.025 ± 2851.905  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random         1  avgt    5    435.281 ±   44.250  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random        10  avgt    5    434.575 ±   24.924  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random        50  avgt    5    532.725 ±   36.245  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random       100  avgt    5    589.016 ±   48.977  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random       500  avgt    5    985.021 ±   35.464  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random      1000  avgt    5   1533.320 ±  104.430  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky2     random     10000  avgt    5  11883.669 ±  923.851  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed         1  avgt    5     60.591 ±    4.080  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed        10  avgt    5     70.235 ±    2.419  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed        50  avgt    5    112.960 ±    1.818  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed       100  avgt    5    165.175 ±   22.419  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed       500  avgt    5    581.719 ±   17.719  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed      1000  avgt    5   1141.709 ±   39.840  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3      fixed     10000  avgt    5  11098.960 ±  579.401  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random         1  avgt    5     58.028 ±    3.368  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random        10  avgt    5     73.146 ±    4.985  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random        50  avgt    5    115.183 ±   10.148  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random       100  avgt    5    164.879 ±   13.010  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random       500  avgt    5    600.944 ±   42.413  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random      1000  avgt    5   1130.782 ±   15.294  ns/op
Base64JniBenchmarks.jniBase64_url_encodeHacky3     random     10000  avgt    5  11373.338 ± 1180.644  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed         1  avgt    5   1087.066 ±   60.495  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed        10  avgt    5   1145.752 ±  101.668  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed        50  avgt    5   1377.208 ±   70.298  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed       100  avgt    5   1624.760 ±   75.430  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed       500  avgt    5   3279.820 ±  182.462  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed      1000  avgt    5   5437.243 ±  195.696  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode           fixed     10000  avgt    5  43696.620 ± 2706.208  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random         1  avgt    5   1094.828 ±   66.502  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random        10  avgt    5   1161.963 ±   65.898  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random        50  avgt    5   1314.158 ±   98.807  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random       100  avgt    5   1616.917 ±   82.067  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random       500  avgt    5   3335.511 ±  119.152  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random      1000  avgt    5   5652.047 ±  381.593  ns/op
Base64JniBenchmarks.jniCrypto2_url_decode          random     10000  avgt    5  44149.752 ± 2946.890  ns/op

Benchmark result is saved to /static/data/charts/base64-jni/jdk17.json
