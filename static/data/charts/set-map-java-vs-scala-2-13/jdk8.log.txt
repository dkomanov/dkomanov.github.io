# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000)

# Run progress: 0.00% complete, ETA 00:22:24
# Fork: 1 of 1
# Warmup Iteration   1: 115.300 ns/op
# Warmup Iteration   2: 109.584 ns/op
Iteration   1: 105.610 ns/op
Iteration   2: 104.957 ns/op
Iteration   3: 107.613 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  106.060 ±(99.9%) 25.251 ns/op [Average]
  (min, avg, max) = (104.957, 106.060, 107.613), stdev = 1.384
  CI (99.9%): [80.809, 131.311] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 10000)

# Run progress: 1.56% complete, ETA 00:22:47
# Fork: 1 of 1
# Warmup Iteration   1: 121.300 ns/op
# Warmup Iteration   2: 105.565 ns/op
Iteration   1: 106.644 ns/op
Iteration   2: 107.488 ns/op
Iteration   3: 108.704 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  107.612 ±(99.9%) 18.889 ns/op [Average]
  (min, avg, max) = (106.644, 107.612, 108.704), stdev = 1.035
  CI (99.9%): [88.723, 126.501] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 100000)

# Run progress: 3.13% complete, ETA 00:22:25
# Fork: 1 of 1
# Warmup Iteration   1: 129.546 ns/op
# Warmup Iteration   2: 121.619 ns/op
Iteration   1: 111.923 ns/op
Iteration   2: 110.938 ns/op
Iteration   3: 110.538 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  111.133 ±(99.9%) 13.012 ns/op [Average]
  (min, avg, max) = (110.538, 111.133, 111.923), stdev = 0.713
  CI (99.9%): [98.121, 124.145] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000000)

# Run progress: 4.69% complete, ETA 00:22:11
# Fork: 1 of 1
# Warmup Iteration   1: 107.183 ns/op
# Warmup Iteration   2: 106.054 ns/op
Iteration   1: 97.183 ns/op
Iteration   2: 135.831 ns/op
Iteration   3: 97.651 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  110.221 ±(99.9%) 404.637 ns/op [Average]
  (min, avg, max) = (97.183, 110.221, 135.831), stdev = 22.180
  CI (99.9%): [≈ 0, 514.859] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000)

# Run progress: 6.25% complete, ETA 00:22:48
# Fork: 1 of 1
# Warmup Iteration   1: 72.073 ns/op
# Warmup Iteration   2: 69.411 ns/op
Iteration   1: 70.907 ns/op
Iteration   2: 71.133 ns/op
Iteration   3: 72.066 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  71.369 ±(99.9%) 11.211 ns/op [Average]
  (min, avg, max) = (70.907, 71.369, 72.066), stdev = 0.615
  CI (99.9%): [60.158, 82.580] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 10000)

# Run progress: 7.81% complete, ETA 00:22:11
# Fork: 1 of 1
# Warmup Iteration   1: 87.881 ns/op
# Warmup Iteration   2: 86.189 ns/op
Iteration   1: 83.962 ns/op
Iteration   2: 84.510 ns/op
Iteration   3: 84.296 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  84.256 ±(99.9%) 5.040 ns/op [Average]
  (min, avg, max) = (83.962, 84.256, 84.510), stdev = 0.276
  CI (99.9%): [79.216, 89.296] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 100000)

# Run progress: 9.38% complete, ETA 00:21:40
# Fork: 1 of 1
# Warmup Iteration   1: 78.159 ns/op
# Warmup Iteration   2: 75.107 ns/op
Iteration   1: 73.665 ns/op
Iteration   2: 73.525 ns/op
Iteration   3: 73.559 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  73.583 ±(99.9%) 1.332 ns/op [Average]
  (min, avg, max) = (73.525, 73.583, 73.665), stdev = 0.073
  CI (99.9%): [72.251, 74.915] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000000)

# Run progress: 10.94% complete, ETA 00:21:15
# Fork: 1 of 1
# Warmup Iteration   1: 73.634 ns/op
# Warmup Iteration   2: 68.814 ns/op
Iteration   1: 85.171 ns/op
Iteration   2: 57.698 ns/op
Iteration   3: 57.701 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  66.857 ±(99.9%) 289.364 ns/op [Average]
  (min, avg, max) = (57.698, 66.857, 85.171), stdev = 15.861
  CI (99.9%): [≈ 0, 356.221] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000)

# Run progress: 12.50% complete, ETA 00:21:16
# Fork: 1 of 1
# Warmup Iteration   1: 94.739 ns/op
# Warmup Iteration   2: 98.588 ns/op
Iteration   1: 109.198 ns/op
Iteration   2: 109.498 ns/op
Iteration   3: 109.580 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  109.425 ±(99.9%) 3.663 ns/op [Average]
  (min, avg, max) = (109.198, 109.425, 109.580), stdev = 0.201
  CI (99.9%): [105.762, 113.089] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 10000)

# Run progress: 14.06% complete, ETA 00:20:46
# Fork: 1 of 1
# Warmup Iteration   1: 100.410 ns/op
# Warmup Iteration   2: 101.407 ns/op
Iteration   1: 110.253 ns/op
Iteration   2: 111.019 ns/op
Iteration   3: 110.511 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  110.594 ±(99.9%) 7.115 ns/op [Average]
  (min, avg, max) = (110.253, 110.594, 111.019), stdev = 0.390
  CI (99.9%): [103.479, 117.709] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 100000)

# Run progress: 15.63% complete, ETA 00:20:18
# Fork: 1 of 1
# Warmup Iteration   1: 94.758 ns/op
# Warmup Iteration   2: 100.013 ns/op
Iteration   1: 109.553 ns/op
Iteration   2: 108.631 ns/op
Iteration   3: 108.801 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  108.995 ±(99.9%) 8.947 ns/op [Average]
  (min, avg, max) = (108.631, 108.995, 109.553), stdev = 0.490
  CI (99.9%): [100.048, 117.942] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000000)

# Run progress: 17.19% complete, ETA 00:19:53
# Fork: 1 of 1
# Warmup Iteration   1: 78.770 ns/op
# Warmup Iteration   2: 74.224 ns/op
Iteration   1: 99.872 ns/op
Iteration   2: 66.221 ns/op
Iteration   3: 66.199 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  77.431 ±(99.9%) 354.564 ns/op [Average]
  (min, avg, max) = (66.199, 77.431, 99.872), stdev = 19.435
  CI (99.9%): [≈ 0, 431.995] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000)

# Run progress: 18.75% complete, ETA 00:19:46
# Fork: 1 of 1
# Warmup Iteration   1: 81.922 ns/op
# Warmup Iteration   2: 76.636 ns/op
Iteration   1: 85.158 ns/op
Iteration   2: 89.621 ns/op
Iteration   3: 86.773 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  87.184 ±(99.9%) 41.224 ns/op [Average]
  (min, avg, max) = (85.158, 87.184, 89.621), stdev = 2.260
  CI (99.9%): [45.960, 128.408] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 10000)

# Run progress: 20.31% complete, ETA 00:19:18
# Fork: 1 of 1
# Warmup Iteration   1: 86.444 ns/op
# Warmup Iteration   2: 81.740 ns/op
Iteration   1: 90.543 ns/op
Iteration   2: 88.886 ns/op
Iteration   3: 89.592 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  89.674 ±(99.9%) 15.168 ns/op [Average]
  (min, avg, max) = (88.886, 89.674, 90.543), stdev = 0.831
  CI (99.9%): [74.506, 104.841] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 100000)

# Run progress: 21.88% complete, ETA 00:18:52
# Fork: 1 of 1
# Warmup Iteration   1: 75.091 ns/op
# Warmup Iteration   2: 72.510 ns/op
Iteration   1: 79.208 ns/op
Iteration   2: 80.585 ns/op
Iteration   3: 81.372 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  80.388 ±(99.9%) 19.984 ns/op [Average]
  (min, avg, max) = (79.208, 80.388, 81.372), stdev = 1.095
  CI (99.9%): [60.404, 100.372] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000000)

# Run progress: 23.44% complete, ETA 00:18:28
# Fork: 1 of 1
# Warmup Iteration   1: 68.380 ns/op
# Warmup Iteration   2: 64.796 ns/op
Iteration   1: 81.315 ns/op
Iteration   2: 53.748 ns/op
Iteration   3: 53.677 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  62.913 ±(99.9%) 290.735 ns/op [Average]
  (min, avg, max) = (53.677, 62.913, 81.315), stdev = 15.936
  CI (99.9%): [≈ 0, 353.649] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000)

# Run progress: 25.00% complete, ETA 00:18:14
# Fork: 1 of 1
# Warmup Iteration   1: 200.011 ns/op
# Warmup Iteration   2: 183.816 ns/op
Iteration   1: 197.359 ns/op
Iteration   2: 198.632 ns/op
Iteration   3: 198.231 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  198.074 ±(99.9%) 11.873 ns/op [Average]
  (min, avg, max) = (197.359, 198.074, 198.632), stdev = 0.651
  CI (99.9%): [186.201, 209.947] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 10000)

# Run progress: 26.56% complete, ETA 00:17:48
# Fork: 1 of 1
# Warmup Iteration   1: 205.718 ns/op
# Warmup Iteration   2: 194.318 ns/op
Iteration   1: 209.391 ns/op
Iteration   2: 210.519 ns/op
Iteration   3: 206.823 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  208.911 ±(99.9%) 34.557 ns/op [Average]
  (min, avg, max) = (206.823, 208.911, 210.519), stdev = 1.894
  CI (99.9%): [174.354, 243.468] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 100000)

# Run progress: 28.13% complete, ETA 00:17:23
# Fork: 1 of 1
# Warmup Iteration   1: 214.931 ns/op
# Warmup Iteration   2: 192.723 ns/op
Iteration   1: 213.430 ns/op
Iteration   2: 215.230 ns/op
Iteration   3: 214.689 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  214.450 ±(99.9%) 16.850 ns/op [Average]
  (min, avg, max) = (213.430, 214.450, 215.230), stdev = 0.924
  CI (99.9%): [197.599, 231.300] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000000)

# Run progress: 29.69% complete, ETA 00:16:59
# Fork: 1 of 1
# Warmup Iteration   1: 268.230 ns/op
# Warmup Iteration   2: 404.653 ns/op
Iteration   1: 212.079 ns/op
Iteration   2: 212.073 ns/op
Iteration   3: 211.382 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  211.845 ±(99.9%) 7.316 ns/op [Average]
  (min, avg, max) = (211.382, 211.845, 212.079), stdev = 0.401
  CI (99.9%): [204.529, 219.160] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000)

# Run progress: 31.25% complete, ETA 00:16:43
# Fork: 1 of 1
# Warmup Iteration   1: 262.374 ns/op
# Warmup Iteration   2: 253.528 ns/op
Iteration   1: 251.265 ns/op
Iteration   2: 251.299 ns/op
Iteration   3: 251.376 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  251.313 ±(99.9%) 1.036 ns/op [Average]
  (min, avg, max) = (251.265, 251.313, 251.376), stdev = 0.057
  CI (99.9%): [250.277, 252.349] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 10000)

# Run progress: 32.81% complete, ETA 00:16:18
# Fork: 1 of 1
# Warmup Iteration   1: 273.745 ns/op
# Warmup Iteration   2: 259.093 ns/op
Iteration   1: 262.099 ns/op
Iteration   2: 259.125 ns/op
Iteration   3: 259.782 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  260.336 ±(99.9%) 28.503 ns/op [Average]
  (min, avg, max) = (259.125, 260.336, 262.099), stdev = 1.562
  CI (99.9%): [231.832, 288.839] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 100000)

# Run progress: 34.38% complete, ETA 00:15:53
# Fork: 1 of 1
# Warmup Iteration   1: 270.250 ns/op
# Warmup Iteration   2: 258.169 ns/op
Iteration   1: 257.381 ns/op
Iteration   2: 251.471 ns/op
Iteration   3: 253.134 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  253.995 ±(99.9%) 55.597 ns/op [Average]
  (min, avg, max) = (251.471, 253.995, 257.381), stdev = 3.047
  CI (99.9%): [198.399, 309.592] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000000)

# Run progress: 35.94% complete, ETA 00:15:29
# Fork: 1 of 1
# Warmup Iteration   1: 264.155 ns/op
# Warmup Iteration   2: 257.686 ns/op
Iteration   1: 262.327 ns/op
Iteration   2: 258.638 ns/op
Iteration   3: 268.315 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  263.093 ±(99.9%) 89.099 ns/op [Average]
  (min, avg, max) = (258.638, 263.093, 268.315), stdev = 4.884
  CI (99.9%): [173.994, 352.192] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000)

# Run progress: 37.50% complete, ETA 00:15:11
# Fork: 1 of 1
# Warmup Iteration   1: 100.443 ns/op
# Warmup Iteration   2: 102.990 ns/op
Iteration   1: 107.612 ns/op
Iteration   2: 110.005 ns/op
Iteration   3: 107.386 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  108.334 ±(99.9%) 26.473 ns/op [Average]
  (min, avg, max) = (107.386, 108.334, 110.005), stdev = 1.451
  CI (99.9%): [81.861, 134.807] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 10000)

# Run progress: 39.06% complete, ETA 00:14:47
# Fork: 1 of 1
# Warmup Iteration   1: 109.063 ns/op
# Warmup Iteration   2: 111.465 ns/op
Iteration   1: 128.357 ns/op
Iteration   2: 128.550 ns/op
Iteration   3: 128.905 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  128.604 ±(99.9%) 5.077 ns/op [Average]
  (min, avg, max) = (128.357, 128.604, 128.905), stdev = 0.278
  CI (99.9%): [123.527, 133.681] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 100000)

# Run progress: 40.63% complete, ETA 00:14:22
# Fork: 1 of 1
# Warmup Iteration   1: 109.302 ns/op
# Warmup Iteration   2: 109.843 ns/op
Iteration   1: 115.496 ns/op
Iteration   2: 113.289 ns/op
Iteration   3: 112.760 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  113.848 ±(99.9%) 26.474 ns/op [Average]
  (min, avg, max) = (112.760, 113.848, 115.496), stdev = 1.451
  CI (99.9%): [87.374, 140.322] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000000)

# Run progress: 42.19% complete, ETA 00:13:59
# Fork: 1 of 1
# Warmup Iteration   1: 78.817 ns/op
# Warmup Iteration   2: 72.506 ns/op
Iteration   1: 94.696 ns/op
Iteration   2: 73.110 ns/op
Iteration   3: 73.121 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  80.309 ±(99.9%) 227.309 ns/op [Average]
  (min, avg, max) = (73.110, 80.309, 94.696), stdev = 12.460
  CI (99.9%): [≈ 0, 307.618] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000)

# Run progress: 43.75% complete, ETA 00:13:40
# Fork: 1 of 1
# Warmup Iteration   1: 87.866 ns/op
# Warmup Iteration   2: 85.648 ns/op
Iteration   1: 87.626 ns/op
Iteration   2: 88.423 ns/op
Iteration   3: 88.999 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  88.349 ±(99.9%) 12.575 ns/op [Average]
  (min, avg, max) = (87.626, 88.349, 88.999), stdev = 0.689
  CI (99.9%): [75.775, 100.924] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 10000)

# Run progress: 45.31% complete, ETA 00:13:16
# Fork: 1 of 1
# Warmup Iteration   1: 90.841 ns/op
# Warmup Iteration   2: 91.374 ns/op
Iteration   1: 92.340 ns/op
Iteration   2: 92.427 ns/op
Iteration   3: 93.687 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  92.818 ±(99.9%) 13.761 ns/op [Average]
  (min, avg, max) = (92.340, 92.818, 93.687), stdev = 0.754
  CI (99.9%): [79.057, 106.579] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 100000)

# Run progress: 46.88% complete, ETA 00:12:52
# Fork: 1 of 1
# Warmup Iteration   1: 87.774 ns/op
# Warmup Iteration   2: 90.220 ns/op
Iteration   1: 90.340 ns/op
Iteration   2: 89.595 ns/op
Iteration   3: 89.581 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  89.838 ±(99.9%) 7.922 ns/op [Average]
  (min, avg, max) = (89.581, 89.838, 90.340), stdev = 0.434
  CI (99.9%): [81.917, 97.760] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000000)

# Run progress: 48.44% complete, ETA 00:12:28
# Fork: 1 of 1
# Warmup Iteration   1: 64.146 ns/op
# Warmup Iteration   2: 56.576 ns/op
Iteration   1: 88.733 ns/op
Iteration   2: 59.890 ns/op
Iteration   3: 60.301 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  69.641 ±(99.9%) 301.660 ns/op [Average]
  (min, avg, max) = (59.890, 69.641, 88.733), stdev = 16.535
  CI (99.9%): [≈ 0, 371.302] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000)

# Run progress: 50.00% complete, ETA 00:12:09
# Fork: 1 of 1
# Warmup Iteration   1: 297.817 ns/op
# Warmup Iteration   2: 289.093 ns/op
Iteration   1: 284.097 ns/op
Iteration   2: 283.927 ns/op
Iteration   3: 284.477 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  284.167 ±(99.9%) 5.137 ns/op [Average]
  (min, avg, max) = (283.927, 284.167, 284.477), stdev = 0.282
  CI (99.9%): [279.030, 289.304] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 10000)

# Run progress: 51.56% complete, ETA 00:11:45
# Fork: 1 of 1
# Warmup Iteration   1: 327.297 ns/op
# Warmup Iteration   2: 314.237 ns/op
Iteration   1: 311.574 ns/op
Iteration   2: 315.589 ns/op
Iteration   3: 313.896 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  313.687 ±(99.9%) 36.773 ns/op [Average]
  (min, avg, max) = (311.574, 313.687, 315.589), stdev = 2.016
  CI (99.9%): [276.914, 350.459] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 100000)

# Run progress: 53.13% complete, ETA 00:11:21
# Fork: 1 of 1
# Warmup Iteration   1: 473.438 ns/op
# Warmup Iteration   2: 459.151 ns/op
Iteration   1: 474.854 ns/op
Iteration   2: 467.036 ns/op
Iteration   3: 464.614 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  468.835 ±(99.9%) 97.639 ns/op [Average]
  (min, avg, max) = (464.614, 468.835, 474.854), stdev = 5.352
  CI (99.9%): [371.196, 566.474] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000000)

# Run progress: 54.69% complete, ETA 00:10:58
# Fork: 1 of 1
# Warmup Iteration   1: 628.363 ns/op
# Warmup Iteration   2: 623.635 ns/op
Iteration   1: 611.862 ns/op
Iteration   2: 612.621 ns/op
Iteration   3: 607.274 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  610.586 ±(99.9%) 52.774 ns/op [Average]
  (min, avg, max) = (607.274, 610.586, 612.621), stdev = 2.893
  CI (99.9%): [557.811, 663.360] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000)

# Run progress: 56.25% complete, ETA 00:10:37
# Fork: 1 of 1
# Warmup Iteration   1: 229.146 ns/op
# Warmup Iteration   2: 217.710 ns/op
Iteration   1: 214.816 ns/op
Iteration   2: 215.914 ns/op
Iteration   3: 216.180 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  215.637 ±(99.9%) 13.196 ns/op [Average]
  (min, avg, max) = (214.816, 215.637, 216.180), stdev = 0.723
  CI (99.9%): [202.441, 228.832] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 10000)

# Run progress: 57.81% complete, ETA 00:10:14
# Fork: 1 of 1
# Warmup Iteration   1: 323.829 ns/op
# Warmup Iteration   2: 313.815 ns/op
Iteration   1: 313.163 ns/op
Iteration   2: 311.398 ns/op
Iteration   3: 313.647 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  312.736 ±(99.9%) 21.593 ns/op [Average]
  (min, avg, max) = (311.398, 312.736, 313.647), stdev = 1.184
  CI (99.9%): [291.143, 334.329] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 100000)

# Run progress: 59.38% complete, ETA 00:09:50
# Fork: 1 of 1
# Warmup Iteration   1: 402.513 ns/op
# Warmup Iteration   2: 388.202 ns/op
Iteration   1: 390.025 ns/op
Iteration   2: 391.544 ns/op
Iteration   3: 388.225 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  389.931 ±(99.9%) 30.314 ns/op [Average]
  (min, avg, max) = (388.225, 389.931, 391.544), stdev = 1.662
  CI (99.9%): [359.618, 420.245] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000000)

# Run progress: 60.94% complete, ETA 00:09:27
# Fork: 1 of 1
# Warmup Iteration   1: 536.067 ns/op
# Warmup Iteration   2: 522.985 ns/op
Iteration   1: 524.394 ns/op
Iteration   2: 518.321 ns/op
Iteration   3: 509.703 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  517.472 ±(99.9%) 134.680 ns/op [Average]
  (min, avg, max) = (509.703, 517.472, 524.394), stdev = 7.382
  CI (99.9%): [382.793, 652.152] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000)

# Run progress: 62.50% complete, ETA 00:09:06
# Fork: 1 of 1
# Warmup Iteration   1: 104.023 ns/op
# Warmup Iteration   2: 103.465 ns/op
Iteration   1: 119.155 ns/op
Iteration   2: 120.435 ns/op
Iteration   3: 117.603 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  119.064 ±(99.9%) 25.868 ns/op [Average]
  (min, avg, max) = (117.603, 119.064, 120.435), stdev = 1.418
  CI (99.9%): [93.196, 144.932] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 10000)

# Run progress: 64.06% complete, ETA 00:08:43
# Fork: 1 of 1
# Warmup Iteration   1: 101.775 ns/op
# Warmup Iteration   2: 93.896 ns/op
Iteration   1: 104.624 ns/op
Iteration   2: 107.311 ns/op
Iteration   3: 105.020 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  105.652 ±(99.9%) 26.466 ns/op [Average]
  (min, avg, max) = (104.624, 105.652, 107.311), stdev = 1.451
  CI (99.9%): [79.186, 132.118] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 100000)

# Run progress: 65.63% complete, ETA 00:08:19
# Fork: 1 of 1
# Warmup Iteration   1: 111.765 ns/op
# Warmup Iteration   2: 110.918 ns/op
Iteration   1: 126.417 ns/op
Iteration   2: 125.194 ns/op
Iteration   3: 126.044 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  125.885 ±(99.9%) 11.439 ns/op [Average]
  (min, avg, max) = (125.194, 125.885, 126.417), stdev = 0.627
  CI (99.9%): [114.446, 137.324] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000000)

# Run progress: 67.19% complete, ETA 00:07:56
# Fork: 1 of 1
# Warmup Iteration   1: 121.020 ns/op
# Warmup Iteration   2: 125.951 ns/op
Iteration   1: 130.488 ns/op
Iteration   2: 171.276 ns/op
Iteration   3: 126.059 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  142.608 ±(99.9%) 454.747 ns/op [Average]
  (min, avg, max) = (126.059, 142.608, 171.276), stdev = 24.926
  CI (99.9%): [≈ 0, 597.355] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000)

# Run progress: 68.75% complete, ETA 00:07:35
# Fork: 1 of 1
# Warmup Iteration   1: 55.439 ns/op
# Warmup Iteration   2: 49.584 ns/op
Iteration   1: 50.812 ns/op
Iteration   2: 50.723 ns/op
Iteration   3: 51.704 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  51.080 ±(99.9%) 9.895 ns/op [Average]
  (min, avg, max) = (50.723, 51.080, 51.704), stdev = 0.542
  CI (99.9%): [41.185, 60.975] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 10000)

# Run progress: 70.31% complete, ETA 00:07:12
# Fork: 1 of 1
# Warmup Iteration   1: 49.988 ns/op
# Warmup Iteration   2: 46.997 ns/op
Iteration   1: 48.799 ns/op
Iteration   2: 49.302 ns/op
Iteration   3: 49.440 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  49.180 ±(99.9%) 6.157 ns/op [Average]
  (min, avg, max) = (48.799, 49.180, 49.440), stdev = 0.338
  CI (99.9%): [43.023, 55.337] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 100000)

# Run progress: 71.88% complete, ETA 00:06:49
# Fork: 1 of 1
# Warmup Iteration   1: 50.988 ns/op
# Warmup Iteration   2: 47.321 ns/op
Iteration   1: 48.375 ns/op
Iteration   2: 48.257 ns/op
Iteration   3: 49.402 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  48.678 ±(99.9%) 11.495 ns/op [Average]
  (min, avg, max) = (48.257, 48.678, 49.402), stdev = 0.630
  CI (99.9%): [37.183, 60.173] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000000)

# Run progress: 73.44% complete, ETA 00:06:26
# Fork: 1 of 1
# Warmup Iteration   1: 55.367 ns/op
# Warmup Iteration   2: 53.639 ns/op
Iteration   1: 71.526 ns/op
Iteration   2: 48.695 ns/op
Iteration   3: 48.711 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  56.311 ±(99.9%) 240.390 ns/op [Average]
  (min, avg, max) = (48.695, 56.311, 71.526), stdev = 13.177
  CI (99.9%): [≈ 0, 296.701] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000)

# Run progress: 75.00% complete, ETA 00:06:04
# Fork: 1 of 1
# Warmup Iteration   1: 87.058 ns/op
# Warmup Iteration   2: 78.703 ns/op
Iteration   1: 67.154 ns/op
Iteration   2: 67.169 ns/op
Iteration   3: 68.940 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  67.754 ±(99.9%) 18.734 ns/op [Average]
  (min, avg, max) = (67.154, 67.754, 68.940), stdev = 1.027
  CI (99.9%): [49.021, 86.488] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 10000)

# Run progress: 76.56% complete, ETA 00:05:41
# Fork: 1 of 1
# Warmup Iteration   1: 114.404 ns/op
# Warmup Iteration   2: 111.543 ns/op
Iteration   1: 69.386 ns/op
Iteration   2: 69.520 ns/op
Iteration   3: 69.818 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  69.575 ±(99.9%) 4.037 ns/op [Average]
  (min, avg, max) = (69.386, 69.575, 69.818), stdev = 0.221
  CI (99.9%): [65.538, 73.611] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 100000)

# Run progress: 78.13% complete, ETA 00:05:18
# Fork: 1 of 1
# Warmup Iteration   1: 79.597 ns/op
# Warmup Iteration   2: 76.318 ns/op
Iteration   1: 68.110 ns/op
Iteration   2: 67.428 ns/op
Iteration   3: 67.023 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  67.521 ±(99.9%) 10.026 ns/op [Average]
  (min, avg, max) = (67.023, 67.521, 68.110), stdev = 0.550
  CI (99.9%): [57.495, 77.546] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000000)

# Run progress: 79.69% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 100.102 ns/op
# Warmup Iteration   2: 98.025 ns/op
Iteration   1: 96.701 ns/op
Iteration   2: 63.056 ns/op
Iteration   3: 63.109 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  74.288 ±(99.9%) 354.109 ns/op [Average]
  (min, avg, max) = (63.056, 74.288, 96.701), stdev = 19.410
  CI (99.9%): [≈ 0, 428.397] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000)

# Run progress: 81.25% complete, ETA 00:04:33
# Fork: 1 of 1
# Warmup Iteration   1: 45.519 ns/op
# Warmup Iteration   2: 43.531 ns/op
Iteration   1: 43.930 ns/op
Iteration   2: 43.854 ns/op
Iteration   3: 44.783 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  44.189 ±(99.9%) 9.407 ns/op [Average]
  (min, avg, max) = (43.854, 44.189, 44.783), stdev = 0.516
  CI (99.9%): [34.781, 53.596] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 10000)

# Run progress: 82.81% complete, ETA 00:04:10
# Fork: 1 of 1
# Warmup Iteration   1: 50.235 ns/op
# Warmup Iteration   2: 47.027 ns/op
Iteration   1: 45.326 ns/op
Iteration   2: 47.134 ns/op
Iteration   3: 46.154 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  46.204 ±(99.9%) 16.514 ns/op [Average]
  (min, avg, max) = (45.326, 46.204, 47.134), stdev = 0.905
  CI (99.9%): [29.690, 62.719] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 100000)

# Run progress: 84.38% complete, ETA 00:03:47
# Fork: 1 of 1
# Warmup Iteration   1: 49.012 ns/op
# Warmup Iteration   2: 45.299 ns/op
Iteration   1: 44.785 ns/op
Iteration   2: 45.285 ns/op
Iteration   3: 44.931 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  45.000 ±(99.9%) 4.683 ns/op [Average]
  (min, avg, max) = (44.785, 45.000, 45.285), stdev = 0.257
  CI (99.9%): [40.318, 49.683] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000000)

# Run progress: 85.94% complete, ETA 00:03:24
# Fork: 1 of 1
# Warmup Iteration   1: 55.030 ns/op
# Warmup Iteration   2: 50.470 ns/op
Iteration   1: 65.148 ns/op
Iteration   2: 45.696 ns/op
Iteration   3: 46.292 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  52.379 ±(99.9%) 201.821 ns/op [Average]
  (min, avg, max) = (45.696, 52.379, 65.148), stdev = 11.062
  CI (99.9%): [≈ 0, 254.200] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000)

# Run progress: 87.50% complete, ETA 00:03:02
# Fork: 1 of 1
# Warmup Iteration   1: 253.734 ns/op
# Warmup Iteration   2: 249.436 ns/op
Iteration   1: 245.002 ns/op
Iteration   2: 250.926 ns/op
Iteration   3: 242.928 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  246.285 ±(99.9%) 75.724 ns/op [Average]
  (min, avg, max) = (242.928, 246.285, 250.926), stdev = 4.151
  CI (99.9%): [170.561, 322.009] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 10000)

# Run progress: 89.06% complete, ETA 00:02:39
# Fork: 1 of 1
# Warmup Iteration   1: 379.764 ns/op
# Warmup Iteration   2: 362.873 ns/op
Iteration   1: 354.329 ns/op
Iteration   2: 357.150 ns/op
Iteration   3: 355.397 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  355.625 ±(99.9%) 25.987 ns/op [Average]
  (min, avg, max) = (354.329, 355.625, 357.150), stdev = 1.424
  CI (99.9%): [329.638, 381.612] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 100000)

# Run progress: 90.63% complete, ETA 00:02:16
# Fork: 1 of 1
# Warmup Iteration   1: 455.053 ns/op
# Warmup Iteration   2: 437.761 ns/op
Iteration   1: 429.511 ns/op
Iteration   2: 417.537 ns/op
Iteration   3: 414.380 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  420.476 ±(99.9%) 145.623 ns/op [Average]
  (min, avg, max) = (414.380, 420.476, 429.511), stdev = 7.982
  CI (99.9%): [274.853, 566.099] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000000)

# Run progress: 92.19% complete, ETA 00:01:53
# Fork: 1 of 1
# Warmup Iteration   1: 550.134 ns/op
# Warmup Iteration   2: 536.420 ns/op
Iteration   1: 547.734 ns/op
Iteration   2: 519.774 ns/op
Iteration   3: 531.265 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  532.924 ±(99.9%) 256.395 ns/op [Average]
  (min, avg, max) = (519.774, 532.924, 547.734), stdev = 14.054
  CI (99.9%): [276.529, 789.319] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000)

# Run progress: 93.75% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: 184.899 ns/op
# Warmup Iteration   2: 178.271 ns/op
Iteration   1: 180.699 ns/op
Iteration   2: 181.515 ns/op
Iteration   3: 180.961 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  181.059 ±(99.9%) 7.605 ns/op [Average]
  (min, avg, max) = (180.699, 181.059, 181.515), stdev = 0.417
  CI (99.9%): [173.454, 188.664] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 10000)

# Run progress: 95.31% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 259.748 ns/op
# Warmup Iteration   2: 244.567 ns/op
Iteration   1: 248.986 ns/op
Iteration   2: 252.328 ns/op
Iteration   3: 248.751 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  250.021 ±(99.9%) 36.499 ns/op [Average]
  (min, avg, max) = (248.751, 250.021, 252.328), stdev = 2.001
  CI (99.9%): [213.523, 286.520] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 100000)

# Run progress: 96.88% complete, ETA 00:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 310.374 ns/op
# Warmup Iteration   2: 300.214 ns/op
Iteration   1: 305.029 ns/op
Iteration   2: 311.645 ns/op
Iteration   3: 310.949 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  309.208 ±(99.9%) 66.320 ns/op [Average]
  (min, avg, max) = (305.029, 309.208, 311.645), stdev = 3.635
  CI (99.9%): [242.887, 375.528] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 1.8.0_312, VM 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000000)

# Run progress: 98.44% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 423.819 ns/op
# Warmup Iteration   2: 411.729 ns/op
Iteration   1: 447.152 ns/op
Iteration   2: 437.224 ns/op
Iteration   3: 423.525 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  435.967 ±(99.9%) 216.442 ns/op [Average]
  (min, avg, max) = (423.525, 435.967, 447.152), stdev = 11.864
  CI (99.9%): [219.525, 652.409] (assumes normal distribution)


# Run complete. Total time: 00:24:17

Benchmark                                         (size)  Mode  Cnt    Score     Error  Units
SetMapJavaVsScalaBenchmarks.javaMapHit              1000  avgt    3  106.060 ±  25.251  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit             10000  avgt    3  107.612 ±  18.889  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit            100000  avgt    3  111.133 ±  13.012  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit           1000000  avgt    3  110.221 ± 404.637  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss             1000  avgt    3   71.369 ±  11.211  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss            10000  avgt    3   84.256 ±   5.040  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss           100000  avgt    3   73.583 ±   1.332  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss          1000000  avgt    3   66.857 ± 289.364  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit              1000  avgt    3  109.425 ±   3.663  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit             10000  avgt    3  110.594 ±   7.115  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit            100000  avgt    3  108.995 ±   8.947  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit           1000000  avgt    3   77.431 ± 354.564  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss             1000  avgt    3   87.184 ±  41.224  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss            10000  avgt    3   89.674 ±  15.168  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss           100000  avgt    3   80.388 ±  19.984  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss          1000000  avgt    3   62.913 ± 290.735  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit       1000  avgt    3  198.074 ±  11.873  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit      10000  avgt    3  208.911 ±  34.557  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit     100000  avgt    3  214.450 ±  16.850  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit    1000000  avgt    3  211.845 ±   7.316  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss      1000  avgt    3  251.313 ±   1.036  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss     10000  avgt    3  260.336 ±  28.503  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss    100000  avgt    3  253.995 ±  55.597  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss   1000000  avgt    3  263.093 ±  89.099  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit       1000  avgt    3  108.334 ±  26.473  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit      10000  avgt    3  128.604 ±   5.077  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit     100000  avgt    3  113.848 ±  26.474  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit    1000000  avgt    3   80.309 ± 227.309  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss      1000  avgt    3   88.349 ±  12.575  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss     10000  avgt    3   92.818 ±  13.761  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss    100000  avgt    3   89.838 ±   7.922  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss   1000000  avgt    3   69.641 ± 301.660  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit             1000  avgt    3  284.167 ±   5.137  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit            10000  avgt    3  313.687 ±  36.773  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit           100000  avgt    3  468.835 ±  97.639  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit          1000000  avgt    3  610.586 ±  52.774  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss            1000  avgt    3  215.637 ±  13.196  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss           10000  avgt    3  312.736 ±  21.593  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss          100000  avgt    3  389.931 ±  30.314  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss         1000000  avgt    3  517.472 ± 134.680  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit      1000  avgt    3  119.064 ±  25.868  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit     10000  avgt    3  105.652 ±  26.466  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit    100000  avgt    3  125.885 ±  11.439  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit   1000000  avgt    3  142.608 ± 454.747  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss     1000  avgt    3   51.080 ±   9.895  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss    10000  avgt    3   49.180 ±   6.157  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss   100000  avgt    3   48.678 ±  11.495  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss  1000000  avgt    3   56.311 ± 240.390  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit      1000  avgt    3   67.754 ±  18.734  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit     10000  avgt    3   69.575 ±   4.037  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit    100000  avgt    3   67.521 ±  10.026  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit   1000000  avgt    3   74.288 ± 354.109  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss     1000  avgt    3   44.189 ±   9.407  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss    10000  avgt    3   46.204 ±  16.514  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss   100000  avgt    3   45.000 ±   4.683  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss  1000000  avgt    3   52.379 ± 201.821  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit             1000  avgt    3  246.285 ±  75.724  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit            10000  avgt    3  355.625 ±  25.987  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit           100000  avgt    3  420.476 ± 145.623  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit          1000000  avgt    3  532.924 ± 256.395  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss            1000  avgt    3  181.059 ±   7.605  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss           10000  avgt    3  250.021 ±  36.499  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss          100000  avgt    3  309.208 ±  66.320  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss         1000000  avgt    3  435.967 ± 216.442  ns/op

Benchmark result is saved to /static/data/charts/set-map-java-vs-scala-2-13/jdk8.json
