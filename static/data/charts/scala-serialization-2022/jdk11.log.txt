# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 0.00% complete, ETA 02:10:00
# Fork: 1 of 1
# Warmup Iteration   1: 223740.238 ns/op
# Warmup Iteration   2: 32219.828 ns/op
# Warmup Iteration   3: 31612.691 ns/op
# Warmup Iteration   4: 29568.101 ns/op
# Warmup Iteration   5: 29576.299 ns/op
Iteration   1: 29510.857 ns/op
Iteration   2: 29840.883 ns/op
Iteration   3: 29867.783 ns/op
Iteration   4: 29821.061 ns/op
Iteration   5: 29578.098 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  29723.736 ±(99.9%) 639.928 ns/op [Average]
  (min, avg, max) = (29510.857, 29723.736, 29867.783), stdev = 166.187
  CI (99.9%): [29083.808, 30363.665] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 0.26% complete, ETA 02:29:41
# Fork: 1 of 1
# Warmup Iteration   1: 527019.407 ns/op
# Warmup Iteration   2: 74392.627 ns/op
# Warmup Iteration   3: 61093.119 ns/op
# Warmup Iteration   4: 62872.640 ns/op
# Warmup Iteration   5: 69418.243 ns/op
Iteration   1: 62989.162 ns/op
Iteration   2: 55534.596 ns/op
Iteration   3: 55565.137 ns/op
Iteration   4: 55250.713 ns/op
Iteration   5: 55207.342 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  56909.390 ±(99.9%) 13101.937 ns/op [Average]
  (min, avg, max) = (55207.342, 56909.390, 62989.162), stdev = 3402.532
  CI (99.9%): [43807.453, 70011.327] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 0.51% complete, ETA 02:29:09
# Fork: 1 of 1
# Warmup Iteration   1: 506689.902 ns/op
# Warmup Iteration   2: 126926.426 ns/op
# Warmup Iteration   3: 116647.374 ns/op
# Warmup Iteration   4: 112181.006 ns/op
# Warmup Iteration   5: 111624.720 ns/op
Iteration   1: 111861.949 ns/op
Iteration   2: 114920.749 ns/op
Iteration   3: 111869.116 ns/op
Iteration   4: 111453.833 ns/op
Iteration   5: 111393.224 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  112299.774 ±(99.9%) 5706.271 ns/op [Average]
  (min, avg, max) = (111393.224, 112299.774, 114920.749), stdev = 1481.901
  CI (99.9%): [106593.503, 118006.045] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 0.77% complete, ETA 02:28:19
# Fork: 1 of 1
# Warmup Iteration   1: 2110511.574 ns/op
# Warmup Iteration   2: 330681.033 ns/op
# Warmup Iteration   3: 271320.237 ns/op
# Warmup Iteration   4: 248722.559 ns/op
# Warmup Iteration   5: 248009.103 ns/op
Iteration   1: 249876.538 ns/op
Iteration   2: 249150.248 ns/op
Iteration   3: 248884.485 ns/op
Iteration   4: 249188.135 ns/op
Iteration   5: 249060.323 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  249231.946 ±(99.9%) 1459.028 ns/op [Average]
  (min, avg, max) = (248884.485, 249231.946, 249876.538), stdev = 378.905
  CI (99.9%): [247772.918, 250690.974] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 1.03% complete, ETA 02:27:49
# Fork: 1 of 1
# Warmup Iteration   1: 12649242.931 ns/op
# Warmup Iteration   2: 2627524.940 ns/op
# Warmup Iteration   3: 2341643.594 ns/op
# Warmup Iteration   4: 2217203.882 ns/op
# Warmup Iteration   5: 2275456.987 ns/op
Iteration   1: 2217401.615 ns/op
Iteration   2: 2227226.943 ns/op
Iteration   3: 2230310.659 ns/op
Iteration   4: 2232865.125 ns/op
Iteration   5: 2223171.794 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2226195.227 ±(99.9%) 23498.200 ns/op [Average]
  (min, avg, max) = (2217401.615, 2226195.227, 2232865.125), stdev = 6102.408
  CI (99.9%): [2202697.028, 2249693.427] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 1.28% complete, ETA 02:27:22
# Fork: 1 of 1
# Warmup Iteration   1: 142434.097 ns/op
# Warmup Iteration   2: 29105.714 ns/op
# Warmup Iteration   3: 26297.070 ns/op
# Warmup Iteration   4: 24782.010 ns/op
# Warmup Iteration   5: 24790.517 ns/op
Iteration   1: 24720.115 ns/op
Iteration   2: 24744.851 ns/op
Iteration   3: 24754.169 ns/op
Iteration   4: 24690.141 ns/op
Iteration   5: 24705.175 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  24722.890 ±(99.9%) 102.868 ns/op [Average]
  (min, avg, max) = (24690.141, 24722.890, 24754.169), stdev = 26.715
  CI (99.9%): [24620.022, 24825.759] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 1.54% complete, ETA 02:26:49
# Fork: 1 of 1
# Warmup Iteration   1: 158458.084 ns/op
# Warmup Iteration   2: 49922.874 ns/op
# Warmup Iteration   3: 50234.062 ns/op
# Warmup Iteration   4: 46676.967 ns/op
# Warmup Iteration   5: 46131.058 ns/op
Iteration   1: 46256.307 ns/op
Iteration   2: 46271.359 ns/op
Iteration   3: 46213.059 ns/op
Iteration   4: 46492.124 ns/op
Iteration   5: 46369.128 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  46320.395 ±(99.9%) 430.078 ns/op [Average]
  (min, avg, max) = (46213.059, 46320.395, 46492.124), stdev = 111.690
  CI (99.9%): [45890.317, 46750.474] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 1.79% complete, ETA 02:26:25
# Fork: 1 of 1
# Warmup Iteration   1: 542719.715 ns/op
# Warmup Iteration   2: 105743.196 ns/op
# Warmup Iteration   3: 98388.230 ns/op
# Warmup Iteration   4: 97249.010 ns/op
# Warmup Iteration   5: 93674.382 ns/op
Iteration   1: 93688.052 ns/op
Iteration   2: 93655.377 ns/op
Iteration   3: 92843.252 ns/op
Iteration   4: 92790.314 ns/op
Iteration   5: 92869.420 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  93169.283 ±(99.9%) 1770.082 ns/op [Average]
  (min, avg, max) = (92790.314, 93169.283, 93688.052), stdev = 459.685
  CI (99.9%): [91399.201, 94939.365] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 2.05% complete, ETA 02:26:00
# Fork: 1 of 1
# Warmup Iteration   1: 1212162.754 ns/op
# Warmup Iteration   2: 258568.206 ns/op
# Warmup Iteration   3: 210149.256 ns/op
# Warmup Iteration   4: 198660.989 ns/op
# Warmup Iteration   5: 199920.631 ns/op
Iteration   1: 198911.587 ns/op
Iteration   2: 199598.428 ns/op
Iteration   3: 199553.408 ns/op
Iteration   4: 198643.592 ns/op
Iteration   5: 203346.806 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  200010.764 ±(99.9%) 7353.047 ns/op [Average]
  (min, avg, max) = (198643.592, 200010.764, 203346.806), stdev = 1909.563
  CI (99.9%): [192657.717, 207363.812] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 2.31% complete, ETA 02:25:42
# Fork: 1 of 1
# Warmup Iteration   1: 11957531.193 ns/op
# Warmup Iteration   2: 2538301.850 ns/op
# Warmup Iteration   3: 2168345.365 ns/op
# Warmup Iteration   4: 2057696.787 ns/op
# Warmup Iteration   5: 2053920.843 ns/op
Iteration   1: 2055693.212 ns/op
Iteration   2: 2048708.065 ns/op
Iteration   3: 2053328.525 ns/op
Iteration   4: 2053405.770 ns/op
Iteration   5: 2072781.948 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2056783.504 ±(99.9%) 35797.406 ns/op [Average]
  (min, avg, max) = (2048708.065, 2056783.504, 2072781.948), stdev = 9296.473
  CI (99.9%): [2020986.098, 2092580.911] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 2.56% complete, ETA 02:25:19
# Fork: 1 of 1
# Warmup Iteration   1: 163850.691 ns/op
# Warmup Iteration   2: 30423.411 ns/op
# Warmup Iteration   3: 29169.631 ns/op
# Warmup Iteration   4: 27517.841 ns/op
# Warmup Iteration   5: 27686.567 ns/op
Iteration   1: 27465.985 ns/op
Iteration   2: 27462.545 ns/op
Iteration   3: 27410.105 ns/op
Iteration   4: 27469.283 ns/op
Iteration   5: 27638.403 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  27489.264 ±(99.9%) 334.383 ns/op [Average]
  (min, avg, max) = (27410.105, 27489.264, 27638.403), stdev = 86.838
  CI (99.9%): [27154.881, 27823.648] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 2.82% complete, ETA 02:24:50
# Fork: 1 of 1
# Warmup Iteration   1: 260145.883 ns/op
# Warmup Iteration   2: 59772.102 ns/op
# Warmup Iteration   3: 54283.323 ns/op
# Warmup Iteration   4: 53732.371 ns/op
# Warmup Iteration   5: 51628.715 ns/op
Iteration   1: 51286.084 ns/op
Iteration   2: 51420.703 ns/op
Iteration   3: 52416.282 ns/op
Iteration   4: 51349.441 ns/op
Iteration   5: 51303.884 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  51555.279 ±(99.9%) 1864.156 ns/op [Average]
  (min, avg, max) = (51286.084, 51555.279, 52416.282), stdev = 484.115
  CI (99.9%): [49691.123, 53419.435] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 3.08% complete, ETA 02:24:26
# Fork: 1 of 1
# Warmup Iteration   1: 708796.949 ns/op
# Warmup Iteration   2: 164262.985 ns/op
# Warmup Iteration   3: 113574.463 ns/op
# Warmup Iteration   4: 106034.704 ns/op
# Warmup Iteration   5: 106528.916 ns/op
Iteration   1: 106035.642 ns/op
Iteration   2: 106509.355 ns/op
Iteration   3: 105960.796 ns/op
Iteration   4: 106133.325 ns/op
Iteration   5: 106145.362 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  106156.896 ±(99.9%) 812.462 ns/op [Average]
  (min, avg, max) = (105960.796, 106156.896, 106509.355), stdev = 210.994
  CI (99.9%): [105344.434, 106969.357] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 3.33% complete, ETA 02:24:02
# Fork: 1 of 1
# Warmup Iteration   1: 1188149.057 ns/op
# Warmup Iteration   2: 261670.726 ns/op
# Warmup Iteration   3: 241451.550 ns/op
# Warmup Iteration   4: 225614.799 ns/op
# Warmup Iteration   5: 229116.919 ns/op
Iteration   1: 226347.227 ns/op
Iteration   2: 227070.148 ns/op
Iteration   3: 228934.605 ns/op
Iteration   4: 226602.783 ns/op
Iteration   5: 226559.522 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  227102.857 ±(99.9%) 4071.787 ns/op [Average]
  (min, avg, max) = (226347.227, 227102.857, 228934.605), stdev = 1057.430
  CI (99.9%): [223031.070, 231174.643] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 3.59% complete, ETA 02:23:37
# Fork: 1 of 1
# Warmup Iteration   1: 9171893.670 ns/op
# Warmup Iteration   2: 2458597.745 ns/op
# Warmup Iteration   3: 2311626.978 ns/op
# Warmup Iteration   4: 2214783.316 ns/op
# Warmup Iteration   5: 2215607.722 ns/op
Iteration   1: 2224912.878 ns/op
Iteration   2: 2210552.396 ns/op
Iteration   3: 2216075.143 ns/op
Iteration   4: 2211137.123 ns/op
Iteration   5: 2211184.541 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2214772.416 ±(99.9%) 23455.988 ns/op [Average]
  (min, avg, max) = (2210552.396, 2214772.416, 2224912.878), stdev = 6091.446
  CI (99.9%): [2191316.428, 2238228.404] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 3.85% complete, ETA 02:23:14
# Fork: 1 of 1
# Warmup Iteration   1: 16869.429 ns/op
# Warmup Iteration   2: 8789.951 ns/op
# Warmup Iteration   3: 8187.901 ns/op
# Warmup Iteration   4: 8108.590 ns/op
# Warmup Iteration   5: 8217.550 ns/op
Iteration   1: 8071.123 ns/op
Iteration   2: 8181.164 ns/op
Iteration   3: 8113.410 ns/op
Iteration   4: 8134.181 ns/op
Iteration   5: 8198.984 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  8139.772 ±(99.9%) 198.769 ns/op [Average]
  (min, avg, max) = (8071.123, 8139.772, 8198.984), stdev = 51.620
  CI (99.9%): [7941.003, 8338.542] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 4.10% complete, ETA 02:22:47
# Fork: 1 of 1
# Warmup Iteration   1: 36007.322 ns/op
# Warmup Iteration   2: 16590.223 ns/op
# Warmup Iteration   3: 16399.571 ns/op
# Warmup Iteration   4: 15569.242 ns/op
# Warmup Iteration   5: 16079.302 ns/op
Iteration   1: 15566.566 ns/op
Iteration   2: 15550.596 ns/op
Iteration   3: 15609.479 ns/op
Iteration   4: 15560.693 ns/op
Iteration   5: 15628.040 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  15583.075 ±(99.9%) 129.834 ns/op [Average]
  (min, avg, max) = (15550.596, 15583.075, 15628.040), stdev = 33.718
  CI (99.9%): [15453.240, 15712.909] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 4.36% complete, ETA 02:22:20
# Fork: 1 of 1
# Warmup Iteration   1: 117679.361 ns/op
# Warmup Iteration   2: 33120.560 ns/op
# Warmup Iteration   3: 32859.024 ns/op
# Warmup Iteration   4: 30976.201 ns/op
# Warmup Iteration   5: 30996.319 ns/op
Iteration   1: 30636.406 ns/op
Iteration   2: 30700.252 ns/op
Iteration   3: 31039.161 ns/op
Iteration   4: 31086.407 ns/op
Iteration   5: 31051.425 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  30902.730 ±(99.9%) 831.211 ns/op [Average]
  (min, avg, max) = (30636.406, 30902.730, 31086.407), stdev = 215.863
  CI (99.9%): [30071.519, 31733.941] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 4.62% complete, ETA 02:21:54
# Fork: 1 of 1
# Warmup Iteration   1: 159566.330 ns/op
# Warmup Iteration   2: 71664.530 ns/op
# Warmup Iteration   3: 68375.489 ns/op
# Warmup Iteration   4: 66741.307 ns/op
# Warmup Iteration   5: 67203.312 ns/op
Iteration   1: 66847.941 ns/op
Iteration   2: 66404.966 ns/op
Iteration   3: 66185.235 ns/op
Iteration   4: 66439.812 ns/op
Iteration   5: 66361.725 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  66447.936 ±(99.9%) 939.983 ns/op [Average]
  (min, avg, max) = (66185.235, 66447.936, 66847.941), stdev = 244.111
  CI (99.9%): [65507.952, 67387.919] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 4.87% complete, ETA 02:21:29
# Fork: 1 of 1
# Warmup Iteration   1: 1257254.333 ns/op
# Warmup Iteration   2: 730341.765 ns/op
# Warmup Iteration   3: 650940.661 ns/op
# Warmup Iteration   4: 644431.097 ns/op
# Warmup Iteration   5: 659715.324 ns/op
Iteration   1: 637946.062 ns/op
Iteration   2: 639890.932 ns/op
Iteration   3: 639744.980 ns/op
Iteration   4: 646271.495 ns/op
Iteration   5: 644578.961 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  641686.486 ±(99.9%) 13664.762 ns/op [Average]
  (min, avg, max) = (637946.062, 641686.486, 646271.495), stdev = 3548.695
  CI (99.9%): [628021.724, 655351.248] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 5.13% complete, ETA 02:21:04
# Fork: 1 of 1
# Warmup Iteration   1: 27599.494 ns/op
# Warmup Iteration   2: 8734.455 ns/op
# Warmup Iteration   3: 7948.329 ns/op
# Warmup Iteration   4: 7668.835 ns/op
# Warmup Iteration   5: 7680.346 ns/op
Iteration   1: 7649.854 ns/op
Iteration   2: 7688.389 ns/op
Iteration   3: 7849.134 ns/op
Iteration   4: 7621.642 ns/op
Iteration   5: 7600.347 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  7681.873 ±(99.9%) 381.768 ns/op [Average]
  (min, avg, max) = (7600.347, 7681.873, 7849.134), stdev = 99.144
  CI (99.9%): [7300.105, 8063.641] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 5.38% complete, ETA 02:20:40
# Fork: 1 of 1
# Warmup Iteration   1: 60611.308 ns/op
# Warmup Iteration   2: 17063.892 ns/op
# Warmup Iteration   3: 17172.090 ns/op
# Warmup Iteration   4: 14734.594 ns/op
# Warmup Iteration   5: 14713.670 ns/op
Iteration   1: 14793.093 ns/op
Iteration   2: 14960.614 ns/op
Iteration   3: 14699.577 ns/op
Iteration   4: 14759.185 ns/op
Iteration   5: 14642.639 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  14771.021 ±(99.9%) 464.314 ns/op [Average]
  (min, avg, max) = (14642.639, 14771.021, 14960.614), stdev = 120.581
  CI (99.9%): [14306.708, 15235.335] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 5.64% complete, ETA 02:20:15
# Fork: 1 of 1
# Warmup Iteration   1: 148457.746 ns/op
# Warmup Iteration   2: 38173.076 ns/op
# Warmup Iteration   3: 28317.237 ns/op
# Warmup Iteration   4: 27863.213 ns/op
# Warmup Iteration   5: 27912.740 ns/op
Iteration   1: 27871.070 ns/op
Iteration   2: 28145.745 ns/op
Iteration   3: 27976.076 ns/op
Iteration   4: 27969.474 ns/op
Iteration   5: 27914.693 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  27975.412 ±(99.9%) 402.125 ns/op [Average]
  (min, avg, max) = (27871.070, 27975.412, 28145.745), stdev = 104.431
  CI (99.9%): [27573.287, 28377.537] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 5.90% complete, ETA 02:19:52
# Fork: 1 of 1
# Warmup Iteration   1: 256008.998 ns/op
# Warmup Iteration   2: 75427.947 ns/op
# Warmup Iteration   3: 59369.591 ns/op
# Warmup Iteration   4: 59197.253 ns/op
# Warmup Iteration   5: 59310.897 ns/op
Iteration   1: 59180.475 ns/op
Iteration   2: 59840.613 ns/op
Iteration   3: 59205.231 ns/op
Iteration   4: 59284.717 ns/op
Iteration   5: 59409.367 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  59384.081 ±(99.9%) 1041.057 ns/op [Average]
  (min, avg, max) = (59180.475, 59384.081, 59840.613), stdev = 270.359
  CI (99.9%): [58343.023, 60425.138] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 6.15% complete, ETA 02:19:27
# Fork: 1 of 1
# Warmup Iteration   1: 1372371.199 ns/op
# Warmup Iteration   2: 670499.887 ns/op
# Warmup Iteration   3: 591721.864 ns/op
# Warmup Iteration   4: 604204.105 ns/op
# Warmup Iteration   5: 587407.263 ns/op
Iteration   1: 564183.894 ns/op
Iteration   2: 572873.575 ns/op
Iteration   3: 564265.074 ns/op
Iteration   4: 562715.520 ns/op
Iteration   5: 569346.360 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  566676.885 ±(99.9%) 16478.024 ns/op [Average]
  (min, avg, max) = (562715.520, 566676.885, 572873.575), stdev = 4279.291
  CI (99.9%): [550198.860, 583154.909] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 6.41% complete, ETA 02:19:03
# Fork: 1 of 1
# Warmup Iteration   1: 27274.857 ns/op
# Warmup Iteration   2: 11761.340 ns/op
# Warmup Iteration   3: 10306.049 ns/op
# Warmup Iteration   4: 10696.991 ns/op
# Warmup Iteration   5: 10530.816 ns/op
Iteration   1: 10175.833 ns/op
Iteration   2: 10416.747 ns/op
Iteration   3: 10149.818 ns/op
Iteration   4: 10159.600 ns/op
Iteration   5: 10179.083 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  10216.216 ±(99.9%) 434.100 ns/op [Average]
  (min, avg, max) = (10149.818, 10216.216, 10416.747), stdev = 112.734
  CI (99.9%): [9782.116, 10650.316] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 6.67% complete, ETA 02:18:40
# Fork: 1 of 1
# Warmup Iteration   1: 79990.838 ns/op
# Warmup Iteration   2: 24725.339 ns/op
# Warmup Iteration   3: 19328.433 ns/op
# Warmup Iteration   4: 19202.670 ns/op
# Warmup Iteration   5: 19133.066 ns/op
Iteration   1: 19318.876 ns/op
Iteration   2: 19497.524 ns/op
Iteration   3: 19120.791 ns/op
Iteration   4: 19121.714 ns/op
Iteration   5: 19147.410 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  19241.263 ±(99.9%) 636.544 ns/op [Average]
  (min, avg, max) = (19120.791, 19241.263, 19497.524), stdev = 165.308
  CI (99.9%): [18604.719, 19877.806] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 6.92% complete, ETA 02:18:15
# Fork: 1 of 1
# Warmup Iteration   1: 138249.476 ns/op
# Warmup Iteration   2: 49177.410 ns/op
# Warmup Iteration   3: 40470.893 ns/op
# Warmup Iteration   4: 39522.466 ns/op
# Warmup Iteration   5: 39020.197 ns/op
Iteration   1: 39043.015 ns/op
Iteration   2: 39010.326 ns/op
Iteration   3: 38956.609 ns/op
Iteration   4: 38948.691 ns/op
Iteration   5: 38957.383 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  38983.205 ±(99.9%) 159.675 ns/op [Average]
  (min, avg, max) = (38948.691, 38983.205, 39043.015), stdev = 41.467
  CI (99.9%): [38823.529, 39142.880] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 7.18% complete, ETA 02:17:52
# Fork: 1 of 1
# Warmup Iteration   1: 273452.089 ns/op
# Warmup Iteration   2: 105254.030 ns/op
# Warmup Iteration   3: 87222.720 ns/op
# Warmup Iteration   4: 87031.422 ns/op
# Warmup Iteration   5: 87347.820 ns/op
Iteration   1: 86731.622 ns/op
Iteration   2: 86657.530 ns/op
Iteration   3: 86400.376 ns/op
Iteration   4: 86551.756 ns/op
Iteration   5: 87585.244 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  86785.305 ±(99.9%) 1787.364 ns/op [Average]
  (min, avg, max) = (86400.376, 86785.305, 87585.244), stdev = 464.173
  CI (99.9%): [84997.941, 88572.670] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 7.44% complete, ETA 02:17:28
# Fork: 1 of 1
# Warmup Iteration   1: 1888464.958 ns/op
# Warmup Iteration   2: 1118290.444 ns/op
# Warmup Iteration   3: 961517.830 ns/op
# Warmup Iteration   4: 911668.392 ns/op
# Warmup Iteration   5: 919092.080 ns/op
Iteration   1: 901657.760 ns/op
Iteration   2: 896952.426 ns/op
Iteration   3: 897002.713 ns/op
Iteration   4: 896893.560 ns/op
Iteration   5: 896014.735 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  897704.239 ±(99.9%) 8653.099 ns/op [Average]
  (min, avg, max) = (896014.735, 897704.239, 901657.760), stdev = 2247.182
  CI (99.9%): [889051.140, 906357.338] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 7.69% complete, ETA 02:17:05
# Fork: 1 of 1
# Warmup Iteration   1: 459458.264 ns/op
# Warmup Iteration   2: 187863.520 ns/op
# Warmup Iteration   3: 148498.801 ns/op
# Warmup Iteration   4: 141495.793 ns/op
# Warmup Iteration   5: 140919.788 ns/op
Iteration   1: 144468.595 ns/op
Iteration   2: 141826.858 ns/op
Iteration   3: 140477.139 ns/op
Iteration   4: 140011.705 ns/op
Iteration   5: 139821.100 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  141321.080 ±(99.9%) 7416.690 ns/op [Average]
  (min, avg, max) = (139821.100, 141321.080, 144468.595), stdev = 1926.091
  CI (99.9%): [133904.390, 148737.769] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 7.95% complete, ETA 02:16:40
# Fork: 1 of 1
# Warmup Iteration   1: 873265.641 ns/op
# Warmup Iteration   2: 337216.574 ns/op
# Warmup Iteration   3: 267248.168 ns/op
# Warmup Iteration   4: 253162.199 ns/op
# Warmup Iteration   5: 250580.129 ns/op
Iteration   1: 251146.246 ns/op
Iteration   2: 251085.119 ns/op
Iteration   3: 250015.457 ns/op
Iteration   4: 251651.848 ns/op
Iteration   5: 251196.871 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  251019.108 ±(99.9%) 2326.213 ns/op [Average]
  (min, avg, max) = (250015.457, 251019.108, 251651.848), stdev = 604.110
  CI (99.9%): [248692.895, 253345.320] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 8.21% complete, ETA 02:16:16
# Fork: 1 of 1
# Warmup Iteration   1: 2286941.968 ns/op
# Warmup Iteration   2: 838817.538 ns/op
# Warmup Iteration   3: 641400.266 ns/op
# Warmup Iteration   4: 601246.383 ns/op
# Warmup Iteration   5: 602818.047 ns/op
Iteration   1: 608652.372 ns/op
Iteration   2: 606710.847 ns/op
Iteration   3: 601327.731 ns/op
Iteration   4: 600086.033 ns/op
Iteration   5: 600312.097 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  603417.816 ±(99.9%) 15325.290 ns/op [Average]
  (min, avg, max) = (600086.033, 603417.816, 608652.372), stdev = 3979.929
  CI (99.9%): [588092.526, 618743.106] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 8.46% complete, ETA 02:15:53
# Fork: 1 of 1
# Warmup Iteration   1: 4561717.607 ns/op
# Warmup Iteration   2: 1733638.553 ns/op
# Warmup Iteration   3: 1558697.751 ns/op
# Warmup Iteration   4: 1437696.584 ns/op
# Warmup Iteration   5: 1442083.800 ns/op
Iteration   1: 1434223.878 ns/op
Iteration   2: 1437354.301 ns/op
Iteration   3: 1435723.533 ns/op
Iteration   4: 1429771.415 ns/op
Iteration   5: 1440207.951 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1435456.216 ±(99.9%) 14924.510 ns/op [Average]
  (min, avg, max) = (1429771.415, 1435456.216, 1440207.951), stdev = 3875.848
  CI (99.9%): [1420531.705, 1450380.726] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 8.72% complete, ETA 02:15:30
# Fork: 1 of 1
# Warmup Iteration   1: 37022633.957 ns/op
# Warmup Iteration   2: 16311376.094 ns/op
# Warmup Iteration   3: 13027925.026 ns/op
# Warmup Iteration   4: 12512085.036 ns/op
# Warmup Iteration   5: 12447155.695 ns/op
Iteration   1: 12382335.696 ns/op
Iteration   2: 12417645.694 ns/op
Iteration   3: 12409786.457 ns/op
Iteration   4: 12442159.985 ns/op
Iteration   5: 12415317.771 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12413449.121 ±(99.9%) 82292.079 ns/op [Average]
  (min, avg, max) = (12382335.696, 12413449.121, 12442159.985), stdev = 21370.992
  CI (99.9%): [12331157.041, 12495741.200] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 8.97% complete, ETA 02:15:08
# Fork: 1 of 1
# Warmup Iteration   1: 16738.998 ns/op
# Warmup Iteration   2: 7745.014 ns/op
# Warmup Iteration   3: 6884.097 ns/op
# Warmup Iteration   4: 6995.099 ns/op
# Warmup Iteration   5: 6862.115 ns/op
Iteration   1: 6872.137 ns/op
Iteration   2: 6940.407 ns/op
Iteration   3: 6884.425 ns/op
Iteration   4: 6877.386 ns/op
Iteration   5: 6964.555 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  6907.782 ±(99.9%) 161.402 ns/op [Average]
  (min, avg, max) = (6872.137, 6907.782, 6964.555), stdev = 41.916
  CI (99.9%): [6746.380, 7069.184] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 9.23% complete, ETA 02:14:44
# Fork: 1 of 1
# Warmup Iteration   1: 30614.989 ns/op
# Warmup Iteration   2: 13816.102 ns/op
# Warmup Iteration   3: 12925.609 ns/op
# Warmup Iteration   4: 12850.472 ns/op
# Warmup Iteration   5: 12818.878 ns/op
Iteration   1: 12870.936 ns/op
Iteration   2: 12891.710 ns/op
Iteration   3: 12852.909 ns/op
Iteration   4: 12958.231 ns/op
Iteration   5: 13050.302 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12924.818 ±(99.9%) 310.645 ns/op [Average]
  (min, avg, max) = (12852.909, 12924.818, 13050.302), stdev = 80.674
  CI (99.9%): [12614.172, 13235.463] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 9.49% complete, ETA 02:14:20
# Fork: 1 of 1
# Warmup Iteration   1: 57985.114 ns/op
# Warmup Iteration   2: 26063.697 ns/op
# Warmup Iteration   3: 23178.539 ns/op
# Warmup Iteration   4: 22796.546 ns/op
# Warmup Iteration   5: 22701.522 ns/op
Iteration   1: 22785.679 ns/op
Iteration   2: 22712.618 ns/op
Iteration   3: 22716.260 ns/op
Iteration   4: 22801.584 ns/op
Iteration   5: 22779.969 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  22759.222 ±(99.9%) 160.421 ns/op [Average]
  (min, avg, max) = (22712.618, 22759.222, 22801.584), stdev = 41.661
  CI (99.9%): [22598.801, 22919.643] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 9.74% complete, ETA 02:13:56
# Fork: 1 of 1
# Warmup Iteration   1: 130910.745 ns/op
# Warmup Iteration   2: 54518.101 ns/op
# Warmup Iteration   3: 47740.359 ns/op
# Warmup Iteration   4: 47893.342 ns/op
# Warmup Iteration   5: 47178.275 ns/op
Iteration   1: 47332.728 ns/op
Iteration   2: 47562.503 ns/op
Iteration   3: 47198.376 ns/op
Iteration   4: 47088.440 ns/op
Iteration   5: 47164.417 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  47269.293 ±(99.9%) 717.120 ns/op [Average]
  (min, avg, max) = (47088.440, 47269.293, 47562.503), stdev = 186.234
  CI (99.9%): [46552.172, 47986.413] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 10.00% complete, ETA 02:13:32
# Fork: 1 of 1
# Warmup Iteration   1: 816692.985 ns/op
# Warmup Iteration   2: 523976.753 ns/op
# Warmup Iteration   3: 490959.988 ns/op
# Warmup Iteration   4: 450820.427 ns/op
# Warmup Iteration   5: 452266.967 ns/op
Iteration   1: 451497.730 ns/op
Iteration   2: 460039.194 ns/op
Iteration   3: 450907.739 ns/op
Iteration   4: 451238.615 ns/op
Iteration   5: 448090.114 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  452354.678 ±(99.9%) 17361.225 ns/op [Average]
  (min, avg, max) = (448090.114, 452354.678, 460039.194), stdev = 4508.655
  CI (99.9%): [434993.453, 469715.903] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 10.26% complete, ETA 02:13:09
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
60261.565 ns/op
# Warmup Iteration   2: 67643.602 ns/op
# Warmup Iteration   3: 64747.094 ns/op
# Warmup Iteration   4: 61247.477 ns/op
# Warmup Iteration   5: 62118.178 ns/op
Iteration   1: 62739.742 ns/op
Iteration   2: 69479.020 ns/op
Iteration   3: 63740.297 ns/op
Iteration   4: 63072.537 ns/op
Iteration   5: 63251.999 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  64456.719 ±(99.9%) 10900.126 ns/op [Average]
  (min, avg, max) = (62739.742, 64456.719, 69479.020), stdev = 2830.728
  CI (99.9%): [53556.593, 75356.845] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 10.51% complete, ETA 02:12:47
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
108618.777 ns/op
# Warmup Iteration   2: 134597.179 ns/op
# Warmup Iteration   3: 124388.406 ns/op
# Warmup Iteration   4: 121743.389 ns/op
# Warmup Iteration   5: 120691.890 ns/op
Iteration   1: 122461.086 ns/op
Iteration   2: 123868.669 ns/op
Iteration   3: 121282.422 ns/op
Iteration   4: 125831.947 ns/op
Iteration   5: 126930.880 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  124075.001 ±(99.9%) 8966.442 ns/op [Average]
  (min, avg, max) = (121282.422, 124075.001, 126930.880), stdev = 2328.556
  CI (99.9%): [115108.559, 133041.442] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 10.77% complete, ETA 02:12:25
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
341212.961 ns/op
# Warmup Iteration   2: 259759.829 ns/op
# Warmup Iteration   3: 276832.402 ns/op
# Warmup Iteration   4: 264330.220 ns/op
# Warmup Iteration   5: 260378.815 ns/op
Iteration   1: 257671.803 ns/op
Iteration   2: 250176.255 ns/op
Iteration   3: 267973.082 ns/op
Iteration   4: 248693.215 ns/op
Iteration   5: 260167.298 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  256936.331 ±(99.9%) 30224.337 ns/op [Average]
  (min, avg, max) = (248693.215, 256936.331, 267973.082), stdev = 7849.164
  CI (99.9%): [226711.993, 287160.668] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 11.03% complete, ETA 02:12:02
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
717851.812 ns/op
# Warmup Iteration   2: 585091.712 ns/op
# Warmup Iteration   3: 572298.753 ns/op
# Warmup Iteration   4: 481499.100 ns/op
# Warmup Iteration   5: 532229.168 ns/op
Iteration   1: 580647.298 ns/op
Iteration   2: 602120.723 ns/op
Iteration   3: 573917.058 ns/op
Iteration   4: 624760.222 ns/op
Iteration   5: 583752.700 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  593039.600 ±(99.9%) 79246.399 ns/op [Average]
  (min, avg, max) = (573917.058, 593039.600, 624760.222), stdev = 20580.038
  CI (99.9%): [513793.201, 672285.999] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 11.28% complete, ETA 02:11:39
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5024311.706 ns/op
# Warmup Iteration   2: 4867172.790 ns/op
# Warmup Iteration   3: 5359891.378 ns/op
# Warmup Iteration   4: 6034120.614 ns/op
# Warmup Iteration   5: 5800965.631 ns/op
Iteration   1: 5360885.206 ns/op
Iteration   2: 5077835.429 ns/op
Iteration   3: 4864387.699 ns/op
Iteration   4: 5456357.519 ns/op
Iteration   5: 5015666.867 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  5155026.544 ±(99.9%) 949144.033 ns/op [Average]
  (min, avg, max) = (4864387.699, 5155026.544, 5456357.519), stdev = 246489.691
  CI (99.9%): [4205882.511, 6104170.578] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 11.54% complete, ETA 02:11:17
# Fork: 1 of 1
# Warmup Iteration   1: 18341.364 ns/op
# Warmup Iteration   2: 10569.615 ns/op
# Warmup Iteration   3: 10513.491 ns/op
# Warmup Iteration   4: 10731.947 ns/op
# Warmup Iteration   5: 11465.430 ns/op
Iteration   1: 10780.322 ns/op
Iteration   2: 10740.473 ns/op
Iteration   3: 10791.699 ns/op
Iteration   4: 10870.590 ns/op
Iteration   5: 10864.137 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  10809.444 ±(99.9%) 216.547 ns/op [Average]
  (min, avg, max) = (10740.473, 10809.444, 10870.590), stdev = 56.236
  CI (99.9%): [10592.898, 11025.991] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 11.79% complete, ETA 02:10:53
# Fork: 1 of 1
# Warmup Iteration   1: 57840.836 ns/op
# Warmup Iteration   2: 18381.258 ns/op
# Warmup Iteration   3: 18624.777 ns/op
# Warmup Iteration   4: 18410.732 ns/op
# Warmup Iteration   5: 18344.433 ns/op
Iteration   1: 18451.628 ns/op
Iteration   2: 18488.014 ns/op
Iteration   3: 18504.231 ns/op
Iteration   4: 18402.506 ns/op
Iteration   5: 18436.736 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  18456.623 ±(99.9%) 156.427 ns/op [Average]
  (min, avg, max) = (18402.506, 18456.623, 18504.231), stdev = 40.624
  CI (99.9%): [18300.196, 18613.049] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 12.05% complete, ETA 02:10:29
# Fork: 1 of 1
# Warmup Iteration   1: 94981.345 ns/op
# Warmup Iteration   2: 36848.099 ns/op
# Warmup Iteration   3: 36406.907 ns/op
# Warmup Iteration   4: 36951.136 ns/op
# Warmup Iteration   5: 35664.692 ns/op
Iteration   1: 35570.102 ns/op
Iteration   2: 35414.765 ns/op
Iteration   3: 35397.121 ns/op
Iteration   4: 35438.219 ns/op
Iteration   5: 35511.563 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  35466.354 ±(99.9%) 279.362 ns/op [Average]
  (min, avg, max) = (35397.121, 35466.354, 35570.102), stdev = 72.550
  CI (99.9%): [35186.992, 35745.717] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 12.31% complete, ETA 02:10:06
# Fork: 1 of 1
# Warmup Iteration   1: 190242.644 ns/op
# Warmup Iteration   2: 84973.364 ns/op
# Warmup Iteration   3: 72977.966 ns/op
# Warmup Iteration   4: 79159.269 ns/op
# Warmup Iteration   5: 77352.287 ns/op
Iteration   1: 76882.915 ns/op
Iteration   2: 76671.115 ns/op
Iteration   3: 76247.198 ns/op
Iteration   4: 76635.376 ns/op
Iteration   5: 76701.775 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  76627.676 ±(99.9%) 897.596 ns/op [Average]
  (min, avg, max) = (76247.198, 76627.676, 76882.915), stdev = 233.103
  CI (99.9%): [75730.080, 77525.272] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 12.56% complete, ETA 02:09:42
# Fork: 1 of 1
# Warmup Iteration   1: 1446508.070 ns/op
# Warmup Iteration   2: 818491.835 ns/op
# Warmup Iteration   3: 772032.897 ns/op
# Warmup Iteration   4: 770988.869 ns/op
# Warmup Iteration   5: 765515.182 ns/op
Iteration   1: 762610.471 ns/op
Iteration   2: 761472.441 ns/op
Iteration   3: 759547.239 ns/op
Iteration   4: 763069.625 ns/op
Iteration   5: 763431.621 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  762026.279 ±(99.9%) 6044.779 ns/op [Average]
  (min, avg, max) = (759547.239, 762026.279, 763431.621), stdev = 1569.810
  CI (99.9%): [755981.500, 768071.059] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 12.82% complete, ETA 02:09:19
# Fork: 1 of 1
# Warmup Iteration   1: 430465.179 ns/op
# Warmup Iteration   2: 212517.460 ns/op
# Warmup Iteration   3: 191628.219 ns/op
# Warmup Iteration   4: 193496.864 ns/op
# Warmup Iteration   5: 186601.633 ns/op
Iteration   1: 186825.865 ns/op
Iteration   2: 186691.408 ns/op
Iteration   3: 183934.461 ns/op
Iteration   4: 186122.840 ns/op
Iteration   5: 185483.145 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  185811.544 ±(99.9%) 4528.069 ns/op [Average]
  (min, avg, max) = (183934.461, 185811.544, 186825.865), stdev = 1175.925
  CI (99.9%): [181283.474, 190339.613] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 13.08% complete, ETA 02:08:59
# Fork: 1 of 1
# Warmup Iteration   1: 690427.827 ns/op
# Warmup Iteration   2: 336465.531 ns/op
# Warmup Iteration   3: 315621.593 ns/op
# Warmup Iteration   4: 285600.830 ns/op
# Warmup Iteration   5: 283544.101 ns/op
Iteration   1: 280435.898 ns/op
Iteration   2: 279152.075 ns/op
Iteration   3: 276266.285 ns/op
Iteration   4: 275827.029 ns/op
Iteration   5: 277594.783 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  277855.214 ±(99.9%) 7468.620 ns/op [Average]
  (min, avg, max) = (275827.029, 277855.214, 280435.898), stdev = 1939.577
  CI (99.9%): [270386.594, 285323.834] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 13.33% complete, ETA 02:08:38
# Fork: 1 of 1
# Warmup Iteration   1: 1454283.688 ns/op
# Warmup Iteration   2: 672343.419 ns/op
# Warmup Iteration   3: 651767.941 ns/op
# Warmup Iteration   4: 631366.190 ns/op
# Warmup Iteration   5: 562454.163 ns/op
Iteration   1: 557141.203 ns/op
Iteration   2: 556964.837 ns/op
Iteration   3: 550051.219 ns/op
Iteration   4: 546903.092 ns/op
Iteration   5: 549247.884 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  552061.647 ±(99.9%) 18103.448 ns/op [Average]
  (min, avg, max) = (546903.092, 552061.647, 557141.203), stdev = 4701.408
  CI (99.9%): [533958.199, 570165.095] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 13.59% complete, ETA 02:08:16
# Fork: 1 of 1
# Warmup Iteration   1: 3213268.274 ns/op
# Warmup Iteration   2: 1449543.183 ns/op
# Warmup Iteration   3: 1414324.783 ns/op
# Warmup Iteration   4: 1371719.521 ns/op
# Warmup Iteration   5: 1323893.780 ns/op
Iteration   1: 1325077.574 ns/op
Iteration   2: 1273806.138 ns/op
Iteration   3: 1274074.101 ns/op
Iteration   4: 1285562.246 ns/op
Iteration   5: 1272429.789 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1286189.969 ±(99.9%) 86148.982 ns/op [Average]
  (min, avg, max) = (1272429.789, 1286189.969, 1325077.574), stdev = 22372.617
  CI (99.9%): [1200040.988, 1372338.951] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 13.85% complete, ETA 02:07:55
# Fork: 1 of 1
# Warmup Iteration   1: 25397563.300 ns/op
# Warmup Iteration   2: 13536345.087 ns/op
# Warmup Iteration   3: 12926120.334 ns/op
# Warmup Iteration   4: 13112631.568 ns/op
# Warmup Iteration   5: 12496970.556 ns/op
Iteration   1: 12548148.464 ns/op
Iteration   2: 12448589.892 ns/op
Iteration   3: 12627473.120 ns/op
Iteration   4: 12279817.820 ns/op
Iteration   5: 12533225.629 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12487450.985 ±(99.9%) 509419.294 ns/op [Average]
  (min, avg, max) = (12279817.820, 12487450.985, 12627473.120), stdev = 132294.573
  CI (99.9%): [11978031.691, 12996870.279] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 14.10% complete, ETA 02:07:35
# Fork: 1 of 1
# Warmup Iteration   1: 103839.171 ns/op
# Warmup Iteration   2: 41571.586 ns/op
# Warmup Iteration   3: 38591.629 ns/op
# Warmup Iteration   4: 38015.986 ns/op
# Warmup Iteration   5: 38968.316 ns/op
Iteration   1: 37415.345 ns/op
Iteration   2: 37433.557 ns/op
Iteration   3: 37450.918 ns/op
Iteration   4: 37513.998 ns/op
Iteration   5: 37434.591 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  37449.682 ±(99.9%) 146.688 ns/op [Average]
  (min, avg, max) = (37415.345, 37449.682, 37513.998), stdev = 38.095
  CI (99.9%): [37302.994, 37596.370] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 14.36% complete, ETA 02:07:12
# Fork: 1 of 1
# Warmup Iteration   1: 202875.351 ns/op
# Warmup Iteration   2: 94789.769 ns/op
# Warmup Iteration   3: 76226.874 ns/op
# Warmup Iteration   4: 73438.542 ns/op
# Warmup Iteration   5: 74895.604 ns/op
Iteration   1: 73541.976 ns/op
Iteration   2: 72983.745 ns/op
Iteration   3: 72822.363 ns/op
Iteration   4: 73003.548 ns/op
Iteration   5: 72830.338 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  73036.394 ±(99.9%) 1135.339 ns/op [Average]
  (min, avg, max) = (72822.363, 73036.394, 73541.976), stdev = 294.844
  CI (99.9%): [71901.055, 74171.733] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 14.62% complete, ETA 02:06:49
# Fork: 1 of 1
# Warmup Iteration   1: 564635.863 ns/op
# Warmup Iteration   2: 186803.454 ns/op
# Warmup Iteration   3: 163656.237 ns/op
# Warmup Iteration   4: 162447.351 ns/op
# Warmup Iteration   5: 157726.620 ns/op
Iteration   1: 158364.014 ns/op
Iteration   2: 158349.388 ns/op
Iteration   3: 157535.899 ns/op
Iteration   4: 157445.107 ns/op
Iteration   5: 157175.147 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  157773.911 ±(99.9%) 2111.434 ns/op [Average]
  (min, avg, max) = (157175.147, 157773.911, 158364.014), stdev = 548.333
  CI (99.9%): [155662.477, 159885.345] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 14.87% complete, ETA 02:06:26
# Fork: 1 of 1
# Warmup Iteration   1: 1300109.761 ns/op
# Warmup Iteration   2: 401417.517 ns/op
# Warmup Iteration   3: 376970.328 ns/op
# Warmup Iteration   4: 349026.785 ns/op
# Warmup Iteration   5: 346315.420 ns/op
Iteration   1: 347460.715 ns/op
Iteration   2: 347000.714 ns/op
Iteration   3: 346204.187 ns/op
Iteration   4: 347017.037 ns/op
Iteration   5: 353386.223 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  348213.775 ±(99.9%) 11269.873 ns/op [Average]
  (min, avg, max) = (346204.187, 348213.775, 353386.223), stdev = 2926.750
  CI (99.9%): [336943.902, 359483.648] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 15.13% complete, ETA 02:06:03
# Fork: 1 of 1
# Warmup Iteration   1: 9920581.984 ns/op
# Warmup Iteration   2: 4661212.085 ns/op
# Warmup Iteration   3: 4558242.429 ns/op
# Warmup Iteration   4: 4362871.401 ns/op
# Warmup Iteration   5: 4385439.583 ns/op
Iteration   1: 4345122.635 ns/op
Iteration   2: 4296198.161 ns/op
Iteration   3: 4298284.642 ns/op
Iteration   4: 4358759.874 ns/op
Iteration   5: 4296678.920 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  4319008.846 ±(99.9%) 117279.131 ns/op [Average]
  (min, avg, max) = (4296198.161, 4319008.846, 4358759.874), stdev = 30457.018
  CI (99.9%): [4201729.715, 4436287.978] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 15.38% complete, ETA 02:05:41
# Fork: 1 of 1
# Warmup Iteration   1: 75253.229 ns/op
# Warmup Iteration   2: 25746.356 ns/op
# Warmup Iteration   3: 23957.916 ns/op
# Warmup Iteration   4: 25181.780 ns/op
# Warmup Iteration   5: 23557.604 ns/op
Iteration   1: 23558.620 ns/op
Iteration   2: 23575.366 ns/op
Iteration   3: 23468.525 ns/op
Iteration   4: 23470.990 ns/op
Iteration   5: 23575.815 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  23529.863 ±(99.9%) 212.985 ns/op [Average]
  (min, avg, max) = (23468.525, 23529.863, 23575.815), stdev = 55.311
  CI (99.9%): [23316.879, 23742.848] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 15.64% complete, ETA 02:05:17
# Fork: 1 of 1
# Warmup Iteration   1: 154766.228 ns/op
# Warmup Iteration   2: 49176.396 ns/op
# Warmup Iteration   3: 46232.182 ns/op
# Warmup Iteration   4: 44742.153 ns/op
# Warmup Iteration   5: 44892.638 ns/op
Iteration   1: 44962.323 ns/op
Iteration   2: 44890.622 ns/op
Iteration   3: 44905.456 ns/op
Iteration   4: 45111.287 ns/op
Iteration   5: 44817.972 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  44937.532 ±(99.9%) 423.262 ns/op [Average]
  (min, avg, max) = (44817.972, 44937.532, 45111.287), stdev = 109.920
  CI (99.9%): [44514.270, 45360.794] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 15.90% complete, ETA 02:04:54
# Fork: 1 of 1
# Warmup Iteration   1: 271465.848 ns/op
# Warmup Iteration   2: 102779.852 ns/op
# Warmup Iteration   3: 91652.679 ns/op
# Warmup Iteration   4: 91089.246 ns/op
# Warmup Iteration   5: 91465.490 ns/op
Iteration   1: 90920.485 ns/op
Iteration   2: 90809.919 ns/op
Iteration   3: 90712.552 ns/op
Iteration   4: 91101.801 ns/op
Iteration   5: 91127.339 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  90934.419 ±(99.9%) 694.596 ns/op [Average]
  (min, avg, max) = (90712.552, 90934.419, 91127.339), stdev = 180.384
  CI (99.9%): [90239.823, 91629.016] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 16.15% complete, ETA 02:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 648174.546 ns/op
# Warmup Iteration   2: 245490.933 ns/op
# Warmup Iteration   3: 228280.532 ns/op
# Warmup Iteration   4: 218695.881 ns/op
# Warmup Iteration   5: 217552.057 ns/op
Iteration   1: 217546.076 ns/op
Iteration   2: 216626.089 ns/op
Iteration   3: 221222.101 ns/op
Iteration   4: 217486.016 ns/op
Iteration   5: 216944.338 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  217964.924 ±(99.9%) 7164.697 ns/op [Average]
  (min, avg, max) = (216626.089, 217964.924, 221222.101), stdev = 1860.649
  CI (99.9%): [210800.227, 225129.621] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 16.41% complete, ETA 02:04:08
# Fork: 1 of 1
# Warmup Iteration   1: 4324816.647 ns/op
# Warmup Iteration   2: 2235902.970 ns/op
# Warmup Iteration   3: 2016263.092 ns/op
# Warmup Iteration   4: 2057756.112 ns/op
# Warmup Iteration   5: 2035569.735 ns/op
Iteration   1: 2065267.829 ns/op
Iteration   2: 2019386.335 ns/op
Iteration   3: 2017359.349 ns/op
Iteration   4: 2006419.657 ns/op
Iteration   5: 2006034.033 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2022893.441 ±(99.9%) 94205.906 ns/op [Average]
  (min, avg, max) = (2006034.033, 2022893.441, 2065267.829), stdev = 24464.975
  CI (99.9%): [1928687.535, 2117099.346] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 16.67% complete, ETA 02:03:45
# Fork: 1 of 1
# Warmup Iteration   1: 33713.424 ns/op
# Warmup Iteration   2: 16605.087 ns/op
# Warmup Iteration   3: 15299.712 ns/op
# Warmup Iteration   4: 15186.462 ns/op
# Warmup Iteration   5: 14935.673 ns/op
Iteration   1: 14992.899 ns/op
Iteration   2: 14920.525 ns/op
Iteration   3: 14938.660 ns/op
Iteration   4: 14991.487 ns/op
Iteration   5: 14960.241 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14960.762 ±(99.9%) 123.048 ns/op [Average]
  (min, avg, max) = (14920.525, 14960.762, 14992.899), stdev = 31.955
  CI (99.9%): [14837.714, 15083.811] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 16.92% complete, ETA 02:03:22
# Fork: 1 of 1
# Warmup Iteration   1: 86836.637 ns/op
# Warmup Iteration   2: 32115.905 ns/op
# Warmup Iteration   3: 29836.974 ns/op
# Warmup Iteration   4: 28456.239 ns/op
# Warmup Iteration   5: 28654.031 ns/op
Iteration   1: 28448.006 ns/op
Iteration   2: 29040.622 ns/op
Iteration   3: 28430.947 ns/op
Iteration   4: 28485.437 ns/op
Iteration   5: 28552.789 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  28591.560 ±(99.9%) 983.284 ns/op [Average]
  (min, avg, max) = (28430.947, 28591.560, 29040.622), stdev = 255.356
  CI (99.9%): [27608.276, 29574.845] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 17.18% complete, ETA 02:02:59
# Fork: 1 of 1
# Warmup Iteration   1: 174538.294 ns/op
# Warmup Iteration   2: 67729.131 ns/op
# Warmup Iteration   3: 63479.881 ns/op
# Warmup Iteration   4: 60934.477 ns/op
# Warmup Iteration   5: 60243.782 ns/op
Iteration   1: 60473.824 ns/op
Iteration   2: 61321.643 ns/op
Iteration   3: 60245.057 ns/op
Iteration   4: 60342.834 ns/op
Iteration   5: 60273.293 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  60531.330 ±(99.9%) 1734.892 ns/op [Average]
  (min, avg, max) = (60245.057, 60531.330, 61321.643), stdev = 450.546
  CI (99.9%): [58796.438, 62266.222] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 17.44% complete, ETA 02:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 433729.998 ns/op
# Warmup Iteration   2: 151438.114 ns/op
# Warmup Iteration   3: 138258.221 ns/op
# Warmup Iteration   4: 130190.176 ns/op
# Warmup Iteration   5: 130248.604 ns/op
Iteration   1: 130616.338 ns/op
Iteration   2: 129586.505 ns/op
Iteration   3: 129890.595 ns/op
Iteration   4: 130000.591 ns/op
Iteration   5: 130310.547 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  130080.915 ±(99.9%) 1523.954 ns/op [Average]
  (min, avg, max) = (129586.505, 130080.915, 130616.338), stdev = 395.766
  CI (99.9%): [128556.961, 131604.870] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 17.69% complete, ETA 02:02:13
# Fork: 1 of 1
# Warmup Iteration   1: 4751165.921 ns/op
# Warmup Iteration   2: 1338290.844 ns/op
# Warmup Iteration   3: 1290715.914 ns/op
# Warmup Iteration   4: 1237274.133 ns/op
# Warmup Iteration   5: 1233707.780 ns/op
Iteration   1: 1229035.727 ns/op
Iteration   2: 1242944.669 ns/op
Iteration   3: 1229714.871 ns/op
Iteration   4: 1240613.397 ns/op
Iteration   5: 1226900.283 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1233841.789 ±(99.9%) 28363.808 ns/op [Average]
  (min, avg, max) = (1226900.283, 1233841.789, 1242944.669), stdev = 7365.991
  CI (99.9%): [1205477.981, 1262205.597] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 17.95% complete, ETA 02:01:51
# Fork: 1 of 1
# Warmup Iteration   1: 40701.460 ns/op
# Warmup Iteration   2: 15468.469 ns/op
# Warmup Iteration   3: 14603.576 ns/op
# Warmup Iteration   4: 14051.904 ns/op
# Warmup Iteration   5: 14000.279 ns/op
Iteration   1: 14126.456 ns/op
Iteration   2: 13960.399 ns/op
Iteration   3: 13957.252 ns/op
Iteration   4: 13970.502 ns/op
Iteration   5: 14030.164 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14008.955 ±(99.9%) 277.446 ns/op [Average]
  (min, avg, max) = (13957.252, 14008.955, 14126.456), stdev = 72.052
  CI (99.9%): [13731.509, 14286.401] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 18.21% complete, ETA 02:01:28
# Fork: 1 of 1
# Warmup Iteration   1: 55348.058 ns/op
# Warmup Iteration   2: 29313.001 ns/op
# Warmup Iteration   3: 28200.950 ns/op
# Warmup Iteration   4: 25873.013 ns/op
# Warmup Iteration   5: 25947.422 ns/op
Iteration   1: 25832.710 ns/op
Iteration   2: 26231.248 ns/op
Iteration   3: 25873.661 ns/op
Iteration   4: 25916.639 ns/op
Iteration   5: 26267.347 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  26024.321 ±(99.9%) 800.546 ns/op [Average]
  (min, avg, max) = (25832.710, 26024.321, 26267.347), stdev = 207.899
  CI (99.9%): [25223.774, 26824.867] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 18.46% complete, ETA 02:01:05
# Fork: 1 of 1
# Warmup Iteration   1: 114773.674 ns/op
# Warmup Iteration   2: 59534.555 ns/op
# Warmup Iteration   3: 54983.822 ns/op
# Warmup Iteration   4: 55163.712 ns/op
# Warmup Iteration   5: 53569.188 ns/op
Iteration   1: 53574.388 ns/op
Iteration   2: 53772.772 ns/op
Iteration   3: 53386.186 ns/op
Iteration   4: 53626.474 ns/op
Iteration   5: 53883.503 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  53648.665 ±(99.9%) 734.294 ns/op [Average]
  (min, avg, max) = (53386.186, 53648.665, 53883.503), stdev = 190.694
  CI (99.9%): [52914.371, 54382.958] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 18.72% complete, ETA 02:00:42
# Fork: 1 of 1
# Warmup Iteration   1: 304197.810 ns/op
# Warmup Iteration   2: 127120.326 ns/op
# Warmup Iteration   3: 117365.537 ns/op
# Warmup Iteration   4: 118843.754 ns/op
# Warmup Iteration   5: 115782.482 ns/op
Iteration   1: 115451.140 ns/op
Iteration   2: 115551.069 ns/op
Iteration   3: 115491.218 ns/op
Iteration   4: 115367.228 ns/op
Iteration   5: 115726.892 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  115517.509 ±(99.9%) 518.937 ns/op [Average]
  (min, avg, max) = (115367.228, 115517.509, 115726.892), stdev = 134.766
  CI (99.9%): [114998.572, 116036.446] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 18.97% complete, ETA 02:00:19
# Fork: 1 of 1
# Warmup Iteration   1: 2242603.120 ns/op
# Warmup Iteration   2: 1263552.657 ns/op
# Warmup Iteration   3: 1175977.385 ns/op
# Warmup Iteration   4: 1163414.712 ns/op
# Warmup Iteration   5: 1159519.640 ns/op
Iteration   1: 1154624.885 ns/op
Iteration   2: 1157130.710 ns/op
Iteration   3: 1154254.086 ns/op
Iteration   4: 1153513.113 ns/op
Iteration   5: 1151388.870 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1154182.333 ±(99.9%) 7972.140 ns/op [Average]
  (min, avg, max) = (1151388.870, 1154182.333, 1157130.710), stdev = 2070.339
  CI (99.9%): [1146210.193, 1162154.473] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 19.23% complete, ETA 01:59:57
# Fork: 1 of 1
# Warmup Iteration   1: 34047.829 ns/op
# Warmup Iteration   2: 15720.975 ns/op
# Warmup Iteration   3: 15280.609 ns/op
# Warmup Iteration   4: 14679.884 ns/op
# Warmup Iteration   5: 14373.006 ns/op
Iteration   1: 14330.903 ns/op
Iteration   2: 14430.883 ns/op
Iteration   3: 14331.409 ns/op
Iteration   4: 14358.874 ns/op
Iteration   5: 14328.909 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14356.195 ±(99.9%) 167.669 ns/op [Average]
  (min, avg, max) = (14328.909, 14356.195, 14430.883), stdev = 43.543
  CI (99.9%): [14188.526, 14523.865] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 19.49% complete, ETA 01:59:33
# Fork: 1 of 1
# Warmup Iteration   1: 67408.259 ns/op
# Warmup Iteration   2: 29632.677 ns/op
# Warmup Iteration   3: 28136.802 ns/op
# Warmup Iteration   4: 27328.631 ns/op
# Warmup Iteration   5: 27477.240 ns/op
Iteration   1: 27438.501 ns/op
Iteration   2: 27290.006 ns/op
Iteration   3: 27272.699 ns/op
Iteration   4: 27276.702 ns/op
Iteration   5: 27410.856 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  27337.753 ±(99.9%) 308.852 ns/op [Average]
  (min, avg, max) = (27272.699, 27337.753, 27438.501), stdev = 80.208
  CI (99.9%): [27028.901, 27646.605] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 19.74% complete, ETA 01:59:10
# Fork: 1 of 1
# Warmup Iteration   1: 144747.413 ns/op
# Warmup Iteration   2: 59587.494 ns/op
# Warmup Iteration   3: 57339.652 ns/op
# Warmup Iteration   4: 55492.370 ns/op
# Warmup Iteration   5: 54904.947 ns/op
Iteration   1: 55414.770 ns/op
Iteration   2: 54891.697 ns/op
Iteration   3: 55452.213 ns/op
Iteration   4: 55098.497 ns/op
Iteration   5: 55009.911 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  55173.418 ±(99.9%) 958.207 ns/op [Average]
  (min, avg, max) = (54891.697, 55173.418, 55452.213), stdev = 248.843
  CI (99.9%): [54215.211, 56131.625] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 20.00% complete, ETA 01:58:48
# Fork: 1 of 1
# Warmup Iteration   1: 226427.210 ns/op
# Warmup Iteration   2: 129129.907 ns/op
# Warmup Iteration   3: 120087.115 ns/op
# Warmup Iteration   4: 119352.728 ns/op
# Warmup Iteration   5: 119402.137 ns/op
Iteration   1: 119665.251 ns/op
Iteration   2: 119070.836 ns/op
Iteration   3: 120707.947 ns/op
Iteration   4: 119262.785 ns/op
Iteration   5: 118811.314 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  119503.627 ±(99.9%) 2856.441 ns/op [Average]
  (min, avg, max) = (118811.314, 119503.627, 120707.947), stdev = 741.809
  CI (99.9%): [116647.185, 122360.068] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 20.26% complete, ETA 01:58:25
# Fork: 1 of 1
# Warmup Iteration   1: 2250625.693 ns/op
# Warmup Iteration   2: 1187806.645 ns/op
# Warmup Iteration   3: 1167780.579 ns/op
# Warmup Iteration   4: 1120980.462 ns/op
# Warmup Iteration   5: 1125098.657 ns/op
Iteration   1: 1121241.915 ns/op
Iteration   2: 1115924.564 ns/op
Iteration   3: 1115472.867 ns/op
Iteration   4: 1143145.152 ns/op
Iteration   5: 1121824.407 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1123521.781 ±(99.9%) 43720.425 ns/op [Average]
  (min, avg, max) = (1115472.867, 1123521.781, 1143145.152), stdev = 11354.055
  CI (99.9%): [1079801.356, 1167242.206] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 20.51% complete, ETA 01:58:02
# Fork: 1 of 1
# Warmup Iteration   1: 12930.362 ns/op
# Warmup Iteration   2: 6241.995 ns/op
# Warmup Iteration   3: 5795.838 ns/op
# Warmup Iteration   4: 5784.032 ns/op
# Warmup Iteration   5: 5730.454 ns/op
Iteration   1: 5742.179 ns/op
Iteration   2: 5827.834 ns/op
Iteration   3: 5816.536 ns/op
Iteration   4: 5804.453 ns/op
Iteration   5: 5772.465 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  5792.693 ±(99.9%) 134.807 ns/op [Average]
  (min, avg, max) = (5742.179, 5792.693, 5827.834), stdev = 35.009
  CI (99.9%): [5657.886, 5927.500] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 20.77% complete, ETA 01:57:39
# Fork: 1 of 1
# Warmup Iteration   1: 15885.801 ns/op
# Warmup Iteration   2: 11493.425 ns/op
# Warmup Iteration   3: 10758.885 ns/op
# Warmup Iteration   4: 10485.792 ns/op
# Warmup Iteration   5: 10436.745 ns/op
Iteration   1: 10592.561 ns/op
Iteration   2: 10572.789 ns/op
Iteration   3: 10685.054 ns/op
Iteration   4: 10488.801 ns/op
Iteration   5: 10462.064 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  10560.254 ±(99.9%) 341.833 ns/op [Average]
  (min, avg, max) = (10462.064, 10560.254, 10685.054), stdev = 88.773
  CI (99.9%): [10218.420, 10902.087] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 21.03% complete, ETA 01:57:16
# Fork: 1 of 1
# Warmup Iteration   1: 34175.464 ns/op
# Warmup Iteration   2: 22482.837 ns/op
# Warmup Iteration   3: 21084.088 ns/op
# Warmup Iteration   4: 20896.397 ns/op
# Warmup Iteration   5: 20914.043 ns/op
Iteration   1: 20893.491 ns/op
Iteration   2: 20773.004 ns/op
Iteration   3: 20858.748 ns/op
Iteration   4: 20846.286 ns/op
Iteration   5: 20826.564 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  20839.618 ±(99.9%) 171.349 ns/op [Average]
  (min, avg, max) = (20773.004, 20839.618, 20893.491), stdev = 44.499
  CI (99.9%): [20668.269, 21010.968] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 21.28% complete, ETA 01:56:52
# Fork: 1 of 1
# Warmup Iteration   1: 81872.717 ns/op
# Warmup Iteration   2: 47984.637 ns/op
# Warmup Iteration   3: 45617.843 ns/op
# Warmup Iteration   4: 44707.862 ns/op
# Warmup Iteration   5: 44833.738 ns/op
Iteration   1: 44194.392 ns/op
Iteration   2: 44369.387 ns/op
Iteration   3: 44310.511 ns/op
Iteration   4: 44356.546 ns/op
Iteration   5: 44513.768 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  44348.921 ±(99.9%) 443.268 ns/op [Average]
  (min, avg, max) = (44194.392, 44348.921, 44513.768), stdev = 115.115
  CI (99.9%): [43905.653, 44792.189] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 21.54% complete, ETA 01:56:30
# Fork: 1 of 1
# Warmup Iteration   1: 655206.656 ns/op
# Warmup Iteration   2: 495280.362 ns/op
# Warmup Iteration   3: 451852.003 ns/op
# Warmup Iteration   4: 444475.554 ns/op
# Warmup Iteration   5: 451009.069 ns/op
Iteration   1: 444331.890 ns/op
Iteration   2: 447310.680 ns/op
Iteration   3: 447417.267 ns/op
Iteration   4: 445696.521 ns/op
Iteration   5: 449713.882 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  446894.048 ±(99.9%) 7796.372 ns/op [Average]
  (min, avg, max) = (444331.890, 446894.048, 449713.882), stdev = 2024.693
  CI (99.9%): [439097.676, 454690.420] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 21.79% complete, ETA 01:56:07
# Fork: 1 of 1
# Warmup Iteration   1: 7884.578 ns/op
# Warmup Iteration   2: 4171.477 ns/op
# Warmup Iteration   3: 3912.267 ns/op
# Warmup Iteration   4: 3861.357 ns/op
# Warmup Iteration   5: 3880.474 ns/op
Iteration   1: 3860.301 ns/op
Iteration   2: 3846.545 ns/op
Iteration   3: 3853.762 ns/op
Iteration   4: 3844.649 ns/op
Iteration   5: 3890.719 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3859.195 ±(99.9%) 71.940 ns/op [Average]
  (min, avg, max) = (3844.649, 3859.195, 3890.719), stdev = 18.682
  CI (99.9%): [3787.256, 3931.135] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 22.05% complete, ETA 01:55:44
# Fork: 1 of 1
# Warmup Iteration   1: 17823.997 ns/op
# Warmup Iteration   2: 8461.070 ns/op
# Warmup Iteration   3: 7997.398 ns/op
# Warmup Iteration   4: 7610.145 ns/op
# Warmup Iteration   5: 7593.869 ns/op
Iteration   1: 7629.883 ns/op
Iteration   2: 7607.596 ns/op
Iteration   3: 7622.032 ns/op
Iteration   4: 7627.212 ns/op
Iteration   5: 7720.073 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  7641.359 ±(99.9%) 172.649 ns/op [Average]
  (min, avg, max) = (7607.596, 7641.359, 7720.073), stdev = 44.837
  CI (99.9%): [7468.710, 7814.008] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 22.31% complete, ETA 01:55:21
# Fork: 1 of 1
# Warmup Iteration   1: 37404.682 ns/op
# Warmup Iteration   2: 15644.379 ns/op
# Warmup Iteration   3: 14605.311 ns/op
# Warmup Iteration   4: 14312.306 ns/op
# Warmup Iteration   5: 14359.517 ns/op
Iteration   1: 14299.225 ns/op
Iteration   2: 14268.120 ns/op
Iteration   3: 14290.464 ns/op
Iteration   4: 14293.523 ns/op
Iteration   5: 14263.220 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14282.910 ±(99.9%) 62.159 ns/op [Average]
  (min, avg, max) = (14263.220, 14282.910, 14299.225), stdev = 16.143
  CI (99.9%): [14220.751, 14345.070] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 22.56% complete, ETA 01:54:58
# Fork: 1 of 1
# Warmup Iteration   1: 71934.999 ns/op
# Warmup Iteration   2: 36447.336 ns/op
# Warmup Iteration   3: 31947.175 ns/op
# Warmup Iteration   4: 31581.798 ns/op
# Warmup Iteration   5: 31915.354 ns/op
Iteration   1: 31330.068 ns/op
Iteration   2: 31371.664 ns/op
Iteration   3: 31347.647 ns/op
Iteration   4: 31580.763 ns/op
Iteration   5: 31512.655 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  31428.560 ±(99.9%) 429.318 ns/op [Average]
  (min, avg, max) = (31330.068, 31428.560, 31580.763), stdev = 111.492
  CI (99.9%): [30999.242, 31857.877] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 22.82% complete, ETA 01:54:35
# Fork: 1 of 1
# Warmup Iteration   1: 479451.108 ns/op
# Warmup Iteration   2: 337741.534 ns/op
# Warmup Iteration   3: 285704.276 ns/op
# Warmup Iteration   4: 283514.458 ns/op
# Warmup Iteration   5: 288836.727 ns/op
Iteration   1: 287356.197 ns/op
Iteration   2: 283820.067 ns/op
Iteration   3: 284562.238 ns/op
Iteration   4: 284875.294 ns/op
Iteration   5: 282590.569 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  284640.873 ±(99.9%) 6755.547 ns/op [Average]
  (min, avg, max) = (282590.569, 284640.873, 287356.197), stdev = 1754.394
  CI (99.9%): [277885.326, 291396.420] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 23.08% complete, ETA 01:54:12
# Fork: 1 of 1
# Warmup Iteration   1: 10880.735 ns/op
# Warmup Iteration   2: 5401.947 ns/op
# Warmup Iteration   3: 4797.113 ns/op
# Warmup Iteration   4: 4799.211 ns/op
# Warmup Iteration   5: 4812.293 ns/op
Iteration   1: 4823.725 ns/op
Iteration   2: 4817.374 ns/op
Iteration   3: 4807.817 ns/op
Iteration   4: 4842.191 ns/op
Iteration   5: 4818.776 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4821.977 ±(99.9%) 48.844 ns/op [Average]
  (min, avg, max) = (4807.817, 4821.977, 4842.191), stdev = 12.685
  CI (99.9%): [4773.132, 4870.821] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 23.33% complete, ETA 01:53:49
# Fork: 1 of 1
# Warmup Iteration   1: 19924.332 ns/op
# Warmup Iteration   2: 9061.052 ns/op
# Warmup Iteration   3: 8575.517 ns/op
# Warmup Iteration   4: 8637.211 ns/op
# Warmup Iteration   5: 8847.426 ns/op
Iteration   1: 8588.509 ns/op
Iteration   2: 8594.762 ns/op
Iteration   3: 8622.345 ns/op
Iteration   4: 8605.466 ns/op
Iteration   5: 8640.200 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8610.256 ±(99.9%) 81.200 ns/op [Average]
  (min, avg, max) = (8588.509, 8610.256, 8640.200), stdev = 21.087
  CI (99.9%): [8529.056, 8691.456] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 23.59% complete, ETA 01:53:26
# Fork: 1 of 1
# Warmup Iteration   1: 41633.738 ns/op
# Warmup Iteration   2: 19421.534 ns/op
# Warmup Iteration   3: 17130.286 ns/op
# Warmup Iteration   4: 16852.567 ns/op
# Warmup Iteration   5: 16838.402 ns/op
Iteration   1: 16798.141 ns/op
Iteration   2: 16821.688 ns/op
Iteration   3: 16860.547 ns/op
Iteration   4: 16771.376 ns/op
Iteration   5: 16804.104 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  16811.171 ±(99.9%) 127.012 ns/op [Average]
  (min, avg, max) = (16771.376, 16811.171, 16860.547), stdev = 32.985
  CI (99.9%): [16684.159, 16938.184] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 23.85% complete, ETA 01:53:03
# Fork: 1 of 1
# Warmup Iteration   1: 99777.018 ns/op
# Warmup Iteration   2: 39412.175 ns/op
# Warmup Iteration   3: 35905.073 ns/op
# Warmup Iteration   4: 35057.148 ns/op
# Warmup Iteration   5: 35109.199 ns/op
Iteration   1: 35125.112 ns/op
Iteration   2: 35280.920 ns/op
Iteration   3: 35135.196 ns/op
Iteration   4: 35265.138 ns/op
Iteration   5: 35144.209 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  35190.115 ±(99.9%) 293.402 ns/op [Average]
  (min, avg, max) = (35125.112, 35190.115, 35280.920), stdev = 76.196
  CI (99.9%): [34896.713, 35483.517] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 24.10% complete, ETA 01:52:40
# Fork: 1 of 1
# Warmup Iteration   1: 788899.551 ns/op
# Warmup Iteration   2: 381704.660 ns/op
# Warmup Iteration   3: 363165.732 ns/op
# Warmup Iteration   4: 340598.997 ns/op
# Warmup Iteration   5: 345166.631 ns/op
Iteration   1: 341769.425 ns/op
Iteration   2: 341984.623 ns/op
Iteration   3: 347848.328 ns/op
Iteration   4: 341676.700 ns/op
Iteration   5: 340068.232 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  342669.462 ±(99.9%) 11528.113 ns/op [Average]
  (min, avg, max) = (340068.232, 342669.462, 347848.328), stdev = 2993.814
  CI (99.9%): [331141.348, 354197.575] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 24.36% complete, ETA 01:52:17
# Fork: 1 of 1
# Warmup Iteration   1: 295603.508 ns/op
# Warmup Iteration   2: 128065.240 ns/op
# Warmup Iteration   3: 117132.327 ns/op
# Warmup Iteration   4: 112993.135 ns/op
# Warmup Iteration   5: 112004.899 ns/op
Iteration   1: 112602.957 ns/op
Iteration   2: 111919.818 ns/op
Iteration   3: 117525.857 ns/op
Iteration   4: 113053.888 ns/op
Iteration   5: 112160.792 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  113452.662 ±(99.9%) 8925.373 ns/op [Average]
  (min, avg, max) = (111919.818, 113452.662, 117525.857), stdev = 2317.891
  CI (99.9%): [104527.289, 122378.035] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 24.62% complete, ETA 01:51:54
# Fork: 1 of 1
# Warmup Iteration   1: 556346.850 ns/op
# Warmup Iteration   2: 214189.704 ns/op
# Warmup Iteration   3: 203524.733 ns/op
# Warmup Iteration   4: 203848.378 ns/op
# Warmup Iteration   5: 197693.252 ns/op
Iteration   1: 198419.007 ns/op
Iteration   2: 198978.846 ns/op
Iteration   3: 201385.483 ns/op
Iteration   4: 197969.237 ns/op
Iteration   5: 197558.376 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  198862.190 ±(99.9%) 5799.767 ns/op [Average]
  (min, avg, max) = (197558.376, 198862.190, 201385.483), stdev = 1506.181
  CI (99.9%): [193062.423, 204661.957] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 24.87% complete, ETA 01:51:31
# Fork: 1 of 1
# Warmup Iteration   1: 1131387.817 ns/op
# Warmup Iteration   2: 504703.541 ns/op
# Warmup Iteration   3: 508930.203 ns/op
# Warmup Iteration   4: 482126.156 ns/op
# Warmup Iteration   5: 479036.961 ns/op
Iteration   1: 478896.839 ns/op
Iteration   2: 480539.135 ns/op
Iteration   3: 478302.101 ns/op
Iteration   4: 478444.796 ns/op
Iteration   5: 478443.639 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  478925.302 ±(99.9%) 3579.511 ns/op [Average]
  (min, avg, max) = (478302.101, 478925.302, 480539.135), stdev = 929.588
  CI (99.9%): [475345.791, 482504.813] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 25.13% complete, ETA 01:51:08
# Fork: 1 of 1
# Warmup Iteration   1: 2633210.723 ns/op
# Warmup Iteration   2: 1236999.573 ns/op
# Warmup Iteration   3: 1229587.702 ns/op
# Warmup Iteration   4: 1171231.776 ns/op
# Warmup Iteration   5: 1219768.876 ns/op
Iteration   1: 1167947.685 ns/op
Iteration   2: 1170252.334 ns/op
Iteration   3: 1174037.626 ns/op
Iteration   4: 1180547.129 ns/op
Iteration   5: 1163997.005 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1171356.356 ±(99.9%) 24251.222 ns/op [Average]
  (min, avg, max) = (1163997.005, 1171356.356, 1180547.129), stdev = 6297.965
  CI (99.9%): [1147105.133, 1195607.578] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 25.38% complete, ETA 01:50:45
# Fork: 1 of 1
# Warmup Iteration   1: 21305670.340 ns/op
# Warmup Iteration   2: 10577616.164 ns/op
# Warmup Iteration   3: 10634045.945 ns/op
# Warmup Iteration   4: 10082321.429 ns/op
# Warmup Iteration   5: 9921509.847 ns/op
Iteration   1: 9841864.468 ns/op
Iteration   2: 9860074.838 ns/op
Iteration   3: 9830322.371 ns/op
Iteration   4: 9847917.028 ns/op
Iteration   5: 9865762.334 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9849188.208 ±(99.9%) 54605.649 ns/op [Average]
  (min, avg, max) = (9830322.371, 9849188.208, 9865762.334), stdev = 14180.914
  CI (99.9%): [9794582.559, 9903793.856] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 25.64% complete, ETA 01:50:23
# Fork: 1 of 1
# Warmup Iteration   1: 4161.711 ns/op
# Warmup Iteration   2: 2738.247 ns/op
# Warmup Iteration   3: 2405.972 ns/op
# Warmup Iteration   4: 2405.106 ns/op
# Warmup Iteration   5: 2405.617 ns/op
Iteration   1: 2405.343 ns/op
Iteration   2: 2401.513 ns/op
Iteration   3: 2401.790 ns/op
Iteration   4: 2403.763 ns/op
Iteration   5: 2402.000 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2402.882 ±(99.9%) 6.291 ns/op [Average]
  (min, avg, max) = (2401.513, 2402.882, 2405.343), stdev = 1.634
  CI (99.9%): [2396.591, 2409.173] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 25.90% complete, ETA 01:50:00
# Fork: 1 of 1
# Warmup Iteration   1: 7867.454 ns/op
# Warmup Iteration   2: 5271.613 ns/op
# Warmup Iteration   3: 4683.639 ns/op
# Warmup Iteration   4: 4713.028 ns/op
# Warmup Iteration   5: 4666.798 ns/op
Iteration   1: 4697.077 ns/op
Iteration   2: 4687.751 ns/op
Iteration   3: 4673.928 ns/op
Iteration   4: 4718.597 ns/op
Iteration   5: 4682.790 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4692.029 ±(99.9%) 65.650 ns/op [Average]
  (min, avg, max) = (4673.928, 4692.029, 4718.597), stdev = 17.049
  CI (99.9%): [4626.379, 4757.678] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 26.15% complete, ETA 01:49:36
# Fork: 1 of 1
# Warmup Iteration   1: 15524.502 ns/op
# Warmup Iteration   2: 10880.323 ns/op
# Warmup Iteration   3: 9117.092 ns/op
# Warmup Iteration   4: 9125.532 ns/op
# Warmup Iteration   5: 9114.568 ns/op
Iteration   1: 9099.082 ns/op
Iteration   2: 9138.410 ns/op
Iteration   3: 9219.248 ns/op
Iteration   4: 9108.772 ns/op
Iteration   5: 9120.514 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9137.205 ±(99.9%) 185.401 ns/op [Average]
  (min, avg, max) = (9099.082, 9137.205, 9219.248), stdev = 48.148
  CI (99.9%): [8951.804, 9322.606] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 26.41% complete, ETA 01:49:13
# Fork: 1 of 1
# Warmup Iteration   1: 28900.869 ns/op
# Warmup Iteration   2: 19498.444 ns/op
# Warmup Iteration   3: 17632.144 ns/op
# Warmup Iteration   4: 17831.726 ns/op
# Warmup Iteration   5: 17619.415 ns/op
Iteration   1: 17666.834 ns/op
Iteration   2: 17644.006 ns/op
Iteration   3: 17646.248 ns/op
Iteration   4: 17650.677 ns/op
Iteration   5: 17792.827 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  17680.118 ±(99.9%) 245.038 ns/op [Average]
  (min, avg, max) = (17644.006, 17680.118, 17792.827), stdev = 63.636
  CI (99.9%): [17435.081, 17925.156] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 26.67% complete, ETA 01:48:50
# Fork: 1 of 1
# Warmup Iteration   1: 324898.936 ns/op
# Warmup Iteration   2: 216434.298 ns/op
# Warmup Iteration   3: 200378.985 ns/op
# Warmup Iteration   4: 194500.612 ns/op
# Warmup Iteration   5: 194344.404 ns/op
Iteration   1: 195746.053 ns/op
Iteration   2: 194834.546 ns/op
Iteration   3: 198445.603 ns/op
Iteration   4: 206826.433 ns/op
Iteration   5: 193980.808 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  197966.689 ±(99.9%) 20133.494 ns/op [Average]
  (min, avg, max) = (193980.808, 197966.689, 206826.433), stdev = 5228.605
  CI (99.9%): [177833.194, 218100.183] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 26.92% complete, ETA 01:48:27
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
40351.100 ns/op
# Warmup Iteration   2: 30190.087 ns/op
# Warmup Iteration   3: 30301.770 ns/op
# Warmup Iteration   4: 29773.099 ns/op
# Warmup Iteration   5: 31195.341 ns/op
Iteration   1: 30428.669 ns/op
Iteration   2: 32259.790 ns/op
Iteration   3: 30697.814 ns/op
Iteration   4: 30307.648 ns/op
Iteration   5: 31758.230 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  31090.430 ±(99.9%) 3344.846 ns/op [Average]
  (min, avg, max) = (30307.648, 31090.430, 32259.790), stdev = 868.646
  CI (99.9%): [27745.584, 34435.276] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 27.18% complete, ETA 01:48:04
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
71507.484 ns/op
# Warmup Iteration   2: 63903.314 ns/op
# Warmup Iteration   3: 65727.341 ns/op
# Warmup Iteration   4: 72010.551 ns/op
# Warmup Iteration   5: 65975.598 ns/op
Iteration   1: 69530.737 ns/op
Iteration   2: 62997.922 ns/op
Iteration   3: 64621.727 ns/op
Iteration   4: 66424.666 ns/op
Iteration   5: 71069.829 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  66928.976 ±(99.9%) 12907.805 ns/op [Average]
  (min, avg, max) = (62997.922, 66928.976, 71069.829), stdev = 3352.116
  CI (99.9%): [54021.171, 79836.781] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 27.44% complete, ETA 01:47:42
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
126116.482 ns/op
# Warmup Iteration   2: 129665.738 ns/op
# Warmup Iteration   3: 140940.167 ns/op
# Warmup Iteration   4: 145674.048 ns/op
# Warmup Iteration   5: 131549.400 ns/op
Iteration   1: 124298.879 ns/op
Iteration   2: 124972.510 ns/op
Iteration   3: 130136.981 ns/op
Iteration   4: 116951.598 ns/op
Iteration   5: 125647.854 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  124401.564 ±(99.9%) 18294.283 ns/op [Average]
  (min, avg, max) = (116951.598, 124401.564, 130136.981), stdev = 4750.967
  CI (99.9%): [106107.282, 142695.847] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 27.69% complete, ETA 01:47:19
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
325460.277 ns/op
# Warmup Iteration   2: 264738.995 ns/op
# Warmup Iteration   3: 280924.939 ns/op
# Warmup Iteration   4: 286679.803 ns/op
# Warmup Iteration   5: 326606.495 ns/op
Iteration   1: 296492.985 ns/op
Iteration   2: 273198.659 ns/op
Iteration   3: 303302.232 ns/op
Iteration   4: 314404.286 ns/op
Iteration   5: 290720.270 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  295623.686 ±(99.9%) 59008.904 ns/op [Average]
  (min, avg, max) = (273198.659, 295623.686, 314404.286), stdev = 15324.425
  CI (99.9%): [236614.782, 354632.591] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 27.95% complete, ETA 01:46:57
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
3025752.572 ns/op
# Warmup Iteration   2: 2628729.738 ns/op
# Warmup Iteration   3: 2506360.750 ns/op
# Warmup Iteration   4: 2681925.406 ns/op
# Warmup Iteration   5: 2417572.272 ns/op
Iteration   1: 2674841.408 ns/op
Iteration   2: 2649188.916 ns/op
Iteration   3: 2613510.730 ns/op
Iteration   4: 2638222.439 ns/op
Iteration   5: 3199548.797 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2755062.458 ±(99.9%) 960543.129 ns/op [Average]
  (min, avg, max) = (2613510.730, 2755062.458, 3199548.797), stdev = 249450.000
  CI (99.9%): [1794519.329, 3715605.587] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 28.21% complete, ETA 01:46:34
# Fork: 1 of 1
# Warmup Iteration   1: 15810.351 ns/op
# Warmup Iteration   2: 6597.800 ns/op
# Warmup Iteration   3: 6516.156 ns/op
# Warmup Iteration   4: 6098.527 ns/op
# Warmup Iteration   5: 6025.976 ns/op
Iteration   1: 5914.162 ns/op
Iteration   2: 5884.383 ns/op
Iteration   3: 5873.207 ns/op
Iteration   4: 5880.257 ns/op
Iteration   5: 5887.679 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  5887.937 ±(99.9%) 60.162 ns/op [Average]
  (min, avg, max) = (5873.207, 5887.937, 5914.162), stdev = 15.624
  CI (99.9%): [5827.775, 5948.100] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 28.46% complete, ETA 01:46:11
# Fork: 1 of 1
# Warmup Iteration   1: 25116.274 ns/op
# Warmup Iteration   2: 11760.890 ns/op
# Warmup Iteration   3: 11719.035 ns/op
# Warmup Iteration   4: 11728.859 ns/op
# Warmup Iteration   5: 11633.934 ns/op
Iteration   1: 11404.748 ns/op
Iteration   2: 11263.134 ns/op
Iteration   3: 11264.019 ns/op
Iteration   4: 11270.848 ns/op
Iteration   5: 11286.834 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  11297.916 ±(99.9%) 232.856 ns/op [Average]
  (min, avg, max) = (11263.134, 11297.916, 11404.748), stdev = 60.472
  CI (99.9%): [11065.061, 11530.772] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 28.72% complete, ETA 01:45:48
# Fork: 1 of 1
# Warmup Iteration   1: 46008.330 ns/op
# Warmup Iteration   2: 24978.892 ns/op
# Warmup Iteration   3: 25266.783 ns/op
# Warmup Iteration   4: 24634.287 ns/op
# Warmup Iteration   5: 25672.842 ns/op
Iteration   1: 24064.167 ns/op
Iteration   2: 24054.126 ns/op
Iteration   3: 24031.606 ns/op
Iteration   4: 24052.159 ns/op
Iteration   5: 24080.642 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  24056.540 ±(99.9%) 69.039 ns/op [Average]
  (min, avg, max) = (24031.606, 24056.540, 24080.642), stdev = 17.929
  CI (99.9%): [23987.501, 24125.579] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 28.97% complete, ETA 01:45:24
# Fork: 1 of 1
# Warmup Iteration   1: 100265.438 ns/op
# Warmup Iteration   2: 53330.626 ns/op
# Warmup Iteration   3: 52854.833 ns/op
# Warmup Iteration   4: 53596.518 ns/op
# Warmup Iteration   5: 53165.812 ns/op
Iteration   1: 51894.678 ns/op
Iteration   2: 51851.947 ns/op
Iteration   3: 51742.673 ns/op
Iteration   4: 51823.344 ns/op
Iteration   5: 51975.788 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  51857.686 ±(99.9%) 332.121 ns/op [Average]
  (min, avg, max) = (51742.673, 51857.686, 51975.788), stdev = 86.251
  CI (99.9%): [51525.565, 52189.807] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 29.23% complete, ETA 01:45:01
# Fork: 1 of 1
# Warmup Iteration   1: 734700.874 ns/op
# Warmup Iteration   2: 507054.658 ns/op
# Warmup Iteration   3: 496437.008 ns/op
# Warmup Iteration   4: 485425.407 ns/op
# Warmup Iteration   5: 488161.810 ns/op
Iteration   1: 497786.071 ns/op
Iteration   2: 501620.717 ns/op
Iteration   3: 496677.406 ns/op
Iteration   4: 496338.699 ns/op
Iteration   5: 494346.101 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  497353.799 ±(99.9%) 10355.231 ns/op [Average]
  (min, avg, max) = (494346.101, 497353.799, 501620.717), stdev = 2689.221
  CI (99.9%): [486998.568, 507709.030] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 29.49% complete, ETA 01:44:38
# Fork: 1 of 1
# Warmup Iteration   1: 244717.289 ns/op
# Warmup Iteration   2: 161694.780 ns/op
# Warmup Iteration   3: 151700.004 ns/op
# Warmup Iteration   4: 152358.405 ns/op
# Warmup Iteration   5: 150737.790 ns/op
Iteration   1: 144527.491 ns/op
Iteration   2: 145327.210 ns/op
Iteration   3: 143570.378 ns/op
Iteration   4: 143292.623 ns/op
Iteration   5: 144316.410 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  144206.822 ±(99.9%) 3111.006 ns/op [Average]
  (min, avg, max) = (143292.623, 144206.822, 145327.210), stdev = 807.918
  CI (99.9%): [141095.816, 147317.828] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 29.74% complete, ETA 01:44:16
# Fork: 1 of 1
# Warmup Iteration   1: 350253.667 ns/op
# Warmup Iteration   2: 220751.859 ns/op
# Warmup Iteration   3: 217270.575 ns/op
# Warmup Iteration   4: 215387.888 ns/op
# Warmup Iteration   5: 207564.325 ns/op
Iteration   1: 208031.171 ns/op
Iteration   2: 207818.168 ns/op
Iteration   3: 206844.912 ns/op
Iteration   4: 203373.833 ns/op
Iteration   5: 207243.017 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  206662.220 ±(99.9%) 7304.671 ns/op [Average]
  (min, avg, max) = (203373.833, 206662.220, 208031.171), stdev = 1897.000
  CI (99.9%): [199357.549, 213966.891] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 30.00% complete, ETA 01:43:54
# Fork: 1 of 1
# Warmup Iteration   1: 663344.810 ns/op
# Warmup Iteration   2: 461238.561 ns/op
# Warmup Iteration   3: 422883.299 ns/op
# Warmup Iteration   4: 408351.600 ns/op
# Warmup Iteration   5: 415841.435 ns/op
Iteration   1: 397465.436 ns/op
Iteration   2: 397851.110 ns/op
Iteration   3: 399654.686 ns/op
Iteration   4: 403611.033 ns/op
Iteration   5: 401171.842 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  399950.821 ±(99.9%) 9734.147 ns/op [Average]
  (min, avg, max) = (397465.436, 399950.821, 403611.033), stdev = 2527.927
  CI (99.9%): [390216.674, 409684.968] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 30.26% complete, ETA 01:43:32
# Fork: 1 of 1
# Warmup Iteration   1: 1518718.800 ns/op
# Warmup Iteration   2: 1009858.829 ns/op
# Warmup Iteration   3: 1000656.675 ns/op
# Warmup Iteration   4: 1018091.019 ns/op
# Warmup Iteration   5: 955526.339 ns/op
Iteration   1: 953697.546 ns/op
Iteration   2: 951748.688 ns/op
Iteration   3: 949877.956 ns/op
Iteration   4: 945045.022 ns/op
Iteration   5: 935813.605 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  947236.563 ±(99.9%) 27523.847 ns/op [Average]
  (min, avg, max) = (935813.605, 947236.563, 953697.546), stdev = 7147.856
  CI (99.9%): [919712.716, 974760.410] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 30.51% complete, ETA 01:43:09
# Fork: 1 of 1
# Warmup Iteration   1: 13548480.150 ns/op
# Warmup Iteration   2: 9360229.439 ns/op
# Warmup Iteration   3: 9374150.680 ns/op
# Warmup Iteration   4: 9437061.659 ns/op
# Warmup Iteration   5: 9145588.433 ns/op
Iteration   1: 8959721.695 ns/op
Iteration   2: 8970282.405 ns/op
Iteration   3: 9046821.512 ns/op
Iteration   4: 9127792.093 ns/op
Iteration   5: 9116665.142 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9044256.569 ±(99.9%) 303481.595 ns/op [Average]
  (min, avg, max) = (8959721.695, 9044256.569, 9127792.093), stdev = 78813.206
  CI (99.9%): [8740774.974, 9347738.164] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 30.77% complete, ETA 01:42:48
# Fork: 1 of 1
# Warmup Iteration   1: 93423.921 ns/op
# Warmup Iteration   2: 22458.926 ns/op
# Warmup Iteration   3: 19321.389 ns/op
# Warmup Iteration   4: 19377.444 ns/op
# Warmup Iteration   5: 19007.129 ns/op
Iteration   1: 18888.067 ns/op
Iteration   2: 18882.699 ns/op
Iteration   3: 19188.653 ns/op
Iteration   4: 18915.605 ns/op
Iteration   5: 19026.245 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  18980.254 ±(99.9%) 501.103 ns/op [Average]
  (min, avg, max) = (18882.699, 18980.254, 19188.653), stdev = 130.135
  CI (99.9%): [18479.150, 19481.357] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 31.03% complete, ETA 01:42:25
# Fork: 1 of 1
# Warmup Iteration   1: 109639.639 ns/op
# Warmup Iteration   2: 41259.256 ns/op
# Warmup Iteration   3: 41287.815 ns/op
# Warmup Iteration   4: 36234.754 ns/op
# Warmup Iteration   5: 36529.017 ns/op
Iteration   1: 36553.975 ns/op
Iteration   2: 36478.463 ns/op
Iteration   3: 36506.769 ns/op
Iteration   4: 36465.542 ns/op
Iteration   5: 36388.489 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  36478.648 ±(99.9%) 233.951 ns/op [Average]
  (min, avg, max) = (36388.489, 36478.648, 36553.975), stdev = 60.756
  CI (99.9%): [36244.696, 36712.599] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 31.28% complete, ETA 01:42:02
# Fork: 1 of 1
# Warmup Iteration   1: 233260.461 ns/op
# Warmup Iteration   2: 91222.912 ns/op
# Warmup Iteration   3: 80779.215 ns/op
# Warmup Iteration   4: 81110.843 ns/op
# Warmup Iteration   5: 81018.332 ns/op
Iteration   1: 80459.992 ns/op
Iteration   2: 80194.427 ns/op
Iteration   3: 80598.612 ns/op
Iteration   4: 80336.095 ns/op
Iteration   5: 80209.168 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  80359.659 ±(99.9%) 660.444 ns/op [Average]
  (min, avg, max) = (80194.427, 80359.659, 80598.612), stdev = 171.515
  CI (99.9%): [79699.215, 81020.103] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 31.54% complete, ETA 01:41:39
# Fork: 1 of 1
# Warmup Iteration   1: 397357.343 ns/op
# Warmup Iteration   2: 209075.375 ns/op
# Warmup Iteration   3: 185466.803 ns/op
# Warmup Iteration   4: 184255.623 ns/op
# Warmup Iteration   5: 184560.748 ns/op
Iteration   1: 189910.740 ns/op
Iteration   2: 184660.847 ns/op
Iteration   3: 189133.824 ns/op
Iteration   4: 184313.817 ns/op
Iteration   5: 184084.203 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  186420.686 ±(99.9%) 10982.215 ns/op [Average]
  (min, avg, max) = (184084.203, 186420.686, 189910.740), stdev = 2852.046
  CI (99.9%): [175438.471, 197402.901] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 31.79% complete, ETA 01:41:16
# Fork: 1 of 1
# Warmup Iteration   1: 4645018.696 ns/op
# Warmup Iteration   2: 2337230.179 ns/op
# Warmup Iteration   3: 2130102.521 ns/op
# Warmup Iteration   4: 2099133.012 ns/op
# Warmup Iteration   5: 2094542.001 ns/op
Iteration   1: 2105642.778 ns/op
Iteration   2: 2098886.691 ns/op
Iteration   3: 2105493.220 ns/op
Iteration   4: 2138107.128 ns/op
Iteration   5: 2103475.105 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2110320.984 ±(99.9%) 60727.714 ns/op [Average]
  (min, avg, max) = (2098886.691, 2110320.984, 2138107.128), stdev = 15770.795
  CI (99.9%): [2049593.270, 2171048.698] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 32.05% complete, ETA 01:40:54
# Fork: 1 of 1
# Warmup Iteration   1: 18825.686 ns/op
# Warmup Iteration   2: 11048.287 ns/op
# Warmup Iteration   3: 10290.604 ns/op
# Warmup Iteration   4: 10273.875 ns/op
# Warmup Iteration   5: 10304.611 ns/op
Iteration   1: 10313.245 ns/op
Iteration   2: 10241.352 ns/op
Iteration   3: 10217.494 ns/op
Iteration   4: 10320.044 ns/op
Iteration   5: 10332.038 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  10284.834 ±(99.9%) 199.162 ns/op [Average]
  (min, avg, max) = (10217.494, 10284.834, 10332.038), stdev = 51.722
  CI (99.9%): [10085.673, 10483.996] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 32.31% complete, ETA 01:40:31
# Fork: 1 of 1
# Warmup Iteration   1: 41830.420 ns/op
# Warmup Iteration   2: 22354.411 ns/op
# Warmup Iteration   3: 21196.582 ns/op
# Warmup Iteration   4: 20745.780 ns/op
# Warmup Iteration   5: 20619.719 ns/op
Iteration   1: 20633.132 ns/op
Iteration   2: 20588.878 ns/op
Iteration   3: 20659.757 ns/op
Iteration   4: 20591.637 ns/op
Iteration   5: 20655.656 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  20625.812 ±(99.9%) 130.988 ns/op [Average]
  (min, avg, max) = (20588.878, 20625.812, 20659.757), stdev = 34.017
  CI (99.9%): [20494.824, 20756.799] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 32.56% complete, ETA 01:40:08
# Fork: 1 of 1
# Warmup Iteration   1: 124870.032 ns/op
# Warmup Iteration   2: 49588.184 ns/op
# Warmup Iteration   3: 48909.188 ns/op
# Warmup Iteration   4: 47462.368 ns/op
# Warmup Iteration   5: 47354.042 ns/op
Iteration   1: 47112.308 ns/op
Iteration   2: 46984.839 ns/op
Iteration   3: 47113.583 ns/op
Iteration   4: 47365.452 ns/op
Iteration   5: 47156.917 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  47146.620 ±(99.9%) 532.292 ns/op [Average]
  (min, avg, max) = (46984.839, 47146.620, 47365.452), stdev = 138.235
  CI (99.9%): [46614.327, 47678.912] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 32.82% complete, ETA 01:39:45
# Fork: 1 of 1
# Warmup Iteration   1: 217237.282 ns/op
# Warmup Iteration   2: 119498.745 ns/op
# Warmup Iteration   3: 119610.454 ns/op
# Warmup Iteration   4: 126612.149 ns/op
# Warmup Iteration   5: 129515.827 ns/op
Iteration   1: 131261.783 ns/op
Iteration   2: 127082.302 ns/op
Iteration   3: 128082.871 ns/op
Iteration   4: 125858.610 ns/op
Iteration   5: 126664.621 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  127790.037 ±(99.9%) 8085.581 ns/op [Average]
  (min, avg, max) = (125858.610, 127790.037, 131261.783), stdev = 2099.800
  CI (99.9%): [119704.457, 135875.618] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 33.08% complete, ETA 01:39:22
# Fork: 1 of 1
# Warmup Iteration   1: 1912354.711 ns/op
# Warmup Iteration   2: 1211506.329 ns/op
# Warmup Iteration   3: 1194808.698 ns/op
# Warmup Iteration   4: 1172606.566 ns/op
# Warmup Iteration   5: 1157047.940 ns/op
Iteration   1: 1162085.773 ns/op
Iteration   2: 1175419.814 ns/op
Iteration   3: 1170932.658 ns/op
Iteration   4: 1155535.911 ns/op
Iteration   5: 1174930.403 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1167780.912 ±(99.9%) 33446.130 ns/op [Average]
  (min, avg, max) = (1155535.911, 1167780.912, 1175419.814), stdev = 8685.854
  CI (99.9%): [1134334.782, 1201227.041] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 33.33% complete, ETA 01:39:00
# Fork: 1 of 1
# Warmup Iteration   1: 22413.905 ns/op
# Warmup Iteration   2: 12852.311 ns/op
# Warmup Iteration   3: 13260.666 ns/op
# Warmup Iteration   4: 12020.369 ns/op
# Warmup Iteration   5: 12356.824 ns/op
Iteration   1: 12100.314 ns/op
Iteration   2: 12002.271 ns/op
Iteration   3: 12053.732 ns/op
Iteration   4: 12117.553 ns/op
Iteration   5: 12049.570 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  12064.688 ±(99.9%) 175.494 ns/op [Average]
  (min, avg, max) = (12002.271, 12064.688, 12117.553), stdev = 45.575
  CI (99.9%): [11889.194, 12240.182] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 33.59% complete, ETA 01:38:37
# Fork: 1 of 1
# Warmup Iteration   1: 71557.931 ns/op
# Warmup Iteration   2: 25538.516 ns/op
# Warmup Iteration   3: 24909.048 ns/op
# Warmup Iteration   4: 23547.849 ns/op
# Warmup Iteration   5: 23534.184 ns/op
Iteration   1: 23839.253 ns/op
Iteration   2: 23465.736 ns/op
Iteration   3: 23468.998 ns/op
Iteration   4: 23477.303 ns/op
Iteration   5: 23394.453 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  23529.149 ±(99.9%) 679.709 ns/op [Average]
  (min, avg, max) = (23394.453, 23529.149, 23839.253), stdev = 176.518
  CI (99.9%): [22849.439, 24208.858] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 33.85% complete, ETA 01:38:14
# Fork: 1 of 1
# Warmup Iteration   1: 137048.976 ns/op
# Warmup Iteration   2: 48327.637 ns/op
# Warmup Iteration   3: 47800.372 ns/op
# Warmup Iteration   4: 46971.295 ns/op
# Warmup Iteration   5: 46607.345 ns/op
Iteration   1: 46601.781 ns/op
Iteration   2: 46664.789 ns/op
Iteration   3: 46790.643 ns/op
Iteration   4: 46911.867 ns/op
Iteration   5: 46549.708 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  46703.758 ±(99.9%) 566.280 ns/op [Average]
  (min, avg, max) = (46549.708, 46703.758, 46911.867), stdev = 147.061
  CI (99.9%): [46137.478, 47270.038] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 34.10% complete, ETA 01:37:51
# Fork: 1 of 1
# Warmup Iteration   1: 307507.452 ns/op
# Warmup Iteration   2: 102189.470 ns/op
# Warmup Iteration   3: 97577.251 ns/op
# Warmup Iteration   4: 93627.071 ns/op
# Warmup Iteration   5: 94289.492 ns/op
Iteration   1: 94477.786 ns/op
Iteration   2: 94033.280 ns/op
Iteration   3: 94769.057 ns/op
Iteration   4: 94560.547 ns/op
Iteration   5: 94039.501 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  94376.034 ±(99.9%) 1261.931 ns/op [Average]
  (min, avg, max) = (94033.280, 94376.034, 94769.057), stdev = 327.720
  CI (99.9%): [93114.103, 95637.965] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 34.36% complete, ETA 01:37:28
# Fork: 1 of 1
# Warmup Iteration   1: 1659536.057 ns/op
# Warmup Iteration   2: 1027513.097 ns/op
# Warmup Iteration   3: 878065.877 ns/op
# Warmup Iteration   4: 867414.500 ns/op
# Warmup Iteration   5: 877866.511 ns/op
Iteration   1: 861826.741 ns/op
Iteration   2: 867101.242 ns/op
Iteration   3: 862694.782 ns/op
Iteration   4: 864826.538 ns/op
Iteration   5: 861853.759 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  863660.612 ±(99.9%) 8771.939 ns/op [Average]
  (min, avg, max) = (861826.741, 863660.612, 867101.242), stdev = 2278.045
  CI (99.9%): [854888.673, 872432.552] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 34.62% complete, ETA 01:37:06
# Fork: 1 of 1
# Warmup Iteration   1: 28282.984 ns/op
# Warmup Iteration   2: 12366.709 ns/op
# Warmup Iteration   3: 11793.492 ns/op
# Warmup Iteration   4: 11160.931 ns/op
# Warmup Iteration   5: 11136.151 ns/op
Iteration   1: 11198.122 ns/op
Iteration   2: 11205.695 ns/op
Iteration   3: 11310.474 ns/op
Iteration   4: 11133.465 ns/op
Iteration   5: 11237.333 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11217.018 ±(99.9%) 248.159 ns/op [Average]
  (min, avg, max) = (11133.465, 11217.018, 11310.474), stdev = 64.446
  CI (99.9%): [10968.858, 11465.177] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 34.87% complete, ETA 01:36:43
# Fork: 1 of 1
# Warmup Iteration   1: 34503.737 ns/op
# Warmup Iteration   2: 18874.962 ns/op
# Warmup Iteration   3: 19763.771 ns/op
# Warmup Iteration   4: 16841.725 ns/op
# Warmup Iteration   5: 16868.480 ns/op
Iteration   1: 16819.563 ns/op
Iteration   2: 16847.299 ns/op
Iteration   3: 16874.665 ns/op
Iteration   4: 16859.750 ns/op
Iteration   5: 17051.293 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  16890.514 ±(99.9%) 354.745 ns/op [Average]
  (min, avg, max) = (16819.563, 16890.514, 17051.293), stdev = 92.126
  CI (99.9%): [16535.769, 17245.259] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 35.13% complete, ETA 01:36:20
# Fork: 1 of 1
# Warmup Iteration   1: 64278.824 ns/op
# Warmup Iteration   2: 36859.216 ns/op
# Warmup Iteration   3: 34132.958 ns/op
# Warmup Iteration   4: 32339.136 ns/op
# Warmup Iteration   5: 32247.960 ns/op
Iteration   1: 32024.433 ns/op
Iteration   2: 32160.143 ns/op
Iteration   3: 32097.850 ns/op
Iteration   4: 32043.221 ns/op
Iteration   5: 32045.461 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  32074.222 ±(99.9%) 212.729 ns/op [Average]
  (min, avg, max) = (32024.433, 32074.222, 32160.143), stdev = 55.245
  CI (99.9%): [31861.493, 32286.950] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 35.38% complete, ETA 01:35:57
# Fork: 1 of 1
# Warmup Iteration   1: 130252.705 ns/op
# Warmup Iteration   2: 76849.429 ns/op
# Warmup Iteration   3: 74736.589 ns/op
# Warmup Iteration   4: 70318.231 ns/op
# Warmup Iteration   5: 72412.318 ns/op
Iteration   1: 70182.587 ns/op
Iteration   2: 70465.486 ns/op
Iteration   3: 70250.649 ns/op
Iteration   4: 69988.987 ns/op
Iteration   5: 70071.328 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  70191.807 ±(99.9%) 705.043 ns/op [Average]
  (min, avg, max) = (69988.987, 70191.807, 70465.486), stdev = 183.097
  CI (99.9%): [69486.765, 70896.850] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 35.64% complete, ETA 01:35:34
# Fork: 1 of 1
# Warmup Iteration   1: 1434352.791 ns/op
# Warmup Iteration   2: 810326.120 ns/op
# Warmup Iteration   3: 754452.542 ns/op
# Warmup Iteration   4: 767208.095 ns/op
# Warmup Iteration   5: 748289.230 ns/op
Iteration   1: 749686.171 ns/op
Iteration   2: 747655.985 ns/op
Iteration   3: 749205.228 ns/op
Iteration   4: 747081.127 ns/op
Iteration   5: 747384.795 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  748202.661 ±(99.9%) 4487.091 ns/op [Average]
  (min, avg, max) = (747081.127, 748202.661, 749686.171), stdev = 1165.283
  CI (99.9%): [743715.570, 752689.752] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 35.90% complete, ETA 01:35:12
# Fork: 1 of 1
# Warmup Iteration   1: 29114.000 ns/op
# Warmup Iteration   2: 12073.474 ns/op
# Warmup Iteration   3: 11969.848 ns/op
# Warmup Iteration   4: 11735.037 ns/op
# Warmup Iteration   5: 11739.379 ns/op
Iteration   1: 11710.164 ns/op
Iteration   2: 11998.577 ns/op
Iteration   3: 11774.037 ns/op
Iteration   4: 11718.707 ns/op
Iteration   5: 11690.466 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11778.390 ±(99.9%) 488.777 ns/op [Average]
  (min, avg, max) = (11690.466, 11778.390, 11998.577), stdev = 126.934
  CI (99.9%): [11289.613, 12267.167] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 36.15% complete, ETA 01:34:49
# Fork: 1 of 1
# Warmup Iteration   1: 56674.922 ns/op
# Warmup Iteration   2: 22768.973 ns/op
# Warmup Iteration   3: 22314.487 ns/op
# Warmup Iteration   4: 21330.740 ns/op
# Warmup Iteration   5: 21215.960 ns/op
Iteration   1: 22124.942 ns/op
Iteration   2: 21772.115 ns/op
Iteration   3: 21254.249 ns/op
Iteration   4: 21236.320 ns/op
Iteration   5: 21272.484 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  21532.022 ±(99.9%) 1541.648 ns/op [Average]
  (min, avg, max) = (21236.320, 21532.022, 22124.942), stdev = 400.361
  CI (99.9%): [19990.374, 23073.671] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 36.41% complete, ETA 01:34:26
# Fork: 1 of 1
# Warmup Iteration   1: 115865.930 ns/op
# Warmup Iteration   2: 44121.779 ns/op
# Warmup Iteration   3: 42967.479 ns/op
# Warmup Iteration   4: 41341.841 ns/op
# Warmup Iteration   5: 41229.120 ns/op
Iteration   1: 41675.766 ns/op
Iteration   2: 41283.032 ns/op
Iteration   3: 41745.402 ns/op
Iteration   4: 41375.522 ns/op
Iteration   5: 41174.170 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  41450.778 ±(99.9%) 958.294 ns/op [Average]
  (min, avg, max) = (41174.170, 41450.778, 41745.402), stdev = 248.866
  CI (99.9%): [40492.484, 42409.072] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 36.67% complete, ETA 01:34:03
# Fork: 1 of 1
# Warmup Iteration   1: 283528.460 ns/op
# Warmup Iteration   2: 98082.352 ns/op
# Warmup Iteration   3: 97485.357 ns/op
# Warmup Iteration   4: 97783.971 ns/op
# Warmup Iteration   5: 100258.292 ns/op
Iteration   1: 98404.620 ns/op
Iteration   2: 97285.099 ns/op
Iteration   3: 96882.554 ns/op
Iteration   4: 97174.189 ns/op
Iteration   5: 97329.996 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  97415.292 ±(99.9%) 2232.822 ns/op [Average]
  (min, avg, max) = (96882.554, 97415.292, 98404.620), stdev = 579.857
  CI (99.9%): [95182.470, 99648.114] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 36.92% complete, ETA 01:33:41
# Fork: 1 of 1
# Warmup Iteration   1: 2717514.009 ns/op
# Warmup Iteration   2: 895841.764 ns/op
# Warmup Iteration   3: 874318.031 ns/op
# Warmup Iteration   4: 837610.618 ns/op
# Warmup Iteration   5: 830279.281 ns/op
Iteration   1: 833840.228 ns/op
Iteration   2: 833628.393 ns/op
Iteration   3: 835025.665 ns/op
Iteration   4: 832732.449 ns/op
Iteration   5: 836880.201 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  834421.387 ±(99.9%) 6158.025 ns/op [Average]
  (min, avg, max) = (832732.449, 834421.387, 836880.201), stdev = 1599.219
  CI (99.9%): [828263.363, 840579.412] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 37.18% complete, ETA 01:33:18
# Fork: 1 of 1
# Warmup Iteration   1: 4990.294 ns/op
# Warmup Iteration   2: 2807.997 ns/op
# Warmup Iteration   3: 2526.057 ns/op
# Warmup Iteration   4: 2536.767 ns/op
# Warmup Iteration   5: 2561.428 ns/op
Iteration   1: 2534.468 ns/op
Iteration   2: 2523.537 ns/op
Iteration   3: 2542.456 ns/op
Iteration   4: 2557.423 ns/op
Iteration   5: 2553.695 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2542.316 ±(99.9%) 53.494 ns/op [Average]
  (min, avg, max) = (2523.537, 2542.316, 2557.423), stdev = 13.892
  CI (99.9%): [2488.822, 2595.809] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 37.44% complete, ETA 01:32:55
# Fork: 1 of 1
# Warmup Iteration   1: 9170.801 ns/op
# Warmup Iteration   2: 5531.681 ns/op
# Warmup Iteration   3: 5016.153 ns/op
# Warmup Iteration   4: 4990.029 ns/op
# Warmup Iteration   5: 4998.512 ns/op
Iteration   1: 5006.559 ns/op
Iteration   2: 4990.794 ns/op
Iteration   3: 5015.326 ns/op
Iteration   4: 4991.887 ns/op
Iteration   5: 4993.826 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  4999.679 ±(99.9%) 41.566 ns/op [Average]
  (min, avg, max) = (4990.794, 4999.679, 5015.326), stdev = 10.795
  CI (99.9%): [4958.112, 5041.245] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 37.69% complete, ETA 01:32:32
# Fork: 1 of 1
# Warmup Iteration   1: 19533.949 ns/op
# Warmup Iteration   2: 10622.180 ns/op
# Warmup Iteration   3: 9875.277 ns/op
# Warmup Iteration   4: 9794.722 ns/op
# Warmup Iteration   5: 10038.620 ns/op
Iteration   1: 9809.079 ns/op
Iteration   2: 9801.749 ns/op
Iteration   3: 9795.441 ns/op
Iteration   4: 9823.701 ns/op
Iteration   5: 9817.282 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9809.451 ±(99.9%) 43.909 ns/op [Average]
  (min, avg, max) = (9795.441, 9809.451, 9823.701), stdev = 11.403
  CI (99.9%): [9765.541, 9853.360] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 37.95% complete, ETA 01:32:09
# Fork: 1 of 1
# Warmup Iteration   1: 42311.997 ns/op
# Warmup Iteration   2: 26151.533 ns/op
# Warmup Iteration   3: 23143.269 ns/op
# Warmup Iteration   4: 25142.886 ns/op
# Warmup Iteration   5: 22835.523 ns/op
Iteration   1: 22802.412 ns/op
Iteration   2: 22767.778 ns/op
Iteration   3: 22798.645 ns/op
Iteration   4: 23065.734 ns/op
Iteration   5: 22787.770 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  22844.468 ±(99.9%) 479.104 ns/op [Average]
  (min, avg, max) = (22767.778, 22844.468, 23065.734), stdev = 124.422
  CI (99.9%): [22365.364, 23323.571] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 38.21% complete, ETA 01:31:46
# Fork: 1 of 1
# Warmup Iteration   1: 409249.413 ns/op
# Warmup Iteration   2: 228148.871 ns/op
# Warmup Iteration   3: 206619.079 ns/op
# Warmup Iteration   4: 206946.225 ns/op
# Warmup Iteration   5: 217101.259 ns/op
Iteration   1: 205653.446 ns/op
Iteration   2: 205992.198 ns/op
Iteration   3: 205296.917 ns/op
Iteration   4: 206521.186 ns/op
Iteration   5: 207556.043 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  206203.958 ±(99.9%) 3389.549 ns/op [Average]
  (min, avg, max) = (205296.917, 206203.958, 207556.043), stdev = 880.255
  CI (99.9%): [202814.409, 209593.506] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 38.46% complete, ETA 01:31:23
# Fork: 1 of 1
# Warmup Iteration   1: 6969.424 ns/op
# Warmup Iteration   2: 3696.293 ns/op
# Warmup Iteration   3: 3255.551 ns/op
# Warmup Iteration   4: 3257.788 ns/op
# Warmup Iteration   5: 3256.150 ns/op
Iteration   1: 3284.662 ns/op
Iteration   2: 3288.221 ns/op
Iteration   3: 3266.550 ns/op
Iteration   4: 3257.962 ns/op
Iteration   5: 3253.016 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3270.082 ±(99.9%) 60.646 ns/op [Average]
  (min, avg, max) = (3253.016, 3270.082, 3288.221), stdev = 15.750
  CI (99.9%): [3209.436, 3330.728] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 38.72% complete, ETA 01:31:00
# Fork: 1 of 1
# Warmup Iteration   1: 13690.310 ns/op
# Warmup Iteration   2: 7064.436 ns/op
# Warmup Iteration   3: 6530.626 ns/op
# Warmup Iteration   4: 6297.435 ns/op
# Warmup Iteration   5: 6322.516 ns/op
Iteration   1: 6295.081 ns/op
Iteration   2: 6306.141 ns/op
Iteration   3: 6335.725 ns/op
Iteration   4: 6305.794 ns/op
Iteration   5: 6321.360 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6312.820 ±(99.9%) 61.073 ns/op [Average]
  (min, avg, max) = (6295.081, 6312.820, 6335.725), stdev = 15.861
  CI (99.9%): [6251.747, 6373.893] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 38.97% complete, ETA 01:30:37
# Fork: 1 of 1
# Warmup Iteration   1: 29177.913 ns/op
# Warmup Iteration   2: 14279.478 ns/op
# Warmup Iteration   3: 12932.503 ns/op
# Warmup Iteration   4: 12966.338 ns/op
# Warmup Iteration   5: 12994.107 ns/op
Iteration   1: 12978.019 ns/op
Iteration   2: 12967.927 ns/op
Iteration   3: 13015.820 ns/op
Iteration   4: 12960.484 ns/op
Iteration   5: 12939.895 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  12972.429 ±(99.9%) 107.809 ns/op [Average]
  (min, avg, max) = (12939.895, 12972.429, 13015.820), stdev = 27.998
  CI (99.9%): [12864.620, 13080.238] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 39.23% complete, ETA 01:30:14
# Fork: 1 of 1
# Warmup Iteration   1: 52582.005 ns/op
# Warmup Iteration   2: 28570.883 ns/op
# Warmup Iteration   3: 26983.604 ns/op
# Warmup Iteration   4: 26262.704 ns/op
# Warmup Iteration   5: 26220.284 ns/op
Iteration   1: 26379.336 ns/op
Iteration   2: 26253.215 ns/op
Iteration   3: 26264.326 ns/op
Iteration   4: 26288.673 ns/op
Iteration   5: 26352.407 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  26307.591 ±(99.9%) 213.897 ns/op [Average]
  (min, avg, max) = (26253.215, 26307.591, 26379.336), stdev = 55.548
  CI (99.9%): [26093.695, 26521.488] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 39.49% complete, ETA 01:29:51
# Fork: 1 of 1
# Warmup Iteration   1: 518842.496 ns/op
# Warmup Iteration   2: 324492.755 ns/op
# Warmup Iteration   3: 279845.521 ns/op
# Warmup Iteration   4: 277724.603 ns/op
# Warmup Iteration   5: 275715.864 ns/op
Iteration   1: 277201.239 ns/op
Iteration   2: 273607.023 ns/op
Iteration   3: 275060.753 ns/op
Iteration   4: 273744.823 ns/op
Iteration   5: 273550.514 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  274632.870 ±(99.9%) 6024.778 ns/op [Average]
  (min, avg, max) = (273550.514, 274632.870, 277201.239), stdev = 1564.616
  CI (99.9%): [268608.092, 280657.648] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 39.74% complete, ETA 01:29:28
# Fork: 1 of 1
# Warmup Iteration   1: 11413.418 ns/op
# Warmup Iteration   2: 5360.364 ns/op
# Warmup Iteration   3: 5163.243 ns/op
# Warmup Iteration   4: 5191.387 ns/op
# Warmup Iteration   5: 5237.809 ns/op
Iteration   1: 5164.060 ns/op
Iteration   2: 5190.066 ns/op
Iteration   3: 5160.668 ns/op
Iteration   4: 5196.672 ns/op
Iteration   5: 5164.546 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5175.202 ±(99.9%) 64.744 ns/op [Average]
  (min, avg, max) = (5160.668, 5175.202, 5196.672), stdev = 16.814
  CI (99.9%): [5110.458, 5239.947] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 40.00% complete, ETA 01:29:05
# Fork: 1 of 1
# Warmup Iteration   1: 22355.509 ns/op
# Warmup Iteration   2: 11307.388 ns/op
# Warmup Iteration   3: 10058.773 ns/op
# Warmup Iteration   4: 10029.919 ns/op
# Warmup Iteration   5: 10024.017 ns/op
Iteration   1: 10028.949 ns/op
Iteration   2: 10015.669 ns/op
Iteration   3: 10041.802 ns/op
Iteration   4: 10017.563 ns/op
Iteration   5: 10135.504 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  10047.897 ±(99.9%) 192.821 ns/op [Average]
  (min, avg, max) = (10015.669, 10047.897, 10135.504), stdev = 50.075
  CI (99.9%): [9855.076, 10240.718] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 40.26% complete, ETA 01:28:42
# Fork: 1 of 1
# Warmup Iteration   1: 41048.623 ns/op
# Warmup Iteration   2: 21715.819 ns/op
# Warmup Iteration   3: 21530.665 ns/op
# Warmup Iteration   4: 21253.804 ns/op
# Warmup Iteration   5: 21500.240 ns/op
Iteration   1: 21167.537 ns/op
Iteration   2: 21503.540 ns/op
Iteration   3: 21173.777 ns/op
Iteration   4: 21146.080 ns/op
Iteration   5: 21161.460 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  21230.479 ±(99.9%) 589.117 ns/op [Average]
  (min, avg, max) = (21146.080, 21230.479, 21503.540), stdev = 152.992
  CI (99.9%): [20641.362, 21819.596] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 40.51% complete, ETA 01:28:19
# Fork: 1 of 1
# Warmup Iteration   1: 104640.285 ns/op
# Warmup Iteration   2: 57984.162 ns/op
# Warmup Iteration   3: 52878.872 ns/op
# Warmup Iteration   4: 53150.304 ns/op
# Warmup Iteration   5: 52424.205 ns/op
Iteration   1: 52344.892 ns/op
Iteration   2: 52159.831 ns/op
Iteration   3: 52237.671 ns/op
Iteration   4: 52212.842 ns/op
Iteration   5: 52515.092 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  52294.066 ±(99.9%) 541.946 ns/op [Average]
  (min, avg, max) = (52159.831, 52294.066, 52515.092), stdev = 140.742
  CI (99.9%): [51752.120, 52836.011] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 40.77% complete, ETA 01:27:56
# Fork: 1 of 1
# Warmup Iteration   1: 736438.464 ns/op
# Warmup Iteration   2: 463698.318 ns/op
# Warmup Iteration   3: 438214.021 ns/op
# Warmup Iteration   4: 446783.114 ns/op
# Warmup Iteration   5: 444055.120 ns/op
Iteration   1: 432750.880 ns/op
Iteration   2: 433192.086 ns/op
Iteration   3: 438257.554 ns/op
Iteration   4: 436837.850 ns/op
Iteration   5: 436855.905 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  435578.855 ±(99.9%) 9448.892 ns/op [Average]
  (min, avg, max) = (432750.880, 435578.855, 438257.554), stdev = 2453.847
  CI (99.9%): [426129.963, 445027.747] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 41.03% complete, ETA 01:27:33
# Fork: 1 of 1
# Warmup Iteration   1: 67198.367 ns/op
# Warmup Iteration   2: 34011.333 ns/op
# Warmup Iteration   3: 29653.513 ns/op
# Warmup Iteration   4: 27686.954 ns/op
# Warmup Iteration   5: 27426.152 ns/op
Iteration   1: 27567.676 ns/op
Iteration   2: 27542.208 ns/op
Iteration   3: 27549.997 ns/op
Iteration   4: 27460.482 ns/op
Iteration   5: 28054.867 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  27635.046 ±(99.9%) 917.540 ns/op [Average]
  (min, avg, max) = (27460.482, 27635.046, 28054.867), stdev = 238.282
  CI (99.9%): [26717.506, 28552.586] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 41.28% complete, ETA 01:27:10
# Fork: 1 of 1
# Warmup Iteration   1: 86132.836 ns/op
# Warmup Iteration   2: 64044.480 ns/op
# Warmup Iteration   3: 53582.241 ns/op
# Warmup Iteration   4: 48505.773 ns/op
# Warmup Iteration   5: 47760.437 ns/op
Iteration   1: 47756.029 ns/op
Iteration   2: 47633.445 ns/op
Iteration   3: 47641.922 ns/op
Iteration   4: 47753.479 ns/op
Iteration   5: 48335.133 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  47824.002 ±(99.9%) 1123.164 ns/op [Average]
  (min, avg, max) = (47633.445, 47824.002, 48335.133), stdev = 291.682
  CI (99.9%): [46700.837, 48947.166] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 41.54% complete, ETA 01:26:47
# Fork: 1 of 1
# Warmup Iteration   1: 248282.465 ns/op
# Warmup Iteration   2: 129587.115 ns/op
# Warmup Iteration   3: 130070.469 ns/op
# Warmup Iteration   4: 102533.518 ns/op
# Warmup Iteration   5: 104984.685 ns/op
Iteration   1: 103214.242 ns/op
Iteration   2: 102874.365 ns/op
Iteration   3: 102413.189 ns/op
Iteration   4: 102678.302 ns/op
Iteration   5: 103117.528 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  102859.525 ±(99.9%) 1254.665 ns/op [Average]
  (min, avg, max) = (102413.189, 102859.525, 103214.242), stdev = 325.833
  CI (99.9%): [101604.860, 104114.191] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 41.79% complete, ETA 01:26:24
# Fork: 1 of 1
# Warmup Iteration   1: 445311.999 ns/op
# Warmup Iteration   2: 294076.891 ns/op
# Warmup Iteration   3: 238362.143 ns/op
# Warmup Iteration   4: 238350.885 ns/op
# Warmup Iteration   5: 238180.852 ns/op
Iteration   1: 237732.746 ns/op
Iteration   2: 237023.333 ns/op
Iteration   3: 238335.032 ns/op
Iteration   4: 237041.802 ns/op
Iteration   5: 237725.146 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  237571.612 ±(99.9%) 2121.051 ns/op [Average]
  (min, avg, max) = (237023.333, 237571.612, 238335.032), stdev = 550.830
  CI (99.9%): [235450.561, 239692.663] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 42.05% complete, ETA 01:26:01
# Fork: 1 of 1
# Warmup Iteration   1: 4085062.614 ns/op
# Warmup Iteration   2: 2816069.580 ns/op
# Warmup Iteration   3: 2407747.770 ns/op
# Warmup Iteration   4: 2395756.462 ns/op
# Warmup Iteration   5: 2345403.409 ns/op
Iteration   1: 2224161.362 ns/op
Iteration   2: 2245111.362 ns/op
Iteration   3: 2222017.074 ns/op
Iteration   4: 2235122.211 ns/op
Iteration   5: 2233383.724 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2231959.146 ±(99.9%) 35743.924 ns/op [Average]
  (min, avg, max) = (2222017.074, 2231959.146, 2245111.362), stdev = 9282.583
  CI (99.9%): [2196215.223, 2267703.070] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 42.31% complete, ETA 01:25:39
# Fork: 1 of 1
# Warmup Iteration   1: 8700.078 ns/op
# Warmup Iteration   2: 4203.989 ns/op
# Warmup Iteration   3: 3837.869 ns/op
# Warmup Iteration   4: 3766.022 ns/op
# Warmup Iteration   5: 3850.936 ns/op
Iteration   1: 3763.170 ns/op
Iteration   2: 3776.173 ns/op
Iteration   3: 3787.690 ns/op
Iteration   4: 3768.665 ns/op
Iteration   5: 3803.273 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3779.794 ±(99.9%) 61.699 ns/op [Average]
  (min, avg, max) = (3763.170, 3779.794, 3803.273), stdev = 16.023
  CI (99.9%): [3718.095, 3841.493] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 42.56% complete, ETA 01:25:16
# Fork: 1 of 1
# Warmup Iteration   1: 15686.256 ns/op
# Warmup Iteration   2: 7727.226 ns/op
# Warmup Iteration   3: 6859.033 ns/op
# Warmup Iteration   4: 6921.358 ns/op
# Warmup Iteration   5: 6846.767 ns/op
Iteration   1: 6870.809 ns/op
Iteration   2: 6855.534 ns/op
Iteration   3: 6914.885 ns/op
Iteration   4: 6869.837 ns/op
Iteration   5: 6844.089 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6871.031 ±(99.9%) 103.515 ns/op [Average]
  (min, avg, max) = (6844.089, 6871.031, 6914.885), stdev = 26.882
  CI (99.9%): [6767.516, 6974.545] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 42.82% complete, ETA 01:24:53
# Fork: 1 of 1
# Warmup Iteration   1: 31095.009 ns/op
# Warmup Iteration   2: 13539.974 ns/op
# Warmup Iteration   3: 12852.492 ns/op
# Warmup Iteration   4: 13186.257 ns/op
# Warmup Iteration   5: 12831.165 ns/op
Iteration   1: 12896.289 ns/op
Iteration   2: 13007.962 ns/op
Iteration   3: 13115.960 ns/op
Iteration   4: 12917.031 ns/op
Iteration   5: 12943.815 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  12976.211 ±(99.9%) 341.587 ns/op [Average]
  (min, avg, max) = (12896.289, 12976.211, 13115.960), stdev = 88.709
  CI (99.9%): [12634.624, 13317.798] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 43.08% complete, ETA 01:24:30
# Fork: 1 of 1
# Warmup Iteration   1: 56155.018 ns/op
# Warmup Iteration   2: 28868.851 ns/op
# Warmup Iteration   3: 25690.708 ns/op
# Warmup Iteration   4: 25316.135 ns/op
# Warmup Iteration   5: 25383.582 ns/op
Iteration   1: 25284.724 ns/op
Iteration   2: 25323.356 ns/op
Iteration   3: 25377.601 ns/op
Iteration   4: 25279.424 ns/op
Iteration   5: 25228.728 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  25298.767 ±(99.9%) 213.496 ns/op [Average]
  (min, avg, max) = (25228.728, 25298.767, 25377.601), stdev = 55.444
  CI (99.9%): [25085.271, 25512.263] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 43.33% complete, ETA 01:24:07
# Fork: 1 of 1
# Warmup Iteration   1: 432906.976 ns/op
# Warmup Iteration   2: 298112.838 ns/op
# Warmup Iteration   3: 251188.846 ns/op
# Warmup Iteration   4: 252241.000 ns/op
# Warmup Iteration   5: 251328.633 ns/op
Iteration   1: 251137.520 ns/op
Iteration   2: 253091.657 ns/op
Iteration   3: 255248.885 ns/op
Iteration   4: 252089.212 ns/op
Iteration   5: 249988.043 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  252311.063 ±(99.9%) 7716.427 ns/op [Average]
  (min, avg, max) = (249988.043, 252311.063, 255248.885), stdev = 2003.932
  CI (99.9%): [244594.637, 260027.490] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 43.59% complete, ETA 01:23:44
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
40415.919 ns/op
# Warmup Iteration   2: 35940.952 ns/op
# Warmup Iteration   3: 35871.419 ns/op
# Warmup Iteration   4: 34604.492 ns/op
# Warmup Iteration   5: 35188.798 ns/op
Iteration   1: 34680.053 ns/op
Iteration   2: 33382.606 ns/op
Iteration   3: 33707.184 ns/op
Iteration   4: 40086.948 ns/op
Iteration   5: 35844.052 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  35540.168 ±(99.9%) 10460.765 ns/op [Average]
  (min, avg, max) = (33382.606, 35540.168, 40086.948), stdev = 2716.627
  CI (99.9%): [25079.404, 46000.933] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 43.85% complete, ETA 01:23:21
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
70106.041 ns/op
# Warmup Iteration   2: 55861.672 ns/op
# Warmup Iteration   3: 62836.987 ns/op
# Warmup Iteration   4: 60368.215 ns/op
# Warmup Iteration   5: 60433.118 ns/op
Iteration   1: 61527.060 ns/op
Iteration   2: 62668.143 ns/op
Iteration   3: 63810.753 ns/op
Iteration   4: 66459.807 ns/op
Iteration   5: 72000.931 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  65293.339 ±(99.9%) 16065.426 ns/op [Average]
  (min, avg, max) = (61527.060, 65293.339, 72000.931), stdev = 4172.140
  CI (99.9%): [49227.913, 81358.764] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 44.10% complete, ETA 01:22:58
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
173166.490 ns/op
# Warmup Iteration   2: 126613.001 ns/op
# Warmup Iteration   3: 116005.079 ns/op
# Warmup Iteration   4: 108921.237 ns/op
# Warmup Iteration   5: 114774.254 ns/op
Iteration   1: 119969.266 ns/op
Iteration   2: 120959.393 ns/op
Iteration   3: 131830.855 ns/op
Iteration   4: 131261.697 ns/op
Iteration   5: 124472.853 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  125698.813 ±(99.9%) 21555.045 ns/op [Average]
  (min, avg, max) = (119969.266, 125698.813, 131830.855), stdev = 5597.777
  CI (99.9%): [104143.768, 147253.858] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 44.36% complete, ETA 01:22:36
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
377439.941 ns/op
# Warmup Iteration   2: 322060.783 ns/op
# Warmup Iteration   3: 311650.767 ns/op
# Warmup Iteration   4: 287708.031 ns/op
# Warmup Iteration   5: 285920.578 ns/op
Iteration   1: 318337.959 ns/op
Iteration   2: 265331.198 ns/op
Iteration   3: 301337.274 ns/op
Iteration   4: 295341.574 ns/op
Iteration   5: 286067.624 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  293283.126 ±(99.9%) 75314.916 ns/op [Average]
  (min, avg, max) = (265331.198, 293283.126, 318337.959), stdev = 19559.045
  CI (99.9%): [217968.210, 368598.042] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 44.62% complete, ETA 01:22:13
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2736746.306 ns/op
# Warmup Iteration   2: 2599278.467 ns/op
# Warmup Iteration   3: 2566821.222 ns/op
# Warmup Iteration   4: 2600611.060 ns/op
# Warmup Iteration   5: 2427090.676 ns/op
Iteration   1: 2445817.505 ns/op
Iteration   2: 2518497.284 ns/op
Iteration   3: 2469541.344 ns/op
Iteration   4: 2548576.700 ns/op
Iteration   5: 2660895.323 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2528665.631 ±(99.9%) 324141.152 ns/op [Average]
  (min, avg, max) = (2445817.505, 2528665.631, 2660895.323), stdev = 84178.428
  CI (99.9%): [2204524.479, 2852806.783] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 44.87% complete, ETA 01:21:50
# Fork: 1 of 1
# Warmup Iteration   1: 5080.074 ns/op
# Warmup Iteration   2: 3010.943 ns/op
# Warmup Iteration   3: 2875.166 ns/op
# Warmup Iteration   4: 2766.738 ns/op
# Warmup Iteration   5: 2756.555 ns/op
Iteration   1: 2752.018 ns/op
Iteration   2: 2755.799 ns/op
Iteration   3: 2753.726 ns/op
Iteration   4: 2791.941 ns/op
Iteration   5: 2757.331 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2762.163 ±(99.9%) 64.568 ns/op [Average]
  (min, avg, max) = (2752.018, 2762.163, 2791.941), stdev = 16.768
  CI (99.9%): [2697.595, 2826.731] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 45.13% complete, ETA 01:21:27
# Fork: 1 of 1
# Warmup Iteration   1: 10153.946 ns/op
# Warmup Iteration   2: 5645.642 ns/op
# Warmup Iteration   3: 5747.817 ns/op
# Warmup Iteration   4: 5234.418 ns/op
# Warmup Iteration   5: 5238.390 ns/op
Iteration   1: 5240.043 ns/op
Iteration   2: 5239.135 ns/op
Iteration   3: 5229.049 ns/op
Iteration   4: 5244.011 ns/op
Iteration   5: 5245.234 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5239.494 ±(99.9%) 24.573 ns/op [Average]
  (min, avg, max) = (5229.049, 5239.494, 5245.234), stdev = 6.382
  CI (99.9%): [5214.921, 5264.067] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 45.38% complete, ETA 01:21:04
# Fork: 1 of 1
# Warmup Iteration   1: 18141.637 ns/op
# Warmup Iteration   2: 10060.124 ns/op
# Warmup Iteration   3: 10007.419 ns/op
# Warmup Iteration   4: 9438.920 ns/op
# Warmup Iteration   5: 9455.368 ns/op
Iteration   1: 9472.525 ns/op
Iteration   2: 9483.013 ns/op
Iteration   3: 9460.359 ns/op
Iteration   4: 9473.173 ns/op
Iteration   5: 9465.223 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9470.859 ±(99.9%) 33.228 ns/op [Average]
  (min, avg, max) = (9460.359, 9470.859, 9483.013), stdev = 8.629
  CI (99.9%): [9437.631, 9504.087] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 45.64% complete, ETA 01:20:41
# Fork: 1 of 1
# Warmup Iteration   1: 35752.591 ns/op
# Warmup Iteration   2: 19350.875 ns/op
# Warmup Iteration   3: 18865.742 ns/op
# Warmup Iteration   4: 17670.937 ns/op
# Warmup Iteration   5: 17648.954 ns/op
Iteration   1: 17618.807 ns/op
Iteration   2: 17646.137 ns/op
Iteration   3: 18165.755 ns/op
Iteration   4: 18153.503 ns/op
Iteration   5: 17631.498 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  17843.140 ±(99.9%) 1113.251 ns/op [Average]
  (min, avg, max) = (17618.807, 17843.140, 18165.755), stdev = 289.108
  CI (99.9%): [16729.889, 18956.391] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 45.90% complete, ETA 01:20:18
# Fork: 1 of 1
# Warmup Iteration   1: 443470.998 ns/op
# Warmup Iteration   2: 277962.629 ns/op
# Warmup Iteration   3: 269348.206 ns/op
# Warmup Iteration   4: 258312.319 ns/op
# Warmup Iteration   5: 258316.769 ns/op
Iteration   1: 258790.208 ns/op
Iteration   2: 258502.330 ns/op
Iteration   3: 258304.670 ns/op
Iteration   4: 257659.762 ns/op
Iteration   5: 258233.502 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  258298.094 ±(99.9%) 1605.736 ns/op [Average]
  (min, avg, max) = (257659.762, 258298.094, 258790.208), stdev = 417.005
  CI (99.9%): [256692.358, 259903.831] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 46.15% complete, ETA 01:19:55
# Fork: 1 of 1
# Warmup Iteration   1: 87197.585 ns/op
# Warmup Iteration   2: 39533.101 ns/op
# Warmup Iteration   3: 36587.915 ns/op
# Warmup Iteration   4: 38608.420 ns/op
# Warmup Iteration   5: 35688.231 ns/op
Iteration   1: 36040.323 ns/op
Iteration   2: 35817.670 ns/op
Iteration   3: 35805.906 ns/op
Iteration   4: 35989.693 ns/op
Iteration   5: 35775.265 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  35885.771 ±(99.9%) 463.335 ns/op [Average]
  (min, avg, max) = (35775.265, 35885.771, 36040.323), stdev = 120.327
  CI (99.9%): [35422.437, 36349.106] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 46.41% complete, ETA 01:19:33
# Fork: 1 of 1
# Warmup Iteration   1: 141774.242 ns/op
# Warmup Iteration   2: 72311.533 ns/op
# Warmup Iteration   3: 69561.056 ns/op
# Warmup Iteration   4: 65352.079 ns/op
# Warmup Iteration   5: 65214.993 ns/op
Iteration   1: 64630.943 ns/op
Iteration   2: 64566.056 ns/op
Iteration   3: 64080.872 ns/op
Iteration   4: 65034.439 ns/op
Iteration   5: 64743.456 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  64611.153 ±(99.9%) 1334.317 ns/op [Average]
  (min, avg, max) = (64080.872, 64611.153, 65034.439), stdev = 346.518
  CI (99.9%): [63276.837, 65945.470] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 46.67% complete, ETA 01:19:10
# Fork: 1 of 1
# Warmup Iteration   1: 330064.924 ns/op
# Warmup Iteration   2: 152095.641 ns/op
# Warmup Iteration   3: 135583.821 ns/op
# Warmup Iteration   4: 131555.728 ns/op
# Warmup Iteration   5: 131922.405 ns/op
Iteration   1: 131490.530 ns/op
Iteration   2: 131057.811 ns/op
Iteration   3: 131634.204 ns/op
Iteration   4: 131882.091 ns/op
Iteration   5: 132548.793 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  131722.686 ±(99.9%) 2119.295 ns/op [Average]
  (min, avg, max) = (131057.811, 131722.686, 132548.793), stdev = 550.374
  CI (99.9%): [129603.391, 133841.981] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 46.92% complete, ETA 01:18:48
# Fork: 1 of 1
# Warmup Iteration   1: 609756.749 ns/op
# Warmup Iteration   2: 341916.076 ns/op
# Warmup Iteration   3: 302205.312 ns/op
# Warmup Iteration   4: 298216.425 ns/op
# Warmup Iteration   5: 302432.724 ns/op
Iteration   1: 300295.797 ns/op
Iteration   2: 299093.895 ns/op
Iteration   3: 301640.389 ns/op
Iteration   4: 301070.497 ns/op
Iteration   5: 301251.155 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  300670.347 ±(99.9%) 3881.293 ns/op [Average]
  (min, avg, max) = (299093.895, 300670.347, 301640.389), stdev = 1007.959
  CI (99.9%): [296789.054, 304551.639] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 47.18% complete, ETA 01:18:25
# Fork: 1 of 1
# Warmup Iteration   1: 5458426.215 ns/op
# Warmup Iteration   2: 3272212.134 ns/op
# Warmup Iteration   3: 3075200.801 ns/op
# Warmup Iteration   4: 2991520.032 ns/op
# Warmup Iteration   5: 2993791.483 ns/op
Iteration   1: 2991315.523 ns/op
Iteration   2: 2987475.470 ns/op
Iteration   3: 2990913.394 ns/op
Iteration   4: 2977544.519 ns/op
Iteration   5: 2974531.825 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2984356.146 ±(99.9%) 30079.184 ns/op [Average]
  (min, avg, max) = (2974531.825, 2984356.146, 2991315.523), stdev = 7811.468
  CI (99.9%): [2954276.962, 3014435.330] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 47.44% complete, ETA 01:18:03
# Fork: 1 of 1
# Warmup Iteration   1: 35066.867 ns/op
# Warmup Iteration   2: 21024.914 ns/op
# Warmup Iteration   3: 19159.174 ns/op
# Warmup Iteration   4: 18841.351 ns/op
# Warmup Iteration   5: 18909.248 ns/op
Iteration   1: 18793.462 ns/op
Iteration   2: 18803.552 ns/op
Iteration   3: 18799.377 ns/op
Iteration   4: 18991.809 ns/op
Iteration   5: 18791.032 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  18835.846 ±(99.9%) 336.254 ns/op [Average]
  (min, avg, max) = (18791.032, 18835.846, 18991.809), stdev = 87.324
  CI (99.9%): [18499.592, 19172.100] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 47.69% complete, ETA 01:17:40
# Fork: 1 of 1
# Warmup Iteration   1: 57710.117 ns/op
# Warmup Iteration   2: 40244.207 ns/op
# Warmup Iteration   3: 39246.390 ns/op
# Warmup Iteration   4: 39280.913 ns/op
# Warmup Iteration   5: 36740.372 ns/op
Iteration   1: 36850.644 ns/op
Iteration   2: 37559.738 ns/op
Iteration   3: 36845.463 ns/op
Iteration   4: 36737.439 ns/op
Iteration   5: 37506.806 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  37100.018 ±(99.9%) 1534.553 ns/op [Average]
  (min, avg, max) = (36737.439, 37100.018, 37559.738), stdev = 398.518
  CI (99.9%): [35565.465, 38634.570] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 47.95% complete, ETA 01:17:17
# Fork: 1 of 1
# Warmup Iteration   1: 114413.379 ns/op
# Warmup Iteration   2: 82331.327 ns/op
# Warmup Iteration   3: 76132.522 ns/op
# Warmup Iteration   4: 83097.681 ns/op
# Warmup Iteration   5: 75270.901 ns/op
Iteration   1: 75038.978 ns/op
Iteration   2: 75104.890 ns/op
Iteration   3: 76328.491 ns/op
Iteration   4: 75099.304 ns/op
Iteration   5: 75699.760 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  75454.285 ±(99.9%) 2148.320 ns/op [Average]
  (min, avg, max) = (75038.978, 75454.285, 76328.491), stdev = 557.912
  CI (99.9%): [73305.965, 77602.604] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 48.21% complete, ETA 01:16:54
# Fork: 1 of 1
# Warmup Iteration   1: 313119.503 ns/op
# Warmup Iteration   2: 193108.344 ns/op
# Warmup Iteration   3: 186755.156 ns/op
# Warmup Iteration   4: 179716.450 ns/op
# Warmup Iteration   5: 179633.244 ns/op
Iteration   1: 180046.886 ns/op
Iteration   2: 182108.091 ns/op
Iteration   3: 179884.643 ns/op
Iteration   4: 180197.699 ns/op
Iteration   5: 179813.982 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  180410.260 ±(99.9%) 3699.261 ns/op [Average]
  (min, avg, max) = (179813.982, 180410.260, 182108.091), stdev = 960.686
  CI (99.9%): [176710.999, 184109.521] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 48.46% complete, ETA 01:16:31
# Fork: 1 of 1
# Warmup Iteration   1: 2433445.487 ns/op
# Warmup Iteration   2: 1950698.084 ns/op
# Warmup Iteration   3: 1835593.520 ns/op
# Warmup Iteration   4: 1789650.863 ns/op
# Warmup Iteration   5: 1795688.785 ns/op
Iteration   1: 1782513.164 ns/op
Iteration   2: 1780680.005 ns/op
Iteration   3: 1781026.754 ns/op
Iteration   4: 1784526.636 ns/op
Iteration   5: 1783295.956 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  1782408.503 ±(99.9%) 6143.542 ns/op [Average]
  (min, avg, max) = (1780680.005, 1782408.503, 1784526.636), stdev = 1595.458
  CI (99.9%): [1776264.961, 1788552.045] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 48.72% complete, ETA 01:16:08
# Fork: 1 of 1
# Warmup Iteration   1: 16614.273 ns/op
# Warmup Iteration   2: 12494.534 ns/op
# Warmup Iteration   3: 10670.818 ns/op
# Warmup Iteration   4: 10691.638 ns/op
# Warmup Iteration   5: 10632.408 ns/op
Iteration   1: 10683.466 ns/op
Iteration   2: 10667.684 ns/op
Iteration   3: 10665.984 ns/op
Iteration   4: 10677.743 ns/op
Iteration   5: 10760.211 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  10691.017 ±(99.9%) 151.503 ns/op [Average]
  (min, avg, max) = (10665.984, 10691.017, 10760.211), stdev = 39.345
  CI (99.9%): [10539.514, 10842.521] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 48.97% complete, ETA 01:15:46
# Fork: 1 of 1
# Warmup Iteration   1: 38067.074 ns/op
# Warmup Iteration   2: 16905.453 ns/op
# Warmup Iteration   3: 15533.238 ns/op
# Warmup Iteration   4: 16699.350 ns/op
# Warmup Iteration   5: 15344.393 ns/op
Iteration   1: 16184.850 ns/op
Iteration   2: 15363.956 ns/op
Iteration   3: 15410.439 ns/op
Iteration   4: 15294.816 ns/op
Iteration   5: 15333.113 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  15517.435 ±(99.9%) 1445.889 ns/op [Average]
  (min, avg, max) = (15294.816, 15517.435, 16184.850), stdev = 375.493
  CI (99.9%): [14071.546, 16963.324] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 49.23% complete, ETA 01:15:23
# Fork: 1 of 1
# Warmup Iteration   1: 58098.556 ns/op
# Warmup Iteration   2: 35911.502 ns/op
# Warmup Iteration   3: 33900.704 ns/op
# Warmup Iteration   4: 33785.902 ns/op
# Warmup Iteration   5: 32434.994 ns/op
Iteration   1: 32318.373 ns/op
Iteration   2: 32221.093 ns/op
Iteration   3: 32262.209 ns/op
Iteration   4: 32875.778 ns/op
Iteration   5: 32220.365 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  32379.564 ±(99.9%) 1079.215 ns/op [Average]
  (min, avg, max) = (32220.365, 32379.564, 32875.778), stdev = 280.269
  CI (99.9%): [31300.348, 33458.779] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 49.49% complete, ETA 01:15:00
# Fork: 1 of 1
# Warmup Iteration   1: 120461.303 ns/op
# Warmup Iteration   2: 85394.271 ns/op
# Warmup Iteration   3: 81727.719 ns/op
# Warmup Iteration   4: 84446.447 ns/op
# Warmup Iteration   5: 82409.159 ns/op
Iteration   1: 82598.717 ns/op
Iteration   2: 82628.733 ns/op
Iteration   3: 83632.936 ns/op
Iteration   4: 83775.449 ns/op
Iteration   5: 82749.445 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  83077.056 ±(99.9%) 2223.631 ns/op [Average]
  (min, avg, max) = (82598.717, 83077.056, 83775.449), stdev = 577.470
  CI (99.9%): [80853.425, 85300.687] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 49.74% complete, ETA 01:14:37
# Fork: 1 of 1
# Warmup Iteration   1: 1482449.211 ns/op
# Warmup Iteration   2: 1110905.143 ns/op
# Warmup Iteration   3: 1029989.895 ns/op
# Warmup Iteration   4: 1099709.114 ns/op
# Warmup Iteration   5: 1023231.673 ns/op
Iteration   1: 1017939.806 ns/op
Iteration   2: 1018786.356 ns/op
Iteration   3: 1033338.279 ns/op
Iteration   4: 1025729.077 ns/op
Iteration   5: 1022505.936 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  1023659.891 ±(99.9%) 24028.378 ns/op [Average]
  (min, avg, max) = (1017939.806, 1023659.891, 1033338.279), stdev = 6240.093
  CI (99.9%): [999631.513, 1047688.269] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 50.00% complete, ETA 01:14:14
# Fork: 1 of 1
# Warmup Iteration   1: 115805.695 ns/op
# Warmup Iteration   2: 20889.155 ns/op
# Warmup Iteration   3: 17249.732 ns/op
# Warmup Iteration   4: 17181.862 ns/op
# Warmup Iteration   5: 17136.837 ns/op
Iteration   1: 16555.617 ns/op
Iteration   2: 16530.080 ns/op
Iteration   3: 16976.025 ns/op
Iteration   4: 16524.096 ns/op
Iteration   5: 16468.446 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  16610.853 ±(99.9%) 795.539 ns/op [Average]
  (min, avg, max) = (16468.446, 16610.853, 16976.025), stdev = 206.599
  CI (99.9%): [15815.314, 17406.392] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 50.26% complete, ETA 01:13:51
# Fork: 1 of 1
# Warmup Iteration   1: 121505.181 ns/op
# Warmup Iteration   2: 36838.813 ns/op
# Warmup Iteration   3: 33184.209 ns/op
# Warmup Iteration   4: 31506.507 ns/op
# Warmup Iteration   5: 31272.503 ns/op
Iteration   1: 31143.186 ns/op
Iteration   2: 31081.618 ns/op
Iteration   3: 31196.122 ns/op
Iteration   4: 31160.610 ns/op
Iteration   5: 31173.389 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  31150.985 ±(99.9%) 166.788 ns/op [Average]
  (min, avg, max) = (31081.618, 31150.985, 31196.122), stdev = 43.314
  CI (99.9%): [30984.198, 31317.773] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 50.51% complete, ETA 01:13:28
# Fork: 1 of 1
# Warmup Iteration   1: 345714.796 ns/op
# Warmup Iteration   2: 83199.477 ns/op
# Warmup Iteration   3: 60647.106 ns/op
# Warmup Iteration   4: 61427.365 ns/op
# Warmup Iteration   5: 58366.328 ns/op
Iteration   1: 58148.449 ns/op
Iteration   2: 58078.625 ns/op
Iteration   3: 58102.652 ns/op
Iteration   4: 58097.651 ns/op
Iteration   5: 58005.772 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  58086.630 ±(99.9%) 200.101 ns/op [Average]
  (min, avg, max) = (58005.772, 58086.630, 58148.449), stdev = 51.966
  CI (99.9%): [57886.529, 58286.731] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 50.77% complete, ETA 01:13:05
# Fork: 1 of 1
# Warmup Iteration   1: 816774.281 ns/op
# Warmup Iteration   2: 161124.534 ns/op
# Warmup Iteration   3: 120720.140 ns/op
# Warmup Iteration   4: 123194.915 ns/op
# Warmup Iteration   5: 117410.278 ns/op
Iteration   1: 116567.875 ns/op
Iteration   2: 116238.857 ns/op
Iteration   3: 116300.486 ns/op
Iteration   4: 116111.561 ns/op
Iteration   5: 115840.393 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  116211.834 ±(99.9%) 1024.912 ns/op [Average]
  (min, avg, max) = (115840.393, 116211.834, 116567.875), stdev = 266.166
  CI (99.9%): [115186.923, 117236.746] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 51.03% complete, ETA 01:12:42
# Fork: 1 of 1
# Warmup Iteration   1: 4570975.822 ns/op
# Warmup Iteration   2: 998147.177 ns/op
# Warmup Iteration   3: 888724.889 ns/op
# Warmup Iteration   4: 896668.505 ns/op
# Warmup Iteration   5: 847974.548 ns/op
Iteration   1: 843033.117 ns/op
Iteration   2: 844250.758 ns/op
Iteration   3: 844022.780 ns/op
Iteration   4: 841582.462 ns/op
Iteration   5: 843419.957 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  843261.815 ±(99.9%) 4063.576 ns/op [Average]
  (min, avg, max) = (841582.462, 843261.815, 844250.758), stdev = 1055.298
  CI (99.9%): [839198.239, 847325.391] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 51.28% complete, ETA 01:12:20
# Fork: 1 of 1
# Warmup Iteration   1: 43517.939 ns/op
# Warmup Iteration   2: 13604.084 ns/op
# Warmup Iteration   3: 13835.596 ns/op
# Warmup Iteration   4: 13215.114 ns/op
# Warmup Iteration   5: 12913.334 ns/op
Iteration   1: 13079.740 ns/op
Iteration   2: 12922.588 ns/op
Iteration   3: 12945.380 ns/op
Iteration   4: 12930.665 ns/op
Iteration   5: 13233.344 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13022.343 ±(99.9%) 516.960 ns/op [Average]
  (min, avg, max) = (12922.588, 13022.343, 13233.344), stdev = 134.253
  CI (99.9%): [12505.384, 13539.303] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 51.54% complete, ETA 01:11:57
# Fork: 1 of 1
# Warmup Iteration   1: 207708.103 ns/op
# Warmup Iteration   2: 44875.950 ns/op
# Warmup Iteration   3: 23593.587 ns/op
# Warmup Iteration   4: 23669.629 ns/op
# Warmup Iteration   5: 22223.869 ns/op
Iteration   1: 22244.480 ns/op
Iteration   2: 22220.530 ns/op
Iteration   3: 22170.510 ns/op
Iteration   4: 22089.757 ns/op
Iteration   5: 22148.291 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  22174.714 ±(99.9%) 235.015 ns/op [Average]
  (min, avg, max) = (22089.757, 22174.714, 22244.480), stdev = 61.033
  CI (99.9%): [21939.699, 22409.729] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 51.79% complete, ETA 01:11:34
# Fork: 1 of 1
# Warmup Iteration   1: 397274.352 ns/op
# Warmup Iteration   2: 59595.387 ns/op
# Warmup Iteration   3: 44524.403 ns/op
# Warmup Iteration   4: 43753.054 ns/op
# Warmup Iteration   5: 42158.740 ns/op
Iteration   1: 42988.581 ns/op
Iteration   2: 42166.375 ns/op
Iteration   3: 42111.864 ns/op
Iteration   4: 42204.512 ns/op
Iteration   5: 42020.864 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  42298.439 ±(99.9%) 1509.160 ns/op [Average]
  (min, avg, max) = (42020.864, 42298.439, 42988.581), stdev = 391.924
  CI (99.9%): [40789.279, 43807.599] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 52.05% complete, ETA 01:11:11
# Fork: 1 of 1
# Warmup Iteration   1: 351903.759 ns/op
# Warmup Iteration   2: 100478.793 ns/op
# Warmup Iteration   3: 86265.878 ns/op
# Warmup Iteration   4: 90267.712 ns/op
# Warmup Iteration   5: 82562.971 ns/op
Iteration   1: 82768.653 ns/op
Iteration   2: 82646.683 ns/op
Iteration   3: 82611.931 ns/op
Iteration   4: 82635.032 ns/op
Iteration   5: 82703.319 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  82673.124 ±(99.9%) 243.019 ns/op [Average]
  (min, avg, max) = (82611.931, 82673.124, 82768.653), stdev = 63.111
  CI (99.9%): [82430.104, 82916.143] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 52.31% complete, ETA 01:10:48
# Fork: 1 of 1
# Warmup Iteration   1: 4770341.686 ns/op
# Warmup Iteration   2: 953893.826 ns/op
# Warmup Iteration   3: 765470.459 ns/op
# Warmup Iteration   4: 768010.141 ns/op
# Warmup Iteration   5: 692540.282 ns/op
Iteration   1: 683496.715 ns/op
Iteration   2: 683574.800 ns/op
Iteration   3: 684015.923 ns/op
Iteration   4: 683147.003 ns/op
Iteration   5: 683503.700 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  683547.628 ±(99.9%) 1194.725 ns/op [Average]
  (min, avg, max) = (683147.003, 683547.628, 684015.923), stdev = 310.266
  CI (99.9%): [682352.903, 684742.354] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 52.56% complete, ETA 01:10:25
# Fork: 1 of 1
# Warmup Iteration   1: 113895.023 ns/op
# Warmup Iteration   2: 20155.083 ns/op
# Warmup Iteration   3: 14870.816 ns/op
# Warmup Iteration   4: 14751.759 ns/op
# Warmup Iteration   5: 14403.750 ns/op
Iteration   1: 14401.537 ns/op
Iteration   2: 14649.917 ns/op
Iteration   3: 14379.701 ns/op
Iteration   4: 14362.296 ns/op
Iteration   5: 14438.723 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14446.435 ±(99.9%) 451.581 ns/op [Average]
  (min, avg, max) = (14362.296, 14446.435, 14649.917), stdev = 117.274
  CI (99.9%): [13994.854, 14898.016] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 52.82% complete, ETA 01:10:02
# Fork: 1 of 1
# Warmup Iteration   1: 167399.941 ns/op
# Warmup Iteration   2: 47077.934 ns/op
# Warmup Iteration   3: 25041.655 ns/op
# Warmup Iteration   4: 25129.167 ns/op
# Warmup Iteration   5: 24198.943 ns/op
Iteration   1: 24367.265 ns/op
Iteration   2: 24043.325 ns/op
Iteration   3: 24154.596 ns/op
Iteration   4: 24072.280 ns/op
Iteration   5: 24150.532 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24157.600 ±(99.9%) 488.428 ns/op [Average]
  (min, avg, max) = (24043.325, 24157.600, 24367.265), stdev = 126.843
  CI (99.9%): [23669.172, 24646.028] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 53.08% complete, ETA 01:09:39
# Fork: 1 of 1
# Warmup Iteration   1: 405525.673 ns/op
# Warmup Iteration   2: 143495.761 ns/op
# Warmup Iteration   3: 55432.005 ns/op
# Warmup Iteration   4: 45278.657 ns/op
# Warmup Iteration   5: 43058.574 ns/op
Iteration   1: 42874.726 ns/op
Iteration   2: 42870.223 ns/op
Iteration   3: 43426.107 ns/op
Iteration   4: 42897.139 ns/op
Iteration   5: 42831.115 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  42979.862 ±(99.9%) 964.925 ns/op [Average]
  (min, avg, max) = (42831.115, 42979.862, 43426.107), stdev = 250.588
  CI (99.9%): [42014.937, 43944.787] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 53.33% complete, ETA 01:09:16
# Fork: 1 of 1
# Warmup Iteration   1: 708772.836 ns/op
# Warmup Iteration   2: 186199.282 ns/op
# Warmup Iteration   3: 91166.654 ns/op
# Warmup Iteration   4: 84654.583 ns/op
# Warmup Iteration   5: 80959.956 ns/op
Iteration   1: 80817.893 ns/op
Iteration   2: 80751.522 ns/op
Iteration   3: 80812.620 ns/op
Iteration   4: 80613.192 ns/op
Iteration   5: 80905.985 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  80780.242 ±(99.9%) 417.434 ns/op [Average]
  (min, avg, max) = (80613.192, 80780.242, 80905.985), stdev = 108.406
  CI (99.9%): [80362.809, 81197.676] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 53.59% complete, ETA 01:08:53
# Fork: 1 of 1
# Warmup Iteration   1: 5501453.956 ns/op
# Warmup Iteration   2: 931251.932 ns/op
# Warmup Iteration   3: 655338.067 ns/op
# Warmup Iteration   4: 651720.055 ns/op
# Warmup Iteration   5: 612621.971 ns/op
Iteration   1: 593227.529 ns/op
Iteration   2: 593085.865 ns/op
Iteration   3: 593262.087 ns/op
Iteration   4: 593931.458 ns/op
Iteration   5: 593165.942 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  593334.576 ±(99.9%) 1310.459 ns/op [Average]
  (min, avg, max) = (593085.865, 593334.576, 593931.458), stdev = 340.322
  CI (99.9%): [592024.117, 594645.035] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 53.85% complete, ETA 01:08:31
# Fork: 1 of 1
# Warmup Iteration   1: 40012.235 ns/op
# Warmup Iteration   2: 13764.052 ns/op
# Warmup Iteration   3: 5708.295 ns/op
# Warmup Iteration   4: 5382.160 ns/op
# Warmup Iteration   5: 5397.821 ns/op
Iteration   1: 5395.078 ns/op
Iteration   2: 5434.329 ns/op
Iteration   3: 5381.160 ns/op
Iteration   4: 5400.638 ns/op
Iteration   5: 5494.005 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  5421.042 ±(99.9%) 174.145 ns/op [Average]
  (min, avg, max) = (5381.160, 5421.042, 5494.005), stdev = 45.225
  CI (99.9%): [5246.897, 5595.187] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 54.10% complete, ETA 01:08:08
# Fork: 1 of 1
# Warmup Iteration   1: 69285.298 ns/op
# Warmup Iteration   2: 21527.317 ns/op
# Warmup Iteration   3: 10717.301 ns/op
# Warmup Iteration   4: 10305.116 ns/op
# Warmup Iteration   5: 10256.989 ns/op
Iteration   1: 10207.709 ns/op
Iteration   2: 10259.582 ns/op
Iteration   3: 10153.652 ns/op
Iteration   4: 10187.120 ns/op
Iteration   5: 10177.394 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  10197.092 ±(99.9%) 153.932 ns/op [Average]
  (min, avg, max) = (10153.652, 10197.092, 10259.582), stdev = 39.976
  CI (99.9%): [10043.159, 10351.024] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 54.36% complete, ETA 01:07:45
# Fork: 1 of 1
# Warmup Iteration   1: 143890.780 ns/op
# Warmup Iteration   2: 32196.771 ns/op
# Warmup Iteration   3: 19561.606 ns/op
# Warmup Iteration   4: 18546.351 ns/op
# Warmup Iteration   5: 18602.085 ns/op
Iteration   1: 18644.457 ns/op
Iteration   2: 18570.212 ns/op
Iteration   3: 18591.955 ns/op
Iteration   4: 18597.793 ns/op
Iteration   5: 18604.500 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  18601.783 ±(99.9%) 104.352 ns/op [Average]
  (min, avg, max) = (18570.212, 18601.783, 18644.457), stdev = 27.100
  CI (99.9%): [18497.431, 18706.136] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 54.62% complete, ETA 01:07:22
# Fork: 1 of 1
# Warmup Iteration   1: 336222.934 ns/op
# Warmup Iteration   2: 80865.708 ns/op
# Warmup Iteration   3: 36368.459 ns/op
# Warmup Iteration   4: 34475.227 ns/op
# Warmup Iteration   5: 34380.796 ns/op
Iteration   1: 34213.775 ns/op
Iteration   2: 34279.005 ns/op
Iteration   3: 34595.833 ns/op
Iteration   4: 34171.943 ns/op
Iteration   5: 34373.207 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  34326.753 ±(99.9%) 648.842 ns/op [Average]
  (min, avg, max) = (34171.943, 34326.753, 34595.833), stdev = 168.502
  CI (99.9%): [33677.911, 34975.595] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 54.87% complete, ETA 01:06:59
# Fork: 1 of 1
# Warmup Iteration   1: 2678228.020 ns/op
# Warmup Iteration   2: 538534.246 ns/op
# Warmup Iteration   3: 334061.391 ns/op
# Warmup Iteration   4: 282556.191 ns/op
# Warmup Iteration   5: 278550.376 ns/op
Iteration   1: 280251.464 ns/op
Iteration   2: 279069.511 ns/op
Iteration   3: 285054.812 ns/op
Iteration   4: 279929.941 ns/op
Iteration   5: 279834.918 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  280828.129 ±(99.9%) 9250.233 ns/op [Average]
  (min, avg, max) = (279069.511, 280828.129, 285054.812), stdev = 2402.256
  CI (99.9%): [271577.896, 290078.362] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 55.13% complete, ETA 01:06:36
# Fork: 1 of 1
# Warmup Iteration   1: 38251.995 ns/op
# Warmup Iteration   2: 11093.299 ns/op
# Warmup Iteration   3: 9421.102 ns/op
# Warmup Iteration   4: 8955.419 ns/op
# Warmup Iteration   5: 8915.720 ns/op
Iteration   1: 8950.809 ns/op
Iteration   2: 8926.405 ns/op
Iteration   3: 8906.830 ns/op
Iteration   4: 8888.721 ns/op
Iteration   5: 8880.405 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8910.634 ±(99.9%) 110.118 ns/op [Average]
  (min, avg, max) = (8880.405, 8910.634, 8950.809), stdev = 28.597
  CI (99.9%): [8800.516, 9020.752] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 55.38% complete, ETA 01:06:13
# Fork: 1 of 1
# Warmup Iteration   1: 110059.178 ns/op
# Warmup Iteration   2: 29469.886 ns/op
# Warmup Iteration   3: 14723.681 ns/op
# Warmup Iteration   4: 13978.896 ns/op
# Warmup Iteration   5: 14102.677 ns/op
Iteration   1: 13958.683 ns/op
Iteration   2: 14034.586 ns/op
Iteration   3: 13970.668 ns/op
Iteration   4: 14027.284 ns/op
Iteration   5: 13971.696 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13992.584 ±(99.9%) 136.605 ns/op [Average]
  (min, avg, max) = (13958.683, 13992.584, 14034.586), stdev = 35.476
  CI (99.9%): [13855.979, 14129.189] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 55.64% complete, ETA 01:05:51
# Fork: 1 of 1
# Warmup Iteration   1: 240397.975 ns/op
# Warmup Iteration   2: 93121.997 ns/op
# Warmup Iteration   3: 29697.056 ns/op
# Warmup Iteration   4: 24726.598 ns/op
# Warmup Iteration   5: 24737.207 ns/op
Iteration   1: 24635.787 ns/op
Iteration   2: 24866.512 ns/op
Iteration   3: 24620.932 ns/op
Iteration   4: 24955.185 ns/op
Iteration   5: 24794.981 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24774.679 ±(99.9%) 559.195 ns/op [Average]
  (min, avg, max) = (24620.932, 24774.679, 24955.185), stdev = 145.221
  CI (99.9%): [24215.484, 25333.875] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 55.90% complete, ETA 01:05:28
# Fork: 1 of 1
# Warmup Iteration   1: 481642.668 ns/op
# Warmup Iteration   2: 95854.850 ns/op
# Warmup Iteration   3: 53114.557 ns/op
# Warmup Iteration   4: 49532.628 ns/op
# Warmup Iteration   5: 49453.031 ns/op
Iteration   1: 49370.553 ns/op
Iteration   2: 49285.230 ns/op
Iteration   3: 49328.619 ns/op
Iteration   4: 49134.683 ns/op
Iteration   5: 49157.661 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  49255.349 ±(99.9%) 402.187 ns/op [Average]
  (min, avg, max) = (49134.683, 49255.349, 49370.553), stdev = 104.447
  CI (99.9%): [48853.162, 49657.537] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 56.15% complete, ETA 01:05:05
# Fork: 1 of 1
# Warmup Iteration   1: 2429830.757 ns/op
# Warmup Iteration   2: 679271.186 ns/op
# Warmup Iteration   3: 473589.742 ns/op
# Warmup Iteration   4: 419011.304 ns/op
# Warmup Iteration   5: 402470.523 ns/op
Iteration   1: 402556.987 ns/op
Iteration   2: 403841.383 ns/op
Iteration   3: 403785.299 ns/op
Iteration   4: 402917.807 ns/op
Iteration   5: 409745.941 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  404569.484 ±(99.9%) 11344.537 ns/op [Average]
  (min, avg, max) = (402556.987, 404569.484, 409745.941), stdev = 2946.140
  CI (99.9%): [393224.947, 415914.020] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 56.41% complete, ETA 01:04:42
# Fork: 1 of 1
# Warmup Iteration   1: 52778.643 ns/op
# Warmup Iteration   2: 12118.233 ns/op
# Warmup Iteration   3: 8432.965 ns/op
# Warmup Iteration   4: 8325.600 ns/op
# Warmup Iteration   5: 9161.453 ns/op
Iteration   1: 8356.772 ns/op
Iteration   2: 8349.359 ns/op
Iteration   3: 8375.480 ns/op
Iteration   4: 8357.503 ns/op
Iteration   5: 8340.662 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8355.955 ±(99.9%) 49.525 ns/op [Average]
  (min, avg, max) = (8340.662, 8355.955, 8375.480), stdev = 12.862
  CI (99.9%): [8306.430, 8405.481] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 56.67% complete, ETA 01:04:19
# Fork: 1 of 1
# Warmup Iteration   1: 62271.699 ns/op
# Warmup Iteration   2: 20813.195 ns/op
# Warmup Iteration   3: 15424.571 ns/op
# Warmup Iteration   4: 15231.109 ns/op
# Warmup Iteration   5: 15409.273 ns/op
Iteration   1: 15332.775 ns/op
Iteration   2: 15326.970 ns/op
Iteration   3: 15245.470 ns/op
Iteration   4: 15315.093 ns/op
Iteration   5: 15330.439 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  15310.149 ±(99.9%) 141.671 ns/op [Average]
  (min, avg, max) = (15245.470, 15310.149, 15332.775), stdev = 36.792
  CI (99.9%): [15168.478, 15451.820] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 56.92% complete, ETA 01:03:56
# Fork: 1 of 1
# Warmup Iteration   1: 147012.855 ns/op
# Warmup Iteration   2: 49207.030 ns/op
# Warmup Iteration   3: 29743.114 ns/op
# Warmup Iteration   4: 27549.038 ns/op
# Warmup Iteration   5: 27201.126 ns/op
Iteration   1: 28011.634 ns/op
Iteration   2: 27217.572 ns/op
Iteration   3: 27284.864 ns/op
Iteration   4: 27378.078 ns/op
Iteration   5: 27240.152 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  27426.460 ±(99.9%) 1281.697 ns/op [Average]
  (min, avg, max) = (27217.572, 27426.460, 28011.634), stdev = 332.853
  CI (99.9%): [26144.763, 28708.157] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 57.18% complete, ETA 01:03:33
# Fork: 1 of 1
# Warmup Iteration   1: 253908.116 ns/op
# Warmup Iteration   2: 80554.356 ns/op
# Warmup Iteration   3: 59462.580 ns/op
# Warmup Iteration   4: 55695.998 ns/op
# Warmup Iteration   5: 58467.076 ns/op
Iteration   1: 55864.694 ns/op
Iteration   2: 55295.573 ns/op
Iteration   3: 55421.833 ns/op
Iteration   4: 55373.264 ns/op
Iteration   5: 55468.526 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  55484.778 ±(99.9%) 854.106 ns/op [Average]
  (min, avg, max) = (55295.573, 55484.778, 55864.694), stdev = 221.809
  CI (99.9%): [54630.672, 56338.884] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 57.44% complete, ETA 01:03:11
# Fork: 1 of 1
# Warmup Iteration   1: 2162211.598 ns/op
# Warmup Iteration   2: 639387.423 ns/op
# Warmup Iteration   3: 530816.535 ns/op
# Warmup Iteration   4: 429659.312 ns/op
# Warmup Iteration   5: 417194.355 ns/op
Iteration   1: 419008.418 ns/op
Iteration   2: 418223.227 ns/op
Iteration   3: 416977.599 ns/op
Iteration   4: 416657.828 ns/op
Iteration   5: 416904.291 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  417554.272 ±(99.9%) 3908.300 ns/op [Average]
  (min, avg, max) = (416657.828, 417554.272, 419008.418), stdev = 1014.973
  CI (99.9%): [413645.973, 421462.572] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 57.69% complete, ETA 01:02:48
# Fork: 1 of 1
# Warmup Iteration   1: 466626.482 ns/op
# Warmup Iteration   2: 165306.292 ns/op
# Warmup Iteration   3: 138619.408 ns/op
# Warmup Iteration   4: 134121.409 ns/op
# Warmup Iteration   5: 135907.503 ns/op
Iteration   1: 130762.849 ns/op
Iteration   2: 130598.831 ns/op
Iteration   3: 130739.727 ns/op
Iteration   4: 130372.479 ns/op
Iteration   5: 131253.331 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  130745.443 ±(99.9%) 1246.092 ns/op [Average]
  (min, avg, max) = (130372.479, 130745.443, 131253.331), stdev = 323.606
  CI (99.9%): [129499.352, 131991.535] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 57.95% complete, ETA 01:02:25
# Fork: 1 of 1
# Warmup Iteration   1: 680862.510 ns/op
# Warmup Iteration   2: 234816.851 ns/op
# Warmup Iteration   3: 191421.702 ns/op
# Warmup Iteration   4: 190853.568 ns/op
# Warmup Iteration   5: 183941.305 ns/op
Iteration   1: 182149.399 ns/op
Iteration   2: 182180.656 ns/op
Iteration   3: 181733.117 ns/op
Iteration   4: 182184.751 ns/op
Iteration   5: 181263.662 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  181902.317 ±(99.9%) 1557.965 ns/op [Average]
  (min, avg, max) = (181263.662, 181902.317, 182184.751), stdev = 404.598
  CI (99.9%): [180344.353, 183460.282] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 58.21% complete, ETA 01:02:02
# Fork: 1 of 1
# Warmup Iteration   1: 984280.510 ns/op
# Warmup Iteration   2: 374070.527 ns/op
# Warmup Iteration   3: 257144.869 ns/op
# Warmup Iteration   4: 238822.034 ns/op
# Warmup Iteration   5: 241067.095 ns/op
Iteration   1: 232153.647 ns/op
Iteration   2: 231875.687 ns/op
Iteration   3: 231612.633 ns/op
Iteration   4: 231543.986 ns/op
Iteration   5: 231255.147 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  231688.220 ±(99.9%) 1314.073 ns/op [Average]
  (min, avg, max) = (231255.147, 231688.220, 232153.647), stdev = 341.261
  CI (99.9%): [230374.147, 233002.293] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 58.46% complete, ETA 01:01:39
# Fork: 1 of 1
# Warmup Iteration   1: 1435360.857 ns/op
# Warmup Iteration   2: 414976.883 ns/op
# Warmup Iteration   3: 364028.681 ns/op
# Warmup Iteration   4: 368034.740 ns/op
# Warmup Iteration   5: 357872.712 ns/op
Iteration   1: 351555.473 ns/op
Iteration   2: 354666.725 ns/op
Iteration   3: 351426.811 ns/op
Iteration   4: 351360.968 ns/op
Iteration   5: 350438.265 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  351889.648 ±(99.9%) 6216.155 ns/op [Average]
  (min, avg, max) = (350438.265, 351889.648, 354666.725), stdev = 1614.316
  CI (99.9%): [345673.493, 358105.804] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 58.72% complete, ETA 01:01:16
# Fork: 1 of 1
# Warmup Iteration   1: 7974833.132 ns/op
# Warmup Iteration   2: 2362495.029 ns/op
# Warmup Iteration   3: 2084139.668 ns/op
# Warmup Iteration   4: 2092371.829 ns/op
# Warmup Iteration   5: 2004463.214 ns/op
Iteration   1: 1990499.963 ns/op
Iteration   2: 1982558.326 ns/op
Iteration   3: 2000411.202 ns/op
Iteration   4: 1988607.101 ns/op
Iteration   5: 1981272.476 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1988669.814 ±(99.9%) 29406.699 ns/op [Average]
  (min, avg, max) = (1981272.476, 1988669.814, 2000411.202), stdev = 7636.826
  CI (99.9%): [1959263.114, 2018076.513] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 58.97% complete, ETA 01:00:53
# Fork: 1 of 1
# Warmup Iteration   1: 16445.280 ns/op
# Warmup Iteration   2: 5589.006 ns/op
# Warmup Iteration   3: 5233.847 ns/op
# Warmup Iteration   4: 5392.887 ns/op
# Warmup Iteration   5: 4984.260 ns/op
Iteration   1: 4983.184 ns/op
Iteration   2: 4973.684 ns/op
Iteration   3: 5017.904 ns/op
Iteration   4: 4989.512 ns/op
Iteration   5: 5058.962 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  5004.649 ±(99.9%) 133.034 ns/op [Average]
  (min, avg, max) = (4973.684, 5004.649, 5058.962), stdev = 34.548
  CI (99.9%): [4871.615, 5137.683] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 59.23% complete, ETA 01:00:30
# Fork: 1 of 1
# Warmup Iteration   1: 21176.942 ns/op
# Warmup Iteration   2: 10504.100 ns/op
# Warmup Iteration   3: 8997.347 ns/op
# Warmup Iteration   4: 8986.054 ns/op
# Warmup Iteration   5: 8991.042 ns/op
Iteration   1: 8976.505 ns/op
Iteration   2: 9000.089 ns/op
Iteration   3: 9272.946 ns/op
Iteration   4: 9072.329 ns/op
Iteration   5: 9027.963 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  9069.966 ±(99.9%) 458.002 ns/op [Average]
  (min, avg, max) = (8976.505, 9069.966, 9272.946), stdev = 118.942
  CI (99.9%): [8611.964, 9527.969] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 59.49% complete, ETA 01:00:07
# Fork: 1 of 1
# Warmup Iteration   1: 47231.333 ns/op
# Warmup Iteration   2: 16767.488 ns/op
# Warmup Iteration   3: 15250.460 ns/op
# Warmup Iteration   4: 14971.519 ns/op
# Warmup Iteration   5: 15243.597 ns/op
Iteration   1: 14956.034 ns/op
Iteration   2: 14933.215 ns/op
Iteration   3: 14950.112 ns/op
Iteration   4: 15267.469 ns/op
Iteration   5: 15011.512 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  15023.668 ±(99.9%) 536.862 ns/op [Average]
  (min, avg, max) = (14933.215, 15023.668, 15267.469), stdev = 139.421
  CI (99.9%): [14486.807, 15560.530] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 59.74% complete, ETA 00:59:45
# Fork: 1 of 1
# Warmup Iteration   1: 71408.153 ns/op
# Warmup Iteration   2: 30082.769 ns/op
# Warmup Iteration   3: 27110.642 ns/op
# Warmup Iteration   4: 28051.760 ns/op
# Warmup Iteration   5: 26784.953 ns/op
Iteration   1: 26865.258 ns/op
Iteration   2: 26747.619 ns/op
Iteration   3: 27429.932 ns/op
Iteration   4: 27012.776 ns/op
Iteration   5: 27131.372 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  27037.391 ±(99.9%) 1013.540 ns/op [Average]
  (min, avg, max) = (26747.619, 27037.391, 27429.932), stdev = 263.213
  CI (99.9%): [26023.851, 28050.931] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 60.00% complete, ETA 00:59:22
# Fork: 1 of 1
# Warmup Iteration   1: 530971.986 ns/op
# Warmup Iteration   2: 317641.357 ns/op
# Warmup Iteration   3: 249260.162 ns/op
# Warmup Iteration   4: 247979.544 ns/op
# Warmup Iteration   5: 248078.413 ns/op
Iteration   1: 248331.184 ns/op
Iteration   2: 247777.157 ns/op
Iteration   3: 247773.350 ns/op
Iteration   4: 250073.448 ns/op
Iteration   5: 249097.632 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  248610.554 ±(99.9%) 3778.154 ns/op [Average]
  (min, avg, max) = (247773.350, 248610.554, 250073.448), stdev = 981.175
  CI (99.9%): [244832.400, 252388.708] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 60.26% complete, ETA 00:58:59
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
24314.704 ns/op
# Warmup Iteration   2: 14832.416 ns/op
# Warmup Iteration   3: 12817.150 ns/op
# Warmup Iteration   4: 11193.546 ns/op
# Warmup Iteration   5: 16901.422 ns/op
Iteration   1: 12074.618 ns/op
Iteration   2: 11229.964 ns/op
Iteration   3: 11277.672 ns/op
Iteration   4: 11252.619 ns/op
Iteration   5: 11227.229 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  11412.420 ±(99.9%) 1427.578 ns/op [Average]
  (min, avg, max) = (11227.229, 11412.420, 12074.618), stdev = 370.738
  CI (99.9%): [9984.842, 12839.999] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 60.51% complete, ETA 00:58:36
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
50972.260 ns/op
# Warmup Iteration   2: 19734.876 ns/op
# Warmup Iteration   3: 19846.649 ns/op
# Warmup Iteration   4: 19937.256 ns/op
# Warmup Iteration   5: 24315.742 ns/op
Iteration   1: 29653.424 ns/op
Iteration   2: 30212.908 ns/op
Iteration   3: 29929.073 ns/op
Iteration   4: 31926.717 ns/op
Iteration   5: 31856.080 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  30715.640 ±(99.9%) 4203.662 ns/op [Average]
  (min, avg, max) = (29653.424, 30715.640, 31926.717), stdev = 1091.678
  CI (99.9%): [26511.978, 34919.302] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 60.77% complete, ETA 00:58:13
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
69450.602 ns/op
# Warmup Iteration   2: 34383.448 ns/op
# Warmup Iteration   3: 35608.111 ns/op
# Warmup Iteration   4: 43036.235 ns/op
# Warmup Iteration   5: 41577.288 ns/op
Iteration   1: 35877.375 ns/op
Iteration   2: 35634.875 ns/op
Iteration   3: 35415.502 ns/op
Iteration   4: 35612.723 ns/op
Iteration   5: 35586.878 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  35625.471 ±(99.9%) 636.472 ns/op [Average]
  (min, avg, max) = (35415.502, 35625.471, 35877.375), stdev = 165.290
  CI (99.9%): [34988.998, 36261.943] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 61.03% complete, ETA 00:57:50
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
132599.412 ns/op
# Warmup Iteration   2: 64752.665 ns/op
# Warmup Iteration   3: 65953.217 ns/op
# Warmup Iteration   4: 63534.943 ns/op
# Warmup Iteration   5: 64257.053 ns/op
Iteration   1: 64926.944 ns/op
Iteration   2: 65001.527 ns/op
Iteration   3: 64913.525 ns/op
Iteration   4: 64874.429 ns/op
Iteration   5: 64862.806 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  64915.846 ±(99.9%) 210.894 ns/op [Average]
  (min, avg, max) = (64862.806, 64915.846, 65001.527), stdev = 54.768
  CI (99.9%): [64704.952, 65126.740] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 61.28% complete, ETA 00:57:28
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1228108.248 ns/op
# Warmup Iteration   2: 782592.338 ns/op
# Warmup Iteration   3: 787717.110 ns/op
# Warmup Iteration   4: 773366.882 ns/op
# Warmup Iteration   5: 785095.357 ns/op
Iteration   1: 787539.180 ns/op
Iteration   2: 778639.590 ns/op
Iteration   3: 783626.018 ns/op
Iteration   4: 782682.643 ns/op
Iteration   5: 783382.496 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  783173.985 ±(99.9%) 12192.761 ns/op [Average]
  (min, avg, max) = (778639.590, 783173.985, 787539.180), stdev = 3166.421
  CI (99.9%): [770981.225, 795366.746] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 61.54% complete, ETA 00:57:05
# Fork: 1 of 1
# Warmup Iteration   1: 21448.473 ns/op
# Warmup Iteration   2: 6989.561 ns/op
# Warmup Iteration   3: 6705.480 ns/op
# Warmup Iteration   4: 6699.511 ns/op
# Warmup Iteration   5: 6271.587 ns/op
Iteration   1: 6276.882 ns/op
Iteration   2: 6288.035 ns/op
Iteration   3: 6483.338 ns/op
Iteration   4: 6286.581 ns/op
Iteration   5: 6338.641 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  6334.695 ±(99.9%) 333.168 ns/op [Average]
  (min, avg, max) = (6276.882, 6334.695, 6483.338), stdev = 86.523
  CI (99.9%): [6001.527, 6667.863] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 61.79% complete, ETA 00:56:42
# Fork: 1 of 1
# Warmup Iteration   1: 60852.722 ns/op
# Warmup Iteration   2: 20060.497 ns/op
# Warmup Iteration   3: 13985.265 ns/op
# Warmup Iteration   4: 13502.103 ns/op
# Warmup Iteration   5: 13216.808 ns/op
Iteration   1: 13157.157 ns/op
Iteration   2: 13160.103 ns/op
Iteration   3: 13224.721 ns/op
Iteration   4: 13199.042 ns/op
Iteration   5: 13183.910 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13184.986 ±(99.9%) 108.422 ns/op [Average]
  (min, avg, max) = (13157.157, 13184.986, 13224.721), stdev = 28.157
  CI (99.9%): [13076.565, 13293.408] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 62.05% complete, ETA 00:56:19
# Fork: 1 of 1
# Warmup Iteration   1: 258569.386 ns/op
# Warmup Iteration   2: 51491.210 ns/op
# Warmup Iteration   3: 24900.320 ns/op
# Warmup Iteration   4: 25556.727 ns/op
# Warmup Iteration   5: 23960.697 ns/op
Iteration   1: 23924.900 ns/op
Iteration   2: 23903.844 ns/op
Iteration   3: 24087.867 ns/op
Iteration   4: 24022.927 ns/op
Iteration   5: 23965.149 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  23980.938 ±(99.9%) 288.989 ns/op [Average]
  (min, avg, max) = (23903.844, 23980.938, 24087.867), stdev = 75.050
  CI (99.9%): [23691.948, 24269.927] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 62.31% complete, ETA 00:55:56
# Fork: 1 of 1
# Warmup Iteration   1: 277176.494 ns/op
# Warmup Iteration   2: 58424.344 ns/op
# Warmup Iteration   3: 46447.098 ns/op
# Warmup Iteration   4: 45955.328 ns/op
# Warmup Iteration   5: 43769.489 ns/op
Iteration   1: 43749.093 ns/op
Iteration   2: 43694.835 ns/op
Iteration   3: 43744.672 ns/op
Iteration   4: 43755.348 ns/op
Iteration   5: 43741.014 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  43736.992 ±(99.9%) 93.050 ns/op [Average]
  (min, avg, max) = (43694.835, 43736.992, 43755.348), stdev = 24.165
  CI (99.9%): [43643.943, 43830.042] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 62.56% complete, ETA 00:55:33
# Fork: 1 of 1
# Warmup Iteration   1: 1228122.441 ns/op
# Warmup Iteration   2: 441174.253 ns/op
# Warmup Iteration   3: 399797.650 ns/op
# Warmup Iteration   4: 375322.076 ns/op
# Warmup Iteration   5: 382549.771 ns/op
Iteration   1: 378148.834 ns/op
Iteration   2: 374846.742 ns/op
Iteration   3: 376761.242 ns/op
Iteration   4: 376018.096 ns/op
Iteration   5: 376755.684 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  376506.120 ±(99.9%) 4643.812 ns/op [Average]
  (min, avg, max) = (374846.742, 376506.120, 378148.834), stdev = 1205.983
  CI (99.9%): [371862.308, 381149.931] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 62.82% complete, ETA 00:55:10
# Fork: 1 of 1
# Warmup Iteration   1: 316053.642 ns/op
# Warmup Iteration   2: 80984.595 ns/op
# Warmup Iteration   3: 49469.252 ns/op
# Warmup Iteration   4: 45483.373 ns/op
# Warmup Iteration   5: 46639.610 ns/op
Iteration   1: 44863.099 ns/op
Iteration   2: 45072.935 ns/op
Iteration   3: 44716.479 ns/op
Iteration   4: 44681.638 ns/op
Iteration   5: 44942.861 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  44855.402 ±(99.9%) 622.457 ns/op [Average]
  (min, avg, max) = (44681.638, 44855.402, 45072.935), stdev = 161.650
  CI (99.9%): [44232.946, 45477.859] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 63.08% complete, ETA 00:54:48
# Fork: 1 of 1
# Warmup Iteration   1: 362928.832 ns/op
# Warmup Iteration   2: 125329.868 ns/op
# Warmup Iteration   3: 102291.191 ns/op
# Warmup Iteration   4: 81467.644 ns/op
# Warmup Iteration   5: 80848.908 ns/op
Iteration   1: 80807.440 ns/op
Iteration   2: 80564.780 ns/op
Iteration   3: 80364.751 ns/op
Iteration   4: 80354.279 ns/op
Iteration   5: 81408.981 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  80700.046 ±(99.9%) 1683.305 ns/op [Average]
  (min, avg, max) = (80354.279, 80700.046, 81408.981), stdev = 437.149
  CI (99.9%): [79016.741, 82383.351] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 63.33% complete, ETA 00:54:25
# Fork: 1 of 1
# Warmup Iteration   1: 976110.136 ns/op
# Warmup Iteration   2: 362131.866 ns/op
# Warmup Iteration   3: 240103.244 ns/op
# Warmup Iteration   4: 185592.921 ns/op
# Warmup Iteration   5: 180029.777 ns/op
Iteration   1: 180213.704 ns/op
Iteration   2: 179950.252 ns/op
Iteration   3: 179474.686 ns/op
Iteration   4: 180848.961 ns/op
Iteration   5: 179886.985 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  180074.918 ±(99.9%) 1953.554 ns/op [Average]
  (min, avg, max) = (179474.686, 180074.918, 180848.961), stdev = 507.332
  CI (99.9%): [178121.364, 182028.472] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 63.59% complete, ETA 00:54:03
# Fork: 1 of 1
# Warmup Iteration   1: 2739990.911 ns/op
# Warmup Iteration   2: 743629.212 ns/op
# Warmup Iteration   3: 463890.458 ns/op
# Warmup Iteration   4: 439140.965 ns/op
# Warmup Iteration   5: 401157.464 ns/op
Iteration   1: 400825.342 ns/op
Iteration   2: 401537.540 ns/op
Iteration   3: 399303.222 ns/op
Iteration   4: 400697.053 ns/op
Iteration   5: 402623.720 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  400997.375 ±(99.9%) 4687.168 ns/op [Average]
  (min, avg, max) = (399303.222, 400997.375, 402623.720), stdev = 1217.243
  CI (99.9%): [396310.208, 405684.543] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 63.85% complete, ETA 00:53:40
# Fork: 1 of 1
# Warmup Iteration   1: 15228477.797 ns/op
# Warmup Iteration   2: 4728375.144 ns/op
# Warmup Iteration   3: 3464185.312 ns/op
# Warmup Iteration   4: 3305422.142 ns/op
# Warmup Iteration   5: 3295644.638 ns/op
Iteration   1: 3325497.658 ns/op
Iteration   2: 3342543.228 ns/op
Iteration   3: 3264083.381 ns/op
Iteration   4: 3302018.007 ns/op
Iteration   5: 3258706.833 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  3298569.821 ±(99.9%) 142122.558 ns/op [Average]
  (min, avg, max) = (3258706.833, 3298569.821, 3342543.228), stdev = 36908.777
  CI (99.9%): [3156447.263, 3440692.380] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 64.10% complete, ETA 00:53:17
# Fork: 1 of 1
# Warmup Iteration   1: 136706.701 ns/op
# Warmup Iteration   2: 29255.725 ns/op
# Warmup Iteration   3: 25793.003 ns/op
# Warmup Iteration   4: 24796.470 ns/op
# Warmup Iteration   5: 24804.128 ns/op
Iteration   1: 24830.492 ns/op
Iteration   2: 24860.575 ns/op
Iteration   3: 24957.491 ns/op
Iteration   4: 24877.305 ns/op
Iteration   5: 24872.514 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24879.675 ±(99.9%) 181.594 ns/op [Average]
  (min, avg, max) = (24830.492, 24879.675, 24957.491), stdev = 47.159
  CI (99.9%): [24698.082, 25061.269] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 64.36% complete, ETA 00:52:55
# Fork: 1 of 1
# Warmup Iteration   1: 197883.004 ns/op
# Warmup Iteration   2: 55986.238 ns/op
# Warmup Iteration   3: 50755.544 ns/op
# Warmup Iteration   4: 48612.977 ns/op
# Warmup Iteration   5: 49631.337 ns/op
Iteration   1: 48343.892 ns/op
Iteration   2: 48612.218 ns/op
Iteration   3: 48319.607 ns/op
Iteration   4: 48345.831 ns/op
Iteration   5: 49054.747 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  48535.259 ±(99.9%) 1209.740 ns/op [Average]
  (min, avg, max) = (48319.607, 48535.259, 49054.747), stdev = 314.166
  CI (99.9%): [47325.519, 49744.999] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 64.62% complete, ETA 00:52:32
# Fork: 1 of 1
# Warmup Iteration   1: 586084.107 ns/op
# Warmup Iteration   2: 127799.578 ns/op
# Warmup Iteration   3: 107382.257 ns/op
# Warmup Iteration   4: 111426.347 ns/op
# Warmup Iteration   5: 103582.528 ns/op
Iteration   1: 103350.888 ns/op
Iteration   2: 103484.989 ns/op
Iteration   3: 103020.367 ns/op
Iteration   4: 103254.711 ns/op
Iteration   5: 103047.545 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  103231.700 ±(99.9%) 764.004 ns/op [Average]
  (min, avg, max) = (103020.367, 103231.700, 103484.989), stdev = 198.409
  CI (99.9%): [102467.696, 103995.704] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 64.87% complete, ETA 00:52:09
# Fork: 1 of 1
# Warmup Iteration   1: 611291.300 ns/op
# Warmup Iteration   2: 263502.819 ns/op
# Warmup Iteration   3: 230113.718 ns/op
# Warmup Iteration   4: 255186.285 ns/op
# Warmup Iteration   5: 226972.201 ns/op
Iteration   1: 228422.123 ns/op
Iteration   2: 223634.735 ns/op
Iteration   3: 222917.812 ns/op
Iteration   4: 223591.634 ns/op
Iteration   5: 223243.871 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  224362.035 ±(99.9%) 8810.924 ns/op [Average]
  (min, avg, max) = (222917.812, 224362.035, 228422.123), stdev = 2288.169
  CI (99.9%): [215551.111, 233172.959] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 65.13% complete, ETA 00:51:46
# Fork: 1 of 1
# Warmup Iteration   1: 5365807.025 ns/op
# Warmup Iteration   2: 2026468.515 ns/op
# Warmup Iteration   3: 1919476.678 ns/op
# Warmup Iteration   4: 1793351.317 ns/op
# Warmup Iteration   5: 1789239.776 ns/op
Iteration   1: 1786492.610 ns/op
Iteration   2: 1763042.943 ns/op
Iteration   3: 1763252.909 ns/op
Iteration   4: 1776524.593 ns/op
Iteration   5: 1771699.148 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1772202.440 ±(99.9%) 37882.086 ns/op [Average]
  (min, avg, max) = (1763042.943, 1772202.440, 1786492.610), stdev = 9837.857
  CI (99.9%): [1734320.355, 1810084.526] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 65.38% complete, ETA 00:51:23
# Fork: 1 of 1
# Warmup Iteration   1: 38479.275 ns/op
# Warmup Iteration   2: 14789.595 ns/op
# Warmup Iteration   3: 13876.451 ns/op
# Warmup Iteration   4: 13330.476 ns/op
# Warmup Iteration   5: 13273.431 ns/op
Iteration   1: 13273.504 ns/op
Iteration   2: 13239.098 ns/op
Iteration   3: 13253.080 ns/op
Iteration   4: 13206.287 ns/op
Iteration   5: 13371.830 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13268.760 ±(99.9%) 241.046 ns/op [Average]
  (min, avg, max) = (13206.287, 13268.760, 13371.830), stdev = 62.599
  CI (99.9%): [13027.714, 13509.806] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 65.64% complete, ETA 00:51:00
# Fork: 1 of 1
# Warmup Iteration   1: 83670.076 ns/op
# Warmup Iteration   2: 28006.330 ns/op
# Warmup Iteration   3: 26211.851 ns/op
# Warmup Iteration   4: 28170.712 ns/op
# Warmup Iteration   5: 26423.644 ns/op
Iteration   1: 26290.882 ns/op
Iteration   2: 25987.908 ns/op
Iteration   3: 25815.602 ns/op
Iteration   4: 26121.918 ns/op
Iteration   5: 25846.951 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  26012.652 ±(99.9%) 761.049 ns/op [Average]
  (min, avg, max) = (25815.602, 26012.652, 26290.882), stdev = 197.642
  CI (99.9%): [25251.604, 26773.701] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 65.90% complete, ETA 00:50:38
# Fork: 1 of 1
# Warmup Iteration   1: 136677.934 ns/op
# Warmup Iteration   2: 58993.930 ns/op
# Warmup Iteration   3: 55316.816 ns/op
# Warmup Iteration   4: 55192.799 ns/op
# Warmup Iteration   5: 54954.157 ns/op
Iteration   1: 55234.352 ns/op
Iteration   2: 55840.682 ns/op
Iteration   3: 55055.612 ns/op
Iteration   4: 54609.661 ns/op
Iteration   5: 54718.090 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  55091.679 ±(99.9%) 1881.083 ns/op [Average]
  (min, avg, max) = (54609.661, 55091.679, 55840.682), stdev = 488.511
  CI (99.9%): [53210.596, 56972.762] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 66.15% complete, ETA 00:50:15
# Fork: 1 of 1
# Warmup Iteration   1: 329643.709 ns/op
# Warmup Iteration   2: 141935.852 ns/op
# Warmup Iteration   3: 133569.866 ns/op
# Warmup Iteration   4: 128480.130 ns/op
# Warmup Iteration   5: 128472.223 ns/op
Iteration   1: 129071.668 ns/op
Iteration   2: 129316.050 ns/op
Iteration   3: 128952.864 ns/op
Iteration   4: 128702.025 ns/op
Iteration   5: 128593.816 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  128927.285 ±(99.9%) 1113.666 ns/op [Average]
  (min, avg, max) = (128593.816, 128927.285, 129316.050), stdev = 289.216
  CI (99.9%): [127813.618, 130040.951] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 66.41% complete, ETA 00:49:52
# Fork: 1 of 1
# Warmup Iteration   1: 1853976.063 ns/op
# Warmup Iteration   2: 1088914.423 ns/op
# Warmup Iteration   3: 981970.603 ns/op
# Warmup Iteration   4: 1004499.035 ns/op
# Warmup Iteration   5: 995619.008 ns/op
Iteration   1: 982341.337 ns/op
Iteration   2: 957101.516 ns/op
Iteration   3: 960870.053 ns/op
Iteration   4: 962022.386 ns/op
Iteration   5: 960095.787 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  964486.216 ±(99.9%) 39068.483 ns/op [Average]
  (min, avg, max) = (957101.516, 964486.216, 982341.337), stdev = 10145.961
  CI (99.9%): [925417.733, 1003554.698] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 66.67% complete, ETA 00:49:29
# Fork: 1 of 1
# Warmup Iteration   1: 54217.366 ns/op
# Warmup Iteration   2: 10898.082 ns/op
# Warmup Iteration   3: 9963.375 ns/op
# Warmup Iteration   4: 9859.694 ns/op
# Warmup Iteration   5: 9567.793 ns/op
Iteration   1: 9592.407 ns/op
Iteration   2: 9568.539 ns/op
Iteration   3: 9582.999 ns/op
Iteration   4: 9587.839 ns/op
Iteration   5: 9596.703 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  9585.697 ±(99.9%) 41.847 ns/op [Average]
  (min, avg, max) = (9568.539, 9585.697, 9596.703), stdev = 10.868
  CI (99.9%): [9543.850, 9627.545] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 66.92% complete, ETA 00:49:06
# Fork: 1 of 1
# Warmup Iteration   1: 44274.405 ns/op
# Warmup Iteration   2: 18217.294 ns/op
# Warmup Iteration   3: 18489.841 ns/op
# Warmup Iteration   4: 17426.139 ns/op
# Warmup Iteration   5: 17347.719 ns/op
Iteration   1: 17323.461 ns/op
Iteration   2: 17575.662 ns/op
Iteration   3: 17302.099 ns/op
Iteration   4: 17471.552 ns/op
Iteration   5: 17310.202 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  17396.595 ±(99.9%) 469.342 ns/op [Average]
  (min, avg, max) = (17302.099, 17396.595, 17575.662), stdev = 121.887
  CI (99.9%): [16927.253, 17865.937] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 67.18% complete, ETA 00:48:43
# Fork: 1 of 1
# Warmup Iteration   1: 108555.379 ns/op
# Warmup Iteration   2: 34413.999 ns/op
# Warmup Iteration   3: 34611.292 ns/op
# Warmup Iteration   4: 34272.257 ns/op
# Warmup Iteration   5: 33073.360 ns/op
Iteration   1: 33059.040 ns/op
Iteration   2: 32969.977 ns/op
Iteration   3: 34069.399 ns/op
Iteration   4: 33063.791 ns/op
Iteration   5: 33061.443 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  33244.730 ±(99.9%) 1781.710 ns/op [Average]
  (min, avg, max) = (32969.977, 33244.730, 34069.399), stdev = 462.705
  CI (99.9%): [31463.020, 35026.440] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 67.44% complete, ETA 00:48:20
# Fork: 1 of 1
# Warmup Iteration   1: 248504.740 ns/op
# Warmup Iteration   2: 75354.718 ns/op
# Warmup Iteration   3: 72490.146 ns/op
# Warmup Iteration   4: 71990.625 ns/op
# Warmup Iteration   5: 70879.941 ns/op
Iteration   1: 68500.806 ns/op
Iteration   2: 68543.180 ns/op
Iteration   3: 68718.918 ns/op
Iteration   4: 68823.554 ns/op
Iteration   5: 69360.196 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  68789.331 ±(99.9%) 1328.127 ns/op [Average]
  (min, avg, max) = (68500.806, 68789.331, 69360.196), stdev = 344.910
  CI (99.9%): [67461.204, 70117.458] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 67.69% complete, ETA 00:47:58
# Fork: 1 of 1
# Warmup Iteration   1: 1713698.110 ns/op
# Warmup Iteration   2: 535640.520 ns/op
# Warmup Iteration   3: 529513.599 ns/op
# Warmup Iteration   4: 529615.658 ns/op
# Warmup Iteration   5: 508337.995 ns/op
Iteration   1: 508322.257 ns/op
Iteration   2: 508467.225 ns/op
Iteration   3: 507758.132 ns/op
Iteration   4: 508391.570 ns/op
Iteration   5: 508537.152 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  508295.267 ±(99.9%) 1197.103 ns/op [Average]
  (min, avg, max) = (507758.132, 508295.267, 508537.152), stdev = 310.884
  CI (99.9%): [507098.164, 509492.370] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 67.95% complete, ETA 00:47:35
# Fork: 1 of 1
# Warmup Iteration   1: 15929.752 ns/op
# Warmup Iteration   2: 8506.559 ns/op
# Warmup Iteration   3: 8358.146 ns/op
# Warmup Iteration   4: 8106.837 ns/op
# Warmup Iteration   5: 7986.023 ns/op
Iteration   1: 8060.335 ns/op
Iteration   2: 8021.590 ns/op
Iteration   3: 8018.344 ns/op
Iteration   4: 8041.429 ns/op
Iteration   5: 8060.687 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8040.477 ±(99.9%) 78.214 ns/op [Average]
  (min, avg, max) = (8018.344, 8040.477, 8060.687), stdev = 20.312
  CI (99.9%): [7962.263, 8118.691] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 68.21% complete, ETA 00:47:12
# Fork: 1 of 1
# Warmup Iteration   1: 28254.079 ns/op
# Warmup Iteration   2: 15349.863 ns/op
# Warmup Iteration   3: 15028.689 ns/op
# Warmup Iteration   4: 14533.885 ns/op
# Warmup Iteration   5: 14530.708 ns/op
Iteration   1: 14598.197 ns/op
Iteration   2: 14532.963 ns/op
Iteration   3: 14576.487 ns/op
Iteration   4: 14510.613 ns/op
Iteration   5: 14554.145 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14554.481 ±(99.9%) 133.152 ns/op [Average]
  (min, avg, max) = (14510.613, 14554.481, 14598.197), stdev = 34.579
  CI (99.9%): [14421.329, 14687.634] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 68.46% complete, ETA 00:46:49
# Fork: 1 of 1
# Warmup Iteration   1: 89518.803 ns/op
# Warmup Iteration   2: 27156.978 ns/op
# Warmup Iteration   3: 27331.506 ns/op
# Warmup Iteration   4: 26557.501 ns/op
# Warmup Iteration   5: 25750.612 ns/op
Iteration   1: 25737.086 ns/op
Iteration   2: 25795.342 ns/op
Iteration   3: 25706.754 ns/op
Iteration   4: 25707.662 ns/op
Iteration   5: 25810.878 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  25751.544 ±(99.9%) 188.441 ns/op [Average]
  (min, avg, max) = (25706.754, 25751.544, 25810.878), stdev = 48.938
  CI (99.9%): [25563.103, 25939.985] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 68.72% complete, ETA 00:46:26
# Fork: 1 of 1
# Warmup Iteration   1: 116377.049 ns/op
# Warmup Iteration   2: 58478.529 ns/op
# Warmup Iteration   3: 60760.772 ns/op
# Warmup Iteration   4: 55587.608 ns/op
# Warmup Iteration   5: 54852.224 ns/op
Iteration   1: 54660.400 ns/op
Iteration   2: 54945.580 ns/op
Iteration   3: 54877.749 ns/op
Iteration   4: 54884.081 ns/op
Iteration   5: 54776.320 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  54828.826 ±(99.9%) 431.386 ns/op [Average]
  (min, avg, max) = (54660.400, 54828.826, 54945.580), stdev = 112.029
  CI (99.9%): [54397.441, 55260.212] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 68.97% complete, ETA 00:46:04
# Fork: 1 of 1
# Warmup Iteration   1: 944316.254 ns/op
# Warmup Iteration   2: 476222.584 ns/op
# Warmup Iteration   3: 464409.220 ns/op
# Warmup Iteration   4: 447363.422 ns/op
# Warmup Iteration   5: 432858.913 ns/op
Iteration   1: 439163.059 ns/op
Iteration   2: 433951.612 ns/op
Iteration   3: 433922.171 ns/op
Iteration   4: 436945.904 ns/op
Iteration   5: 435689.126 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  435934.374 ±(99.9%) 8499.387 ns/op [Average]
  (min, avg, max) = (433922.171, 435934.374, 439163.059), stdev = 2207.264
  CI (99.9%): [427434.987, 444433.762] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 69.23% complete, ETA 00:45:41
# Fork: 1 of 1
# Warmup Iteration   1: 20888.395 ns/op
# Warmup Iteration   2: 9077.872 ns/op
# Warmup Iteration   3: 8932.001 ns/op
# Warmup Iteration   4: 8600.300 ns/op
# Warmup Iteration   5: 8614.463 ns/op
Iteration   1: 8578.182 ns/op
Iteration   2: 8655.436 ns/op
Iteration   3: 8623.648 ns/op
Iteration   4: 8647.304 ns/op
Iteration   5: 8608.598 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8622.633 ±(99.9%) 119.596 ns/op [Average]
  (min, avg, max) = (8578.182, 8622.633, 8655.436), stdev = 31.059
  CI (99.9%): [8503.037, 8742.230] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 69.49% complete, ETA 00:45:18
# Fork: 1 of 1
# Warmup Iteration   1: 45203.717 ns/op
# Warmup Iteration   2: 14976.529 ns/op
# Warmup Iteration   3: 14960.784 ns/op
# Warmup Iteration   4: 14776.626 ns/op
# Warmup Iteration   5: 14401.813 ns/op
Iteration   1: 14352.674 ns/op
Iteration   2: 14389.212 ns/op
Iteration   3: 14462.862 ns/op
Iteration   4: 14392.627 ns/op
Iteration   5: 14442.219 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14407.919 ±(99.9%) 170.378 ns/op [Average]
  (min, avg, max) = (14352.674, 14407.919, 14462.862), stdev = 44.247
  CI (99.9%): [14237.540, 14578.297] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 69.74% complete, ETA 00:44:55
# Fork: 1 of 1
# Warmup Iteration   1: 116209.063 ns/op
# Warmup Iteration   2: 26605.043 ns/op
# Warmup Iteration   3: 26794.197 ns/op
# Warmup Iteration   4: 25404.673 ns/op
# Warmup Iteration   5: 25348.726 ns/op
Iteration   1: 25318.097 ns/op
Iteration   2: 25409.053 ns/op
Iteration   3: 25417.859 ns/op
Iteration   4: 25335.490 ns/op
Iteration   5: 25371.712 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  25370.442 ±(99.9%) 168.973 ns/op [Average]
  (min, avg, max) = (25318.097, 25370.442, 25417.859), stdev = 43.882
  CI (99.9%): [25201.470, 25539.415] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 70.00% complete, ETA 00:44:32
# Fork: 1 of 1
# Warmup Iteration   1: 215394.757 ns/op
# Warmup Iteration   2: 55217.870 ns/op
# Warmup Iteration   3: 53413.526 ns/op
# Warmup Iteration   4: 49351.000 ns/op
# Warmup Iteration   5: 48621.033 ns/op
Iteration   1: 48763.882 ns/op
Iteration   2: 48824.138 ns/op
Iteration   3: 48694.329 ns/op
Iteration   4: 48893.433 ns/op
Iteration   5: 49072.004 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  48849.557 ±(99.9%) 556.314 ns/op [Average]
  (min, avg, max) = (48694.329, 48849.557, 49072.004), stdev = 144.473
  CI (99.9%): [48293.244, 49405.871] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 70.26% complete, ETA 00:44:09
# Fork: 1 of 1
# Warmup Iteration   1: 714291.325 ns/op
# Warmup Iteration   2: 403406.199 ns/op
# Warmup Iteration   3: 385271.437 ns/op
# Warmup Iteration   4: 378884.624 ns/op
# Warmup Iteration   5: 371172.833 ns/op
Iteration   1: 371679.992 ns/op
Iteration   2: 372197.076 ns/op
Iteration   3: 370853.227 ns/op
Iteration   4: 371219.596 ns/op
Iteration   5: 370417.428 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  371273.464 ±(99.9%) 2675.173 ns/op [Average]
  (min, avg, max) = (370417.428, 371273.464, 372197.076), stdev = 694.734
  CI (99.9%): [368598.291, 373948.637] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 70.51% complete, ETA 00:43:46
# Fork: 1 of 1
# Warmup Iteration   1: 9377.338 ns/op
# Warmup Iteration   2: 3404.077 ns/op
# Warmup Iteration   3: 2898.572 ns/op
# Warmup Iteration   4: 2887.487 ns/op
# Warmup Iteration   5: 2885.995 ns/op
Iteration   1: 2880.439 ns/op
Iteration   2: 2874.348 ns/op
Iteration   3: 2887.824 ns/op
Iteration   4: 2890.836 ns/op
Iteration   5: 2877.526 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2882.194 ±(99.9%) 26.735 ns/op [Average]
  (min, avg, max) = (2874.348, 2882.194, 2890.836), stdev = 6.943
  CI (99.9%): [2855.460, 2908.929] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 70.77% complete, ETA 00:43:23
# Fork: 1 of 1
# Warmup Iteration   1: 14951.902 ns/op
# Warmup Iteration   2: 5995.343 ns/op
# Warmup Iteration   3: 5459.505 ns/op
# Warmup Iteration   4: 5605.905 ns/op
# Warmup Iteration   5: 5682.117 ns/op
Iteration   1: 5464.481 ns/op
Iteration   2: 5435.006 ns/op
Iteration   3: 5447.399 ns/op
Iteration   4: 5424.364 ns/op
Iteration   5: 5473.133 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  5448.877 ±(99.9%) 77.668 ns/op [Average]
  (min, avg, max) = (5424.364, 5448.877, 5473.133), stdev = 20.170
  CI (99.9%): [5371.209, 5526.545] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 71.03% complete, ETA 00:43:01
# Fork: 1 of 1
# Warmup Iteration   1: 63840.387 ns/op
# Warmup Iteration   2: 11607.157 ns/op
# Warmup Iteration   3: 10284.704 ns/op
# Warmup Iteration   4: 10261.548 ns/op
# Warmup Iteration   5: 10193.711 ns/op
Iteration   1: 10302.958 ns/op
Iteration   2: 10162.819 ns/op
Iteration   3: 10133.855 ns/op
Iteration   4: 10151.585 ns/op
Iteration   5: 10120.888 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  10174.421 ±(99.9%) 283.547 ns/op [Average]
  (min, avg, max) = (10120.888, 10174.421, 10302.958), stdev = 73.636
  CI (99.9%): [9890.875, 10457.968] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 71.28% complete, ETA 00:42:38
# Fork: 1 of 1
# Warmup Iteration   1: 109328.387 ns/op
# Warmup Iteration   2: 22265.991 ns/op
# Warmup Iteration   3: 19201.767 ns/op
# Warmup Iteration   4: 18516.393 ns/op
# Warmup Iteration   5: 18581.431 ns/op
Iteration   1: 18626.368 ns/op
Iteration   2: 18512.391 ns/op
Iteration   3: 18824.711 ns/op
Iteration   4: 18420.144 ns/op
Iteration   5: 18418.173 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  18560.358 ±(99.9%) 656.918 ns/op [Average]
  (min, avg, max) = (18418.173, 18560.358, 18824.711), stdev = 170.600
  CI (99.9%): [17903.439, 19217.276] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 71.54% complete, ETA 00:42:15
# Fork: 1 of 1
# Warmup Iteration   1: 1105353.822 ns/op
# Warmup Iteration   2: 209647.316 ns/op
# Warmup Iteration   3: 152959.775 ns/op
# Warmup Iteration   4: 152913.975 ns/op
# Warmup Iteration   5: 153847.315 ns/op
Iteration   1: 152836.759 ns/op
Iteration   2: 153168.695 ns/op
Iteration   3: 154771.587 ns/op
Iteration   4: 152993.215 ns/op
Iteration   5: 152697.574 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  153293.566 ±(99.9%) 3252.727 ns/op [Average]
  (min, avg, max) = (152697.574, 153293.566, 154771.587), stdev = 844.723
  CI (99.9%): [150040.839, 156546.293] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 71.79% complete, ETA 00:41:52
# Fork: 1 of 1
# Warmup Iteration   1: 15651.884 ns/op
# Warmup Iteration   2: 5261.190 ns/op
# Warmup Iteration   3: 4635.711 ns/op
# Warmup Iteration   4: 4457.608 ns/op
# Warmup Iteration   5: 4465.074 ns/op
Iteration   1: 4483.039 ns/op
Iteration   2: 4456.300 ns/op
Iteration   3: 4452.275 ns/op
Iteration   4: 4461.175 ns/op
Iteration   5: 4454.271 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4461.412 ±(99.9%) 48.263 ns/op [Average]
  (min, avg, max) = (4452.275, 4461.412, 4483.039), stdev = 12.534
  CI (99.9%): [4413.149, 4509.675] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 72.05% complete, ETA 00:41:29
# Fork: 1 of 1
# Warmup Iteration   1: 27191.253 ns/op
# Warmup Iteration   2: 9206.413 ns/op
# Warmup Iteration   3: 8805.962 ns/op
# Warmup Iteration   4: 8309.866 ns/op
# Warmup Iteration   5: 8323.426 ns/op
Iteration   1: 8291.963 ns/op
Iteration   2: 8290.550 ns/op
Iteration   3: 8311.424 ns/op
Iteration   4: 8290.116 ns/op
Iteration   5: 8292.579 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8295.326 ±(99.9%) 34.866 ns/op [Average]
  (min, avg, max) = (8290.116, 8295.326, 8311.424), stdev = 9.055
  CI (99.9%): [8260.460, 8330.193] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 72.31% complete, ETA 00:41:06
# Fork: 1 of 1
# Warmup Iteration   1: 30191.148 ns/op
# Warmup Iteration   2: 15936.195 ns/op
# Warmup Iteration   3: 14114.384 ns/op
# Warmup Iteration   4: 14054.047 ns/op
# Warmup Iteration   5: 14116.905 ns/op
Iteration   1: 14109.595 ns/op
Iteration   2: 14090.719 ns/op
Iteration   3: 14107.358 ns/op
Iteration   4: 14094.560 ns/op
Iteration   5: 14070.910 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14094.628 ±(99.9%) 59.776 ns/op [Average]
  (min, avg, max) = (14070.910, 14094.628, 14109.595), stdev = 15.524
  CI (99.9%): [14034.853, 14154.404] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 72.56% complete, ETA 00:40:44
# Fork: 1 of 1
# Warmup Iteration   1: 91735.354 ns/op
# Warmup Iteration   2: 30999.095 ns/op
# Warmup Iteration   3: 28053.803 ns/op
# Warmup Iteration   4: 27992.742 ns/op
# Warmup Iteration   5: 27849.881 ns/op
Iteration   1: 28013.974 ns/op
Iteration   2: 27881.332 ns/op
Iteration   3: 28154.526 ns/op
Iteration   4: 27834.997 ns/op
Iteration   5: 28250.193 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  28027.004 ±(99.9%) 678.883 ns/op [Average]
  (min, avg, max) = (27834.997, 28027.004, 28250.193), stdev = 176.304
  CI (99.9%): [27348.122, 28705.887] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 72.82% complete, ETA 00:40:21
# Fork: 1 of 1
# Warmup Iteration   1: 525337.288 ns/op
# Warmup Iteration   2: 258700.276 ns/op
# Warmup Iteration   3: 226199.756 ns/op
# Warmup Iteration   4: 225522.295 ns/op
# Warmup Iteration   5: 225954.047 ns/op
Iteration   1: 226312.388 ns/op
Iteration   2: 226425.067 ns/op
Iteration   3: 229857.724 ns/op
Iteration   4: 226760.598 ns/op
Iteration   5: 226062.764 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  227083.708 ±(99.9%) 6048.893 ns/op [Average]
  (min, avg, max) = (226062.764, 227083.708, 229857.724), stdev = 1570.878
  CI (99.9%): [221034.815, 233132.601] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 73.08% complete, ETA 00:39:58
# Fork: 1 of 1
# Warmup Iteration   1: 14338.039 ns/op
# Warmup Iteration   2: 5037.707 ns/op
# Warmup Iteration   3: 4578.899 ns/op
# Warmup Iteration   4: 4212.552 ns/op
# Warmup Iteration   5: 4198.713 ns/op
Iteration   1: 4199.188 ns/op
Iteration   2: 4202.323 ns/op
Iteration   3: 4204.479 ns/op
Iteration   4: 4182.364 ns/op
Iteration   5: 4216.925 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4201.056 ±(99.9%) 47.864 ns/op [Average]
  (min, avg, max) = (4182.364, 4201.056, 4216.925), stdev = 12.430
  CI (99.9%): [4153.191, 4248.920] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 73.33% complete, ETA 00:39:35
# Fork: 1 of 1
# Warmup Iteration   1: 19388.201 ns/op
# Warmup Iteration   2: 8055.944 ns/op
# Warmup Iteration   3: 7932.071 ns/op
# Warmup Iteration   4: 7388.140 ns/op
# Warmup Iteration   5: 7527.330 ns/op
Iteration   1: 7356.472 ns/op
Iteration   2: 7384.055 ns/op
Iteration   3: 7352.433 ns/op
Iteration   4: 7366.689 ns/op
Iteration   5: 7357.784 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7363.487 ±(99.9%) 48.601 ns/op [Average]
  (min, avg, max) = (7352.433, 7363.487, 7384.055), stdev = 12.622
  CI (99.9%): [7314.886, 7412.088] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 73.59% complete, ETA 00:39:12
# Fork: 1 of 1
# Warmup Iteration   1: 47294.991 ns/op
# Warmup Iteration   2: 16572.262 ns/op
# Warmup Iteration   3: 13322.438 ns/op
# Warmup Iteration   4: 13222.376 ns/op
# Warmup Iteration   5: 13262.880 ns/op
Iteration   1: 13369.494 ns/op
Iteration   2: 13208.641 ns/op
Iteration   3: 13289.286 ns/op
Iteration   4: 13275.424 ns/op
Iteration   5: 13322.200 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13293.009 ±(99.9%) 228.969 ns/op [Average]
  (min, avg, max) = (13208.641, 13293.009, 13369.494), stdev = 59.462
  CI (99.9%): [13064.040, 13521.978] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 73.85% complete, ETA 00:38:49
# Fork: 1 of 1
# Warmup Iteration   1: 71939.152 ns/op
# Warmup Iteration   2: 28561.129 ns/op
# Warmup Iteration   3: 25711.783 ns/op
# Warmup Iteration   4: 25862.147 ns/op
# Warmup Iteration   5: 25809.907 ns/op
Iteration   1: 25495.089 ns/op
Iteration   2: 25502.793 ns/op
Iteration   3: 25535.723 ns/op
Iteration   4: 25548.886 ns/op
Iteration   5: 25719.448 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  25560.388 ±(99.9%) 353.033 ns/op [Average]
  (min, avg, max) = (25495.089, 25560.388, 25719.448), stdev = 91.682
  CI (99.9%): [25207.355, 25913.421] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 74.10% complete, ETA 00:38:26
# Fork: 1 of 1
# Warmup Iteration   1: 555454.051 ns/op
# Warmup Iteration   2: 284910.048 ns/op
# Warmup Iteration   3: 287489.768 ns/op
# Warmup Iteration   4: 247418.451 ns/op
# Warmup Iteration   5: 246030.974 ns/op
Iteration   1: 246377.577 ns/op
Iteration   2: 243871.184 ns/op
Iteration   3: 247091.312 ns/op
Iteration   4: 247633.831 ns/op
Iteration   5: 245477.798 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  246090.340 ±(99.9%) 5700.603 ns/op [Average]
  (min, avg, max) = (243871.184, 246090.340, 247633.831), stdev = 1480.429
  CI (99.9%): [240389.737, 251790.944] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 74.36% complete, ETA 00:38:04
# Fork: 1 of 1
# Warmup Iteration   1: 270838.829 ns/op
# Warmup Iteration   2: 105191.517 ns/op
# Warmup Iteration   3: 103941.343 ns/op
# Warmup Iteration   4: 103002.689 ns/op
# Warmup Iteration   5: 107003.660 ns/op
Iteration   1: 100403.431 ns/op
Iteration   2: 100540.760 ns/op
Iteration   3: 100235.791 ns/op
Iteration   4: 100721.074 ns/op
Iteration   5: 100533.313 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  100486.874 ±(99.9%) 693.958 ns/op [Average]
  (min, avg, max) = (100235.791, 100486.874, 100721.074), stdev = 180.219
  CI (99.9%): [99792.915, 101180.832] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 74.62% complete, ETA 00:37:41
# Fork: 1 of 1
# Warmup Iteration   1: 322935.191 ns/op
# Warmup Iteration   2: 142152.314 ns/op
# Warmup Iteration   3: 137033.127 ns/op
# Warmup Iteration   4: 138437.244 ns/op
# Warmup Iteration   5: 142739.434 ns/op
Iteration   1: 133212.944 ns/op
Iteration   2: 137446.040 ns/op
Iteration   3: 133661.419 ns/op
Iteration   4: 133269.843 ns/op
Iteration   5: 132621.414 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  134042.332 ±(99.9%) 7465.175 ns/op [Average]
  (min, avg, max) = (132621.414, 134042.332, 137446.040), stdev = 1938.682
  CI (99.9%): [126577.157, 141507.507] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 74.87% complete, ETA 00:37:18
# Fork: 1 of 1
# Warmup Iteration   1: 510414.010 ns/op
# Warmup Iteration   2: 180596.962 ns/op
# Warmup Iteration   3: 165717.910 ns/op
# Warmup Iteration   4: 166085.535 ns/op
# Warmup Iteration   5: 167325.586 ns/op
Iteration   1: 162497.698 ns/op
Iteration   2: 162315.134 ns/op
Iteration   3: 163442.617 ns/op
Iteration   4: 162257.646 ns/op
Iteration   5: 162357.660 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  162574.151 ±(99.9%) 1900.334 ns/op [Average]
  (min, avg, max) = (162257.646, 162574.151, 163442.617), stdev = 493.511
  CI (99.9%): [160673.817, 164474.485] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 75.13% complete, ETA 00:36:55
# Fork: 1 of 1
# Warmup Iteration   1: 675201.118 ns/op
# Warmup Iteration   2: 226608.963 ns/op
# Warmup Iteration   3: 216934.311 ns/op
# Warmup Iteration   4: 219446.529 ns/op
# Warmup Iteration   5: 212097.987 ns/op
Iteration   1: 210607.721 ns/op
Iteration   2: 210443.280 ns/op
Iteration   3: 209932.824 ns/op
Iteration   4: 209737.295 ns/op
Iteration   5: 209667.254 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  210077.675 ±(99.9%) 1633.579 ns/op [Average]
  (min, avg, max) = (209667.254, 210077.675, 210607.721), stdev = 424.235
  CI (99.9%): [208444.096, 211711.253] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 75.38% complete, ETA 00:36:32
# Fork: 1 of 1
# Warmup Iteration   1: 4631391.075 ns/op
# Warmup Iteration   2: 1002549.817 ns/op
# Warmup Iteration   3: 994151.900 ns/op
# Warmup Iteration   4: 938399.306 ns/op
# Warmup Iteration   5: 918846.003 ns/op
Iteration   1: 906808.139 ns/op
Iteration   2: 903823.559 ns/op
Iteration   3: 903021.326 ns/op
Iteration   4: 904158.158 ns/op
Iteration   5: 903421.467 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  904246.530 ±(99.9%) 5753.592 ns/op [Average]
  (min, avg, max) = (903021.326, 904246.530, 906808.139), stdev = 1494.190
  CI (99.9%): [898492.938, 910000.122] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 75.64% complete, ETA 00:36:09
# Fork: 1 of 1
# Warmup Iteration   1: 3670.620 ns/op
# Warmup Iteration   2: 2359.943 ns/op
# Warmup Iteration   3: 2058.600 ns/op
# Warmup Iteration   4: 2049.008 ns/op
# Warmup Iteration   5: 2055.749 ns/op
Iteration   1: 2065.888 ns/op
Iteration   2: 2062.788 ns/op
Iteration   3: 2048.928 ns/op
Iteration   4: 2055.941 ns/op
Iteration   5: 2054.450 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2057.599 ±(99.9%) 26.080 ns/op [Average]
  (min, avg, max) = (2048.928, 2057.599, 2065.888), stdev = 6.773
  CI (99.9%): [2031.519, 2083.678] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 75.90% complete, ETA 00:35:46
# Fork: 1 of 1
# Warmup Iteration   1: 7674.410 ns/op
# Warmup Iteration   2: 4537.687 ns/op
# Warmup Iteration   3: 3950.593 ns/op
# Warmup Iteration   4: 3939.789 ns/op
# Warmup Iteration   5: 3941.336 ns/op
Iteration   1: 3934.914 ns/op
Iteration   2: 3944.381 ns/op
Iteration   3: 3938.992 ns/op
Iteration   4: 3972.124 ns/op
Iteration   5: 3938.859 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3945.854 ±(99.9%) 58.016 ns/op [Average]
  (min, avg, max) = (3934.914, 3945.854, 3972.124), stdev = 15.067
  CI (99.9%): [3887.838, 4003.870] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 76.15% complete, ETA 00:35:23
# Fork: 1 of 1
# Warmup Iteration   1: 16121.981 ns/op
# Warmup Iteration   2: 7962.946 ns/op
# Warmup Iteration   3: 7310.851 ns/op
# Warmup Iteration   4: 7281.273 ns/op
# Warmup Iteration   5: 7297.122 ns/op
Iteration   1: 7287.238 ns/op
Iteration   2: 7294.355 ns/op
Iteration   3: 7390.965 ns/op
Iteration   4: 7283.802 ns/op
Iteration   5: 7404.861 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7332.244 ±(99.9%) 232.072 ns/op [Average]
  (min, avg, max) = (7283.802, 7332.244, 7404.861), stdev = 60.268
  CI (99.9%): [7100.172, 7564.316] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 76.41% complete, ETA 00:35:01
# Fork: 1 of 1
# Warmup Iteration   1: 23275.685 ns/op
# Warmup Iteration   2: 14162.199 ns/op
# Warmup Iteration   3: 13211.322 ns/op
# Warmup Iteration   4: 13183.941 ns/op
# Warmup Iteration   5: 13161.213 ns/op
Iteration   1: 13142.981 ns/op
Iteration   2: 13228.910 ns/op
Iteration   3: 13190.425 ns/op
Iteration   4: 13182.624 ns/op
Iteration   5: 13346.125 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13218.213 ±(99.9%) 299.352 ns/op [Average]
  (min, avg, max) = (13142.981, 13218.213, 13346.125), stdev = 77.741
  CI (99.9%): [12918.861, 13517.565] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 76.67% complete, ETA 00:34:38
# Fork: 1 of 1
# Warmup Iteration   1: 230622.180 ns/op
# Warmup Iteration   2: 139735.428 ns/op
# Warmup Iteration   3: 123269.568 ns/op
# Warmup Iteration   4: 128141.478 ns/op
# Warmup Iteration   5: 123335.782 ns/op
Iteration   1: 122968.365 ns/op
Iteration   2: 124872.961 ns/op
Iteration   3: 122779.488 ns/op
Iteration   4: 122710.644 ns/op
Iteration   5: 122928.737 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  123252.039 ±(99.9%) 3512.748 ns/op [Average]
  (min, avg, max) = (122710.644, 123252.039, 124872.961), stdev = 912.249
  CI (99.9%): [119739.291, 126764.787] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 76.92% complete, ETA 00:34:15
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
11560.578 ns/op
# Warmup Iteration   2: 6074.207 ns/op
# Warmup Iteration   3: 5852.924 ns/op
# Warmup Iteration   4: 6193.308 ns/op
# Warmup Iteration   5: 5887.499 ns/op
Iteration   1: 5874.439 ns/op
Iteration   2: 5807.549 ns/op
Iteration   3: 5849.606 ns/op
Iteration   4: 5824.331 ns/op
Iteration   5: 5969.112 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  5865.007 ±(99.9%) 244.447 ns/op [Average]
  (min, avg, max) = (5807.549, 5865.007, 5969.112), stdev = 63.482
  CI (99.9%): [5620.560, 6109.455] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 77.18% complete, ETA 00:33:52
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
19051.016 ns/op
# Warmup Iteration   2: 10309.551 ns/op
# Warmup Iteration   3: 9964.870 ns/op
# Warmup Iteration   4: 9726.439 ns/op
# Warmup Iteration   5: 9837.184 ns/op
Iteration   1: 9883.655 ns/op
Iteration   2: 9898.980 ns/op
Iteration   3: 9901.625 ns/op
Iteration   4: 9832.928 ns/op
Iteration   5: 9905.939 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  9884.625 ±(99.9%) 115.885 ns/op [Average]
  (min, avg, max) = (9832.928, 9884.625, 9905.939), stdev = 30.095
  CI (99.9%): [9768.740, 10000.511] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 77.44% complete, ETA 00:33:29
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
33670.723 ns/op
# Warmup Iteration   2: 17692.927 ns/op
# Warmup Iteration   3: 17929.503 ns/op
# Warmup Iteration   4: 18552.294 ns/op
# Warmup Iteration   5: 17501.697 ns/op
Iteration   1: 17505.743 ns/op
Iteration   2: 17494.879 ns/op
Iteration   3: 17510.052 ns/op
Iteration   4: 17479.413 ns/op
Iteration   5: 17679.008 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  17533.819 ±(99.9%) 315.831 ns/op [Average]
  (min, avg, max) = (17479.413, 17533.819, 17679.008), stdev = 82.020
  CI (99.9%): [17217.988, 17849.650] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 77.69% complete, ETA 00:33:06
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
70688.071 ns/op
# Warmup Iteration   2: 30853.652 ns/op
# Warmup Iteration   3: 45610.181 ns/op
# Warmup Iteration   4: 32286.539 ns/op
# Warmup Iteration   5: 66641.516 ns/op
Iteration   1: 69478.778 ns/op
Iteration   2: 68363.216 ns/op
Iteration   3: 68538.454 ns/op
Iteration   4: 69115.985 ns/op
Iteration   5: 68011.106 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  68701.508 ±(99.9%) 2272.877 ns/op [Average]
  (min, avg, max) = (68011.106, 68701.508, 69478.778), stdev = 590.259
  CI (99.9%): [66428.631, 70974.384] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 77.95% complete, ETA 00:32:44
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
412759.380 ns/op
# Warmup Iteration   2: 267047.195 ns/op
# Warmup Iteration   3: 275764.353 ns/op
# Warmup Iteration   4: 269138.986 ns/op
# Warmup Iteration   5: 272053.875 ns/op
Iteration   1: 272838.970 ns/op
Iteration   2: 270341.981 ns/op
Iteration   3: 270082.565 ns/op
Iteration   4: 271877.188 ns/op
Iteration   5: 269113.509 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  270850.842 ±(99.9%) 5735.247 ns/op [Average]
  (min, avg, max) = (269113.509, 270850.842, 272838.970), stdev = 1489.425
  CI (99.9%): [265115.596, 276586.089] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 78.21% complete, ETA 00:32:21
# Fork: 1 of 1
# Warmup Iteration   1: 6880.958 ns/op
# Warmup Iteration   2: 4304.894 ns/op
# Warmup Iteration   3: 4291.897 ns/op
# Warmup Iteration   4: 4212.204 ns/op
# Warmup Iteration   5: 4105.924 ns/op
Iteration   1: 4105.950 ns/op
Iteration   2: 4170.740 ns/op
Iteration   3: 4103.461 ns/op
Iteration   4: 4128.079 ns/op
Iteration   5: 4119.555 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4125.557 ±(99.9%) 104.688 ns/op [Average]
  (min, avg, max) = (4103.461, 4125.557, 4170.740), stdev = 27.187
  CI (99.9%): [4020.869, 4230.245] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 78.46% complete, ETA 00:31:58
# Fork: 1 of 1
# Warmup Iteration   1: 20840.706 ns/op
# Warmup Iteration   2: 8872.535 ns/op
# Warmup Iteration   3: 8646.960 ns/op
# Warmup Iteration   4: 8340.372 ns/op
# Warmup Iteration   5: 8378.982 ns/op
Iteration   1: 8326.049 ns/op
Iteration   2: 8332.960 ns/op
Iteration   3: 8456.455 ns/op
Iteration   4: 8345.011 ns/op
Iteration   5: 8346.295 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8361.354 ±(99.9%) 207.281 ns/op [Average]
  (min, avg, max) = (8326.049, 8361.354, 8456.455), stdev = 53.830
  CI (99.9%): [8154.073, 8568.635] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 78.72% complete, ETA 00:31:35
# Fork: 1 of 1
# Warmup Iteration   1: 30217.776 ns/op
# Warmup Iteration   2: 17023.006 ns/op
# Warmup Iteration   3: 17171.528 ns/op
# Warmup Iteration   4: 17260.971 ns/op
# Warmup Iteration   5: 16362.424 ns/op
Iteration   1: 16494.522 ns/op
Iteration   2: 16385.807 ns/op
Iteration   3: 16367.620 ns/op
Iteration   4: 16356.748 ns/op
Iteration   5: 16396.909 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  16400.321 ±(99.9%) 211.471 ns/op [Average]
  (min, avg, max) = (16356.748, 16400.321, 16494.522), stdev = 54.918
  CI (99.9%): [16188.851, 16611.792] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 78.97% complete, ETA 00:31:12
# Fork: 1 of 1
# Warmup Iteration   1: 103937.259 ns/op
# Warmup Iteration   2: 32894.462 ns/op
# Warmup Iteration   3: 32671.670 ns/op
# Warmup Iteration   4: 30866.815 ns/op
# Warmup Iteration   5: 29971.391 ns/op
Iteration   1: 29823.621 ns/op
Iteration   2: 29951.368 ns/op
Iteration   3: 29783.857 ns/op
Iteration   4: 29807.091 ns/op
Iteration   5: 29806.819 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  29834.551 ±(99.9%) 257.294 ns/op [Average]
  (min, avg, max) = (29783.857, 29834.551, 29951.368), stdev = 66.818
  CI (99.9%): [29577.258, 30091.845] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 79.23% complete, ETA 00:30:49
# Fork: 1 of 1
# Warmup Iteration   1: 439950.895 ns/op
# Warmup Iteration   2: 254646.577 ns/op
# Warmup Iteration   3: 251521.798 ns/op
# Warmup Iteration   4: 243002.766 ns/op
# Warmup Iteration   5: 243176.667 ns/op
Iteration   1: 244350.886 ns/op
Iteration   2: 243015.904 ns/op
Iteration   3: 243139.291 ns/op
Iteration   4: 242018.186 ns/op
Iteration   5: 243287.049 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  243162.263 ±(99.9%) 3198.155 ns/op [Average]
  (min, avg, max) = (242018.186, 243162.263, 244350.886), stdev = 830.551
  CI (99.9%): [239964.109, 246360.418] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 79.49% complete, ETA 00:30:26
# Fork: 1 of 1
# Warmup Iteration   1: 101612.061 ns/op
# Warmup Iteration   2: 28468.844 ns/op
# Warmup Iteration   3: 23573.221 ns/op
# Warmup Iteration   4: 23396.239 ns/op
# Warmup Iteration   5: 23351.280 ns/op
Iteration   1: 23964.418 ns/op
Iteration   2: 23481.804 ns/op
Iteration   3: 23297.598 ns/op
Iteration   4: 23857.648 ns/op
Iteration   5: 23384.268 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  23597.147 ±(99.9%) 1140.824 ns/op [Average]
  (min, avg, max) = (23297.598, 23597.147, 23964.418), stdev = 296.268
  CI (99.9%): [22456.324, 24737.971] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 79.74% complete, ETA 00:30:04
# Fork: 1 of 1
# Warmup Iteration   1: 185301.667 ns/op
# Warmup Iteration   2: 60019.393 ns/op
# Warmup Iteration   3: 46412.589 ns/op
# Warmup Iteration   4: 42781.989 ns/op
# Warmup Iteration   5: 42581.631 ns/op
Iteration   1: 42381.828 ns/op
Iteration   2: 42350.895 ns/op
Iteration   3: 42393.357 ns/op
Iteration   4: 42522.674 ns/op
Iteration   5: 42751.786 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  42480.108 ±(99.9%) 637.108 ns/op [Average]
  (min, avg, max) = (42350.895, 42480.108, 42751.786), stdev = 165.455
  CI (99.9%): [41843.000, 43117.216] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 80.00% complete, ETA 00:29:41
# Fork: 1 of 1
# Warmup Iteration   1: 452903.799 ns/op
# Warmup Iteration   2: 124650.583 ns/op
# Warmup Iteration   3: 100183.728 ns/op
# Warmup Iteration   4: 95037.375 ns/op
# Warmup Iteration   5: 95167.100 ns/op
Iteration   1: 94728.578 ns/op
Iteration   2: 95189.245 ns/op
Iteration   3: 95332.182 ns/op
Iteration   4: 94989.173 ns/op
Iteration   5: 96030.074 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  95253.850 ±(99.9%) 1885.241 ns/op [Average]
  (min, avg, max) = (94728.578, 95253.850, 96030.074), stdev = 489.591
  CI (99.9%): [93368.609, 97139.092] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 80.26% complete, ETA 00:29:18
# Fork: 1 of 1
# Warmup Iteration   1: 1358098.035 ns/op
# Warmup Iteration   2: 279114.808 ns/op
# Warmup Iteration   3: 231634.348 ns/op
# Warmup Iteration   4: 223004.579 ns/op
# Warmup Iteration   5: 222504.871 ns/op
Iteration   1: 222614.289 ns/op
Iteration   2: 222602.292 ns/op
Iteration   3: 223673.767 ns/op
Iteration   4: 222902.825 ns/op
Iteration   5: 221938.423 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  222746.319 ±(99.9%) 2416.664 ns/op [Average]
  (min, avg, max) = (221938.423, 222746.319, 223673.767), stdev = 627.600
  CI (99.9%): [220329.655, 225162.983] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 80.51% complete, ETA 00:28:55
# Fork: 1 of 1
# Warmup Iteration   1: 6781910.839 ns/op
# Warmup Iteration   2: 1990310.328 ns/op
# Warmup Iteration   3: 1733433.064 ns/op
# Warmup Iteration   4: 1726429.450 ns/op
# Warmup Iteration   5: 1722200.648 ns/op
Iteration   1: 1750408.133 ns/op
Iteration   2: 1713820.684 ns/op
Iteration   3: 1704447.331 ns/op
Iteration   4: 1708420.901 ns/op
Iteration   5: 1709108.306 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1717241.071 ±(99.9%) 72535.596 ns/op [Average]
  (min, avg, max) = (1704447.331, 1717241.071, 1750408.133), stdev = 18837.264
  CI (99.9%): [1644705.474, 1789776.667] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 80.77% complete, ETA 00:28:33
# Fork: 1 of 1
# Warmup Iteration   1: 56012.114 ns/op
# Warmup Iteration   2: 17553.622 ns/op
# Warmup Iteration   3: 15691.178 ns/op
# Warmup Iteration   4: 15555.112 ns/op
# Warmup Iteration   5: 15514.007 ns/op
Iteration   1: 15574.238 ns/op
Iteration   2: 15573.242 ns/op
Iteration   3: 15555.397 ns/op
Iteration   4: 15533.823 ns/op
Iteration   5: 15592.520 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  15565.844 ±(99.9%) 85.483 ns/op [Average]
  (min, avg, max) = (15533.823, 15565.844, 15592.520), stdev = 22.200
  CI (99.9%): [15480.361, 15651.327] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 81.03% complete, ETA 00:28:10
# Fork: 1 of 1
# Warmup Iteration   1: 112690.751 ns/op
# Warmup Iteration   2: 32945.939 ns/op
# Warmup Iteration   3: 29417.369 ns/op
# Warmup Iteration   4: 29357.971 ns/op
# Warmup Iteration   5: 30108.441 ns/op
Iteration   1: 29653.866 ns/op
Iteration   2: 29368.087 ns/op
Iteration   3: 29515.211 ns/op
Iteration   4: 29515.709 ns/op
Iteration   5: 29394.769 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  29489.529 ±(99.9%) 439.376 ns/op [Average]
  (min, avg, max) = (29368.087, 29489.529, 29653.866), stdev = 114.104
  CI (99.9%): [29050.153, 29928.904] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 81.28% complete, ETA 00:27:47
# Fork: 1 of 1
# Warmup Iteration   1: 146142.180 ns/op
# Warmup Iteration   2: 71006.358 ns/op
# Warmup Iteration   3: 67366.606 ns/op
# Warmup Iteration   4: 64338.585 ns/op
# Warmup Iteration   5: 64884.626 ns/op
Iteration   1: 63696.923 ns/op
Iteration   2: 63757.387 ns/op
Iteration   3: 63716.955 ns/op
Iteration   4: 63997.156 ns/op
Iteration   5: 65072.614 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  64048.207 ±(99.9%) 2253.301 ns/op [Average]
  (min, avg, max) = (63696.923, 64048.207, 65072.614), stdev = 585.175
  CI (99.9%): [61794.906, 66301.508] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 81.54% complete, ETA 00:27:24
# Fork: 1 of 1
# Warmup Iteration   1: 463552.306 ns/op
# Warmup Iteration   2: 155880.576 ns/op
# Warmup Iteration   3: 145201.485 ns/op
# Warmup Iteration   4: 140409.575 ns/op
# Warmup Iteration   5: 141860.412 ns/op
Iteration   1: 140812.254 ns/op
Iteration   2: 141115.947 ns/op
Iteration   3: 140800.203 ns/op
Iteration   4: 140632.286 ns/op
Iteration   5: 141372.823 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  140946.703 ±(99.9%) 1136.785 ns/op [Average]
  (min, avg, max) = (140632.286, 140946.703, 141372.823), stdev = 295.219
  CI (99.9%): [139809.918, 142083.487] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 81.79% complete, ETA 00:27:01
# Fork: 1 of 1
# Warmup Iteration   1: 2520630.087 ns/op
# Warmup Iteration   2: 1314338.888 ns/op
# Warmup Iteration   3: 1207745.858 ns/op
# Warmup Iteration   4: 1162924.420 ns/op
# Warmup Iteration   5: 1139618.916 ns/op
Iteration   1: 1179510.442 ns/op
Iteration   2: 1137789.449 ns/op
Iteration   3: 1136301.615 ns/op
Iteration   4: 1136423.284 ns/op
Iteration   5: 1135164.548 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1145037.868 ±(99.9%) 74291.325 ns/op [Average]
  (min, avg, max) = (1135164.548, 1145037.868, 1179510.442), stdev = 19293.221
  CI (99.9%): [1070746.542, 1219329.193] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 82.05% complete, ETA 00:26:38
# Fork: 1 of 1
# Warmup Iteration   1: 14287.033 ns/op
# Warmup Iteration   2: 8940.707 ns/op
# Warmup Iteration   3: 8322.047 ns/op
# Warmup Iteration   4: 8301.302 ns/op
# Warmup Iteration   5: 8262.929 ns/op
Iteration   1: 8285.396 ns/op
Iteration   2: 8252.158 ns/op
Iteration   3: 8229.280 ns/op
Iteration   4: 8258.281 ns/op
Iteration   5: 8243.820 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8253.787 ±(99.9%) 79.893 ns/op [Average]
  (min, avg, max) = (8229.280, 8253.787, 8285.396), stdev = 20.748
  CI (99.9%): [8173.894, 8333.679] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 82.31% complete, ETA 00:26:16
# Fork: 1 of 1
# Warmup Iteration   1: 27881.768 ns/op
# Warmup Iteration   2: 16273.212 ns/op
# Warmup Iteration   3: 16037.913 ns/op
# Warmup Iteration   4: 15508.739 ns/op
# Warmup Iteration   5: 15593.396 ns/op
Iteration   1: 15553.771 ns/op
Iteration   2: 15637.015 ns/op
Iteration   3: 15602.594 ns/op
Iteration   4: 15514.008 ns/op
Iteration   5: 15787.312 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  15618.940 ±(99.9%) 404.780 ns/op [Average]
  (min, avg, max) = (15514.008, 15618.940, 15787.312), stdev = 105.120
  CI (99.9%): [15214.160, 16023.720] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 82.56% complete, ETA 00:25:53
# Fork: 1 of 1
# Warmup Iteration   1: 53136.353 ns/op
# Warmup Iteration   2: 37434.247 ns/op
# Warmup Iteration   3: 36914.905 ns/op
# Warmup Iteration   4: 37293.539 ns/op
# Warmup Iteration   5: 36053.276 ns/op
Iteration   1: 36754.984 ns/op
Iteration   2: 36197.332 ns/op
Iteration   3: 36176.561 ns/op
Iteration   4: 36061.139 ns/op
Iteration   5: 36043.038 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  36246.611 ±(99.9%) 1125.318 ns/op [Average]
  (min, avg, max) = (36043.038, 36246.611, 36754.984), stdev = 292.241
  CI (99.9%): [35121.293, 37371.928] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 82.82% complete, ETA 00:25:30
# Fork: 1 of 1
# Warmup Iteration   1: 137057.557 ns/op
# Warmup Iteration   2: 85508.942 ns/op
# Warmup Iteration   3: 80236.189 ns/op
# Warmup Iteration   4: 78800.377 ns/op
# Warmup Iteration   5: 78713.156 ns/op
Iteration   1: 78254.698 ns/op
Iteration   2: 78198.100 ns/op
Iteration   3: 78232.018 ns/op
Iteration   4: 78485.173 ns/op
Iteration   5: 78363.749 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  78306.747 ±(99.9%) 452.277 ns/op [Average]
  (min, avg, max) = (78198.100, 78306.747, 78485.173), stdev = 117.455
  CI (99.9%): [77854.470, 78759.024] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 83.08% complete, ETA 00:25:07
# Fork: 1 of 1
# Warmup Iteration   1: 892702.714 ns/op
# Warmup Iteration   2: 683503.857 ns/op
# Warmup Iteration   3: 657337.399 ns/op
# Warmup Iteration   4: 630714.427 ns/op
# Warmup Iteration   5: 629124.793 ns/op
Iteration   1: 643518.643 ns/op
Iteration   2: 631089.120 ns/op
Iteration   3: 629082.311 ns/op
Iteration   4: 645350.395 ns/op
Iteration   5: 631507.949 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  636109.683 ±(99.9%) 29580.453 ns/op [Average]
  (min, avg, max) = (629082.311, 636109.683, 645350.395), stdev = 7681.950
  CI (99.9%): [606529.230, 665690.137] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 83.33% complete, ETA 00:24:44
# Fork: 1 of 1
# Warmup Iteration   1: 20323.353 ns/op
# Warmup Iteration   2: 6243.633 ns/op
# Warmup Iteration   3: 6186.733 ns/op
# Warmup Iteration   4: 6355.142 ns/op
# Warmup Iteration   5: 5971.220 ns/op
Iteration   1: 5945.433 ns/op
Iteration   2: 6036.456 ns/op
Iteration   3: 5993.745 ns/op
Iteration   4: 5968.207 ns/op
Iteration   5: 5969.492 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5982.667 ±(99.9%) 133.183 ns/op [Average]
  (min, avg, max) = (5945.433, 5982.667, 6036.456), stdev = 34.587
  CI (99.9%): [5849.484, 6115.850] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 83.59% complete, ETA 00:24:21
# Fork: 1 of 1
# Warmup Iteration   1: 92371.648 ns/op
# Warmup Iteration   2: 15906.464 ns/op
# Warmup Iteration   3: 13612.374 ns/op
# Warmup Iteration   4: 13314.225 ns/op
# Warmup Iteration   5: 12830.549 ns/op
Iteration   1: 12807.762 ns/op
Iteration   2: 12813.810 ns/op
Iteration   3: 12781.722 ns/op
Iteration   4: 12830.341 ns/op
Iteration   5: 12717.434 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  12790.214 ±(99.9%) 170.517 ns/op [Average]
  (min, avg, max) = (12717.434, 12790.214, 12830.341), stdev = 44.283
  CI (99.9%): [12619.696, 12960.731] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 83.85% complete, ETA 00:23:59
# Fork: 1 of 1
# Warmup Iteration   1: 137813.348 ns/op
# Warmup Iteration   2: 32131.076 ns/op
# Warmup Iteration   3: 24159.853 ns/op
# Warmup Iteration   4: 23919.795 ns/op
# Warmup Iteration   5: 23239.588 ns/op
Iteration   1: 23070.020 ns/op
Iteration   2: 23015.357 ns/op
Iteration   3: 23034.045 ns/op
Iteration   4: 23198.350 ns/op
Iteration   5: 23054.368 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  23074.428 ±(99.9%) 278.332 ns/op [Average]
  (min, avg, max) = (23015.357, 23074.428, 23198.350), stdev = 72.282
  CI (99.9%): [22796.096, 23352.760] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 84.10% complete, ETA 00:23:36
# Fork: 1 of 1
# Warmup Iteration   1: 552192.198 ns/op
# Warmup Iteration   2: 76156.896 ns/op
# Warmup Iteration   3: 45874.701 ns/op
# Warmup Iteration   4: 46324.494 ns/op
# Warmup Iteration   5: 44375.571 ns/op
Iteration   1: 43461.377 ns/op
Iteration   2: 43516.414 ns/op
Iteration   3: 43549.016 ns/op
Iteration   4: 43606.871 ns/op
Iteration   5: 43653.380 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  43557.412 ±(99.9%) 289.633 ns/op [Average]
  (min, avg, max) = (43461.377, 43557.412, 43653.380), stdev = 75.217
  CI (99.9%): [43267.779, 43847.044] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 84.36% complete, ETA 00:23:13
# Fork: 1 of 1
# Warmup Iteration   1: 647201.276 ns/op
# Warmup Iteration   2: 337017.335 ns/op
# Warmup Iteration   3: 357695.833 ns/op
# Warmup Iteration   4: 310136.647 ns/op
# Warmup Iteration   5: 309637.606 ns/op
Iteration   1: 309450.002 ns/op
Iteration   2: 309042.227 ns/op
Iteration   3: 307802.802 ns/op
Iteration   4: 307940.153 ns/op
Iteration   5: 308541.423 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  308555.321 ±(99.9%) 2710.838 ns/op [Average]
  (min, avg, max) = (307802.802, 308555.321, 309450.002), stdev = 703.996
  CI (99.9%): [305844.483, 311266.159] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 84.62% complete, ETA 00:22:50
# Fork: 1 of 1
# Warmup Iteration   1: 9430.318 ns/op
# Warmup Iteration   2: 3896.145 ns/op
# Warmup Iteration   3: 3909.743 ns/op
# Warmup Iteration   4: 3733.484 ns/op
# Warmup Iteration   5: 3905.467 ns/op
Iteration   1: 3736.430 ns/op
Iteration   2: 3714.566 ns/op
Iteration   3: 3727.821 ns/op
Iteration   4: 3742.889 ns/op
Iteration   5: 3750.983 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3734.538 ±(99.9%) 54.037 ns/op [Average]
  (min, avg, max) = (3714.566, 3734.538, 3750.983), stdev = 14.033
  CI (99.9%): [3680.501, 3788.575] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 84.87% complete, ETA 00:22:27
# Fork: 1 of 1
# Warmup Iteration   1: 150573.712 ns/op
# Warmup Iteration   2: 11549.890 ns/op
# Warmup Iteration   3: 7581.902 ns/op
# Warmup Iteration   4: 7546.774 ns/op
# Warmup Iteration   5: 7190.259 ns/op
Iteration   1: 7142.522 ns/op
Iteration   2: 7142.137 ns/op
Iteration   3: 7162.901 ns/op
Iteration   4: 7134.336 ns/op
Iteration   5: 7214.149 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7159.209 ±(99.9%) 125.080 ns/op [Average]
  (min, avg, max) = (7134.336, 7159.209, 7214.149), stdev = 32.483
  CI (99.9%): [7034.129, 7284.289] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 85.13% complete, ETA 00:22:04
# Fork: 1 of 1
# Warmup Iteration   1: 257014.871 ns/op
# Warmup Iteration   2: 20297.507 ns/op
# Warmup Iteration   3: 16432.880 ns/op
# Warmup Iteration   4: 14883.916 ns/op
# Warmup Iteration   5: 14205.930 ns/op
Iteration   1: 14360.006 ns/op
Iteration   2: 14216.597 ns/op
Iteration   3: 14171.995 ns/op
Iteration   4: 14212.104 ns/op
Iteration   5: 14179.950 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  14228.131 ±(99.9%) 293.594 ns/op [Average]
  (min, avg, max) = (14171.995, 14228.131, 14360.006), stdev = 76.246
  CI (99.9%): [13934.536, 14521.725] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 85.38% complete, ETA 00:21:41
# Fork: 1 of 1
# Warmup Iteration   1: 57102.536 ns/op
# Warmup Iteration   2: 30864.151 ns/op
# Warmup Iteration   3: 33755.934 ns/op
# Warmup Iteration   4: 29401.806 ns/op
# Warmup Iteration   5: 28992.857 ns/op
Iteration   1: 29032.312 ns/op
Iteration   2: 29012.308 ns/op
Iteration   3: 29124.997 ns/op
Iteration   4: 28965.227 ns/op
Iteration   5: 29486.125 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  29124.194 ±(99.9%) 810.526 ns/op [Average]
  (min, avg, max) = (28965.227, 29124.194, 29486.125), stdev = 210.491
  CI (99.9%): [28313.668, 29934.720] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 85.64% complete, ETA 00:21:19
# Fork: 1 of 1
# Warmup Iteration   1: 2626982.615 ns/op
# Warmup Iteration   2: 275866.968 ns/op
# Warmup Iteration   3: 257467.390 ns/op
# Warmup Iteration   4: 255765.143 ns/op
# Warmup Iteration   5: 245404.249 ns/op
Iteration   1: 244141.290 ns/op
Iteration   2: 244166.676 ns/op
Iteration   3: 244555.946 ns/op
Iteration   4: 245683.994 ns/op
Iteration   5: 244481.450 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  244605.871 ±(99.9%) 2427.013 ns/op [Average]
  (min, avg, max) = (244141.290, 244605.871, 245683.994), stdev = 630.288
  CI (99.9%): [242178.858, 247032.884] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 85.90% complete, ETA 00:20:56
# Fork: 1 of 1
# Warmup Iteration   1: 29290.195 ns/op
# Warmup Iteration   2: 5544.136 ns/op
# Warmup Iteration   3: 4867.726 ns/op
# Warmup Iteration   4: 4941.837 ns/op
# Warmup Iteration   5: 4860.960 ns/op
Iteration   1: 4870.170 ns/op
Iteration   2: 4851.732 ns/op
Iteration   3: 4860.597 ns/op
Iteration   4: 4855.573 ns/op
Iteration   5: 4869.227 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4861.460 ±(99.9%) 31.414 ns/op [Average]
  (min, avg, max) = (4851.732, 4861.460, 4870.170), stdev = 8.158
  CI (99.9%): [4830.046, 4892.874] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 86.15% complete, ETA 00:20:33
# Fork: 1 of 1
# Warmup Iteration   1: 73255.465 ns/op
# Warmup Iteration   2: 17490.777 ns/op
# Warmup Iteration   3: 8922.874 ns/op
# Warmup Iteration   4: 8783.738 ns/op
# Warmup Iteration   5: 8695.809 ns/op
Iteration   1: 8527.046 ns/op
Iteration   2: 8530.647 ns/op
Iteration   3: 8541.513 ns/op
Iteration   4: 8529.683 ns/op
Iteration   5: 8514.128 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8528.603 ±(99.9%) 37.727 ns/op [Average]
  (min, avg, max) = (8514.128, 8528.603, 8541.513), stdev = 9.798
  CI (99.9%): [8490.876, 8566.331] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 86.41% complete, ETA 00:20:10
# Fork: 1 of 1
# Warmup Iteration   1: 205109.382 ns/op
# Warmup Iteration   2: 26257.983 ns/op
# Warmup Iteration   3: 16598.593 ns/op
# Warmup Iteration   4: 16507.668 ns/op
# Warmup Iteration   5: 16713.753 ns/op
Iteration   1: 16120.120 ns/op
Iteration   2: 16273.204 ns/op
Iteration   3: 15932.115 ns/op
Iteration   4: 15952.201 ns/op
Iteration   5: 16131.257 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16081.779 ±(99.9%) 543.717 ns/op [Average]
  (min, avg, max) = (15932.115, 16081.779, 16273.204), stdev = 141.201
  CI (99.9%): [15538.063, 16625.496] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 86.67% complete, ETA 00:19:47
# Fork: 1 of 1
# Warmup Iteration   1: 339218.068 ns/op
# Warmup Iteration   2: 51459.161 ns/op
# Warmup Iteration   3: 31378.110 ns/op
# Warmup Iteration   4: 31613.261 ns/op
# Warmup Iteration   5: 29863.845 ns/op
Iteration   1: 29876.379 ns/op
Iteration   2: 29847.011 ns/op
Iteration   3: 29829.704 ns/op
Iteration   4: 30088.061 ns/op
Iteration   5: 29878.385 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  29903.908 ±(99.9%) 404.157 ns/op [Average]
  (min, avg, max) = (29829.704, 29903.908, 30088.061), stdev = 104.958
  CI (99.9%): [29499.751, 30308.065] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 86.92% complete, ETA 00:19:24
# Fork: 1 of 1
# Warmup Iteration   1: 450512.698 ns/op
# Warmup Iteration   2: 239377.718 ns/op
# Warmup Iteration   3: 233924.612 ns/op
# Warmup Iteration   4: 230927.102 ns/op
# Warmup Iteration   5: 222472.593 ns/op
Iteration   1: 221627.562 ns/op
Iteration   2: 221014.434 ns/op
Iteration   3: 221581.036 ns/op
Iteration   4: 221555.284 ns/op
Iteration   5: 222655.641 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  221686.791 ±(99.9%) 2296.483 ns/op [Average]
  (min, avg, max) = (221014.434, 221686.791, 222655.641), stdev = 596.389
  CI (99.9%): [219390.308, 223983.274] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 87.18% complete, ETA 00:19:01
# Fork: 1 of 1
# Warmup Iteration   1: 12466.268 ns/op
# Warmup Iteration   2: 2191.140 ns/op
# Warmup Iteration   3: 2078.375 ns/op
# Warmup Iteration   4: 1982.693 ns/op
# Warmup Iteration   5: 2031.399 ns/op
Iteration   1: 1992.452 ns/op
Iteration   2: 1980.246 ns/op
Iteration   3: 1979.050 ns/op
Iteration   4: 1985.824 ns/op
Iteration   5: 2011.362 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1989.787 ±(99.9%) 50.743 ns/op [Average]
  (min, avg, max) = (1979.050, 1989.787, 2011.362), stdev = 13.178
  CI (99.9%): [1939.044, 2040.530] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 87.44% complete, ETA 00:18:39
# Fork: 1 of 1
# Warmup Iteration   1: 35784.733 ns/op
# Warmup Iteration   2: 5564.380 ns/op
# Warmup Iteration   3: 4468.264 ns/op
# Warmup Iteration   4: 4204.768 ns/op
# Warmup Iteration   5: 4185.268 ns/op
Iteration   1: 4211.558 ns/op
Iteration   2: 4225.128 ns/op
Iteration   3: 4191.227 ns/op
Iteration   4: 4189.426 ns/op
Iteration   5: 4192.908 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4202.050 ±(99.9%) 60.366 ns/op [Average]
  (min, avg, max) = (4189.426, 4202.050, 4225.128), stdev = 15.677
  CI (99.9%): [4141.684, 4262.416] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 87.69% complete, ETA 00:18:16
# Fork: 1 of 1
# Warmup Iteration   1: 63036.750 ns/op
# Warmup Iteration   2: 25384.411 ns/op
# Warmup Iteration   3: 9410.160 ns/op
# Warmup Iteration   4: 9101.040 ns/op
# Warmup Iteration   5: 8794.159 ns/op
Iteration   1: 8791.391 ns/op
Iteration   2: 8841.026 ns/op
Iteration   3: 8899.455 ns/op
Iteration   4: 8851.502 ns/op
Iteration   5: 8824.784 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8841.632 ±(99.9%) 152.202 ns/op [Average]
  (min, avg, max) = (8791.391, 8841.632, 8899.455), stdev = 39.526
  CI (99.9%): [8689.430, 8993.833] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 87.95% complete, ETA 00:17:53
# Fork: 1 of 1
# Warmup Iteration   1: 100066.130 ns/op
# Warmup Iteration   2: 18697.962 ns/op
# Warmup Iteration   3: 16737.018 ns/op
# Warmup Iteration   4: 15761.418 ns/op
# Warmup Iteration   5: 15760.247 ns/op
Iteration   1: 15717.713 ns/op
Iteration   2: 15816.544 ns/op
Iteration   3: 15746.564 ns/op
Iteration   4: 15731.238 ns/op
Iteration   5: 15744.886 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15751.389 ±(99.9%) 147.270 ns/op [Average]
  (min, avg, max) = (15717.713, 15751.389, 15816.544), stdev = 38.246
  CI (99.9%): [15604.119, 15898.659] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 88.21% complete, ETA 00:17:30
# Fork: 1 of 1
# Warmup Iteration   1: 701959.800 ns/op
# Warmup Iteration   2: 149610.071 ns/op
# Warmup Iteration   3: 145605.080 ns/op
# Warmup Iteration   4: 135204.615 ns/op
# Warmup Iteration   5: 132331.676 ns/op
Iteration   1: 132136.110 ns/op
Iteration   2: 132352.324 ns/op
Iteration   3: 133321.629 ns/op
Iteration   4: 132482.857 ns/op
Iteration   5: 132106.467 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  132479.877 ±(99.9%) 1908.338 ns/op [Average]
  (min, avg, max) = (132106.467, 132479.877, 133321.629), stdev = 495.589
  CI (99.9%): [130571.539, 134388.216] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 88.46% complete, ETA 00:17:07
# Fork: 1 of 1
# Warmup Iteration   1: 12433.232 ns/op
# Warmup Iteration   2: 3884.804 ns/op
# Warmup Iteration   3: 3261.049 ns/op
# Warmup Iteration   4: 3198.647 ns/op
# Warmup Iteration   5: 3123.863 ns/op
Iteration   1: 3133.748 ns/op
Iteration   2: 3125.334 ns/op
Iteration   3: 3135.817 ns/op
Iteration   4: 3151.761 ns/op
Iteration   5: 3135.695 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3136.471 ±(99.9%) 36.847 ns/op [Average]
  (min, avg, max) = (3125.334, 3136.471, 3151.761), stdev = 9.569
  CI (99.9%): [3099.623, 3173.318] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 88.72% complete, ETA 00:16:44
# Fork: 1 of 1
# Warmup Iteration   1: 39778.497 ns/op
# Warmup Iteration   2: 8224.899 ns/op
# Warmup Iteration   3: 6047.121 ns/op
# Warmup Iteration   4: 5605.381 ns/op
# Warmup Iteration   5: 5641.992 ns/op
Iteration   1: 5606.876 ns/op
Iteration   2: 5608.574 ns/op
Iteration   3: 5615.276 ns/op
Iteration   4: 5639.349 ns/op
Iteration   5: 5608.013 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5615.618 ±(99.9%) 52.627 ns/op [Average]
  (min, avg, max) = (5606.876, 5615.618, 5639.349), stdev = 13.667
  CI (99.9%): [5562.990, 5668.245] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 88.97% complete, ETA 00:16:22
# Fork: 1 of 1
# Warmup Iteration   1: 70440.704 ns/op
# Warmup Iteration   2: 12338.355 ns/op
# Warmup Iteration   3: 9315.380 ns/op
# Warmup Iteration   4: 9589.870 ns/op
# Warmup Iteration   5: 9250.116 ns/op
Iteration   1: 9262.877 ns/op
Iteration   2: 9209.761 ns/op
Iteration   3: 9235.289 ns/op
Iteration   4: 9214.661 ns/op
Iteration   5: 9281.291 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9240.776 ±(99.9%) 118.746 ns/op [Average]
  (min, avg, max) = (9209.761, 9240.776, 9281.291), stdev = 30.838
  CI (99.9%): [9122.030, 9359.522] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 89.23% complete, ETA 00:15:59
# Fork: 1 of 1
# Warmup Iteration   1: 239441.905 ns/op
# Warmup Iteration   2: 27660.341 ns/op
# Warmup Iteration   3: 20432.736 ns/op
# Warmup Iteration   4: 20413.454 ns/op
# Warmup Iteration   5: 19553.764 ns/op
Iteration   1: 19217.031 ns/op
Iteration   2: 19214.377 ns/op
Iteration   3: 19674.048 ns/op
Iteration   4: 19226.105 ns/op
Iteration   5: 19591.169 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  19384.546 ±(99.9%) 879.404 ns/op [Average]
  (min, avg, max) = (19214.377, 19384.546, 19674.048), stdev = 228.378
  CI (99.9%): [18505.142, 20263.950] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 89.49% complete, ETA 00:15:36
# Fork: 1 of 1
# Warmup Iteration   1: 1284881.488 ns/op
# Warmup Iteration   2: 230437.129 ns/op
# Warmup Iteration   3: 188458.850 ns/op
# Warmup Iteration   4: 169187.918 ns/op
# Warmup Iteration   5: 169697.397 ns/op
Iteration   1: 171861.597 ns/op
Iteration   2: 169417.653 ns/op
Iteration   3: 174638.325 ns/op
Iteration   4: 169517.852 ns/op
Iteration   5: 168735.407 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  170834.167 ±(99.9%) 9367.284 ns/op [Average]
  (min, avg, max) = (168735.407, 170834.167, 174638.325), stdev = 2432.654
  CI (99.9%): [161466.883, 180201.450] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 89.74% complete, ETA 00:15:13
# Fork: 1 of 1
# Warmup Iteration   1: 8107.550 ns/op
# Warmup Iteration   2: 3505.113 ns/op
# Warmup Iteration   3: 3416.170 ns/op
# Warmup Iteration   4: 3193.925 ns/op
# Warmup Iteration   5: 3191.845 ns/op
Iteration   1: 3187.415 ns/op
Iteration   2: 3276.648 ns/op
Iteration   3: 3195.553 ns/op
Iteration   4: 3198.315 ns/op
Iteration   5: 3249.729 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3221.532 ±(99.9%) 151.732 ns/op [Average]
  (min, avg, max) = (3187.415, 3221.532, 3276.648), stdev = 39.404
  CI (99.9%): [3069.800, 3373.263] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 90.00% complete, ETA 00:14:50
# Fork: 1 of 1
# Warmup Iteration   1: 23229.483 ns/op
# Warmup Iteration   2: 8481.911 ns/op
# Warmup Iteration   3: 8065.677 ns/op
# Warmup Iteration   4: 7664.327 ns/op
# Warmup Iteration   5: 7683.566 ns/op
Iteration   1: 7674.927 ns/op
Iteration   2: 7663.701 ns/op
Iteration   3: 7660.310 ns/op
Iteration   4: 7681.580 ns/op
Iteration   5: 7660.834 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7668.270 ±(99.9%) 36.581 ns/op [Average]
  (min, avg, max) = (7660.310, 7668.270, 7681.580), stdev = 9.500
  CI (99.9%): [7631.690, 7704.851] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 90.26% complete, ETA 00:14:27
# Fork: 1 of 1
# Warmup Iteration   1: 73302.879 ns/op
# Warmup Iteration   2: 20287.297 ns/op
# Warmup Iteration   3: 15634.458 ns/op
# Warmup Iteration   4: 15346.802 ns/op
# Warmup Iteration   5: 15445.240 ns/op
Iteration   1: 15335.466 ns/op
Iteration   2: 15312.330 ns/op
Iteration   3: 15300.533 ns/op
Iteration   4: 15308.879 ns/op
Iteration   5: 15346.671 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15320.776 ±(99.9%) 74.791 ns/op [Average]
  (min, avg, max) = (15300.533, 15320.776, 15346.671), stdev = 19.423
  CI (99.9%): [15245.985, 15395.566] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 90.51% complete, ETA 00:14:05
# Fork: 1 of 1
# Warmup Iteration   1: 45766.327 ns/op
# Warmup Iteration   2: 25491.224 ns/op
# Warmup Iteration   3: 22879.944 ns/op
# Warmup Iteration   4: 22774.789 ns/op
# Warmup Iteration   5: 22679.604 ns/op
Iteration   1: 22727.752 ns/op
Iteration   2: 22743.264 ns/op
Iteration   3: 22761.685 ns/op
Iteration   4: 22750.859 ns/op
Iteration   5: 22784.803 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  22753.673 ±(99.9%) 82.170 ns/op [Average]
  (min, avg, max) = (22727.752, 22753.673, 22784.803), stdev = 21.339
  CI (99.9%): [22671.503, 22835.842] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 90.77% complete, ETA 00:13:42
# Fork: 1 of 1
# Warmup Iteration   1: 655400.698 ns/op
# Warmup Iteration   2: 265908.929 ns/op
# Warmup Iteration   3: 224411.567 ns/op
# Warmup Iteration   4: 210164.267 ns/op
# Warmup Iteration   5: 209041.210 ns/op
Iteration   1: 208786.459 ns/op
Iteration   2: 209070.441 ns/op
Iteration   3: 210428.449 ns/op
Iteration   4: 209088.368 ns/op
Iteration   5: 209267.415 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  209328.226 ±(99.9%) 2459.357 ns/op [Average]
  (min, avg, max) = (208786.459, 209328.226, 210428.449), stdev = 638.687
  CI (99.9%): [206868.870, 211787.583] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 91.03% complete, ETA 00:13:19
# Fork: 1 of 1
# Warmup Iteration   1: 66177.125 ns/op
# Warmup Iteration   2: 36789.300 ns/op
# Warmup Iteration   3: 31163.227 ns/op
# Warmup Iteration   4: 30242.276 ns/op
# Warmup Iteration   5: 28228.964 ns/op
Iteration   1: 28298.425 ns/op
Iteration   2: 28154.389 ns/op
Iteration   3: 28234.488 ns/op
Iteration   4: 28442.287 ns/op
Iteration   5: 28252.569 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  28276.432 ±(99.9%) 409.396 ns/op [Average]
  (min, avg, max) = (28154.389, 28276.432, 28442.287), stdev = 106.319
  CI (99.9%): [27867.036, 28685.827] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 91.28% complete, ETA 00:12:56
# Fork: 1 of 1
# Warmup Iteration   1: 76847.142 ns/op
# Warmup Iteration   2: 46869.141 ns/op
# Warmup Iteration   3: 44233.579 ns/op
# Warmup Iteration   4: 41309.098 ns/op
# Warmup Iteration   5: 41091.261 ns/op
Iteration   1: 41143.781 ns/op
Iteration   2: 41169.092 ns/op
Iteration   3: 41142.738 ns/op
Iteration   4: 41096.594 ns/op
Iteration   5: 41052.486 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  41120.938 ±(99.9%) 178.486 ns/op [Average]
  (min, avg, max) = (41052.486, 41120.938, 41169.092), stdev = 46.352
  CI (99.9%): [40942.452, 41299.425] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 91.54% complete, ETA 00:12:33
# Fork: 1 of 1
# Warmup Iteration   1: 186670.428 ns/op
# Warmup Iteration   2: 73301.101 ns/op
# Warmup Iteration   3: 63075.064 ns/op
# Warmup Iteration   4: 64488.019 ns/op
# Warmup Iteration   5: 65122.642 ns/op
Iteration   1: 61492.516 ns/op
Iteration   2: 61091.176 ns/op
Iteration   3: 61332.983 ns/op
Iteration   4: 60864.862 ns/op
Iteration   5: 60759.309 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  61108.169 ±(99.9%) 1185.996 ns/op [Average]
  (min, avg, max) = (60759.309, 61108.169, 61492.516), stdev = 307.999
  CI (99.9%): [59922.174, 62294.165] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 91.79% complete, ETA 00:12:10
# Fork: 1 of 1
# Warmup Iteration   1: 297521.439 ns/op
# Warmup Iteration   2: 144964.675 ns/op
# Warmup Iteration   3: 131400.003 ns/op
# Warmup Iteration   4: 130576.883 ns/op
# Warmup Iteration   5: 126435.758 ns/op
Iteration   1: 127109.786 ns/op
Iteration   2: 126559.875 ns/op
Iteration   3: 126104.500 ns/op
Iteration   4: 125921.306 ns/op
Iteration   5: 124801.291 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  126099.352 ±(99.9%) 3306.707 ns/op [Average]
  (min, avg, max) = (124801.291, 126099.352, 127109.786), stdev = 858.741
  CI (99.9%): [122792.644, 129406.059] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 92.05% complete, ETA 00:11:47
# Fork: 1 of 1
# Warmup Iteration   1: 2044737.115 ns/op
# Warmup Iteration   2: 1356224.979 ns/op
# Warmup Iteration   3: 1077926.149 ns/op
# Warmup Iteration   4: 1036806.451 ns/op
# Warmup Iteration   5: 1042950.278 ns/op
Iteration   1: 1008683.579 ns/op
Iteration   2: 1002332.409 ns/op
Iteration   3: 1001577.248 ns/op
Iteration   4: 1002027.847 ns/op
Iteration   5: 1006231.607 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1004170.538 ±(99.9%) 12071.407 ns/op [Average]
  (min, avg, max) = (1001577.248, 1004170.538, 1008683.579), stdev = 3134.906
  CI (99.9%): [992099.131, 1016241.945] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 92.31% complete, ETA 00:11:25
# Fork: 1 of 1
# Warmup Iteration   1: 6023.636 ns/op
# Warmup Iteration   2: 2493.052 ns/op
# Warmup Iteration   3: 2447.272 ns/op
# Warmup Iteration   4: 2436.967 ns/op
# Warmup Iteration   5: 2452.148 ns/op
Iteration   1: 2452.178 ns/op
Iteration   2: 2450.676 ns/op
Iteration   3: 2441.555 ns/op
Iteration   4: 2451.692 ns/op
Iteration   5: 2459.712 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2451.163 ±(99.9%) 24.876 ns/op [Average]
  (min, avg, max) = (2441.555, 2451.163, 2459.712), stdev = 6.460
  CI (99.9%): [2426.286, 2476.039] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 92.56% complete, ETA 00:11:02
# Fork: 1 of 1
# Warmup Iteration   1: 8625.801 ns/op
# Warmup Iteration   2: 4231.933 ns/op
# Warmup Iteration   3: 3921.737 ns/op
# Warmup Iteration   4: 3919.150 ns/op
# Warmup Iteration   5: 3884.628 ns/op
Iteration   1: 3895.409 ns/op
Iteration   2: 3938.922 ns/op
Iteration   3: 3895.091 ns/op
Iteration   4: 3899.724 ns/op
Iteration   5: 3930.315 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3911.892 ±(99.9%) 81.048 ns/op [Average]
  (min, avg, max) = (3895.091, 3911.892, 3938.922), stdev = 21.048
  CI (99.9%): [3830.844, 3992.940] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 92.82% complete, ETA 00:10:39
# Fork: 1 of 1
# Warmup Iteration   1: 13071.720 ns/op
# Warmup Iteration   2: 7324.185 ns/op
# Warmup Iteration   3: 6705.107 ns/op
# Warmup Iteration   4: 6703.561 ns/op
# Warmup Iteration   5: 6695.474 ns/op
Iteration   1: 6710.729 ns/op
Iteration   2: 6738.314 ns/op
Iteration   3: 6701.781 ns/op
Iteration   4: 6698.474 ns/op
Iteration   5: 6712.608 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6712.381 ±(99.9%) 60.305 ns/op [Average]
  (min, avg, max) = (6698.474, 6712.381, 6738.314), stdev = 15.661
  CI (99.9%): [6652.076, 6772.686] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 93.08% complete, ETA 00:10:16
# Fork: 1 of 1
# Warmup Iteration   1: 22822.823 ns/op
# Warmup Iteration   2: 14216.612 ns/op
# Warmup Iteration   3: 12797.770 ns/op
# Warmup Iteration   4: 12800.864 ns/op
# Warmup Iteration   5: 12853.414 ns/op
Iteration   1: 12775.108 ns/op
Iteration   2: 12730.275 ns/op
Iteration   3: 12873.990 ns/op
Iteration   4: 12760.615 ns/op
Iteration   5: 12865.303 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  12801.058 ±(99.9%) 249.296 ns/op [Average]
  (min, avg, max) = (12730.275, 12801.058, 12873.990), stdev = 64.741
  CI (99.9%): [12551.762, 13050.354] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 93.33% complete, ETA 00:09:53
# Fork: 1 of 1
# Warmup Iteration   1: 230286.832 ns/op
# Warmup Iteration   2: 131157.333 ns/op
# Warmup Iteration   3: 120784.702 ns/op
# Warmup Iteration   4: 120731.538 ns/op
# Warmup Iteration   5: 120661.554 ns/op
Iteration   1: 121300.528 ns/op
Iteration   2: 120300.691 ns/op
Iteration   3: 121016.319 ns/op
Iteration   4: 120291.094 ns/op
Iteration   5: 120315.447 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  120644.816 ±(99.9%) 1846.701 ns/op [Average]
  (min, avg, max) = (120291.094, 120644.816, 121300.528), stdev = 479.583
  CI (99.9%): [118798.114, 122491.517] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 93.59% complete, ETA 00:09:30
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
9485.742 ns/op
# Warmup Iteration   2: 8531.908 ns/op
# Warmup Iteration   3: 6541.528 ns/op
# Warmup Iteration   4: 5477.929 ns/op
# Warmup Iteration   5: 5561.614 ns/op
Iteration   1: 5907.347 ns/op
Iteration   2: 6295.845 ns/op
Iteration   3: 6267.516 ns/op
Iteration   4: 6261.981 ns/op
Iteration   5: 6250.587 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6196.655 ±(99.9%) 626.056 ns/op [Average]
  (min, avg, max) = (5907.347, 6196.655, 6295.845), stdev = 162.585
  CI (99.9%): [5570.600, 6822.711] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 93.85% complete, ETA 00:09:08
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
15392.328 ns/op
# Warmup Iteration   2: 9516.667 ns/op
# Warmup Iteration   3: 9297.052 ns/op
# Warmup Iteration   4: 9287.272 ns/op
# Warmup Iteration   5: 9311.470 ns/op
Iteration   1: 9274.945 ns/op
Iteration   2: 9537.854 ns/op
Iteration   3: 9565.920 ns/op
Iteration   4: 9616.228 ns/op
Iteration   5: 9698.049 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9538.599 ±(99.9%) 614.027 ns/op [Average]
  (min, avg, max) = (9274.945, 9538.599, 9698.049), stdev = 159.461
  CI (99.9%): [8924.572, 10152.627] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 94.10% complete, ETA 00:08:45
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
32409.678 ns/op
# Warmup Iteration   2: 17712.843 ns/op
# Warmup Iteration   3: 17898.408 ns/op
# Warmup Iteration   4: 17530.911 ns/op
# Warmup Iteration   5: 17539.836 ns/op
Iteration   1: 17514.769 ns/op
Iteration   2: 18113.093 ns/op
Iteration   3: 18197.609 ns/op
Iteration   4: 18325.282 ns/op
Iteration   5: 18294.298 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  18089.010 ±(99.9%) 1277.250 ns/op [Average]
  (min, avg, max) = (17514.769, 18089.010, 18325.282), stdev = 331.698
  CI (99.9%): [16811.760, 19366.260] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 94.36% complete, ETA 00:08:22
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
46982.088 ns/op
# Warmup Iteration   2: 34289.563 ns/op
# Warmup Iteration   3: 34529.484 ns/op
# Warmup Iteration   4: 34129.813 ns/op
# Warmup Iteration   5: 34141.494 ns/op
Iteration   1: 34083.574 ns/op
Iteration   2: 34256.023 ns/op
Iteration   3: 35675.161 ns/op
Iteration   4: 36037.205 ns/op
Iteration   5: 36385.720 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  35287.537 ±(99.9%) 4053.161 ns/op [Average]
  (min, avg, max) = (34083.574, 35287.537, 36385.720), stdev = 1052.593
  CI (99.9%): [31234.376, 39340.698] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 94.62% complete, ETA 00:07:59
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
719966.714 ns/op
# Warmup Iteration   2: 537597.762 ns/op
# Warmup Iteration   3: 571342.445 ns/op
# Warmup Iteration   4: 576982.466 ns/op
# Warmup Iteration   5: 511568.980 ns/op
Iteration   1: 512058.265 ns/op
Iteration   2: 511065.638 ns/op
Iteration   3: 511657.313 ns/op
Iteration   4: 514019.831 ns/op
Iteration   5: 514219.971 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  512604.204 ±(99.9%) 5505.391 ns/op [Average]
  (min, avg, max) = (511065.638, 512604.204, 514219.971), stdev = 1429.733
  CI (99.9%): [507098.812, 518109.595] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 94.87% complete, ETA 00:07:36
# Fork: 1 of 1
# Warmup Iteration   1: 9129.898 ns/op
# Warmup Iteration   2: 2600.139 ns/op
# Warmup Iteration   3: 2172.153 ns/op
# Warmup Iteration   4: 2149.610 ns/op
# Warmup Iteration   5: 1967.906 ns/op
Iteration   1: 1981.927 ns/op
Iteration   2: 1992.175 ns/op
Iteration   3: 1962.264 ns/op
Iteration   4: 1971.421 ns/op
Iteration   5: 1976.690 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1976.895 ±(99.9%) 43.175 ns/op [Average]
  (min, avg, max) = (1962.264, 1976.895, 1992.175), stdev = 11.212
  CI (99.9%): [1933.721, 2020.070] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 95.13% complete, ETA 00:07:13
# Fork: 1 of 1
# Warmup Iteration   1: 9681.128 ns/op
# Warmup Iteration   2: 4788.438 ns/op
# Warmup Iteration   3: 4640.882 ns/op
# Warmup Iteration   4: 4742.934 ns/op
# Warmup Iteration   5: 5007.986 ns/op
Iteration   1: 5009.087 ns/op
Iteration   2: 5104.578 ns/op
Iteration   3: 5125.022 ns/op
Iteration   4: 5101.011 ns/op
Iteration   5: 5200.424 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5108.024 ±(99.9%) 263.117 ns/op [Average]
  (min, avg, max) = (5009.087, 5108.024, 5200.424), stdev = 68.331
  CI (99.9%): [4844.907, 5371.141] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 95.38% complete, ETA 00:06:51
# Fork: 1 of 1
# Warmup Iteration   1: 21605.368 ns/op
# Warmup Iteration   2: 8433.795 ns/op
# Warmup Iteration   3: 8136.802 ns/op
# Warmup Iteration   4: 7820.791 ns/op
# Warmup Iteration   5: 7771.639 ns/op
Iteration   1: 7780.591 ns/op
Iteration   2: 7802.180 ns/op
Iteration   3: 7776.554 ns/op
Iteration   4: 7785.482 ns/op
Iteration   5: 7796.389 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7788.239 ±(99.9%) 41.446 ns/op [Average]
  (min, avg, max) = (7776.554, 7788.239, 7802.180), stdev = 10.763
  CI (99.9%): [7746.793, 7829.686] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 95.64% complete, ETA 00:06:28
# Fork: 1 of 1
# Warmup Iteration   1: 48911.051 ns/op
# Warmup Iteration   2: 15693.206 ns/op
# Warmup Iteration   3: 15345.998 ns/op
# Warmup Iteration   4: 14521.572 ns/op
# Warmup Iteration   5: 14123.307 ns/op
Iteration   1: 14261.289 ns/op
Iteration   2: 14306.267 ns/op
Iteration   3: 14324.246 ns/op
Iteration   4: 14061.443 ns/op
Iteration   5: 14284.086 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  14247.466 ±(99.9%) 410.638 ns/op [Average]
  (min, avg, max) = (14061.443, 14247.466, 14324.246), stdev = 106.641
  CI (99.9%): [13836.828, 14658.104] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 95.90% complete, ETA 00:06:05
# Fork: 1 of 1
# Warmup Iteration   1: 226440.756 ns/op
# Warmup Iteration   2: 194666.246 ns/op
# Warmup Iteration   3: 131698.901 ns/op
# Warmup Iteration   4: 132229.607 ns/op
# Warmup Iteration   5: 132114.617 ns/op
Iteration   1: 131904.188 ns/op
Iteration   2: 131474.464 ns/op
Iteration   3: 132098.584 ns/op
Iteration   4: 131558.149 ns/op
Iteration   5: 131653.762 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  131737.829 ±(99.9%) 993.982 ns/op [Average]
  (min, avg, max) = (131474.464, 131737.829, 132098.584), stdev = 258.134
  CI (99.9%): [130743.847, 132731.811] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 96.15% complete, ETA 00:05:42
# Fork: 1 of 1
# Warmup Iteration   1: 59746.597 ns/op
# Warmup Iteration   2: 20467.140 ns/op
# Warmup Iteration   3: 18607.308 ns/op
# Warmup Iteration   4: 18540.453 ns/op
# Warmup Iteration   5: 18503.194 ns/op
Iteration   1: 18843.216 ns/op
Iteration   2: 18551.514 ns/op
Iteration   3: 18750.906 ns/op
Iteration   4: 18703.135 ns/op
Iteration   5: 18854.185 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  18740.591 ±(99.9%) 474.330 ns/op [Average]
  (min, avg, max) = (18551.514, 18740.591, 18854.185), stdev = 123.182
  CI (99.9%): [18266.262, 19214.921] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 96.41% complete, ETA 00:05:19
# Fork: 1 of 1
# Warmup Iteration   1: 111267.939 ns/op
# Warmup Iteration   2: 42170.184 ns/op
# Warmup Iteration   3: 35512.915 ns/op
# Warmup Iteration   4: 36796.316 ns/op
# Warmup Iteration   5: 35816.891 ns/op
Iteration   1: 35449.735 ns/op
Iteration   2: 35461.798 ns/op
Iteration   3: 35272.246 ns/op
Iteration   4: 35435.524 ns/op
Iteration   5: 35287.918 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  35381.444 ±(99.9%) 358.732 ns/op [Average]
  (min, avg, max) = (35272.246, 35381.444, 35461.798), stdev = 93.162
  CI (99.9%): [35022.712, 35740.176] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 96.67% complete, ETA 00:04:56
# Fork: 1 of 1
# Warmup Iteration   1: 207733.442 ns/op
# Warmup Iteration   2: 92191.930 ns/op
# Warmup Iteration   3: 82100.163 ns/op
# Warmup Iteration   4: 80578.202 ns/op
# Warmup Iteration   5: 80041.754 ns/op
Iteration   1: 79219.626 ns/op
Iteration   2: 79584.954 ns/op
Iteration   3: 79401.489 ns/op
Iteration   4: 80361.241 ns/op
Iteration   5: 79525.577 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  79618.578 ±(99.9%) 1686.848 ns/op [Average]
  (min, avg, max) = (79219.626, 79618.578, 80361.241), stdev = 438.069
  CI (99.9%): [77931.729, 81305.426] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 96.92% complete, ETA 00:04:34
# Fork: 1 of 1
# Warmup Iteration   1: 503378.026 ns/op
# Warmup Iteration   2: 215749.622 ns/op
# Warmup Iteration   3: 176743.372 ns/op
# Warmup Iteration   4: 176881.360 ns/op
# Warmup Iteration   5: 179757.109 ns/op
Iteration   1: 177700.602 ns/op
Iteration   2: 177491.400 ns/op
Iteration   3: 177709.818 ns/op
Iteration   4: 177794.921 ns/op
Iteration   5: 177011.269 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  177541.602 ±(99.9%) 1219.994 ns/op [Average]
  (min, avg, max) = (177011.269, 177541.602, 177794.921), stdev = 316.829
  CI (99.9%): [176321.608, 178761.596] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 97.18% complete, ETA 00:04:11
# Fork: 1 of 1
# Warmup Iteration   1: 3372443.079 ns/op
# Warmup Iteration   2: 1761241.839 ns/op
# Warmup Iteration   3: 1576645.062 ns/op
# Warmup Iteration   4: 1565531.428 ns/op
# Warmup Iteration   5: 1554089.417 ns/op
Iteration   1: 1583006.346 ns/op
Iteration   2: 1545453.911 ns/op
Iteration   3: 1541983.616 ns/op
Iteration   4: 1546590.086 ns/op
Iteration   5: 1561971.540 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1555801.100 ±(99.9%) 65603.201 ns/op [Average]
  (min, avg, max) = (1541983.616, 1555801.100, 1583006.346), stdev = 17036.943
  CI (99.9%): [1490197.899, 1621404.301] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 97.44% complete, ETA 00:03:48
# Fork: 1 of 1
# Warmup Iteration   1: 17501.186 ns/op
# Warmup Iteration   2: 9780.346 ns/op
# Warmup Iteration   3: 8845.886 ns/op
# Warmup Iteration   4: 8843.477 ns/op
# Warmup Iteration   5: 8896.769 ns/op
Iteration   1: 8917.112 ns/op
Iteration   2: 8892.549 ns/op
Iteration   3: 8847.534 ns/op
Iteration   4: 8887.337 ns/op
Iteration   5: 8888.050 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8886.516 ±(99.9%) 96.173 ns/op [Average]
  (min, avg, max) = (8847.534, 8886.516, 8917.112), stdev = 24.976
  CI (99.9%): [8790.344, 8982.689] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 97.69% complete, ETA 00:03:25
# Fork: 1 of 1
# Warmup Iteration   1: 37721.649 ns/op
# Warmup Iteration   2: 18771.656 ns/op
# Warmup Iteration   3: 17090.497 ns/op
# Warmup Iteration   4: 16974.163 ns/op
# Warmup Iteration   5: 16917.978 ns/op
Iteration   1: 16953.808 ns/op
Iteration   2: 16858.301 ns/op
Iteration   3: 16897.971 ns/op
Iteration   4: 16876.828 ns/op
Iteration   5: 16864.192 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16890.220 ±(99.9%) 148.876 ns/op [Average]
  (min, avg, max) = (16858.301, 16890.220, 16953.808), stdev = 38.663
  CI (99.9%): [16741.344, 17039.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 97.95% complete, ETA 00:03:02
# Fork: 1 of 1
# Warmup Iteration   1: 93041.910 ns/op
# Warmup Iteration   2: 40162.814 ns/op
# Warmup Iteration   3: 36721.060 ns/op
# Warmup Iteration   4: 36458.324 ns/op
# Warmup Iteration   5: 36530.473 ns/op
Iteration   1: 36459.997 ns/op
Iteration   2: 36508.343 ns/op
Iteration   3: 36399.734 ns/op
Iteration   4: 36585.028 ns/op
Iteration   5: 36355.746 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  36461.770 ±(99.9%) 346.848 ns/op [Average]
  (min, avg, max) = (36355.746, 36461.770, 36585.028), stdev = 90.075
  CI (99.9%): [36114.921, 36808.618] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 98.21% complete, ETA 00:02:39
# Fork: 1 of 1
# Warmup Iteration   1: 189934.577 ns/op
# Warmup Iteration   2: 89722.696 ns/op
# Warmup Iteration   3: 75506.287 ns/op
# Warmup Iteration   4: 74688.507 ns/op
# Warmup Iteration   5: 74367.794 ns/op
Iteration   1: 74599.957 ns/op
Iteration   2: 74291.143 ns/op
Iteration   3: 74560.088 ns/op
Iteration   4: 74325.867 ns/op
Iteration   5: 74243.573 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  74404.126 ±(99.9%) 630.792 ns/op [Average]
  (min, avg, max) = (74243.573, 74404.126, 74599.957), stdev = 163.815
  CI (99.9%): [73773.334, 75034.918] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 98.46% complete, ETA 00:02:17
# Fork: 1 of 1
# Warmup Iteration   1: 1064850.118 ns/op
# Warmup Iteration   2: 686931.286 ns/op
# Warmup Iteration   3: 676627.152 ns/op
# Warmup Iteration   4: 632050.233 ns/op
# Warmup Iteration   5: 610766.959 ns/op
Iteration   1: 611942.419 ns/op
Iteration   2: 612153.756 ns/op
Iteration   3: 612315.991 ns/op
Iteration   4: 617099.875 ns/op
Iteration   5: 610309.374 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  612764.283 ±(99.9%) 9831.046 ns/op [Average]
  (min, avg, max) = (610309.374, 612764.283, 617099.875), stdev = 2553.091
  CI (99.9%): [602933.237, 622595.329] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 98.72% complete, ETA 00:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 9586.883 ns/op
# Warmup Iteration   2: 4808.475 ns/op
# Warmup Iteration   3: 4562.538 ns/op
# Warmup Iteration   4: 4423.093 ns/op
# Warmup Iteration   5: 4379.935 ns/op
Iteration   1: 4362.440 ns/op
Iteration   2: 4355.504 ns/op
Iteration   3: 4359.050 ns/op
Iteration   4: 4354.506 ns/op
Iteration   5: 4364.852 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4359.270 ±(99.9%) 17.018 ns/op [Average]
  (min, avg, max) = (4354.506, 4359.270, 4364.852), stdev = 4.419
  CI (99.9%): [4342.253, 4376.288] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 98.97% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: 16682.122 ns/op
# Warmup Iteration   2: 8996.668 ns/op
# Warmup Iteration   3: 8168.817 ns/op
# Warmup Iteration   4: 8180.679 ns/op
# Warmup Iteration   5: 8187.485 ns/op
Iteration   1: 8170.683 ns/op
Iteration   2: 8615.132 ns/op
Iteration   3: 8177.843 ns/op
Iteration   4: 8212.333 ns/op
Iteration   5: 8197.904 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8274.779 ±(99.9%) 735.367 ns/op [Average]
  (min, avg, max) = (8170.683, 8274.779, 8615.132), stdev = 190.972
  CI (99.9%): [7539.412, 9010.146] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 99.23% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 37067.027 ns/op
# Warmup Iteration   2: 18792.873 ns/op
# Warmup Iteration   3: 17402.920 ns/op
# Warmup Iteration   4: 17243.410 ns/op
# Warmup Iteration   5: 17542.346 ns/op
Iteration   1: 17267.388 ns/op
Iteration   2: 17217.121 ns/op
Iteration   3: 17369.554 ns/op
Iteration   4: 17246.957 ns/op
Iteration   5: 17262.816 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  17272.767 ±(99.9%) 221.691 ns/op [Average]
  (min, avg, max) = (17217.121, 17272.767, 17369.554), stdev = 57.573
  CI (99.9%): [17051.076, 17494.459] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 99.49% complete, ETA 00:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 97437.536 ns/op
# Warmup Iteration   2: 47387.150 ns/op
# Warmup Iteration   3: 43066.151 ns/op
# Warmup Iteration   4: 43124.528 ns/op
# Warmup Iteration   5: 42857.504 ns/op
Iteration   1: 42881.556 ns/op
Iteration   2: 42768.048 ns/op
Iteration   3: 42932.779 ns/op
Iteration   4: 42984.891 ns/op
Iteration   5: 42882.625 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  42889.980 ±(99.9%) 309.446 ns/op [Average]
  (min, avg, max) = (42768.048, 42889.980, 42984.891), stdev = 80.362
  CI (99.9%): [42580.534, 43199.426] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 99.74% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 577538.618 ns/op
# Warmup Iteration   2: 339586.208 ns/op
# Warmup Iteration   3: 291085.199 ns/op
# Warmup Iteration   4: 291680.500 ns/op
# Warmup Iteration   5: 313463.611 ns/op
Iteration   1: 292731.697 ns/op
Iteration   2: 294617.461 ns/op
Iteration   3: 290672.924 ns/op
Iteration   4: 290973.887 ns/op
Iteration   5: 291042.825 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  292007.759 ±(99.9%) 6419.269 ns/op [Average]
  (min, avg, max) = (290672.924, 292007.759, 294617.461), stdev = 1667.064
  CI (99.9%): [285588.490, 298427.028] (assumes normal distribution)


# Run complete. Total time: 02:28:26

Benchmark                       (converterType)  (inputType)  Mode  Cnt         Score        Error  Units
EventBenchmark.both                        JSON         _1_K  avgt    5     29723.736 ±    639.928  ns/op
EventBenchmark.both                        JSON         _2_K  avgt    5     56909.390 ±  13101.937  ns/op
EventBenchmark.both                        JSON         _4_K  avgt    5    112299.774 ±   5706.271  ns/op
EventBenchmark.both                        JSON         _8_K  avgt    5    249231.946 ±   1459.028  ns/op
EventBenchmark.both                        JSON        _64_K  avgt    5   2226195.227 ±  23498.200  ns/op
EventBenchmark.both                        CBOR         _1_K  avgt    5     24722.890 ±    102.868  ns/op
EventBenchmark.both                        CBOR         _2_K  avgt    5     46320.395 ±    430.078  ns/op
EventBenchmark.both                        CBOR         _4_K  avgt    5     93169.283 ±   1770.082  ns/op
EventBenchmark.both                        CBOR         _8_K  avgt    5    200010.764 ±   7353.047  ns/op
EventBenchmark.both                        CBOR        _64_K  avgt    5   2056783.504 ±  35797.406  ns/op
EventBenchmark.both                       SMILE         _1_K  avgt    5     27489.264 ±    334.383  ns/op
EventBenchmark.both                       SMILE         _2_K  avgt    5     51555.279 ±   1864.156  ns/op
EventBenchmark.both                       SMILE         _4_K  avgt    5    106156.896 ±    812.462  ns/op
EventBenchmark.both                       SMILE         _8_K  avgt    5    227102.857 ±   4071.787  ns/op
EventBenchmark.both                       SMILE        _64_K  avgt    5   2214772.416 ±  23455.988  ns/op
EventBenchmark.both                    SCALA_PB         _1_K  avgt    5      8139.772 ±    198.769  ns/op
EventBenchmark.both                    SCALA_PB         _2_K  avgt    5     15583.075 ±    129.834  ns/op
EventBenchmark.both                    SCALA_PB         _4_K  avgt    5     30902.730 ±    831.211  ns/op
EventBenchmark.both                    SCALA_PB         _8_K  avgt    5     66447.936 ±    939.983  ns/op
EventBenchmark.both                    SCALA_PB        _64_K  avgt    5    641686.486 ±  13664.762  ns/op
EventBenchmark.both                     JAVA_PB         _1_K  avgt    5      7681.873 ±    381.768  ns/op
EventBenchmark.both                     JAVA_PB         _2_K  avgt    5     14771.021 ±    464.314  ns/op
EventBenchmark.both                     JAVA_PB         _4_K  avgt    5     27975.412 ±    402.125  ns/op
EventBenchmark.both                     JAVA_PB         _8_K  avgt    5     59384.081 ±   1041.057  ns/op
EventBenchmark.both                     JAVA_PB        _64_K  avgt    5    566676.885 ±  16478.024  ns/op
EventBenchmark.both                 JAVA_THRIFT         _1_K  avgt    5     10216.216 ±    434.100  ns/op
EventBenchmark.both                 JAVA_THRIFT         _2_K  avgt    5     19241.263 ±    636.544  ns/op
EventBenchmark.both                 JAVA_THRIFT         _4_K  avgt    5     38983.205 ±    159.675  ns/op
EventBenchmark.both                 JAVA_THRIFT         _8_K  avgt    5     86785.305 ±   1787.364  ns/op
EventBenchmark.both                 JAVA_THRIFT        _64_K  avgt    5    897704.239 ±   8653.099  ns/op
EventBenchmark.both                SERIALIZABLE         _1_K  avgt    5    141321.080 ±   7416.690  ns/op
EventBenchmark.both                SERIALIZABLE         _2_K  avgt    5    251019.108 ±   2326.213  ns/op
EventBenchmark.both                SERIALIZABLE         _4_K  avgt    5    603417.816 ±  15325.290  ns/op
EventBenchmark.both                SERIALIZABLE         _8_K  avgt    5   1435456.216 ±  14924.510  ns/op
EventBenchmark.both                SERIALIZABLE        _64_K  avgt    5  12413449.121 ±  82292.079  ns/op
EventBenchmark.both                   BOOPICKLE         _1_K  avgt    5      6907.782 ±    161.402  ns/op
EventBenchmark.both                   BOOPICKLE         _2_K  avgt    5     12924.818 ±    310.645  ns/op
EventBenchmark.both                   BOOPICKLE         _4_K  avgt    5     22759.222 ±    160.421  ns/op
EventBenchmark.both                   BOOPICKLE         _8_K  avgt    5     47269.293 ±    717.120  ns/op
EventBenchmark.both                   BOOPICKLE        _64_K  avgt    5    452354.678 ±  17361.225  ns/op
EventBenchmark.both                       CHILL         _1_K  avgt    5     64456.719 ±  10900.126  ns/op
EventBenchmark.both                       CHILL         _2_K  avgt    5    124075.001 ±   8966.442  ns/op
EventBenchmark.both                       CHILL         _4_K  avgt    5    256936.331 ±  30224.337  ns/op
EventBenchmark.both                       CHILL         _8_K  avgt    5    593039.600 ±  79246.399  ns/op
EventBenchmark.both                       CHILL        _64_K  avgt    5   5155026.544 ± 949144.033  ns/op
EventBenchmark.both                    JSONITER         _1_K  avgt    5     10809.444 ±    216.547  ns/op
EventBenchmark.both                    JSONITER         _2_K  avgt    5     18456.623 ±    156.427  ns/op
EventBenchmark.both                    JSONITER         _4_K  avgt    5     35466.354 ±    279.362  ns/op
EventBenchmark.both                    JSONITER         _8_K  avgt    5     76627.676 ±    897.596  ns/op
EventBenchmark.both                    JSONITER        _64_K  avgt    5    762026.279 ±   6044.779  ns/op
EventBenchmark.both                       CIRCE         _1_K  avgt    5    185811.544 ±   4528.069  ns/op
EventBenchmark.both                       CIRCE         _2_K  avgt    5    277855.214 ±   7468.620  ns/op
EventBenchmark.both                       CIRCE         _4_K  avgt    5    552061.647 ±  18103.448  ns/op
EventBenchmark.both                       CIRCE         _8_K  avgt    5   1286189.969 ±  86148.982  ns/op
EventBenchmark.both                       CIRCE        _64_K  avgt    5  12487450.985 ± 509419.294  ns/op
EventBenchmark.both                UPICKLE_JSON         _1_K  avgt    5     37449.682 ±    146.688  ns/op
EventBenchmark.both                UPICKLE_JSON         _2_K  avgt    5     73036.394 ±   1135.339  ns/op
EventBenchmark.both                UPICKLE_JSON         _4_K  avgt    5    157773.911 ±   2111.434  ns/op
EventBenchmark.both                UPICKLE_JSON         _8_K  avgt    5    348213.775 ±  11269.873  ns/op
EventBenchmark.both                UPICKLE_JSON        _64_K  avgt    5   4319008.846 ± 117279.131  ns/op
EventBenchmark.both             UPICKLE_MSGPACK         _1_K  avgt    5     23529.863 ±    212.985  ns/op
EventBenchmark.both             UPICKLE_MSGPACK         _2_K  avgt    5     44937.532 ±    423.262  ns/op
EventBenchmark.both             UPICKLE_MSGPACK         _4_K  avgt    5     90934.419 ±    694.596  ns/op
EventBenchmark.both             UPICKLE_MSGPACK         _8_K  avgt    5    217964.924 ±   7164.697  ns/op
EventBenchmark.both             UPICKLE_MSGPACK        _64_K  avgt    5   2022893.441 ±  94205.906  ns/op
EventBenchmark.deserialization             JSON         _1_K  avgt    5     14960.762 ±    123.048  ns/op
EventBenchmark.deserialization             JSON         _2_K  avgt    5     28591.560 ±    983.284  ns/op
EventBenchmark.deserialization             JSON         _4_K  avgt    5     60531.330 ±   1734.892  ns/op
EventBenchmark.deserialization             JSON         _8_K  avgt    5    130080.915 ±   1523.954  ns/op
EventBenchmark.deserialization             JSON        _64_K  avgt    5   1233841.789 ±  28363.808  ns/op
EventBenchmark.deserialization             CBOR         _1_K  avgt    5     14008.955 ±    277.446  ns/op
EventBenchmark.deserialization             CBOR         _2_K  avgt    5     26024.321 ±    800.546  ns/op
EventBenchmark.deserialization             CBOR         _4_K  avgt    5     53648.665 ±    734.294  ns/op
EventBenchmark.deserialization             CBOR         _8_K  avgt    5    115517.509 ±    518.937  ns/op
EventBenchmark.deserialization             CBOR        _64_K  avgt    5   1154182.333 ±   7972.140  ns/op
EventBenchmark.deserialization            SMILE         _1_K  avgt    5     14356.195 ±    167.669  ns/op
EventBenchmark.deserialization            SMILE         _2_K  avgt    5     27337.753 ±    308.852  ns/op
EventBenchmark.deserialization            SMILE         _4_K  avgt    5     55173.418 ±    958.207  ns/op
EventBenchmark.deserialization            SMILE         _8_K  avgt    5    119503.627 ±   2856.441  ns/op
EventBenchmark.deserialization            SMILE        _64_K  avgt    5   1123521.781 ±  43720.425  ns/op
EventBenchmark.deserialization         SCALA_PB         _1_K  avgt    5      5792.693 ±    134.807  ns/op
EventBenchmark.deserialization         SCALA_PB         _2_K  avgt    5     10560.254 ±    341.833  ns/op
EventBenchmark.deserialization         SCALA_PB         _4_K  avgt    5     20839.618 ±    171.349  ns/op
EventBenchmark.deserialization         SCALA_PB         _8_K  avgt    5     44348.921 ±    443.268  ns/op
EventBenchmark.deserialization         SCALA_PB        _64_K  avgt    5    446894.048 ±   7796.372  ns/op
EventBenchmark.deserialization          JAVA_PB         _1_K  avgt    5      3859.195 ±     71.940  ns/op
EventBenchmark.deserialization          JAVA_PB         _2_K  avgt    5      7641.359 ±    172.649  ns/op
EventBenchmark.deserialization          JAVA_PB         _4_K  avgt    5     14282.910 ±     62.159  ns/op
EventBenchmark.deserialization          JAVA_PB         _8_K  avgt    5     31428.560 ±    429.318  ns/op
EventBenchmark.deserialization          JAVA_PB        _64_K  avgt    5    284640.873 ±   6755.547  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _1_K  avgt    5      4821.977 ±     48.844  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _2_K  avgt    5      8610.256 ±     81.200  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _4_K  avgt    5     16811.171 ±    127.012  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _8_K  avgt    5     35190.115 ±    293.402  ns/op
EventBenchmark.deserialization      JAVA_THRIFT        _64_K  avgt    5    342669.462 ±  11528.113  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _1_K  avgt    5    113452.662 ±   8925.373  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _2_K  avgt    5    198862.190 ±   5799.767  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _4_K  avgt    5    478925.302 ±   3579.511  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _8_K  avgt    5   1171356.356 ±  24251.222  ns/op
EventBenchmark.deserialization     SERIALIZABLE        _64_K  avgt    5   9849188.208 ±  54605.649  ns/op
EventBenchmark.deserialization        BOOPICKLE         _1_K  avgt    5      2402.882 ±      6.291  ns/op
EventBenchmark.deserialization        BOOPICKLE         _2_K  avgt    5      4692.029 ±     65.650  ns/op
EventBenchmark.deserialization        BOOPICKLE         _4_K  avgt    5      9137.205 ±    185.401  ns/op
EventBenchmark.deserialization        BOOPICKLE         _8_K  avgt    5     17680.118 ±    245.038  ns/op
EventBenchmark.deserialization        BOOPICKLE        _64_K  avgt    5    197966.689 ±  20133.494  ns/op
EventBenchmark.deserialization            CHILL         _1_K  avgt    5     31090.430 ±   3344.846  ns/op
EventBenchmark.deserialization            CHILL         _2_K  avgt    5     66928.976 ±  12907.805  ns/op
EventBenchmark.deserialization            CHILL         _4_K  avgt    5    124401.564 ±  18294.283  ns/op
EventBenchmark.deserialization            CHILL         _8_K  avgt    5    295623.686 ±  59008.904  ns/op
EventBenchmark.deserialization            CHILL        _64_K  avgt    5   2755062.458 ± 960543.129  ns/op
EventBenchmark.deserialization         JSONITER         _1_K  avgt    5      5887.937 ±     60.162  ns/op
EventBenchmark.deserialization         JSONITER         _2_K  avgt    5     11297.916 ±    232.856  ns/op
EventBenchmark.deserialization         JSONITER         _4_K  avgt    5     24056.540 ±     69.039  ns/op
EventBenchmark.deserialization         JSONITER         _8_K  avgt    5     51857.686 ±    332.121  ns/op
EventBenchmark.deserialization         JSONITER        _64_K  avgt    5    497353.799 ±  10355.231  ns/op
EventBenchmark.deserialization            CIRCE         _1_K  avgt    5    144206.822 ±   3111.006  ns/op
EventBenchmark.deserialization            CIRCE         _2_K  avgt    5    206662.220 ±   7304.671  ns/op
EventBenchmark.deserialization            CIRCE         _4_K  avgt    5    399950.821 ±   9734.147  ns/op
EventBenchmark.deserialization            CIRCE         _8_K  avgt    5    947236.563 ±  27523.847  ns/op
EventBenchmark.deserialization            CIRCE        _64_K  avgt    5   9044256.569 ± 303481.595  ns/op
EventBenchmark.deserialization     UPICKLE_JSON         _1_K  avgt    5     18980.254 ±    501.103  ns/op
EventBenchmark.deserialization     UPICKLE_JSON         _2_K  avgt    5     36478.648 ±    233.951  ns/op
EventBenchmark.deserialization     UPICKLE_JSON         _4_K  avgt    5     80359.659 ±    660.444  ns/op
EventBenchmark.deserialization     UPICKLE_JSON         _8_K  avgt    5    186420.686 ±  10982.215  ns/op
EventBenchmark.deserialization     UPICKLE_JSON        _64_K  avgt    5   2110320.984 ±  60727.714  ns/op
EventBenchmark.deserialization  UPICKLE_MSGPACK         _1_K  avgt    5     10284.834 ±    199.162  ns/op
EventBenchmark.deserialization  UPICKLE_MSGPACK         _2_K  avgt    5     20625.812 ±    130.988  ns/op
EventBenchmark.deserialization  UPICKLE_MSGPACK         _4_K  avgt    5     47146.620 ±    532.292  ns/op
EventBenchmark.deserialization  UPICKLE_MSGPACK         _8_K  avgt    5    127790.037 ±   8085.581  ns/op
EventBenchmark.deserialization  UPICKLE_MSGPACK        _64_K  avgt    5   1167780.912 ±  33446.130  ns/op
EventBenchmark.serialization               JSON         _1_K  avgt    5     12064.688 ±    175.494  ns/op
EventBenchmark.serialization               JSON         _2_K  avgt    5     23529.149 ±    679.709  ns/op
EventBenchmark.serialization               JSON         _4_K  avgt    5     46703.758 ±    566.280  ns/op
EventBenchmark.serialization               JSON         _8_K  avgt    5     94376.034 ±   1261.931  ns/op
EventBenchmark.serialization               JSON        _64_K  avgt    5    863660.612 ±   8771.939  ns/op
EventBenchmark.serialization               CBOR         _1_K  avgt    5     11217.018 ±    248.159  ns/op
EventBenchmark.serialization               CBOR         _2_K  avgt    5     16890.514 ±    354.745  ns/op
EventBenchmark.serialization               CBOR         _4_K  avgt    5     32074.222 ±    212.729  ns/op
EventBenchmark.serialization               CBOR         _8_K  avgt    5     70191.807 ±    705.043  ns/op
EventBenchmark.serialization               CBOR        _64_K  avgt    5    748202.661 ±   4487.091  ns/op
EventBenchmark.serialization              SMILE         _1_K  avgt    5     11778.390 ±    488.777  ns/op
EventBenchmark.serialization              SMILE         _2_K  avgt    5     21532.022 ±   1541.648  ns/op
EventBenchmark.serialization              SMILE         _4_K  avgt    5     41450.778 ±    958.294  ns/op
EventBenchmark.serialization              SMILE         _8_K  avgt    5     97415.292 ±   2232.822  ns/op
EventBenchmark.serialization              SMILE        _64_K  avgt    5    834421.387 ±   6158.025  ns/op
EventBenchmark.serialization           SCALA_PB         _1_K  avgt    5      2542.316 ±     53.494  ns/op
EventBenchmark.serialization           SCALA_PB         _2_K  avgt    5      4999.679 ±     41.566  ns/op
EventBenchmark.serialization           SCALA_PB         _4_K  avgt    5      9809.451 ±     43.909  ns/op
EventBenchmark.serialization           SCALA_PB         _8_K  avgt    5     22844.468 ±    479.104  ns/op
EventBenchmark.serialization           SCALA_PB        _64_K  avgt    5    206203.958 ±   3389.549  ns/op
EventBenchmark.serialization            JAVA_PB         _1_K  avgt    5      3270.082 ±     60.646  ns/op
EventBenchmark.serialization            JAVA_PB         _2_K  avgt    5      6312.820 ±     61.073  ns/op
EventBenchmark.serialization            JAVA_PB         _4_K  avgt    5     12972.429 ±    107.809  ns/op
EventBenchmark.serialization            JAVA_PB         _8_K  avgt    5     26307.591 ±    213.897  ns/op
EventBenchmark.serialization            JAVA_PB        _64_K  avgt    5    274632.870 ±   6024.778  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _1_K  avgt    5      5175.202 ±     64.744  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _2_K  avgt    5     10047.897 ±    192.821  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _4_K  avgt    5     21230.479 ±    589.117  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _8_K  avgt    5     52294.066 ±    541.946  ns/op
EventBenchmark.serialization        JAVA_THRIFT        _64_K  avgt    5    435578.855 ±   9448.892  ns/op
EventBenchmark.serialization       SERIALIZABLE         _1_K  avgt    5     27635.046 ±    917.540  ns/op
EventBenchmark.serialization       SERIALIZABLE         _2_K  avgt    5     47824.002 ±   1123.164  ns/op
EventBenchmark.serialization       SERIALIZABLE         _4_K  avgt    5    102859.525 ±   1254.665  ns/op
EventBenchmark.serialization       SERIALIZABLE         _8_K  avgt    5    237571.612 ±   2121.051  ns/op
EventBenchmark.serialization       SERIALIZABLE        _64_K  avgt    5   2231959.146 ±  35743.924  ns/op
EventBenchmark.serialization          BOOPICKLE         _1_K  avgt    5      3779.794 ±     61.699  ns/op
EventBenchmark.serialization          BOOPICKLE         _2_K  avgt    5      6871.031 ±    103.515  ns/op
EventBenchmark.serialization          BOOPICKLE         _4_K  avgt    5     12976.211 ±    341.587  ns/op
EventBenchmark.serialization          BOOPICKLE         _8_K  avgt    5     25298.767 ±    213.496  ns/op
EventBenchmark.serialization          BOOPICKLE        _64_K  avgt    5    252311.063 ±   7716.427  ns/op
EventBenchmark.serialization              CHILL         _1_K  avgt    5     35540.168 ±  10460.765  ns/op
EventBenchmark.serialization              CHILL         _2_K  avgt    5     65293.339 ±  16065.426  ns/op
EventBenchmark.serialization              CHILL         _4_K  avgt    5    125698.813 ±  21555.045  ns/op
EventBenchmark.serialization              CHILL         _8_K  avgt    5    293283.126 ±  75314.916  ns/op
EventBenchmark.serialization              CHILL        _64_K  avgt    5   2528665.631 ± 324141.152  ns/op
EventBenchmark.serialization           JSONITER         _1_K  avgt    5      2762.163 ±     64.568  ns/op
EventBenchmark.serialization           JSONITER         _2_K  avgt    5      5239.494 ±     24.573  ns/op
EventBenchmark.serialization           JSONITER         _4_K  avgt    5      9470.859 ±     33.228  ns/op
EventBenchmark.serialization           JSONITER         _8_K  avgt    5     17843.140 ±   1113.251  ns/op
EventBenchmark.serialization           JSONITER        _64_K  avgt    5    258298.094 ±   1605.736  ns/op
EventBenchmark.serialization              CIRCE         _1_K  avgt    5     35885.771 ±    463.335  ns/op
EventBenchmark.serialization              CIRCE         _2_K  avgt    5     64611.153 ±   1334.317  ns/op
EventBenchmark.serialization              CIRCE         _4_K  avgt    5    131722.686 ±   2119.295  ns/op
EventBenchmark.serialization              CIRCE         _8_K  avgt    5    300670.347 ±   3881.293  ns/op
EventBenchmark.serialization              CIRCE        _64_K  avgt    5   2984356.146 ±  30079.184  ns/op
EventBenchmark.serialization       UPICKLE_JSON         _1_K  avgt    5     18835.846 ±    336.254  ns/op
EventBenchmark.serialization       UPICKLE_JSON         _2_K  avgt    5     37100.018 ±   1534.553  ns/op
EventBenchmark.serialization       UPICKLE_JSON         _4_K  avgt    5     75454.285 ±   2148.320  ns/op
EventBenchmark.serialization       UPICKLE_JSON         _8_K  avgt    5    180410.260 ±   3699.261  ns/op
EventBenchmark.serialization       UPICKLE_JSON        _64_K  avgt    5   1782408.503 ±   6143.542  ns/op
EventBenchmark.serialization    UPICKLE_MSGPACK         _1_K  avgt    5     10691.017 ±    151.503  ns/op
EventBenchmark.serialization    UPICKLE_MSGPACK         _2_K  avgt    5     15517.435 ±   1445.889  ns/op
EventBenchmark.serialization    UPICKLE_MSGPACK         _4_K  avgt    5     32379.564 ±   1079.215  ns/op
EventBenchmark.serialization    UPICKLE_MSGPACK         _8_K  avgt    5     83077.056 ±   2223.631  ns/op
EventBenchmark.serialization    UPICKLE_MSGPACK        _64_K  avgt    5   1023659.891 ±  24028.378  ns/op
SiteBenchmark.both                         JSON         _1_K  avgt    5     16610.853 ±    795.539  ns/op
SiteBenchmark.both                         JSON         _2_K  avgt    5     31150.985 ±    166.788  ns/op
SiteBenchmark.both                         JSON         _4_K  avgt    5     58086.630 ±    200.101  ns/op
SiteBenchmark.both                         JSON         _8_K  avgt    5    116211.834 ±   1024.912  ns/op
SiteBenchmark.both                         JSON        _64_K  avgt    5    843261.815 ±   4063.576  ns/op
SiteBenchmark.both                         CBOR         _1_K  avgt    5     13022.343 ±    516.960  ns/op
SiteBenchmark.both                         CBOR         _2_K  avgt    5     22174.714 ±    235.015  ns/op
SiteBenchmark.both                         CBOR         _4_K  avgt    5     42298.439 ±   1509.160  ns/op
SiteBenchmark.both                         CBOR         _8_K  avgt    5     82673.124 ±    243.019  ns/op
SiteBenchmark.both                         CBOR        _64_K  avgt    5    683547.628 ±   1194.725  ns/op
SiteBenchmark.both                        SMILE         _1_K  avgt    5     14446.435 ±    451.581  ns/op
SiteBenchmark.both                        SMILE         _2_K  avgt    5     24157.600 ±    488.428  ns/op
SiteBenchmark.both                        SMILE         _4_K  avgt    5     42979.862 ±    964.925  ns/op
SiteBenchmark.both                        SMILE         _8_K  avgt    5     80780.242 ±    417.434  ns/op
SiteBenchmark.both                        SMILE        _64_K  avgt    5    593334.576 ±   1310.459  ns/op
SiteBenchmark.both                     SCALA_PB         _1_K  avgt    5      5421.042 ±    174.145  ns/op
SiteBenchmark.both                     SCALA_PB         _2_K  avgt    5     10197.092 ±    153.932  ns/op
SiteBenchmark.both                     SCALA_PB         _4_K  avgt    5     18601.783 ±    104.352  ns/op
SiteBenchmark.both                     SCALA_PB         _8_K  avgt    5     34326.753 ±    648.842  ns/op
SiteBenchmark.both                     SCALA_PB        _64_K  avgt    5    280828.129 ±   9250.233  ns/op
SiteBenchmark.both                      JAVA_PB         _1_K  avgt    5      8910.634 ±    110.118  ns/op
SiteBenchmark.both                      JAVA_PB         _2_K  avgt    5     13992.584 ±    136.605  ns/op
SiteBenchmark.both                      JAVA_PB         _4_K  avgt    5     24774.679 ±    559.195  ns/op
SiteBenchmark.both                      JAVA_PB         _8_K  avgt    5     49255.349 ±    402.187  ns/op
SiteBenchmark.both                      JAVA_PB        _64_K  avgt    5    404569.484 ±  11344.537  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _1_K  avgt    5      8355.955 ±     49.525  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _2_K  avgt    5     15310.149 ±    141.671  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _4_K  avgt    5     27426.460 ±   1281.697  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _8_K  avgt    5     55484.778 ±    854.106  ns/op
SiteBenchmark.both                  JAVA_THRIFT        _64_K  avgt    5    417554.272 ±   3908.300  ns/op
SiteBenchmark.both                 SERIALIZABLE         _1_K  avgt    5    130745.443 ±   1246.092  ns/op
SiteBenchmark.both                 SERIALIZABLE         _2_K  avgt    5    181902.317 ±   1557.965  ns/op
SiteBenchmark.both                 SERIALIZABLE         _4_K  avgt    5    231688.220 ±   1314.073  ns/op
SiteBenchmark.both                 SERIALIZABLE         _8_K  avgt    5    351889.648 ±   6216.155  ns/op
SiteBenchmark.both                 SERIALIZABLE        _64_K  avgt    5   1988669.814 ±  29406.699  ns/op
SiteBenchmark.both                    BOOPICKLE         _1_K  avgt    5      5004.649 ±    133.034  ns/op
SiteBenchmark.both                    BOOPICKLE         _2_K  avgt    5      9069.966 ±    458.002  ns/op
SiteBenchmark.both                    BOOPICKLE         _4_K  avgt    5     15023.668 ±    536.862  ns/op
SiteBenchmark.both                    BOOPICKLE         _8_K  avgt    5     27037.391 ±   1013.540  ns/op
SiteBenchmark.both                    BOOPICKLE        _64_K  avgt    5    248610.554 ±   3778.154  ns/op
SiteBenchmark.both                        CHILL         _1_K  avgt    5     11412.420 ±   1427.578  ns/op
SiteBenchmark.both                        CHILL         _2_K  avgt    5     30715.640 ±   4203.662  ns/op
SiteBenchmark.both                        CHILL         _4_K  avgt    5     35625.471 ±    636.472  ns/op
SiteBenchmark.both                        CHILL         _8_K  avgt    5     64915.846 ±    210.894  ns/op
SiteBenchmark.both                        CHILL        _64_K  avgt    5    783173.985 ±  12192.761  ns/op
SiteBenchmark.both                     JSONITER         _1_K  avgt    5      6334.695 ±    333.168  ns/op
SiteBenchmark.both                     JSONITER         _2_K  avgt    5     13184.986 ±    108.422  ns/op
SiteBenchmark.both                     JSONITER         _4_K  avgt    5     23980.938 ±    288.989  ns/op
SiteBenchmark.both                     JSONITER         _8_K  avgt    5     43736.992 ±     93.050  ns/op
SiteBenchmark.both                     JSONITER        _64_K  avgt    5    376506.120 ±   4643.812  ns/op
SiteBenchmark.both                        CIRCE         _1_K  avgt    5     44855.402 ±    622.457  ns/op
SiteBenchmark.both                        CIRCE         _2_K  avgt    5     80700.046 ±   1683.305  ns/op
SiteBenchmark.both                        CIRCE         _4_K  avgt    5    180074.918 ±   1953.554  ns/op
SiteBenchmark.both                        CIRCE         _8_K  avgt    5    400997.375 ±   4687.168  ns/op
SiteBenchmark.both                        CIRCE        _64_K  avgt    5   3298569.821 ± 142122.558  ns/op
SiteBenchmark.both                 UPICKLE_JSON         _1_K  avgt    5     24879.675 ±    181.594  ns/op
SiteBenchmark.both                 UPICKLE_JSON         _2_K  avgt    5     48535.259 ±   1209.740  ns/op
SiteBenchmark.both                 UPICKLE_JSON         _4_K  avgt    5    103231.700 ±    764.004  ns/op
SiteBenchmark.both                 UPICKLE_JSON         _8_K  avgt    5    224362.035 ±   8810.924  ns/op
SiteBenchmark.both                 UPICKLE_JSON        _64_K  avgt    5   1772202.440 ±  37882.086  ns/op
SiteBenchmark.both              UPICKLE_MSGPACK         _1_K  avgt    5     13268.760 ±    241.046  ns/op
SiteBenchmark.both              UPICKLE_MSGPACK         _2_K  avgt    5     26012.652 ±    761.049  ns/op
SiteBenchmark.both              UPICKLE_MSGPACK         _4_K  avgt    5     55091.679 ±   1881.083  ns/op
SiteBenchmark.both              UPICKLE_MSGPACK         _8_K  avgt    5    128927.285 ±   1113.666  ns/op
SiteBenchmark.both              UPICKLE_MSGPACK        _64_K  avgt    5    964486.216 ±  39068.483  ns/op
SiteBenchmark.deserialization              JSON         _1_K  avgt    5      9585.697 ±     41.847  ns/op
SiteBenchmark.deserialization              JSON         _2_K  avgt    5     17396.595 ±    469.342  ns/op
SiteBenchmark.deserialization              JSON         _4_K  avgt    5     33244.730 ±   1781.710  ns/op
SiteBenchmark.deserialization              JSON         _8_K  avgt    5     68789.331 ±   1328.127  ns/op
SiteBenchmark.deserialization              JSON        _64_K  avgt    5    508295.267 ±   1197.103  ns/op
SiteBenchmark.deserialization              CBOR         _1_K  avgt    5      8040.477 ±     78.214  ns/op
SiteBenchmark.deserialization              CBOR         _2_K  avgt    5     14554.481 ±    133.152  ns/op
SiteBenchmark.deserialization              CBOR         _4_K  avgt    5     25751.544 ±    188.441  ns/op
SiteBenchmark.deserialization              CBOR         _8_K  avgt    5     54828.826 ±    431.386  ns/op
SiteBenchmark.deserialization              CBOR        _64_K  avgt    5    435934.374 ±   8499.387  ns/op
SiteBenchmark.deserialization             SMILE         _1_K  avgt    5      8622.633 ±    119.596  ns/op
SiteBenchmark.deserialization             SMILE         _2_K  avgt    5     14407.919 ±    170.378  ns/op
SiteBenchmark.deserialization             SMILE         _4_K  avgt    5     25370.442 ±    168.973  ns/op
SiteBenchmark.deserialization             SMILE         _8_K  avgt    5     48849.557 ±    556.314  ns/op
SiteBenchmark.deserialization             SMILE        _64_K  avgt    5    371273.464 ±   2675.173  ns/op
SiteBenchmark.deserialization          SCALA_PB         _1_K  avgt    5      2882.194 ±     26.735  ns/op
SiteBenchmark.deserialization          SCALA_PB         _2_K  avgt    5      5448.877 ±     77.668  ns/op
SiteBenchmark.deserialization          SCALA_PB         _4_K  avgt    5     10174.421 ±    283.547  ns/op
SiteBenchmark.deserialization          SCALA_PB         _8_K  avgt    5     18560.358 ±    656.918  ns/op
SiteBenchmark.deserialization          SCALA_PB        _64_K  avgt    5    153293.566 ±   3252.727  ns/op
SiteBenchmark.deserialization           JAVA_PB         _1_K  avgt    5      4461.412 ±     48.263  ns/op
SiteBenchmark.deserialization           JAVA_PB         _2_K  avgt    5      8295.326 ±     34.866  ns/op
SiteBenchmark.deserialization           JAVA_PB         _4_K  avgt    5     14094.628 ±     59.776  ns/op
SiteBenchmark.deserialization           JAVA_PB         _8_K  avgt    5     28027.004 ±    678.883  ns/op
SiteBenchmark.deserialization           JAVA_PB        _64_K  avgt    5    227083.708 ±   6048.893  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _1_K  avgt    5      4201.056 ±     47.864  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _2_K  avgt    5      7363.487 ±     48.601  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _4_K  avgt    5     13293.009 ±    228.969  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _8_K  avgt    5     25560.388 ±    353.033  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT        _64_K  avgt    5    246090.340 ±   5700.603  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _1_K  avgt    5    100486.874 ±    693.958  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _2_K  avgt    5    134042.332 ±   7465.175  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _4_K  avgt    5    162574.151 ±   1900.334  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _8_K  avgt    5    210077.675 ±   1633.579  ns/op
SiteBenchmark.deserialization      SERIALIZABLE        _64_K  avgt    5    904246.530 ±   5753.592  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _1_K  avgt    5      2057.599 ±     26.080  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _2_K  avgt    5      3945.854 ±     58.016  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _4_K  avgt    5      7332.244 ±    232.072  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _8_K  avgt    5     13218.213 ±    299.352  ns/op
SiteBenchmark.deserialization         BOOPICKLE        _64_K  avgt    5    123252.039 ±   3512.748  ns/op
SiteBenchmark.deserialization             CHILL         _1_K  avgt    5      5865.007 ±    244.447  ns/op
SiteBenchmark.deserialization             CHILL         _2_K  avgt    5      9884.625 ±    115.885  ns/op
SiteBenchmark.deserialization             CHILL         _4_K  avgt    5     17533.819 ±    315.831  ns/op
SiteBenchmark.deserialization             CHILL         _8_K  avgt    5     68701.508 ±   2272.877  ns/op
SiteBenchmark.deserialization             CHILL        _64_K  avgt    5    270850.842 ±   5735.247  ns/op
SiteBenchmark.deserialization          JSONITER         _1_K  avgt    5      4125.557 ±    104.688  ns/op
SiteBenchmark.deserialization          JSONITER         _2_K  avgt    5      8361.354 ±    207.281  ns/op
SiteBenchmark.deserialization          JSONITER         _4_K  avgt    5     16400.321 ±    211.471  ns/op
SiteBenchmark.deserialization          JSONITER         _8_K  avgt    5     29834.551 ±    257.294  ns/op
SiteBenchmark.deserialization          JSONITER        _64_K  avgt    5    243162.263 ±   3198.155  ns/op
SiteBenchmark.deserialization             CIRCE         _1_K  avgt    5     23597.147 ±   1140.824  ns/op
SiteBenchmark.deserialization             CIRCE         _2_K  avgt    5     42480.108 ±    637.108  ns/op
SiteBenchmark.deserialization             CIRCE         _4_K  avgt    5     95253.850 ±   1885.241  ns/op
SiteBenchmark.deserialization             CIRCE         _8_K  avgt    5    222746.319 ±   2416.664  ns/op
SiteBenchmark.deserialization             CIRCE        _64_K  avgt    5   1717241.071 ±  72535.596  ns/op
SiteBenchmark.deserialization      UPICKLE_JSON         _1_K  avgt    5     15565.844 ±     85.483  ns/op
SiteBenchmark.deserialization      UPICKLE_JSON         _2_K  avgt    5     29489.529 ±    439.376  ns/op
SiteBenchmark.deserialization      UPICKLE_JSON         _4_K  avgt    5     64048.207 ±   2253.301  ns/op
SiteBenchmark.deserialization      UPICKLE_JSON         _8_K  avgt    5    140946.703 ±   1136.785  ns/op
SiteBenchmark.deserialization      UPICKLE_JSON        _64_K  avgt    5   1145037.868 ±  74291.325  ns/op
SiteBenchmark.deserialization   UPICKLE_MSGPACK         _1_K  avgt    5      8253.787 ±     79.893  ns/op
SiteBenchmark.deserialization   UPICKLE_MSGPACK         _2_K  avgt    5     15618.940 ±    404.780  ns/op
SiteBenchmark.deserialization   UPICKLE_MSGPACK         _4_K  avgt    5     36246.611 ±   1125.318  ns/op
SiteBenchmark.deserialization   UPICKLE_MSGPACK         _8_K  avgt    5     78306.747 ±    452.277  ns/op
SiteBenchmark.deserialization   UPICKLE_MSGPACK        _64_K  avgt    5    636109.683 ±  29580.453  ns/op
SiteBenchmark.serialization                JSON         _1_K  avgt    5      5982.667 ±    133.183  ns/op
SiteBenchmark.serialization                JSON         _2_K  avgt    5     12790.214 ±    170.517  ns/op
SiteBenchmark.serialization                JSON         _4_K  avgt    5     23074.428 ±    278.332  ns/op
SiteBenchmark.serialization                JSON         _8_K  avgt    5     43557.412 ±    289.633  ns/op
SiteBenchmark.serialization                JSON        _64_K  avgt    5    308555.321 ±   2710.838  ns/op
SiteBenchmark.serialization                CBOR         _1_K  avgt    5      3734.538 ±     54.037  ns/op
SiteBenchmark.serialization                CBOR         _2_K  avgt    5      7159.209 ±    125.080  ns/op
SiteBenchmark.serialization                CBOR         _4_K  avgt    5     14228.131 ±    293.594  ns/op
SiteBenchmark.serialization                CBOR         _8_K  avgt    5     29124.194 ±    810.526  ns/op
SiteBenchmark.serialization                CBOR        _64_K  avgt    5    244605.871 ±   2427.013  ns/op
SiteBenchmark.serialization               SMILE         _1_K  avgt    5      4861.460 ±     31.414  ns/op
SiteBenchmark.serialization               SMILE         _2_K  avgt    5      8528.603 ±     37.727  ns/op
SiteBenchmark.serialization               SMILE         _4_K  avgt    5     16081.779 ±    543.717  ns/op
SiteBenchmark.serialization               SMILE         _8_K  avgt    5     29903.908 ±    404.157  ns/op
SiteBenchmark.serialization               SMILE        _64_K  avgt    5    221686.791 ±   2296.483  ns/op
SiteBenchmark.serialization            SCALA_PB         _1_K  avgt    5      1989.787 ±     50.743  ns/op
SiteBenchmark.serialization            SCALA_PB         _2_K  avgt    5      4202.050 ±     60.366  ns/op
SiteBenchmark.serialization            SCALA_PB         _4_K  avgt    5      8841.632 ±    152.202  ns/op
SiteBenchmark.serialization            SCALA_PB         _8_K  avgt    5     15751.389 ±    147.270  ns/op
SiteBenchmark.serialization            SCALA_PB        _64_K  avgt    5    132479.877 ±   1908.338  ns/op
SiteBenchmark.serialization             JAVA_PB         _1_K  avgt    5      3136.471 ±     36.847  ns/op
SiteBenchmark.serialization             JAVA_PB         _2_K  avgt    5      5615.618 ±     52.627  ns/op
SiteBenchmark.serialization             JAVA_PB         _4_K  avgt    5      9240.776 ±    118.746  ns/op
SiteBenchmark.serialization             JAVA_PB         _8_K  avgt    5     19384.546 ±    879.404  ns/op
SiteBenchmark.serialization             JAVA_PB        _64_K  avgt    5    170834.167 ±   9367.284  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _1_K  avgt    5      3221.532 ±    151.732  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _2_K  avgt    5      7668.270 ±     36.581  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _4_K  avgt    5     15320.776 ±     74.791  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _8_K  avgt    5     22753.673 ±     82.170  ns/op
SiteBenchmark.serialization         JAVA_THRIFT        _64_K  avgt    5    209328.226 ±   2459.357  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _1_K  avgt    5     28276.432 ±    409.396  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _2_K  avgt    5     41120.938 ±    178.486  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _4_K  avgt    5     61108.169 ±   1185.996  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _8_K  avgt    5    126099.352 ±   3306.707  ns/op
SiteBenchmark.serialization        SERIALIZABLE        _64_K  avgt    5   1004170.538 ±  12071.407  ns/op
SiteBenchmark.serialization           BOOPICKLE         _1_K  avgt    5      2451.163 ±     24.876  ns/op
SiteBenchmark.serialization           BOOPICKLE         _2_K  avgt    5      3911.892 ±     81.048  ns/op
SiteBenchmark.serialization           BOOPICKLE         _4_K  avgt    5      6712.381 ±     60.305  ns/op
SiteBenchmark.serialization           BOOPICKLE         _8_K  avgt    5     12801.058 ±    249.296  ns/op
SiteBenchmark.serialization           BOOPICKLE        _64_K  avgt    5    120644.816 ±   1846.701  ns/op
SiteBenchmark.serialization               CHILL         _1_K  avgt    5      6196.655 ±    626.056  ns/op
SiteBenchmark.serialization               CHILL         _2_K  avgt    5      9538.599 ±    614.027  ns/op
SiteBenchmark.serialization               CHILL         _4_K  avgt    5     18089.010 ±   1277.250  ns/op
SiteBenchmark.serialization               CHILL         _8_K  avgt    5     35287.537 ±   4053.161  ns/op
SiteBenchmark.serialization               CHILL        _64_K  avgt    5    512604.204 ±   5505.391  ns/op
SiteBenchmark.serialization            JSONITER         _1_K  avgt    5      1976.895 ±     43.175  ns/op
SiteBenchmark.serialization            JSONITER         _2_K  avgt    5      5108.024 ±    263.117  ns/op
SiteBenchmark.serialization            JSONITER         _4_K  avgt    5      7788.239 ±     41.446  ns/op
SiteBenchmark.serialization            JSONITER         _8_K  avgt    5     14247.466 ±    410.638  ns/op
SiteBenchmark.serialization            JSONITER        _64_K  avgt    5    131737.829 ±    993.982  ns/op
SiteBenchmark.serialization               CIRCE         _1_K  avgt    5     18740.591 ±    474.330  ns/op
SiteBenchmark.serialization               CIRCE         _2_K  avgt    5     35381.444 ±    358.732  ns/op
SiteBenchmark.serialization               CIRCE         _4_K  avgt    5     79618.578 ±   1686.848  ns/op
SiteBenchmark.serialization               CIRCE         _8_K  avgt    5    177541.602 ±   1219.994  ns/op
SiteBenchmark.serialization               CIRCE        _64_K  avgt    5   1555801.100 ±  65603.201  ns/op
SiteBenchmark.serialization        UPICKLE_JSON         _1_K  avgt    5      8886.516 ±     96.173  ns/op
SiteBenchmark.serialization        UPICKLE_JSON         _2_K  avgt    5     16890.220 ±    148.876  ns/op
SiteBenchmark.serialization        UPICKLE_JSON         _4_K  avgt    5     36461.770 ±    346.848  ns/op
SiteBenchmark.serialization        UPICKLE_JSON         _8_K  avgt    5     74404.126 ±    630.792  ns/op
SiteBenchmark.serialization        UPICKLE_JSON        _64_K  avgt    5    612764.283 ±   9831.046  ns/op
SiteBenchmark.serialization     UPICKLE_MSGPACK         _1_K  avgt    5      4359.270 ±     17.018  ns/op
SiteBenchmark.serialization     UPICKLE_MSGPACK         _2_K  avgt    5      8274.779 ±    735.367  ns/op
SiteBenchmark.serialization     UPICKLE_MSGPACK         _4_K  avgt    5     17272.767 ±    221.691  ns/op
SiteBenchmark.serialization     UPICKLE_MSGPACK         _8_K  avgt    5     42889.980 ±    309.446  ns/op
SiteBenchmark.serialization     UPICKLE_MSGPACK        _64_K  avgt    5    292007.759 ±   6419.269  ns/op

Benchmark result is saved to /static/data/charts/scala-serialization-2022/jdk11.json
