{"version":3,"file":"component---src-templates-what-i-read-index-js-793e6d579e75c7150e17.js","mappings":"wMAAA,EAAe,IAA0B,oDCQnCA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAgBH,OAhBGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UAQJC,OAAA,WACE,IAAOC,EAAUC,KAAKC,MAAfF,OAEP,OACE,sBAAIG,UAAU,eACXH,EAAOI,KAAI,SAAAC,GAAK,OAAI,sBAAIC,IAAKD,EAAMA,OAAO,gBAAC,EAAAE,KAAD,CAAMC,GAAIH,EAAMI,MAAOJ,EAAMA,aAG7E,EAhBGP,CAAkBY,EAAAA,WAoBHC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,IAAAA,IAAAA,EAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAqBlB,OArBkBA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,MAkBnBC,cAAgB,SAACC,EAAOC,GACtBD,EAAME,iBACND,EAAKE,MAAQF,EAAKE,MACnB,EALA,OAhBkBL,EAAAA,EAAAA,GAAAA,EAAAA,GAqBlB,YApBDZ,OAAA,WACE,MAAsCE,KAAKC,MAApCY,EAAP,EAAOA,KAAoBd,EAA3B,EAAaiB,YAAcjB,OAC3B,EAAkDc,EAA3CI,eAAiBC,EAAxB,EAAwBA,KAAed,EAAvC,EAA8Be,OAASf,MAEvC,OACE,gBAAC,KAAD,CAAQgB,SAAUpB,KAAKC,MAAMmB,SAAUC,UAAWC,GAChD,gBAAC,KAAD,CAAKC,MAAK,kBAAoBnB,IAC9B,4CAAoBA,GACpB,+EAGA,gBAAC,KAAD,CAAUc,KAAMA,IAChB,gBAACrB,EAAD,CAAWE,OAAQA,MAGxB,EAhBkBW,CAAsBD,EAAAA","sources":["webpack://komanov.com/./src/templates/what-i-read/cover.jpg","webpack://komanov.com/./src/templates/what-i-read/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/cover-5b2ef2388d4cc2ec8edf131f79dd1a6e.jpg\";","import {graphql, Link} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Layout, Markdown, Seo} from '../../components';\nimport '../../components/fragments';\nimport cover from './cover.jpg';\nimport './WhatIRead.css';\n\nclass MonthList extends React.Component {\n  static propTypes = {\n    months: PropTypes.shape({\n      path: PropTypes.string.isRequired,\n      month: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n\n  render() {\n    const {months} = this.props;\n\n    return (\n      <ul className=\"what-i-read\">\n        {months.map(month => <li key={month.month}><Link to={month.path}>{month.month}</Link></li>)}\n      </ul>\n    );\n  }\n}\n\n\nexport default class WhatIReadPage extends React.Component {\n  render() {\n    const {data, pageContext: {months}} = this.props;\n    const {markdownRemark: {html, fields: {month}}} = data;\n\n    return (\n      <Layout location={this.props.location} teaserUrl={cover}>\n        <Seo title={`What I Read on ${month}`}/>\n        <h1>What I Read on {month}</h1>\n        <p>\n          A log of what I've read/watched with short review.\n        </p>\n        <Markdown html={html}/>\n        <MonthList months={months}/>\n      </Layout>\n    );\n  }\n\n  handleOnClick = (event, data) => {\n    event.preventDefault();\n    data.hide = !data.hide;\n  };\n}\n\nexport const pageQuery = graphql`\n    query IReadQuery($id: String!) {\n        markdownRemark(id: {eq: $id}) {\n            html\n            fields {\n                month(formatString: \"MMMM, YYYY\")\n            }\n        }\n    }\n`;\n"],"names":["MonthList","render","months","this","props","className","map","month","key","Link","to","path","React","WhatIReadPage","handleOnClick","event","data","preventDefault","hide","pageContext","markdownRemark","html","fields","location","teaserUrl","cover","title"],"sourceRoot":""}