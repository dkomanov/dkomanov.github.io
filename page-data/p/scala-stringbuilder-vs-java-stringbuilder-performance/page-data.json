{"componentChunkName":"component---src-templates-blog-post-js","path":"/p/scala-stringbuilder-vs-java-stringbuilder-performance/","webpackCompilationHash":"2f610b1d6e771641b014","result":{"data":{"markdownRemark":{"id":"781cea7b-7145-5934-b58b-b7d4ea306f48","excerpt":"Yet another post about performance and microbenchmarks. Yes, I know. Very small JMH benchmark: And the result: Wow. Apparently, JVM doesn’t do some optimization…","html":"<p>Yet another post about performance and microbenchmarks. Yes, I <a href=\"http://wiki.jvmlangsummit.com/images/1/1d/PerformanceAnxiety2010.pdf\">know</a>.</p>\n<p>Very small JMH benchmark:</p>\n<div class=\"gatsby-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token annotation punctuation\">@BenchmarkMode</span><span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">(</span>Mode<span class=\"token punctuation\">.</span>AverageTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@OutputTimeUnit</span><span class=\"token punctuation\">(</span>TimeUnit<span class=\"token punctuation\">.</span>NANOSECONDS<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Fork</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> jvmArgs <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">(</span><span class=\"token string\">\"-Xmx2G\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Measurement</span><span class=\"token punctuation\">(</span>iterations <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> time <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> timeUnit <span class=\"token operator\">=</span> TimeUnit<span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Warmup</span><span class=\"token punctuation\">(</span>iterations <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> time <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> timeUnit <span class=\"token operator\">=</span> TimeUnit<span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> StringBuilderBenchmark <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@Benchmark</span>\n  <span class=\"token keyword\">def</span> javaStringBuilder<span class=\"token operator\">:</span> <span class=\"token builtin\">String</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>StringBuilder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"def\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>toString\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@Benchmark</span>\n  <span class=\"token keyword\">def</span> javaStringBuilder2<span class=\"token operator\">:</span> <span class=\"token builtin\">String</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>StringBuilder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">495</span><span class=\"token operator\">-</span>char<span class=\"token operator\">-</span>length<span class=\"token operator\">-</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">495</span><span class=\"token operator\">-</span>char<span class=\"token operator\">-</span>length<span class=\"token operator\">-</span>string<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>toString\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@Benchmark</span>\n  <span class=\"token keyword\">def</span> scalaStringBuilder<span class=\"token operator\">:</span> <span class=\"token builtin\">String</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> scala<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span>mutable<span class=\"token punctuation\">.</span>StringBuilder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"def\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>toString\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@Benchmark</span>\n  <span class=\"token keyword\">def</span> scalaStringBuilder<span class=\"token operator\">:</span> <span class=\"token builtin\">String</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> scala<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span>mutable<span class=\"token punctuation\">.</span>StringBuilder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">495</span><span class=\"token operator\">-</span>char<span class=\"token operator\">-</span>length<span class=\"token operator\">-</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">495</span><span class=\"token operator\">-</span>char<span class=\"token operator\">-</span>length<span class=\"token operator\">-</span>string<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>toString\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And the result:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Benchmark            Mode  Cnt    Score   Error  Units\njavaStringBuilder    avgt   14    8.754 ± 0.465  ns/op\njavaStringBuilder2   avgt   14  237.280 ± 0.828  ns/op\nscalaStringBuilder   avgt   14   27.299 ± 0.096  ns/op\nscalaStringBuilder2  avgt   14  720.742 ± 3.528  ns/op</code></pre></div>\n<p>Wow. Apparently, JVM doesn’t do some optimization over wrapped StringBuilder.\nI’ve noticed this performance degradation on a more complex test, so, I don’t\nthink it’s just about “microbenchmarking is evil”.</p>\n<p>The saddest part, that Scala developers “suffer” just to have StringBuilder\nas a <a href=\"https://github.com/scala/scala/blob/2.12.x/src/library/scala/collection/mutable/StringBuilder.scala\">collection</a>.\nBut do we really need collection features from it? I doubt it.</p>\n<p>Source code is on <a href=\"https://github.com/dkomanov/scala-string-format\">GitHub</a>.</p>\n<p>Originally posted on <a href=\"https://medium.com/@dkomanov/scala-stringbuilder-vs-java-stringbuilder-performance-3167a96abfc2\">Medium</a>.</p>","fields":{"slug":"/p/scala-stringbuilder-vs-java-stringbuilder-performance/"},"frontmatter":{"rawDate":"2016-12-03T00:00:00.000Z","date":"December 03, 2016","title":"Scala StringBuilder vs Java StringBuilder Performance","description":"O_O performance benchmark of StringBuilder wrapper in Scala...","tags":["scala","java","benchmark","performance","common-sense"],"canonicalUrl":"https://medium.com/@dkomanov/scala-stringbuilder-vs-java-stringbuilder-performance-3167a96abfc2","cover":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/p/scala-stringbuilder-vs-java-stringbuilder-performance/","previous":{"fields":{"slug":"/p/scala-serialization-updated/"}},"next":{"fields":{"slug":"/p/scala-string-interpolation-performance/"}}}}}