{"version":3,"file":"component---src-templates-what-i-listen-single-episode-tsx-c14377bb76c9f41543d9.js","mappings":"yMAuCA,UAxB0B,SAAC,GAGI,IAF7BA,EAE4B,EAF5BA,SACeC,EACa,EAD5BC,YAAeD,KAETE,GAAUC,EAAAA,EAAAA,GAA8BH,GACtCI,EAASJ,EAATI,KACFC,GAAKC,EAAAA,EAAAA,KACLC,EAAOC,IAAON,EAAQK,MAAME,OAAO,gBAEzC,OACEC,EAAAA,cAACC,EAAAA,GAAD,CAAQZ,SAAUA,EAAUa,UAAWC,EAAAA,GACrCH,EAAAA,cAACI,EAAAA,GAAD,CACEC,MAAUb,EAAQa,MAAb,iCAAmDV,EAAGW,OAC3DC,YAAW,8BAAgCZ,EAAGW,OAAnC,kBAA2Dd,EAAQa,MAAnE,kBAA0FR,EAA1F,MAEbG,EAAAA,cAACQ,EAAAA,GAAD,CAAahB,QAASA,IACtBQ,EAAAA,cAACS,EAAAA,GAAD,CAAUf,KAAMA,IAChBM,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAACU,EAAAA,KAAD,CAAMC,GAAG,kBAAT,kBADF,KAjBN,C,qECFO,SAASlB,EACdH,GAEA,MAAO,CACLsB,KAAMtB,EAAKuB,OAAOD,KAClBf,KAAMP,EAAKwB,YAAYjB,KACvBQ,MAAOf,EAAKwB,YAAYT,MACxBU,YAAazB,EAAKwB,YAAYC,YAC9BC,IAAK1B,EAAKwB,YAAYE,IACtBC,QAAQC,EAAAA,EAAAA,GAAS5B,EAAKwB,YAAYG,QAClCE,KAAM7B,EAAKwB,YAAYK,MAAQ,GAC/BC,MAAO9B,EAAKwB,YAAYM,MAE3B,C,uBC1BD,IAAe,IAA0B,mD","sources":["webpack://komanov.com/./src/templates/what-i-listen/single-episode.tsx","webpack://komanov.com/./src/util/gql.ts","webpack://komanov.com/./src/templates/what-i-listen/cover.jpg"],"sourcesContent":["import { Link } from 'gatsby';\nimport moment from 'moment';\nimport React from 'react';\nimport { EpisodeCard, Layout, Markdown, Seo } from '../../components';\nimport { listenedPodcastEpisodeFromGql } from '../../util/gql';\nimport { useSiteMetadata } from '../../util/useSiteMetadata';\nimport cover from './cover.jpg';\n\ninterface SingleEpisodePageProps {\n  location: any;\n  pageContext: {\n    node: any;\n  };\n}\n\nconst SingleEpisodePage = ({\n  location,\n  pageContext: { node },\n}: SingleEpisodePageProps) => {\n  const episode = listenedPodcastEpisodeFromGql(node);\n  const { html } = node;\n  const md = useSiteMetadata();\n  const date = moment(episode.date).format('D MMMM, YYYY');\n\n  return (\n    <Layout location={location} teaserUrl={cover}>\n      <Seo\n        title={`${episode.title} - Short Review/Impression by ${md.author}`}\n        description={`Short Review/Impression by ${md.author} of a podcast '${episode.title}', listened on ${date}.`}\n      />\n      <EpisodeCard episode={episode} />\n      <Markdown html={html} />\n      <p>\n        <Link to=\"/what-i-listen\">&larr; Back to list</Link>.\n      </p>\n    </Layout>\n  );\n};\n\nexport default SingleEpisodePage;\n","import { getImage } from 'gatsby-plugin-image';\n\nexport interface ListenedPodcastEpisode {\n  slug: string;\n  title: string;\n  date: Date;\n  podcastDate: Date;\n  url: string;\n  teaser?: any;\n  tags: string[];\n  draft: boolean;\n}\n\nexport function listenedPodcastEpisodeFromGql(\n  node: any\n): ListenedPodcastEpisode {\n  return {\n    slug: node.fields.slug,\n    date: node.frontmatter.date,\n    title: node.frontmatter.title,\n    podcastDate: node.frontmatter.podcastDate,\n    url: node.frontmatter.url,\n    teaser: getImage(node.frontmatter.teaser),\n    tags: node.frontmatter.tags || [],\n    draft: node.frontmatter.draft,\n  };\n}\n","export default __webpack_public_path__ + \"static/cover-d399302c760767e2db4e9060f08e0b10.jpg\";"],"names":["location","node","pageContext","episode","listenedPodcastEpisodeFromGql","html","md","useSiteMetadata","date","moment","format","React","Layout","teaserUrl","cover","Seo","title","author","description","EpisodeCard","Markdown","Link","to","slug","fields","frontmatter","podcastDate","url","teaser","getImage","tags","draft"],"sourceRoot":""}