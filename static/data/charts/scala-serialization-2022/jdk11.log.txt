# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 0.00% complete, ETA 01:16:30
# Fork: 1 of 1
# Warmup Iteration   1: 167162.827 ns/op
# Warmup Iteration   2: 33504.027 ns/op
# Warmup Iteration   3: 31508.729 ns/op
# Warmup Iteration   4: 29425.616 ns/op
Iteration   1: 29358.905 ns/op
Iteration   2: 29593.588 ns/op
Iteration   3: 29438.259 ns/op
Iteration   4: 29366.349 ns/op
Iteration   5: 30109.057 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  29573.232 ±(99.9%) 1209.245 ns/op [Average]
  (min, avg, max) = (29358.905, 29573.232, 30109.057), stdev = 314.037
  CI (99.9%): [28363.986, 30782.477] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 0.20% complete, ETA 01:41:55
# Fork: 1 of 1
# Warmup Iteration   1: 523862.661 ns/op
# Warmup Iteration   2: 91783.429 ns/op
# Warmup Iteration   3: 60924.488 ns/op
# Warmup Iteration   4: 57137.744 ns/op
Iteration   1: 56930.519 ns/op
Iteration   2: 56746.933 ns/op
Iteration   3: 56935.340 ns/op
Iteration   4: 57037.433 ns/op
Iteration   5: 56717.802 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  56873.605 ±(99.9%) 524.489 ns/op [Average]
  (min, avg, max) = (56717.802, 56873.605, 57037.433), stdev = 136.208
  CI (99.9%): [56349.116, 57398.095] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 0.39% complete, ETA 01:41:43
# Fork: 1 of 1
# Warmup Iteration   1: 1077300.287 ns/op
# Warmup Iteration   2: 169827.574 ns/op
# Warmup Iteration   3: 112704.009 ns/op
# Warmup Iteration   4: 112107.671 ns/op
Iteration   1: 109026.741 ns/op
Iteration   2: 112353.636 ns/op
Iteration   3: 109431.737 ns/op
Iteration   4: 109071.094 ns/op
Iteration   5: 109493.291 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  109875.300 ±(99.9%) 5394.897 ns/op [Average]
  (min, avg, max) = (109026.741, 109875.300, 112353.636), stdev = 1401.038
  CI (99.9%): [104480.403, 115270.197] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 0.59% complete, ETA 01:40:57
# Fork: 1 of 1
# Warmup Iteration   1: 1695739.688 ns/op
# Warmup Iteration   2: 319734.041 ns/op
# Warmup Iteration   3: 262650.685 ns/op
# Warmup Iteration   4: 240271.979 ns/op
Iteration   1: 240812.916 ns/op
Iteration   2: 241073.517 ns/op
Iteration   3: 251825.168 ns/op
Iteration   4: 240434.417 ns/op
Iteration   5: 241012.908 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  243031.785 ±(99.9%) 18952.834 ns/op [Average]
  (min, avg, max) = (240434.417, 243031.785, 251825.168), stdev = 4921.991
  CI (99.9%): [224078.952, 261984.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 0.78% complete, ETA 01:40:45
# Fork: 1 of 1
# Warmup Iteration   1: 8802273.458 ns/op
# Warmup Iteration   2: 2426930.017 ns/op
# Warmup Iteration   3: 2328560.347 ns/op
# Warmup Iteration   4: 2220609.995 ns/op
Iteration   1: 2241126.081 ns/op
Iteration   2: 2255595.491 ns/op
Iteration   3: 2271688.193 ns/op
Iteration   4: 2223939.339 ns/op
Iteration   5: 2224471.874 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2243364.196 ±(99.9%) 79175.163 ns/op [Average]
  (min, avg, max) = (2223939.339, 2243364.196, 2271688.193), stdev = 20561.538
  CI (99.9%): [2164189.033, 2322539.359] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 0.98% complete, ETA 01:40:38
# Fork: 1 of 1
# Warmup Iteration   1: 134026.222 ns/op
# Warmup Iteration   2: 27455.441 ns/op
# Warmup Iteration   3: 25524.651 ns/op
# Warmup Iteration   4: 24147.698 ns/op
Iteration   1: 24201.093 ns/op
Iteration   2: 25285.414 ns/op
Iteration   3: 24139.265 ns/op
Iteration   4: 24889.226 ns/op
Iteration   5: 24946.997 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  24692.399 ±(99.9%) 1927.791 ns/op [Average]
  (min, avg, max) = (24139.265, 24692.399, 25285.414), stdev = 500.641
  CI (99.9%): [22764.608, 26620.190] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 1.18% complete, ETA 01:40:22
# Fork: 1 of 1
# Warmup Iteration   1: 214729.478 ns/op
# Warmup Iteration   2: 54373.661 ns/op
# Warmup Iteration   3: 47567.512 ns/op
# Warmup Iteration   4: 45167.316 ns/op
Iteration   1: 45031.093 ns/op
Iteration   2: 45099.372 ns/op
Iteration   3: 45202.049 ns/op
Iteration   4: 45151.308 ns/op
Iteration   5: 45328.726 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  45162.510 ±(99.9%) 432.976 ns/op [Average]
  (min, avg, max) = (45031.093, 45162.510, 45328.726), stdev = 112.443
  CI (99.9%): [44729.533, 45595.486] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 1.37% complete, ETA 01:40:01
# Fork: 1 of 1
# Warmup Iteration   1: 407576.951 ns/op
# Warmup Iteration   2: 104175.315 ns/op
# Warmup Iteration   3: 99529.549 ns/op
# Warmup Iteration   4: 94441.307 ns/op
Iteration   1: 94205.860 ns/op
Iteration   2: 94628.085 ns/op
Iteration   3: 96143.863 ns/op
Iteration   4: 94233.469 ns/op
Iteration   5: 93896.527 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  94621.561 ±(99.9%) 3426.070 ns/op [Average]
  (min, avg, max) = (93896.527, 94621.561, 96143.863), stdev = 889.739
  CI (99.9%): [91195.491, 98047.630] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 1.57% complete, ETA 01:39:54
# Fork: 1 of 1
# Warmup Iteration   1: 1528364.043 ns/op
# Warmup Iteration   2: 268627.125 ns/op
# Warmup Iteration   3: 225307.312 ns/op
# Warmup Iteration   4: 207476.898 ns/op
Iteration   1: 207924.012 ns/op
Iteration   2: 207951.454 ns/op
Iteration   3: 213071.836 ns/op
Iteration   4: 207480.272 ns/op
Iteration   5: 208162.046 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  208917.924 ±(99.9%) 8992.533 ns/op [Average]
  (min, avg, max) = (207480.272, 208917.924, 213071.836), stdev = 2335.332
  CI (99.9%): [199925.391, 217910.457] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 1.76% complete, ETA 01:39:44
# Fork: 1 of 1
# Warmup Iteration   1: 11406254.543 ns/op
# Warmup Iteration   2: 2411076.321 ns/op
# Warmup Iteration   3: 2098821.663 ns/op
# Warmup Iteration   4: 2004468.267 ns/op
Iteration   1: 2007191.055 ns/op
Iteration   2: 1990600.908 ns/op
Iteration   3: 2041031.488 ns/op
Iteration   4: 2014112.439 ns/op
Iteration   5: 2002020.869 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2010991.352 ±(99.9%) 72624.028 ns/op [Average]
  (min, avg, max) = (1990600.908, 2010991.352, 2041031.488), stdev = 18860.229
  CI (99.9%): [1938367.324, 2083615.380] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 1.96% complete, ETA 01:39:31
# Fork: 1 of 1
# Warmup Iteration   1: 250171.659 ns/op
# Warmup Iteration   2: 43040.337 ns/op
# Warmup Iteration   3: 29194.076 ns/op
# Warmup Iteration   4: 27351.028 ns/op
Iteration   1: 26833.729 ns/op
Iteration   2: 26736.937 ns/op
Iteration   3: 26881.072 ns/op
Iteration   4: 26759.062 ns/op
Iteration   5: 27234.911 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  26889.142 ±(99.9%) 776.789 ns/op [Average]
  (min, avg, max) = (26736.937, 26889.142, 27234.911), stdev = 201.730
  CI (99.9%): [26112.354, 27665.931] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 2.16% complete, ETA 01:39:14
# Fork: 1 of 1
# Warmup Iteration   1: 263301.537 ns/op
# Warmup Iteration   2: 55613.543 ns/op
# Warmup Iteration   3: 51593.942 ns/op
# Warmup Iteration   4: 49381.856 ns/op
Iteration   1: 50500.530 ns/op
Iteration   2: 50376.693 ns/op
Iteration   3: 50344.214 ns/op
Iteration   4: 50794.499 ns/op
Iteration   5: 52942.024 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  50991.592 ±(99.9%) 4253.772 ns/op [Average]
  (min, avg, max) = (50344.214, 50991.592, 52942.024), stdev = 1104.691
  CI (99.9%): [46737.820, 55245.364] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 2.35% complete, ETA 01:38:59
# Fork: 1 of 1
# Warmup Iteration   1: 480142.293 ns/op
# Warmup Iteration   2: 114455.080 ns/op
# Warmup Iteration   3: 107366.538 ns/op
# Warmup Iteration   4: 103181.999 ns/op
Iteration   1: 103542.380 ns/op
Iteration   2: 103252.044 ns/op
Iteration   3: 104749.094 ns/op
Iteration   4: 102811.185 ns/op
Iteration   5: 103310.206 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  103532.982 ±(99.9%) 2808.967 ns/op [Average]
  (min, avg, max) = (102811.185, 103532.982, 104749.094), stdev = 729.480
  CI (99.9%): [100724.014, 106341.949] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 2.55% complete, ETA 01:38:48
# Fork: 1 of 1
# Warmup Iteration   1: 812717.211 ns/op
# Warmup Iteration   2: 254985.228 ns/op
# Warmup Iteration   3: 238481.657 ns/op
# Warmup Iteration   4: 228631.590 ns/op
Iteration   1: 227378.093 ns/op
Iteration   2: 226971.160 ns/op
Iteration   3: 228474.431 ns/op
Iteration   4: 233775.237 ns/op
Iteration   5: 228210.569 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  228961.898 ±(99.9%) 10622.793 ns/op [Average]
  (min, avg, max) = (226971.160, 228961.898, 233775.237), stdev = 2758.706
  CI (99.9%): [218339.105, 239584.691] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 2.75% complete, ETA 01:38:36
# Fork: 1 of 1
# Warmup Iteration   1: 9634959.467 ns/op
# Warmup Iteration   2: 2446673.592 ns/op
# Warmup Iteration   3: 2339119.370 ns/op
# Warmup Iteration   4: 2233628.229 ns/op
Iteration   1: 2239331.790 ns/op
Iteration   2: 2247960.807 ns/op
Iteration   3: 2297316.667 ns/op
Iteration   4: 2288962.795 ns/op
Iteration   5: 2250264.876 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2264767.387 ±(99.9%) 101598.402 ns/op [Average]
  (min, avg, max) = (2239331.790, 2264767.387, 2297316.667), stdev = 26384.782
  CI (99.9%): [2163168.985, 2366365.789] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 2.94% complete, ETA 01:38:24
# Fork: 1 of 1
# Warmup Iteration   1: 19165.655 ns/op
# Warmup Iteration   2: 8842.790 ns/op
# Warmup Iteration   3: 8285.920 ns/op
# Warmup Iteration   4: 8234.479 ns/op
Iteration   1: 8234.877 ns/op
Iteration   2: 8179.417 ns/op
Iteration   3: 8221.443 ns/op
Iteration   4: 8209.315 ns/op
Iteration   5: 8191.215 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  8207.253 ±(99.9%) 86.119 ns/op [Average]
  (min, avg, max) = (8179.417, 8207.253, 8234.877), stdev = 22.365
  CI (99.9%): [8121.134, 8293.372] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 3.14% complete, ETA 01:38:09
# Fork: 1 of 1
# Warmup Iteration   1: 39988.866 ns/op
# Warmup Iteration   2: 17358.232 ns/op
# Warmup Iteration   3: 16785.421 ns/op
# Warmup Iteration   4: 15834.972 ns/op
Iteration   1: 15848.127 ns/op
Iteration   2: 16365.118 ns/op
Iteration   3: 15836.403 ns/op
Iteration   4: 15966.252 ns/op
Iteration   5: 15885.483 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  15980.277 ±(99.9%) 851.176 ns/op [Average]
  (min, avg, max) = (15836.403, 15980.277, 16365.118), stdev = 221.048
  CI (99.9%): [15129.100, 16831.453] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 3.33% complete, ETA 01:37:54
# Fork: 1 of 1
# Warmup Iteration   1: 105984.248 ns/op
# Warmup Iteration   2: 35549.511 ns/op
# Warmup Iteration   3: 32524.208 ns/op
# Warmup Iteration   4: 31856.980 ns/op
Iteration   1: 31834.296 ns/op
Iteration   2: 31896.402 ns/op
Iteration   3: 31808.897 ns/op
Iteration   4: 32597.559 ns/op
Iteration   5: 31998.017 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  32027.034 ±(99.9%) 1259.781 ns/op [Average]
  (min, avg, max) = (31808.897, 32027.034, 32597.559), stdev = 327.161
  CI (99.9%): [30767.253, 33286.815] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 3.53% complete, ETA 01:37:38
# Fork: 1 of 1
# Warmup Iteration   1: 193167.117 ns/op
# Warmup Iteration   2: 73249.890 ns/op
# Warmup Iteration   3: 67633.974 ns/op
# Warmup Iteration   4: 65439.576 ns/op
Iteration   1: 65832.703 ns/op
Iteration   2: 65896.068 ns/op
Iteration   3: 65992.001 ns/op
Iteration   4: 65586.764 ns/op
Iteration   5: 66340.600 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  65929.627 ±(99.9%) 1056.061 ns/op [Average]
  (min, avg, max) = (65586.764, 65929.627, 66340.600), stdev = 274.256
  CI (99.9%): [64873.566, 66985.689] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 3.73% complete, ETA 01:37:23
# Fork: 1 of 1
# Warmup Iteration   1: 1427256.396 ns/op
# Warmup Iteration   2: 722034.862 ns/op
# Warmup Iteration   3: 679349.049 ns/op
# Warmup Iteration   4: 688485.697 ns/op
Iteration   1: 668880.634 ns/op
Iteration   2: 658512.883 ns/op
Iteration   3: 655825.248 ns/op
Iteration   4: 664095.330 ns/op
Iteration   5: 654920.661 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  660446.951 ±(99.9%) 22787.088 ns/op [Average]
  (min, avg, max) = (654920.661, 660446.951, 668880.634), stdev = 5917.734
  CI (99.9%): [637659.863, 683234.040] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 3.92% complete, ETA 01:37:07
# Fork: 1 of 1
# Warmup Iteration   1: 31113.459 ns/op
# Warmup Iteration   2: 8458.438 ns/op
# Warmup Iteration   3: 7674.228 ns/op
# Warmup Iteration   4: 7619.901 ns/op
Iteration   1: 7789.057 ns/op
Iteration   2: 7646.078 ns/op
Iteration   3: 7656.682 ns/op
Iteration   4: 7629.765 ns/op
Iteration   5: 7620.933 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  7668.503 ±(99.9%) 264.964 ns/op [Average]
  (min, avg, max) = (7620.933, 7668.503, 7789.057), stdev = 68.810
  CI (99.9%): [7403.539, 7933.467] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 4.12% complete, ETA 01:36:52
# Fork: 1 of 1
# Warmup Iteration   1: 83515.341 ns/op
# Warmup Iteration   2: 19353.552 ns/op
# Warmup Iteration   3: 14915.270 ns/op
# Warmup Iteration   4: 14782.078 ns/op
Iteration   1: 14821.682 ns/op
Iteration   2: 14835.539 ns/op
Iteration   3: 14809.049 ns/op
Iteration   4: 14744.940 ns/op
Iteration   5: 14774.423 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  14797.127 ±(99.9%) 142.259 ns/op [Average]
  (min, avg, max) = (14744.940, 14797.127, 14835.539), stdev = 36.944
  CI (99.9%): [14654.868, 14939.385] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 4.31% complete, ETA 01:36:38
# Fork: 1 of 1
# Warmup Iteration   1: 184584.089 ns/op
# Warmup Iteration   2: 40231.068 ns/op
# Warmup Iteration   3: 30536.473 ns/op
# Warmup Iteration   4: 29174.215 ns/op
Iteration   1: 29053.942 ns/op
Iteration   2: 29138.956 ns/op
Iteration   3: 29703.129 ns/op
Iteration   4: 29504.194 ns/op
Iteration   5: 29528.373 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  29385.719 ±(99.9%) 1065.216 ns/op [Average]
  (min, avg, max) = (29053.942, 29385.719, 29703.129), stdev = 276.633
  CI (99.9%): [28320.503, 30450.934] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 4.51% complete, ETA 01:36:27
# Fork: 1 of 1
# Warmup Iteration   1: 257392.529 ns/op
# Warmup Iteration   2: 77943.168 ns/op
# Warmup Iteration   3: 62783.797 ns/op
# Warmup Iteration   4: 62606.712 ns/op
Iteration   1: 62285.585 ns/op
Iteration   2: 61920.893 ns/op
Iteration   3: 63003.417 ns/op
Iteration   4: 61960.843 ns/op
Iteration   5: 62175.377 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  62269.223 ±(99.9%) 1683.470 ns/op [Average]
  (min, avg, max) = (61920.893, 62269.223, 63003.417), stdev = 437.192
  CI (99.9%): [60585.753, 63952.693] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 4.71% complete, ETA 01:36:13
# Fork: 1 of 1
# Warmup Iteration   1: 1656602.703 ns/op
# Warmup Iteration   2: 730532.124 ns/op
# Warmup Iteration   3: 610531.220 ns/op
# Warmup Iteration   4: 596605.176 ns/op
Iteration   1: 574858.105 ns/op
Iteration   2: 574791.476 ns/op
Iteration   3: 558440.428 ns/op
Iteration   4: 560269.862 ns/op
Iteration   5: 562201.559 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  566112.286 ±(99.9%) 31051.021 ns/op [Average]
  (min, avg, max) = (558440.428, 566112.286, 574858.105), stdev = 8063.852
  CI (99.9%): [535061.265, 597163.307] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 4.90% complete, ETA 01:36:01
# Fork: 1 of 1
# Warmup Iteration   1: 33858.020 ns/op
# Warmup Iteration   2: 11876.017 ns/op
# Warmup Iteration   3: 10913.973 ns/op
# Warmup Iteration   4: 10677.178 ns/op
Iteration   1: 10616.144 ns/op
Iteration   2: 10564.581 ns/op
Iteration   3: 10563.334 ns/op
Iteration   4: 11397.901 ns/op
Iteration   5: 10609.032 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  10750.199 ±(99.9%) 1397.403 ns/op [Average]
  (min, avg, max) = (10563.334, 10750.199, 11397.901), stdev = 362.901
  CI (99.9%): [9352.795, 12147.602] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 5.10% complete, ETA 01:35:48
# Fork: 1 of 1
# Warmup Iteration   1: 91707.801 ns/op
# Warmup Iteration   2: 22322.395 ns/op
# Warmup Iteration   3: 19332.233 ns/op
# Warmup Iteration   4: 19073.096 ns/op
Iteration   1: 19118.032 ns/op
Iteration   2: 18943.942 ns/op
Iteration   3: 20766.944 ns/op
Iteration   4: 18967.965 ns/op
Iteration   5: 19029.596 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  19365.296 ±(99.9%) 3028.245 ns/op [Average]
  (min, avg, max) = (18943.942, 19365.296, 20766.944), stdev = 786.426
  CI (99.9%): [16337.051, 22393.541] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 5.29% complete, ETA 01:35:36
# Fork: 1 of 1
# Warmup Iteration   1: 122456.196 ns/op
# Warmup Iteration   2: 51046.762 ns/op
# Warmup Iteration   3: 38213.984 ns/op
# Warmup Iteration   4: 37820.799 ns/op
Iteration   1: 37707.537 ns/op
Iteration   2: 37943.492 ns/op
Iteration   3: 37859.825 ns/op
Iteration   4: 37780.228 ns/op
Iteration   5: 37546.406 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  37767.498 ±(99.9%) 584.414 ns/op [Average]
  (min, avg, max) = (37546.406, 37767.498, 37943.492), stdev = 151.771
  CI (99.9%): [37183.083, 38351.912] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 5.49% complete, ETA 01:35:23
# Fork: 1 of 1
# Warmup Iteration   1: 279841.911 ns/op
# Warmup Iteration   2: 132945.313 ns/op
# Warmup Iteration   3: 80767.891 ns/op
# Warmup Iteration   4: 80574.601 ns/op
Iteration   1: 80362.782 ns/op
Iteration   2: 80042.863 ns/op
Iteration   3: 79926.990 ns/op
Iteration   4: 80201.714 ns/op
Iteration   5: 79936.850 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  80094.240 ±(99.9%) 717.939 ns/op [Average]
  (min, avg, max) = (79926.990, 80094.240, 80362.782), stdev = 186.447
  CI (99.9%): [79376.300, 80812.179] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 5.69% complete, ETA 01:35:11
# Fork: 1 of 1
# Warmup Iteration   1: 2310890.654 ns/op
# Warmup Iteration   2: 998531.968 ns/op
# Warmup Iteration   3: 932921.956 ns/op
# Warmup Iteration   4: 973804.785 ns/op
Iteration   1: 930377.215 ns/op
Iteration   2: 922826.749 ns/op
Iteration   3: 947556.537 ns/op
Iteration   4: 908574.906 ns/op
Iteration   5: 963185.875 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  934504.256 ±(99.9%) 82108.270 ns/op [Average]
  (min, avg, max) = (908574.906, 934504.256, 963185.875), stdev = 21323.257
  CI (99.9%): [852395.986, 1016612.526] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 5.88% complete, ETA 01:34:59
# Fork: 1 of 1
# Warmup Iteration   1: 499488.752 ns/op
# Warmup Iteration   2: 185798.040 ns/op
# Warmup Iteration   3: 152194.731 ns/op
# Warmup Iteration   4: 145000.646 ns/op
Iteration   1: 143908.102 ns/op
Iteration   2: 143712.481 ns/op
Iteration   3: 144019.615 ns/op
Iteration   4: 143720.265 ns/op
Iteration   5: 144971.626 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  144066.418 ±(99.9%) 2011.707 ns/op [Average]
  (min, avg, max) = (143712.481, 144066.418, 144971.626), stdev = 522.434
  CI (99.9%): [142054.710, 146078.125] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 6.08% complete, ETA 01:34:45
# Fork: 1 of 1
# Warmup Iteration   1: 888979.604 ns/op
# Warmup Iteration   2: 341827.115 ns/op
# Warmup Iteration   3: 268357.627 ns/op
# Warmup Iteration   4: 249833.220 ns/op
Iteration   1: 249664.762 ns/op
Iteration   2: 250049.074 ns/op
Iteration   3: 250191.080 ns/op
Iteration   4: 249630.404 ns/op
Iteration   5: 249460.685 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  249799.201 ±(99.9%) 1182.412 ns/op [Average]
  (min, avg, max) = (249460.685, 249799.201, 250191.080), stdev = 307.069
  CI (99.9%): [248616.789, 250981.613] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 6.27% complete, ETA 01:34:31
# Fork: 1 of 1
# Warmup Iteration   1: 2035577.451 ns/op
# Warmup Iteration   2: 730122.795 ns/op
# Warmup Iteration   3: 624795.018 ns/op
# Warmup Iteration   4: 597730.655 ns/op
Iteration   1: 597813.715 ns/op
Iteration   2: 601559.415 ns/op
Iteration   3: 602374.466 ns/op
Iteration   4: 598958.414 ns/op
Iteration   5: 596814.206 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  599504.043 ±(99.9%) 9204.172 ns/op [Average]
  (min, avg, max) = (596814.206, 599504.043, 602374.466), stdev = 2390.294
  CI (99.9%): [590299.871, 608708.215] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 6.47% complete, ETA 01:34:18
# Fork: 1 of 1
# Warmup Iteration   1: 4679148.624 ns/op
# Warmup Iteration   2: 1616590.799 ns/op
# Warmup Iteration   3: 1532207.150 ns/op
# Warmup Iteration   4: 1470462.114 ns/op
Iteration   1: 1446862.821 ns/op
Iteration   2: 1445085.494 ns/op
Iteration   3: 1444537.789 ns/op
Iteration   4: 1531761.538 ns/op
Iteration   5: 1439664.776 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1461582.483 ±(99.9%) 151414.378 ns/op [Average]
  (min, avg, max) = (1439664.776, 1461582.483, 1531761.538), stdev = 39321.833
  CI (99.9%): [1310168.105, 1612996.862] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 6.67% complete, ETA 01:34:04
# Fork: 1 of 1
# Warmup Iteration   1: 40736691.205 ns/op
# Warmup Iteration   2: 15040566.204 ns/op
# Warmup Iteration   3: 12934721.865 ns/op
# Warmup Iteration   4: 12377103.572 ns/op
Iteration   1: 12330011.414 ns/op
Iteration   2: 12374090.800 ns/op
Iteration   3: 12370945.157 ns/op
Iteration   4: 12342497.465 ns/op
Iteration   5: 12434124.181 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12370333.803 ±(99.9%) 155038.729 ns/op [Average]
  (min, avg, max) = (12330011.414, 12370333.803, 12434124.181), stdev = 40263.066
  CI (99.9%): [12215295.074, 12525372.533] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 6.86% complete, ETA 01:33:54
# Fork: 1 of 1
# Warmup Iteration   1: 15815.500 ns/op
# Warmup Iteration   2: 6651.383 ns/op
# Warmup Iteration   3: 6492.417 ns/op
# Warmup Iteration   4: 6492.778 ns/op
Iteration   1: 6517.750 ns/op
Iteration   2: 6536.884 ns/op
Iteration   3: 6518.439 ns/op
Iteration   4: 6522.490 ns/op
Iteration   5: 6478.028 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  6514.718 ±(99.9%) 84.384 ns/op [Average]
  (min, avg, max) = (6478.028, 6514.718, 6536.884), stdev = 21.914
  CI (99.9%): [6430.334, 6599.102] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 7.06% complete, ETA 01:33:41
# Fork: 1 of 1
# Warmup Iteration   1: 31917.130 ns/op
# Warmup Iteration   2: 13851.551 ns/op
# Warmup Iteration   3: 12688.369 ns/op
# Warmup Iteration   4: 12623.938 ns/op
Iteration   1: 12651.672 ns/op
Iteration   2: 12683.506 ns/op
Iteration   3: 12679.098 ns/op
Iteration   4: 12602.154 ns/op
Iteration   5: 12582.460 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12639.778 ±(99.9%) 175.411 ns/op [Average]
  (min, avg, max) = (12582.460, 12639.778, 12683.506), stdev = 45.554
  CI (99.9%): [12464.367, 12815.189] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 7.25% complete, ETA 01:33:28
# Fork: 1 of 1
# Warmup Iteration   1: 61812.773 ns/op
# Warmup Iteration   2: 27215.074 ns/op
# Warmup Iteration   3: 23270.866 ns/op
# Warmup Iteration   4: 23980.431 ns/op
Iteration   1: 23249.850 ns/op
Iteration   2: 23162.949 ns/op
Iteration   3: 23230.345 ns/op
Iteration   4: 23272.990 ns/op
Iteration   5: 23215.479 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  23226.323 ±(99.9%) 159.712 ns/op [Average]
  (min, avg, max) = (23162.949, 23226.323, 23272.990), stdev = 41.477
  CI (99.9%): [23066.610, 23386.035] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 7.45% complete, ETA 01:33:14
# Fork: 1 of 1
# Warmup Iteration   1: 118718.084 ns/op
# Warmup Iteration   2: 48365.417 ns/op
# Warmup Iteration   3: 47481.816 ns/op
# Warmup Iteration   4: 47703.582 ns/op
Iteration   1: 45644.516 ns/op
Iteration   2: 46173.297 ns/op
Iteration   3: 52038.187 ns/op
Iteration   4: 45876.568 ns/op
Iteration   5: 45758.691 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  47098.252 ±(99.9%) 10660.580 ns/op [Average]
  (min, avg, max) = (45644.516, 47098.252, 52038.187), stdev = 2768.519
  CI (99.9%): [36437.672, 57758.832] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 7.65% complete, ETA 01:33:00
# Fork: 1 of 1
# Warmup Iteration   1: 812264.678 ns/op
# Warmup Iteration   2: 499136.942 ns/op
# Warmup Iteration   3: 508218.503 ns/op
# Warmup Iteration   4: 487012.715 ns/op
Iteration   1: 451400.980 ns/op
Iteration   2: 450936.385 ns/op
Iteration   3: 448633.625 ns/op
Iteration   4: 448168.005 ns/op
Iteration   5: 469080.990 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  453643.997 ±(99.9%) 33665.804 ns/op [Average]
  (min, avg, max) = (448168.005, 453643.997, 469080.990), stdev = 8742.902
  CI (99.9%): [419978.193, 487309.801] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 7.84% complete, ETA 01:32:47
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
86937.204 ns/op
# Warmup Iteration   2: 65213.343 ns/op
# Warmup Iteration   3: 70454.133 ns/op
# Warmup Iteration   4: 61425.567 ns/op
Iteration   1: 63256.444 ns/op
Iteration   2: 62330.449 ns/op
Iteration   3: 67061.307 ns/op
Iteration   4: 64978.143 ns/op
Iteration   5: 62986.077 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  64122.484 ±(99.9%) 7362.102 ns/op [Average]
  (min, avg, max) = (62330.449, 64122.484, 67061.307), stdev = 1911.914
  CI (99.9%): [56760.382, 71484.586] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 8.04% complete, ETA 01:32:35
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
163616.101 ns/op
# Warmup Iteration   2: 120663.477 ns/op
# Warmup Iteration   3: 120022.635 ns/op
# Warmup Iteration   4: 129352.151 ns/op
Iteration   1: 147198.503 ns/op
Iteration   2: 154428.292 ns/op
Iteration   3: 136525.191 ns/op
Iteration   4: 131736.699 ns/op
Iteration   5: 131584.010 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  140294.539 ±(99.9%) 39020.231 ns/op [Average]
  (min, avg, max) = (131584.010, 140294.539, 154428.292), stdev = 10133.430
  CI (99.9%): [101274.308, 179314.770] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 8.24% complete, ETA 01:32:24
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
279500.260 ns/op
# Warmup Iteration   2: 238524.293 ns/op
# Warmup Iteration   3: 222991.628 ns/op
# Warmup Iteration   4: 260633.685 ns/op
Iteration   1: 257040.818 ns/op
Iteration   2: 248842.803 ns/op
Iteration   3: 248383.100 ns/op
Iteration   4: 242037.711 ns/op
Iteration   5: 246481.549 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  248557.196 ±(99.9%) 20993.578 ns/op [Average]
  (min, avg, max) = (242037.711, 248557.196, 257040.818), stdev = 5451.966
  CI (99.9%): [227563.618, 269550.775] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 8.43% complete, ETA 01:32:11
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
764062.672 ns/op
# Warmup Iteration   2: 606439.463 ns/op
# Warmup Iteration   3: 552975.650 ns/op
# Warmup Iteration   4: 560168.557 ns/op
Iteration   1: 557748.531 ns/op
Iteration   2: 568562.397 ns/op
Iteration   3: 600391.776 ns/op
Iteration   4: 593593.052 ns/op
Iteration   5: 592425.060 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  582544.163 ±(99.9%) 70703.121 ns/op [Average]
  (min, avg, max) = (557748.531, 582544.163, 600391.776), stdev = 18361.376
  CI (99.9%): [511841.042, 653247.283] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 8.63% complete, ETA 01:32:00
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4845232.824 ns/op
# Warmup Iteration   2: 5457627.757 ns/op
# Warmup Iteration   3: 5858069.005 ns/op
# Warmup Iteration   4: 5246237.685 ns/op
Iteration   1: 5210153.610 ns/op
Iteration   2: 5375170.668 ns/op
Iteration   3: 4951736.696 ns/op
Iteration   4: 5153224.162 ns/op
Iteration   5: 5031329.613 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  5144322.950 ±(99.9%) 631436.735 ns/op [Average]
  (min, avg, max) = (4951736.696, 5144322.950, 5375170.668), stdev = 163982.115
  CI (99.9%): [4512886.215, 5775759.685] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 8.82% complete, ETA 01:31:48
# Fork: 1 of 1
# Warmup Iteration   1: 24678.222 ns/op
# Warmup Iteration   2: 9933.006 ns/op
# Warmup Iteration   3: 9389.211 ns/op
# Warmup Iteration   4: 9611.417 ns/op
Iteration   1: 10078.710 ns/op
Iteration   2: 10084.594 ns/op
Iteration   3: 10106.004 ns/op
Iteration   4: 10032.240 ns/op
Iteration   5: 10055.388 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  10071.387 ±(99.9%) 109.165 ns/op [Average]
  (min, avg, max) = (10032.240, 10071.387, 10106.004), stdev = 28.350
  CI (99.9%): [9962.222, 10180.552] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 9.02% complete, ETA 01:31:35
# Fork: 1 of 1
# Warmup Iteration   1: 47747.046 ns/op
# Warmup Iteration   2: 19770.283 ns/op
# Warmup Iteration   3: 19162.192 ns/op
# Warmup Iteration   4: 19008.640 ns/op
Iteration   1: 18591.664 ns/op
Iteration   2: 18159.491 ns/op
Iteration   3: 18166.275 ns/op
Iteration   4: 18128.271 ns/op
Iteration   5: 18145.964 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  18238.333 ±(99.9%) 762.624 ns/op [Average]
  (min, avg, max) = (18128.271, 18238.333, 18591.664), stdev = 198.051
  CI (99.9%): [17475.709, 19000.957] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 9.22% complete, ETA 01:31:23
# Fork: 1 of 1
# Warmup Iteration   1: 125286.486 ns/op
# Warmup Iteration   2: 39249.885 ns/op
# Warmup Iteration   3: 39485.250 ns/op
# Warmup Iteration   4: 39694.291 ns/op
Iteration   1: 40323.719 ns/op
Iteration   2: 41474.541 ns/op
Iteration   3: 41676.353 ns/op
Iteration   4: 41923.075 ns/op
Iteration   5: 41482.137 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  41375.965 ±(99.9%) 2371.959 ns/op [Average]
  (min, avg, max) = (40323.719, 41375.965, 41923.075), stdev = 615.990
  CI (99.9%): [39004.006, 43747.924] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 9.41% complete, ETA 01:31:10
# Fork: 1 of 1
# Warmup Iteration   1: 252259.403 ns/op
# Warmup Iteration   2: 77561.330 ns/op
# Warmup Iteration   3: 73576.369 ns/op
# Warmup Iteration   4: 72972.381 ns/op
Iteration   1: 75327.066 ns/op
Iteration   2: 75787.955 ns/op
Iteration   3: 75828.950 ns/op
Iteration   4: 75677.913 ns/op
Iteration   5: 75626.317 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  75649.640 ±(99.9%) 762.098 ns/op [Average]
  (min, avg, max) = (75327.066, 75649.640, 75828.950), stdev = 197.914
  CI (99.9%): [74887.542, 76411.738] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 9.61% complete, ETA 01:30:58
# Fork: 1 of 1
# Warmup Iteration   1: 1682961.915 ns/op
# Warmup Iteration   2: 741484.746 ns/op
# Warmup Iteration   3: 748030.443 ns/op
# Warmup Iteration   4: 739391.687 ns/op
Iteration   1: 738437.980 ns/op
Iteration   2: 736914.468 ns/op
Iteration   3: 736581.693 ns/op
Iteration   4: 737202.050 ns/op
Iteration   5: 742773.621 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  738381.963 ±(99.9%) 9831.687 ns/op [Average]
  (min, avg, max) = (736581.693, 738381.963, 742773.621), stdev = 2553.258
  CI (99.9%): [728550.275, 748213.650] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 9.80% complete, ETA 01:30:46
# Fork: 1 of 1
# Warmup Iteration   1: 430423.956 ns/op
# Warmup Iteration   2: 223244.991 ns/op
# Warmup Iteration   3: 189719.132 ns/op
# Warmup Iteration   4: 192598.166 ns/op
Iteration   1: 182880.338 ns/op
Iteration   2: 184195.629 ns/op
Iteration   3: 185012.561 ns/op
Iteration   4: 186261.478 ns/op
Iteration   5: 184921.207 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  184654.243 ±(99.9%) 4770.733 ns/op [Average]
  (min, avg, max) = (182880.338, 184654.243, 186261.478), stdev = 1238.944
  CI (99.9%): [179883.510, 189424.976] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 10.00% complete, ETA 01:30:36
# Fork: 1 of 1
# Warmup Iteration   1: 847512.421 ns/op
# Warmup Iteration   2: 360125.333 ns/op
# Warmup Iteration   3: 340993.418 ns/op
# Warmup Iteration   4: 290801.709 ns/op
Iteration   1: 287898.446 ns/op
Iteration   2: 277543.365 ns/op
Iteration   3: 277209.077 ns/op
Iteration   4: 276133.886 ns/op
Iteration   5: 278370.616 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  279431.078 ±(99.9%) 18486.413 ns/op [Average]
  (min, avg, max) = (276133.886, 279431.078, 287898.446), stdev = 4800.863
  CI (99.9%): [260944.665, 297917.491] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 10.20% complete, ETA 01:30:27
# Fork: 1 of 1
# Warmup Iteration   1: 1436120.954 ns/op
# Warmup Iteration   2: 652444.001 ns/op
# Warmup Iteration   3: 607911.500 ns/op
# Warmup Iteration   4: 578774.757 ns/op
Iteration   1: 577280.171 ns/op
Iteration   2: 551220.840 ns/op
Iteration   3: 550889.206 ns/op
Iteration   4: 556150.875 ns/op
Iteration   5: 551748.926 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  557458.004 ±(99.9%) 43448.839 ns/op [Average]
  (min, avg, max) = (550889.206, 557458.004, 577280.171), stdev = 11283.525
  CI (99.9%): [514009.165, 600906.842] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 10.39% complete, ETA 01:30:17
# Fork: 1 of 1
# Warmup Iteration   1: 3249698.011 ns/op
# Warmup Iteration   2: 1640423.114 ns/op
# Warmup Iteration   3: 1362204.979 ns/op
# Warmup Iteration   4: 1407875.087 ns/op
Iteration   1: 1354759.533 ns/op
Iteration   2: 1311583.019 ns/op
Iteration   3: 1296854.786 ns/op
Iteration   4: 1270648.102 ns/op
Iteration   5: 1278194.952 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1302408.078 ±(99.9%) 128444.590 ns/op [Average]
  (min, avg, max) = (1270648.102, 1302408.078, 1354759.533), stdev = 33356.652
  CI (99.9%): [1173963.489, 1430852.668] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 10.59% complete, ETA 01:30:08
# Fork: 1 of 1
# Warmup Iteration   1: 23492233.090 ns/op
# Warmup Iteration   2: 13174132.769 ns/op
# Warmup Iteration   3: 13035223.982 ns/op
# Warmup Iteration   4: 12251518.015 ns/op
Iteration   1: 12173266.630 ns/op
Iteration   2: 12216063.390 ns/op
Iteration   3: 12073856.946 ns/op
Iteration   4: 12146730.020 ns/op
Iteration   5: 12420096.946 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12206002.786 ±(99.9%) 502007.036 ns/op [Average]
  (min, avg, max) = (12073856.946, 12206002.786, 12420096.946), stdev = 130369.633
  CI (99.9%): [11703995.750, 12708009.822] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 10.78% complete, ETA 01:29:59
# Fork: 1 of 1
# Warmup Iteration   1: 92860.196 ns/op
# Warmup Iteration   2: 41398.535 ns/op
# Warmup Iteration   3: 40170.507 ns/op
# Warmup Iteration   4: 38196.244 ns/op
Iteration   1: 38147.194 ns/op
Iteration   2: 38106.276 ns/op
Iteration   3: 38280.716 ns/op
Iteration   4: 38264.936 ns/op
Iteration   5: 38078.216 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  38175.467 ±(99.9%) 355.673 ns/op [Average]
  (min, avg, max) = (38078.216, 38175.467, 38280.716), stdev = 92.367
  CI (99.9%): [37819.795, 38531.140] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 10.98% complete, ETA 01:29:47
# Fork: 1 of 1
# Warmup Iteration   1: 259320.010 ns/op
# Warmup Iteration   2: 89090.210 ns/op
# Warmup Iteration   3: 78193.900 ns/op
# Warmup Iteration   4: 75724.181 ns/op
Iteration   1: 76207.465 ns/op
Iteration   2: 75248.568 ns/op
Iteration   3: 74794.954 ns/op
Iteration   4: 76909.764 ns/op
Iteration   5: 74776.657 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  75587.481 ±(99.9%) 3618.995 ns/op [Average]
  (min, avg, max) = (74776.657, 75587.481, 76909.764), stdev = 939.842
  CI (99.9%): [71968.486, 79206.477] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 11.18% complete, ETA 01:29:35
# Fork: 1 of 1
# Warmup Iteration   1: 406652.594 ns/op
# Warmup Iteration   2: 187870.827 ns/op
# Warmup Iteration   3: 171683.507 ns/op
# Warmup Iteration   4: 166751.042 ns/op
Iteration   1: 165849.350 ns/op
Iteration   2: 165256.492 ns/op
Iteration   3: 170517.320 ns/op
Iteration   4: 165391.759 ns/op
Iteration   5: 164838.689 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  166370.722 ±(99.9%) 9033.250 ns/op [Average]
  (min, avg, max) = (164838.689, 166370.722, 170517.320), stdev = 2345.906
  CI (99.9%): [157337.472, 175403.972] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 11.37% complete, ETA 01:29:23
# Fork: 1 of 1
# Warmup Iteration   1: 979769.392 ns/op
# Warmup Iteration   2: 420889.860 ns/op
# Warmup Iteration   3: 395550.943 ns/op
# Warmup Iteration   4: 363850.959 ns/op
Iteration   1: 362293.438 ns/op
Iteration   2: 361489.653 ns/op
Iteration   3: 362060.941 ns/op
Iteration   4: 362923.066 ns/op
Iteration   5: 363171.023 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  362387.624 ±(99.9%) 2599.083 ns/op [Average]
  (min, avg, max) = (361489.653, 362387.624, 363171.023), stdev = 674.973
  CI (99.9%): [359788.542, 364986.707] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 11.57% complete, ETA 01:29:10
# Fork: 1 of 1
# Warmup Iteration   1: 9482051.539 ns/op
# Warmup Iteration   2: 4273272.047 ns/op
# Warmup Iteration   3: 4216977.218 ns/op
# Warmup Iteration   4: 3932443.493 ns/op
Iteration   1: 3921159.922 ns/op
Iteration   2: 3927310.106 ns/op
Iteration   3: 3953739.215 ns/op
Iteration   4: 3914027.380 ns/op
Iteration   5: 4033303.490 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  3949908.023 ±(99.9%) 188583.510 ns/op [Average]
  (min, avg, max) = (3914027.380, 3949908.023, 4033303.490), stdev = 48974.539
  CI (99.9%): [3761324.513, 4138491.532] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 11.76% complete, ETA 01:28:59
# Fork: 1 of 1
# Warmup Iteration   1: 97904.557 ns/op
# Warmup Iteration   2: 42399.864 ns/op
# Warmup Iteration   3: 41903.057 ns/op
# Warmup Iteration   4: 41519.519 ns/op
Iteration   1: 41779.509 ns/op
Iteration   2: 41458.113 ns/op
Iteration   3: 41462.921 ns/op
Iteration   4: 41415.099 ns/op
Iteration   5: 41735.236 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  41570.176 ±(99.9%) 664.657 ns/op [Average]
  (min, avg, max) = (41415.099, 41570.176, 41779.509), stdev = 172.609
  CI (99.9%): [40905.519, 42234.832] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 11.96% complete, ETA 01:28:46
# Fork: 1 of 1
# Warmup Iteration   1: 240056.453 ns/op
# Warmup Iteration   2: 75816.646 ns/op
# Warmup Iteration   3: 74330.520 ns/op
# Warmup Iteration   4: 74504.138 ns/op
Iteration   1: 75411.362 ns/op
Iteration   2: 72451.185 ns/op
Iteration   3: 70930.678 ns/op
Iteration   4: 71228.699 ns/op
Iteration   5: 71163.210 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  72237.027 ±(99.9%) 7203.540 ns/op [Average]
  (min, avg, max) = (70930.678, 72237.027, 75411.362), stdev = 1870.736
  CI (99.9%): [65033.487, 79440.567] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 12.16% complete, ETA 01:28:34
# Fork: 1 of 1
# Warmup Iteration   1: 419271.182 ns/op
# Warmup Iteration   2: 168405.863 ns/op
# Warmup Iteration   3: 158675.245 ns/op
# Warmup Iteration   4: 159818.092 ns/op
Iteration   1: 156591.961 ns/op
Iteration   2: 155230.493 ns/op
Iteration   3: 155729.965 ns/op
Iteration   4: 156421.846 ns/op
Iteration   5: 157306.381 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  156256.129 ±(99.9%) 3087.759 ns/op [Average]
  (min, avg, max) = (155230.493, 156256.129, 157306.381), stdev = 801.881
  CI (99.9%): [153168.370, 159343.889] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 12.35% complete, ETA 01:28:22
# Fork: 1 of 1
# Warmup Iteration   1: 989885.606 ns/op
# Warmup Iteration   2: 375005.960 ns/op
# Warmup Iteration   3: 374823.834 ns/op
# Warmup Iteration   4: 367711.481 ns/op
Iteration   1: 369552.662 ns/op
Iteration   2: 367724.999 ns/op
Iteration   3: 368186.888 ns/op
Iteration   4: 368479.586 ns/op
Iteration   5: 368939.061 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  368576.639 ±(99.9%) 2702.720 ns/op [Average]
  (min, avg, max) = (367724.999, 368576.639, 369552.662), stdev = 701.888
  CI (99.9%): [365873.919, 371279.359] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 12.55% complete, ETA 01:28:11
# Fork: 1 of 1
# Warmup Iteration   1: 7795017.251 ns/op
# Warmup Iteration   2: 3672045.818 ns/op
# Warmup Iteration   3: 3605517.558 ns/op
# Warmup Iteration   4: 3564261.082 ns/op
Iteration   1: 3457585.968 ns/op
Iteration   2: 3445045.332 ns/op
Iteration   3: 3452337.140 ns/op
Iteration   4: 3444481.192 ns/op
Iteration   5: 3435010.484 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  3446892.023 ±(99.9%) 33035.019 ns/op [Average]
  (min, avg, max) = (3435010.484, 3446892.023, 3457585.968), stdev = 8579.090
  CI (99.9%): [3413857.004, 3479927.042] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 12.75% complete, ETA 01:27:59
# Fork: 1 of 1
# Warmup Iteration   1: 57220.833 ns/op
# Warmup Iteration   2: 24592.276 ns/op
# Warmup Iteration   3: 25442.000 ns/op
# Warmup Iteration   4: 24173.410 ns/op
Iteration   1: 24324.737 ns/op
Iteration   2: 24058.713 ns/op
Iteration   3: 24070.741 ns/op
Iteration   4: 24086.933 ns/op
Iteration   5: 24020.606 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  24112.346 ±(99.9%) 466.783 ns/op [Average]
  (min, avg, max) = (24020.606, 24112.346, 24324.737), stdev = 121.222
  CI (99.9%): [23645.562, 24579.129] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 12.94% complete, ETA 01:27:46
# Fork: 1 of 1
# Warmup Iteration   1: 93354.575 ns/op
# Warmup Iteration   2: 45155.821 ns/op
# Warmup Iteration   3: 45228.338 ns/op
# Warmup Iteration   4: 43402.318 ns/op
Iteration   1: 42729.135 ns/op
Iteration   2: 43430.521 ns/op
Iteration   3: 42814.752 ns/op
Iteration   4: 45279.512 ns/op
Iteration   5: 44417.209 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  43734.226 ±(99.9%) 4219.158 ns/op [Average]
  (min, avg, max) = (42729.135, 43734.226, 45279.512), stdev = 1095.702
  CI (99.9%): [39515.068, 47953.383] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 13.14% complete, ETA 01:27:34
# Fork: 1 of 1
# Warmup Iteration   1: 256968.493 ns/op
# Warmup Iteration   2: 103922.322 ns/op
# Warmup Iteration   3: 93553.179 ns/op
# Warmup Iteration   4: 93251.555 ns/op
Iteration   1: 93174.757 ns/op
Iteration   2: 93889.464 ns/op
Iteration   3: 92272.056 ns/op
Iteration   4: 92726.892 ns/op
Iteration   5: 92404.492 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  92893.532 ±(99.9%) 2528.065 ns/op [Average]
  (min, avg, max) = (92272.056, 92893.532, 93889.464), stdev = 656.530
  CI (99.9%): [90365.467, 95421.597] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 13.33% complete, ETA 01:27:22
# Fork: 1 of 1
# Warmup Iteration   1: 455881.880 ns/op
# Warmup Iteration   2: 245064.155 ns/op
# Warmup Iteration   3: 212996.572 ns/op
# Warmup Iteration   4: 212804.664 ns/op
Iteration   1: 212314.469 ns/op
Iteration   2: 212035.134 ns/op
Iteration   3: 220088.970 ns/op
Iteration   4: 213011.600 ns/op
Iteration   5: 211458.909 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  213781.816 ±(99.9%) 13745.952 ns/op [Average]
  (min, avg, max) = (211458.909, 213781.816, 220088.970), stdev = 3569.780
  CI (99.9%): [200035.865, 227527.768] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 13.53% complete, ETA 01:27:10
# Fork: 1 of 1
# Warmup Iteration   1: 4153043.328 ns/op
# Warmup Iteration   2: 2444112.105 ns/op
# Warmup Iteration   3: 2367105.166 ns/op
# Warmup Iteration   4: 2384483.733 ns/op
Iteration   1: 2426154.260 ns/op
Iteration   2: 2390213.061 ns/op
Iteration   3: 2386956.139 ns/op
Iteration   4: 2465377.455 ns/op
Iteration   5: 2410711.939 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2415882.571 ±(99.9%) 122944.263 ns/op [Average]
  (min, avg, max) = (2386956.139, 2415882.571, 2465377.455), stdev = 31928.235
  CI (99.9%): [2292938.308, 2538826.834] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 13.73% complete, ETA 01:26:58
# Fork: 1 of 1
# Warmup Iteration   1: 205716.551 ns/op
# Warmup Iteration   2: 66981.349 ns/op
# Warmup Iteration   3: 59295.977 ns/op
# Warmup Iteration   4: 59508.792 ns/op
Iteration   1: 58852.125 ns/op
Iteration   2: 58721.103 ns/op
Iteration   3: 59096.662 ns/op
Iteration   4: 58894.260 ns/op
Iteration   5: 58705.293 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  58853.889 ±(99.9%) 609.705 ns/op [Average]
  (min, avg, max) = (58705.293, 58853.889, 59096.662), stdev = 158.338
  CI (99.9%): [58244.184, 59463.594] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 13.92% complete, ETA 01:26:45
# Fork: 1 of 1
# Warmup Iteration   1: 320679.775 ns/op
# Warmup Iteration   2: 128094.168 ns/op
# Warmup Iteration   3: 109718.694 ns/op
# Warmup Iteration   4: 109875.945 ns/op
Iteration   1: 109691.079 ns/op
Iteration   2: 109436.031 ns/op
Iteration   3: 111078.768 ns/op
Iteration   4: 109101.801 ns/op
Iteration   5: 109604.587 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  109782.453 ±(99.9%) 2922.251 ns/op [Average]
  (min, avg, max) = (109101.801, 109782.453, 111078.768), stdev = 758.899
  CI (99.9%): [106860.202, 112704.704] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 14.12% complete, ETA 01:26:33
# Fork: 1 of 1
# Warmup Iteration   1: 852741.467 ns/op
# Warmup Iteration   2: 244923.902 ns/op
# Warmup Iteration   3: 221486.149 ns/op
# Warmup Iteration   4: 216271.305 ns/op
Iteration   1: 213369.448 ns/op
Iteration   2: 214084.274 ns/op
Iteration   3: 215227.864 ns/op
Iteration   4: 213728.256 ns/op
Iteration   5: 213473.117 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  213976.592 ±(99.9%) 2895.072 ns/op [Average]
  (min, avg, max) = (213369.448, 213976.592, 215227.864), stdev = 751.841
  CI (99.9%): [211081.520, 216871.664] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 14.31% complete, ETA 01:26:21
# Fork: 1 of 1
# Warmup Iteration   1: 3068390.682 ns/op
# Warmup Iteration   2: 650136.687 ns/op
# Warmup Iteration   3: 520461.399 ns/op
# Warmup Iteration   4: 515662.779 ns/op
Iteration   1: 495549.130 ns/op
Iteration   2: 497696.417 ns/op
Iteration   3: 494096.350 ns/op
Iteration   4: 492816.078 ns/op
Iteration   5: 488706.415 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  493772.878 ±(99.9%) 12949.615 ns/op [Average]
  (min, avg, max) = (488706.415, 493772.878, 497696.417), stdev = 3362.974
  CI (99.9%): [480823.263, 506722.494] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 14.51% complete, ETA 01:26:09
# Fork: 1 of 1
# Warmup Iteration   1: 17342946.088 ns/op
# Warmup Iteration   2: 5218427.318 ns/op
# Warmup Iteration   3: 4921426.172 ns/op
# Warmup Iteration   4: 4821163.070 ns/op
Iteration   1: 4819895.477 ns/op
Iteration   2: 4903429.556 ns/op
Iteration   3: 4856497.035 ns/op
Iteration   4: 4836813.078 ns/op
Iteration   5: 4885981.476 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  4860523.324 ±(99.9%) 132246.931 ns/op [Average]
  (min, avg, max) = (4819895.477, 4860523.324, 4903429.556), stdev = 34344.108
  CI (99.9%): [4728276.394, 4992770.255] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 14.71% complete, ETA 01:25:58
# Fork: 1 of 1
# Warmup Iteration   1: 206616.069 ns/op
# Warmup Iteration   2: 62361.150 ns/op
# Warmup Iteration   3: 57993.799 ns/op
# Warmup Iteration   4: 57990.790 ns/op
Iteration   1: 57434.812 ns/op
Iteration   2: 57422.841 ns/op
Iteration   3: 57489.265 ns/op
Iteration   4: 57225.899 ns/op
Iteration   5: 57905.388 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  57495.641 ±(99.9%) 962.072 ns/op [Average]
  (min, avg, max) = (57225.899, 57495.641, 57905.388), stdev = 249.847
  CI (99.9%): [56533.570, 58457.713] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 14.90% complete, ETA 01:25:46
# Fork: 1 of 1
# Warmup Iteration   1: 386279.654 ns/op
# Warmup Iteration   2: 118147.939 ns/op
# Warmup Iteration   3: 110280.483 ns/op
# Warmup Iteration   4: 106687.363 ns/op
Iteration   1: 107713.284 ns/op
Iteration   2: 106947.853 ns/op
Iteration   3: 111666.789 ns/op
Iteration   4: 108476.298 ns/op
Iteration   5: 106959.188 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  108352.683 ±(99.9%) 7536.544 ns/op [Average]
  (min, avg, max) = (106947.853, 108352.683, 111666.789), stdev = 1957.217
  CI (99.9%): [100816.138, 115889.227] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 15.10% complete, ETA 01:25:33
# Fork: 1 of 1
# Warmup Iteration   1: 766553.970 ns/op
# Warmup Iteration   2: 240574.612 ns/op
# Warmup Iteration   3: 213209.328 ns/op
# Warmup Iteration   4: 210595.178 ns/op
Iteration   1: 210909.236 ns/op
Iteration   2: 209224.485 ns/op
Iteration   3: 211475.580 ns/op
Iteration   4: 210607.798 ns/op
Iteration   5: 211259.997 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  210695.419 ±(99.9%) 3414.091 ns/op [Average]
  (min, avg, max) = (209224.485, 210695.419, 211475.580), stdev = 886.629
  CI (99.9%): [207281.329, 214109.510] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 15.29% complete, ETA 01:25:21
# Fork: 1 of 1
# Warmup Iteration   1: 1831255.071 ns/op
# Warmup Iteration   2: 498428.786 ns/op
# Warmup Iteration   3: 482052.211 ns/op
# Warmup Iteration   4: 494972.673 ns/op
Iteration   1: 474319.009 ns/op
Iteration   2: 478504.031 ns/op
Iteration   3: 475339.515 ns/op
Iteration   4: 474842.654 ns/op
Iteration   5: 477553.752 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  476111.792 ±(99.9%) 7001.200 ns/op [Average]
  (min, avg, max) = (474319.009, 476111.792, 478504.031), stdev = 1818.189
  CI (99.9%): [469110.592, 483112.993] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 15.49% complete, ETA 01:25:09
# Fork: 1 of 1
# Warmup Iteration   1: 15809067.920 ns/op
# Warmup Iteration   2: 5043945.701 ns/op
# Warmup Iteration   3: 4796776.893 ns/op
# Warmup Iteration   4: 4822248.902 ns/op
Iteration   1: 4787006.983 ns/op
Iteration   2: 4856200.322 ns/op
Iteration   3: 4816455.776 ns/op
Iteration   4: 4879645.036 ns/op
Iteration   5: 4842003.945 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  4836262.412 ±(99.9%) 137911.897 ns/op [Average]
  (min, avg, max) = (4787006.983, 4836262.412, 4879645.036), stdev = 35815.282
  CI (99.9%): [4698350.515, 4974174.310] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 15.69% complete, ETA 01:24:58
# Fork: 1 of 1
# Warmup Iteration   1: 30388.680 ns/op
# Warmup Iteration   2: 16729.490 ns/op
# Warmup Iteration   3: 14884.890 ns/op
# Warmup Iteration   4: 14833.421 ns/op
Iteration   1: 14884.834 ns/op
Iteration   2: 14959.912 ns/op
Iteration   3: 14840.837 ns/op
Iteration   4: 14829.686 ns/op
Iteration   5: 14778.677 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14858.789 ±(99.9%) 261.811 ns/op [Average]
  (min, avg, max) = (14778.677, 14858.789, 14959.912), stdev = 67.991
  CI (99.9%): [14596.979, 15120.600] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 15.88% complete, ETA 01:24:46
# Fork: 1 of 1
# Warmup Iteration   1: 141279.954 ns/op
# Warmup Iteration   2: 31654.714 ns/op
# Warmup Iteration   3: 31087.688 ns/op
# Warmup Iteration   4: 27168.535 ns/op
Iteration   1: 27211.042 ns/op
Iteration   2: 27225.512 ns/op
Iteration   3: 27249.512 ns/op
Iteration   4: 27721.665 ns/op
Iteration   5: 27305.751 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  27342.696 ±(99.9%) 827.508 ns/op [Average]
  (min, avg, max) = (27211.042, 27342.696, 27721.665), stdev = 214.901
  CI (99.9%): [26515.188, 28170.205] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 16.08% complete, ETA 01:24:34
# Fork: 1 of 1
# Warmup Iteration   1: 165306.962 ns/op
# Warmup Iteration   2: 63443.377 ns/op
# Warmup Iteration   3: 58365.481 ns/op
# Warmup Iteration   4: 57807.263 ns/op
Iteration   1: 56568.012 ns/op
Iteration   2: 56730.207 ns/op
Iteration   3: 56872.331 ns/op
Iteration   4: 56734.376 ns/op
Iteration   5: 56763.215 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  56733.628 ±(99.9%) 419.857 ns/op [Average]
  (min, avg, max) = (56568.012, 56733.628, 56872.331), stdev = 109.035
  CI (99.9%): [56313.771, 57153.485] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 16.27% complete, ETA 01:24:23
# Fork: 1 of 1
# Warmup Iteration   1: 407175.158 ns/op
# Warmup Iteration   2: 145556.483 ns/op
# Warmup Iteration   3: 131449.919 ns/op
# Warmup Iteration   4: 129494.378 ns/op
Iteration   1: 129229.949 ns/op
Iteration   2: 132856.342 ns/op
Iteration   3: 129456.014 ns/op
Iteration   4: 129349.924 ns/op
Iteration   5: 129407.229 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  130059.891 ±(99.9%) 6028.328 ns/op [Average]
  (min, avg, max) = (129229.949, 130059.891, 132856.342), stdev = 1565.538
  CI (99.9%): [124031.564, 136088.219] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 16.47% complete, ETA 01:24:11
# Fork: 1 of 1
# Warmup Iteration   1: 2898165.927 ns/op
# Warmup Iteration   2: 1317579.165 ns/op
# Warmup Iteration   3: 1206043.888 ns/op
# Warmup Iteration   4: 1200865.126 ns/op
Iteration   1: 1191103.575 ns/op
Iteration   2: 1194335.143 ns/op
Iteration   3: 1208783.357 ns/op
Iteration   4: 1185251.835 ns/op
Iteration   5: 1185572.009 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1193009.184 ±(99.9%) 37019.396 ns/op [Average]
  (min, avg, max) = (1185251.835, 1193009.184, 1208783.357), stdev = 9613.820
  CI (99.9%): [1155989.788, 1230028.580] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 16.67% complete, ETA 01:23:59
# Fork: 1 of 1
# Warmup Iteration   1: 26409.446 ns/op
# Warmup Iteration   2: 15429.498 ns/op
# Warmup Iteration   3: 14586.579 ns/op
# Warmup Iteration   4: 14123.409 ns/op
Iteration   1: 14118.732 ns/op
Iteration   2: 14151.753 ns/op
Iteration   3: 14139.386 ns/op
Iteration   4: 14126.190 ns/op
Iteration   5: 14133.644 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14133.941 ±(99.9%) 48.647 ns/op [Average]
  (min, avg, max) = (14118.732, 14133.941, 14151.753), stdev = 12.633
  CI (99.9%): [14085.294, 14182.588] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 16.86% complete, ETA 01:23:47
# Fork: 1 of 1
# Warmup Iteration   1: 70020.800 ns/op
# Warmup Iteration   2: 29549.229 ns/op
# Warmup Iteration   3: 27095.338 ns/op
# Warmup Iteration   4: 26553.015 ns/op
Iteration   1: 27216.774 ns/op
Iteration   2: 26543.654 ns/op
Iteration   3: 26660.960 ns/op
Iteration   4: 26565.522 ns/op
Iteration   5: 27235.125 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  26844.407 ±(99.9%) 1352.119 ns/op [Average]
  (min, avg, max) = (26543.654, 26844.407, 27235.125), stdev = 351.141
  CI (99.9%): [25492.288, 28196.526] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 17.06% complete, ETA 01:23:35
# Fork: 1 of 1
# Warmup Iteration   1: 123292.695 ns/op
# Warmup Iteration   2: 57986.168 ns/op
# Warmup Iteration   3: 55834.197 ns/op
# Warmup Iteration   4: 55714.136 ns/op
Iteration   1: 52717.095 ns/op
Iteration   2: 52695.168 ns/op
Iteration   3: 52589.538 ns/op
Iteration   4: 52709.228 ns/op
Iteration   5: 52921.764 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  52726.559 ±(99.9%) 464.697 ns/op [Average]
  (min, avg, max) = (52589.538, 52726.559, 52921.764), stdev = 120.680
  CI (99.9%): [52261.862, 53191.255] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 17.25% complete, ETA 01:23:23
# Fork: 1 of 1
# Warmup Iteration   1: 281241.894 ns/op
# Warmup Iteration   2: 126157.466 ns/op
# Warmup Iteration   3: 116153.844 ns/op
# Warmup Iteration   4: 115731.937 ns/op
Iteration   1: 117573.251 ns/op
Iteration   2: 115553.505 ns/op
Iteration   3: 116219.292 ns/op
Iteration   4: 116068.884 ns/op
Iteration   5: 114859.860 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  116054.958 ±(99.9%) 3856.477 ns/op [Average]
  (min, avg, max) = (114859.860, 116054.958, 117573.251), stdev = 1001.515
  CI (99.9%): [112198.482, 119911.435] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 17.45% complete, ETA 01:23:12
# Fork: 1 of 1
# Warmup Iteration   1: 3203192.576 ns/op
# Warmup Iteration   2: 1182105.849 ns/op
# Warmup Iteration   3: 1130941.170 ns/op
# Warmup Iteration   4: 1100356.460 ns/op
Iteration   1: 1088665.457 ns/op
Iteration   2: 1088464.001 ns/op
Iteration   3: 1091858.936 ns/op
Iteration   4: 1107411.538 ns/op
Iteration   5: 1136433.040 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1102566.594 ±(99.9%) 78848.653 ns/op [Average]
  (min, avg, max) = (1088464.001, 1102566.594, 1136433.040), stdev = 20476.745
  CI (99.9%): [1023717.941, 1181415.248] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 17.65% complete, ETA 01:23:00
# Fork: 1 of 1
# Warmup Iteration   1: 31853.958 ns/op
# Warmup Iteration   2: 15323.871 ns/op
# Warmup Iteration   3: 14821.698 ns/op
# Warmup Iteration   4: 14305.469 ns/op
Iteration   1: 14385.652 ns/op
Iteration   2: 14346.024 ns/op
Iteration   3: 14348.740 ns/op
Iteration   4: 14397.147 ns/op
Iteration   5: 14357.756 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14367.064 ±(99.9%) 88.556 ns/op [Average]
  (min, avg, max) = (14346.024, 14367.064, 14397.147), stdev = 22.998
  CI (99.9%): [14278.507, 14455.620] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 17.84% complete, ETA 01:22:49
# Fork: 1 of 1
# Warmup Iteration   1: 84892.959 ns/op
# Warmup Iteration   2: 29035.197 ns/op
# Warmup Iteration   3: 27501.796 ns/op
# Warmup Iteration   4: 27854.623 ns/op
Iteration   1: 26674.854 ns/op
Iteration   2: 26582.694 ns/op
Iteration   3: 26594.977 ns/op
Iteration   4: 26638.937 ns/op
Iteration   5: 27647.898 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  26827.872 ±(99.9%) 1770.778 ns/op [Average]
  (min, avg, max) = (26582.694, 26827.872, 27647.898), stdev = 459.866
  CI (99.9%): [25057.094, 28598.650] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 18.04% complete, ETA 01:22:37
# Fork: 1 of 1
# Warmup Iteration   1: 136135.801 ns/op
# Warmup Iteration   2: 56933.482 ns/op
# Warmup Iteration   3: 54856.133 ns/op
# Warmup Iteration   4: 54237.405 ns/op
Iteration   1: 53491.166 ns/op
Iteration   2: 53422.952 ns/op
Iteration   3: 53370.007 ns/op
Iteration   4: 53517.009 ns/op
Iteration   5: 53952.176 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  53550.662 ±(99.9%) 892.387 ns/op [Average]
  (min, avg, max) = (53370.007, 53550.662, 53952.176), stdev = 231.750
  CI (99.9%): [52658.275, 54443.048] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 18.24% complete, ETA 01:22:25
# Fork: 1 of 1
# Warmup Iteration   1: 327619.209 ns/op
# Warmup Iteration   2: 130161.279 ns/op
# Warmup Iteration   3: 120077.995 ns/op
# Warmup Iteration   4: 118839.543 ns/op
Iteration   1: 119056.666 ns/op
Iteration   2: 119205.897 ns/op
Iteration   3: 119299.966 ns/op
Iteration   4: 118831.693 ns/op
Iteration   5: 119120.287 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  119102.902 ±(99.9%) 681.891 ns/op [Average]
  (min, avg, max) = (118831.693, 119102.902, 119299.966), stdev = 177.085
  CI (99.9%): [118421.011, 119784.793] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 18.43% complete, ETA 01:22:14
# Fork: 1 of 1
# Warmup Iteration   1: 2312359.024 ns/op
# Warmup Iteration   2: 1192256.646 ns/op
# Warmup Iteration   3: 1088662.813 ns/op
# Warmup Iteration   4: 1100635.195 ns/op
Iteration   1: 1077066.579 ns/op
Iteration   2: 1073863.388 ns/op
Iteration   3: 1071853.268 ns/op
Iteration   4: 1095753.933 ns/op
Iteration   5: 1076027.575 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1078912.949 ±(99.9%) 37068.842 ns/op [Average]
  (min, avg, max) = (1071853.268, 1078912.949, 1095753.933), stdev = 9626.661
  CI (99.9%): [1041844.106, 1115981.791] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 18.63% complete, ETA 01:22:03
# Fork: 1 of 1
# Warmup Iteration   1: 8656.863 ns/op
# Warmup Iteration   2: 6316.754 ns/op
# Warmup Iteration   3: 5822.286 ns/op
# Warmup Iteration   4: 5791.085 ns/op
Iteration   1: 5782.056 ns/op
Iteration   2: 5736.628 ns/op
Iteration   3: 5717.509 ns/op
Iteration   4: 5811.153 ns/op
Iteration   5: 5891.288 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  5787.727 ±(99.9%) 264.321 ns/op [Average]
  (min, avg, max) = (5717.509, 5787.727, 5891.288), stdev = 68.643
  CI (99.9%): [5523.406, 6052.047] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 18.82% complete, ETA 01:21:51
# Fork: 1 of 1
# Warmup Iteration   1: 18880.899 ns/op
# Warmup Iteration   2: 11587.104 ns/op
# Warmup Iteration   3: 10807.261 ns/op
# Warmup Iteration   4: 10828.337 ns/op
Iteration   1: 10795.091 ns/op
Iteration   2: 10723.026 ns/op
Iteration   3: 10706.920 ns/op
Iteration   4: 10808.127 ns/op
Iteration   5: 10802.419 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  10767.116 ±(99.9%) 185.454 ns/op [Average]
  (min, avg, max) = (10706.920, 10767.116, 10808.127), stdev = 48.162
  CI (99.9%): [10581.662, 10952.571] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 19.02% complete, ETA 01:21:39
# Fork: 1 of 1
# Warmup Iteration   1: 32697.159 ns/op
# Warmup Iteration   2: 21252.453 ns/op
# Warmup Iteration   3: 19965.140 ns/op
# Warmup Iteration   4: 19859.058 ns/op
Iteration   1: 19831.335 ns/op
Iteration   2: 19711.792 ns/op
Iteration   3: 19686.984 ns/op
Iteration   4: 19775.265 ns/op
Iteration   5: 19791.294 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  19759.334 ±(99.9%) 227.434 ns/op [Average]
  (min, avg, max) = (19686.984, 19759.334, 19831.335), stdev = 59.064
  CI (99.9%): [19531.900, 19986.769] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 19.22% complete, ETA 01:21:26
# Fork: 1 of 1
# Warmup Iteration   1: 75347.502 ns/op
# Warmup Iteration   2: 48968.514 ns/op
# Warmup Iteration   3: 46150.202 ns/op
# Warmup Iteration   4: 45760.066 ns/op
Iteration   1: 46017.142 ns/op
Iteration   2: 46012.773 ns/op
Iteration   3: 45639.323 ns/op
Iteration   4: 46345.227 ns/op
Iteration   5: 45465.185 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  45895.930 ±(99.9%) 1336.124 ns/op [Average]
  (min, avg, max) = (45465.185, 45895.930, 46345.227), stdev = 346.987
  CI (99.9%): [44559.806, 47232.054] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 19.41% complete, ETA 01:21:14
# Fork: 1 of 1
# Warmup Iteration   1: 670327.130 ns/op
# Warmup Iteration   2: 472037.023 ns/op
# Warmup Iteration   3: 429167.551 ns/op
# Warmup Iteration   4: 415166.108 ns/op
Iteration   1: 413423.171 ns/op
Iteration   2: 416927.871 ns/op
Iteration   3: 410795.263 ns/op
Iteration   4: 411242.920 ns/op
Iteration   5: 418655.127 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  414208.871 ±(99.9%) 13370.812 ns/op [Average]
  (min, avg, max) = (410795.263, 414208.871, 418655.127), stdev = 3472.357
  CI (99.9%): [400838.058, 427579.683] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 19.61% complete, ETA 01:21:02
# Fork: 1 of 1
# Warmup Iteration   1: 7364.078 ns/op
# Warmup Iteration   2: 4543.663 ns/op
# Warmup Iteration   3: 3877.134 ns/op
# Warmup Iteration   4: 3858.976 ns/op
Iteration   1: 3855.621 ns/op
Iteration   2: 3874.772 ns/op
Iteration   3: 3872.491 ns/op
Iteration   4: 3998.966 ns/op
Iteration   5: 3873.874 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3895.145 ±(99.9%) 225.532 ns/op [Average]
  (min, avg, max) = (3855.621, 3895.145, 3998.966), stdev = 58.570
  CI (99.9%): [3669.613, 4120.676] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 19.80% complete, ETA 01:20:50
# Fork: 1 of 1
# Warmup Iteration   1: 19536.975 ns/op
# Warmup Iteration   2: 8352.994 ns/op
# Warmup Iteration   3: 7638.149 ns/op
# Warmup Iteration   4: 7661.947 ns/op
Iteration   1: 7618.946 ns/op
Iteration   2: 7863.370 ns/op
Iteration   3: 7953.551 ns/op
Iteration   4: 7647.368 ns/op
Iteration   5: 7617.347 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  7740.116 ±(99.9%) 606.102 ns/op [Average]
  (min, avg, max) = (7617.347, 7740.116, 7953.551), stdev = 157.403
  CI (99.9%): [7134.015, 8346.218] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 20.00% complete, ETA 01:20:38
# Fork: 1 of 1
# Warmup Iteration   1: 39166.541 ns/op
# Warmup Iteration   2: 16275.163 ns/op
# Warmup Iteration   3: 14852.082 ns/op
# Warmup Iteration   4: 14790.455 ns/op
Iteration   1: 15687.404 ns/op
Iteration   2: 14686.116 ns/op
Iteration   3: 14665.773 ns/op
Iteration   4: 14710.316 ns/op
Iteration   5: 14717.481 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14893.418 ±(99.9%) 1710.927 ns/op [Average]
  (min, avg, max) = (14665.773, 14893.418, 15687.404), stdev = 444.322
  CI (99.9%): [13182.491, 16604.345] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 20.20% complete, ETA 01:20:26
# Fork: 1 of 1
# Warmup Iteration   1: 101687.436 ns/op
# Warmup Iteration   2: 34761.788 ns/op
# Warmup Iteration   3: 32498.642 ns/op
# Warmup Iteration   4: 30902.723 ns/op
Iteration   1: 31312.133 ns/op
Iteration   2: 31155.591 ns/op
Iteration   3: 31024.487 ns/op
Iteration   4: 30962.881 ns/op
Iteration   5: 30961.279 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  31083.274 ±(99.9%) 579.005 ns/op [Average]
  (min, avg, max) = (30961.279, 31083.274, 31312.133), stdev = 150.366
  CI (99.9%): [30504.270, 31662.279] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 20.39% complete, ETA 01:20:14
# Fork: 1 of 1
# Warmup Iteration   1: 508834.437 ns/op
# Warmup Iteration   2: 356645.599 ns/op
# Warmup Iteration   3: 297729.848 ns/op
# Warmup Iteration   4: 296651.068 ns/op
Iteration   1: 297021.753 ns/op
Iteration   2: 297681.655 ns/op
Iteration   3: 296710.631 ns/op
Iteration   4: 296063.554 ns/op
Iteration   5: 297890.616 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  297073.642 ±(99.9%) 2850.436 ns/op [Average]
  (min, avg, max) = (296063.554, 297073.642, 297890.616), stdev = 740.249
  CI (99.9%): [294223.206, 299924.078] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 20.59% complete, ETA 01:20:02
# Fork: 1 of 1
# Warmup Iteration   1: 12142.314 ns/op
# Warmup Iteration   2: 5877.522 ns/op
# Warmup Iteration   3: 4989.751 ns/op
# Warmup Iteration   4: 4990.077 ns/op
Iteration   1: 5002.242 ns/op
Iteration   2: 4998.084 ns/op
Iteration   3: 5012.398 ns/op
Iteration   4: 5010.436 ns/op
Iteration   5: 5004.349 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  5005.502 ±(99.9%) 22.689 ns/op [Average]
  (min, avg, max) = (4998.084, 5005.502, 5012.398), stdev = 5.892
  CI (99.9%): [4982.813, 5028.191] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 20.78% complete, ETA 01:19:52
# Fork: 1 of 1
# Warmup Iteration   1: 21051.902 ns/op
# Warmup Iteration   2: 9461.169 ns/op
# Warmup Iteration   3: 8787.393 ns/op
# Warmup Iteration   4: 8812.752 ns/op
Iteration   1: 9099.797 ns/op
Iteration   2: 8770.260 ns/op
Iteration   3: 8806.385 ns/op
Iteration   4: 8771.609 ns/op
Iteration   5: 8832.953 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8856.201 ±(99.9%) 533.918 ns/op [Average]
  (min, avg, max) = (8770.260, 8856.201, 9099.797), stdev = 138.657
  CI (99.9%): [8322.283, 9390.119] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 20.98% complete, ETA 01:19:39
# Fork: 1 of 1
# Warmup Iteration   1: 68821.156 ns/op
# Warmup Iteration   2: 19281.408 ns/op
# Warmup Iteration   3: 17663.979 ns/op
# Warmup Iteration   4: 17363.996 ns/op
Iteration   1: 17330.722 ns/op
Iteration   2: 18669.980 ns/op
Iteration   3: 17388.572 ns/op
Iteration   4: 17405.673 ns/op
Iteration   5: 17361.144 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  17631.218 ±(99.9%) 2238.688 ns/op [Average]
  (min, avg, max) = (17330.722, 17631.218, 18669.980), stdev = 581.380
  CI (99.9%): [15392.530, 19869.906] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 21.18% complete, ETA 01:19:27
# Fork: 1 of 1
# Warmup Iteration   1: 117799.214 ns/op
# Warmup Iteration   2: 41775.047 ns/op
# Warmup Iteration   3: 38789.155 ns/op
# Warmup Iteration   4: 38403.168 ns/op
Iteration   1: 39573.336 ns/op
Iteration   2: 38030.473 ns/op
Iteration   3: 38470.075 ns/op
Iteration   4: 38161.368 ns/op
Iteration   5: 38280.214 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  38503.093 ±(99.9%) 2386.414 ns/op [Average]
  (min, avg, max) = (38030.473, 38503.093, 39573.336), stdev = 619.744
  CI (99.9%): [36116.679, 40889.507] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 21.37% complete, ETA 01:19:15
# Fork: 1 of 1
# Warmup Iteration   1: 728877.284 ns/op
# Warmup Iteration   2: 423502.962 ns/op
# Warmup Iteration   3: 349021.547 ns/op
# Warmup Iteration   4: 332963.987 ns/op
Iteration   1: 333882.351 ns/op
Iteration   2: 335162.580 ns/op
Iteration   3: 335505.128 ns/op
Iteration   4: 346414.600 ns/op
Iteration   5: 355192.881 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  341231.508 ±(99.9%) 35782.916 ns/op [Average]
  (min, avg, max) = (333882.351, 341231.508, 355192.881), stdev = 9292.710
  CI (99.9%): [305448.592, 377014.424] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 21.57% complete, ETA 01:19:03
# Fork: 1 of 1
# Warmup Iteration   1: 369455.078 ns/op
# Warmup Iteration   2: 115029.113 ns/op
# Warmup Iteration   3: 116024.048 ns/op
# Warmup Iteration   4: 109616.883 ns/op
Iteration   1: 109636.422 ns/op
Iteration   2: 110236.056 ns/op
Iteration   3: 110003.604 ns/op
Iteration   4: 109426.672 ns/op
Iteration   5: 109137.285 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  109688.008 ±(99.9%) 1694.077 ns/op [Average]
  (min, avg, max) = (109137.285, 109688.008, 110236.056), stdev = 439.946
  CI (99.9%): [107993.931, 111382.084] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 21.76% complete, ETA 01:18:51
# Fork: 1 of 1
# Warmup Iteration   1: 461750.718 ns/op
# Warmup Iteration   2: 218826.424 ns/op
# Warmup Iteration   3: 206597.339 ns/op
# Warmup Iteration   4: 198245.430 ns/op
Iteration   1: 198171.725 ns/op
Iteration   2: 197330.623 ns/op
Iteration   3: 196966.066 ns/op
Iteration   4: 197332.712 ns/op
Iteration   5: 198165.598 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  197593.345 ±(99.9%) 2102.420 ns/op [Average]
  (min, avg, max) = (196966.066, 197593.345, 198171.725), stdev = 545.992
  CI (99.9%): [195490.925, 199695.764] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 21.96% complete, ETA 01:18:39
# Fork: 1 of 1
# Warmup Iteration   1: 1174592.173 ns/op
# Warmup Iteration   2: 524188.135 ns/op
# Warmup Iteration   3: 510985.653 ns/op
# Warmup Iteration   4: 485680.167 ns/op
Iteration   1: 484492.698 ns/op
Iteration   2: 485417.258 ns/op
Iteration   3: 486385.451 ns/op
Iteration   4: 484375.903 ns/op
Iteration   5: 485373.843 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  485209.031 ±(99.9%) 3141.120 ns/op [Average]
  (min, avg, max) = (484375.903, 485209.031, 486385.451), stdev = 815.739
  CI (99.9%): [482067.911, 488350.151] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 22.16% complete, ETA 01:18:27
# Fork: 1 of 1
# Warmup Iteration   1: 2784808.771 ns/op
# Warmup Iteration   2: 1241357.492 ns/op
# Warmup Iteration   3: 1225149.201 ns/op
# Warmup Iteration   4: 1176490.729 ns/op
Iteration   1: 1178077.945 ns/op
Iteration   2: 1166936.058 ns/op
Iteration   3: 1163731.785 ns/op
Iteration   4: 1162684.628 ns/op
Iteration   5: 1163064.050 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1166898.893 ±(99.9%) 24915.571 ns/op [Average]
  (min, avg, max) = (1162684.628, 1166898.893, 1178077.945), stdev = 6470.495
  CI (99.9%): [1141983.322, 1191814.464] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 22.35% complete, ETA 01:18:15
# Fork: 1 of 1
# Warmup Iteration   1: 18777175.030 ns/op
# Warmup Iteration   2: 10514999.139 ns/op
# Warmup Iteration   3: 10295468.721 ns/op
# Warmup Iteration   4: 9900497.401 ns/op
Iteration   1: 9870065.019 ns/op
Iteration   2: 9938624.039 ns/op
Iteration   3: 9859297.662 ns/op
Iteration   4: 9871241.401 ns/op
Iteration   5: 9886461.823 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9885137.989 ±(99.9%) 121012.913 ns/op [Average]
  (min, avg, max) = (9859297.662, 9885137.989, 9938624.039), stdev = 31426.669
  CI (99.9%): [9764125.076, 10006150.901] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 22.55% complete, ETA 01:18:04
# Fork: 1 of 1
# Warmup Iteration   1: 4232.123 ns/op
# Warmup Iteration   2: 2593.572 ns/op
# Warmup Iteration   3: 2378.227 ns/op
# Warmup Iteration   4: 2391.640 ns/op
Iteration   1: 2418.137 ns/op
Iteration   2: 2371.254 ns/op
Iteration   3: 2384.243 ns/op
Iteration   4: 2381.886 ns/op
Iteration   5: 2364.754 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2384.055 ±(99.9%) 79.447 ns/op [Average]
  (min, avg, max) = (2364.754, 2384.055, 2418.137), stdev = 20.632
  CI (99.9%): [2304.608, 2463.502] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 22.75% complete, ETA 01:17:51
# Fork: 1 of 1
# Warmup Iteration   1: 8154.633 ns/op
# Warmup Iteration   2: 5425.781 ns/op
# Warmup Iteration   3: 4756.529 ns/op
# Warmup Iteration   4: 4778.519 ns/op
Iteration   1: 4739.026 ns/op
Iteration   2: 4753.985 ns/op
Iteration   3: 4892.273 ns/op
Iteration   4: 4767.519 ns/op
Iteration   5: 4777.104 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4785.981 ±(99.9%) 235.379 ns/op [Average]
  (min, avg, max) = (4739.026, 4785.981, 4892.273), stdev = 61.127
  CI (99.9%): [4550.602, 5021.360] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 22.94% complete, ETA 01:17:39
# Fork: 1 of 1
# Warmup Iteration   1: 15824.346 ns/op
# Warmup Iteration   2: 10512.508 ns/op
# Warmup Iteration   3: 9245.728 ns/op
# Warmup Iteration   4: 9673.609 ns/op
Iteration   1: 9254.821 ns/op
Iteration   2: 9289.407 ns/op
Iteration   3: 9192.891 ns/op
Iteration   4: 9190.646 ns/op
Iteration   5: 9486.180 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9282.789 ±(99.9%) 466.730 ns/op [Average]
  (min, avg, max) = (9190.646, 9282.789, 9486.180), stdev = 121.208
  CI (99.9%): [8816.059, 9749.519] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 23.14% complete, ETA 01:17:27
# Fork: 1 of 1
# Warmup Iteration   1: 35848.137 ns/op
# Warmup Iteration   2: 20688.592 ns/op
# Warmup Iteration   3: 20687.147 ns/op
# Warmup Iteration   4: 18741.701 ns/op
Iteration   1: 19226.779 ns/op
Iteration   2: 18784.942 ns/op
Iteration   3: 18787.036 ns/op
Iteration   4: 18794.354 ns/op
Iteration   5: 18797.571 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  18878.136 ±(99.9%) 750.744 ns/op [Average]
  (min, avg, max) = (18784.942, 18878.136, 19226.779), stdev = 194.966
  CI (99.9%): [18127.393, 19628.880] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 23.33% complete, ETA 01:17:15
# Fork: 1 of 1
# Warmup Iteration   1: 345653.895 ns/op
# Warmup Iteration   2: 200293.126 ns/op
# Warmup Iteration   3: 191342.716 ns/op
# Warmup Iteration   4: 198533.970 ns/op
Iteration   1: 192020.040 ns/op
Iteration   2: 191918.766 ns/op
Iteration   3: 191680.399 ns/op
Iteration   4: 191845.533 ns/op
Iteration   5: 192675.490 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  192028.046 ±(99.9%) 1473.041 ns/op [Average]
  (min, avg, max) = (191680.399, 192028.046, 192675.490), stdev = 382.544
  CI (99.9%): [190555.004, 193501.087] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 23.53% complete, ETA 01:17:03
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
41774.856 ns/op
# Warmup Iteration   2: 31869.194 ns/op
# Warmup Iteration   3: 30191.085 ns/op
# Warmup Iteration   4: 29551.676 ns/op
Iteration   1: 29924.938 ns/op
Iteration   2: 31540.554 ns/op
Iteration   3: 30503.457 ns/op
Iteration   4: 31732.218 ns/op
Iteration   5: 30620.085 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  30864.251 ±(99.9%) 2908.990 ns/op [Average]
  (min, avg, max) = (29924.938, 30864.251, 31732.218), stdev = 755.455
  CI (99.9%): [27955.261, 33773.240] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 23.73% complete, ETA 01:16:51
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
73868.666 ns/op
# Warmup Iteration   2: 72316.764 ns/op
# Warmup Iteration   3: 65084.798 ns/op
# Warmup Iteration   4: 61853.346 ns/op
Iteration   1: 61623.357 ns/op
Iteration   2: 60690.654 ns/op
Iteration   3: 59711.031 ns/op
Iteration   4: 61213.052 ns/op
Iteration   5: 61047.690 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  60857.157 ±(99.9%) 2784.308 ns/op [Average]
  (min, avg, max) = (59711.031, 60857.157, 61623.357), stdev = 723.076
  CI (99.9%): [58072.849, 63641.464] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 23.92% complete, ETA 01:16:39
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
161601.899 ns/op
# Warmup Iteration   2: 125358.535 ns/op
# Warmup Iteration   3: 126729.442 ns/op
# Warmup Iteration   4: 137980.602 ns/op
Iteration   1: 142583.309 ns/op
Iteration   2: 123214.806 ns/op
Iteration   3: 126432.490 ns/op
Iteration   4: 129704.352 ns/op
Iteration   5: 119932.022 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  128373.395 ±(99.9%) 33642.379 ns/op [Average]
  (min, avg, max) = (119932.022, 128373.395, 142583.309), stdev = 8736.819
  CI (99.9%): [94731.016, 162015.775] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 24.12% complete, ETA 01:16:27
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
359419.783 ns/op
# Warmup Iteration   2: 277161.465 ns/op
# Warmup Iteration   3: 278606.441 ns/op
# Warmup Iteration   4: 281358.407 ns/op
Iteration   1: 292455.384 ns/op
Iteration   2: 276208.857 ns/op
Iteration   3: 274741.928 ns/op
Iteration   4: 322514.059 ns/op
Iteration   5: 305565.967 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  294297.239 ±(99.9%) 77878.389 ns/op [Average]
  (min, avg, max) = (274741.928, 294297.239, 322514.059), stdev = 20224.770
  CI (99.9%): [216418.850, 372175.628] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 24.31% complete, ETA 01:16:15
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
3339817.441 ns/op
# Warmup Iteration   2: 2688791.130 ns/op
# Warmup Iteration   3: 2682726.611 ns/op
# Warmup Iteration   4: 2495521.412 ns/op
Iteration   1: 2544831.229 ns/op
Iteration   2: 2614951.474 ns/op
Iteration   3: 2598390.008 ns/op
Iteration   4: 2572860.914 ns/op
Iteration   5: 2593683.501 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2584943.425 ±(99.9%) 103907.790 ns/op [Average]
  (min, avg, max) = (2544831.229, 2584943.425, 2614951.474), stdev = 26984.523
  CI (99.9%): [2481035.636, 2688851.215] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 24.51% complete, ETA 01:16:04
# Fork: 1 of 1
# Warmup Iteration   1: 11744.436 ns/op
# Warmup Iteration   2: 6799.204 ns/op
# Warmup Iteration   3: 6569.176 ns/op
# Warmup Iteration   4: 6597.543 ns/op
Iteration   1: 6647.301 ns/op
Iteration   2: 6582.461 ns/op
Iteration   3: 6586.450 ns/op
Iteration   4: 6575.959 ns/op
Iteration   5: 6549.148 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  6588.264 ±(99.9%) 138.888 ns/op [Average]
  (min, avg, max) = (6549.148, 6588.264, 6647.301), stdev = 36.069
  CI (99.9%): [6449.376, 6727.152] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 24.71% complete, ETA 01:15:51
# Fork: 1 of 1
# Warmup Iteration   1: 19646.835 ns/op
# Warmup Iteration   2: 11748.138 ns/op
# Warmup Iteration   3: 11733.368 ns/op
# Warmup Iteration   4: 11884.270 ns/op
Iteration   1: 11488.215 ns/op
Iteration   2: 11486.144 ns/op
Iteration   3: 11535.156 ns/op
Iteration   4: 11472.133 ns/op
Iteration   5: 11471.901 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  11490.710 ±(99.9%) 100.069 ns/op [Average]
  (min, avg, max) = (11471.901, 11490.710, 11535.156), stdev = 25.988
  CI (99.9%): [11390.641, 11590.779] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 24.90% complete, ETA 01:15:40
# Fork: 1 of 1
# Warmup Iteration   1: 51088.597 ns/op
# Warmup Iteration   2: 25535.841 ns/op
# Warmup Iteration   3: 25533.905 ns/op
# Warmup Iteration   4: 25520.802 ns/op
Iteration   1: 25381.257 ns/op
Iteration   2: 24442.411 ns/op
Iteration   3: 24436.692 ns/op
Iteration   4: 24489.526 ns/op
Iteration   5: 24500.487 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  24650.075 ±(99.9%) 1577.633 ns/op [Average]
  (min, avg, max) = (24436.692, 24650.075, 25381.257), stdev = 409.706
  CI (99.9%): [23072.442, 26227.708] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 25.10% complete, ETA 01:15:27
# Fork: 1 of 1
# Warmup Iteration   1: 104237.966 ns/op
# Warmup Iteration   2: 53439.725 ns/op
# Warmup Iteration   3: 53225.891 ns/op
# Warmup Iteration   4: 52544.665 ns/op
Iteration   1: 54244.908 ns/op
Iteration   2: 51058.435 ns/op
Iteration   3: 50722.749 ns/op
Iteration   4: 50617.352 ns/op
Iteration   5: 51929.959 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  51714.681 ±(99.9%) 5797.461 ns/op [Average]
  (min, avg, max) = (50617.352, 51714.681, 54244.908), stdev = 1505.582
  CI (99.9%): [45917.220, 57512.142] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 25.29% complete, ETA 01:15:15
# Fork: 1 of 1
# Warmup Iteration   1: 822753.173 ns/op
# Warmup Iteration   2: 490223.097 ns/op
# Warmup Iteration   3: 488917.180 ns/op
# Warmup Iteration   4: 499168.971 ns/op
Iteration   1: 481651.820 ns/op
Iteration   2: 489631.004 ns/op
Iteration   3: 480449.691 ns/op
Iteration   4: 494143.436 ns/op
Iteration   5: 481464.660 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  485468.122 ±(99.9%) 23451.591 ns/op [Average]
  (min, avg, max) = (480449.691, 485468.122, 494143.436), stdev = 6090.304
  CI (99.9%): [462016.532, 508919.713] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 25.49% complete, ETA 01:15:03
# Fork: 1 of 1
# Warmup Iteration   1: 234662.482 ns/op
# Warmup Iteration   2: 162808.848 ns/op
# Warmup Iteration   3: 150433.704 ns/op
# Warmup Iteration   4: 151656.970 ns/op
Iteration   1: 147597.798 ns/op
Iteration   2: 147007.442 ns/op
Iteration   3: 148798.723 ns/op
Iteration   4: 148814.116 ns/op
Iteration   5: 147923.547 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  148028.325 ±(99.9%) 3013.306 ns/op [Average]
  (min, avg, max) = (147007.442, 148028.325, 148814.116), stdev = 782.546
  CI (99.9%): [145015.019, 151041.632] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 25.69% complete, ETA 01:14:52
# Fork: 1 of 1
# Warmup Iteration   1: 340414.631 ns/op
# Warmup Iteration   2: 221273.583 ns/op
# Warmup Iteration   3: 218420.982 ns/op
# Warmup Iteration   4: 211899.640 ns/op
Iteration   1: 208354.742 ns/op
Iteration   2: 207886.461 ns/op
Iteration   3: 207334.972 ns/op
Iteration   4: 211972.035 ns/op
Iteration   5: 206752.225 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  208460.087 ±(99.9%) 7904.754 ns/op [Average]
  (min, avg, max) = (206752.225, 208460.087, 211972.035), stdev = 2052.839
  CI (99.9%): [200555.333, 216364.840] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 25.88% complete, ETA 01:14:41
# Fork: 1 of 1
# Warmup Iteration   1: 894245.338 ns/op
# Warmup Iteration   2: 469071.714 ns/op
# Warmup Iteration   3: 451787.541 ns/op
# Warmup Iteration   4: 440071.313 ns/op
Iteration   1: 414393.821 ns/op
Iteration   2: 408929.377 ns/op
Iteration   3: 410311.559 ns/op
Iteration   4: 410213.693 ns/op
Iteration   5: 415119.334 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  411793.557 ±(99.9%) 10670.866 ns/op [Average]
  (min, avg, max) = (408929.377, 411793.557, 415119.334), stdev = 2771.190
  CI (99.9%): [401122.691, 422464.422] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 26.08% complete, ETA 01:14:29
# Fork: 1 of 1
# Warmup Iteration   1: 1786508.538 ns/op
# Warmup Iteration   2: 1010679.174 ns/op
# Warmup Iteration   3: 990210.894 ns/op
# Warmup Iteration   4: 982291.636 ns/op
Iteration   1: 950333.760 ns/op
Iteration   2: 927840.076 ns/op
Iteration   3: 938023.037 ns/op
Iteration   4: 931140.293 ns/op
Iteration   5: 930669.292 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  935601.292 ±(99.9%) 34835.671 ns/op [Average]
  (min, avg, max) = (927840.076, 935601.292, 950333.760), stdev = 9046.713
  CI (99.9%): [900765.621, 970436.962] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 26.27% complete, ETA 01:14:18
# Fork: 1 of 1
# Warmup Iteration   1: 14359637.714 ns/op
# Warmup Iteration   2: 9236029.201 ns/op
# Warmup Iteration   3: 9335004.158 ns/op
# Warmup Iteration   4: 9454627.389 ns/op
Iteration   1: 9039441.029 ns/op
Iteration   2: 9035839.080 ns/op
Iteration   3: 9042413.837 ns/op
Iteration   4: 9124969.624 ns/op
Iteration   5: 9008168.500 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9050166.414 ±(99.9%) 169381.877 ns/op [Average]
  (min, avg, max) = (9008168.500, 9050166.414, 9124969.624), stdev = 43987.935
  CI (99.9%): [8880784.537, 9219548.291] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 26.47% complete, ETA 01:14:08
# Fork: 1 of 1
# Warmup Iteration   1: 37552.548 ns/op
# Warmup Iteration   2: 21784.267 ns/op
# Warmup Iteration   3: 21859.950 ns/op
# Warmup Iteration   4: 20503.752 ns/op
Iteration   1: 19899.535 ns/op
Iteration   2: 19943.984 ns/op
Iteration   3: 19886.294 ns/op
Iteration   4: 20019.740 ns/op
Iteration   5: 19978.953 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  19945.701 ±(99.9%) 213.102 ns/op [Average]
  (min, avg, max) = (19886.294, 19945.701, 20019.740), stdev = 55.342
  CI (99.9%): [19732.599, 20158.803] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 26.67% complete, ETA 01:13:56
# Fork: 1 of 1
# Warmup Iteration   1: 94687.775 ns/op
# Warmup Iteration   2: 39530.671 ns/op
# Warmup Iteration   3: 39242.874 ns/op
# Warmup Iteration   4: 37771.456 ns/op
Iteration   1: 37411.423 ns/op
Iteration   2: 37543.996 ns/op
Iteration   3: 37298.453 ns/op
Iteration   4: 37485.416 ns/op
Iteration   5: 37505.450 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  37448.948 ±(99.9%) 373.400 ns/op [Average]
  (min, avg, max) = (37298.453, 37448.948, 37543.996), stdev = 96.971
  CI (99.9%): [37075.548, 37822.347] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 26.86% complete, ETA 01:13:44
# Fork: 1 of 1
# Warmup Iteration   1: 291693.115 ns/op
# Warmup Iteration   2: 105259.381 ns/op
# Warmup Iteration   3: 100041.609 ns/op
# Warmup Iteration   4: 108591.268 ns/op
Iteration   1: 95973.142 ns/op
Iteration   2: 96435.247 ns/op
Iteration   3: 95920.643 ns/op
Iteration   4: 95764.249 ns/op
Iteration   5: 95452.479 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  95909.152 ±(99.9%) 1375.695 ns/op [Average]
  (min, avg, max) = (95452.479, 95909.152, 96435.247), stdev = 357.264
  CI (99.9%): [94533.457, 97284.847] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 27.06% complete, ETA 01:13:32
# Fork: 1 of 1
# Warmup Iteration   1: 367861.793 ns/op
# Warmup Iteration   2: 207467.563 ns/op
# Warmup Iteration   3: 202956.737 ns/op
# Warmup Iteration   4: 194289.045 ns/op
Iteration   1: 194269.594 ns/op
Iteration   2: 195323.839 ns/op
Iteration   3: 194367.295 ns/op
Iteration   4: 198435.610 ns/op
Iteration   5: 194243.798 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  195328.027 ±(99.9%) 6908.642 ns/op [Average]
  (min, avg, max) = (194243.798, 195328.027, 198435.610), stdev = 1794.152
  CI (99.9%): [188419.385, 202236.669] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 27.25% complete, ETA 01:13:20
# Fork: 1 of 1
# Warmup Iteration   1: 3400942.013 ns/op
# Warmup Iteration   2: 1868810.994 ns/op
# Warmup Iteration   3: 1801345.304 ns/op
# Warmup Iteration   4: 1740401.937 ns/op
Iteration   1: 1736873.064 ns/op
Iteration   2: 1733804.028 ns/op
Iteration   3: 1728680.176 ns/op
Iteration   4: 1732126.503 ns/op
Iteration   5: 1736541.154 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1733604.985 ±(99.9%) 13027.005 ns/op [Average]
  (min, avg, max) = (1728680.176, 1733604.985, 1736873.064), stdev = 3383.072
  CI (99.9%): [1720577.980, 1746631.990] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 27.45% complete, ETA 01:13:08
# Fork: 1 of 1
# Warmup Iteration   1: 43302.065 ns/op
# Warmup Iteration   2: 22242.368 ns/op
# Warmup Iteration   3: 22275.196 ns/op
# Warmup Iteration   4: 20729.462 ns/op
Iteration   1: 20746.716 ns/op
Iteration   2: 20848.155 ns/op
Iteration   3: 20729.338 ns/op
Iteration   4: 20700.839 ns/op
Iteration   5: 20746.708 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  20754.351 ±(99.9%) 214.439 ns/op [Average]
  (min, avg, max) = (20700.839, 20754.351, 20848.155), stdev = 55.689
  CI (99.9%): [20539.912, 20968.790] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 27.65% complete, ETA 01:12:56
# Fork: 1 of 1
# Warmup Iteration   1: 79571.708 ns/op
# Warmup Iteration   2: 40244.440 ns/op
# Warmup Iteration   3: 39286.439 ns/op
# Warmup Iteration   4: 37192.426 ns/op
Iteration   1: 37448.214 ns/op
Iteration   2: 37317.916 ns/op
Iteration   3: 37303.769 ns/op
Iteration   4: 37265.889 ns/op
Iteration   5: 37321.462 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  37331.450 ±(99.9%) 265.257 ns/op [Average]
  (min, avg, max) = (37265.889, 37331.450, 37448.214), stdev = 68.886
  CI (99.9%): [37066.194, 37596.707] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 27.84% complete, ETA 01:12:44
# Fork: 1 of 1
# Warmup Iteration   1: 276713.906 ns/op
# Warmup Iteration   2: 99057.801 ns/op
# Warmup Iteration   3: 98400.473 ns/op
# Warmup Iteration   4: 98550.995 ns/op
Iteration   1: 99642.558 ns/op
Iteration   2: 98845.146 ns/op
Iteration   3: 98397.764 ns/op
Iteration   4: 97370.778 ns/op
Iteration   5: 97166.708 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  98284.591 ±(99.9%) 3971.871 ns/op [Average]
  (min, avg, max) = (97166.708, 98284.591, 99642.558), stdev = 1031.482
  CI (99.9%): [94312.720, 102256.461] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 28.04% complete, ETA 01:12:32
# Fork: 1 of 1
# Warmup Iteration   1: 364689.093 ns/op
# Warmup Iteration   2: 200226.013 ns/op
# Warmup Iteration   3: 193004.536 ns/op
# Warmup Iteration   4: 198661.447 ns/op
Iteration   1: 186741.756 ns/op
Iteration   2: 187584.967 ns/op
Iteration   3: 186950.953 ns/op
Iteration   4: 188181.612 ns/op
Iteration   5: 188168.645 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  187525.587 ±(99.9%) 2577.354 ns/op [Average]
  (min, avg, max) = (186741.756, 187525.587, 188181.612), stdev = 669.331
  CI (99.9%): [184948.233, 190102.941] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 28.24% complete, ETA 01:12:20
# Fork: 1 of 1
# Warmup Iteration   1: 4015748.913 ns/op
# Warmup Iteration   2: 1843169.909 ns/op
# Warmup Iteration   3: 1816636.251 ns/op
# Warmup Iteration   4: 1768037.766 ns/op
Iteration   1: 1723530.505 ns/op
Iteration   2: 1730250.703 ns/op
Iteration   3: 1721869.787 ns/op
Iteration   4: 1722330.019 ns/op
Iteration   5: 1716599.051 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1722916.013 ±(99.9%) 18816.737 ns/op [Average]
  (min, avg, max) = (1716599.051, 1722916.013, 1730250.703), stdev = 4886.647
  CI (99.9%): [1704099.277, 1741732.750] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 28.43% complete, ETA 01:12:09
# Fork: 1 of 1
# Warmup Iteration   1: 17313.897 ns/op
# Warmup Iteration   2: 11138.139 ns/op
# Warmup Iteration   3: 12422.094 ns/op
# Warmup Iteration   4: 12322.397 ns/op
Iteration   1: 12196.548 ns/op
Iteration   2: 12182.728 ns/op
Iteration   3: 12262.994 ns/op
Iteration   4: 12325.238 ns/op
Iteration   5: 12252.815 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  12244.064 ±(99.9%) 219.892 ns/op [Average]
  (min, avg, max) = (12182.728, 12244.064, 12325.238), stdev = 57.105
  CI (99.9%): [12024.172, 12463.956] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 28.63% complete, ETA 01:11:57
# Fork: 1 of 1
# Warmup Iteration   1: 40633.335 ns/op
# Warmup Iteration   2: 22192.956 ns/op
# Warmup Iteration   3: 21601.211 ns/op
# Warmup Iteration   4: 20186.857 ns/op
Iteration   1: 20304.303 ns/op
Iteration   2: 20227.524 ns/op
Iteration   3: 20404.117 ns/op
Iteration   4: 20261.666 ns/op
Iteration   5: 20293.119 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  20298.146 ±(99.9%) 255.504 ns/op [Average]
  (min, avg, max) = (20227.524, 20298.146, 20404.117), stdev = 66.354
  CI (99.9%): [20042.642, 20553.650] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 28.82% complete, ETA 01:11:45
# Fork: 1 of 1
# Warmup Iteration   1: 93724.462 ns/op
# Warmup Iteration   2: 49009.231 ns/op
# Warmup Iteration   3: 48319.539 ns/op
# Warmup Iteration   4: 46967.400 ns/op
Iteration   1: 46929.663 ns/op
Iteration   2: 47237.548 ns/op
Iteration   3: 46488.871 ns/op
Iteration   4: 46564.271 ns/op
Iteration   5: 46626.997 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  46769.470 ±(99.9%) 1196.027 ns/op [Average]
  (min, avg, max) = (46488.871, 46769.470, 47237.548), stdev = 310.604
  CI (99.9%): [45573.443, 47965.497] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 29.02% complete, ETA 01:11:33
# Fork: 1 of 1
# Warmup Iteration   1: 190253.326 ns/op
# Warmup Iteration   2: 115273.038 ns/op
# Warmup Iteration   3: 115270.697 ns/op
# Warmup Iteration   4: 112173.601 ns/op
Iteration   1: 112703.932 ns/op
Iteration   2: 112770.576 ns/op
Iteration   3: 123631.866 ns/op
Iteration   4: 112280.165 ns/op
Iteration   5: 111602.740 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  114597.856 ±(99.9%) 19528.654 ns/op [Average]
  (min, avg, max) = (111602.740, 114597.856, 123631.866), stdev = 5071.530
  CI (99.9%): [95069.201, 134126.510] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 29.22% complete, ETA 01:11:22
# Fork: 1 of 1
# Warmup Iteration   1: 1683567.332 ns/op
# Warmup Iteration   2: 1155054.380 ns/op
# Warmup Iteration   3: 1170153.798 ns/op
# Warmup Iteration   4: 1119475.885 ns/op
Iteration   1: 1114543.553 ns/op
Iteration   2: 1121408.710 ns/op
Iteration   3: 1121401.430 ns/op
Iteration   4: 1113128.446 ns/op
Iteration   5: 1110051.319 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1116106.692 ±(99.9%) 19646.451 ns/op [Average]
  (min, avg, max) = (1110051.319, 1116106.692, 1121408.710), stdev = 5102.121
  CI (99.9%): [1096460.240, 1135753.143] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 29.41% complete, ETA 01:11:10
# Fork: 1 of 1
# Warmup Iteration   1: 49265.684 ns/op
# Warmup Iteration   2: 21316.425 ns/op
# Warmup Iteration   3: 21211.628 ns/op
# Warmup Iteration   4: 21099.619 ns/op
Iteration   1: 20788.248 ns/op
Iteration   2: 20771.331 ns/op
Iteration   3: 20816.748 ns/op
Iteration   4: 20945.013 ns/op
Iteration   5: 20881.949 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  20840.658 ±(99.9%) 277.137 ns/op [Average]
  (min, avg, max) = (20771.331, 20840.658, 20945.013), stdev = 71.972
  CI (99.9%): [20563.521, 21117.795] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 29.61% complete, ETA 01:10:58
# Fork: 1 of 1
# Warmup Iteration   1: 121645.172 ns/op
# Warmup Iteration   2: 39448.856 ns/op
# Warmup Iteration   3: 39521.990 ns/op
# Warmup Iteration   4: 38669.137 ns/op
Iteration   1: 39217.329 ns/op
Iteration   2: 38966.505 ns/op
Iteration   3: 38874.734 ns/op
Iteration   4: 38771.322 ns/op
Iteration   5: 38906.968 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  38947.372 ±(99.9%) 641.872 ns/op [Average]
  (min, avg, max) = (38771.322, 38947.372, 39217.329), stdev = 166.692
  CI (99.9%): [38305.500, 39589.243] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 29.80% complete, ETA 01:10:46
# Fork: 1 of 1
# Warmup Iteration   1: 212904.105 ns/op
# Warmup Iteration   2: 79793.457 ns/op
# Warmup Iteration   3: 79718.635 ns/op
# Warmup Iteration   4: 80499.248 ns/op
Iteration   1: 80584.915 ns/op
Iteration   2: 90740.510 ns/op
Iteration   3: 79090.489 ns/op
Iteration   4: 80209.308 ns/op
Iteration   5: 79802.964 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  82085.637 ±(99.9%) 18751.995 ns/op [Average]
  (min, avg, max) = (79090.489, 82085.637, 90740.510), stdev = 4869.834
  CI (99.9%): [63333.642, 100837.633] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 30.00% complete, ETA 01:10:34
# Fork: 1 of 1
# Warmup Iteration   1: 548216.057 ns/op
# Warmup Iteration   2: 182761.855 ns/op
# Warmup Iteration   3: 178371.805 ns/op
# Warmup Iteration   4: 177595.681 ns/op
Iteration   1: 176571.752 ns/op
Iteration   2: 182095.841 ns/op
Iteration   3: 176487.015 ns/op
Iteration   4: 181564.807 ns/op
Iteration   5: 183069.689 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  179957.821 ±(99.9%) 12229.844 ns/op [Average]
  (min, avg, max) = (176487.015, 179957.821, 183069.689), stdev = 3176.052
  CI (99.9%): [167727.977, 192187.665] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 30.20% complete, ETA 01:10:22
# Fork: 1 of 1
# Warmup Iteration   1: 4665462.945 ns/op
# Warmup Iteration   2: 1903693.885 ns/op
# Warmup Iteration   3: 1777640.917 ns/op
# Warmup Iteration   4: 1784458.332 ns/op
Iteration   1: 1813166.784 ns/op
Iteration   2: 1765499.208 ns/op
Iteration   3: 1771493.760 ns/op
Iteration   4: 1775819.724 ns/op
Iteration   5: 1758472.457 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1776890.386 ±(99.9%) 82029.244 ns/op [Average]
  (min, avg, max) = (1758472.457, 1776890.386, 1813166.784), stdev = 21302.734
  CI (99.9%): [1694861.142, 1858919.631] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 30.39% complete, ETA 01:10:10
# Fork: 1 of 1
# Warmup Iteration   1: 52952.184 ns/op
# Warmup Iteration   2: 21521.976 ns/op
# Warmup Iteration   3: 21376.164 ns/op
# Warmup Iteration   4: 21248.475 ns/op
Iteration   1: 21370.471 ns/op
Iteration   2: 23577.019 ns/op
Iteration   3: 21308.707 ns/op
Iteration   4: 22212.573 ns/op
Iteration   5: 21378.200 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  21969.394 ±(99.9%) 3747.371 ns/op [Average]
  (min, avg, max) = (21308.707, 21969.394, 23577.019), stdev = 973.180
  CI (99.9%): [18222.022, 25716.765] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 30.59% complete, ETA 01:09:58
# Fork: 1 of 1
# Warmup Iteration   1: 99151.808 ns/op
# Warmup Iteration   2: 39699.503 ns/op
# Warmup Iteration   3: 39614.451 ns/op
# Warmup Iteration   4: 38857.308 ns/op
Iteration   1: 38930.077 ns/op
Iteration   2: 39039.186 ns/op
Iteration   3: 39162.601 ns/op
Iteration   4: 38842.492 ns/op
Iteration   5: 38925.682 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  38980.008 ±(99.9%) 476.288 ns/op [Average]
  (min, avg, max) = (38842.492, 38980.008, 39162.601), stdev = 123.691
  CI (99.9%): [38503.719, 39456.296] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 30.78% complete, ETA 01:09:46
# Fork: 1 of 1
# Warmup Iteration   1: 277618.563 ns/op
# Warmup Iteration   2: 79227.349 ns/op
# Warmup Iteration   3: 83453.799 ns/op
# Warmup Iteration   4: 78054.564 ns/op
Iteration   1: 78027.389 ns/op
Iteration   2: 77713.751 ns/op
Iteration   3: 79138.064 ns/op
Iteration   4: 78437.927 ns/op
Iteration   5: 77565.367 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  78176.499 ±(99.9%) 2437.494 ns/op [Average]
  (min, avg, max) = (77565.367, 78176.499, 79138.064), stdev = 633.009
  CI (99.9%): [75739.006, 80613.993] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 30.98% complete, ETA 01:09:34
# Fork: 1 of 1
# Warmup Iteration   1: 397069.948 ns/op
# Warmup Iteration   2: 184863.052 ns/op
# Warmup Iteration   3: 175589.702 ns/op
# Warmup Iteration   4: 176744.503 ns/op
Iteration   1: 177118.241 ns/op
Iteration   2: 179188.639 ns/op
Iteration   3: 176624.763 ns/op
Iteration   4: 176581.023 ns/op
Iteration   5: 177291.615 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  177360.856 ±(99.9%) 4108.846 ns/op [Average]
  (min, avg, max) = (176581.023, 177360.856, 179188.639), stdev = 1067.054
  CI (99.9%): [173252.011, 181469.702] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 31.18% complete, ETA 01:09:22
# Fork: 1 of 1
# Warmup Iteration   1: 5517679.186 ns/op
# Warmup Iteration   2: 1761640.473 ns/op
# Warmup Iteration   3: 1754124.508 ns/op
# Warmup Iteration   4: 1761741.573 ns/op
Iteration   1: 1778290.714 ns/op
Iteration   2: 1755489.769 ns/op
Iteration   3: 1860226.280 ns/op
Iteration   4: 1747292.545 ns/op
Iteration   5: 1759627.279 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1780185.317 ±(99.9%) 177762.411 ns/op [Average]
  (min, avg, max) = (1747292.545, 1780185.317, 1860226.280), stdev = 46164.334
  CI (99.9%): [1602422.906, 1957947.729] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 31.37% complete, ETA 01:09:11
# Fork: 1 of 1
# Warmup Iteration   1: 33681.301 ns/op
# Warmup Iteration   2: 13005.560 ns/op
# Warmup Iteration   3: 12676.132 ns/op
# Warmup Iteration   4: 12682.794 ns/op
Iteration   1: 12091.860 ns/op
Iteration   2: 12362.162 ns/op
Iteration   3: 12130.827 ns/op
Iteration   4: 12071.154 ns/op
Iteration   5: 12096.782 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  12150.557 ±(99.9%) 462.911 ns/op [Average]
  (min, avg, max) = (12071.154, 12150.557, 12362.162), stdev = 120.216
  CI (99.9%): [11687.646, 12613.467] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 31.57% complete, ETA 01:08:59
# Fork: 1 of 1
# Warmup Iteration   1: 98962.876 ns/op
# Warmup Iteration   2: 25000.581 ns/op
# Warmup Iteration   3: 24021.909 ns/op
# Warmup Iteration   4: 22939.400 ns/op
Iteration   1: 22854.203 ns/op
Iteration   2: 22887.424 ns/op
Iteration   3: 22892.061 ns/op
Iteration   4: 22942.194 ns/op
Iteration   5: 22910.825 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  22897.341 ±(99.9%) 124.488 ns/op [Average]
  (min, avg, max) = (22854.203, 22897.341, 22942.194), stdev = 32.329
  CI (99.9%): [22772.854, 23021.829] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 31.76% complete, ETA 01:08:47
# Fork: 1 of 1
# Warmup Iteration   1: 88858.969 ns/op
# Warmup Iteration   2: 46763.274 ns/op
# Warmup Iteration   3: 45669.705 ns/op
# Warmup Iteration   4: 43434.598 ns/op
Iteration   1: 43352.695 ns/op
Iteration   2: 43334.583 ns/op
Iteration   3: 43424.748 ns/op
Iteration   4: 43880.280 ns/op
Iteration   5: 43419.936 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  43482.448 ±(99.9%) 870.039 ns/op [Average]
  (min, avg, max) = (43334.583, 43482.448, 43880.280), stdev = 225.946
  CI (99.9%): [42612.409, 44352.487] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 31.96% complete, ETA 01:08:35
# Fork: 1 of 1
# Warmup Iteration   1: 245570.683 ns/op
# Warmup Iteration   2: 97724.507 ns/op
# Warmup Iteration   3: 96000.272 ns/op
# Warmup Iteration   4: 89770.423 ns/op
Iteration   1: 89881.209 ns/op
Iteration   2: 89830.466 ns/op
Iteration   3: 93185.053 ns/op
Iteration   4: 90008.764 ns/op
Iteration   5: 90153.215 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  90611.741 ±(99.9%) 5560.091 ns/op [Average]
  (min, avg, max) = (89830.466, 90611.741, 93185.053), stdev = 1443.938
  CI (99.9%): [85051.650, 96171.832] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 32.16% complete, ETA 01:08:23
# Fork: 1 of 1
# Warmup Iteration   1: 1594777.433 ns/op
# Warmup Iteration   2: 872373.913 ns/op
# Warmup Iteration   3: 853896.817 ns/op
# Warmup Iteration   4: 851080.739 ns/op
Iteration   1: 813236.477 ns/op
Iteration   2: 798080.743 ns/op
Iteration   3: 802390.977 ns/op
Iteration   4: 798896.037 ns/op
Iteration   5: 801820.278 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  802884.902 ±(99.9%) 23384.814 ns/op [Average]
  (min, avg, max) = (798080.743, 802884.902, 813236.477), stdev = 6072.962
  CI (99.9%): [779500.088, 826269.717] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 32.35% complete, ETA 01:08:12
# Fork: 1 of 1
# Warmup Iteration   1: 23778.669 ns/op
# Warmup Iteration   2: 10101.298 ns/op
# Warmup Iteration   3: 9334.701 ns/op
# Warmup Iteration   4: 9135.374 ns/op
Iteration   1: 9313.672 ns/op
Iteration   2: 9075.921 ns/op
Iteration   3: 9074.651 ns/op
Iteration   4: 9088.627 ns/op
Iteration   5: 9111.253 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9132.825 ±(99.9%) 393.382 ns/op [Average]
  (min, avg, max) = (9074.651, 9132.825, 9313.672), stdev = 102.160
  CI (99.9%): [8739.442, 9526.207] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 32.55% complete, ETA 01:08:00
# Fork: 1 of 1
# Warmup Iteration   1: 48682.700 ns/op
# Warmup Iteration   2: 18084.854 ns/op
# Warmup Iteration   3: 17220.203 ns/op
# Warmup Iteration   4: 16596.924 ns/op
Iteration   1: 16774.219 ns/op
Iteration   2: 16439.737 ns/op
Iteration   3: 16222.990 ns/op
Iteration   4: 16246.345 ns/op
Iteration   5: 16251.763 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  16387.011 ±(99.9%) 898.306 ns/op [Average]
  (min, avg, max) = (16222.990, 16387.011, 16774.219), stdev = 233.287
  CI (99.9%): [15488.704, 17285.317] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 32.75% complete, ETA 01:07:48
# Fork: 1 of 1
# Warmup Iteration   1: 63350.502 ns/op
# Warmup Iteration   2: 36972.924 ns/op
# Warmup Iteration   3: 33297.254 ns/op
# Warmup Iteration   4: 32816.709 ns/op
Iteration   1: 32806.156 ns/op
Iteration   2: 32866.350 ns/op
Iteration   3: 33725.067 ns/op
Iteration   4: 32911.679 ns/op
Iteration   5: 32789.191 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  33019.689 ±(99.9%) 1529.951 ns/op [Average]
  (min, avg, max) = (32789.191, 33019.689, 33725.067), stdev = 397.323
  CI (99.9%): [31489.738, 34549.639] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 32.94% complete, ETA 01:07:36
# Fork: 1 of 1
# Warmup Iteration   1: 180987.317 ns/op
# Warmup Iteration   2: 82590.164 ns/op
# Warmup Iteration   3: 77242.803 ns/op
# Warmup Iteration   4: 66400.983 ns/op
Iteration   1: 74056.637 ns/op
Iteration   2: 75891.911 ns/op
Iteration   3: 75981.342 ns/op
Iteration   4: 76074.603 ns/op
Iteration   5: 75892.191 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  75579.337 ±(99.9%) 3290.607 ns/op [Average]
  (min, avg, max) = (74056.637, 75579.337, 76074.603), stdev = 854.560
  CI (99.9%): [72288.730, 78869.944] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 33.14% complete, ETA 01:07:24
# Fork: 1 of 1
# Warmup Iteration   1: 1453462.275 ns/op
# Warmup Iteration   2: 756368.124 ns/op
# Warmup Iteration   3: 697692.164 ns/op
# Warmup Iteration   4: 687476.394 ns/op
Iteration   1: 681167.818 ns/op
Iteration   2: 694762.850 ns/op
Iteration   3: 685760.623 ns/op
Iteration   4: 680922.610 ns/op
Iteration   5: 681197.046 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  684762.189 ±(99.9%) 22892.896 ns/op [Average]
  (min, avg, max) = (680922.610, 684762.189, 694762.850), stdev = 5945.212
  CI (99.9%): [661869.293, 707655.085] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 33.33% complete, ETA 01:07:12
# Fork: 1 of 1
# Warmup Iteration   1: 64870.735 ns/op
# Warmup Iteration   2: 12937.232 ns/op
# Warmup Iteration   3: 12039.963 ns/op
# Warmup Iteration   4: 11405.534 ns/op
Iteration   1: 11475.614 ns/op
Iteration   2: 11459.882 ns/op
Iteration   3: 11616.264 ns/op
Iteration   4: 11420.045 ns/op
Iteration   5: 11448.622 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11484.086 ±(99.9%) 295.068 ns/op [Average]
  (min, avg, max) = (11420.045, 11484.086, 11616.264), stdev = 76.628
  CI (99.9%): [11189.018, 11779.153] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 33.53% complete, ETA 01:07:00
# Fork: 1 of 1
# Warmup Iteration   1: 131928.493 ns/op
# Warmup Iteration   2: 24047.988 ns/op
# Warmup Iteration   3: 21692.159 ns/op
# Warmup Iteration   4: 20830.851 ns/op
Iteration   1: 20919.984 ns/op
Iteration   2: 20947.613 ns/op
Iteration   3: 21170.025 ns/op
Iteration   4: 20775.760 ns/op
Iteration   5: 20844.890 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  20931.654 ±(99.9%) 574.516 ns/op [Average]
  (min, avg, max) = (20775.760, 20931.654, 21170.025), stdev = 149.200
  CI (99.9%): [20357.139, 21506.170] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 33.73% complete, ETA 01:06:48
# Fork: 1 of 1
# Warmup Iteration   1: 142947.408 ns/op
# Warmup Iteration   2: 47828.450 ns/op
# Warmup Iteration   3: 43935.560 ns/op
# Warmup Iteration   4: 43259.614 ns/op
Iteration   1: 42676.098 ns/op
Iteration   2: 42967.420 ns/op
Iteration   3: 43979.096 ns/op
Iteration   4: 42785.376 ns/op
Iteration   5: 45259.303 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  43533.459 ±(99.9%) 4214.752 ns/op [Average]
  (min, avg, max) = (42676.098, 43533.459, 45259.303), stdev = 1094.558
  CI (99.9%): [39318.707, 47748.211] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 33.92% complete, ETA 01:06:37
# Fork: 1 of 1
# Warmup Iteration   1: 308916.862 ns/op
# Warmup Iteration   2: 97524.506 ns/op
# Warmup Iteration   3: 96409.566 ns/op
# Warmup Iteration   4: 95883.022 ns/op
Iteration   1: 94115.839 ns/op
Iteration   2: 95758.409 ns/op
Iteration   3: 95824.696 ns/op
Iteration   4: 96695.162 ns/op
Iteration   5: 95697.398 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  95618.301 ±(99.9%) 3594.482 ns/op [Average]
  (min, avg, max) = (94115.839, 95618.301, 96695.162), stdev = 933.476
  CI (99.9%): [92023.818, 99212.783] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 34.12% complete, ETA 01:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 2115898.043 ns/op
# Warmup Iteration   2: 900732.469 ns/op
# Warmup Iteration   3: 824917.553 ns/op
# Warmup Iteration   4: 818210.621 ns/op
Iteration   1: 818459.380 ns/op
Iteration   2: 820552.251 ns/op
Iteration   3: 816260.881 ns/op
Iteration   4: 819374.740 ns/op
Iteration   5: 814010.086 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  817731.468 ±(99.9%) 10040.943 ns/op [Average]
  (min, avg, max) = (814010.086, 817731.468, 820552.251), stdev = 2607.601
  CI (99.9%): [807690.525, 827772.410] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 34.31% complete, ETA 01:06:13
# Fork: 1 of 1
# Warmup Iteration   1: 5114.836 ns/op
# Warmup Iteration   2: 2652.337 ns/op
# Warmup Iteration   3: 2504.889 ns/op
# Warmup Iteration   4: 2433.793 ns/op
Iteration   1: 2427.191 ns/op
Iteration   2: 2436.500 ns/op
Iteration   3: 2486.333 ns/op
Iteration   4: 2440.861 ns/op
Iteration   5: 2418.224 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2441.822 ±(99.9%) 101.540 ns/op [Average]
  (min, avg, max) = (2418.224, 2441.822, 2486.333), stdev = 26.370
  CI (99.9%): [2340.282, 2543.362] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 34.51% complete, ETA 01:06:01
# Fork: 1 of 1
# Warmup Iteration   1: 9790.110 ns/op
# Warmup Iteration   2: 5583.996 ns/op
# Warmup Iteration   3: 5314.191 ns/op
# Warmup Iteration   4: 5109.232 ns/op
Iteration   1: 5104.680 ns/op
Iteration   2: 5111.712 ns/op
Iteration   3: 5132.058 ns/op
Iteration   4: 5106.985 ns/op
Iteration   5: 5072.655 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5105.618 ±(99.9%) 82.261 ns/op [Average]
  (min, avg, max) = (5072.655, 5105.618, 5132.058), stdev = 21.363
  CI (99.9%): [5023.357, 5187.879] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 34.71% complete, ETA 01:05:49
# Fork: 1 of 1
# Warmup Iteration   1: 21734.146 ns/op
# Warmup Iteration   2: 10865.308 ns/op
# Warmup Iteration   3: 10078.864 ns/op
# Warmup Iteration   4: 11129.093 ns/op
Iteration   1: 10049.900 ns/op
Iteration   2: 10033.730 ns/op
Iteration   3: 10098.965 ns/op
Iteration   4: 10105.323 ns/op
Iteration   5: 10080.899 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  10073.763 ±(99.9%) 119.528 ns/op [Average]
  (min, avg, max) = (10033.730, 10073.763, 10105.323), stdev = 31.041
  CI (99.9%): [9954.235, 10193.291] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 34.90% complete, ETA 01:05:37
# Fork: 1 of 1
# Warmup Iteration   1: 44638.878 ns/op
# Warmup Iteration   2: 22597.354 ns/op
# Warmup Iteration   3: 22047.828 ns/op
# Warmup Iteration   4: 20366.666 ns/op
Iteration   1: 20441.687 ns/op
Iteration   2: 20547.439 ns/op
Iteration   3: 20396.984 ns/op
Iteration   4: 20491.697 ns/op
Iteration   5: 20565.111 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  20488.584 ±(99.9%) 271.736 ns/op [Average]
  (min, avg, max) = (20396.984, 20488.584, 20565.111), stdev = 70.569
  CI (99.9%): [20216.848, 20760.319] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 35.10% complete, ETA 01:05:25
# Fork: 1 of 1
# Warmup Iteration   1: 363896.104 ns/op
# Warmup Iteration   2: 232294.363 ns/op
# Warmup Iteration   3: 211237.553 ns/op
# Warmup Iteration   4: 212312.874 ns/op
Iteration   1: 209506.019 ns/op
Iteration   2: 201555.336 ns/op
Iteration   3: 222107.180 ns/op
Iteration   4: 199727.923 ns/op
Iteration   5: 199606.863 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  206500.664 ±(99.9%) 37056.635 ns/op [Average]
  (min, avg, max) = (199606.863, 206500.664, 222107.180), stdev = 9623.490
  CI (99.9%): [169444.029, 243557.299] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 35.29% complete, ETA 01:05:13
# Fork: 1 of 1
# Warmup Iteration   1: 6782.921 ns/op
# Warmup Iteration   2: 3510.643 ns/op
# Warmup Iteration   3: 3194.871 ns/op
# Warmup Iteration   4: 3186.392 ns/op
Iteration   1: 3184.772 ns/op
Iteration   2: 3176.855 ns/op
Iteration   3: 3175.433 ns/op
Iteration   4: 3189.223 ns/op
Iteration   5: 3239.315 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3193.120 ±(99.9%) 101.810 ns/op [Average]
  (min, avg, max) = (3175.433, 3193.120, 3239.315), stdev = 26.440
  CI (99.9%): [3091.309, 3294.930] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 35.49% complete, ETA 01:05:01
# Fork: 1 of 1
# Warmup Iteration   1: 13912.533 ns/op
# Warmup Iteration   2: 7208.351 ns/op
# Warmup Iteration   3: 6586.327 ns/op
# Warmup Iteration   4: 6504.909 ns/op
Iteration   1: 6539.628 ns/op
Iteration   2: 6489.539 ns/op
Iteration   3: 6511.116 ns/op
Iteration   4: 6547.056 ns/op
Iteration   5: 6530.545 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6523.577 ±(99.9%) 89.716 ns/op [Average]
  (min, avg, max) = (6489.539, 6523.577, 6547.056), stdev = 23.299
  CI (99.9%): [6433.861, 6613.292] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 35.69% complete, ETA 01:04:49
# Fork: 1 of 1
# Warmup Iteration   1: 29396.001 ns/op
# Warmup Iteration   2: 14117.833 ns/op
# Warmup Iteration   3: 12790.415 ns/op
# Warmup Iteration   4: 12807.353 ns/op
Iteration   1: 12738.801 ns/op
Iteration   2: 12792.985 ns/op
Iteration   3: 12800.980 ns/op
Iteration   4: 12793.029 ns/op
Iteration   5: 12793.512 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  12783.861 ±(99.9%) 97.867 ns/op [Average]
  (min, avg, max) = (12738.801, 12783.861, 12800.980), stdev = 25.416
  CI (99.9%): [12685.994, 12881.729] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 35.88% complete, ETA 01:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 60433.032 ns/op
# Warmup Iteration   2: 30145.494 ns/op
# Warmup Iteration   3: 26056.571 ns/op
# Warmup Iteration   4: 25936.060 ns/op
Iteration   1: 26024.321 ns/op
Iteration   2: 27226.629 ns/op
Iteration   3: 26012.082 ns/op
Iteration   4: 26028.865 ns/op
Iteration   5: 26088.488 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  26276.077 ±(99.9%) 2049.294 ns/op [Average]
  (min, avg, max) = (26012.082, 26276.077, 27226.629), stdev = 532.195
  CI (99.9%): [24226.783, 28325.370] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 36.08% complete, ETA 01:04:25
# Fork: 1 of 1
# Warmup Iteration   1: 472379.095 ns/op
# Warmup Iteration   2: 320795.820 ns/op
# Warmup Iteration   3: 283525.116 ns/op
# Warmup Iteration   4: 266608.744 ns/op
Iteration   1: 267139.547 ns/op
Iteration   2: 266910.301 ns/op
Iteration   3: 265599.018 ns/op
Iteration   4: 266136.601 ns/op
Iteration   5: 270615.072 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  267280.108 ±(99.9%) 7558.495 ns/op [Average]
  (min, avg, max) = (265599.018, 267280.108, 270615.072), stdev = 1962.917
  CI (99.9%): [259721.613, 274838.602] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 36.27% complete, ETA 01:04:14
# Fork: 1 of 1
# Warmup Iteration   1: 11313.373 ns/op
# Warmup Iteration   2: 5964.101 ns/op
# Warmup Iteration   3: 5784.316 ns/op
# Warmup Iteration   4: 5861.306 ns/op
Iteration   1: 5817.761 ns/op
Iteration   2: 5778.125 ns/op
Iteration   3: 5771.484 ns/op
Iteration   4: 5808.948 ns/op
Iteration   5: 5832.797 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5801.823 ±(99.9%) 100.895 ns/op [Average]
  (min, avg, max) = (5771.484, 5801.823, 5832.797), stdev = 26.202
  CI (99.9%): [5700.928, 5902.718] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 36.47% complete, ETA 01:04:02
# Fork: 1 of 1
# Warmup Iteration   1: 23653.941 ns/op
# Warmup Iteration   2: 11114.205 ns/op
# Warmup Iteration   3: 10282.766 ns/op
# Warmup Iteration   4: 10387.508 ns/op
Iteration   1: 10273.000 ns/op
Iteration   2: 10366.288 ns/op
Iteration   3: 10321.940 ns/op
Iteration   4: 10441.568 ns/op
Iteration   5: 10411.771 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  10362.913 ±(99.9%) 260.795 ns/op [Average]
  (min, avg, max) = (10273.000, 10362.913, 10441.568), stdev = 67.728
  CI (99.9%): [10102.118, 10623.709] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 36.67% complete, ETA 01:03:50
# Fork: 1 of 1
# Warmup Iteration   1: 49436.590 ns/op
# Warmup Iteration   2: 26666.624 ns/op
# Warmup Iteration   3: 23860.429 ns/op
# Warmup Iteration   4: 23623.339 ns/op
Iteration   1: 23570.480 ns/op
Iteration   2: 23505.536 ns/op
Iteration   3: 23701.436 ns/op
Iteration   4: 23691.022 ns/op
Iteration   5: 23752.260 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  23644.147 ±(99.9%) 393.669 ns/op [Average]
  (min, avg, max) = (23505.536, 23644.147, 23752.260), stdev = 102.235
  CI (99.9%): [23250.478, 24037.816] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 36.86% complete, ETA 01:03:38
# Fork: 1 of 1
# Warmup Iteration   1: 100182.804 ns/op
# Warmup Iteration   2: 57528.014 ns/op
# Warmup Iteration   3: 52332.406 ns/op
# Warmup Iteration   4: 52021.770 ns/op
Iteration   1: 51994.193 ns/op
Iteration   2: 51925.087 ns/op
Iteration   3: 55099.762 ns/op
Iteration   4: 52025.614 ns/op
Iteration   5: 51741.014 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  52557.134 ±(99.9%) 5489.670 ns/op [Average]
  (min, avg, max) = (51741.014, 52557.134, 55099.762), stdev = 1425.650
  CI (99.9%): [47067.464, 58046.804] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 37.06% complete, ETA 01:03:26
# Fork: 1 of 1
# Warmup Iteration   1: 865653.321 ns/op
# Warmup Iteration   2: 574432.766 ns/op
# Warmup Iteration   3: 521643.057 ns/op
# Warmup Iteration   4: 500325.080 ns/op
Iteration   1: 500720.164 ns/op
Iteration   2: 503223.248 ns/op
Iteration   3: 504520.992 ns/op
Iteration   4: 500524.316 ns/op
Iteration   5: 505465.253 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  502890.795 ±(99.9%) 8547.163 ns/op [Average]
  (min, avg, max) = (500524.316, 502890.795, 505465.253), stdev = 2219.671
  CI (99.9%): [494343.631, 511437.958] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 37.25% complete, ETA 01:03:14
# Fork: 1 of 1
# Warmup Iteration   1: 61092.524 ns/op
# Warmup Iteration   2: 42280.560 ns/op
# Warmup Iteration   3: 27252.310 ns/op
# Warmup Iteration   4: 26623.352 ns/op
Iteration   1: 26622.384 ns/op
Iteration   2: 26625.269 ns/op
Iteration   3: 26636.812 ns/op
Iteration   4: 26561.100 ns/op
Iteration   5: 26624.077 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  26613.929 ±(99.9%) 115.801 ns/op [Average]
  (min, avg, max) = (26561.100, 26613.929, 26636.812), stdev = 30.073
  CI (99.9%): [26498.128, 26729.729] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 37.45% complete, ETA 01:03:02
# Fork: 1 of 1
# Warmup Iteration   1: 92213.587 ns/op
# Warmup Iteration   2: 59364.120 ns/op
# Warmup Iteration   3: 54306.381 ns/op
# Warmup Iteration   4: 48778.618 ns/op
Iteration   1: 48477.010 ns/op
Iteration   2: 48440.055 ns/op
Iteration   3: 48550.085 ns/op
Iteration   4: 48613.432 ns/op
Iteration   5: 48805.355 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  48577.187 ±(99.9%) 554.511 ns/op [Average]
  (min, avg, max) = (48440.055, 48577.187, 48805.355), stdev = 144.005
  CI (99.9%): [48022.676, 49131.699] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 37.65% complete, ETA 01:02:50
# Fork: 1 of 1
# Warmup Iteration   1: 288594.594 ns/op
# Warmup Iteration   2: 137495.732 ns/op
# Warmup Iteration   3: 118813.346 ns/op
# Warmup Iteration   4: 104670.345 ns/op
Iteration   1: 104740.978 ns/op
Iteration   2: 108034.732 ns/op
Iteration   3: 108968.932 ns/op
Iteration   4: 108196.035 ns/op
Iteration   5: 104703.449 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  106928.825 ±(99.9%) 7874.982 ns/op [Average]
  (min, avg, max) = (104703.449, 106928.825, 108968.932), stdev = 2045.108
  CI (99.9%): [99053.843, 114803.807] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 37.84% complete, ETA 01:02:38
# Fork: 1 of 1
# Warmup Iteration   1: 585895.474 ns/op
# Warmup Iteration   2: 355220.366 ns/op
# Warmup Iteration   3: 255377.182 ns/op
# Warmup Iteration   4: 247168.924 ns/op
Iteration   1: 248694.825 ns/op
Iteration   2: 246298.001 ns/op
Iteration   3: 248303.983 ns/op
Iteration   4: 248619.219 ns/op
Iteration   5: 247189.240 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  247821.054 ±(99.9%) 4016.797 ns/op [Average]
  (min, avg, max) = (246298.001, 247821.054, 248694.825), stdev = 1043.149
  CI (99.9%): [243804.256, 251837.851] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 38.04% complete, ETA 01:02:26
# Fork: 1 of 1
# Warmup Iteration   1: 5041508.307 ns/op
# Warmup Iteration   2: 2902750.961 ns/op
# Warmup Iteration   3: 2419678.380 ns/op
# Warmup Iteration   4: 2339673.907 ns/op
Iteration   1: 2229524.303 ns/op
Iteration   2: 2237701.224 ns/op
Iteration   3: 2241922.791 ns/op
Iteration   4: 2251246.465 ns/op
Iteration   5: 2234392.268 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2238957.410 ±(99.9%) 31707.451 ns/op [Average]
  (min, avg, max) = (2229524.303, 2238957.410, 2251246.465), stdev = 8234.324
  CI (99.9%): [2207249.959, 2270664.861] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 38.24% complete, ETA 01:02:14
# Fork: 1 of 1
# Warmup Iteration   1: 7171.124 ns/op
# Warmup Iteration   2: 4301.002 ns/op
# Warmup Iteration   3: 3859.136 ns/op
# Warmup Iteration   4: 3753.059 ns/op
Iteration   1: 3759.368 ns/op
Iteration   2: 3755.731 ns/op
Iteration   3: 3762.348 ns/op
Iteration   4: 3769.078 ns/op
Iteration   5: 3773.892 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3764.083 ±(99.9%) 28.307 ns/op [Average]
  (min, avg, max) = (3755.731, 3764.083, 3773.892), stdev = 7.351
  CI (99.9%): [3735.776, 3792.390] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 38.43% complete, ETA 01:02:02
# Fork: 1 of 1
# Warmup Iteration   1: 15179.546 ns/op
# Warmup Iteration   2: 7018.205 ns/op
# Warmup Iteration   3: 6885.695 ns/op
# Warmup Iteration   4: 6873.582 ns/op
Iteration   1: 6888.546 ns/op
Iteration   2: 6885.425 ns/op
Iteration   3: 6912.678 ns/op
Iteration   4: 6847.107 ns/op
Iteration   5: 6868.828 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6880.517 ±(99.9%) 93.844 ns/op [Average]
  (min, avg, max) = (6847.107, 6880.517, 6912.678), stdev = 24.371
  CI (99.9%): [6786.673, 6974.361] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 38.63% complete, ETA 01:01:50
# Fork: 1 of 1
# Warmup Iteration   1: 34771.710 ns/op
# Warmup Iteration   2: 13060.568 ns/op
# Warmup Iteration   3: 13004.070 ns/op
# Warmup Iteration   4: 13085.829 ns/op
Iteration   1: 13251.254 ns/op
Iteration   2: 12934.358 ns/op
Iteration   3: 12912.141 ns/op
Iteration   4: 12925.662 ns/op
Iteration   5: 12851.925 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  12975.068 ±(99.9%) 607.319 ns/op [Average]
  (min, avg, max) = (12851.925, 12975.068, 13251.254), stdev = 157.719
  CI (99.9%): [12367.748, 13582.387] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 38.82% complete, ETA 01:01:38
# Fork: 1 of 1
# Warmup Iteration   1: 66762.864 ns/op
# Warmup Iteration   2: 30146.764 ns/op
# Warmup Iteration   3: 26150.257 ns/op
# Warmup Iteration   4: 26049.586 ns/op
Iteration   1: 26059.786 ns/op
Iteration   2: 26010.943 ns/op
Iteration   3: 25954.506 ns/op
Iteration   4: 26115.684 ns/op
Iteration   5: 25752.051 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  25978.594 ±(99.9%) 538.864 ns/op [Average]
  (min, avg, max) = (25752.051, 25978.594, 26115.684), stdev = 139.941
  CI (99.9%): [25439.730, 26517.458] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 39.02% complete, ETA 01:01:26
# Fork: 1 of 1
# Warmup Iteration   1: 411499.342 ns/op
# Warmup Iteration   2: 272528.755 ns/op
# Warmup Iteration   3: 251978.129 ns/op
# Warmup Iteration   4: 254767.336 ns/op
Iteration   1: 238210.521 ns/op
Iteration   2: 237732.286 ns/op
Iteration   3: 237821.943 ns/op
Iteration   4: 244635.499 ns/op
Iteration   5: 238709.862 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  239422.022 ±(99.9%) 11320.289 ns/op [Average]
  (min, avg, max) = (237732.286, 239422.022, 244635.499), stdev = 2939.843
  CI (99.9%): [228101.733, 250742.311] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 39.22% complete, ETA 01:01:14
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
41356.804 ns/op
# Warmup Iteration   2: 33740.179 ns/op
# Warmup Iteration   3: 31108.084 ns/op
# Warmup Iteration   4: 34088.111 ns/op
Iteration   1: 33374.136 ns/op
Iteration   2: 33572.506 ns/op
Iteration   3: 33586.183 ns/op
Iteration   4: 34540.612 ns/op
Iteration   5: 34512.935 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  33917.275 ±(99.9%) 2167.034 ns/op [Average]
  (min, avg, max) = (33374.136, 33917.275, 34540.612), stdev = 562.772
  CI (99.9%): [31750.241, 36084.308] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 39.41% complete, ETA 01:01:03
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
82928.021 ns/op
# Warmup Iteration   2: 65542.972 ns/op
# Warmup Iteration   3: 58126.696 ns/op
# Warmup Iteration   4: 57397.063 ns/op
Iteration   1: 69807.928 ns/op
Iteration   2: 74032.577 ns/op
Iteration   3: 67707.882 ns/op
Iteration   4: 58212.266 ns/op
Iteration   5: 63050.739 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  66562.279 ±(99.9%) 23557.131 ns/op [Average]
  (min, avg, max) = (58212.266, 66562.279, 74032.577), stdev = 6117.712
  CI (99.9%): [43005.147, 90119.410] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 39.61% complete, ETA 01:00:51
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
166642.929 ns/op
# Warmup Iteration   2: 127756.583 ns/op
# Warmup Iteration   3: 142081.330 ns/op
# Warmup Iteration   4: 139008.647 ns/op
Iteration   1: 122232.257 ns/op
Iteration   2: 118195.936 ns/op
Iteration   3: 118987.940 ns/op
Iteration   4: 117437.481 ns/op
Iteration   5: 118184.845 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  119007.692 ±(99.9%) 7255.117 ns/op [Average]
  (min, avg, max) = (117437.481, 119007.692, 122232.257), stdev = 1884.131
  CI (99.9%): [111752.575, 126262.809] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 39.80% complete, ETA 01:00:39
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
330084.007 ns/op
# Warmup Iteration   2: 290216.061 ns/op
# Warmup Iteration   3: 295727.362 ns/op
# Warmup Iteration   4: 310156.633 ns/op
Iteration   1: 307087.670 ns/op
Iteration   2: 286409.890 ns/op
Iteration   3: 289019.899 ns/op
Iteration   4: 285895.112 ns/op
Iteration   5: 328324.780 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  299347.470 ±(99.9%) 70861.287 ns/op [Average]
  (min, avg, max) = (285895.112, 299347.470, 328324.780), stdev = 18402.451
  CI (99.9%): [228486.183, 370208.757] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 40.00% complete, ETA 01:00:28
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2850154.203 ns/op
# Warmup Iteration   2: 2564364.778 ns/op
# Warmup Iteration   3: 2637140.575 ns/op
# Warmup Iteration   4: 2614379.422 ns/op
Iteration   1: 2636481.349 ns/op
Iteration   2: 2649076.014 ns/op
Iteration   3: 2693780.153 ns/op
Iteration   4: 2646075.686 ns/op
Iteration   5: 2637598.770 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2652602.394 ±(99.9%) 91034.099 ns/op [Average]
  (min, avg, max) = (2636481.349, 2652602.394, 2693780.153), stdev = 23641.267
  CI (99.9%): [2561568.295, 2743636.494] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 40.20% complete, ETA 01:00:16
# Fork: 1 of 1
# Warmup Iteration   1: 5109.413 ns/op
# Warmup Iteration   2: 3308.876 ns/op
# Warmup Iteration   3: 3010.129 ns/op
# Warmup Iteration   4: 2908.119 ns/op
Iteration   1: 2909.583 ns/op
Iteration   2: 2908.600 ns/op
Iteration   3: 2907.112 ns/op
Iteration   4: 2907.226 ns/op
Iteration   5: 2901.361 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2906.777 ±(99.9%) 12.305 ns/op [Average]
  (min, avg, max) = (2901.361, 2906.777, 2909.583), stdev = 3.196
  CI (99.9%): [2894.471, 2919.082] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 40.39% complete, ETA 01:00:04
# Fork: 1 of 1
# Warmup Iteration   1: 11380.947 ns/op
# Warmup Iteration   2: 5931.903 ns/op
# Warmup Iteration   3: 5928.510 ns/op
# Warmup Iteration   4: 5620.448 ns/op
Iteration   1: 5660.178 ns/op
Iteration   2: 5615.842 ns/op
Iteration   3: 5653.642 ns/op
Iteration   4: 5610.618 ns/op
Iteration   5: 5630.081 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5634.072 ±(99.9%) 85.300 ns/op [Average]
  (min, avg, max) = (5610.618, 5634.072, 5660.178), stdev = 22.152
  CI (99.9%): [5548.772, 5719.372] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 40.59% complete, ETA 00:59:52
# Fork: 1 of 1
# Warmup Iteration   1: 29713.666 ns/op
# Warmup Iteration   2: 10649.324 ns/op
# Warmup Iteration   3: 13764.233 ns/op
# Warmup Iteration   4: 12999.280 ns/op
Iteration   1: 13047.909 ns/op
Iteration   2: 13069.366 ns/op
Iteration   3: 12976.813 ns/op
Iteration   4: 13038.340 ns/op
Iteration   5: 12944.541 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  13015.394 ±(99.9%) 201.978 ns/op [Average]
  (min, avg, max) = (12944.541, 13015.394, 13069.366), stdev = 52.453
  CI (99.9%): [12813.415, 13217.372] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 40.78% complete, ETA 00:59:40
# Fork: 1 of 1
# Warmup Iteration   1: 31986.966 ns/op
# Warmup Iteration   2: 22520.050 ns/op
# Warmup Iteration   3: 19662.630 ns/op
# Warmup Iteration   4: 19128.610 ns/op
Iteration   1: 18989.900 ns/op
Iteration   2: 19732.847 ns/op
Iteration   3: 19047.595 ns/op
Iteration   4: 18955.974 ns/op
Iteration   5: 18966.447 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  19138.553 ±(99.9%) 1286.530 ns/op [Average]
  (min, avg, max) = (18955.974, 19138.553, 19732.847), stdev = 334.108
  CI (99.9%): [17852.022, 20425.083] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 40.98% complete, ETA 00:59:28
# Fork: 1 of 1
# Warmup Iteration   1: 536260.539 ns/op
# Warmup Iteration   2: 265805.618 ns/op
# Warmup Iteration   3: 250655.994 ns/op
# Warmup Iteration   4: 224436.126 ns/op
Iteration   1: 209403.443 ns/op
Iteration   2: 213924.529 ns/op
Iteration   3: 208652.616 ns/op
Iteration   4: 208345.002 ns/op
Iteration   5: 207819.231 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  209628.964 ±(99.9%) 9506.429 ns/op [Average]
  (min, avg, max) = (207819.231, 209628.964, 213924.529), stdev = 2468.790
  CI (99.9%): [200122.535, 219135.394] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 41.18% complete, ETA 00:59:16
# Fork: 1 of 1
# Warmup Iteration   1: 88541.978 ns/op
# Warmup Iteration   2: 39115.999 ns/op
# Warmup Iteration   3: 36841.420 ns/op
# Warmup Iteration   4: 35852.971 ns/op
Iteration   1: 36004.245 ns/op
Iteration   2: 35355.575 ns/op
Iteration   3: 35398.334 ns/op
Iteration   4: 35462.534 ns/op
Iteration   5: 35386.137 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  35521.365 ±(99.9%) 1050.216 ns/op [Average]
  (min, avg, max) = (35355.575, 35521.365, 36004.245), stdev = 272.738
  CI (99.9%): [34471.149, 36571.581] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 41.37% complete, ETA 00:59:04
# Fork: 1 of 1
# Warmup Iteration   1: 143862.857 ns/op
# Warmup Iteration   2: 69772.637 ns/op
# Warmup Iteration   3: 65649.021 ns/op
# Warmup Iteration   4: 64565.234 ns/op
Iteration   1: 64591.152 ns/op
Iteration   2: 64036.954 ns/op
Iteration   3: 64562.314 ns/op
Iteration   4: 63956.339 ns/op
Iteration   5: 64144.852 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  64258.322 ±(99.9%) 1149.177 ns/op [Average]
  (min, avg, max) = (63956.339, 64258.322, 64591.152), stdev = 298.438
  CI (99.9%): [63109.145, 65407.499] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 41.57% complete, ETA 00:58:53
# Fork: 1 of 1
# Warmup Iteration   1: 286738.736 ns/op
# Warmup Iteration   2: 149194.814 ns/op
# Warmup Iteration   3: 134371.339 ns/op
# Warmup Iteration   4: 131077.235 ns/op
Iteration   1: 130433.722 ns/op
Iteration   2: 135620.011 ns/op
Iteration   3: 131136.081 ns/op
Iteration   4: 130931.434 ns/op
Iteration   5: 130268.659 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  131677.981 ±(99.9%) 8594.132 ns/op [Average]
  (min, avg, max) = (130268.659, 131677.981, 135620.011), stdev = 2231.869
  CI (99.9%): [123083.849, 140272.114] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 41.76% complete, ETA 00:58:42
# Fork: 1 of 1
# Warmup Iteration   1: 567266.975 ns/op
# Warmup Iteration   2: 333100.665 ns/op
# Warmup Iteration   3: 311481.867 ns/op
# Warmup Iteration   4: 290787.745 ns/op
Iteration   1: 291426.366 ns/op
Iteration   2: 292376.790 ns/op
Iteration   3: 298575.365 ns/op
Iteration   4: 294384.346 ns/op
Iteration   5: 295875.894 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  294527.752 ±(99.9%) 10970.358 ns/op [Average]
  (min, avg, max) = (291426.366, 294527.752, 298575.365), stdev = 2848.967
  CI (99.9%): [283557.394, 305498.110] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 41.96% complete, ETA 00:58:30
# Fork: 1 of 1
# Warmup Iteration   1: 6212319.176 ns/op
# Warmup Iteration   2: 3395141.068 ns/op
# Warmup Iteration   3: 3168623.354 ns/op
# Warmup Iteration   4: 3158924.058 ns/op
Iteration   1: 3236019.410 ns/op
Iteration   2: 3066644.185 ns/op
Iteration   3: 3056866.106 ns/op
Iteration   4: 3071164.773 ns/op
Iteration   5: 3106561.000 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3107451.095 ±(99.9%) 286034.077 ns/op [Average]
  (min, avg, max) = (3056866.106, 3107451.095, 3236019.410), stdev = 74282.141
  CI (99.9%): [2821417.018, 3393485.172] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 42.16% complete, ETA 00:58:19
# Fork: 1 of 1
# Warmup Iteration   1: 32350.227 ns/op
# Warmup Iteration   2: 21021.740 ns/op
# Warmup Iteration   3: 19284.638 ns/op
# Warmup Iteration   4: 19150.056 ns/op
Iteration   1: 19165.103 ns/op
Iteration   2: 19101.541 ns/op
Iteration   3: 19107.374 ns/op
Iteration   4: 19134.749 ns/op
Iteration   5: 19230.841 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  19147.922 ±(99.9%) 203.207 ns/op [Average]
  (min, avg, max) = (19101.541, 19147.922, 19230.841), stdev = 52.772
  CI (99.9%): [18944.715, 19351.129] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 42.35% complete, ETA 00:58:07
# Fork: 1 of 1
# Warmup Iteration   1: 53480.941 ns/op
# Warmup Iteration   2: 32701.163 ns/op
# Warmup Iteration   3: 29674.132 ns/op
# Warmup Iteration   4: 29571.588 ns/op
Iteration   1: 29915.778 ns/op
Iteration   2: 29570.813 ns/op
Iteration   3: 29756.114 ns/op
Iteration   4: 29651.402 ns/op
Iteration   5: 29696.656 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  29718.153 ±(99.9%) 498.816 ns/op [Average]
  (min, avg, max) = (29570.813, 29718.153, 29915.778), stdev = 129.541
  CI (99.9%): [29219.337, 30216.969] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 42.55% complete, ETA 00:57:55
# Fork: 1 of 1
# Warmup Iteration   1: 96917.720 ns/op
# Warmup Iteration   2: 68101.874 ns/op
# Warmup Iteration   3: 62512.547 ns/op
# Warmup Iteration   4: 63044.089 ns/op
Iteration   1: 62462.454 ns/op
Iteration   2: 62126.727 ns/op
Iteration   3: 62209.368 ns/op
Iteration   4: 62106.294 ns/op
Iteration   5: 61952.803 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  62171.529 ±(99.9%) 720.834 ns/op [Average]
  (min, avg, max) = (61952.803, 62171.529, 62462.454), stdev = 187.198
  CI (99.9%): [61450.695, 62892.363] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 42.75% complete, ETA 00:57:43
# Fork: 1 of 1
# Warmup Iteration   1: 230617.780 ns/op
# Warmup Iteration   2: 161148.412 ns/op
# Warmup Iteration   3: 146426.215 ns/op
# Warmup Iteration   4: 141158.778 ns/op
Iteration   1: 140677.308 ns/op
Iteration   2: 140831.191 ns/op
Iteration   3: 140502.095 ns/op
Iteration   4: 148461.836 ns/op
Iteration   5: 140746.693 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  142243.825 ±(99.9%) 13392.852 ns/op [Average]
  (min, avg, max) = (140502.095, 142243.825, 148461.836), stdev = 3478.081
  CI (99.9%): [128850.973, 155636.677] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 42.94% complete, ETA 00:57:31
# Fork: 1 of 1
# Warmup Iteration   1: 2154318.015 ns/op
# Warmup Iteration   2: 1647649.341 ns/op
# Warmup Iteration   3: 1519679.984 ns/op
# Warmup Iteration   4: 1520926.755 ns/op
Iteration   1: 1522111.158 ns/op
Iteration   2: 1521127.618 ns/op
Iteration   3: 1523105.857 ns/op
Iteration   4: 1511884.204 ns/op
Iteration   5: 1505283.501 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  1516702.468 ±(99.9%) 30040.436 ns/op [Average]
  (min, avg, max) = (1505283.501, 1516702.468, 1523105.857), stdev = 7801.406
  CI (99.9%): [1486662.031, 1546742.904] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 43.14% complete, ETA 00:57:20
# Fork: 1 of 1
# Warmup Iteration   1: 19609.759 ns/op
# Warmup Iteration   2: 12863.325 ns/op
# Warmup Iteration   3: 14037.598 ns/op
# Warmup Iteration   4: 14183.747 ns/op
Iteration   1: 14435.629 ns/op
Iteration   2: 14483.289 ns/op
Iteration   3: 14407.063 ns/op
Iteration   4: 14510.780 ns/op
Iteration   5: 14382.737 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  14443.900 ±(99.9%) 203.673 ns/op [Average]
  (min, avg, max) = (14382.737, 14443.900, 14510.780), stdev = 52.893
  CI (99.9%): [14240.227, 14647.572] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 43.33% complete, ETA 00:57:08
# Fork: 1 of 1
# Warmup Iteration   1: 44470.754 ns/op
# Warmup Iteration   2: 28042.835 ns/op
# Warmup Iteration   3: 27873.434 ns/op
# Warmup Iteration   4: 29475.287 ns/op
Iteration   1: 27692.634 ns/op
Iteration   2: 28267.344 ns/op
Iteration   3: 28410.930 ns/op
Iteration   4: 28881.844 ns/op
Iteration   5: 28968.743 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  28444.299 ±(99.9%) 1985.896 ns/op [Average]
  (min, avg, max) = (27692.634, 28444.299, 28968.743), stdev = 515.731
  CI (99.9%): [26458.403, 30430.195] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 43.53% complete, ETA 00:56:56
# Fork: 1 of 1
# Warmup Iteration   1: 102060.841 ns/op
# Warmup Iteration   2: 71191.494 ns/op
# Warmup Iteration   3: 68446.378 ns/op
# Warmup Iteration   4: 68362.539 ns/op
Iteration   1: 68470.843 ns/op
Iteration   2: 63796.520 ns/op
Iteration   3: 63562.658 ns/op
Iteration   4: 64177.169 ns/op
Iteration   5: 67990.134 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  65599.465 ±(99.9%) 9309.928 ns/op [Average]
  (min, avg, max) = (63562.658, 65599.465, 68470.843), stdev = 2417.759
  CI (99.9%): [56289.537, 74909.393] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 43.73% complete, ETA 00:56:44
# Fork: 1 of 1
# Warmup Iteration   1: 236783.816 ns/op
# Warmup Iteration   2: 157246.379 ns/op
# Warmup Iteration   3: 139947.779 ns/op
# Warmup Iteration   4: 142368.828 ns/op
Iteration   1: 152231.782 ns/op
Iteration   2: 143199.633 ns/op
Iteration   3: 142633.607 ns/op
Iteration   4: 143220.484 ns/op
Iteration   5: 141682.898 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  144593.681 ±(99.9%) 16616.340 ns/op [Average]
  (min, avg, max) = (141682.898, 144593.681, 152231.782), stdev = 4315.211
  CI (99.9%): [127977.341, 161210.021] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 43.92% complete, ETA 00:56:32
# Fork: 1 of 1
# Warmup Iteration   1: 1878581.542 ns/op
# Warmup Iteration   2: 1379228.149 ns/op
# Warmup Iteration   3: 1426851.812 ns/op
# Warmup Iteration   4: 1360004.919 ns/op
Iteration   1: 1439136.846 ns/op
Iteration   2: 1361995.751 ns/op
Iteration   3: 1319773.745 ns/op
Iteration   4: 1319980.309 ns/op
Iteration   5: 1313199.250 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  1350817.180 ±(99.9%) 204256.971 ns/op [Average]
  (min, avg, max) = (1313199.250, 1350817.180, 1439136.846), stdev = 53044.887
  CI (99.9%): [1146560.209, 1555074.151] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 44.12% complete, ETA 00:56:20
# Fork: 1 of 1
# Warmup Iteration   1: 17410.193 ns/op
# Warmup Iteration   2: 12572.804 ns/op
# Warmup Iteration   3: 11330.410 ns/op
# Warmup Iteration   4: 11284.802 ns/op
Iteration   1: 11290.068 ns/op
Iteration   2: 11317.313 ns/op
Iteration   3: 11666.108 ns/op
Iteration   4: 11262.650 ns/op
Iteration   5: 11311.440 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11369.516 ±(99.9%) 643.752 ns/op [Average]
  (min, avg, max) = (11262.650, 11369.516, 11666.108), stdev = 167.180
  CI (99.9%): [10725.764, 12013.268] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 44.31% complete, ETA 00:56:08
# Fork: 1 of 1
# Warmup Iteration   1: 24989.640 ns/op
# Warmup Iteration   2: 15516.053 ns/op
# Warmup Iteration   3: 14725.986 ns/op
# Warmup Iteration   4: 14815.339 ns/op
Iteration   1: 14679.582 ns/op
Iteration   2: 14748.426 ns/op
Iteration   3: 14720.229 ns/op
Iteration   4: 14786.452 ns/op
Iteration   5: 14852.094 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  14757.357 ±(99.9%) 253.448 ns/op [Average]
  (min, avg, max) = (14679.582, 14757.357, 14852.094), stdev = 65.820
  CI (99.9%): [14503.909, 15010.804] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 44.51% complete, ETA 00:55:56
# Fork: 1 of 1
# Warmup Iteration   1: 73141.761 ns/op
# Warmup Iteration   2: 50290.108 ns/op
# Warmup Iteration   3: 47800.255 ns/op
# Warmup Iteration   4: 47508.625 ns/op
Iteration   1: 47528.344 ns/op
Iteration   2: 47293.542 ns/op
Iteration   3: 47495.219 ns/op
Iteration   4: 47727.757 ns/op
Iteration   5: 47460.340 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  47501.040 ±(99.9%) 599.304 ns/op [Average]
  (min, avg, max) = (47293.542, 47501.040, 47727.757), stdev = 155.637
  CI (99.9%): [46901.737, 48100.344] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 44.71% complete, ETA 00:55:44
# Fork: 1 of 1
# Warmup Iteration   1: 169413.640 ns/op
# Warmup Iteration   2: 112793.341 ns/op
# Warmup Iteration   3: 107065.771 ns/op
# Warmup Iteration   4: 114858.937 ns/op
Iteration   1: 106751.046 ns/op
Iteration   2: 106637.852 ns/op
Iteration   3: 106629.781 ns/op
Iteration   4: 106838.671 ns/op
Iteration   5: 106653.324 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  106702.135 ±(99.9%) 348.606 ns/op [Average]
  (min, avg, max) = (106629.781, 106702.135, 106838.671), stdev = 90.532
  CI (99.9%): [106353.528, 107050.741] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 44.90% complete, ETA 00:55:32
# Fork: 1 of 1
# Warmup Iteration   1: 1388198.015 ns/op
# Warmup Iteration   2: 1071889.568 ns/op
# Warmup Iteration   3: 992304.324 ns/op
# Warmup Iteration   4: 995022.538 ns/op
Iteration   1: 988076.942 ns/op
Iteration   2: 989413.997 ns/op
Iteration   3: 992931.998 ns/op
Iteration   4: 989529.713 ns/op
Iteration   5: 992186.539 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  990427.838 ±(99.9%) 7873.852 ns/op [Average]
  (min, avg, max) = (988076.942, 990427.838, 992931.998), stdev = 2044.814
  CI (99.9%): [982553.986, 998301.690] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 45.10% complete, ETA 00:55:20
# Fork: 1 of 1
# Warmup Iteration   1: 100399.393 ns/op
# Warmup Iteration   2: 37166.884 ns/op
# Warmup Iteration   3: 36270.979 ns/op
# Warmup Iteration   4: 35478.771 ns/op
Iteration   1: 35760.896 ns/op
Iteration   2: 35495.565 ns/op
Iteration   3: 35615.613 ns/op
Iteration   4: 35565.175 ns/op
Iteration   5: 35541.204 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  35595.690 ±(99.9%) 392.760 ns/op [Average]
  (min, avg, max) = (35495.565, 35595.690, 35760.896), stdev = 101.998
  CI (99.9%): [35202.931, 35988.450] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 45.29% complete, ETA 00:55:08
# Fork: 1 of 1
# Warmup Iteration   1: 213620.574 ns/op
# Warmup Iteration   2: 66426.177 ns/op
# Warmup Iteration   3: 67898.061 ns/op
# Warmup Iteration   4: 66414.749 ns/op
Iteration   1: 65164.198 ns/op
Iteration   2: 64754.980 ns/op
Iteration   3: 67996.220 ns/op
Iteration   4: 67680.461 ns/op
Iteration   5: 64217.404 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  65962.653 ±(99.9%) 6732.618 ns/op [Average]
  (min, avg, max) = (64217.404, 65962.653, 67996.220), stdev = 1748.439
  CI (99.9%): [59230.035, 72695.270] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 45.49% complete, ETA 00:54:57
# Fork: 1 of 1
# Warmup Iteration   1: 308351.568 ns/op
# Warmup Iteration   2: 129375.299 ns/op
# Warmup Iteration   3: 127457.717 ns/op
# Warmup Iteration   4: 127029.092 ns/op
Iteration   1: 126925.984 ns/op
Iteration   2: 127801.131 ns/op
Iteration   3: 128109.665 ns/op
Iteration   4: 126831.528 ns/op
Iteration   5: 126999.370 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  127333.536 ±(99.9%) 2237.684 ns/op [Average]
  (min, avg, max) = (126831.528, 127333.536, 128109.665), stdev = 581.119
  CI (99.9%): [125095.851, 129571.220] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 45.69% complete, ETA 00:54:45
# Fork: 1 of 1
# Warmup Iteration   1: 828795.114 ns/op
# Warmup Iteration   2: 316998.434 ns/op
# Warmup Iteration   3: 313886.215 ns/op
# Warmup Iteration   4: 296123.696 ns/op
Iteration   1: 297453.567 ns/op
Iteration   2: 303610.011 ns/op
Iteration   3: 295704.537 ns/op
Iteration   4: 297466.467 ns/op
Iteration   5: 294916.385 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  297830.193 ±(99.9%) 13155.618 ns/op [Average]
  (min, avg, max) = (294916.385, 297830.193, 303610.011), stdev = 3416.472
  CI (99.9%): [284674.576, 310985.811] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 45.88% complete, ETA 00:54:33
# Fork: 1 of 1
# Warmup Iteration   1: 6190534.054 ns/op
# Warmup Iteration   2: 2845290.090 ns/op
# Warmup Iteration   3: 2845684.924 ns/op
# Warmup Iteration   4: 2936112.606 ns/op
Iteration   1: 2853174.187 ns/op
Iteration   2: 2837695.139 ns/op
Iteration   3: 2852483.136 ns/op
Iteration   4: 2842287.884 ns/op
Iteration   5: 2904815.008 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2858091.071 ±(99.9%) 103761.918 ns/op [Average]
  (min, avg, max) = (2837695.139, 2858091.071, 2904815.008), stdev = 26946.641
  CI (99.9%): [2754329.153, 2961852.989] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 46.08% complete, ETA 00:54:21
# Fork: 1 of 1
# Warmup Iteration   1: 81700.565 ns/op
# Warmup Iteration   2: 34859.634 ns/op
# Warmup Iteration   3: 34582.469 ns/op
# Warmup Iteration   4: 34066.913 ns/op
Iteration   1: 34150.912 ns/op
Iteration   2: 33756.339 ns/op
Iteration   3: 33887.785 ns/op
Iteration   4: 34155.398 ns/op
Iteration   5: 33738.151 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  33937.717 ±(99.9%) 789.276 ns/op [Average]
  (min, avg, max) = (33738.151, 33937.717, 34155.398), stdev = 204.973
  CI (99.9%): [33148.441, 34726.993] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 46.27% complete, ETA 00:54:09
# Fork: 1 of 1
# Warmup Iteration   1: 190486.591 ns/op
# Warmup Iteration   2: 63103.227 ns/op
# Warmup Iteration   3: 62864.254 ns/op
# Warmup Iteration   4: 72346.385 ns/op
Iteration   1: 62863.456 ns/op
Iteration   2: 61707.505 ns/op
Iteration   3: 61458.806 ns/op
Iteration   4: 61756.944 ns/op
Iteration   5: 61996.147 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  61956.572 ±(99.9%) 2085.811 ns/op [Average]
  (min, avg, max) = (61458.806, 61956.572, 62863.456), stdev = 541.678
  CI (99.9%): [59870.761, 64042.382] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 46.47% complete, ETA 00:53:57
# Fork: 1 of 1
# Warmup Iteration   1: 314121.573 ns/op
# Warmup Iteration   2: 126361.287 ns/op
# Warmup Iteration   3: 124064.228 ns/op
# Warmup Iteration   4: 122967.587 ns/op
Iteration   1: 124619.688 ns/op
Iteration   2: 124298.036 ns/op
Iteration   3: 124243.011 ns/op
Iteration   4: 124489.700 ns/op
Iteration   5: 122447.451 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  124019.577 ±(99.9%) 3433.445 ns/op [Average]
  (min, avg, max) = (122447.451, 124019.577, 124619.688), stdev = 891.655
  CI (99.9%): [120586.132, 127453.022] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 46.67% complete, ETA 00:53:45
# Fork: 1 of 1
# Warmup Iteration   1: 728715.522 ns/op
# Warmup Iteration   2: 307401.735 ns/op
# Warmup Iteration   3: 286266.717 ns/op
# Warmup Iteration   4: 284673.139 ns/op
Iteration   1: 285959.483 ns/op
Iteration   2: 285074.656 ns/op
Iteration   3: 288382.824 ns/op
Iteration   4: 285333.495 ns/op
Iteration   5: 285573.815 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  286064.855 ±(99.9%) 5144.821 ns/op [Average]
  (min, avg, max) = (285074.656, 286064.855, 288382.824), stdev = 1336.094
  CI (99.9%): [280920.034, 291209.676] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 46.86% complete, ETA 00:53:34
# Fork: 1 of 1
# Warmup Iteration   1: 6119258.433 ns/op
# Warmup Iteration   2: 3057629.182 ns/op
# Warmup Iteration   3: 2755610.153 ns/op
# Warmup Iteration   4: 2765035.000 ns/op
Iteration   1: 2816457.227 ns/op
Iteration   2: 2797028.304 ns/op
Iteration   3: 2780780.409 ns/op
Iteration   4: 2785559.688 ns/op
Iteration   5: 2769875.115 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2789940.148 ±(99.9%) 68317.526 ns/op [Average]
  (min, avg, max) = (2769875.115, 2789940.148, 2816457.227), stdev = 17741.845
  CI (99.9%): [2721622.622, 2858257.675] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 47.06% complete, ETA 00:53:22
# Fork: 1 of 1
# Warmup Iteration   1: 49654.422 ns/op
# Warmup Iteration   2: 13941.631 ns/op
# Warmup Iteration   3: 13688.221 ns/op
# Warmup Iteration   4: 13198.415 ns/op
Iteration   1: 13005.337 ns/op
Iteration   2: 13068.639 ns/op
Iteration   3: 13065.216 ns/op
Iteration   4: 13009.444 ns/op
Iteration   5: 12995.770 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both":
  13028.881 ±(99.9%) 135.177 ns/op [Average]
  (min, avg, max) = (12995.770, 13028.881, 13068.639), stdev = 35.105
  CI (99.9%): [12893.704, 13164.058] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 47.25% complete, ETA 00:53:09
# Fork: 1 of 1
# Warmup Iteration   1: 89475.893 ns/op
# Warmup Iteration   2: 34630.396 ns/op
# Warmup Iteration   3: 33797.437 ns/op
# Warmup Iteration   4: 33574.917 ns/op
Iteration   1: 33371.283 ns/op
Iteration   2: 33675.633 ns/op
Iteration   3: 33894.615 ns/op
Iteration   4: 33713.531 ns/op
Iteration   5: 33638.017 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both":
  33658.616 ±(99.9%) 725.479 ns/op [Average]
  (min, avg, max) = (33371.283, 33658.616, 33894.615), stdev = 188.405
  CI (99.9%): [32933.136, 34384.095] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 47.45% complete, ETA 00:52:56
# Fork: 1 of 1
# Warmup Iteration   1: 215941.411 ns/op
# Warmup Iteration   2: 73931.939 ns/op
# Warmup Iteration   3: 68564.577 ns/op
# Warmup Iteration   4: 67025.397 ns/op
Iteration   1: 67015.040 ns/op
Iteration   2: 66869.132 ns/op
Iteration   3: 66533.903 ns/op
Iteration   4: 66402.406 ns/op
Iteration   5: 66367.164 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both":
  66637.529 ±(99.9%) 1114.814 ns/op [Average]
  (min, avg, max) = (66367.164, 66637.529, 67015.040), stdev = 289.514
  CI (99.9%): [65522.715, 67752.343] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 47.65% complete, ETA 00:52:44
# Fork: 1 of 1
# Warmup Iteration   1: 580482.178 ns/op
# Warmup Iteration   2: 157202.602 ns/op
# Warmup Iteration   3: 141677.002 ns/op
# Warmup Iteration   4: 134350.029 ns/op
Iteration   1: 134036.587 ns/op
Iteration   2: 134108.882 ns/op
Iteration   3: 134925.230 ns/op
Iteration   4: 135165.787 ns/op
Iteration   5: 135382.437 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both":
  134723.785 ±(99.9%) 2373.787 ns/op [Average]
  (min, avg, max) = (134036.587, 134723.785, 135382.437), stdev = 616.465
  CI (99.9%): [132349.998, 137097.571] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 47.84% complete, ETA 00:52:31
# Fork: 1 of 1
# Warmup Iteration   1: 3808477.436 ns/op
# Warmup Iteration   2: 1133661.180 ns/op
# Warmup Iteration   3: 1107309.606 ns/op
# Warmup Iteration   4: 1075861.805 ns/op
Iteration   1: 1075127.838 ns/op
Iteration   2: 1071165.119 ns/op
Iteration   3: 1064802.048 ns/op
Iteration   4: 1063819.757 ns/op
Iteration   5: 1064911.504 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both":
  1067965.253 ±(99.9%) 19065.369 ns/op [Average]
  (min, avg, max) = (1063819.757, 1067965.253, 1075127.838), stdev = 4951.216
  CI (99.9%): [1048899.884, 1087030.622] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 48.04% complete, ETA 00:52:18
# Fork: 1 of 1
# Warmup Iteration   1: 4393.683 ns/op
# Warmup Iteration   2: 2932.793 ns/op
# Warmup Iteration   3: 2831.816 ns/op
# Warmup Iteration   4: 2781.135 ns/op
Iteration   1: 2797.195 ns/op
Iteration   2: 2776.194 ns/op
Iteration   3: 2791.816 ns/op
Iteration   4: 2798.413 ns/op
Iteration   5: 2796.054 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization":
  2791.934 ±(99.9%) 35.207 ns/op [Average]
  (min, avg, max) = (2776.194, 2791.934, 2798.413), stdev = 9.143
  CI (99.9%): [2756.727, 2827.141] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 48.24% complete, ETA 00:52:05
# Fork: 1 of 1
# Warmup Iteration   1: 10785.028 ns/op
# Warmup Iteration   2: 6319.969 ns/op
# Warmup Iteration   3: 5711.093 ns/op
# Warmup Iteration   4: 5738.720 ns/op
Iteration   1: 5711.185 ns/op
Iteration   2: 5709.874 ns/op
Iteration   3: 5699.879 ns/op
Iteration   4: 5882.518 ns/op
Iteration   5: 5705.903 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization":
  5741.872 ±(99.9%) 303.224 ns/op [Average]
  (min, avg, max) = (5699.879, 5741.872, 5882.518), stdev = 78.746
  CI (99.9%): [5438.647, 6045.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 48.43% complete, ETA 00:51:53
# Fork: 1 of 1
# Warmup Iteration   1: 22251.655 ns/op
# Warmup Iteration   2: 11271.954 ns/op
# Warmup Iteration   3: 10513.914 ns/op
# Warmup Iteration   4: 10506.750 ns/op
Iteration   1: 10562.882 ns/op
Iteration   2: 10556.911 ns/op
Iteration   3: 10591.825 ns/op
Iteration   4: 10787.145 ns/op
Iteration   5: 10531.974 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization":
  10606.147 ±(99.9%) 398.142 ns/op [Average]
  (min, avg, max) = (10531.974, 10606.147, 10787.145), stdev = 103.396
  CI (99.9%): [10208.005, 11004.290] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 48.63% complete, ETA 00:51:40
# Fork: 1 of 1
# Warmup Iteration   1: 40922.224 ns/op
# Warmup Iteration   2: 23987.358 ns/op
# Warmup Iteration   3: 21960.967 ns/op
# Warmup Iteration   4: 21875.379 ns/op
Iteration   1: 21933.199 ns/op
Iteration   2: 21981.237 ns/op
Iteration   3: 21835.882 ns/op
Iteration   4: 21872.392 ns/op
Iteration   5: 21831.216 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization":
  21890.785 ±(99.9%) 250.155 ns/op [Average]
  (min, avg, max) = (21831.216, 21890.785, 21981.237), stdev = 64.964
  CI (99.9%): [21640.630, 22140.940] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 48.82% complete, ETA 00:51:27
# Fork: 1 of 1
# Warmup Iteration   1: 363254.202 ns/op
# Warmup Iteration   2: 235784.657 ns/op
# Warmup Iteration   3: 211278.494 ns/op
# Warmup Iteration   4: 214304.903 ns/op
Iteration   1: 210659.234 ns/op
Iteration   2: 231126.949 ns/op
Iteration   3: 210483.487 ns/op
Iteration   4: 212741.008 ns/op
Iteration   5: 212164.321 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization":
  215435.000 ±(99.9%) 33981.667 ns/op [Average]
  (min, avg, max) = (210483.487, 215435.000, 231126.949), stdev = 8824.931
  CI (99.9%): [181453.333, 249416.667] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 49.02% complete, ETA 00:51:15
# Fork: 1 of 1
# Warmup Iteration   1: 27298.400 ns/op
# Warmup Iteration   2: 9898.188 ns/op
# Warmup Iteration   3: 10151.787 ns/op
# Warmup Iteration   4: 9772.872 ns/op
Iteration   1: 11039.198 ns/op
Iteration   2: 9683.383 ns/op
Iteration   3: 9624.338 ns/op
Iteration   4: 9583.312 ns/op
Iteration   5: 9597.143 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization":
  9905.475 ±(99.9%) 2444.892 ns/op [Average]
  (min, avg, max) = (9583.312, 9905.475, 11039.198), stdev = 634.931
  CI (99.9%): [7460.583, 12350.366] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 49.22% complete, ETA 00:51:02
# Fork: 1 of 1
# Warmup Iteration   1: 69806.121 ns/op
# Warmup Iteration   2: 26533.056 ns/op
# Warmup Iteration   3: 26058.997 ns/op
# Warmup Iteration   4: 25906.891 ns/op
Iteration   1: 25596.615 ns/op
Iteration   2: 25775.423 ns/op
Iteration   3: 25765.889 ns/op
Iteration   4: 25340.444 ns/op
Iteration   5: 25564.156 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization":
  25608.505 ±(99.9%) 685.038 ns/op [Average]
  (min, avg, max) = (25340.444, 25608.505, 25775.423), stdev = 177.902
  CI (99.9%): [24923.468, 26293.543] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 49.41% complete, ETA 00:50:49
# Fork: 1 of 1
# Warmup Iteration   1: 120411.346 ns/op
# Warmup Iteration   2: 51468.638 ns/op
# Warmup Iteration   3: 51303.959 ns/op
# Warmup Iteration   4: 51375.605 ns/op
Iteration   1: 49698.327 ns/op
Iteration   2: 48687.955 ns/op
Iteration   3: 48755.209 ns/op
Iteration   4: 48733.891 ns/op
Iteration   5: 48587.829 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization":
  48892.642 ±(99.9%) 1751.965 ns/op [Average]
  (min, avg, max) = (48587.829, 48892.642, 49698.327), stdev = 454.980
  CI (99.9%): [47140.677, 50644.607] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 49.61% complete, ETA 00:50:37
# Fork: 1 of 1
# Warmup Iteration   1: 193081.995 ns/op
# Warmup Iteration   2: 99708.422 ns/op
# Warmup Iteration   3: 96652.068 ns/op
# Warmup Iteration   4: 92602.759 ns/op
Iteration   1: 92015.656 ns/op
Iteration   2: 93174.363 ns/op
Iteration   3: 93151.789 ns/op
Iteration   4: 93095.949 ns/op
Iteration   5: 93244.728 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization":
  92936.497 ±(99.9%) 1992.787 ns/op [Average]
  (min, avg, max) = (92015.656, 92936.497, 93244.728), stdev = 517.520
  CI (99.9%): [90943.710, 94929.284] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 49.80% complete, ETA 00:50:24
# Fork: 1 of 1
# Warmup Iteration   1: 2299179.199 ns/op
# Warmup Iteration   2: 858883.580 ns/op
# Warmup Iteration   3: 808344.021 ns/op
# Warmup Iteration   4: 782634.958 ns/op
Iteration   1: 775731.104 ns/op
Iteration   2: 778637.553 ns/op
Iteration   3: 779510.468 ns/op
Iteration   4: 772333.262 ns/op
Iteration   5: 783054.843 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization":
  777853.446 ±(99.9%) 15569.159 ns/op [Average]
  (min, avg, max) = (772333.262, 777853.446, 783054.843), stdev = 4043.261
  CI (99.9%): [762284.288, 793422.605] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 50.00% complete, ETA 00:50:11
# Fork: 1 of 1
# Warmup Iteration   1: 78675.834 ns/op
# Warmup Iteration   2: 19312.580 ns/op
# Warmup Iteration   3: 17596.080 ns/op
# Warmup Iteration   4: 17587.322 ns/op
Iteration   1: 16825.788 ns/op
Iteration   2: 16846.732 ns/op
Iteration   3: 16831.633 ns/op
Iteration   4: 16951.938 ns/op
Iteration   5: 17569.796 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  17005.177 ±(99.9%) 1231.351 ns/op [Average]
  (min, avg, max) = (16825.788, 17005.177, 17569.796), stdev = 319.778
  CI (99.9%): [15773.827, 18236.528] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 50.20% complete, ETA 00:50:00
# Fork: 1 of 1
# Warmup Iteration   1: 295167.541 ns/op
# Warmup Iteration   2: 91277.967 ns/op
# Warmup Iteration   3: 33821.539 ns/op
# Warmup Iteration   4: 32665.012 ns/op
Iteration   1: 31092.799 ns/op
Iteration   2: 30672.462 ns/op
Iteration   3: 30725.707 ns/op
Iteration   4: 30730.757 ns/op
Iteration   5: 30707.603 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  30785.866 ±(99.9%) 666.533 ns/op [Average]
  (min, avg, max) = (30672.462, 30785.866, 31092.799), stdev = 173.096
  CI (99.9%): [30119.333, 31452.398] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 50.39% complete, ETA 00:49:48
# Fork: 1 of 1
# Warmup Iteration   1: 486905.100 ns/op
# Warmup Iteration   2: 159094.508 ns/op
# Warmup Iteration   3: 66380.405 ns/op
# Warmup Iteration   4: 59181.219 ns/op
Iteration   1: 58687.120 ns/op
Iteration   2: 56815.403 ns/op
Iteration   3: 57007.787 ns/op
Iteration   4: 57870.539 ns/op
Iteration   5: 56742.521 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  57424.674 ±(99.9%) 3223.350 ns/op [Average]
  (min, avg, max) = (56742.521, 57424.674, 58687.120), stdev = 837.094
  CI (99.9%): [54201.324, 60648.024] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 50.59% complete, ETA 00:49:36
# Fork: 1 of 1
# Warmup Iteration   1: 412810.761 ns/op
# Warmup Iteration   2: 131030.612 ns/op
# Warmup Iteration   3: 119081.719 ns/op
# Warmup Iteration   4: 118200.078 ns/op
Iteration   1: 113704.507 ns/op
Iteration   2: 113258.443 ns/op
Iteration   3: 113502.933 ns/op
Iteration   4: 113493.381 ns/op
Iteration   5: 113159.960 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  113423.845 ±(99.9%) 832.253 ns/op [Average]
  (min, avg, max) = (113159.960, 113423.845, 113704.507), stdev = 216.133
  CI (99.9%): [112591.592, 114256.098] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 50.78% complete, ETA 00:49:24
# Fork: 1 of 1
# Warmup Iteration   1: 5400854.258 ns/op
# Warmup Iteration   2: 1411359.828 ns/op
# Warmup Iteration   3: 892995.431 ns/op
# Warmup Iteration   4: 924583.314 ns/op
Iteration   1: 909987.411 ns/op
Iteration   2: 907644.927 ns/op
Iteration   3: 844896.807 ns/op
Iteration   4: 845363.710 ns/op
Iteration   5: 841119.048 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  869802.381 ±(99.9%) 137322.362 ns/op [Average]
  (min, avg, max) = (841119.048, 869802.381, 909987.411), stdev = 35662.181
  CI (99.9%): [732480.019, 1007124.743] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 50.98% complete, ETA 00:49:12
# Fork: 1 of 1
# Warmup Iteration   1: 39698.844 ns/op
# Warmup Iteration   2: 13564.442 ns/op
# Warmup Iteration   3: 13832.757 ns/op
# Warmup Iteration   4: 12909.240 ns/op
Iteration   1: 12729.588 ns/op
Iteration   2: 12731.186 ns/op
Iteration   3: 12734.919 ns/op
Iteration   4: 12721.025 ns/op
Iteration   5: 12798.017 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  12742.947 ±(99.9%) 120.152 ns/op [Average]
  (min, avg, max) = (12721.025, 12742.947, 12798.017), stdev = 31.203
  CI (99.9%): [12622.795, 12863.099] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 51.18% complete, ETA 00:49:00
# Fork: 1 of 1
# Warmup Iteration   1: 185053.676 ns/op
# Warmup Iteration   2: 41873.276 ns/op
# Warmup Iteration   3: 24197.791 ns/op
# Warmup Iteration   4: 23744.634 ns/op
Iteration   1: 22611.900 ns/op
Iteration   2: 22564.431 ns/op
Iteration   3: 22571.791 ns/op
Iteration   4: 22611.873 ns/op
Iteration   5: 22595.357 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  22591.070 ±(99.9%) 85.375 ns/op [Average]
  (min, avg, max) = (22564.431, 22591.070, 22611.900), stdev = 22.172
  CI (99.9%): [22505.696, 22676.445] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 51.37% complete, ETA 00:48:49
# Fork: 1 of 1
# Warmup Iteration   1: 198212.119 ns/op
# Warmup Iteration   2: 50989.820 ns/op
# Warmup Iteration   3: 45148.982 ns/op
# Warmup Iteration   4: 43716.911 ns/op
Iteration   1: 42725.593 ns/op
Iteration   2: 42506.389 ns/op
Iteration   3: 42547.098 ns/op
Iteration   4: 42609.427 ns/op
Iteration   5: 44258.785 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  42929.459 ±(99.9%) 2879.162 ns/op [Average]
  (min, avg, max) = (42506.389, 42929.459, 44258.785), stdev = 747.709
  CI (99.9%): [40050.297, 45808.620] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 51.57% complete, ETA 00:48:37
# Fork: 1 of 1
# Warmup Iteration   1: 698466.163 ns/op
# Warmup Iteration   2: 127253.720 ns/op
# Warmup Iteration   3: 87761.241 ns/op
# Warmup Iteration   4: 86322.610 ns/op
Iteration   1: 83538.025 ns/op
Iteration   2: 83723.004 ns/op
Iteration   3: 83038.625 ns/op
Iteration   4: 83141.201 ns/op
Iteration   5: 82947.268 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  83277.624 ±(99.9%) 1293.036 ns/op [Average]
  (min, avg, max) = (82947.268, 83277.624, 83723.004), stdev = 335.797
  CI (99.9%): [81984.589, 84570.660] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 51.76% complete, ETA 00:48:25
# Fork: 1 of 1
# Warmup Iteration   1: 4820085.200 ns/op
# Warmup Iteration   2: 811065.090 ns/op
# Warmup Iteration   3: 774662.886 ns/op
# Warmup Iteration   4: 706237.172 ns/op
Iteration   1: 670339.210 ns/op
Iteration   2: 669233.764 ns/op
Iteration   3: 665473.953 ns/op
Iteration   4: 668489.248 ns/op
Iteration   5: 664643.914 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  667636.018 ±(99.9%) 9474.317 ns/op [Average]
  (min, avg, max) = (664643.914, 667636.018, 670339.210), stdev = 2460.450
  CI (99.9%): [658161.701, 677110.334] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 51.96% complete, ETA 00:48:13
# Fork: 1 of 1
# Warmup Iteration   1: 124776.523 ns/op
# Warmup Iteration   2: 49917.466 ns/op
# Warmup Iteration   3: 16630.182 ns/op
# Warmup Iteration   4: 15381.177 ns/op
Iteration   1: 14762.460 ns/op
Iteration   2: 14774.286 ns/op
Iteration   3: 14775.744 ns/op
Iteration   4: 14768.887 ns/op
Iteration   5: 14748.745 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14766.025 ±(99.9%) 42.278 ns/op [Average]
  (min, avg, max) = (14748.745, 14766.025, 14775.744), stdev = 10.979
  CI (99.9%): [14723.747, 14808.303] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 52.16% complete, ETA 00:48:01
# Fork: 1 of 1
# Warmup Iteration   1: 167425.558 ns/op
# Warmup Iteration   2: 32193.269 ns/op
# Warmup Iteration   3: 25184.630 ns/op
# Warmup Iteration   4: 25124.871 ns/op
Iteration   1: 24413.941 ns/op
Iteration   2: 24428.727 ns/op
Iteration   3: 24408.291 ns/op
Iteration   4: 24396.647 ns/op
Iteration   5: 24525.082 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24434.537 ±(99.9%) 199.907 ns/op [Average]
  (min, avg, max) = (24396.647, 24434.537, 24525.082), stdev = 51.915
  CI (99.9%): [24234.630, 24634.445] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 52.35% complete, ETA 00:47:50
# Fork: 1 of 1
# Warmup Iteration   1: 498757.442 ns/op
# Warmup Iteration   2: 121582.922 ns/op
# Warmup Iteration   3: 49164.640 ns/op
# Warmup Iteration   4: 45494.369 ns/op
Iteration   1: 42983.521 ns/op
Iteration   2: 42739.599 ns/op
Iteration   3: 42782.992 ns/op
Iteration   4: 42817.664 ns/op
Iteration   5: 42920.096 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  42848.774 ±(99.9%) 387.261 ns/op [Average]
  (min, avg, max) = (42739.599, 42848.774, 42983.521), stdev = 100.570
  CI (99.9%): [42461.513, 43236.035] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 52.55% complete, ETA 00:47:38
# Fork: 1 of 1
# Warmup Iteration   1: 564016.321 ns/op
# Warmup Iteration   2: 161865.946 ns/op
# Warmup Iteration   3: 87728.912 ns/op
# Warmup Iteration   4: 86474.432 ns/op
Iteration   1: 82206.586 ns/op
Iteration   2: 82322.377 ns/op
Iteration   3: 81945.830 ns/op
Iteration   4: 81947.610 ns/op
Iteration   5: 82907.040 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  82265.889 ±(99.9%) 1517.859 ns/op [Average]
  (min, avg, max) = (81945.830, 82265.889, 82907.040), stdev = 394.183
  CI (99.9%): [80748.030, 83783.748] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 52.75% complete, ETA 00:47:26
# Fork: 1 of 1
# Warmup Iteration   1: 3099542.359 ns/op
# Warmup Iteration   2: 845277.323 ns/op
# Warmup Iteration   3: 643919.298 ns/op
# Warmup Iteration   4: 613212.408 ns/op
Iteration   1: 591037.776 ns/op
Iteration   2: 581202.062 ns/op
Iteration   3: 578127.791 ns/op
Iteration   4: 605579.445 ns/op
Iteration   5: 577801.967 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  586749.808 ±(99.9%) 45484.989 ns/op [Average]
  (min, avg, max) = (577801.967, 586749.808, 605579.445), stdev = 11812.307
  CI (99.9%): [541264.819, 632234.798] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 52.94% complete, ETA 00:47:14
# Fork: 1 of 1
# Warmup Iteration   1: 29323.977 ns/op
# Warmup Iteration   2: 6419.748 ns/op
# Warmup Iteration   3: 5377.151 ns/op
# Warmup Iteration   4: 5226.523 ns/op
Iteration   1: 5215.525 ns/op
Iteration   2: 5219.403 ns/op
Iteration   3: 5201.254 ns/op
Iteration   4: 5213.118 ns/op
Iteration   5: 5200.179 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  5209.896 ±(99.9%) 33.433 ns/op [Average]
  (min, avg, max) = (5200.179, 5209.896, 5219.403), stdev = 8.683
  CI (99.9%): [5176.462, 5243.329] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 53.14% complete, ETA 00:47:02
# Fork: 1 of 1
# Warmup Iteration   1: 66400.932 ns/op
# Warmup Iteration   2: 14112.784 ns/op
# Warmup Iteration   3: 10113.690 ns/op
# Warmup Iteration   4: 9614.651 ns/op
Iteration   1: 9850.494 ns/op
Iteration   2: 9646.037 ns/op
Iteration   3: 9627.506 ns/op
Iteration   4: 9676.573 ns/op
Iteration   5: 9691.159 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  9698.354 ±(99.9%) 341.327 ns/op [Average]
  (min, avg, max) = (9627.506, 9698.354, 9850.494), stdev = 88.642
  CI (99.9%): [9357.027, 10039.681] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 53.33% complete, ETA 00:46:51
# Fork: 1 of 1
# Warmup Iteration   1: 212085.107 ns/op
# Warmup Iteration   2: 44256.590 ns/op
# Warmup Iteration   3: 21391.183 ns/op
# Warmup Iteration   4: 19853.621 ns/op
Iteration   1: 18992.980 ns/op
Iteration   2: 19009.261 ns/op
Iteration   3: 18900.363 ns/op
Iteration   4: 18977.126 ns/op
Iteration   5: 19179.147 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  19011.776 ±(99.9%) 394.509 ns/op [Average]
  (min, avg, max) = (18900.363, 19011.776, 19179.147), stdev = 102.453
  CI (99.9%): [18617.267, 19406.285] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 53.53% complete, ETA 00:46:39
# Fork: 1 of 1
# Warmup Iteration   1: 358758.044 ns/op
# Warmup Iteration   2: 99891.185 ns/op
# Warmup Iteration   3: 41016.212 ns/op
# Warmup Iteration   4: 36753.199 ns/op
Iteration   1: 37673.049 ns/op
Iteration   2: 36295.944 ns/op
Iteration   3: 36171.435 ns/op
Iteration   4: 36272.539 ns/op
Iteration   5: 36163.603 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  36515.314 ±(99.9%) 2502.450 ns/op [Average]
  (min, avg, max) = (36163.603, 36515.314, 37673.049), stdev = 649.878
  CI (99.9%): [34012.864, 39017.764] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 53.73% complete, ETA 00:46:27
# Fork: 1 of 1
# Warmup Iteration   1: 2238571.672 ns/op
# Warmup Iteration   2: 568345.425 ns/op
# Warmup Iteration   3: 335093.781 ns/op
# Warmup Iteration   4: 298296.563 ns/op
Iteration   1: 298863.535 ns/op
Iteration   2: 296231.047 ns/op
Iteration   3: 296649.523 ns/op
Iteration   4: 298523.222 ns/op
Iteration   5: 297152.087 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  297483.883 ±(99.9%) 4457.239 ns/op [Average]
  (min, avg, max) = (296231.047, 297483.883, 298863.535), stdev = 1157.531
  CI (99.9%): [293026.644, 301941.122] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 53.92% complete, ETA 00:46:15
# Fork: 1 of 1
# Warmup Iteration   1: 52479.353 ns/op
# Warmup Iteration   2: 12381.337 ns/op
# Warmup Iteration   3: 8401.975 ns/op
# Warmup Iteration   4: 8051.504 ns/op
Iteration   1: 8062.775 ns/op
Iteration   2: 8263.857 ns/op
Iteration   3: 8214.077 ns/op
Iteration   4: 8102.781 ns/op
Iteration   5: 8091.524 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8147.003 ±(99.9%) 335.037 ns/op [Average]
  (min, avg, max) = (8062.775, 8147.003, 8263.857), stdev = 87.008
  CI (99.9%): [7811.966, 8482.039] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 54.12% complete, ETA 00:46:03
# Fork: 1 of 1
# Warmup Iteration   1: 109111.651 ns/op
# Warmup Iteration   2: 25198.959 ns/op
# Warmup Iteration   3: 15116.336 ns/op
# Warmup Iteration   4: 13978.218 ns/op
Iteration   1: 14016.882 ns/op
Iteration   2: 15328.673 ns/op
Iteration   3: 13923.291 ns/op
Iteration   4: 13917.744 ns/op
Iteration   5: 13889.080 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14215.134 ±(99.9%) 2404.108 ns/op [Average]
  (min, avg, max) = (13889.080, 14215.134, 15328.673), stdev = 624.339
  CI (99.9%): [11811.026, 16619.241] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 54.31% complete, ETA 00:45:51
# Fork: 1 of 1
# Warmup Iteration   1: 149500.091 ns/op
# Warmup Iteration   2: 53922.516 ns/op
# Warmup Iteration   3: 26921.877 ns/op
# Warmup Iteration   4: 24401.845 ns/op
Iteration   1: 24183.715 ns/op
Iteration   2: 24283.803 ns/op
Iteration   3: 24201.594 ns/op
Iteration   4: 24245.349 ns/op
Iteration   5: 24353.917 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24253.676 ±(99.9%) 262.807 ns/op [Average]
  (min, avg, max) = (24183.715, 24253.676, 24353.917), stdev = 68.250
  CI (99.9%): [23990.869, 24516.482] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 54.51% complete, ETA 00:45:40
# Fork: 1 of 1
# Warmup Iteration   1: 462641.308 ns/op
# Warmup Iteration   2: 145547.176 ns/op
# Warmup Iteration   3: 55130.670 ns/op
# Warmup Iteration   4: 49815.064 ns/op
Iteration   1: 50750.117 ns/op
Iteration   2: 48230.029 ns/op
Iteration   3: 47999.943 ns/op
Iteration   4: 47994.858 ns/op
Iteration   5: 48078.855 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  48610.761 ±(99.9%) 4619.634 ns/op [Average]
  (min, avg, max) = (47994.858, 48610.761, 50750.117), stdev = 1199.704
  CI (99.9%): [43991.126, 53230.395] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 54.71% complete, ETA 00:45:28
# Fork: 1 of 1
# Warmup Iteration   1: 2111157.076 ns/op
# Warmup Iteration   2: 753316.744 ns/op
# Warmup Iteration   3: 479724.059 ns/op
# Warmup Iteration   4: 428030.258 ns/op
Iteration   1: 425332.514 ns/op
Iteration   2: 400742.318 ns/op
Iteration   3: 400660.106 ns/op
Iteration   4: 401170.174 ns/op
Iteration   5: 400843.566 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  405749.736 ±(99.9%) 42160.008 ns/op [Average]
  (min, avg, max) = (400660.106, 405749.736, 425332.514), stdev = 10948.820
  CI (99.9%): [363589.728, 447909.744] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 54.90% complete, ETA 00:45:16
# Fork: 1 of 1
# Warmup Iteration   1: 50491.502 ns/op
# Warmup Iteration   2: 10389.084 ns/op
# Warmup Iteration   3: 7582.918 ns/op
# Warmup Iteration   4: 7537.140 ns/op
Iteration   1: 7562.125 ns/op
Iteration   2: 7508.051 ns/op
Iteration   3: 7541.372 ns/op
Iteration   4: 7682.330 ns/op
Iteration   5: 7521.016 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  7562.979 ±(99.9%) 268.789 ns/op [Average]
  (min, avg, max) = (7508.051, 7562.979, 7682.330), stdev = 69.804
  CI (99.9%): [7294.190, 7831.768] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 55.10% complete, ETA 00:45:04
# Fork: 1 of 1
# Warmup Iteration   1: 125368.189 ns/op
# Warmup Iteration   2: 20275.139 ns/op
# Warmup Iteration   3: 14345.238 ns/op
# Warmup Iteration   4: 13901.232 ns/op
Iteration   1: 13867.306 ns/op
Iteration   2: 13830.119 ns/op
Iteration   3: 13881.142 ns/op
Iteration   4: 13839.111 ns/op
Iteration   5: 13815.800 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13846.695 ±(99.9%) 103.649 ns/op [Average]
  (min, avg, max) = (13815.800, 13846.695, 13881.142), stdev = 26.917
  CI (99.9%): [13743.046, 13950.345] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 55.29% complete, ETA 00:44:52
# Fork: 1 of 1
# Warmup Iteration   1: 123664.729 ns/op
# Warmup Iteration   2: 32649.585 ns/op
# Warmup Iteration   3: 30326.956 ns/op
# Warmup Iteration   4: 27228.400 ns/op
Iteration   1: 27043.161 ns/op
Iteration   2: 26914.584 ns/op
Iteration   3: 27042.984 ns/op
Iteration   4: 26959.412 ns/op
Iteration   5: 26953.270 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  26982.682 ±(99.9%) 222.356 ns/op [Average]
  (min, avg, max) = (26914.584, 26982.682, 27043.161), stdev = 57.745
  CI (99.9%): [26760.326, 27205.038] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 55.49% complete, ETA 00:44:41
# Fork: 1 of 1
# Warmup Iteration   1: 275554.987 ns/op
# Warmup Iteration   2: 93478.808 ns/op
# Warmup Iteration   3: 56122.369 ns/op
# Warmup Iteration   4: 54077.063 ns/op
Iteration   1: 54097.141 ns/op
Iteration   2: 53878.147 ns/op
Iteration   3: 53629.319 ns/op
Iteration   4: 54174.691 ns/op
Iteration   5: 53880.272 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  53931.914 ±(99.9%) 824.438 ns/op [Average]
  (min, avg, max) = (53629.319, 53931.914, 54174.691), stdev = 214.104
  CI (99.9%): [53107.476, 54756.352] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 55.69% complete, ETA 00:44:29
# Fork: 1 of 1
# Warmup Iteration   1: 1636255.485 ns/op
# Warmup Iteration   2: 583880.895 ns/op
# Warmup Iteration   3: 500500.830 ns/op
# Warmup Iteration   4: 431514.926 ns/op
Iteration   1: 428729.027 ns/op
Iteration   2: 428196.131 ns/op
Iteration   3: 427047.374 ns/op
Iteration   4: 426979.730 ns/op
Iteration   5: 425261.563 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  427242.765 ±(99.9%) 5148.359 ns/op [Average]
  (min, avg, max) = (425261.563, 427242.765, 428729.027), stdev = 1337.012
  CI (99.9%): [422094.406, 432391.123] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 55.88% complete, ETA 00:44:17
# Fork: 1 of 1
# Warmup Iteration   1: 531341.114 ns/op
# Warmup Iteration   2: 186466.363 ns/op
# Warmup Iteration   3: 150782.349 ns/op
# Warmup Iteration   4: 137974.148 ns/op
Iteration   1: 138453.128 ns/op
Iteration   2: 131892.841 ns/op
Iteration   3: 132176.201 ns/op
Iteration   4: 132238.187 ns/op
Iteration   5: 131902.105 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  133332.493 ±(99.9%) 11039.002 ns/op [Average]
  (min, avg, max) = (131892.841, 133332.493, 138453.128), stdev = 2866.794
  CI (99.9%): [122293.491, 144371.495] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 56.08% complete, ETA 00:44:05
# Fork: 1 of 1
# Warmup Iteration   1: 719699.446 ns/op
# Warmup Iteration   2: 326380.841 ns/op
# Warmup Iteration   3: 188924.283 ns/op
# Warmup Iteration   4: 185966.256 ns/op
Iteration   1: 185351.925 ns/op
Iteration   2: 179774.784 ns/op
Iteration   3: 180471.626 ns/op
Iteration   4: 180290.174 ns/op
Iteration   5: 180106.458 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  181198.994 ±(99.9%) 8994.337 ns/op [Average]
  (min, avg, max) = (179774.784, 181198.994, 185351.925), stdev = 2335.801
  CI (99.9%): [172204.657, 190193.330] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 56.27% complete, ETA 00:43:53
# Fork: 1 of 1
# Warmup Iteration   1: 1287623.626 ns/op
# Warmup Iteration   2: 349857.131 ns/op
# Warmup Iteration   3: 243983.386 ns/op
# Warmup Iteration   4: 243076.251 ns/op
Iteration   1: 242329.765 ns/op
Iteration   2: 234596.296 ns/op
Iteration   3: 234107.499 ns/op
Iteration   4: 235162.483 ns/op
Iteration   5: 235395.292 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  236318.267 ±(99.9%) 13083.480 ns/op [Average]
  (min, avg, max) = (234107.499, 236318.267, 242329.765), stdev = 3397.738
  CI (99.9%): [223234.787, 249401.747] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 56.47% complete, ETA 00:43:41
# Fork: 1 of 1
# Warmup Iteration   1: 1666876.668 ns/op
# Warmup Iteration   2: 459124.312 ns/op
# Warmup Iteration   3: 386144.037 ns/op
# Warmup Iteration   4: 352694.358 ns/op
Iteration   1: 357302.339 ns/op
Iteration   2: 346635.388 ns/op
Iteration   3: 346581.631 ns/op
Iteration   4: 344844.750 ns/op
Iteration   5: 345894.127 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  348251.647 ±(99.9%) 19679.873 ns/op [Average]
  (min, avg, max) = (344844.750, 348251.647, 357302.339), stdev = 5110.801
  CI (99.9%): [328571.774, 367931.520] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 56.67% complete, ETA 00:43:30
# Fork: 1 of 1
# Warmup Iteration   1: 9761834.160 ns/op
# Warmup Iteration   2: 2296365.395 ns/op
# Warmup Iteration   3: 2069233.972 ns/op
# Warmup Iteration   4: 2099856.099 ns/op
Iteration   1: 2024773.368 ns/op
Iteration   2: 2021939.969 ns/op
Iteration   3: 2103357.707 ns/op
Iteration   4: 1993883.256 ns/op
Iteration   5: 2004439.760 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  2029678.812 ±(99.9%) 165967.491 ns/op [Average]
  (min, avg, max) = (1993883.256, 2029678.812, 2103357.707), stdev = 43101.230
  CI (99.9%): [1863711.321, 2195646.303] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 56.86% complete, ETA 00:43:18
# Fork: 1 of 1
# Warmup Iteration   1: 12399.413 ns/op
# Warmup Iteration   2: 5142.150 ns/op
# Warmup Iteration   3: 4564.623 ns/op
# Warmup Iteration   4: 4632.094 ns/op
Iteration   1: 4534.829 ns/op
Iteration   2: 4832.542 ns/op
Iteration   3: 4588.022 ns/op
Iteration   4: 4541.662 ns/op
Iteration   5: 4558.221 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  4611.055 ±(99.9%) 483.268 ns/op [Average]
  (min, avg, max) = (4534.829, 4611.055, 4832.542), stdev = 125.503
  CI (99.9%): [4127.787, 5094.323] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 57.06% complete, ETA 00:43:06
# Fork: 1 of 1
# Warmup Iteration   1: 23101.035 ns/op
# Warmup Iteration   2: 8961.866 ns/op
# Warmup Iteration   3: 8270.306 ns/op
# Warmup Iteration   4: 8201.885 ns/op
Iteration   1: 8221.995 ns/op
Iteration   2: 8432.134 ns/op
Iteration   3: 8199.390 ns/op
Iteration   4: 8224.082 ns/op
Iteration   5: 8184.857 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8252.492 ±(99.9%) 391.757 ns/op [Average]
  (min, avg, max) = (8184.857, 8252.492, 8432.134), stdev = 101.738
  CI (99.9%): [7860.735, 8644.249] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 57.25% complete, ETA 00:42:54
# Fork: 1 of 1
# Warmup Iteration   1: 32110.265 ns/op
# Warmup Iteration   2: 16814.663 ns/op
# Warmup Iteration   3: 14875.624 ns/op
# Warmup Iteration   4: 14843.849 ns/op
Iteration   1: 14761.369 ns/op
Iteration   2: 14857.058 ns/op
Iteration   3: 14808.016 ns/op
Iteration   4: 14768.966 ns/op
Iteration   5: 14802.879 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14799.658 ±(99.9%) 146.414 ns/op [Average]
  (min, avg, max) = (14761.369, 14799.658, 14857.058), stdev = 38.023
  CI (99.9%): [14653.244, 14946.071] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 57.45% complete, ETA 00:42:42
# Fork: 1 of 1
# Warmup Iteration   1: 65800.165 ns/op
# Warmup Iteration   2: 31191.052 ns/op
# Warmup Iteration   3: 27924.085 ns/op
# Warmup Iteration   4: 27351.909 ns/op
Iteration   1: 27482.034 ns/op
Iteration   2: 27436.980 ns/op
Iteration   3: 29287.514 ns/op
Iteration   4: 27372.016 ns/op
Iteration   5: 27591.352 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  27833.979 ±(99.9%) 3143.949 ns/op [Average]
  (min, avg, max) = (27372.016, 27833.979, 29287.514), stdev = 816.474
  CI (99.9%): [24690.030, 30977.928] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 57.65% complete, ETA 00:42:30
# Fork: 1 of 1
# Warmup Iteration   1: 504623.839 ns/op
# Warmup Iteration   2: 277708.532 ns/op
# Warmup Iteration   3: 244686.937 ns/op
# Warmup Iteration   4: 244327.249 ns/op
Iteration   1: 244602.323 ns/op
Iteration   2: 244367.590 ns/op
Iteration   3: 244460.813 ns/op
Iteration   4: 244194.678 ns/op
Iteration   5: 247796.244 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  245084.330 ±(99.9%) 5865.373 ns/op [Average]
  (min, avg, max) = (244194.678, 245084.330, 247796.244), stdev = 1523.219
  CI (99.9%): [239218.957, 250949.702] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 57.84% complete, ETA 00:42:19
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
24361.282 ns/op
# Warmup Iteration   2: 12037.471 ns/op
# Warmup Iteration   3: 14410.374 ns/op
# Warmup Iteration   4: 14652.663 ns/op
Iteration   1: 14159.375 ns/op
Iteration   2: 18773.998 ns/op
Iteration   3: 19377.794 ns/op
Iteration   4: 19187.255 ns/op
Iteration   5: 19228.584 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  18145.401 ±(99.9%) 8623.439 ns/op [Average]
  (min, avg, max) = (14159.375, 18145.401, 19377.794), stdev = 2239.480
  CI (99.9%): [9521.962, 26768.841] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 58.04% complete, ETA 00:42:07
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
50378.283 ns/op
# Warmup Iteration   2: 19476.381 ns/op
# Warmup Iteration   3: 21112.346 ns/op
# Warmup Iteration   4: 19826.927 ns/op
Iteration   1: 19175.707 ns/op
Iteration   2: 19415.867 ns/op
Iteration   3: 19562.509 ns/op
Iteration   4: 19562.565 ns/op
Iteration   5: 19701.059 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  19483.542 ±(99.9%) 768.048 ns/op [Average]
  (min, avg, max) = (19175.707, 19483.542, 19701.059), stdev = 199.460
  CI (99.9%): [18715.494, 20251.589] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 58.24% complete, ETA 00:41:55
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
66353.586 ns/op
# Warmup Iteration   2: 34179.826 ns/op
# Warmup Iteration   3: 34197.292 ns/op
# Warmup Iteration   4: 33993.701 ns/op
Iteration   1: 34909.712 ns/op
Iteration   2: 35147.504 ns/op
Iteration   3: 35116.621 ns/op
Iteration   4: 35206.835 ns/op
Iteration   5: 35279.085 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  35131.951 ±(99.9%) 534.682 ns/op [Average]
  (min, avg, max) = (34909.712, 35131.951, 35279.085), stdev = 138.855
  CI (99.9%): [34597.270, 35666.633] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 58.43% complete, ETA 00:41:43
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
154014.870 ns/op
# Warmup Iteration   2: 64019.553 ns/op
# Warmup Iteration   3: 64623.939 ns/op
# Warmup Iteration   4: 63960.739 ns/op
Iteration   1: 64992.258 ns/op
Iteration   2: 65484.617 ns/op
Iteration   3: 65871.614 ns/op
Iteration   4: 65724.670 ns/op
Iteration   5: 65570.286 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  65528.689 ±(99.9%) 1287.862 ns/op [Average]
  (min, avg, max) = (64992.258, 65528.689, 65871.614), stdev = 334.454
  CI (99.9%): [64240.827, 66816.551] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 58.63% complete, ETA 00:41:32
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1322487.076 ns/op
# Warmup Iteration   2: 807183.267 ns/op
# Warmup Iteration   3: 779595.527 ns/op
# Warmup Iteration   4: 764109.105 ns/op
Iteration   1: 771415.001 ns/op
Iteration   2: 761729.449 ns/op
Iteration   3: 763578.583 ns/op
Iteration   4: 768026.587 ns/op
Iteration   5: 760197.353 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  764989.394 ±(99.9%) 17864.483 ns/op [Average]
  (min, avg, max) = (760197.353, 764989.394, 771415.001), stdev = 4639.349
  CI (99.9%): [747124.912, 782853.877] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 58.82% complete, ETA 00:41:20
# Fork: 1 of 1
# Warmup Iteration   1: 20804.253 ns/op
# Warmup Iteration   2: 7066.140 ns/op
# Warmup Iteration   3: 6565.517 ns/op
# Warmup Iteration   4: 6595.158 ns/op
Iteration   1: 6445.840 ns/op
Iteration   2: 6478.202 ns/op
Iteration   3: 6440.091 ns/op
Iteration   4: 6417.013 ns/op
Iteration   5: 6455.728 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  6447.375 ±(99.9%) 86.046 ns/op [Average]
  (min, avg, max) = (6417.013, 6447.375, 6478.202), stdev = 22.346
  CI (99.9%): [6361.329, 6533.421] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 59.02% complete, ETA 00:41:08
# Fork: 1 of 1
# Warmup Iteration   1: 47236.501 ns/op
# Warmup Iteration   2: 15099.039 ns/op
# Warmup Iteration   3: 13806.658 ns/op
# Warmup Iteration   4: 13611.064 ns/op
Iteration   1: 14512.869 ns/op
Iteration   2: 13250.314 ns/op
Iteration   3: 13232.921 ns/op
Iteration   4: 13255.311 ns/op
Iteration   5: 13261.913 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13502.666 ±(99.9%) 2174.933 ns/op [Average]
  (min, avg, max) = (13232.921, 13502.666, 14512.869), stdev = 564.823
  CI (99.9%): [11327.733, 15677.599] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 59.22% complete, ETA 00:40:56
# Fork: 1 of 1
# Warmup Iteration   1: 269946.999 ns/op
# Warmup Iteration   2: 32455.016 ns/op
# Warmup Iteration   3: 24629.733 ns/op
# Warmup Iteration   4: 24462.001 ns/op
Iteration   1: 23191.448 ns/op
Iteration   2: 23237.478 ns/op
Iteration   3: 23193.620 ns/op
Iteration   4: 23257.356 ns/op
Iteration   5: 23212.919 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  23218.564 ±(99.9%) 109.792 ns/op [Average]
  (min, avg, max) = (23191.448, 23218.564, 23257.356), stdev = 28.513
  CI (99.9%): [23108.772, 23328.357] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 59.41% complete, ETA 00:40:44
# Fork: 1 of 1
# Warmup Iteration   1: 198672.924 ns/op
# Warmup Iteration   2: 83845.113 ns/op
# Warmup Iteration   3: 45656.342 ns/op
# Warmup Iteration   4: 46458.812 ns/op
Iteration   1: 45239.412 ns/op
Iteration   2: 44361.076 ns/op
Iteration   3: 44424.572 ns/op
Iteration   4: 44492.227 ns/op
Iteration   5: 44513.553 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  44606.168 ±(99.9%) 1382.489 ns/op [Average]
  (min, avg, max) = (44361.076, 44606.168, 45239.412), stdev = 359.028
  CI (99.9%): [43223.679, 45988.657] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 59.61% complete, ETA 00:40:32
# Fork: 1 of 1
# Warmup Iteration   1: 1102914.193 ns/op
# Warmup Iteration   2: 422232.754 ns/op
# Warmup Iteration   3: 419624.248 ns/op
# Warmup Iteration   4: 383707.156 ns/op
Iteration   1: 383439.401 ns/op
Iteration   2: 382698.004 ns/op
Iteration   3: 382966.746 ns/op
Iteration   4: 383168.191 ns/op
Iteration   5: 383017.541 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  383057.976 ±(99.9%) 1049.557 ns/op [Average]
  (min, avg, max) = (382698.004, 383057.976, 383439.401), stdev = 272.567
  CI (99.9%): [382008.420, 384107.533] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 59.80% complete, ETA 00:40:20
# Fork: 1 of 1
# Warmup Iteration   1: 247285.340 ns/op
# Warmup Iteration   2: 108837.664 ns/op
# Warmup Iteration   3: 50316.949 ns/op
# Warmup Iteration   4: 46265.957 ns/op
Iteration   1: 45869.684 ns/op
Iteration   2: 45841.173 ns/op
Iteration   3: 46930.881 ns/op
Iteration   4: 45944.266 ns/op
Iteration   5: 47309.491 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  46379.099 ±(99.9%) 2659.484 ns/op [Average]
  (min, avg, max) = (45841.173, 46379.099, 47309.491), stdev = 690.659
  CI (99.9%): [43719.615, 49038.583] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 60.00% complete, ETA 00:40:09
# Fork: 1 of 1
# Warmup Iteration   1: 518007.735 ns/op
# Warmup Iteration   2: 163932.069 ns/op
# Warmup Iteration   3: 91698.766 ns/op
# Warmup Iteration   4: 80910.050 ns/op
Iteration   1: 83816.914 ns/op
Iteration   2: 81094.846 ns/op
Iteration   3: 80351.732 ns/op
Iteration   4: 81956.305 ns/op
Iteration   5: 80162.449 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  81476.449 ±(99.9%) 5726.092 ns/op [Average]
  (min, avg, max) = (80162.449, 81476.449, 83816.914), stdev = 1487.048
  CI (99.9%): [75750.357, 87202.541] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 60.20% complete, ETA 00:39:57
# Fork: 1 of 1
# Warmup Iteration   1: 1131704.796 ns/op
# Warmup Iteration   2: 288134.716 ns/op
# Warmup Iteration   3: 236700.701 ns/op
# Warmup Iteration   4: 194034.051 ns/op
Iteration   1: 179249.431 ns/op
Iteration   2: 180945.848 ns/op
Iteration   3: 179910.608 ns/op
Iteration   4: 179924.864 ns/op
Iteration   5: 179026.127 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  179811.376 ±(99.9%) 2882.941 ns/op [Average]
  (min, avg, max) = (179026.127, 179811.376, 180945.848), stdev = 748.691
  CI (99.9%): [176928.435, 182694.316] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 60.39% complete, ETA 00:39:46
# Fork: 1 of 1
# Warmup Iteration   1: 2097703.839 ns/op
# Warmup Iteration   2: 612821.478 ns/op
# Warmup Iteration   3: 450147.882 ns/op
# Warmup Iteration   4: 421721.067 ns/op
Iteration   1: 407495.426 ns/op
Iteration   2: 406220.155 ns/op
Iteration   3: 407400.116 ns/op
Iteration   4: 405433.569 ns/op
Iteration   5: 408096.239 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  406929.101 ±(99.9%) 4149.063 ns/op [Average]
  (min, avg, max) = (405433.569, 406929.101, 408096.239), stdev = 1077.498
  CI (99.9%): [402780.038, 411078.164] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 60.59% complete, ETA 00:39:34
# Fork: 1 of 1
# Warmup Iteration   1: 14371392.253 ns/op
# Warmup Iteration   2: 5551545.090 ns/op
# Warmup Iteration   3: 3579912.350 ns/op
# Warmup Iteration   4: 3303792.968 ns/op
Iteration   1: 3308805.809 ns/op
Iteration   2: 3299107.899 ns/op
Iteration   3: 3297054.711 ns/op
Iteration   4: 3292522.451 ns/op
Iteration   5: 3290357.864 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  3297569.747 ±(99.9%) 27658.153 ns/op [Average]
  (min, avg, max) = (3290357.864, 3297569.747, 3308805.809), stdev = 7182.735
  CI (99.9%): [3269911.594, 3325227.900] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 60.78% complete, ETA 00:39:23
# Fork: 1 of 1
# Warmup Iteration   1: 135324.043 ns/op
# Warmup Iteration   2: 29550.271 ns/op
# Warmup Iteration   3: 26633.818 ns/op
# Warmup Iteration   4: 25429.193 ns/op
Iteration   1: 25504.680 ns/op
Iteration   2: 25889.808 ns/op
Iteration   3: 25381.640 ns/op
Iteration   4: 25463.124 ns/op
Iteration   5: 25534.004 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  25554.651 ±(99.9%) 754.480 ns/op [Average]
  (min, avg, max) = (25381.640, 25554.651, 25889.808), stdev = 195.936
  CI (99.9%): [24800.171, 26309.131] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 60.98% complete, ETA 00:39:11
# Fork: 1 of 1
# Warmup Iteration   1: 215079.141 ns/op
# Warmup Iteration   2: 55312.937 ns/op
# Warmup Iteration   3: 51297.689 ns/op
# Warmup Iteration   4: 49356.676 ns/op
Iteration   1: 49099.980 ns/op
Iteration   2: 49389.673 ns/op
Iteration   3: 49133.212 ns/op
Iteration   4: 49156.462 ns/op
Iteration   5: 49078.517 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  49171.569 ±(99.9%) 483.453 ns/op [Average]
  (min, avg, max) = (49078.517, 49171.569, 49389.673), stdev = 125.551
  CI (99.9%): [48688.116, 49655.022] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 61.18% complete, ETA 00:38:59
# Fork: 1 of 1
# Warmup Iteration   1: 331703.109 ns/op
# Warmup Iteration   2: 129991.391 ns/op
# Warmup Iteration   3: 109233.110 ns/op
# Warmup Iteration   4: 105400.981 ns/op
Iteration   1: 107444.287 ns/op
Iteration   2: 104571.464 ns/op
Iteration   3: 107628.157 ns/op
Iteration   4: 104519.325 ns/op
Iteration   5: 104254.326 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  105683.512 ±(99.9%) 6533.774 ns/op [Average]
  (min, avg, max) = (104254.326, 105683.512, 107628.157), stdev = 1696.800
  CI (99.9%): [99149.738, 112217.286] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 61.37% complete, ETA 00:38:47
# Fork: 1 of 1
# Warmup Iteration   1: 789411.877 ns/op
# Warmup Iteration   2: 260150.191 ns/op
# Warmup Iteration   3: 245413.886 ns/op
# Warmup Iteration   4: 223166.685 ns/op
Iteration   1: 226166.266 ns/op
Iteration   2: 223047.899 ns/op
Iteration   3: 223511.759 ns/op
Iteration   4: 222521.408 ns/op
Iteration   5: 231402.624 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  225329.991 ±(99.9%) 14145.323 ns/op [Average]
  (min, avg, max) = (222521.408, 225329.991, 231402.624), stdev = 3673.495
  CI (99.9%): [211184.668, 239475.314] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 61.57% complete, ETA 00:38:35
# Fork: 1 of 1
# Warmup Iteration   1: 4657477.749 ns/op
# Warmup Iteration   2: 1938431.822 ns/op
# Warmup Iteration   3: 1864218.601 ns/op
# Warmup Iteration   4: 1840903.292 ns/op
Iteration   1: 1838542.345 ns/op
Iteration   2: 1850542.726 ns/op
Iteration   3: 1781285.741 ns/op
Iteration   4: 1789770.746 ns/op
Iteration   5: 1780722.926 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1808172.897 ±(99.9%) 129621.007 ns/op [Average]
  (min, avg, max) = (1780722.926, 1808172.897, 1850542.726), stdev = 33662.164
  CI (99.9%): [1678551.890, 1937793.904] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 61.76% complete, ETA 00:38:24
# Fork: 1 of 1
# Warmup Iteration   1: 136019.867 ns/op
# Warmup Iteration   2: 27853.448 ns/op
# Warmup Iteration   3: 27700.284 ns/op
# Warmup Iteration   4: 26394.969 ns/op
Iteration   1: 26194.757 ns/op
Iteration   2: 26181.309 ns/op
Iteration   3: 26639.451 ns/op
Iteration   4: 26172.547 ns/op
Iteration   5: 26111.718 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  26259.956 ±(99.9%) 826.022 ns/op [Average]
  (min, avg, max) = (26111.718, 26259.956, 26639.451), stdev = 214.515
  CI (99.9%): [25433.934, 27085.979] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 61.96% complete, ETA 00:38:12
# Fork: 1 of 1
# Warmup Iteration   1: 231249.983 ns/op
# Warmup Iteration   2: 53490.300 ns/op
# Warmup Iteration   3: 51078.637 ns/op
# Warmup Iteration   4: 53778.601 ns/op
Iteration   1: 48770.915 ns/op
Iteration   2: 48931.714 ns/op
Iteration   3: 49230.660 ns/op
Iteration   4: 48809.805 ns/op
Iteration   5: 48866.813 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  48921.982 ±(99.9%) 704.325 ns/op [Average]
  (min, avg, max) = (48770.915, 48921.982, 49230.660), stdev = 182.911
  CI (99.9%): [48217.657, 49626.306] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 62.16% complete, ETA 00:38:00
# Fork: 1 of 1
# Warmup Iteration   1: 344562.526 ns/op
# Warmup Iteration   2: 114440.726 ns/op
# Warmup Iteration   3: 110956.621 ns/op
# Warmup Iteration   4: 112413.380 ns/op
Iteration   1: 108922.144 ns/op
Iteration   2: 108298.827 ns/op
Iteration   3: 108703.221 ns/op
Iteration   4: 108010.710 ns/op
Iteration   5: 107895.376 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  108366.056 ±(99.9%) 1695.206 ns/op [Average]
  (min, avg, max) = (107895.376, 108366.056, 108922.144), stdev = 440.240
  CI (99.9%): [106670.849, 110061.262] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 62.35% complete, ETA 00:37:48
# Fork: 1 of 1
# Warmup Iteration   1: 655064.422 ns/op
# Warmup Iteration   2: 245323.184 ns/op
# Warmup Iteration   3: 247497.071 ns/op
# Warmup Iteration   4: 236151.663 ns/op
Iteration   1: 230758.419 ns/op
Iteration   2: 234070.536 ns/op
Iteration   3: 231330.904 ns/op
Iteration   4: 230996.502 ns/op
Iteration   5: 230101.420 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  231451.556 ±(99.9%) 5897.898 ns/op [Average]
  (min, avg, max) = (230101.420, 231451.556, 234070.536), stdev = 1531.665
  CI (99.9%): [225553.658, 237349.454] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 62.55% complete, ETA 00:37:36
# Fork: 1 of 1
# Warmup Iteration   1: 5024395.005 ns/op
# Warmup Iteration   2: 1886926.020 ns/op
# Warmup Iteration   3: 1845502.809 ns/op
# Warmup Iteration   4: 1834074.665 ns/op
Iteration   1: 1795736.028 ns/op
Iteration   2: 1780829.928 ns/op
Iteration   3: 1764285.306 ns/op
Iteration   4: 1761123.998 ns/op
Iteration   5: 1772146.424 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1774824.337 ±(99.9%) 53747.445 ns/op [Average]
  (min, avg, max) = (1761123.998, 1774824.337, 1795736.028), stdev = 13958.041
  CI (99.9%): [1721076.891, 1828571.782] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 62.75% complete, ETA 00:37:25
# Fork: 1 of 1
# Warmup Iteration   1: 34858.524 ns/op
# Warmup Iteration   2: 14806.547 ns/op
# Warmup Iteration   3: 14627.752 ns/op
# Warmup Iteration   4: 13430.299 ns/op
Iteration   1: 13643.370 ns/op
Iteration   2: 13813.477 ns/op
Iteration   3: 13788.866 ns/op
Iteration   4: 13630.212 ns/op
Iteration   5: 13319.669 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13639.119 ±(99.9%) 757.927 ns/op [Average]
  (min, avg, max) = (13319.669, 13639.119, 13813.477), stdev = 196.831
  CI (99.9%): [12881.191, 14397.046] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 62.94% complete, ETA 00:37:13
# Fork: 1 of 1
# Warmup Iteration   1: 78928.116 ns/op
# Warmup Iteration   2: 26940.656 ns/op
# Warmup Iteration   3: 25640.771 ns/op
# Warmup Iteration   4: 26649.474 ns/op
Iteration   1: 25647.635 ns/op
Iteration   2: 25196.664 ns/op
Iteration   3: 26191.600 ns/op
Iteration   4: 25243.611 ns/op
Iteration   5: 25295.904 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  25515.083 ±(99.9%) 1608.966 ns/op [Average]
  (min, avg, max) = (25196.664, 25515.083, 26191.600), stdev = 417.843
  CI (99.9%): [23906.117, 27124.049] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 63.14% complete, ETA 00:37:01
# Fork: 1 of 1
# Warmup Iteration   1: 124088.816 ns/op
# Warmup Iteration   2: 60337.066 ns/op
# Warmup Iteration   3: 56038.414 ns/op
# Warmup Iteration   4: 55559.768 ns/op
Iteration   1: 56415.923 ns/op
Iteration   2: 55457.687 ns/op
Iteration   3: 55374.557 ns/op
Iteration   4: 55476.079 ns/op
Iteration   5: 55346.937 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  55614.237 ±(99.9%) 1738.334 ns/op [Average]
  (min, avg, max) = (55346.937, 55614.237, 56415.923), stdev = 451.440
  CI (99.9%): [53875.903, 57352.570] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 63.33% complete, ETA 00:36:49
# Fork: 1 of 1
# Warmup Iteration   1: 276532.119 ns/op
# Warmup Iteration   2: 142603.256 ns/op
# Warmup Iteration   3: 132465.334 ns/op
# Warmup Iteration   4: 136481.952 ns/op
Iteration   1: 136623.367 ns/op
Iteration   2: 137224.758 ns/op
Iteration   3: 136104.406 ns/op
Iteration   4: 138263.008 ns/op
Iteration   5: 136897.168 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  137022.541 ±(99.9%) 3103.103 ns/op [Average]
  (min, avg, max) = (136104.406, 137022.541, 138263.008), stdev = 805.866
  CI (99.9%): [133919.439, 140125.644] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 63.53% complete, ETA 00:36:37
# Fork: 1 of 1
# Warmup Iteration   1: 2134419.741 ns/op
# Warmup Iteration   2: 1065917.096 ns/op
# Warmup Iteration   3: 1004676.321 ns/op
# Warmup Iteration   4: 1011350.425 ns/op
Iteration   1: 974245.557 ns/op
Iteration   2: 978047.930 ns/op
Iteration   3: 971425.728 ns/op
Iteration   4: 972741.430 ns/op
Iteration   5: 969211.015 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  973134.332 ±(99.9%) 12748.537 ns/op [Average]
  (min, avg, max) = (969211.015, 973134.332, 978047.930), stdev = 3310.755
  CI (99.9%): [960385.795, 985882.869] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 63.73% complete, ETA 00:36:26
# Fork: 1 of 1
# Warmup Iteration   1: 83783.448 ns/op
# Warmup Iteration   2: 23836.771 ns/op
# Warmup Iteration   3: 17572.133 ns/op
# Warmup Iteration   4: 17134.546 ns/op
Iteration   1: 17418.074 ns/op
Iteration   2: 17251.109 ns/op
Iteration   3: 17158.086 ns/op
Iteration   4: 17210.824 ns/op
Iteration   5: 17439.440 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  17295.507 ±(99.9%) 486.184 ns/op [Average]
  (min, avg, max) = (17158.086, 17295.507, 17439.440), stdev = 126.260
  CI (99.9%): [16809.323, 17781.690] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 63.92% complete, ETA 00:36:14
# Fork: 1 of 1
# Warmup Iteration   1: 135466.565 ns/op
# Warmup Iteration   2: 54748.985 ns/op
# Warmup Iteration   3: 31223.358 ns/op
# Warmup Iteration   4: 31083.351 ns/op
Iteration   1: 30917.624 ns/op
Iteration   2: 30780.904 ns/op
Iteration   3: 30983.885 ns/op
Iteration   4: 31063.301 ns/op
Iteration   5: 30898.004 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  30928.744 ±(99.9%) 404.187 ns/op [Average]
  (min, avg, max) = (30780.904, 30928.744, 31063.301), stdev = 104.966
  CI (99.9%): [30524.556, 31332.931] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 64.12% complete, ETA 00:36:02
# Fork: 1 of 1
# Warmup Iteration   1: 185341.074 ns/op
# Warmup Iteration   2: 80988.853 ns/op
# Warmup Iteration   3: 62679.552 ns/op
# Warmup Iteration   4: 56027.850 ns/op
Iteration   1: 57968.139 ns/op
Iteration   2: 55731.145 ns/op
Iteration   3: 55910.967 ns/op
Iteration   4: 55772.161 ns/op
Iteration   5: 55771.487 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  56230.780 ±(99.9%) 3748.999 ns/op [Average]
  (min, avg, max) = (55731.145, 56230.780, 57968.139), stdev = 973.603
  CI (99.9%): [52481.780, 59979.779] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 64.31% complete, ETA 00:35:50
# Fork: 1 of 1
# Warmup Iteration   1: 433143.037 ns/op
# Warmup Iteration   2: 138429.483 ns/op
# Warmup Iteration   3: 117590.624 ns/op
# Warmup Iteration   4: 116948.171 ns/op
Iteration   1: 112600.262 ns/op
Iteration   2: 112642.177 ns/op
Iteration   3: 121176.909 ns/op
Iteration   4: 121245.143 ns/op
Iteration   5: 112513.815 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  116035.661 ±(99.9%) 18193.247 ns/op [Average]
  (min, avg, max) = (112513.815, 116035.661, 121245.143), stdev = 4724.729
  CI (99.9%): [97842.414, 134228.909] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 64.51% complete, ETA 00:35:38
# Fork: 1 of 1
# Warmup Iteration   1: 3216253.198 ns/op
# Warmup Iteration   2: 1196498.569 ns/op
# Warmup Iteration   3: 1161980.657 ns/op
# Warmup Iteration   4: 1112341.115 ns/op
Iteration   1: 1121682.515 ns/op
Iteration   2: 1282898.691 ns/op
Iteration   3: 1101396.313 ns/op
Iteration   4: 1103043.364 ns/op
Iteration   5: 1093237.242 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1140451.625 ±(99.9%) 309236.554 ns/op [Average]
  (min, avg, max) = (1093237.242, 1140451.625, 1282898.691), stdev = 80307.751
  CI (99.9%): [831215.072, 1449688.179] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 64.71% complete, ETA 00:35:26
# Fork: 1 of 1
# Warmup Iteration   1: 70602.734 ns/op
# Warmup Iteration   2: 28518.634 ns/op
# Warmup Iteration   3: 18187.957 ns/op
# Warmup Iteration   4: 18144.078 ns/op
Iteration   1: 18051.763 ns/op
Iteration   2: 18155.447 ns/op
Iteration   3: 18257.058 ns/op
Iteration   4: 18066.723 ns/op
Iteration   5: 18049.950 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  18116.188 ±(99.9%) 346.400 ns/op [Average]
  (min, avg, max) = (18049.950, 18116.188, 18257.058), stdev = 89.959
  CI (99.9%): [17769.788, 18462.588] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 64.90% complete, ETA 00:35:15
# Fork: 1 of 1
# Warmup Iteration   1: 105743.805 ns/op
# Warmup Iteration   2: 47196.286 ns/op
# Warmup Iteration   3: 32673.442 ns/op
# Warmup Iteration   4: 30311.038 ns/op
Iteration   1: 30459.810 ns/op
Iteration   2: 31298.777 ns/op
Iteration   3: 30684.165 ns/op
Iteration   4: 30597.408 ns/op
Iteration   5: 30617.699 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  30731.572 ±(99.9%) 1260.741 ns/op [Average]
  (min, avg, max) = (30459.810, 30731.572, 31298.777), stdev = 327.410
  CI (99.9%): [29470.831, 31992.312] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 65.10% complete, ETA 00:35:03
# Fork: 1 of 1
# Warmup Iteration   1: 181289.240 ns/op
# Warmup Iteration   2: 83693.935 ns/op
# Warmup Iteration   3: 59355.326 ns/op
# Warmup Iteration   4: 55981.852 ns/op
Iteration   1: 55750.537 ns/op
Iteration   2: 55867.373 ns/op
Iteration   3: 55751.068 ns/op
Iteration   4: 55830.143 ns/op
Iteration   5: 55901.970 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  55820.218 ±(99.9%) 262.880 ns/op [Average]
  (min, avg, max) = (55750.537, 55820.218, 55901.970), stdev = 68.269
  CI (99.9%): [55557.339, 56083.098] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 65.29% complete, ETA 00:34:51
# Fork: 1 of 1
# Warmup Iteration   1: 399114.130 ns/op
# Warmup Iteration   2: 160786.358 ns/op
# Warmup Iteration   3: 118979.186 ns/op
# Warmup Iteration   4: 113023.143 ns/op
Iteration   1: 112189.588 ns/op
Iteration   2: 113693.626 ns/op
Iteration   3: 112713.187 ns/op
Iteration   4: 114387.042 ns/op
Iteration   5: 112340.758 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  113064.840 ±(99.9%) 3631.471 ns/op [Average]
  (min, avg, max) = (112189.588, 113064.840, 114387.042), stdev = 943.082
  CI (99.9%): [109433.369, 116696.312] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 65.49% complete, ETA 00:34:39
# Fork: 1 of 1
# Warmup Iteration   1: 8553707.307 ns/op
# Warmup Iteration   2: 1339727.860 ns/op
# Warmup Iteration   3: 1180722.732 ns/op
# Warmup Iteration   4: 1111030.972 ns/op
Iteration   1: 1105317.611 ns/op
Iteration   2: 1104563.399 ns/op
Iteration   3: 1092802.682 ns/op
Iteration   4: 1096272.911 ns/op
Iteration   5: 1096198.902 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1099031.101 ±(99.9%) 21486.859 ns/op [Average]
  (min, avg, max) = (1092802.682, 1099031.101, 1105317.611), stdev = 5580.069
  CI (99.9%): [1077544.242, 1120517.960] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 65.69% complete, ETA 00:34:27
# Fork: 1 of 1
# Warmup Iteration   1: 33212.183 ns/op
# Warmup Iteration   2: 9740.346 ns/op
# Warmup Iteration   3: 9979.542 ns/op
# Warmup Iteration   4: 9481.950 ns/op
Iteration   1: 9365.011 ns/op
Iteration   2: 9372.735 ns/op
Iteration   3: 9362.283 ns/op
Iteration   4: 9360.536 ns/op
Iteration   5: 9358.954 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  9363.904 ±(99.9%) 20.887 ns/op [Average]
  (min, avg, max) = (9358.954, 9363.904, 9372.735), stdev = 5.424
  CI (99.9%): [9343.017, 9384.791] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 65.88% complete, ETA 00:34:15
# Fork: 1 of 1
# Warmup Iteration   1: 44627.008 ns/op
# Warmup Iteration   2: 17457.739 ns/op
# Warmup Iteration   3: 17628.117 ns/op
# Warmup Iteration   4: 16754.764 ns/op
Iteration   1: 16670.759 ns/op
Iteration   2: 16633.695 ns/op
Iteration   3: 16744.507 ns/op
Iteration   4: 16795.483 ns/op
Iteration   5: 17661.372 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  16901.163 ±(99.9%) 1654.267 ns/op [Average]
  (min, avg, max) = (16633.695, 16901.163, 17661.372), stdev = 429.608
  CI (99.9%): [15246.897, 18555.430] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 66.08% complete, ETA 00:34:04
# Fork: 1 of 1
# Warmup Iteration   1: 156004.641 ns/op
# Warmup Iteration   2: 33934.895 ns/op
# Warmup Iteration   3: 32225.284 ns/op
# Warmup Iteration   4: 32518.934 ns/op
Iteration   1: 31167.553 ns/op
Iteration   2: 31157.656 ns/op
Iteration   3: 31161.682 ns/op
Iteration   4: 31139.962 ns/op
Iteration   5: 31180.545 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  31161.480 ±(99.9%) 57.050 ns/op [Average]
  (min, avg, max) = (31139.962, 31161.480, 31180.545), stdev = 14.816
  CI (99.9%): [31104.430, 31218.529] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 66.27% complete, ETA 00:33:52
# Fork: 1 of 1
# Warmup Iteration   1: 173947.709 ns/op
# Warmup Iteration   2: 72203.128 ns/op
# Warmup Iteration   3: 73017.372 ns/op
# Warmup Iteration   4: 71926.463 ns/op
Iteration   1: 69698.865 ns/op
Iteration   2: 73705.056 ns/op
Iteration   3: 70755.505 ns/op
Iteration   4: 69446.717 ns/op
Iteration   5: 70459.815 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  70813.191 ±(99.9%) 6557.427 ns/op [Average]
  (min, avg, max) = (69446.717, 70813.191, 73705.056), stdev = 1702.943
  CI (99.9%): [64255.764, 77370.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 66.47% complete, ETA 00:33:40
# Fork: 1 of 1
# Warmup Iteration   1: 1343296.179 ns/op
# Warmup Iteration   2: 532914.730 ns/op
# Warmup Iteration   3: 522597.007 ns/op
# Warmup Iteration   4: 525022.205 ns/op
Iteration   1: 507149.564 ns/op
Iteration   2: 507577.627 ns/op
Iteration   3: 507424.934 ns/op
Iteration   4: 505876.169 ns/op
Iteration   5: 507683.181 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  507142.295 ±(99.9%) 2832.962 ns/op [Average]
  (min, avg, max) = (505876.169, 507142.295, 507683.181), stdev = 735.711
  CI (99.9%): [504309.333, 509975.256] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 66.67% complete, ETA 00:33:28
# Fork: 1 of 1
# Warmup Iteration   1: 14561.471 ns/op
# Warmup Iteration   2: 8425.862 ns/op
# Warmup Iteration   3: 8218.047 ns/op
# Warmup Iteration   4: 7957.653 ns/op
Iteration   1: 8032.362 ns/op
Iteration   2: 7967.683 ns/op
Iteration   3: 7967.010 ns/op
Iteration   4: 8210.075 ns/op
Iteration   5: 7992.322 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8033.890 ±(99.9%) 392.821 ns/op [Average]
  (min, avg, max) = (7967.010, 8033.890, 8210.075), stdev = 102.014
  CI (99.9%): [7641.070, 8426.711] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 66.86% complete, ETA 00:33:16
# Fork: 1 of 1
# Warmup Iteration   1: 33063.866 ns/op
# Warmup Iteration   2: 14876.589 ns/op
# Warmup Iteration   3: 14498.399 ns/op
# Warmup Iteration   4: 13967.839 ns/op
Iteration   1: 13902.467 ns/op
Iteration   2: 13847.985 ns/op
Iteration   3: 13811.284 ns/op
Iteration   4: 13864.764 ns/op
Iteration   5: 14410.518 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13967.404 ±(99.9%) 962.152 ns/op [Average]
  (min, avg, max) = (13811.284, 13967.404, 14410.518), stdev = 249.868
  CI (99.9%): [13005.252, 14929.556] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 67.06% complete, ETA 00:33:05
# Fork: 1 of 1
# Warmup Iteration   1: 52457.222 ns/op
# Warmup Iteration   2: 27189.796 ns/op
# Warmup Iteration   3: 26763.494 ns/op
# Warmup Iteration   4: 25344.218 ns/op
Iteration   1: 25329.873 ns/op
Iteration   2: 25376.043 ns/op
Iteration   3: 25545.192 ns/op
Iteration   4: 25548.823 ns/op
Iteration   5: 25381.378 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  25436.262 ±(99.9%) 396.882 ns/op [Average]
  (min, avg, max) = (25329.873, 25436.262, 25548.823), stdev = 103.069
  CI (99.9%): [25039.380, 25833.144] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 67.25% complete, ETA 00:32:53
# Fork: 1 of 1
# Warmup Iteration   1: 166386.360 ns/op
# Warmup Iteration   2: 56310.141 ns/op
# Warmup Iteration   3: 57530.156 ns/op
# Warmup Iteration   4: 55111.854 ns/op
Iteration   1: 54320.200 ns/op
Iteration   2: 54026.302 ns/op
Iteration   3: 54257.808 ns/op
Iteration   4: 54033.621 ns/op
Iteration   5: 54767.511 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  54281.089 ±(99.9%) 1162.925 ns/op [Average]
  (min, avg, max) = (54026.302, 54281.089, 54767.511), stdev = 302.008
  CI (99.9%): [53118.163, 55444.014] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 67.45% complete, ETA 00:32:41
# Fork: 1 of 1
# Warmup Iteration   1: 967353.579 ns/op
# Warmup Iteration   2: 493500.500 ns/op
# Warmup Iteration   3: 486719.719 ns/op
# Warmup Iteration   4: 455080.418 ns/op
Iteration   1: 455626.992 ns/op
Iteration   2: 456364.918 ns/op
Iteration   3: 456157.210 ns/op
Iteration   4: 455899.619 ns/op
Iteration   5: 453106.246 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  455430.997 ±(99.9%) 5116.462 ns/op [Average]
  (min, avg, max) = (453106.246, 455430.997, 456364.918), stdev = 1328.729
  CI (99.9%): [450314.535, 460547.459] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 67.65% complete, ETA 00:32:29
# Fork: 1 of 1
# Warmup Iteration   1: 27180.687 ns/op
# Warmup Iteration   2: 9270.377 ns/op
# Warmup Iteration   3: 8867.273 ns/op
# Warmup Iteration   4: 8483.919 ns/op
Iteration   1: 8520.585 ns/op
Iteration   2: 8497.675 ns/op
Iteration   3: 8512.763 ns/op
Iteration   4: 8467.585 ns/op
Iteration   5: 8523.779 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8504.477 ±(99.9%) 88.396 ns/op [Average]
  (min, avg, max) = (8467.585, 8504.477, 8523.779), stdev = 22.956
  CI (99.9%): [8416.081, 8592.873] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 67.84% complete, ETA 00:32:17
# Fork: 1 of 1
# Warmup Iteration   1: 73038.858 ns/op
# Warmup Iteration   2: 14758.491 ns/op
# Warmup Iteration   3: 14929.780 ns/op
# Warmup Iteration   4: 14550.671 ns/op
Iteration   1: 14257.195 ns/op
Iteration   2: 14205.198 ns/op
Iteration   3: 14190.936 ns/op
Iteration   4: 14239.689 ns/op
Iteration   5: 14273.287 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14233.261 ±(99.9%) 133.322 ns/op [Average]
  (min, avg, max) = (14190.936, 14233.261, 14273.287), stdev = 34.623
  CI (99.9%): [14099.939, 14366.583] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 68.04% complete, ETA 00:32:05
# Fork: 1 of 1
# Warmup Iteration   1: 156063.633 ns/op
# Warmup Iteration   2: 30809.554 ns/op
# Warmup Iteration   3: 26492.330 ns/op
# Warmup Iteration   4: 25852.950 ns/op
Iteration   1: 25277.698 ns/op
Iteration   2: 25076.054 ns/op
Iteration   3: 25111.624 ns/op
Iteration   4: 25207.366 ns/op
Iteration   5: 25240.354 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  25182.619 ±(99.9%) 330.024 ns/op [Average]
  (min, avg, max) = (25076.054, 25182.619, 25277.698), stdev = 85.706
  CI (99.9%): [24852.596, 25512.643] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 68.24% complete, ETA 00:31:54
# Fork: 1 of 1
# Warmup Iteration   1: 175959.758 ns/op
# Warmup Iteration   2: 55017.223 ns/op
# Warmup Iteration   3: 53723.174 ns/op
# Warmup Iteration   4: 50767.117 ns/op
Iteration   1: 50424.991 ns/op
Iteration   2: 50734.760 ns/op
Iteration   3: 50448.530 ns/op
Iteration   4: 50601.008 ns/op
Iteration   5: 55611.419 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  51564.142 ±(99.9%) 8725.386 ns/op [Average]
  (min, avg, max) = (50424.991, 51564.142, 55611.419), stdev = 2265.955
  CI (99.9%): [42838.755, 60289.528] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 68.43% complete, ETA 00:31:42
# Fork: 1 of 1
# Warmup Iteration   1: 693074.448 ns/op
# Warmup Iteration   2: 393582.901 ns/op
# Warmup Iteration   3: 373272.698 ns/op
# Warmup Iteration   4: 356252.167 ns/op
Iteration   1: 356843.019 ns/op
Iteration   2: 357597.416 ns/op
Iteration   3: 358135.171 ns/op
Iteration   4: 357812.487 ns/op
Iteration   5: 356790.528 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  357435.724 ±(99.9%) 2298.239 ns/op [Average]
  (min, avg, max) = (356790.528, 357435.724, 358135.171), stdev = 596.845
  CI (99.9%): [355137.485, 359733.964] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 68.63% complete, ETA 00:31:30
# Fork: 1 of 1
# Warmup Iteration   1: 9172.570 ns/op
# Warmup Iteration   2: 3174.998 ns/op
# Warmup Iteration   3: 2871.750 ns/op
# Warmup Iteration   4: 2856.782 ns/op
Iteration   1: 2847.132 ns/op
Iteration   2: 2864.761 ns/op
Iteration   3: 2861.714 ns/op
Iteration   4: 2857.172 ns/op
Iteration   5: 2852.466 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2856.649 ±(99.9%) 27.215 ns/op [Average]
  (min, avg, max) = (2847.132, 2856.649, 2864.761), stdev = 7.068
  CI (99.9%): [2829.434, 2883.865] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 68.82% complete, ETA 00:31:18
# Fork: 1 of 1
# Warmup Iteration   1: 29801.055 ns/op
# Warmup Iteration   2: 6464.505 ns/op
# Warmup Iteration   3: 5551.455 ns/op
# Warmup Iteration   4: 5539.852 ns/op
Iteration   1: 5563.090 ns/op
Iteration   2: 5753.040 ns/op
Iteration   3: 5570.337 ns/op
Iteration   4: 5554.163 ns/op
Iteration   5: 5563.378 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  5600.802 ±(99.9%) 328.449 ns/op [Average]
  (min, avg, max) = (5554.163, 5600.802, 5753.040), stdev = 85.297
  CI (99.9%): [5272.352, 5929.251] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 69.02% complete, ETA 00:31:06
# Fork: 1 of 1
# Warmup Iteration   1: 39843.219 ns/op
# Warmup Iteration   2: 11540.846 ns/op
# Warmup Iteration   3: 10592.925 ns/op
# Warmup Iteration   4: 10470.080 ns/op
Iteration   1: 10461.686 ns/op
Iteration   2: 10445.864 ns/op
Iteration   3: 10464.441 ns/op
Iteration   4: 10476.235 ns/op
Iteration   5: 10447.246 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  10459.094 ±(99.9%) 48.880 ns/op [Average]
  (min, avg, max) = (10445.864, 10459.094, 10476.235), stdev = 12.694
  CI (99.9%): [10410.215, 10507.974] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 69.22% complete, ETA 00:30:55
# Fork: 1 of 1
# Warmup Iteration   1: 82498.815 ns/op
# Warmup Iteration   2: 22276.627 ns/op
# Warmup Iteration   3: 20306.310 ns/op
# Warmup Iteration   4: 18360.703 ns/op
Iteration   1: 18399.624 ns/op
Iteration   2: 18319.292 ns/op
Iteration   3: 18383.277 ns/op
Iteration   4: 18769.736 ns/op
Iteration   5: 18425.453 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  18459.476 ±(99.9%) 684.665 ns/op [Average]
  (min, avg, max) = (18319.292, 18459.476, 18769.736), stdev = 177.805
  CI (99.9%): [17774.811, 19144.141] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 69.41% complete, ETA 00:30:43
# Fork: 1 of 1
# Warmup Iteration   1: 1126073.150 ns/op
# Warmup Iteration   2: 195600.904 ns/op
# Warmup Iteration   3: 147261.050 ns/op
# Warmup Iteration   4: 140596.609 ns/op
Iteration   1: 158325.035 ns/op
Iteration   2: 139764.347 ns/op
Iteration   3: 140880.570 ns/op
Iteration   4: 139867.360 ns/op
Iteration   5: 140346.786 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  143836.820 ±(99.9%) 31233.552 ns/op [Average]
  (min, avg, max) = (139764.347, 143836.820, 158325.035), stdev = 8111.254
  CI (99.9%): [112603.268, 175070.372] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 69.61% complete, ETA 00:30:31
# Fork: 1 of 1
# Warmup Iteration   1: 13017.302 ns/op
# Warmup Iteration   2: 4863.102 ns/op
# Warmup Iteration   3: 4419.353 ns/op
# Warmup Iteration   4: 4448.782 ns/op
Iteration   1: 4417.232 ns/op
Iteration   2: 4420.107 ns/op
Iteration   3: 4409.143 ns/op
Iteration   4: 4439.800 ns/op
Iteration   5: 4419.594 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4421.175 ±(99.9%) 43.515 ns/op [Average]
  (min, avg, max) = (4409.143, 4421.175, 4439.800), stdev = 11.301
  CI (99.9%): [4377.660, 4464.690] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 69.80% complete, ETA 00:30:19
# Fork: 1 of 1
# Warmup Iteration   1: 21739.844 ns/op
# Warmup Iteration   2: 9019.660 ns/op
# Warmup Iteration   3: 8577.179 ns/op
# Warmup Iteration   4: 8256.188 ns/op
Iteration   1: 8253.439 ns/op
Iteration   2: 8246.122 ns/op
Iteration   3: 8352.590 ns/op
Iteration   4: 8221.871 ns/op
Iteration   5: 8250.046 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8264.814 ±(99.9%) 194.882 ns/op [Average]
  (min, avg, max) = (8221.871, 8264.814, 8352.590), stdev = 50.610
  CI (99.9%): [8069.931, 8459.696] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 70.00% complete, ETA 00:30:07
# Fork: 1 of 1
# Warmup Iteration   1: 47734.976 ns/op
# Warmup Iteration   2: 15908.298 ns/op
# Warmup Iteration   3: 15114.156 ns/op
# Warmup Iteration   4: 14231.376 ns/op
Iteration   1: 14324.184 ns/op
Iteration   2: 14292.382 ns/op
Iteration   3: 14349.877 ns/op
Iteration   4: 14284.433 ns/op
Iteration   5: 14321.793 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14314.534 ±(99.9%) 101.728 ns/op [Average]
  (min, avg, max) = (14284.433, 14314.534, 14349.877), stdev = 26.418
  CI (99.9%): [14212.806, 14416.262] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 70.20% complete, ETA 00:29:55
# Fork: 1 of 1
# Warmup Iteration   1: 86712.335 ns/op
# Warmup Iteration   2: 30840.550 ns/op
# Warmup Iteration   3: 29402.991 ns/op
# Warmup Iteration   4: 27801.832 ns/op
Iteration   1: 27770.853 ns/op
Iteration   2: 27752.052 ns/op
Iteration   3: 27833.648 ns/op
Iteration   4: 27730.210 ns/op
Iteration   5: 27876.265 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  27792.606 ±(99.9%) 233.389 ns/op [Average]
  (min, avg, max) = (27730.210, 27792.606, 27876.265), stdev = 60.610
  CI (99.9%): [27559.217, 28025.994] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 70.39% complete, ETA 00:29:44
# Fork: 1 of 1
# Warmup Iteration   1: 601814.927 ns/op
# Warmup Iteration   2: 308995.445 ns/op
# Warmup Iteration   3: 241843.649 ns/op
# Warmup Iteration   4: 236392.460 ns/op
Iteration   1: 235067.530 ns/op
Iteration   2: 239606.284 ns/op
Iteration   3: 236166.320 ns/op
Iteration   4: 235240.386 ns/op
Iteration   5: 250176.105 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  239251.325 ±(99.9%) 24549.617 ns/op [Average]
  (min, avg, max) = (235067.530, 239251.325, 250176.105), stdev = 6375.458
  CI (99.9%): [214701.708, 263800.942] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 70.59% complete, ETA 00:29:32
# Fork: 1 of 1
# Warmup Iteration   1: 9177.740 ns/op
# Warmup Iteration   2: 4477.187 ns/op
# Warmup Iteration   3: 4142.879 ns/op
# Warmup Iteration   4: 4164.650 ns/op
Iteration   1: 4152.849 ns/op
Iteration   2: 4135.542 ns/op
Iteration   3: 4145.748 ns/op
Iteration   4: 4145.660 ns/op
Iteration   5: 4135.824 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4143.124 ±(99.9%) 28.471 ns/op [Average]
  (min, avg, max) = (4135.542, 4143.124, 4152.849), stdev = 7.394
  CI (99.9%): [4114.653, 4171.596] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 70.78% complete, ETA 00:29:20
# Fork: 1 of 1
# Warmup Iteration   1: 28852.487 ns/op
# Warmup Iteration   2: 8246.295 ns/op
# Warmup Iteration   3: 7765.992 ns/op
# Warmup Iteration   4: 7516.955 ns/op
Iteration   1: 7420.355 ns/op
Iteration   2: 7426.865 ns/op
Iteration   3: 7443.547 ns/op
Iteration   4: 7411.739 ns/op
Iteration   5: 7409.384 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7422.378 ±(99.9%) 52.880 ns/op [Average]
  (min, avg, max) = (7409.384, 7422.378, 7443.547), stdev = 13.733
  CI (99.9%): [7369.498, 7475.258] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 70.98% complete, ETA 00:29:08
# Fork: 1 of 1
# Warmup Iteration   1: 37845.893 ns/op
# Warmup Iteration   2: 14292.877 ns/op
# Warmup Iteration   3: 13177.273 ns/op
# Warmup Iteration   4: 13045.582 ns/op
Iteration   1: 13054.181 ns/op
Iteration   2: 12994.550 ns/op
Iteration   3: 12995.396 ns/op
Iteration   4: 13001.810 ns/op
Iteration   5: 12987.415 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13006.670 ±(99.9%) 104.140 ns/op [Average]
  (min, avg, max) = (12987.415, 13006.670, 13054.181), stdev = 27.045
  CI (99.9%): [12902.530, 13110.810] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 71.18% complete, ETA 00:28:56
# Fork: 1 of 1
# Warmup Iteration   1: 84561.568 ns/op
# Warmup Iteration   2: 28517.492 ns/op
# Warmup Iteration   3: 27579.014 ns/op
# Warmup Iteration   4: 25532.812 ns/op
Iteration   1: 25535.939 ns/op
Iteration   2: 25618.527 ns/op
Iteration   3: 25474.945 ns/op
Iteration   4: 25567.519 ns/op
Iteration   5: 25456.767 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  25530.739 ±(99.9%) 255.940 ns/op [Average]
  (min, avg, max) = (25456.767, 25530.739, 25618.527), stdev = 66.467
  CI (99.9%): [25274.799, 25786.679] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 71.37% complete, ETA 00:28:45
# Fork: 1 of 1
# Warmup Iteration   1: 481135.758 ns/op
# Warmup Iteration   2: 299627.554 ns/op
# Warmup Iteration   3: 250108.551 ns/op
# Warmup Iteration   4: 227928.754 ns/op
Iteration   1: 230029.867 ns/op
Iteration   2: 226652.576 ns/op
Iteration   3: 226145.715 ns/op
Iteration   4: 227290.945 ns/op
Iteration   5: 226191.973 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  227262.215 ±(99.9%) 6216.248 ns/op [Average]
  (min, avg, max) = (226145.715, 227262.215, 230029.867), stdev = 1614.340
  CI (99.9%): [221045.968, 233478.463] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 71.57% complete, ETA 00:28:33
# Fork: 1 of 1
# Warmup Iteration   1: 281034.846 ns/op
# Warmup Iteration   2: 105976.864 ns/op
# Warmup Iteration   3: 101325.977 ns/op
# Warmup Iteration   4: 101265.494 ns/op
Iteration   1: 101820.737 ns/op
Iteration   2: 99040.627 ns/op
Iteration   3: 98867.084 ns/op
Iteration   4: 98601.288 ns/op
Iteration   5: 100976.705 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  99861.288 ±(99.9%) 5557.854 ns/op [Average]
  (min, avg, max) = (98601.288, 99861.288, 101820.737), stdev = 1443.357
  CI (99.9%): [94303.435, 105419.142] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 71.76% complete, ETA 00:28:21
# Fork: 1 of 1
# Warmup Iteration   1: 376760.320 ns/op
# Warmup Iteration   2: 136870.165 ns/op
# Warmup Iteration   3: 136114.055 ns/op
# Warmup Iteration   4: 135483.734 ns/op
Iteration   1: 139381.656 ns/op
Iteration   2: 132636.811 ns/op
Iteration   3: 131892.692 ns/op
Iteration   4: 132248.612 ns/op
Iteration   5: 132286.551 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  133689.264 ±(99.9%) 12295.217 ns/op [Average]
  (min, avg, max) = (131892.692, 133689.264, 139381.656), stdev = 3193.029
  CI (99.9%): [121394.047, 145984.481] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 71.96% complete, ETA 00:28:09
# Fork: 1 of 1
# Warmup Iteration   1: 514969.521 ns/op
# Warmup Iteration   2: 182447.927 ns/op
# Warmup Iteration   3: 164738.083 ns/op
# Warmup Iteration   4: 166387.973 ns/op
Iteration   1: 166022.906 ns/op
Iteration   2: 161061.446 ns/op
Iteration   3: 161043.390 ns/op
Iteration   4: 161654.169 ns/op
Iteration   5: 162112.612 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  162378.905 ±(99.9%) 8029.816 ns/op [Average]
  (min, avg, max) = (161043.390, 162378.905, 166022.906), stdev = 2085.318
  CI (99.9%): [154349.089, 170408.720] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 72.16% complete, ETA 00:27:57
# Fork: 1 of 1
# Warmup Iteration   1: 602038.299 ns/op
# Warmup Iteration   2: 212744.165 ns/op
# Warmup Iteration   3: 208442.568 ns/op
# Warmup Iteration   4: 213883.181 ns/op
Iteration   1: 204576.243 ns/op
Iteration   2: 204069.103 ns/op
Iteration   3: 204996.595 ns/op
Iteration   4: 204028.671 ns/op
Iteration   5: 204464.729 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  204427.068 ±(99.9%) 1534.099 ns/op [Average]
  (min, avg, max) = (204028.671, 204427.068, 204996.595), stdev = 398.401
  CI (99.9%): [202892.969, 205961.167] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 72.35% complete, ETA 00:27:45
# Fork: 1 of 1
# Warmup Iteration   1: 3127946.107 ns/op
# Warmup Iteration   2: 932151.760 ns/op
# Warmup Iteration   3: 1082421.025 ns/op
# Warmup Iteration   4: 938673.734 ns/op
Iteration   1: 889307.526 ns/op
Iteration   2: 890925.037 ns/op
Iteration   3: 914713.428 ns/op
Iteration   4: 904283.222 ns/op
Iteration   5: 891043.572 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  898054.557 ±(99.9%) 42740.794 ns/op [Average]
  (min, avg, max) = (889307.526, 898054.557, 914713.428), stdev = 11099.648
  CI (99.9%): [855313.763, 940795.351] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 72.55% complete, ETA 00:27:34
# Fork: 1 of 1
# Warmup Iteration   1: 3900.523 ns/op
# Warmup Iteration   2: 2291.635 ns/op
# Warmup Iteration   3: 2033.067 ns/op
# Warmup Iteration   4: 2034.911 ns/op
Iteration   1: 2027.391 ns/op
Iteration   2: 2037.911 ns/op
Iteration   3: 2035.299 ns/op
Iteration   4: 2038.196 ns/op
Iteration   5: 2043.550 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2036.469 ±(99.9%) 22.699 ns/op [Average]
  (min, avg, max) = (2027.391, 2036.469, 2043.550), stdev = 5.895
  CI (99.9%): [2013.771, 2059.168] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 72.75% complete, ETA 00:27:22
# Fork: 1 of 1
# Warmup Iteration   1: 7224.268 ns/op
# Warmup Iteration   2: 4591.373 ns/op
# Warmup Iteration   3: 4080.820 ns/op
# Warmup Iteration   4: 4061.745 ns/op
Iteration   1: 4071.240 ns/op
Iteration   2: 4131.532 ns/op
Iteration   3: 4046.592 ns/op
Iteration   4: 4087.398 ns/op
Iteration   5: 4080.717 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4083.496 ±(99.9%) 119.348 ns/op [Average]
  (min, avg, max) = (4046.592, 4083.496, 4131.532), stdev = 30.994
  CI (99.9%): [3964.148, 4202.844] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 72.94% complete, ETA 00:27:10
# Fork: 1 of 1
# Warmup Iteration   1: 13362.831 ns/op
# Warmup Iteration   2: 7765.484 ns/op
# Warmup Iteration   3: 7038.030 ns/op
# Warmup Iteration   4: 7013.324 ns/op
Iteration   1: 7063.130 ns/op
Iteration   2: 7052.720 ns/op
Iteration   3: 7067.883 ns/op
Iteration   4: 7008.579 ns/op
Iteration   5: 7053.821 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7049.227 ±(99.9%) 90.856 ns/op [Average]
  (min, avg, max) = (7008.579, 7049.227, 7067.883), stdev = 23.595
  CI (99.9%): [6958.371, 7140.083] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 73.14% complete, ETA 00:26:58
# Fork: 1 of 1
# Warmup Iteration   1: 22093.475 ns/op
# Warmup Iteration   2: 15872.168 ns/op
# Warmup Iteration   3: 14090.262 ns/op
# Warmup Iteration   4: 14030.725 ns/op
Iteration   1: 14077.327 ns/op
Iteration   2: 14343.200 ns/op
Iteration   3: 14065.350 ns/op
Iteration   4: 14053.530 ns/op
Iteration   5: 14147.999 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14137.481 ±(99.9%) 464.877 ns/op [Average]
  (min, avg, max) = (14053.530, 14137.481, 14343.200), stdev = 120.727
  CI (99.9%): [13672.604, 14602.359] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 73.33% complete, ETA 00:26:46
# Fork: 1 of 1
# Warmup Iteration   1: 215607.606 ns/op
# Warmup Iteration   2: 130266.577 ns/op
# Warmup Iteration   3: 122474.186 ns/op
# Warmup Iteration   4: 124950.874 ns/op
Iteration   1: 122609.702 ns/op
Iteration   2: 122054.429 ns/op
Iteration   3: 122233.526 ns/op
Iteration   4: 122571.738 ns/op
Iteration   5: 122311.953 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  122356.270 ±(99.9%) 900.574 ns/op [Average]
  (min, avg, max) = (122054.429, 122356.270, 122609.702), stdev = 233.876
  CI (99.9%): [121455.696, 123256.843] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 73.53% complete, ETA 00:26:34
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
17311.956 ns/op
# Warmup Iteration   2: 7023.888 ns/op
# Warmup Iteration   3: 6729.254 ns/op
# Warmup Iteration   4: 7059.952 ns/op
Iteration   1: 6157.264 ns/op
Iteration   2: 6215.788 ns/op
Iteration   3: 6215.635 ns/op
Iteration   4: 6216.690 ns/op
Iteration   5: 6146.721 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  6190.419 ±(99.9%) 135.846 ns/op [Average]
  (min, avg, max) = (6146.721, 6190.419, 6216.690), stdev = 35.279
  CI (99.9%): [6054.574, 6326.265] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 73.73% complete, ETA 00:26:23
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
17278.541 ns/op
# Warmup Iteration   2: 11968.366 ns/op
# Warmup Iteration   3: 11071.240 ns/op
# Warmup Iteration   4: 10362.576 ns/op
Iteration   1: 10586.036 ns/op
Iteration   2: 10604.659 ns/op
Iteration   3: 10518.138 ns/op
Iteration   4: 10621.602 ns/op
Iteration   5: 10482.082 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  10562.503 ±(99.9%) 229.909 ns/op [Average]
  (min, avg, max) = (10482.082, 10562.503, 10621.602), stdev = 59.707
  CI (99.9%): [10332.595, 10792.412] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 73.92% complete, ETA 00:26:11
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
35178.510 ns/op
# Warmup Iteration   2: 18771.691 ns/op
# Warmup Iteration   3: 20004.293 ns/op
# Warmup Iteration   4: 17214.229 ns/op
Iteration   1: 17032.700 ns/op
Iteration   2: 17138.339 ns/op
Iteration   3: 17055.598 ns/op
Iteration   4: 17086.756 ns/op
Iteration   5: 17209.383 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  17104.555 ±(99.9%) 272.330 ns/op [Average]
  (min, avg, max) = (17032.700, 17104.555, 17209.383), stdev = 70.723
  CI (99.9%): [16832.226, 17376.885] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 74.12% complete, ETA 00:25:59
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
53445.765 ns/op
# Warmup Iteration   2: 38969.973 ns/op
# Warmup Iteration   3: 36710.521 ns/op
# Warmup Iteration   4: 39107.202 ns/op
Iteration   1: 31141.892 ns/op
Iteration   2: 31096.518 ns/op
Iteration   3: 31065.406 ns/op
Iteration   4: 31042.138 ns/op
Iteration   5: 31088.234 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  31086.838 ±(99.9%) 143.872 ns/op [Average]
  (min, avg, max) = (31042.138, 31086.838, 31141.892), stdev = 37.363
  CI (99.9%): [30942.965, 31230.710] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 74.31% complete, ETA 00:25:47
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
401717.487 ns/op
# Warmup Iteration   2: 256434.013 ns/op
# Warmup Iteration   3: 276825.180 ns/op
# Warmup Iteration   4: 258671.182 ns/op
Iteration   1: 266173.506 ns/op
Iteration   2: 269246.334 ns/op
Iteration   3: 264314.101 ns/op
Iteration   4: 263465.818 ns/op
Iteration   5: 263051.070 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  265250.166 ±(99.9%) 9763.879 ns/op [Average]
  (min, avg, max) = (263051.070, 265250.166, 269246.334), stdev = 2535.648
  CI (99.9%): [255486.287, 275014.044] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 74.51% complete, ETA 00:25:35
# Fork: 1 of 1
# Warmup Iteration   1: 7452.834 ns/op
# Warmup Iteration   2: 4297.207 ns/op
# Warmup Iteration   3: 4209.534 ns/op
# Warmup Iteration   4: 4023.726 ns/op
Iteration   1: 3986.033 ns/op
Iteration   2: 3996.019 ns/op
Iteration   3: 3994.709 ns/op
Iteration   4: 3995.123 ns/op
Iteration   5: 3987.794 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3991.936 ±(99.9%) 17.908 ns/op [Average]
  (min, avg, max) = (3986.033, 3991.936, 3996.019), stdev = 4.651
  CI (99.9%): [3974.028, 4009.844] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 74.71% complete, ETA 00:25:24
# Fork: 1 of 1
# Warmup Iteration   1: 22160.410 ns/op
# Warmup Iteration   2: 8949.917 ns/op
# Warmup Iteration   3: 8945.847 ns/op
# Warmup Iteration   4: 8576.404 ns/op
Iteration   1: 9000.412 ns/op
Iteration   2: 8580.536 ns/op
Iteration   3: 8581.847 ns/op
Iteration   4: 8663.481 ns/op
Iteration   5: 8574.709 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8680.197 ±(99.9%) 703.598 ns/op [Average]
  (min, avg, max) = (8574.709, 8680.197, 9000.412), stdev = 182.722
  CI (99.9%): [7976.599, 9383.795] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 74.90% complete, ETA 00:25:12
# Fork: 1 of 1
# Warmup Iteration   1: 46695.641 ns/op
# Warmup Iteration   2: 17003.534 ns/op
# Warmup Iteration   3: 17116.794 ns/op
# Warmup Iteration   4: 16998.803 ns/op
Iteration   1: 16684.421 ns/op
Iteration   2: 16696.938 ns/op
Iteration   3: 16771.064 ns/op
Iteration   4: 16770.871 ns/op
Iteration   5: 16732.090 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  16731.077 ±(99.9%) 155.532 ns/op [Average]
  (min, avg, max) = (16684.421, 16731.077, 16771.064), stdev = 40.391
  CI (99.9%): [16575.545, 16886.609] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 75.10% complete, ETA 00:25:00
# Fork: 1 of 1
# Warmup Iteration   1: 104750.490 ns/op
# Warmup Iteration   2: 32112.869 ns/op
# Warmup Iteration   3: 31737.257 ns/op
# Warmup Iteration   4: 31872.368 ns/op
Iteration   1: 31502.668 ns/op
Iteration   2: 31513.061 ns/op
Iteration   3: 31244.566 ns/op
Iteration   4: 31485.852 ns/op
Iteration   5: 31567.719 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  31462.773 ±(99.9%) 484.329 ns/op [Average]
  (min, avg, max) = (31244.566, 31462.773, 31567.719), stdev = 125.779
  CI (99.9%): [30978.444, 31947.102] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 75.29% complete, ETA 00:24:48
# Fork: 1 of 1
# Warmup Iteration   1: 537225.643 ns/op
# Warmup Iteration   2: 272324.372 ns/op
# Warmup Iteration   3: 267548.347 ns/op
# Warmup Iteration   4: 258497.531 ns/op
Iteration   1: 255982.921 ns/op
Iteration   2: 255088.091 ns/op
Iteration   3: 258281.433 ns/op
Iteration   4: 256490.800 ns/op
Iteration   5: 254719.184 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  256112.486 ±(99.9%) 5396.026 ns/op [Average]
  (min, avg, max) = (254719.184, 256112.486, 258281.433), stdev = 1401.331
  CI (99.9%): [250716.460, 261508.512] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 75.49% complete, ETA 00:24:36
# Fork: 1 of 1
# Warmup Iteration   1: 98175.419 ns/op
# Warmup Iteration   2: 30494.113 ns/op
# Warmup Iteration   3: 23740.545 ns/op
# Warmup Iteration   4: 23506.270 ns/op
Iteration   1: 23482.534 ns/op
Iteration   2: 23451.036 ns/op
Iteration   3: 23473.556 ns/op
Iteration   4: 23395.065 ns/op
Iteration   5: 23426.424 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  23445.723 ±(99.9%) 137.451 ns/op [Average]
  (min, avg, max) = (23395.065, 23445.723, 23482.534), stdev = 35.696
  CI (99.9%): [23308.272, 23583.174] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 75.69% complete, ETA 00:24:25
# Fork: 1 of 1
# Warmup Iteration   1: 165885.877 ns/op
# Warmup Iteration   2: 53491.780 ns/op
# Warmup Iteration   3: 44288.828 ns/op
# Warmup Iteration   4: 41968.786 ns/op
Iteration   1: 41841.225 ns/op
Iteration   2: 41929.936 ns/op
Iteration   3: 41908.332 ns/op
Iteration   4: 43539.642 ns/op
Iteration   5: 44244.594 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  42692.746 ±(99.9%) 4325.654 ns/op [Average]
  (min, avg, max) = (41841.225, 42692.746, 44244.594), stdev = 1123.358
  CI (99.9%): [38367.092, 47018.399] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 75.88% complete, ETA 00:24:13
# Fork: 1 of 1
# Warmup Iteration   1: 366023.153 ns/op
# Warmup Iteration   2: 131359.978 ns/op
# Warmup Iteration   3: 103165.718 ns/op
# Warmup Iteration   4: 94509.754 ns/op
Iteration   1: 101215.531 ns/op
Iteration   2: 94582.205 ns/op
Iteration   3: 94363.824 ns/op
Iteration   4: 94566.859 ns/op
Iteration   5: 93804.489 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  95706.582 ±(99.9%) 11920.320 ns/op [Average]
  (min, avg, max) = (93804.489, 95706.582, 101215.531), stdev = 3095.669
  CI (99.9%): [83786.262, 107626.902] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 76.08% complete, ETA 00:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 841581.979 ns/op
# Warmup Iteration   2: 297979.095 ns/op
# Warmup Iteration   3: 232004.970 ns/op
# Warmup Iteration   4: 225027.531 ns/op
Iteration   1: 228146.621 ns/op
Iteration   2: 225505.064 ns/op
Iteration   3: 224754.274 ns/op
Iteration   4: 224630.141 ns/op
Iteration   5: 226309.398 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  225869.100 ±(99.9%) 5543.905 ns/op [Average]
  (min, avg, max) = (224630.141, 225869.100, 228146.621), stdev = 1439.735
  CI (99.9%): [220325.195, 231413.005] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 76.27% complete, ETA 00:23:49
# Fork: 1 of 1
# Warmup Iteration   1: 5676148.802 ns/op
# Warmup Iteration   2: 1898192.341 ns/op
# Warmup Iteration   3: 1768519.999 ns/op
# Warmup Iteration   4: 1705711.400 ns/op
Iteration   1: 1733849.944 ns/op
Iteration   2: 1672004.893 ns/op
Iteration   3: 1680996.394 ns/op
Iteration   4: 1661597.567 ns/op
Iteration   5: 1662346.175 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1682158.995 ±(99.9%) 115386.583 ns/op [Average]
  (min, avg, max) = (1661597.567, 1682158.995, 1733849.944), stdev = 29965.529
  CI (99.9%): [1566772.412, 1797545.578] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 76.47% complete, ETA 00:23:38
# Fork: 1 of 1
# Warmup Iteration   1: 125365.264 ns/op
# Warmup Iteration   2: 16018.035 ns/op
# Warmup Iteration   3: 16046.772 ns/op
# Warmup Iteration   4: 15782.324 ns/op
Iteration   1: 16679.160 ns/op
Iteration   2: 15425.454 ns/op
Iteration   3: 15428.490 ns/op
Iteration   4: 15409.456 ns/op
Iteration   5: 15474.643 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  15683.441 ±(99.9%) 2145.398 ns/op [Average]
  (min, avg, max) = (15409.456, 15683.441, 16679.160), stdev = 557.153
  CI (99.9%): [13538.042, 17828.839] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 76.67% complete, ETA 00:23:26
# Fork: 1 of 1
# Warmup Iteration   1: 61932.272 ns/op
# Warmup Iteration   2: 31186.844 ns/op
# Warmup Iteration   3: 30867.272 ns/op
# Warmup Iteration   4: 28791.867 ns/op
Iteration   1: 28923.958 ns/op
Iteration   2: 29982.170 ns/op
Iteration   3: 28831.288 ns/op
Iteration   4: 28948.315 ns/op
Iteration   5: 28784.397 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  29094.026 ±(99.9%) 1929.031 ns/op [Average]
  (min, avg, max) = (28784.397, 29094.026, 29982.170), stdev = 500.963
  CI (99.9%): [27164.995, 31023.057] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 76.86% complete, ETA 00:23:14
# Fork: 1 of 1
# Warmup Iteration   1: 156300.678 ns/op
# Warmup Iteration   2: 70506.375 ns/op
# Warmup Iteration   3: 69346.224 ns/op
# Warmup Iteration   4: 67025.268 ns/op
Iteration   1: 66796.581 ns/op
Iteration   2: 72279.931 ns/op
Iteration   3: 71250.817 ns/op
Iteration   4: 66501.115 ns/op
Iteration   5: 66720.898 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  68709.868 ±(99.9%) 10839.586 ns/op [Average]
  (min, avg, max) = (66501.115, 68709.868, 72279.931), stdev = 2815.006
  CI (99.9%): [57870.282, 79549.454] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 77.06% complete, ETA 00:23:02
# Fork: 1 of 1
# Warmup Iteration   1: 426287.375 ns/op
# Warmup Iteration   2: 160031.222 ns/op
# Warmup Iteration   3: 163437.700 ns/op
# Warmup Iteration   4: 158802.284 ns/op
Iteration   1: 158047.397 ns/op
Iteration   2: 157849.934 ns/op
Iteration   3: 157181.227 ns/op
Iteration   4: 158500.635 ns/op
Iteration   5: 157649.496 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  157845.738 ±(99.9%) 1876.236 ns/op [Average]
  (min, avg, max) = (157181.227, 157845.738, 158500.635), stdev = 487.252
  CI (99.9%): [155969.502, 159721.973] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 77.25% complete, ETA 00:22:50
# Fork: 1 of 1
# Warmup Iteration   1: 1813859.030 ns/op
# Warmup Iteration   2: 1174312.997 ns/op
# Warmup Iteration   3: 1159581.400 ns/op
# Warmup Iteration   4: 1127923.441 ns/op
Iteration   1: 1110351.328 ns/op
Iteration   2: 1110042.637 ns/op
Iteration   3: 1110588.102 ns/op
Iteration   4: 1112654.257 ns/op
Iteration   5: 1111997.545 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1111126.774 ±(99.9%) 4372.764 ns/op [Average]
  (min, avg, max) = (1110042.637, 1111126.774, 1112654.257), stdev = 1135.593
  CI (99.9%): [1106754.010, 1115499.538] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 77.45% complete, ETA 00:22:39
# Fork: 1 of 1
# Warmup Iteration   1: 47174.690 ns/op
# Warmup Iteration   2: 16584.921 ns/op
# Warmup Iteration   3: 16205.679 ns/op
# Warmup Iteration   4: 15523.939 ns/op
Iteration   1: 15450.116 ns/op
Iteration   2: 15418.914 ns/op
Iteration   3: 15500.967 ns/op
Iteration   4: 15513.041 ns/op
Iteration   5: 15475.429 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  15471.693 ±(99.9%) 147.030 ns/op [Average]
  (min, avg, max) = (15418.914, 15471.693, 15513.041), stdev = 38.183
  CI (99.9%): [15324.663, 15618.723] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 77.65% complete, ETA 00:22:27
# Fork: 1 of 1
# Warmup Iteration   1: 64749.620 ns/op
# Warmup Iteration   2: 33406.874 ns/op
# Warmup Iteration   3: 32721.362 ns/op
# Warmup Iteration   4: 31577.670 ns/op
Iteration   1: 31376.569 ns/op
Iteration   2: 31391.145 ns/op
Iteration   3: 31462.808 ns/op
Iteration   4: 31441.400 ns/op
Iteration   5: 31505.870 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  31435.559 ±(99.9%) 203.508 ns/op [Average]
  (min, avg, max) = (31376.569, 31435.559, 31505.870), stdev = 52.850
  CI (99.9%): [31232.050, 31639.067] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 77.84% complete, ETA 00:22:15
# Fork: 1 of 1
# Warmup Iteration   1: 154745.563 ns/op
# Warmup Iteration   2: 67617.208 ns/op
# Warmup Iteration   3: 70070.552 ns/op
# Warmup Iteration   4: 66191.101 ns/op
Iteration   1: 67128.678 ns/op
Iteration   2: 65741.968 ns/op
Iteration   3: 65552.756 ns/op
Iteration   4: 65845.335 ns/op
Iteration   5: 65516.311 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  65957.010 ±(99.9%) 2575.300 ns/op [Average]
  (min, avg, max) = (65516.311, 65957.010, 67128.678), stdev = 668.797
  CI (99.9%): [63381.710, 68532.309] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 78.04% complete, ETA 00:22:03
# Fork: 1 of 1
# Warmup Iteration   1: 366849.852 ns/op
# Warmup Iteration   2: 149603.857 ns/op
# Warmup Iteration   3: 154766.238 ns/op
# Warmup Iteration   4: 160099.596 ns/op
Iteration   1: 148255.845 ns/op
Iteration   2: 147706.844 ns/op
Iteration   3: 146639.263 ns/op
Iteration   4: 145786.743 ns/op
Iteration   5: 145831.751 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  146844.089 ±(99.9%) 4271.509 ns/op [Average]
  (min, avg, max) = (145786.743, 146844.089, 148255.845), stdev = 1109.297
  CI (99.9%): [142572.580, 151115.598] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 78.24% complete, ETA 00:21:51
# Fork: 1 of 1
# Warmup Iteration   1: 2038168.405 ns/op
# Warmup Iteration   2: 1191010.621 ns/op
# Warmup Iteration   3: 1171698.499 ns/op
# Warmup Iteration   4: 1132173.320 ns/op
Iteration   1: 1147207.403 ns/op
Iteration   2: 1162568.466 ns/op
Iteration   3: 1133754.648 ns/op
Iteration   4: 1140333.045 ns/op
Iteration   5: 1131844.669 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1143141.646 ±(99.9%) 47845.603 ns/op [Average]
  (min, avg, max) = (1131844.669, 1143141.646, 1162568.466), stdev = 12425.351
  CI (99.9%): [1095296.043, 1190987.249] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 78.43% complete, ETA 00:21:40
# Fork: 1 of 1
# Warmup Iteration   1: 12245.006 ns/op
# Warmup Iteration   2: 8828.152 ns/op
# Warmup Iteration   3: 8234.580 ns/op
# Warmup Iteration   4: 8609.606 ns/op
Iteration   1: 8261.225 ns/op
Iteration   2: 8229.296 ns/op
Iteration   3: 8285.089 ns/op
Iteration   4: 8299.949 ns/op
Iteration   5: 8253.278 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8265.768 ±(99.9%) 106.303 ns/op [Average]
  (min, avg, max) = (8229.296, 8265.768, 8299.949), stdev = 27.607
  CI (99.9%): [8159.464, 8372.071] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 78.63% complete, ETA 00:21:28
# Fork: 1 of 1
# Warmup Iteration   1: 29397.139 ns/op
# Warmup Iteration   2: 16634.694 ns/op
# Warmup Iteration   3: 15784.364 ns/op
# Warmup Iteration   4: 15790.712 ns/op
Iteration   1: 15739.468 ns/op
Iteration   2: 15704.006 ns/op
Iteration   3: 15670.921 ns/op
Iteration   4: 15715.639 ns/op
Iteration   5: 15693.971 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  15704.801 ±(99.9%) 97.889 ns/op [Average]
  (min, avg, max) = (15670.921, 15704.801, 15739.468), stdev = 25.422
  CI (99.9%): [15606.912, 15802.690] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 78.82% complete, ETA 00:21:16
# Fork: 1 of 1
# Warmup Iteration   1: 64852.386 ns/op
# Warmup Iteration   2: 36779.415 ns/op
# Warmup Iteration   3: 35952.386 ns/op
# Warmup Iteration   4: 35255.670 ns/op
Iteration   1: 35254.872 ns/op
Iteration   2: 35219.305 ns/op
Iteration   3: 35196.277 ns/op
Iteration   4: 35001.476 ns/op
Iteration   5: 35311.241 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  35196.634 ±(99.9%) 452.050 ns/op [Average]
  (min, avg, max) = (35001.476, 35196.634, 35311.241), stdev = 117.396
  CI (99.9%): [34744.584, 35648.684] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 79.02% complete, ETA 00:21:04
# Fork: 1 of 1
# Warmup Iteration   1: 128968.632 ns/op
# Warmup Iteration   2: 87429.289 ns/op
# Warmup Iteration   3: 84139.524 ns/op
# Warmup Iteration   4: 84658.952 ns/op
Iteration   1: 82621.527 ns/op
Iteration   2: 82536.502 ns/op
Iteration   3: 82037.627 ns/op
Iteration   4: 81991.999 ns/op
Iteration   5: 81902.871 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  82218.105 ±(99.9%) 1287.513 ns/op [Average]
  (min, avg, max) = (81902.871, 82218.105, 82621.527), stdev = 334.363
  CI (99.9%): [80930.592, 83505.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 79.22% complete, ETA 00:20:52
# Fork: 1 of 1
# Warmup Iteration   1: 884098.832 ns/op
# Warmup Iteration   2: 641416.377 ns/op
# Warmup Iteration   3: 663941.296 ns/op
# Warmup Iteration   4: 618751.923 ns/op
Iteration   1: 618283.558 ns/op
Iteration   2: 621479.939 ns/op
Iteration   3: 618047.125 ns/op
Iteration   4: 620149.080 ns/op
Iteration   5: 618612.302 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  619314.401 ±(99.9%) 5628.995 ns/op [Average]
  (min, avg, max) = (618047.125, 619314.401, 621479.939), stdev = 1461.832
  CI (99.9%): [613685.406, 624943.396] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 79.41% complete, ETA 00:20:40
# Fork: 1 of 1
# Warmup Iteration   1: 24025.277 ns/op
# Warmup Iteration   2: 8463.886 ns/op
# Warmup Iteration   3: 7622.232 ns/op
# Warmup Iteration   4: 7614.999 ns/op
Iteration   1: 7608.291 ns/op
Iteration   2: 7575.018 ns/op
Iteration   3: 7753.950 ns/op
Iteration   4: 7794.605 ns/op
Iteration   5: 7897.569 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7725.887 ±(99.9%) 515.090 ns/op [Average]
  (min, avg, max) = (7575.018, 7725.887, 7897.569), stdev = 133.767
  CI (99.9%): [7210.797, 8240.976] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 79.61% complete, ETA 00:20:29
# Fork: 1 of 1
# Warmup Iteration   1: 40246.279 ns/op
# Warmup Iteration   2: 15308.315 ns/op
# Warmup Iteration   3: 13529.952 ns/op
# Warmup Iteration   4: 13493.741 ns/op
Iteration   1: 13392.841 ns/op
Iteration   2: 13398.804 ns/op
Iteration   3: 13433.814 ns/op
Iteration   4: 13404.913 ns/op
Iteration   5: 13340.977 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13394.270 ±(99.9%) 129.723 ns/op [Average]
  (min, avg, max) = (13340.977, 13394.270, 13433.814), stdev = 33.689
  CI (99.9%): [13264.546, 13523.993] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 79.80% complete, ETA 00:20:17
# Fork: 1 of 1
# Warmup Iteration   1: 83295.541 ns/op
# Warmup Iteration   2: 28271.024 ns/op
# Warmup Iteration   3: 24796.013 ns/op
# Warmup Iteration   4: 24991.805 ns/op
Iteration   1: 24758.799 ns/op
Iteration   2: 24824.126 ns/op
Iteration   3: 24741.466 ns/op
Iteration   4: 24743.850 ns/op
Iteration   5: 24739.260 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  24761.500 ±(99.9%) 137.991 ns/op [Average]
  (min, avg, max) = (24739.260, 24761.500, 24824.126), stdev = 35.836
  CI (99.9%): [24623.509, 24899.491] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 80.00% complete, ETA 00:20:05
# Fork: 1 of 1
# Warmup Iteration   1: 263005.592 ns/op
# Warmup Iteration   2: 71462.610 ns/op
# Warmup Iteration   3: 52297.746 ns/op
# Warmup Iteration   4: 54432.163 ns/op
Iteration   1: 49823.166 ns/op
Iteration   2: 49848.918 ns/op
Iteration   3: 49828.138 ns/op
Iteration   4: 50042.721 ns/op
Iteration   5: 49917.627 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  49892.114 ±(99.9%) 355.252 ns/op [Average]
  (min, avg, max) = (49823.166, 49892.114, 50042.721), stdev = 92.258
  CI (99.9%): [49536.862, 50247.366] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 80.20% complete, ETA 00:19:53
# Fork: 1 of 1
# Warmup Iteration   1: 818481.225 ns/op
# Warmup Iteration   2: 570683.753 ns/op
# Warmup Iteration   3: 544168.059 ns/op
# Warmup Iteration   4: 525747.059 ns/op
Iteration   1: 523372.406 ns/op
Iteration   2: 523740.046 ns/op
Iteration   3: 527644.141 ns/op
Iteration   4: 523488.227 ns/op
Iteration   5: 527314.531 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  525111.870 ±(99.9%) 8349.765 ns/op [Average]
  (min, avg, max) = (523372.406, 525111.870, 527644.141), stdev = 2168.407
  CI (99.9%): [516762.105, 533461.635] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 80.39% complete, ETA 00:19:41
# Fork: 1 of 1
# Warmup Iteration   1: 25971.243 ns/op
# Warmup Iteration   2: 8606.029 ns/op
# Warmup Iteration   3: 7505.473 ns/op
# Warmup Iteration   4: 7485.081 ns/op
Iteration   1: 7458.837 ns/op
Iteration   2: 7455.851 ns/op
Iteration   3: 7479.716 ns/op
Iteration   4: 7575.236 ns/op
Iteration   5: 7486.554 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7491.239 ±(99.9%) 187.779 ns/op [Average]
  (min, avg, max) = (7455.851, 7491.239, 7575.236), stdev = 48.766
  CI (99.9%): [7303.460, 7679.018] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 80.59% complete, ETA 00:19:29
# Fork: 1 of 1
# Warmup Iteration   1: 38069.102 ns/op
# Warmup Iteration   2: 15229.272 ns/op
# Warmup Iteration   3: 13600.262 ns/op
# Warmup Iteration   4: 13620.586 ns/op
Iteration   1: 13540.375 ns/op
Iteration   2: 13536.243 ns/op
Iteration   3: 13612.580 ns/op
Iteration   4: 13525.100 ns/op
Iteration   5: 13471.588 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13537.177 ±(99.9%) 193.918 ns/op [Average]
  (min, avg, max) = (13471.588, 13537.177, 13612.580), stdev = 50.360
  CI (99.9%): [13343.259, 13731.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 80.78% complete, ETA 00:19:18
# Fork: 1 of 1
# Warmup Iteration   1: 70260.617 ns/op
# Warmup Iteration   2: 28046.871 ns/op
# Warmup Iteration   3: 25848.880 ns/op
# Warmup Iteration   4: 25052.926 ns/op
Iteration   1: 25020.648 ns/op
Iteration   2: 24972.914 ns/op
Iteration   3: 25006.372 ns/op
Iteration   4: 24936.201 ns/op
Iteration   5: 24969.763 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  24981.180 ±(99.9%) 127.916 ns/op [Average]
  (min, avg, max) = (24936.201, 24981.180, 25020.648), stdev = 33.219
  CI (99.9%): [24853.263, 25109.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 80.98% complete, ETA 00:19:06
# Fork: 1 of 1
# Warmup Iteration   1: 105927.657 ns/op
# Warmup Iteration   2: 56843.662 ns/op
# Warmup Iteration   3: 55688.928 ns/op
# Warmup Iteration   4: 52771.454 ns/op
Iteration   1: 52483.849 ns/op
Iteration   2: 52607.850 ns/op
Iteration   3: 52549.588 ns/op
Iteration   4: 52456.086 ns/op
Iteration   5: 52431.049 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  52505.685 ±(99.9%) 278.157 ns/op [Average]
  (min, avg, max) = (52431.049, 52505.685, 52607.850), stdev = 72.236
  CI (99.9%): [52227.528, 52783.841] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 81.18% complete, ETA 00:18:54
# Fork: 1 of 1
# Warmup Iteration   1: 769270.392 ns/op
# Warmup Iteration   2: 588367.791 ns/op
# Warmup Iteration   3: 578317.233 ns/op
# Warmup Iteration   4: 543193.059 ns/op
Iteration   1: 542805.026 ns/op
Iteration   2: 543363.506 ns/op
Iteration   3: 543491.509 ns/op
Iteration   4: 541954.463 ns/op
Iteration   5: 560792.816 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  546481.464 ±(99.9%) 30894.442 ns/op [Average]
  (min, avg, max) = (541954.463, 546481.464, 560792.816), stdev = 8023.189
  CI (99.9%): [515587.022, 577375.906] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 81.37% complete, ETA 00:18:42
# Fork: 1 of 1
# Warmup Iteration   1: 19399.078 ns/op
# Warmup Iteration   2: 6358.521 ns/op
# Warmup Iteration   3: 6647.173 ns/op
# Warmup Iteration   4: 6503.317 ns/op
Iteration   1: 6141.305 ns/op
Iteration   2: 6141.673 ns/op
Iteration   3: 6156.986 ns/op
Iteration   4: 6260.439 ns/op
Iteration   5: 6145.453 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6169.171 ±(99.9%) 197.976 ns/op [Average]
  (min, avg, max) = (6141.305, 6169.171, 6260.439), stdev = 51.414
  CI (99.9%): [5971.195, 6367.147] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 81.57% complete, ETA 00:18:30
# Fork: 1 of 1
# Warmup Iteration   1: 38378.642 ns/op
# Warmup Iteration   2: 13888.969 ns/op
# Warmup Iteration   3: 13899.595 ns/op
# Warmup Iteration   4: 13339.394 ns/op
Iteration   1: 13052.074 ns/op
Iteration   2: 13151.540 ns/op
Iteration   3: 13079.991 ns/op
Iteration   4: 13081.548 ns/op
Iteration   5: 13111.434 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  13095.317 ±(99.9%) 145.552 ns/op [Average]
  (min, avg, max) = (13052.074, 13095.317, 13151.540), stdev = 37.799
  CI (99.9%): [12949.765, 13240.870] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 81.76% complete, ETA 00:18:18
# Fork: 1 of 1
# Warmup Iteration   1: 159751.345 ns/op
# Warmup Iteration   2: 97373.211 ns/op
# Warmup Iteration   3: 29163.682 ns/op
# Warmup Iteration   4: 24576.065 ns/op
Iteration   1: 23291.790 ns/op
Iteration   2: 23098.374 ns/op
Iteration   3: 23061.918 ns/op
Iteration   4: 23101.142 ns/op
Iteration   5: 23062.811 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  23123.207 ±(99.9%) 369.981 ns/op [Average]
  (min, avg, max) = (23061.918, 23123.207, 23291.790), stdev = 96.083
  CI (99.9%): [22753.226, 23493.188] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 81.96% complete, ETA 00:18:07
# Fork: 1 of 1
# Warmup Iteration   1: 181147.928 ns/op
# Warmup Iteration   2: 47736.056 ns/op
# Warmup Iteration   3: 43681.219 ns/op
# Warmup Iteration   4: 42478.365 ns/op
Iteration   1: 41380.859 ns/op
Iteration   2: 41383.568 ns/op
Iteration   3: 41390.085 ns/op
Iteration   4: 41417.840 ns/op
Iteration   5: 41409.025 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  41396.275 ±(99.9%) 62.832 ns/op [Average]
  (min, avg, max) = (41380.859, 41396.275, 41417.840), stdev = 16.317
  CI (99.9%): [41333.443, 41459.108] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 82.16% complete, ETA 00:17:55
# Fork: 1 of 1
# Warmup Iteration   1: 530244.135 ns/op
# Warmup Iteration   2: 334744.384 ns/op
# Warmup Iteration   3: 324412.018 ns/op
# Warmup Iteration   4: 311821.780 ns/op
Iteration   1: 312269.198 ns/op
Iteration   2: 311313.485 ns/op
Iteration   3: 312437.999 ns/op
Iteration   4: 311181.134 ns/op
Iteration   5: 312955.722 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  312031.508 ±(99.9%) 2929.145 ns/op [Average]
  (min, avg, max) = (311181.134, 312031.508, 312955.722), stdev = 760.690
  CI (99.9%): [309102.363, 314960.652] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 82.35% complete, ETA 00:17:43
# Fork: 1 of 1
# Warmup Iteration   1: 8897.223 ns/op
# Warmup Iteration   2: 3961.783 ns/op
# Warmup Iteration   3: 3907.732 ns/op
# Warmup Iteration   4: 3818.024 ns/op
Iteration   1: 3738.985 ns/op
Iteration   2: 3863.308 ns/op
Iteration   3: 3753.486 ns/op
Iteration   4: 3749.433 ns/op
Iteration   5: 3743.084 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3769.659 ±(99.9%) 202.735 ns/op [Average]
  (min, avg, max) = (3738.985, 3769.659, 3863.308), stdev = 52.650
  CI (99.9%): [3566.924, 3972.394] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 82.55% complete, ETA 00:17:31
# Fork: 1 of 1
# Warmup Iteration   1: 17124.532 ns/op
# Warmup Iteration   2: 7800.679 ns/op
# Warmup Iteration   3: 7479.942 ns/op
# Warmup Iteration   4: 7415.971 ns/op
Iteration   1: 7257.647 ns/op
Iteration   2: 7271.767 ns/op
Iteration   3: 7309.334 ns/op
Iteration   4: 7309.084 ns/op
Iteration   5: 7265.733 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7282.713 ±(99.9%) 95.114 ns/op [Average]
  (min, avg, max) = (7257.647, 7282.713, 7309.334), stdev = 24.701
  CI (99.9%): [7187.599, 7377.828] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 82.75% complete, ETA 00:17:19
# Fork: 1 of 1
# Warmup Iteration   1: 24975.371 ns/op
# Warmup Iteration   2: 16459.678 ns/op
# Warmup Iteration   3: 15953.995 ns/op
# Warmup Iteration   4: 15434.636 ns/op
Iteration   1: 15322.547 ns/op
Iteration   2: 15406.622 ns/op
Iteration   3: 16276.876 ns/op
Iteration   4: 15411.415 ns/op
Iteration   5: 15396.631 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15562.818 ±(99.9%) 1543.321 ns/op [Average]
  (min, avg, max) = (15322.547, 15562.818, 16276.876), stdev = 400.795
  CI (99.9%): [14019.498, 17106.139] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 82.94% complete, ETA 00:17:08
# Fork: 1 of 1
# Warmup Iteration   1: 115715.393 ns/op
# Warmup Iteration   2: 34309.788 ns/op
# Warmup Iteration   3: 30391.176 ns/op
# Warmup Iteration   4: 29945.167 ns/op
Iteration   1: 30566.896 ns/op
Iteration   2: 29134.479 ns/op
Iteration   3: 29211.276 ns/op
Iteration   4: 29145.248 ns/op
Iteration   5: 29133.750 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  29438.330 ±(99.9%) 2432.472 ns/op [Average]
  (min, avg, max) = (29133.750, 29438.330, 30566.896), stdev = 631.705
  CI (99.9%): [27005.858, 31870.802] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 83.14% complete, ETA 00:16:56
# Fork: 1 of 1
# Warmup Iteration   1: 2422122.188 ns/op
# Warmup Iteration   2: 270624.689 ns/op
# Warmup Iteration   3: 247434.004 ns/op
# Warmup Iteration   4: 244591.049 ns/op
Iteration   1: 235436.470 ns/op
Iteration   2: 235066.640 ns/op
Iteration   3: 234911.000 ns/op
Iteration   4: 234746.340 ns/op
Iteration   5: 234803.485 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  234992.787 ±(99.9%) 1064.285 ns/op [Average]
  (min, avg, max) = (234746.340, 234992.787, 235436.470), stdev = 276.392
  CI (99.9%): [233928.502, 236057.072] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 83.33% complete, ETA 00:16:44
# Fork: 1 of 1
# Warmup Iteration   1: 58611.608 ns/op
# Warmup Iteration   2: 7724.454 ns/op
# Warmup Iteration   3: 4963.380 ns/op
# Warmup Iteration   4: 4949.751 ns/op
Iteration   1: 4911.846 ns/op
Iteration   2: 4960.692 ns/op
Iteration   3: 4871.431 ns/op
Iteration   4: 4853.761 ns/op
Iteration   5: 4860.206 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4891.587 ±(99.9%) 172.289 ns/op [Average]
  (min, avg, max) = (4853.761, 4891.587, 4960.692), stdev = 44.743
  CI (99.9%): [4719.298, 5063.876] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 83.53% complete, ETA 00:16:32
# Fork: 1 of 1
# Warmup Iteration   1: 106431.956 ns/op
# Warmup Iteration   2: 17016.733 ns/op
# Warmup Iteration   3: 8737.986 ns/op
# Warmup Iteration   4: 8865.078 ns/op
Iteration   1: 8600.806 ns/op
Iteration   2: 8534.571 ns/op
Iteration   3: 8570.584 ns/op
Iteration   4: 8558.765 ns/op
Iteration   5: 8559.417 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8564.829 ±(99.9%) 92.517 ns/op [Average]
  (min, avg, max) = (8534.571, 8564.829, 8600.806), stdev = 24.026
  CI (99.9%): [8472.312, 8657.345] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 83.73% complete, ETA 00:16:20
# Fork: 1 of 1
# Warmup Iteration   1: 169113.705 ns/op
# Warmup Iteration   2: 22081.941 ns/op
# Warmup Iteration   3: 16416.522 ns/op
# Warmup Iteration   4: 16652.965 ns/op
Iteration   1: 15789.469 ns/op
Iteration   2: 15798.025 ns/op
Iteration   3: 15779.506 ns/op
Iteration   4: 15793.338 ns/op
Iteration   5: 15840.600 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15800.188 ±(99.9%) 90.865 ns/op [Average]
  (min, avg, max) = (15779.506, 15800.188, 15840.600), stdev = 23.597
  CI (99.9%): [15709.322, 15891.053] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 83.92% complete, ETA 00:16:08
# Fork: 1 of 1
# Warmup Iteration   1: 618860.430 ns/op
# Warmup Iteration   2: 155735.107 ns/op
# Warmup Iteration   3: 34548.168 ns/op
# Warmup Iteration   4: 30072.648 ns/op
Iteration   1: 29662.068 ns/op
Iteration   2: 28672.056 ns/op
Iteration   3: 28691.149 ns/op
Iteration   4: 28785.481 ns/op
Iteration   5: 28866.862 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  28935.523 ±(99.9%) 1592.590 ns/op [Average]
  (min, avg, max) = (28672.056, 28935.523, 29662.068), stdev = 413.590
  CI (99.9%): [27342.934, 30528.113] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 84.12% complete, ETA 00:15:57
# Fork: 1 of 1
# Warmup Iteration   1: 3166995.132 ns/op
# Warmup Iteration   2: 296590.713 ns/op
# Warmup Iteration   3: 228865.673 ns/op
# Warmup Iteration   4: 223996.753 ns/op
Iteration   1: 223689.730 ns/op
Iteration   2: 214366.886 ns/op
Iteration   3: 214445.005 ns/op
Iteration   4: 214312.207 ns/op
Iteration   5: 214545.543 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  216271.874 ±(99.9%) 15971.069 ns/op [Average]
  (min, avg, max) = (214312.207, 216271.874, 223689.730), stdev = 4147.636
  CI (99.9%): [200300.805, 232242.943] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 84.31% complete, ETA 00:15:45
# Fork: 1 of 1
# Warmup Iteration   1: 15446.779 ns/op
# Warmup Iteration   2: 2263.333 ns/op
# Warmup Iteration   3: 2022.961 ns/op
# Warmup Iteration   4: 1906.108 ns/op
Iteration   1: 1910.038 ns/op
Iteration   2: 1906.909 ns/op
Iteration   3: 1906.853 ns/op
Iteration   4: 1897.745 ns/op
Iteration   5: 2021.814 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1928.672 ±(99.9%) 201.276 ns/op [Average]
  (min, avg, max) = (1897.745, 1928.672, 2021.814), stdev = 52.271
  CI (99.9%): [1727.396, 2129.948] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 84.51% complete, ETA 00:15:33
# Fork: 1 of 1
# Warmup Iteration   1: 30572.140 ns/op
# Warmup Iteration   2: 5673.611 ns/op
# Warmup Iteration   3: 4447.263 ns/op
# Warmup Iteration   4: 4186.087 ns/op
Iteration   1: 4178.092 ns/op
Iteration   2: 4200.938 ns/op
Iteration   3: 4183.064 ns/op
Iteration   4: 4185.244 ns/op
Iteration   5: 4184.865 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4186.441 ±(99.9%) 33.080 ns/op [Average]
  (min, avg, max) = (4178.092, 4186.441, 4200.938), stdev = 8.591
  CI (99.9%): [4153.361, 4219.520] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 84.71% complete, ETA 00:15:21
# Fork: 1 of 1
# Warmup Iteration   1: 65628.094 ns/op
# Warmup Iteration   2: 12083.696 ns/op
# Warmup Iteration   3: 9382.638 ns/op
# Warmup Iteration   4: 8740.073 ns/op
Iteration   1: 8812.747 ns/op
Iteration   2: 8611.659 ns/op
Iteration   3: 8622.883 ns/op
Iteration   4: 8623.343 ns/op
Iteration   5: 8600.621 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8654.250 ±(99.9%) 343.066 ns/op [Average]
  (min, avg, max) = (8600.621, 8654.250, 8812.747), stdev = 89.093
  CI (99.9%): [8311.184, 8997.317] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 84.90% complete, ETA 00:15:09
# Fork: 1 of 1
# Warmup Iteration   1: 76421.361 ns/op
# Warmup Iteration   2: 19704.698 ns/op
# Warmup Iteration   3: 17569.440 ns/op
# Warmup Iteration   4: 16634.321 ns/op
Iteration   1: 16544.074 ns/op
Iteration   2: 16563.998 ns/op
Iteration   3: 17003.831 ns/op
Iteration   4: 17076.954 ns/op
Iteration   5: 16559.720 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16749.715 ±(99.9%) 1027.005 ns/op [Average]
  (min, avg, max) = (16544.074, 16749.715, 17076.954), stdev = 266.710
  CI (99.9%): [15722.710, 17776.721] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 85.10% complete, ETA 00:14:58
# Fork: 1 of 1
# Warmup Iteration   1: 935432.214 ns/op
# Warmup Iteration   2: 178304.073 ns/op
# Warmup Iteration   3: 140364.887 ns/op
# Warmup Iteration   4: 133680.682 ns/op
Iteration   1: 133365.773 ns/op
Iteration   2: 133449.305 ns/op
Iteration   3: 133584.556 ns/op
Iteration   4: 133320.724 ns/op
Iteration   5: 133642.222 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  133472.516 ±(99.9%) 531.914 ns/op [Average]
  (min, avg, max) = (133320.724, 133472.516, 133642.222), stdev = 138.136
  CI (99.9%): [132940.603, 134004.430] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 85.29% complete, ETA 00:14:46
# Fork: 1 of 1
# Warmup Iteration   1: 12640.596 ns/op
# Warmup Iteration   2: 4082.974 ns/op
# Warmup Iteration   3: 3184.634 ns/op
# Warmup Iteration   4: 3271.188 ns/op
Iteration   1: 3187.218 ns/op
Iteration   2: 3187.863 ns/op
Iteration   3: 3196.947 ns/op
Iteration   4: 3169.078 ns/op
Iteration   5: 3178.519 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3183.925 ±(99.9%) 40.640 ns/op [Average]
  (min, avg, max) = (3169.078, 3183.925, 3196.947), stdev = 10.554
  CI (99.9%): [3143.284, 3224.565] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 85.49% complete, ETA 00:14:34
# Fork: 1 of 1
# Warmup Iteration   1: 24985.744 ns/op
# Warmup Iteration   2: 6625.795 ns/op
# Warmup Iteration   3: 5753.416 ns/op
# Warmup Iteration   4: 5751.445 ns/op
Iteration   1: 5712.828 ns/op
Iteration   2: 5757.855 ns/op
Iteration   3: 5750.825 ns/op
Iteration   4: 5727.894 ns/op
Iteration   5: 5769.120 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5743.705 ±(99.9%) 88.235 ns/op [Average]
  (min, avg, max) = (5712.828, 5743.705, 5769.120), stdev = 22.914
  CI (99.9%): [5655.470, 5831.939] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 85.69% complete, ETA 00:14:22
# Fork: 1 of 1
# Warmup Iteration   1: 99285.920 ns/op
# Warmup Iteration   2: 11648.886 ns/op
# Warmup Iteration   3: 9715.476 ns/op
# Warmup Iteration   4: 9441.492 ns/op
Iteration   1: 9471.342 ns/op
Iteration   2: 9442.276 ns/op
Iteration   3: 9441.031 ns/op
Iteration   4: 9458.706 ns/op
Iteration   5: 9506.885 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9464.048 ±(99.9%) 104.048 ns/op [Average]
  (min, avg, max) = (9441.031, 9464.048, 9506.885), stdev = 27.021
  CI (99.9%): [9360.000, 9568.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 85.88% complete, ETA 00:14:10
# Fork: 1 of 1
# Warmup Iteration   1: 295893.592 ns/op
# Warmup Iteration   2: 31623.839 ns/op
# Warmup Iteration   3: 20568.824 ns/op
# Warmup Iteration   4: 19577.793 ns/op
Iteration   1: 19701.990 ns/op
Iteration   2: 19588.396 ns/op
Iteration   3: 20250.954 ns/op
Iteration   4: 19568.378 ns/op
Iteration   5: 19646.802 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  19751.304 ±(99.9%) 1094.227 ns/op [Average]
  (min, avg, max) = (19568.378, 19751.304, 20250.954), stdev = 284.167
  CI (99.9%): [18657.077, 20845.531] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 86.08% complete, ETA 00:13:59
# Fork: 1 of 1
# Warmup Iteration   1: 904796.659 ns/op
# Warmup Iteration   2: 207349.832 ns/op
# Warmup Iteration   3: 167603.594 ns/op
# Warmup Iteration   4: 166455.810 ns/op
Iteration   1: 166622.218 ns/op
Iteration   2: 166316.572 ns/op
Iteration   3: 166925.542 ns/op
Iteration   4: 165989.775 ns/op
Iteration   5: 168012.969 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  166773.415 ±(99.9%) 2985.984 ns/op [Average]
  (min, avg, max) = (165989.775, 166773.415, 168012.969), stdev = 775.451
  CI (99.9%): [163787.431, 169759.399] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 86.27% complete, ETA 00:13:47
# Fork: 1 of 1
# Warmup Iteration   1: 23541.662 ns/op
# Warmup Iteration   2: 4523.481 ns/op
# Warmup Iteration   3: 3942.942 ns/op
# Warmup Iteration   4: 3979.972 ns/op
Iteration   1: 3942.885 ns/op
Iteration   2: 3940.531 ns/op
Iteration   3: 3964.861 ns/op
Iteration   4: 3979.140 ns/op
Iteration   5: 3958.448 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3957.173 ±(99.9%) 61.622 ns/op [Average]
  (min, avg, max) = (3940.531, 3957.173, 3979.140), stdev = 16.003
  CI (99.9%): [3895.551, 4018.795] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 86.47% complete, ETA 00:13:35
# Fork: 1 of 1
# Warmup Iteration   1: 24389.018 ns/op
# Warmup Iteration   2: 7340.052 ns/op
# Warmup Iteration   3: 6098.972 ns/op
# Warmup Iteration   4: 6080.057 ns/op
Iteration   1: 6347.853 ns/op
Iteration   2: 5922.142 ns/op
Iteration   3: 6167.643 ns/op
Iteration   4: 5904.396 ns/op
Iteration   5: 5917.254 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6051.857 ±(99.9%) 764.594 ns/op [Average]
  (min, avg, max) = (5904.396, 6051.857, 6347.853), stdev = 198.563
  CI (99.9%): [5287.263, 6816.452] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 86.67% complete, ETA 00:13:23
# Fork: 1 of 1
# Warmup Iteration   1: 64392.036 ns/op
# Warmup Iteration   2: 18038.231 ns/op
# Warmup Iteration   3: 14732.767 ns/op
# Warmup Iteration   4: 13766.145 ns/op
Iteration   1: 13839.669 ns/op
Iteration   2: 13769.656 ns/op
Iteration   3: 13746.976 ns/op
Iteration   4: 13765.066 ns/op
Iteration   5: 13718.171 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  13767.908 ±(99.9%) 172.987 ns/op [Average]
  (min, avg, max) = (13718.171, 13767.908, 13839.669), stdev = 44.924
  CI (99.9%): [13594.921, 13940.895] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 86.86% complete, ETA 00:13:11
# Fork: 1 of 1
# Warmup Iteration   1: 99138.917 ns/op
# Warmup Iteration   2: 28403.888 ns/op
# Warmup Iteration   3: 25838.675 ns/op
# Warmup Iteration   4: 25634.804 ns/op
Iteration   1: 25554.620 ns/op
Iteration   2: 25691.463 ns/op
Iteration   3: 25596.792 ns/op
Iteration   4: 25571.140 ns/op
Iteration   5: 25668.322 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  25616.467 ±(99.9%) 232.478 ns/op [Average]
  (min, avg, max) = (25554.620, 25616.467, 25691.463), stdev = 60.374
  CI (99.9%): [25383.990, 25848.945] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 87.06% complete, ETA 00:12:59
# Fork: 1 of 1
# Warmup Iteration   1: 954739.674 ns/op
# Warmup Iteration   2: 308673.550 ns/op
# Warmup Iteration   3: 232006.926 ns/op
# Warmup Iteration   4: 214331.542 ns/op
Iteration   1: 202676.750 ns/op
Iteration   2: 201852.073 ns/op
Iteration   3: 202806.781 ns/op
Iteration   4: 201969.230 ns/op
Iteration   5: 201913.783 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  202243.723 ±(99.9%) 1766.836 ns/op [Average]
  (min, avg, max) = (201852.073, 202243.723, 202806.781), stdev = 458.842
  CI (99.9%): [200476.887, 204010.559] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 87.25% complete, ETA 00:12:48
# Fork: 1 of 1
# Warmup Iteration   1: 62832.160 ns/op
# Warmup Iteration   2: 33077.385 ns/op
# Warmup Iteration   3: 29211.234 ns/op
# Warmup Iteration   4: 27758.815 ns/op
Iteration   1: 27702.262 ns/op
Iteration   2: 27736.844 ns/op
Iteration   3: 27765.121 ns/op
Iteration   4: 27691.063 ns/op
Iteration   5: 27708.902 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  27720.838 ±(99.9%) 115.379 ns/op [Average]
  (min, avg, max) = (27691.063, 27720.838, 27765.121), stdev = 29.963
  CI (99.9%): [27605.460, 27836.217] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 87.45% complete, ETA 00:12:36
# Fork: 1 of 1
# Warmup Iteration   1: 83343.765 ns/op
# Warmup Iteration   2: 49552.713 ns/op
# Warmup Iteration   3: 42517.295 ns/op
# Warmup Iteration   4: 42299.708 ns/op
Iteration   1: 40665.716 ns/op
Iteration   2: 39766.924 ns/op
Iteration   3: 40019.350 ns/op
Iteration   4: 39853.287 ns/op
Iteration   5: 39825.408 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  40026.137 ±(99.9%) 1423.264 ns/op [Average]
  (min, avg, max) = (39766.924, 40026.137, 40665.716), stdev = 369.617
  CI (99.9%): [38602.873, 41449.401] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 87.65% complete, ETA 00:12:24
# Fork: 1 of 1
# Warmup Iteration   1: 214915.555 ns/op
# Warmup Iteration   2: 77515.388 ns/op
# Warmup Iteration   3: 65376.956 ns/op
# Warmup Iteration   4: 65500.220 ns/op
Iteration   1: 63025.920 ns/op
Iteration   2: 62821.258 ns/op
Iteration   3: 62622.036 ns/op
Iteration   4: 62596.057 ns/op
Iteration   5: 62583.025 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  62729.659 ±(99.9%) 738.418 ns/op [Average]
  (min, avg, max) = (62583.025, 62729.659, 63025.920), stdev = 191.765
  CI (99.9%): [61991.242, 63468.077] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 87.84% complete, ETA 00:12:12
# Fork: 1 of 1
# Warmup Iteration   1: 269665.191 ns/op
# Warmup Iteration   2: 143160.898 ns/op
# Warmup Iteration   3: 127346.322 ns/op
# Warmup Iteration   4: 131242.004 ns/op
Iteration   1: 124489.101 ns/op
Iteration   2: 124245.351 ns/op
Iteration   3: 125616.936 ns/op
Iteration   4: 125498.743 ns/op
Iteration   5: 124416.711 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  124853.368 ±(99.9%) 2504.836 ns/op [Average]
  (min, avg, max) = (124245.351, 124853.368, 125616.936), stdev = 650.498
  CI (99.9%): [122348.532, 127358.204] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 88.04% complete, ETA 00:12:00
# Fork: 1 of 1
# Warmup Iteration   1: 1880331.004 ns/op
# Warmup Iteration   2: 1095158.597 ns/op
# Warmup Iteration   3: 1022020.208 ns/op
# Warmup Iteration   4: 1039044.174 ns/op
Iteration   1: 1005640.504 ns/op
Iteration   2: 989903.236 ns/op
Iteration   3: 989370.197 ns/op
Iteration   4: 992498.710 ns/op
Iteration   5: 991730.315 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  993828.592 ±(99.9%) 25901.007 ns/op [Average]
  (min, avg, max) = (989370.197, 993828.592, 1005640.504), stdev = 6726.409
  CI (99.9%): [967927.585, 1019729.599] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 88.24% complete, ETA 00:11:48
# Fork: 1 of 1
# Warmup Iteration   1: 4885.228 ns/op
# Warmup Iteration   2: 2765.568 ns/op
# Warmup Iteration   3: 2466.716 ns/op
# Warmup Iteration   4: 2471.505 ns/op
Iteration   1: 2472.156 ns/op
Iteration   2: 2462.382 ns/op
Iteration   3: 2476.272 ns/op
Iteration   4: 2473.928 ns/op
Iteration   5: 2463.390 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2469.626 ±(99.9%) 24.386 ns/op [Average]
  (min, avg, max) = (2462.382, 2469.626, 2476.272), stdev = 6.333
  CI (99.9%): [2445.239, 2494.012] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 88.43% complete, ETA 00:11:37
# Fork: 1 of 1
# Warmup Iteration   1: 7998.246 ns/op
# Warmup Iteration   2: 4609.107 ns/op
# Warmup Iteration   3: 3912.639 ns/op
# Warmup Iteration   4: 3908.938 ns/op
Iteration   1: 3927.190 ns/op
Iteration   2: 3928.047 ns/op
Iteration   3: 3919.933 ns/op
Iteration   4: 3913.602 ns/op
Iteration   5: 3936.723 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3925.099 ±(99.9%) 33.737 ns/op [Average]
  (min, avg, max) = (3913.602, 3925.099, 3936.723), stdev = 8.761
  CI (99.9%): [3891.362, 3958.836] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 88.63% complete, ETA 00:11:25
# Fork: 1 of 1
# Warmup Iteration   1: 12309.798 ns/op
# Warmup Iteration   2: 7143.305 ns/op
# Warmup Iteration   3: 6409.425 ns/op
# Warmup Iteration   4: 6413.711 ns/op
Iteration   1: 6413.596 ns/op
Iteration   2: 6440.088 ns/op
Iteration   3: 6402.336 ns/op
Iteration   4: 6386.843 ns/op
Iteration   5: 6422.870 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6413.147 ±(99.9%) 77.716 ns/op [Average]
  (min, avg, max) = (6386.843, 6413.147, 6440.088), stdev = 20.183
  CI (99.9%): [6335.431, 6490.863] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 88.82% complete, ETA 00:11:13
# Fork: 1 of 1
# Warmup Iteration   1: 24935.809 ns/op
# Warmup Iteration   2: 12941.532 ns/op
# Warmup Iteration   3: 11806.587 ns/op
# Warmup Iteration   4: 11747.763 ns/op
Iteration   1: 12167.532 ns/op
Iteration   2: 11780.027 ns/op
Iteration   3: 11782.485 ns/op
Iteration   4: 11825.445 ns/op
Iteration   5: 11770.149 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  11865.128 ±(99.9%) 656.069 ns/op [Average]
  (min, avg, max) = (11770.149, 11865.128, 12167.532), stdev = 170.379
  CI (99.9%): [11209.059, 12521.196] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 89.02% complete, ETA 00:11:01
# Fork: 1 of 1
# Warmup Iteration   1: 207134.060 ns/op
# Warmup Iteration   2: 132747.273 ns/op
# Warmup Iteration   3: 117381.827 ns/op
# Warmup Iteration   4: 117060.253 ns/op
Iteration   1: 117082.343 ns/op
Iteration   2: 117696.839 ns/op
Iteration   3: 117242.541 ns/op
Iteration   4: 117631.210 ns/op
Iteration   5: 117175.954 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  117365.777 ±(99.9%) 1074.756 ns/op [Average]
  (min, avg, max) = (117082.343, 117365.777, 117696.839), stdev = 279.111
  CI (99.9%): [116291.021, 118440.534] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 89.22% complete, ETA 00:10:49
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
8498.296 ns/op
# Warmup Iteration   2: 5793.820 ns/op
# Warmup Iteration   3: 6184.656 ns/op
# Warmup Iteration   4: 5814.612 ns/op
Iteration   1: 5764.209 ns/op
Iteration   2: 5623.523 ns/op
Iteration   3: 5831.176 ns/op
Iteration   4: 5650.578 ns/op
Iteration   5: 6142.148 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5802.327 ±(99.9%) 800.254 ns/op [Average]
  (min, avg, max) = (5623.523, 5802.327, 6142.148), stdev = 207.823
  CI (99.9%): [5002.073, 6602.581] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 89.41% complete, ETA 00:10:38
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
17469.375 ns/op
# Warmup Iteration   2: 9059.394 ns/op
# Warmup Iteration   3: 9368.175 ns/op
# Warmup Iteration   4: 9850.580 ns/op
Iteration   1: 9182.198 ns/op
Iteration   2: 9505.870 ns/op
Iteration   3: 9590.422 ns/op
Iteration   4: 10158.217 ns/op
Iteration   5: 10237.984 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9734.938 ±(99.9%) 1733.965 ns/op [Average]
  (min, avg, max) = (9182.198, 9734.938, 10237.984), stdev = 450.305
  CI (99.9%): [8000.973, 11468.904] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 89.61% complete, ETA 00:10:26
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
27559.266 ns/op
# Warmup Iteration   2: 15944.732 ns/op
# Warmup Iteration   3: 16229.801 ns/op
# Warmup Iteration   4: 16695.848 ns/op
Iteration   1: 23132.793 ns/op
Iteration   2: 15835.728 ns/op
Iteration   3: 25674.391 ns/op
Iteration   4: 16136.348 ns/op
Iteration   5: 16235.117 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  19402.875 ±(99.9%) 17924.492 ns/op [Average]
  (min, avg, max) = (15835.728, 19402.875, 25674.391), stdev = 4654.934
  CI (99.9%): [1478.384, 37327.367] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 89.80% complete, ETA 00:10:14
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
58556.829 ns/op
# Warmup Iteration   2: 33807.874 ns/op
# Warmup Iteration   3: 33049.659 ns/op
# Warmup Iteration   4: 33936.654 ns/op
Iteration   1: 33521.175 ns/op
Iteration   2: 33436.099 ns/op
Iteration   3: 33325.272 ns/op
Iteration   4: 33165.147 ns/op
Iteration   5: 33050.807 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  33299.700 ±(99.9%) 741.592 ns/op [Average]
  (min, avg, max) = (33050.807, 33299.700, 33521.175), stdev = 192.589
  CI (99.9%): [32558.108, 34041.292] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 90.00% complete, ETA 00:10:02
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/dkomanov/.cache/bazel/_bazel_dkomanov/8239efe9b961e94261196869aa134112/execroot/stuff/bazel-out/k8-fastbuild/bin/src/com/komanov/serialization/jmh/jmh_deploy.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
718598.742 ns/op
# Warmup Iteration   2: 522156.492 ns/op
# Warmup Iteration   3: 538359.426 ns/op
# Warmup Iteration   4: 529429.218 ns/op
Iteration   1: 534114.662 ns/op
Iteration   2: 520401.892 ns/op
Iteration   3: 520282.077 ns/op
Iteration   4: 546394.566 ns/op
Iteration   5: 514818.858 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  527202.411 ±(99.9%) 49597.448 ns/op [Average]
  (min, avg, max) = (514818.858, 527202.411, 546394.566), stdev = 12880.300
  CI (99.9%): [477604.963, 576799.859] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 90.20% complete, ETA 00:09:50
# Fork: 1 of 1
# Warmup Iteration   1: 8630.307 ns/op
# Warmup Iteration   2: 2298.056 ns/op
# Warmup Iteration   3: 2451.141 ns/op
# Warmup Iteration   4: 2155.472 ns/op
Iteration   1: 2127.700 ns/op
Iteration   2: 2078.632 ns/op
Iteration   3: 2079.603 ns/op
Iteration   4: 2093.553 ns/op
Iteration   5: 2063.361 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2088.570 ±(99.9%) 93.743 ns/op [Average]
  (min, avg, max) = (2063.361, 2088.570, 2127.700), stdev = 24.345
  CI (99.9%): [1994.826, 2182.313] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 90.39% complete, ETA 00:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 8461.462 ns/op
# Warmup Iteration   2: 5028.780 ns/op
# Warmup Iteration   3: 4860.628 ns/op
# Warmup Iteration   4: 5090.350 ns/op
Iteration   1: 5222.290 ns/op
Iteration   2: 5089.693 ns/op
Iteration   3: 5207.149 ns/op
Iteration   4: 5178.267 ns/op
Iteration   5: 5167.502 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5172.980 ±(99.9%) 198.165 ns/op [Average]
  (min, avg, max) = (5089.693, 5172.980, 5222.290), stdev = 51.463
  CI (99.9%): [4974.816, 5371.145] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 90.59% complete, ETA 00:09:27
# Fork: 1 of 1
# Warmup Iteration   1: 23626.801 ns/op
# Warmup Iteration   2: 9329.166 ns/op
# Warmup Iteration   3: 10225.633 ns/op
# Warmup Iteration   4: 11110.572 ns/op
Iteration   1: 11712.343 ns/op
Iteration   2: 11212.478 ns/op
Iteration   3: 11246.390 ns/op
Iteration   4: 11141.639 ns/op
Iteration   5: 10855.773 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  11233.724 ±(99.9%) 1188.432 ns/op [Average]
  (min, avg, max) = (10855.773, 11233.724, 11712.343), stdev = 308.632
  CI (99.9%): [10045.293, 12422.156] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 90.78% complete, ETA 00:09:15
# Fork: 1 of 1
# Warmup Iteration   1: 31942.017 ns/op
# Warmup Iteration   2: 14945.779 ns/op
# Warmup Iteration   3: 13257.728 ns/op
# Warmup Iteration   4: 13068.190 ns/op
Iteration   1: 12718.760 ns/op
Iteration   2: 12741.494 ns/op
Iteration   3: 12720.661 ns/op
Iteration   4: 12689.828 ns/op
Iteration   5: 12667.302 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  12707.609 ±(99.9%) 111.995 ns/op [Average]
  (min, avg, max) = (12667.302, 12707.609, 12741.494), stdev = 29.085
  CI (99.9%): [12595.613, 12819.604] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 90.98% complete, ETA 00:09:03
# Fork: 1 of 1
# Warmup Iteration   1: 305260.147 ns/op
# Warmup Iteration   2: 191363.425 ns/op
# Warmup Iteration   3: 141841.979 ns/op
# Warmup Iteration   4: 133733.208 ns/op
Iteration   1: 138245.796 ns/op
Iteration   2: 144417.379 ns/op
Iteration   3: 134088.188 ns/op
Iteration   4: 135079.616 ns/op
Iteration   5: 133899.765 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  137146.149 ±(99.9%) 17030.200 ns/op [Average]
  (min, avg, max) = (133899.765, 137146.149, 144417.379), stdev = 4422.689
  CI (99.9%): [120115.949, 154176.349] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 91.18% complete, ETA 00:08:51
# Fork: 1 of 1
# Warmup Iteration   1: 53352.461 ns/op
# Warmup Iteration   2: 24055.711 ns/op
# Warmup Iteration   3: 21445.449 ns/op
# Warmup Iteration   4: 20865.331 ns/op
Iteration   1: 20878.788 ns/op
Iteration   2: 20906.054 ns/op
Iteration   3: 20903.459 ns/op
Iteration   4: 20858.534 ns/op
Iteration   5: 21931.838 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  21095.734 ±(99.9%) 1801.331 ns/op [Average]
  (min, avg, max) = (20858.534, 21095.734, 21931.838), stdev = 467.800
  CI (99.9%): [19294.404, 22897.065] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 91.37% complete, ETA 00:08:39
# Fork: 1 of 1
# Warmup Iteration   1: 93370.448 ns/op
# Warmup Iteration   2: 41817.824 ns/op
# Warmup Iteration   3: 34803.778 ns/op
# Warmup Iteration   4: 39818.113 ns/op
Iteration   1: 34691.515 ns/op
Iteration   2: 34671.881 ns/op
Iteration   3: 34745.577 ns/op
Iteration   4: 34688.689 ns/op
Iteration   5: 34752.953 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  34710.123 ±(99.9%) 140.950 ns/op [Average]
  (min, avg, max) = (34671.881, 34710.123, 34752.953), stdev = 36.604
  CI (99.9%): [34569.173, 34851.073] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 91.57% complete, ETA 00:08:28
# Fork: 1 of 1
# Warmup Iteration   1: 199299.022 ns/op
# Warmup Iteration   2: 88217.536 ns/op
# Warmup Iteration   3: 78555.195 ns/op
# Warmup Iteration   4: 78294.694 ns/op
Iteration   1: 78425.427 ns/op
Iteration   2: 78564.356 ns/op
Iteration   3: 77995.058 ns/op
Iteration   4: 78200.540 ns/op
Iteration   5: 78005.429 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  78238.162 ±(99.9%) 974.432 ns/op [Average]
  (min, avg, max) = (77995.058, 78238.162, 78564.356), stdev = 253.057
  CI (99.9%): [77263.730, 79212.594] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 91.76% complete, ETA 00:08:16
# Fork: 1 of 1
# Warmup Iteration   1: 445431.862 ns/op
# Warmup Iteration   2: 236012.996 ns/op
# Warmup Iteration   3: 181456.315 ns/op
# Warmup Iteration   4: 181161.328 ns/op
Iteration   1: 182831.791 ns/op
Iteration   2: 181762.370 ns/op
Iteration   3: 181359.471 ns/op
Iteration   4: 181713.284 ns/op
Iteration   5: 182413.617 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  182016.106 ±(99.9%) 2286.687 ns/op [Average]
  (min, avg, max) = (181359.471, 182016.106, 182831.791), stdev = 593.845
  CI (99.9%): [179729.419, 184302.794] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 91.96% complete, ETA 00:08:04
# Fork: 1 of 1
# Warmup Iteration   1: 3743551.547 ns/op
# Warmup Iteration   2: 1764649.530 ns/op
# Warmup Iteration   3: 1587119.827 ns/op
# Warmup Iteration   4: 1596267.757 ns/op
Iteration   1: 1590430.399 ns/op
Iteration   2: 1610531.313 ns/op
Iteration   3: 1751362.367 ns/op
Iteration   4: 1575781.933 ns/op
Iteration   5: 1578328.761 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1621286.954 ±(99.9%) 284944.640 ns/op [Average]
  (min, avg, max) = (1575781.933, 1621286.954, 1751362.367), stdev = 73999.218
  CI (99.9%): [1336342.314, 1906231.595] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 92.16% complete, ETA 00:07:52
# Fork: 1 of 1
# Warmup Iteration   1: 16621.490 ns/op
# Warmup Iteration   2: 9862.951 ns/op
# Warmup Iteration   3: 9712.008 ns/op
# Warmup Iteration   4: 9041.907 ns/op
Iteration   1: 9213.843 ns/op
Iteration   2: 9011.654 ns/op
Iteration   3: 9092.397 ns/op
Iteration   4: 9119.133 ns/op
Iteration   5: 9039.234 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9095.252 ±(99.9%) 303.009 ns/op [Average]
  (min, avg, max) = (9011.654, 9095.252, 9213.843), stdev = 78.690
  CI (99.9%): [8792.244, 9398.261] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 92.35% complete, ETA 00:07:40
# Fork: 1 of 1
# Warmup Iteration   1: 34689.189 ns/op
# Warmup Iteration   2: 18514.083 ns/op
# Warmup Iteration   3: 16887.349 ns/op
# Warmup Iteration   4: 16659.569 ns/op
Iteration   1: 16757.359 ns/op
Iteration   2: 16705.059 ns/op
Iteration   3: 16628.380 ns/op
Iteration   4: 17313.542 ns/op
Iteration   5: 16728.801 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16826.628 ±(99.9%) 1064.227 ns/op [Average]
  (min, avg, max) = (16628.380, 16826.628, 17313.542), stdev = 276.376
  CI (99.9%): [15762.402, 17890.855] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 92.55% complete, ETA 00:07:29
# Fork: 1 of 1
# Warmup Iteration   1: 65497.107 ns/op
# Warmup Iteration   2: 39365.198 ns/op
# Warmup Iteration   3: 40343.216 ns/op
# Warmup Iteration   4: 36196.213 ns/op
Iteration   1: 35685.049 ns/op
Iteration   2: 36129.913 ns/op
Iteration   3: 35768.385 ns/op
Iteration   4: 35740.289 ns/op
Iteration   5: 35664.356 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  35797.598 ±(99.9%) 733.119 ns/op [Average]
  (min, avg, max) = (35664.356, 35797.598, 36129.913), stdev = 190.389
  CI (99.9%): [35064.480, 36530.717] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 92.75% complete, ETA 00:07:17
# Fork: 1 of 1
# Warmup Iteration   1: 138347.301 ns/op
# Warmup Iteration   2: 85838.876 ns/op
# Warmup Iteration   3: 77206.127 ns/op
# Warmup Iteration   4: 76438.786 ns/op
Iteration   1: 76520.711 ns/op
Iteration   2: 76290.773 ns/op
Iteration   3: 76376.780 ns/op
Iteration   4: 76139.960 ns/op
Iteration   5: 76810.966 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  76427.838 ±(99.9%) 981.120 ns/op [Average]
  (min, avg, max) = (76139.960, 76427.838, 76810.966), stdev = 254.794
  CI (99.9%): [75446.718, 77408.958] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 92.94% complete, ETA 00:07:05
# Fork: 1 of 1
# Warmup Iteration   1: 948770.023 ns/op
# Warmup Iteration   2: 678455.014 ns/op
# Warmup Iteration   3: 645414.169 ns/op
# Warmup Iteration   4: 614444.235 ns/op
Iteration   1: 615857.044 ns/op
Iteration   2: 616088.937 ns/op
Iteration   3: 614791.739 ns/op
Iteration   4: 614466.277 ns/op
Iteration   5: 615205.117 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  615281.823 ±(99.9%) 2649.325 ns/op [Average]
  (min, avg, max) = (614466.277, 615281.823, 616088.937), stdev = 688.021
  CI (99.9%): [612632.498, 617931.148] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 93.14% complete, ETA 00:06:53
# Fork: 1 of 1
# Warmup Iteration   1: 17421.659 ns/op
# Warmup Iteration   2: 7787.529 ns/op
# Warmup Iteration   3: 7353.809 ns/op
# Warmup Iteration   4: 7493.128 ns/op
Iteration   1: 7440.440 ns/op
Iteration   2: 7462.085 ns/op
Iteration   3: 7560.023 ns/op
Iteration   4: 7459.426 ns/op
Iteration   5: 7406.829 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7465.760 ±(99.9%) 219.969 ns/op [Average]
  (min, avg, max) = (7406.829, 7465.760, 7560.023), stdev = 57.125
  CI (99.9%): [7245.792, 7685.729] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 93.33% complete, ETA 00:06:41
# Fork: 1 of 1
# Warmup Iteration   1: 32321.293 ns/op
# Warmup Iteration   2: 14180.446 ns/op
# Warmup Iteration   3: 15918.538 ns/op
# Warmup Iteration   4: 15625.960 ns/op
Iteration   1: 13929.951 ns/op
Iteration   2: 14056.030 ns/op
Iteration   3: 13906.246 ns/op
Iteration   4: 14668.909 ns/op
Iteration   5: 13833.094 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  14078.846 ±(99.9%) 1307.306 ns/op [Average]
  (min, avg, max) = (13833.094, 14078.846, 14668.909), stdev = 339.503
  CI (99.9%): [12771.540, 15386.152] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 93.53% complete, ETA 00:06:30
# Fork: 1 of 1
# Warmup Iteration   1: 63642.149 ns/op
# Warmup Iteration   2: 30627.343 ns/op
# Warmup Iteration   3: 30495.675 ns/op
# Warmup Iteration   4: 34335.463 ns/op
Iteration   1: 35921.821 ns/op
Iteration   2: 35986.908 ns/op
Iteration   3: 35350.346 ns/op
Iteration   4: 36120.571 ns/op
Iteration   5: 36061.099 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  35888.149 ±(99.9%) 1193.157 ns/op [Average]
  (min, avg, max) = (35350.346, 35888.149, 36120.571), stdev = 309.859
  CI (99.9%): [34694.992, 37081.306] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 93.73% complete, ETA 00:06:18
# Fork: 1 of 1
# Warmup Iteration   1: 127789.919 ns/op
# Warmup Iteration   2: 65924.476 ns/op
# Warmup Iteration   3: 65416.079 ns/op
# Warmup Iteration   4: 65121.679 ns/op
Iteration   1: 62624.682 ns/op
Iteration   2: 62122.267 ns/op
Iteration   3: 62089.274 ns/op
Iteration   4: 62116.318 ns/op
Iteration   5: 62493.867 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  62289.282 ±(99.9%) 966.815 ns/op [Average]
  (min, avg, max) = (62089.274, 62289.282, 62624.682), stdev = 251.079
  CI (99.9%): [61322.467, 63256.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 93.92% complete, ETA 00:06:06
# Fork: 1 of 1
# Warmup Iteration   1: 935420.684 ns/op
# Warmup Iteration   2: 581810.754 ns/op
# Warmup Iteration   3: 601331.908 ns/op
# Warmup Iteration   4: 563746.723 ns/op
Iteration   1: 550273.098 ns/op
Iteration   2: 547345.004 ns/op
Iteration   3: 545951.435 ns/op
Iteration   4: 547609.111 ns/op
Iteration   5: 549414.113 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  548118.552 ±(99.9%) 6634.641 ns/op [Average]
  (min, avg, max) = (545951.435, 548118.552, 550273.098), stdev = 1722.995
  CI (99.9%): [541483.911, 554753.194] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 94.12% complete, ETA 00:05:54
# Fork: 1 of 1
# Warmup Iteration   1: 9699.474 ns/op
# Warmup Iteration   2: 4579.812 ns/op
# Warmup Iteration   3: 4234.475 ns/op
# Warmup Iteration   4: 4213.162 ns/op
Iteration   1: 4220.040 ns/op
Iteration   2: 4221.848 ns/op
Iteration   3: 4227.066 ns/op
Iteration   4: 4260.904 ns/op
Iteration   5: 4231.407 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4232.253 ±(99.9%) 64.027 ns/op [Average]
  (min, avg, max) = (4220.040, 4232.253, 4260.904), stdev = 16.628
  CI (99.9%): [4168.226, 4296.280] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 94.31% complete, ETA 00:05:42
# Fork: 1 of 1
# Warmup Iteration   1: 15816.521 ns/op
# Warmup Iteration   2: 8440.408 ns/op
# Warmup Iteration   3: 7845.700 ns/op
# Warmup Iteration   4: 7839.523 ns/op
Iteration   1: 7836.943 ns/op
Iteration   2: 7833.257 ns/op
Iteration   3: 7923.706 ns/op
Iteration   4: 7796.384 ns/op
Iteration   5: 7861.467 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7850.351 ±(99.9%) 181.522 ns/op [Average]
  (min, avg, max) = (7796.384, 7850.351, 7923.706), stdev = 47.141
  CI (99.9%): [7668.830, 8031.873] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 94.51% complete, ETA 00:05:30
# Fork: 1 of 1
# Warmup Iteration   1: 34690.167 ns/op
# Warmup Iteration   2: 19887.843 ns/op
# Warmup Iteration   3: 17856.561 ns/op
# Warmup Iteration   4: 17827.667 ns/op
Iteration   1: 17818.063 ns/op
Iteration   2: 17824.093 ns/op
Iteration   3: 17750.789 ns/op
Iteration   4: 17749.947 ns/op
Iteration   5: 17831.559 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  17794.890 ±(99.9%) 157.585 ns/op [Average]
  (min, avg, max) = (17749.947, 17794.890, 17831.559), stdev = 40.924
  CI (99.9%): [17637.305, 17952.475] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 94.71% complete, ETA 00:05:19
# Fork: 1 of 1
# Warmup Iteration   1: 90752.772 ns/op
# Warmup Iteration   2: 47731.799 ns/op
# Warmup Iteration   3: 41454.039 ns/op
# Warmup Iteration   4: 41068.753 ns/op
Iteration   1: 41298.437 ns/op
Iteration   2: 41182.632 ns/op
Iteration   3: 41314.959 ns/op
Iteration   4: 41226.703 ns/op
Iteration   5: 41260.903 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  41256.727 ±(99.9%) 206.823 ns/op [Average]
  (min, avg, max) = (41182.632, 41256.727, 41314.959), stdev = 53.711
  CI (99.9%): [41049.904, 41463.549] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 94.90% complete, ETA 00:05:07
# Fork: 1 of 1
# Warmup Iteration   1: 465071.077 ns/op
# Warmup Iteration   2: 301408.534 ns/op
# Warmup Iteration   3: 275869.739 ns/op
# Warmup Iteration   4: 277150.418 ns/op
Iteration   1: 277398.566 ns/op
Iteration   2: 275619.953 ns/op
Iteration   3: 275859.405 ns/op
Iteration   4: 275996.990 ns/op
Iteration   5: 275429.235 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  276060.830 ±(99.9%) 2999.716 ns/op [Average]
  (min, avg, max) = (275429.235, 276060.830, 277398.566), stdev = 779.017
  CI (99.9%): [273061.114, 279060.546] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 95.10% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 23495.829 ns/op
# Warmup Iteration   2: 9784.854 ns/op
# Warmup Iteration   3: 9081.356 ns/op
# Warmup Iteration   4: 9074.002 ns/op
Iteration   1: 9277.150 ns/op
Iteration   2: 9037.455 ns/op
Iteration   3: 9025.951 ns/op
Iteration   4: 9340.058 ns/op
Iteration   5: 9494.625 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9235.048 ±(99.9%) 777.183 ns/op [Average]
  (min, avg, max) = (9025.951, 9235.048, 9494.625), stdev = 201.832
  CI (99.9%): [8457.865, 10012.231] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 95.29% complete, ETA 00:04:43
# Fork: 1 of 1
# Warmup Iteration   1: 44179.648 ns/op
# Warmup Iteration   2: 18107.771 ns/op
# Warmup Iteration   3: 16558.460 ns/op
# Warmup Iteration   4: 16393.778 ns/op
Iteration   1: 16408.693 ns/op
Iteration   2: 16388.162 ns/op
Iteration   3: 16408.286 ns/op
Iteration   4: 16389.580 ns/op
Iteration   5: 16397.807 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16398.506 ±(99.9%) 37.855 ns/op [Average]
  (min, avg, max) = (16388.162, 16398.506, 16408.693), stdev = 9.831
  CI (99.9%): [16360.650, 16436.361] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 95.49% complete, ETA 00:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 100011.441 ns/op
# Warmup Iteration   2: 34204.618 ns/op
# Warmup Iteration   3: 30141.181 ns/op
# Warmup Iteration   4: 30008.022 ns/op
Iteration   1: 30124.473 ns/op
Iteration   2: 30123.381 ns/op
Iteration   3: 30053.560 ns/op
Iteration   4: 30012.803 ns/op
Iteration   5: 30275.070 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  30117.858 ±(99.9%) 384.875 ns/op [Average]
  (min, avg, max) = (30012.803, 30117.858, 30275.070), stdev = 99.951
  CI (99.9%): [29732.982, 30502.733] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 95.69% complete, ETA 00:04:20
# Fork: 1 of 1
# Warmup Iteration   1: 142822.100 ns/op
# Warmup Iteration   2: 63821.866 ns/op
# Warmup Iteration   3: 60945.405 ns/op
# Warmup Iteration   4: 61022.813 ns/op
Iteration   1: 59301.151 ns/op
Iteration   2: 59305.955 ns/op
Iteration   3: 59284.780 ns/op
Iteration   4: 59206.629 ns/op
Iteration   5: 59078.075 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  59235.318 ±(99.9%) 371.933 ns/op [Average]
  (min, avg, max) = (59078.075, 59235.318, 59305.955), stdev = 96.590
  CI (99.9%): [58863.385, 59607.250] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 95.88% complete, ETA 00:04:08
# Fork: 1 of 1
# Warmup Iteration   1: 1406298.834 ns/op
# Warmup Iteration   2: 592397.545 ns/op
# Warmup Iteration   3: 573652.292 ns/op
# Warmup Iteration   4: 548865.793 ns/op
Iteration   1: 547075.083 ns/op
Iteration   2: 544793.386 ns/op
Iteration   3: 565020.172 ns/op
Iteration   4: 548623.489 ns/op
Iteration   5: 545501.862 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  550202.798 ±(99.9%) 32399.910 ns/op [Average]
  (min, avg, max) = (544793.386, 550202.798, 565020.172), stdev = 8414.154
  CI (99.9%): [517802.888, 582602.709] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 96.08% complete, ETA 00:03:56
# Fork: 1 of 1
# Warmup Iteration   1: 31725.593 ns/op
# Warmup Iteration   2: 10441.706 ns/op
# Warmup Iteration   3: 8683.490 ns/op
# Warmup Iteration   4: 9445.314 ns/op
Iteration   1: 8661.292 ns/op
Iteration   2: 8656.036 ns/op
Iteration   3: 8694.800 ns/op
Iteration   4: 8657.915 ns/op
Iteration   5: 8690.009 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8672.010 ±(99.9%) 72.348 ns/op [Average]
  (min, avg, max) = (8656.036, 8672.010, 8694.800), stdev = 18.789
  CI (99.9%): [8599.662, 8744.358] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 96.27% complete, ETA 00:03:44
# Fork: 1 of 1
# Warmup Iteration   1: 52535.221 ns/op
# Warmup Iteration   2: 17754.383 ns/op
# Warmup Iteration   3: 16200.878 ns/op
# Warmup Iteration   4: 16120.109 ns/op
Iteration   1: 16116.196 ns/op
Iteration   2: 16164.578 ns/op
Iteration   3: 16186.011 ns/op
Iteration   4: 16158.549 ns/op
Iteration   5: 16101.043 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16145.275 ±(99.9%) 136.281 ns/op [Average]
  (min, avg, max) = (16101.043, 16145.275, 16186.011), stdev = 35.392
  CI (99.9%): [16008.995, 16281.556] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 96.47% complete, ETA 00:03:32
# Fork: 1 of 1
# Warmup Iteration   1: 75732.678 ns/op
# Warmup Iteration   2: 32649.150 ns/op
# Warmup Iteration   3: 30849.900 ns/op
# Warmup Iteration   4: 29343.863 ns/op
Iteration   1: 29443.984 ns/op
Iteration   2: 29446.106 ns/op
Iteration   3: 29406.782 ns/op
Iteration   4: 29438.829 ns/op
Iteration   5: 29343.398 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  29415.820 ±(99.9%) 167.476 ns/op [Average]
  (min, avg, max) = (29343.398, 29415.820, 29446.106), stdev = 43.493
  CI (99.9%): [29248.344, 29583.295] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 96.67% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 140628.373 ns/op
# Warmup Iteration   2: 65860.243 ns/op
# Warmup Iteration   3: 60892.503 ns/op
# Warmup Iteration   4: 59701.243 ns/op
Iteration   1: 58382.061 ns/op
Iteration   2: 58055.030 ns/op
Iteration   3: 58212.909 ns/op
Iteration   4: 58198.977 ns/op
Iteration   5: 58034.358 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  58176.667 ±(99.9%) 541.304 ns/op [Average]
  (min, avg, max) = (58034.358, 58176.667, 58382.061), stdev = 140.575
  CI (99.9%): [57635.362, 58717.971] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 96.86% complete, ETA 00:03:09
# Fork: 1 of 1
# Warmup Iteration   1: 1856415.927 ns/op
# Warmup Iteration   2: 581649.220 ns/op
# Warmup Iteration   3: 579031.008 ns/op
# Warmup Iteration   4: 535232.802 ns/op
Iteration   1: 552593.244 ns/op
Iteration   2: 534098.473 ns/op
Iteration   3: 531510.246 ns/op
Iteration   4: 531835.448 ns/op
Iteration   5: 533493.931 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  536706.268 ±(99.9%) 34454.078 ns/op [Average]
  (min, avg, max) = (531510.246, 536706.268, 552593.244), stdev = 8947.615
  CI (99.9%): [502252.191, 571160.346] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 97.06% complete, ETA 00:02:57
# Fork: 1 of 1
# Warmup Iteration   1: 14166.210 ns/op
# Warmup Iteration   2: 4257.752 ns/op
# Warmup Iteration   3: 3697.003 ns/op
# Warmup Iteration   4: 3715.869 ns/op
Iteration   1: 3675.668 ns/op
Iteration   2: 3731.717 ns/op
Iteration   3: 3675.231 ns/op
Iteration   4: 3675.385 ns/op
Iteration   5: 3665.654 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both":
  3684.731 ±(99.9%) 102.447 ns/op [Average]
  (min, avg, max) = (3665.654, 3684.731, 3731.717), stdev = 26.605
  CI (99.9%): [3582.284, 3787.178] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 97.25% complete, ETA 00:02:45
# Fork: 1 of 1
# Warmup Iteration   1: 19609.223 ns/op
# Warmup Iteration   2: 7791.472 ns/op
# Warmup Iteration   3: 7334.782 ns/op
# Warmup Iteration   4: 7364.352 ns/op
Iteration   1: 7502.918 ns/op
Iteration   2: 7592.255 ns/op
Iteration   3: 7322.431 ns/op
Iteration   4: 7328.418 ns/op
Iteration   5: 7313.487 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both":
  7411.902 ±(99.9%) 492.640 ns/op [Average]
  (min, avg, max) = (7313.487, 7411.902, 7592.255), stdev = 127.937
  CI (99.9%): [6919.262, 7904.542] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 97.45% complete, ETA 00:02:33
# Fork: 1 of 1
# Warmup Iteration   1: 54046.812 ns/op
# Warmup Iteration   2: 14429.480 ns/op
# Warmup Iteration   3: 13448.561 ns/op
# Warmup Iteration   4: 13365.109 ns/op
Iteration   1: 13176.250 ns/op
Iteration   2: 13152.274 ns/op
Iteration   3: 13203.914 ns/op
Iteration   4: 13234.103 ns/op
Iteration   5: 13147.072 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both":
  13182.723 ±(99.9%) 140.549 ns/op [Average]
  (min, avg, max) = (13147.072, 13182.723, 13234.103), stdev = 36.500
  CI (99.9%): [13042.173, 13323.272] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 97.65% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: 146608.973 ns/op
# Warmup Iteration   2: 27500.868 ns/op
# Warmup Iteration   3: 24189.751 ns/op
# Warmup Iteration   4: 24452.435 ns/op
Iteration   1: 23715.470 ns/op
Iteration   2: 23680.142 ns/op
Iteration   3: 23679.697 ns/op
Iteration   4: 24835.722 ns/op
Iteration   5: 23652.298 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both":
  23912.666 ±(99.9%) 1988.823 ns/op [Average]
  (min, avg, max) = (23652.298, 23912.666, 24835.722), stdev = 516.491
  CI (99.9%): [21923.842, 25901.489] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 97.84% complete, ETA 00:02:09
# Fork: 1 of 1
# Warmup Iteration   1: 1130044.080 ns/op
# Warmup Iteration   2: 258482.539 ns/op
# Warmup Iteration   3: 210360.124 ns/op
# Warmup Iteration   4: 204598.939 ns/op
Iteration   1: 204299.137 ns/op
Iteration   2: 204958.730 ns/op
Iteration   3: 205917.712 ns/op
Iteration   4: 205097.760 ns/op
Iteration   5: 204504.410 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both":
  204955.550 ±(99.9%) 2420.394 ns/op [Average]
  (min, avg, max) = (204299.137, 204955.550, 205917.712), stdev = 628.569
  CI (99.9%): [202535.156, 207375.944] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 98.04% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: 8319.293 ns/op
# Warmup Iteration   2: 2791.583 ns/op
# Warmup Iteration   3: 2696.140 ns/op
# Warmup Iteration   4: 2632.953 ns/op
Iteration   1: 2695.374 ns/op
Iteration   2: 2620.624 ns/op
Iteration   3: 2771.719 ns/op
Iteration   4: 2590.631 ns/op
Iteration   5: 2603.382 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization":
  2656.346 ±(99.9%) 293.470 ns/op [Average]
  (min, avg, max) = (2590.631, 2656.346, 2771.719), stdev = 76.213
  CI (99.9%): [2362.876, 2949.816] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 98.24% complete, ETA 00:01:46
# Fork: 1 of 1
# Warmup Iteration   1: 17760.371 ns/op
# Warmup Iteration   2: 5470.509 ns/op
# Warmup Iteration   3: 4938.932 ns/op
# Warmup Iteration   4: 5236.233 ns/op
Iteration   1: 4973.275 ns/op
Iteration   2: 4974.798 ns/op
Iteration   3: 4941.074 ns/op
Iteration   4: 4981.365 ns/op
Iteration   5: 4939.993 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization":
  4962.101 ±(99.9%) 76.726 ns/op [Average]
  (min, avg, max) = (4939.993, 4962.101, 4981.365), stdev = 19.925
  CI (99.9%): [4885.375, 5038.827] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 98.43% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 39711.812 ns/op
# Warmup Iteration   2: 10969.217 ns/op
# Warmup Iteration   3: 8667.642 ns/op
# Warmup Iteration   4: 8579.417 ns/op
Iteration   1: 8546.704 ns/op
Iteration   2: 8503.768 ns/op
Iteration   3: 8503.312 ns/op
Iteration   4: 8537.022 ns/op
Iteration   5: 8575.496 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization":
  8533.260 ±(99.9%) 117.829 ns/op [Average]
  (min, avg, max) = (8503.312, 8533.260, 8575.496), stdev = 30.600
  CI (99.9%): [8415.431, 8651.089] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 98.63% complete, ETA 00:01:22
# Fork: 1 of 1
# Warmup Iteration   1: 103433.309 ns/op
# Warmup Iteration   2: 17710.615 ns/op
# Warmup Iteration   3: 16312.383 ns/op
# Warmup Iteration   4: 15950.481 ns/op
Iteration   1: 15973.360 ns/op
Iteration   2: 15950.564 ns/op
Iteration   3: 15979.573 ns/op
Iteration   4: 16003.700 ns/op
Iteration   5: 15946.108 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization":
  15970.661 ±(99.9%) 89.998 ns/op [Average]
  (min, avg, max) = (15946.108, 15970.661, 16003.700), stdev = 23.372
  CI (99.9%): [15880.663, 16060.659] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 98.82% complete, ETA 00:01:10
# Fork: 1 of 1
# Warmup Iteration   1: 522264.236 ns/op
# Warmup Iteration   2: 159628.384 ns/op
# Warmup Iteration   3: 143484.514 ns/op
# Warmup Iteration   4: 140419.857 ns/op
Iteration   1: 144375.524 ns/op
Iteration   2: 135975.058 ns/op
Iteration   3: 143059.191 ns/op
Iteration   4: 136938.907 ns/op
Iteration   5: 136617.705 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization":
  139393.277 ±(99.9%) 15363.257 ns/op [Average]
  (min, avg, max) = (135975.058, 139393.277, 144375.524), stdev = 3989.789
  CI (99.9%): [124030.020, 154756.534] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 99.02% complete, ETA 00:00:59
# Fork: 1 of 1
# Warmup Iteration   1: 1572.670 ns/op
# Warmup Iteration   2: 1027.953 ns/op
# Warmup Iteration   3: 978.942 ns/op
# Warmup Iteration   4: 914.485 ns/op
Iteration   1: 914.948 ns/op
Iteration   2: 989.053 ns/op
Iteration   3: 913.976 ns/op
Iteration   4: 918.286 ns/op
Iteration   5: 918.990 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization":
  931.051 ±(99.9%) 125.123 ns/op [Average]
  (min, avg, max) = (913.976, 931.051, 989.053), stdev = 32.494
  CI (99.9%): [805.928, 1056.174] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 99.22% complete, ETA 00:00:47
# Fork: 1 of 1
# Warmup Iteration   1: 2996.983 ns/op
# Warmup Iteration   2: 2110.589 ns/op
# Warmup Iteration   3: 1951.884 ns/op
# Warmup Iteration   4: 1949.038 ns/op
Iteration   1: 1938.436 ns/op
Iteration   2: 1945.464 ns/op
Iteration   3: 1945.035 ns/op
Iteration   4: 1946.479 ns/op
Iteration   5: 1946.525 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization":
  1944.388 ±(99.9%) 13.050 ns/op [Average]
  (min, avg, max) = (1938.436, 1944.388, 1946.525), stdev = 3.389
  CI (99.9%): [1931.338, 1957.438] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 99.41% complete, ETA 00:00:35
# Fork: 1 of 1
# Warmup Iteration   1: 6539.638 ns/op
# Warmup Iteration   2: 4370.033 ns/op
# Warmup Iteration   3: 4218.724 ns/op
# Warmup Iteration   4: 4105.689 ns/op
Iteration   1: 4096.255 ns/op
Iteration   2: 4091.485 ns/op
Iteration   3: 4114.786 ns/op
Iteration   4: 4100.334 ns/op
Iteration   5: 4126.886 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization":
  4105.949 ±(99.9%) 56.171 ns/op [Average]
  (min, avg, max) = (4091.485, 4105.949, 4126.886), stdev = 14.587
  CI (99.9%): [4049.778, 4162.120] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 99.61% complete, ETA 00:00:23
# Fork: 1 of 1
# Warmup Iteration   1: 11589.320 ns/op
# Warmup Iteration   2: 7933.134 ns/op
# Warmup Iteration   3: 7817.216 ns/op
# Warmup Iteration   4: 7420.633 ns/op
Iteration   1: 7438.633 ns/op
Iteration   2: 7412.350 ns/op
Iteration   3: 7444.944 ns/op
Iteration   4: 7401.165 ns/op
Iteration   5: 7421.930 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization":
  7423.804 ±(99.9%) 69.792 ns/op [Average]
  (min, avg, max) = (7401.165, 7423.804, 7444.944), stdev = 18.125
  CI (99.9%): [7354.012, 7493.597] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 11.0.16, VM 11.0.16+8-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 99.80% complete, ETA 00:00:11
# Fork: 1 of 1
# Warmup Iteration   1: 101751.196 ns/op
# Warmup Iteration   2: 65092.445 ns/op
# Warmup Iteration   3: 64470.896 ns/op
# Warmup Iteration   4: 62066.644 ns/op
Iteration   1: 61774.754 ns/op
Iteration   2: 63946.111 ns/op
Iteration   3: 61907.171 ns/op
Iteration   4: 61932.946 ns/op
Iteration   5: 64308.599 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization":
  62773.916 ±(99.9%) 4788.634 ns/op [Average]
  (min, avg, max) = (61774.754, 62773.916, 64308.599), stdev = 1243.593
  CI (99.9%): [57985.282, 67562.550] (assumes normal distribution)


# Run complete. Total time: 01:40:15

Benchmark                                     (converterType)  (inputType)  Mode  Cnt         Score        Error  Units
EventBenchmark.both                                      JSON         _1_K  avgt    5     29573.232 ±   1209.245  ns/op
EventBenchmark.both                                      JSON         _2_K  avgt    5     56873.605 ±    524.489  ns/op
EventBenchmark.both                                      JSON         _4_K  avgt    5    109875.300 ±   5394.897  ns/op
EventBenchmark.both                                      JSON         _8_K  avgt    5    243031.785 ±  18952.834  ns/op
EventBenchmark.both                                      JSON        _64_K  avgt    5   2243364.196 ±  79175.163  ns/op
EventBenchmark.both                                      CBOR         _1_K  avgt    5     24692.399 ±   1927.791  ns/op
EventBenchmark.both                                      CBOR         _2_K  avgt    5     45162.510 ±    432.976  ns/op
EventBenchmark.both                                      CBOR         _4_K  avgt    5     94621.561 ±   3426.070  ns/op
EventBenchmark.both                                      CBOR         _8_K  avgt    5    208917.924 ±   8992.533  ns/op
EventBenchmark.both                                      CBOR        _64_K  avgt    5   2010991.352 ±  72624.028  ns/op
EventBenchmark.both                                     SMILE         _1_K  avgt    5     26889.142 ±    776.789  ns/op
EventBenchmark.both                                     SMILE         _2_K  avgt    5     50991.592 ±   4253.772  ns/op
EventBenchmark.both                                     SMILE         _4_K  avgt    5    103532.982 ±   2808.967  ns/op
EventBenchmark.both                                     SMILE         _8_K  avgt    5    228961.898 ±  10622.793  ns/op
EventBenchmark.both                                     SMILE        _64_K  avgt    5   2264767.387 ± 101598.402  ns/op
EventBenchmark.both                                  SCALA_PB         _1_K  avgt    5      8207.253 ±     86.119  ns/op
EventBenchmark.both                                  SCALA_PB         _2_K  avgt    5     15980.277 ±    851.176  ns/op
EventBenchmark.both                                  SCALA_PB         _4_K  avgt    5     32027.034 ±   1259.781  ns/op
EventBenchmark.both                                  SCALA_PB         _8_K  avgt    5     65929.627 ±   1056.061  ns/op
EventBenchmark.both                                  SCALA_PB        _64_K  avgt    5    660446.951 ±  22787.088  ns/op
EventBenchmark.both                                   JAVA_PB         _1_K  avgt    5      7668.503 ±    264.964  ns/op
EventBenchmark.both                                   JAVA_PB         _2_K  avgt    5     14797.127 ±    142.259  ns/op
EventBenchmark.both                                   JAVA_PB         _4_K  avgt    5     29385.719 ±   1065.216  ns/op
EventBenchmark.both                                   JAVA_PB         _8_K  avgt    5     62269.223 ±   1683.470  ns/op
EventBenchmark.both                                   JAVA_PB        _64_K  avgt    5    566112.286 ±  31051.021  ns/op
EventBenchmark.both                               JAVA_THRIFT         _1_K  avgt    5     10750.199 ±   1397.403  ns/op
EventBenchmark.both                               JAVA_THRIFT         _2_K  avgt    5     19365.296 ±   3028.245  ns/op
EventBenchmark.both                               JAVA_THRIFT         _4_K  avgt    5     37767.498 ±    584.414  ns/op
EventBenchmark.both                               JAVA_THRIFT         _8_K  avgt    5     80094.240 ±    717.939  ns/op
EventBenchmark.both                               JAVA_THRIFT        _64_K  avgt    5    934504.256 ±  82108.270  ns/op
EventBenchmark.both                              SERIALIZABLE         _1_K  avgt    5    144066.418 ±   2011.707  ns/op
EventBenchmark.both                              SERIALIZABLE         _2_K  avgt    5    249799.201 ±   1182.412  ns/op
EventBenchmark.both                              SERIALIZABLE         _4_K  avgt    5    599504.043 ±   9204.172  ns/op
EventBenchmark.both                              SERIALIZABLE         _8_K  avgt    5   1461582.483 ± 151414.378  ns/op
EventBenchmark.both                              SERIALIZABLE        _64_K  avgt    5  12370333.803 ± 155038.729  ns/op
EventBenchmark.both                                 BOOPICKLE         _1_K  avgt    5      6514.718 ±     84.384  ns/op
EventBenchmark.both                                 BOOPICKLE         _2_K  avgt    5     12639.778 ±    175.411  ns/op
EventBenchmark.both                                 BOOPICKLE         _4_K  avgt    5     23226.323 ±    159.712  ns/op
EventBenchmark.both                                 BOOPICKLE         _8_K  avgt    5     47098.252 ±  10660.580  ns/op
EventBenchmark.both                                 BOOPICKLE        _64_K  avgt    5    453643.997 ±  33665.804  ns/op
EventBenchmark.both                                     CHILL         _1_K  avgt    5     64122.484 ±   7362.102  ns/op
EventBenchmark.both                                     CHILL         _2_K  avgt    5    140294.539 ±  39020.231  ns/op
EventBenchmark.both                                     CHILL         _4_K  avgt    5    248557.196 ±  20993.578  ns/op
EventBenchmark.both                                     CHILL         _8_K  avgt    5    582544.163 ±  70703.121  ns/op
EventBenchmark.both                                     CHILL        _64_K  avgt    5   5144322.950 ± 631436.735  ns/op
EventBenchmark.both                                  JSONITER         _1_K  avgt    5     10071.387 ±    109.165  ns/op
EventBenchmark.both                                  JSONITER         _2_K  avgt    5     18238.333 ±    762.624  ns/op
EventBenchmark.both                                  JSONITER         _4_K  avgt    5     41375.965 ±   2371.959  ns/op
EventBenchmark.both                                  JSONITER         _8_K  avgt    5     75649.640 ±    762.098  ns/op
EventBenchmark.both                                  JSONITER        _64_K  avgt    5    738381.963 ±   9831.687  ns/op
EventBenchmark.both                                     CIRCE         _1_K  avgt    5    184654.243 ±   4770.733  ns/op
EventBenchmark.both                                     CIRCE         _2_K  avgt    5    279431.078 ±  18486.413  ns/op
EventBenchmark.both                                     CIRCE         _4_K  avgt    5    557458.004 ±  43448.839  ns/op
EventBenchmark.both                                     CIRCE         _8_K  avgt    5   1302408.078 ± 128444.590  ns/op
EventBenchmark.both                                     CIRCE        _64_K  avgt    5  12206002.786 ± 502007.036  ns/op
EventBenchmark.both                              UPICKLE_JSON         _1_K  avgt    5     38175.467 ±    355.673  ns/op
EventBenchmark.both                              UPICKLE_JSON         _2_K  avgt    5     75587.481 ±   3618.995  ns/op
EventBenchmark.both                              UPICKLE_JSON         _4_K  avgt    5    166370.722 ±   9033.250  ns/op
EventBenchmark.both                              UPICKLE_JSON         _8_K  avgt    5    362387.624 ±   2599.083  ns/op
EventBenchmark.both                              UPICKLE_JSON        _64_K  avgt    5   3949908.023 ± 188583.510  ns/op
EventBenchmark.both                       UPICKLE_POOLED_JSON         _1_K  avgt    5     41570.176 ±    664.657  ns/op
EventBenchmark.both                       UPICKLE_POOLED_JSON         _2_K  avgt    5     72237.027 ±   7203.540  ns/op
EventBenchmark.both                       UPICKLE_POOLED_JSON         _4_K  avgt    5    156256.129 ±   3087.759  ns/op
EventBenchmark.both                       UPICKLE_POOLED_JSON         _8_K  avgt    5    368576.639 ±   2702.720  ns/op
EventBenchmark.both                       UPICKLE_POOLED_JSON        _64_K  avgt    5   3446892.023 ±  33035.019  ns/op
EventBenchmark.both                           UPICKLE_MSGPACK         _1_K  avgt    5     24112.346 ±    466.783  ns/op
EventBenchmark.both                           UPICKLE_MSGPACK         _2_K  avgt    5     43734.226 ±   4219.158  ns/op
EventBenchmark.both                           UPICKLE_MSGPACK         _4_K  avgt    5     92893.532 ±   2528.065  ns/op
EventBenchmark.both                           UPICKLE_MSGPACK         _8_K  avgt    5    213781.816 ±  13745.952  ns/op
EventBenchmark.both                           UPICKLE_MSGPACK        _64_K  avgt    5   2415882.571 ± 122944.263  ns/op
EventBenchmark.both                               CAP_N_PROTO         _1_K  avgt    5     58853.889 ±    609.705  ns/op
EventBenchmark.both                               CAP_N_PROTO         _2_K  avgt    5    109782.453 ±   2922.251  ns/op
EventBenchmark.both                               CAP_N_PROTO         _4_K  avgt    5    213976.592 ±   2895.072  ns/op
EventBenchmark.both                               CAP_N_PROTO         _8_K  avgt    5    493772.878 ±  12949.615  ns/op
EventBenchmark.both                               CAP_N_PROTO        _64_K  avgt    5   4860523.324 ± 132246.931  ns/op
EventBenchmark.both                        CAP_N_PROTO_POOLED         _1_K  avgt    5     57495.641 ±    962.072  ns/op
EventBenchmark.both                        CAP_N_PROTO_POOLED         _2_K  avgt    5    108352.683 ±   7536.544  ns/op
EventBenchmark.both                        CAP_N_PROTO_POOLED         _4_K  avgt    5    210695.419 ±   3414.091  ns/op
EventBenchmark.both                        CAP_N_PROTO_POOLED         _8_K  avgt    5    476111.792 ±   7001.200  ns/op
EventBenchmark.both                        CAP_N_PROTO_POOLED        _64_K  avgt    5   4836262.412 ± 137911.897  ns/op
EventBenchmark.deserialization                           JSON         _1_K  avgt    5     14858.789 ±    261.811  ns/op
EventBenchmark.deserialization                           JSON         _2_K  avgt    5     27342.696 ±    827.508  ns/op
EventBenchmark.deserialization                           JSON         _4_K  avgt    5     56733.628 ±    419.857  ns/op
EventBenchmark.deserialization                           JSON         _8_K  avgt    5    130059.891 ±   6028.328  ns/op
EventBenchmark.deserialization                           JSON        _64_K  avgt    5   1193009.184 ±  37019.396  ns/op
EventBenchmark.deserialization                           CBOR         _1_K  avgt    5     14133.941 ±     48.647  ns/op
EventBenchmark.deserialization                           CBOR         _2_K  avgt    5     26844.407 ±   1352.119  ns/op
EventBenchmark.deserialization                           CBOR         _4_K  avgt    5     52726.559 ±    464.697  ns/op
EventBenchmark.deserialization                           CBOR         _8_K  avgt    5    116054.958 ±   3856.477  ns/op
EventBenchmark.deserialization                           CBOR        _64_K  avgt    5   1102566.594 ±  78848.653  ns/op
EventBenchmark.deserialization                          SMILE         _1_K  avgt    5     14367.064 ±     88.556  ns/op
EventBenchmark.deserialization                          SMILE         _2_K  avgt    5     26827.872 ±   1770.778  ns/op
EventBenchmark.deserialization                          SMILE         _4_K  avgt    5     53550.662 ±    892.387  ns/op
EventBenchmark.deserialization                          SMILE         _8_K  avgt    5    119102.902 ±    681.891  ns/op
EventBenchmark.deserialization                          SMILE        _64_K  avgt    5   1078912.949 ±  37068.842  ns/op
EventBenchmark.deserialization                       SCALA_PB         _1_K  avgt    5      5787.727 ±    264.321  ns/op
EventBenchmark.deserialization                       SCALA_PB         _2_K  avgt    5     10767.116 ±    185.454  ns/op
EventBenchmark.deserialization                       SCALA_PB         _4_K  avgt    5     19759.334 ±    227.434  ns/op
EventBenchmark.deserialization                       SCALA_PB         _8_K  avgt    5     45895.930 ±   1336.124  ns/op
EventBenchmark.deserialization                       SCALA_PB        _64_K  avgt    5    414208.871 ±  13370.812  ns/op
EventBenchmark.deserialization                        JAVA_PB         _1_K  avgt    5      3895.145 ±    225.532  ns/op
EventBenchmark.deserialization                        JAVA_PB         _2_K  avgt    5      7740.116 ±    606.102  ns/op
EventBenchmark.deserialization                        JAVA_PB         _4_K  avgt    5     14893.418 ±   1710.927  ns/op
EventBenchmark.deserialization                        JAVA_PB         _8_K  avgt    5     31083.274 ±    579.005  ns/op
EventBenchmark.deserialization                        JAVA_PB        _64_K  avgt    5    297073.642 ±   2850.436  ns/op
EventBenchmark.deserialization                    JAVA_THRIFT         _1_K  avgt    5      5005.502 ±     22.689  ns/op
EventBenchmark.deserialization                    JAVA_THRIFT         _2_K  avgt    5      8856.201 ±    533.918  ns/op
EventBenchmark.deserialization                    JAVA_THRIFT         _4_K  avgt    5     17631.218 ±   2238.688  ns/op
EventBenchmark.deserialization                    JAVA_THRIFT         _8_K  avgt    5     38503.093 ±   2386.414  ns/op
EventBenchmark.deserialization                    JAVA_THRIFT        _64_K  avgt    5    341231.508 ±  35782.916  ns/op
EventBenchmark.deserialization                   SERIALIZABLE         _1_K  avgt    5    109688.008 ±   1694.077  ns/op
EventBenchmark.deserialization                   SERIALIZABLE         _2_K  avgt    5    197593.345 ±   2102.420  ns/op
EventBenchmark.deserialization                   SERIALIZABLE         _4_K  avgt    5    485209.031 ±   3141.120  ns/op
EventBenchmark.deserialization                   SERIALIZABLE         _8_K  avgt    5   1166898.893 ±  24915.571  ns/op
EventBenchmark.deserialization                   SERIALIZABLE        _64_K  avgt    5   9885137.989 ± 121012.913  ns/op
EventBenchmark.deserialization                      BOOPICKLE         _1_K  avgt    5      2384.055 ±     79.447  ns/op
EventBenchmark.deserialization                      BOOPICKLE         _2_K  avgt    5      4785.981 ±    235.379  ns/op
EventBenchmark.deserialization                      BOOPICKLE         _4_K  avgt    5      9282.789 ±    466.730  ns/op
EventBenchmark.deserialization                      BOOPICKLE         _8_K  avgt    5     18878.136 ±    750.744  ns/op
EventBenchmark.deserialization                      BOOPICKLE        _64_K  avgt    5    192028.046 ±   1473.041  ns/op
EventBenchmark.deserialization                          CHILL         _1_K  avgt    5     30864.251 ±   2908.990  ns/op
EventBenchmark.deserialization                          CHILL         _2_K  avgt    5     60857.157 ±   2784.308  ns/op
EventBenchmark.deserialization                          CHILL         _4_K  avgt    5    128373.395 ±  33642.379  ns/op
EventBenchmark.deserialization                          CHILL         _8_K  avgt    5    294297.239 ±  77878.389  ns/op
EventBenchmark.deserialization                          CHILL        _64_K  avgt    5   2584943.425 ± 103907.790  ns/op
EventBenchmark.deserialization                       JSONITER         _1_K  avgt    5      6588.264 ±    138.888  ns/op
EventBenchmark.deserialization                       JSONITER         _2_K  avgt    5     11490.710 ±    100.069  ns/op
EventBenchmark.deserialization                       JSONITER         _4_K  avgt    5     24650.075 ±   1577.633  ns/op
EventBenchmark.deserialization                       JSONITER         _8_K  avgt    5     51714.681 ±   5797.461  ns/op
EventBenchmark.deserialization                       JSONITER        _64_K  avgt    5    485468.122 ±  23451.591  ns/op
EventBenchmark.deserialization                          CIRCE         _1_K  avgt    5    148028.325 ±   3013.306  ns/op
EventBenchmark.deserialization                          CIRCE         _2_K  avgt    5    208460.087 ±   7904.754  ns/op
EventBenchmark.deserialization                          CIRCE         _4_K  avgt    5    411793.557 ±  10670.866  ns/op
EventBenchmark.deserialization                          CIRCE         _8_K  avgt    5    935601.292 ±  34835.671  ns/op
EventBenchmark.deserialization                          CIRCE        _64_K  avgt    5   9050166.414 ± 169381.877  ns/op
EventBenchmark.deserialization                   UPICKLE_JSON         _1_K  avgt    5     19945.701 ±    213.102  ns/op
EventBenchmark.deserialization                   UPICKLE_JSON         _2_K  avgt    5     37448.948 ±    373.400  ns/op
EventBenchmark.deserialization                   UPICKLE_JSON         _4_K  avgt    5     95909.152 ±   1375.695  ns/op
EventBenchmark.deserialization                   UPICKLE_JSON         _8_K  avgt    5    195328.027 ±   6908.642  ns/op
EventBenchmark.deserialization                   UPICKLE_JSON        _64_K  avgt    5   1733604.985 ±  13027.005  ns/op
EventBenchmark.deserialization            UPICKLE_POOLED_JSON         _1_K  avgt    5     20754.351 ±    214.439  ns/op
EventBenchmark.deserialization            UPICKLE_POOLED_JSON         _2_K  avgt    5     37331.450 ±    265.257  ns/op
EventBenchmark.deserialization            UPICKLE_POOLED_JSON         _4_K  avgt    5     98284.591 ±   3971.871  ns/op
EventBenchmark.deserialization            UPICKLE_POOLED_JSON         _8_K  avgt    5    187525.587 ±   2577.354  ns/op
EventBenchmark.deserialization            UPICKLE_POOLED_JSON        _64_K  avgt    5   1722916.013 ±  18816.737  ns/op
EventBenchmark.deserialization                UPICKLE_MSGPACK         _1_K  avgt    5     12244.064 ±    219.892  ns/op
EventBenchmark.deserialization                UPICKLE_MSGPACK         _2_K  avgt    5     20298.146 ±    255.504  ns/op
EventBenchmark.deserialization                UPICKLE_MSGPACK         _4_K  avgt    5     46769.470 ±   1196.027  ns/op
EventBenchmark.deserialization                UPICKLE_MSGPACK         _8_K  avgt    5    114597.856 ±  19528.654  ns/op
EventBenchmark.deserialization                UPICKLE_MSGPACK        _64_K  avgt    5   1116106.692 ±  19646.451  ns/op
EventBenchmark.deserialization                    CAP_N_PROTO         _1_K  avgt    5     20840.658 ±    277.137  ns/op
EventBenchmark.deserialization                    CAP_N_PROTO         _2_K  avgt    5     38947.372 ±    641.872  ns/op
EventBenchmark.deserialization                    CAP_N_PROTO         _4_K  avgt    5     82085.637 ±  18751.995  ns/op
EventBenchmark.deserialization                    CAP_N_PROTO         _8_K  avgt    5    179957.821 ±  12229.844  ns/op
EventBenchmark.deserialization                    CAP_N_PROTO        _64_K  avgt    5   1776890.386 ±  82029.244  ns/op
EventBenchmark.deserialization             CAP_N_PROTO_POOLED         _1_K  avgt    5     21969.394 ±   3747.371  ns/op
EventBenchmark.deserialization             CAP_N_PROTO_POOLED         _2_K  avgt    5     38980.008 ±    476.288  ns/op
EventBenchmark.deserialization             CAP_N_PROTO_POOLED         _4_K  avgt    5     78176.499 ±   2437.494  ns/op
EventBenchmark.deserialization             CAP_N_PROTO_POOLED         _8_K  avgt    5    177360.856 ±   4108.846  ns/op
EventBenchmark.deserialization             CAP_N_PROTO_POOLED        _64_K  avgt    5   1780185.317 ± 177762.411  ns/op
EventBenchmark.serialization                             JSON         _1_K  avgt    5     12150.557 ±    462.911  ns/op
EventBenchmark.serialization                             JSON         _2_K  avgt    5     22897.341 ±    124.488  ns/op
EventBenchmark.serialization                             JSON         _4_K  avgt    5     43482.448 ±    870.039  ns/op
EventBenchmark.serialization                             JSON         _8_K  avgt    5     90611.741 ±   5560.091  ns/op
EventBenchmark.serialization                             JSON        _64_K  avgt    5    802884.902 ±  23384.814  ns/op
EventBenchmark.serialization                             CBOR         _1_K  avgt    5      9132.825 ±    393.382  ns/op
EventBenchmark.serialization                             CBOR         _2_K  avgt    5     16387.011 ±    898.306  ns/op
EventBenchmark.serialization                             CBOR         _4_K  avgt    5     33019.689 ±   1529.951  ns/op
EventBenchmark.serialization                             CBOR         _8_K  avgt    5     75579.337 ±   3290.607  ns/op
EventBenchmark.serialization                             CBOR        _64_K  avgt    5    684762.189 ±  22892.896  ns/op
EventBenchmark.serialization                            SMILE         _1_K  avgt    5     11484.086 ±    295.068  ns/op
EventBenchmark.serialization                            SMILE         _2_K  avgt    5     20931.654 ±    574.516  ns/op
EventBenchmark.serialization                            SMILE         _4_K  avgt    5     43533.459 ±   4214.752  ns/op
EventBenchmark.serialization                            SMILE         _8_K  avgt    5     95618.301 ±   3594.482  ns/op
EventBenchmark.serialization                            SMILE        _64_K  avgt    5    817731.468 ±  10040.943  ns/op
EventBenchmark.serialization                         SCALA_PB         _1_K  avgt    5      2441.822 ±    101.540  ns/op
EventBenchmark.serialization                         SCALA_PB         _2_K  avgt    5      5105.618 ±     82.261  ns/op
EventBenchmark.serialization                         SCALA_PB         _4_K  avgt    5     10073.763 ±    119.528  ns/op
EventBenchmark.serialization                         SCALA_PB         _8_K  avgt    5     20488.584 ±    271.736  ns/op
EventBenchmark.serialization                         SCALA_PB        _64_K  avgt    5    206500.664 ±  37056.635  ns/op
EventBenchmark.serialization                          JAVA_PB         _1_K  avgt    5      3193.120 ±    101.810  ns/op
EventBenchmark.serialization                          JAVA_PB         _2_K  avgt    5      6523.577 ±     89.716  ns/op
EventBenchmark.serialization                          JAVA_PB         _4_K  avgt    5     12783.861 ±     97.867  ns/op
EventBenchmark.serialization                          JAVA_PB         _8_K  avgt    5     26276.077 ±   2049.294  ns/op
EventBenchmark.serialization                          JAVA_PB        _64_K  avgt    5    267280.108 ±   7558.495  ns/op
EventBenchmark.serialization                      JAVA_THRIFT         _1_K  avgt    5      5801.823 ±    100.895  ns/op
EventBenchmark.serialization                      JAVA_THRIFT         _2_K  avgt    5     10362.913 ±    260.795  ns/op
EventBenchmark.serialization                      JAVA_THRIFT         _4_K  avgt    5     23644.147 ±    393.669  ns/op
EventBenchmark.serialization                      JAVA_THRIFT         _8_K  avgt    5     52557.134 ±   5489.670  ns/op
EventBenchmark.serialization                      JAVA_THRIFT        _64_K  avgt    5    502890.795 ±   8547.163  ns/op
EventBenchmark.serialization                     SERIALIZABLE         _1_K  avgt    5     26613.929 ±    115.801  ns/op
EventBenchmark.serialization                     SERIALIZABLE         _2_K  avgt    5     48577.187 ±    554.511  ns/op
EventBenchmark.serialization                     SERIALIZABLE         _4_K  avgt    5    106928.825 ±   7874.982  ns/op
EventBenchmark.serialization                     SERIALIZABLE         _8_K  avgt    5    247821.054 ±   4016.797  ns/op
EventBenchmark.serialization                     SERIALIZABLE        _64_K  avgt    5   2238957.410 ±  31707.451  ns/op
EventBenchmark.serialization                        BOOPICKLE         _1_K  avgt    5      3764.083 ±     28.307  ns/op
EventBenchmark.serialization                        BOOPICKLE         _2_K  avgt    5      6880.517 ±     93.844  ns/op
EventBenchmark.serialization                        BOOPICKLE         _4_K  avgt    5     12975.068 ±    607.319  ns/op
EventBenchmark.serialization                        BOOPICKLE         _8_K  avgt    5     25978.594 ±    538.864  ns/op
EventBenchmark.serialization                        BOOPICKLE        _64_K  avgt    5    239422.022 ±  11320.289  ns/op
EventBenchmark.serialization                            CHILL         _1_K  avgt    5     33917.275 ±   2167.034  ns/op
EventBenchmark.serialization                            CHILL         _2_K  avgt    5     66562.279 ±  23557.131  ns/op
EventBenchmark.serialization                            CHILL         _4_K  avgt    5    119007.692 ±   7255.117  ns/op
EventBenchmark.serialization                            CHILL         _8_K  avgt    5    299347.470 ±  70861.287  ns/op
EventBenchmark.serialization                            CHILL        _64_K  avgt    5   2652602.394 ±  91034.099  ns/op
EventBenchmark.serialization                         JSONITER         _1_K  avgt    5      2906.777 ±     12.305  ns/op
EventBenchmark.serialization                         JSONITER         _2_K  avgt    5      5634.072 ±     85.300  ns/op
EventBenchmark.serialization                         JSONITER         _4_K  avgt    5     13015.394 ±    201.978  ns/op
EventBenchmark.serialization                         JSONITER         _8_K  avgt    5     19138.553 ±   1286.530  ns/op
EventBenchmark.serialization                         JSONITER        _64_K  avgt    5    209628.964 ±   9506.429  ns/op
EventBenchmark.serialization                            CIRCE         _1_K  avgt    5     35521.365 ±   1050.216  ns/op
EventBenchmark.serialization                            CIRCE         _2_K  avgt    5     64258.322 ±   1149.177  ns/op
EventBenchmark.serialization                            CIRCE         _4_K  avgt    5    131677.981 ±   8594.132  ns/op
EventBenchmark.serialization                            CIRCE         _8_K  avgt    5    294527.752 ±  10970.358  ns/op
EventBenchmark.serialization                            CIRCE        _64_K  avgt    5   3107451.095 ± 286034.077  ns/op
EventBenchmark.serialization                     UPICKLE_JSON         _1_K  avgt    5     19147.922 ±    203.207  ns/op
EventBenchmark.serialization                     UPICKLE_JSON         _2_K  avgt    5     29718.153 ±    498.816  ns/op
EventBenchmark.serialization                     UPICKLE_JSON         _4_K  avgt    5     62171.529 ±    720.834  ns/op
EventBenchmark.serialization                     UPICKLE_JSON         _8_K  avgt    5    142243.825 ±  13392.852  ns/op
EventBenchmark.serialization                     UPICKLE_JSON        _64_K  avgt    5   1516702.468 ±  30040.436  ns/op
EventBenchmark.serialization              UPICKLE_POOLED_JSON         _1_K  avgt    5     14443.900 ±    203.673  ns/op
EventBenchmark.serialization              UPICKLE_POOLED_JSON         _2_K  avgt    5     28444.299 ±   1985.896  ns/op
EventBenchmark.serialization              UPICKLE_POOLED_JSON         _4_K  avgt    5     65599.465 ±   9309.928  ns/op
EventBenchmark.serialization              UPICKLE_POOLED_JSON         _8_K  avgt    5    144593.681 ±  16616.340  ns/op
EventBenchmark.serialization              UPICKLE_POOLED_JSON        _64_K  avgt    5   1350817.180 ± 204256.971  ns/op
EventBenchmark.serialization                  UPICKLE_MSGPACK         _1_K  avgt    5     11369.516 ±    643.752  ns/op
EventBenchmark.serialization                  UPICKLE_MSGPACK         _2_K  avgt    5     14757.357 ±    253.448  ns/op
EventBenchmark.serialization                  UPICKLE_MSGPACK         _4_K  avgt    5     47501.040 ±    599.304  ns/op
EventBenchmark.serialization                  UPICKLE_MSGPACK         _8_K  avgt    5    106702.135 ±    348.606  ns/op
EventBenchmark.serialization                  UPICKLE_MSGPACK        _64_K  avgt    5    990427.838 ±   7873.852  ns/op
EventBenchmark.serialization                      CAP_N_PROTO         _1_K  avgt    5     35595.690 ±    392.760  ns/op
EventBenchmark.serialization                      CAP_N_PROTO         _2_K  avgt    5     65962.653 ±   6732.618  ns/op
EventBenchmark.serialization                      CAP_N_PROTO         _4_K  avgt    5    127333.536 ±   2237.684  ns/op
EventBenchmark.serialization                      CAP_N_PROTO         _8_K  avgt    5    297830.193 ±  13155.618  ns/op
EventBenchmark.serialization                      CAP_N_PROTO        _64_K  avgt    5   2858091.071 ± 103761.918  ns/op
EventBenchmark.serialization               CAP_N_PROTO_POOLED         _1_K  avgt    5     33937.717 ±    789.276  ns/op
EventBenchmark.serialization               CAP_N_PROTO_POOLED         _2_K  avgt    5     61956.572 ±   2085.811  ns/op
EventBenchmark.serialization               CAP_N_PROTO_POOLED         _4_K  avgt    5    124019.577 ±   3433.445  ns/op
EventBenchmark.serialization               CAP_N_PROTO_POOLED         _8_K  avgt    5    286064.855 ±   5144.821  ns/op
EventBenchmark.serialization               CAP_N_PROTO_POOLED        _64_K  avgt    5   2789940.148 ±  68317.526  ns/op
EventRawScalaPbBenchmark.both                 SCALA_PB_DIRECT         _1_K  avgt    5     13028.881 ±    135.177  ns/op
EventRawScalaPbBenchmark.both                 SCALA_PB_DIRECT         _2_K  avgt    5     33658.616 ±    725.479  ns/op
EventRawScalaPbBenchmark.both                 SCALA_PB_DIRECT         _4_K  avgt    5     66637.529 ±   1114.814  ns/op
EventRawScalaPbBenchmark.both                 SCALA_PB_DIRECT         _8_K  avgt    5    134723.785 ±   2373.787  ns/op
EventRawScalaPbBenchmark.both                 SCALA_PB_DIRECT        _64_K  avgt    5   1067965.253 ±  19065.369  ns/op
EventRawScalaPbBenchmark.deserialization      SCALA_PB_DIRECT         _1_K  avgt    5      2791.934 ±     35.207  ns/op
EventRawScalaPbBenchmark.deserialization      SCALA_PB_DIRECT         _2_K  avgt    5      5741.872 ±    303.224  ns/op
EventRawScalaPbBenchmark.deserialization      SCALA_PB_DIRECT         _4_K  avgt    5     10606.147 ±    398.142  ns/op
EventRawScalaPbBenchmark.deserialization      SCALA_PB_DIRECT         _8_K  avgt    5     21890.785 ±    250.155  ns/op
EventRawScalaPbBenchmark.deserialization      SCALA_PB_DIRECT        _64_K  avgt    5    215435.000 ±  33981.667  ns/op
EventRawScalaPbBenchmark.serialization        SCALA_PB_DIRECT         _1_K  avgt    5      9905.475 ±   2444.892  ns/op
EventRawScalaPbBenchmark.serialization        SCALA_PB_DIRECT         _2_K  avgt    5     25608.505 ±    685.038  ns/op
EventRawScalaPbBenchmark.serialization        SCALA_PB_DIRECT         _4_K  avgt    5     48892.642 ±   1751.965  ns/op
EventRawScalaPbBenchmark.serialization        SCALA_PB_DIRECT         _8_K  avgt    5     92936.497 ±   1992.787  ns/op
EventRawScalaPbBenchmark.serialization        SCALA_PB_DIRECT        _64_K  avgt    5    777853.446 ±  15569.159  ns/op
SiteBenchmark.both                                       JSON         _1_K  avgt    5     17005.177 ±   1231.351  ns/op
SiteBenchmark.both                                       JSON         _2_K  avgt    5     30785.866 ±    666.533  ns/op
SiteBenchmark.both                                       JSON         _4_K  avgt    5     57424.674 ±   3223.350  ns/op
SiteBenchmark.both                                       JSON         _8_K  avgt    5    113423.845 ±    832.253  ns/op
SiteBenchmark.both                                       JSON        _64_K  avgt    5    869802.381 ± 137322.362  ns/op
SiteBenchmark.both                                       CBOR         _1_K  avgt    5     12742.947 ±    120.152  ns/op
SiteBenchmark.both                                       CBOR         _2_K  avgt    5     22591.070 ±     85.375  ns/op
SiteBenchmark.both                                       CBOR         _4_K  avgt    5     42929.459 ±   2879.162  ns/op
SiteBenchmark.both                                       CBOR         _8_K  avgt    5     83277.624 ±   1293.036  ns/op
SiteBenchmark.both                                       CBOR        _64_K  avgt    5    667636.018 ±   9474.317  ns/op
SiteBenchmark.both                                      SMILE         _1_K  avgt    5     14766.025 ±     42.278  ns/op
SiteBenchmark.both                                      SMILE         _2_K  avgt    5     24434.537 ±    199.907  ns/op
SiteBenchmark.both                                      SMILE         _4_K  avgt    5     42848.774 ±    387.261  ns/op
SiteBenchmark.both                                      SMILE         _8_K  avgt    5     82265.889 ±   1517.859  ns/op
SiteBenchmark.both                                      SMILE        _64_K  avgt    5    586749.808 ±  45484.989  ns/op
SiteBenchmark.both                                   SCALA_PB         _1_K  avgt    5      5209.896 ±     33.433  ns/op
SiteBenchmark.both                                   SCALA_PB         _2_K  avgt    5      9698.354 ±    341.327  ns/op
SiteBenchmark.both                                   SCALA_PB         _4_K  avgt    5     19011.776 ±    394.509  ns/op
SiteBenchmark.both                                   SCALA_PB         _8_K  avgt    5     36515.314 ±   2502.450  ns/op
SiteBenchmark.both                                   SCALA_PB        _64_K  avgt    5    297483.883 ±   4457.239  ns/op
SiteBenchmark.both                                    JAVA_PB         _1_K  avgt    5      8147.003 ±    335.037  ns/op
SiteBenchmark.both                                    JAVA_PB         _2_K  avgt    5     14215.134 ±   2404.108  ns/op
SiteBenchmark.both                                    JAVA_PB         _4_K  avgt    5     24253.676 ±    262.807  ns/op
SiteBenchmark.both                                    JAVA_PB         _8_K  avgt    5     48610.761 ±   4619.634  ns/op
SiteBenchmark.both                                    JAVA_PB        _64_K  avgt    5    405749.736 ±  42160.008  ns/op
SiteBenchmark.both                                JAVA_THRIFT         _1_K  avgt    5      7562.979 ±    268.789  ns/op
SiteBenchmark.both                                JAVA_THRIFT         _2_K  avgt    5     13846.695 ±    103.649  ns/op
SiteBenchmark.both                                JAVA_THRIFT         _4_K  avgt    5     26982.682 ±    222.356  ns/op
SiteBenchmark.both                                JAVA_THRIFT         _8_K  avgt    5     53931.914 ±    824.438  ns/op
SiteBenchmark.both                                JAVA_THRIFT        _64_K  avgt    5    427242.765 ±   5148.359  ns/op
SiteBenchmark.both                               SERIALIZABLE         _1_K  avgt    5    133332.493 ±  11039.002  ns/op
SiteBenchmark.both                               SERIALIZABLE         _2_K  avgt    5    181198.994 ±   8994.337  ns/op
SiteBenchmark.both                               SERIALIZABLE         _4_K  avgt    5    236318.267 ±  13083.480  ns/op
SiteBenchmark.both                               SERIALIZABLE         _8_K  avgt    5    348251.647 ±  19679.873  ns/op
SiteBenchmark.both                               SERIALIZABLE        _64_K  avgt    5   2029678.812 ± 165967.491  ns/op
SiteBenchmark.both                                  BOOPICKLE         _1_K  avgt    5      4611.055 ±    483.268  ns/op
SiteBenchmark.both                                  BOOPICKLE         _2_K  avgt    5      8252.492 ±    391.757  ns/op
SiteBenchmark.both                                  BOOPICKLE         _4_K  avgt    5     14799.658 ±    146.414  ns/op
SiteBenchmark.both                                  BOOPICKLE         _8_K  avgt    5     27833.979 ±   3143.949  ns/op
SiteBenchmark.both                                  BOOPICKLE        _64_K  avgt    5    245084.330 ±   5865.373  ns/op
SiteBenchmark.both                                      CHILL         _1_K  avgt    5     18145.401 ±   8623.439  ns/op
SiteBenchmark.both                                      CHILL         _2_K  avgt    5     19483.542 ±    768.048  ns/op
SiteBenchmark.both                                      CHILL         _4_K  avgt    5     35131.951 ±    534.682  ns/op
SiteBenchmark.both                                      CHILL         _8_K  avgt    5     65528.689 ±   1287.862  ns/op
SiteBenchmark.both                                      CHILL        _64_K  avgt    5    764989.394 ±  17864.483  ns/op
SiteBenchmark.both                                   JSONITER         _1_K  avgt    5      6447.375 ±     86.046  ns/op
SiteBenchmark.both                                   JSONITER         _2_K  avgt    5     13502.666 ±   2174.933  ns/op
SiteBenchmark.both                                   JSONITER         _4_K  avgt    5     23218.564 ±    109.792  ns/op
SiteBenchmark.both                                   JSONITER         _8_K  avgt    5     44606.168 ±   1382.489  ns/op
SiteBenchmark.both                                   JSONITER        _64_K  avgt    5    383057.976 ±   1049.557  ns/op
SiteBenchmark.both                                      CIRCE         _1_K  avgt    5     46379.099 ±   2659.484  ns/op
SiteBenchmark.both                                      CIRCE         _2_K  avgt    5     81476.449 ±   5726.092  ns/op
SiteBenchmark.both                                      CIRCE         _4_K  avgt    5    179811.376 ±   2882.941  ns/op
SiteBenchmark.both                                      CIRCE         _8_K  avgt    5    406929.101 ±   4149.063  ns/op
SiteBenchmark.both                                      CIRCE        _64_K  avgt    5   3297569.747 ±  27658.153  ns/op
SiteBenchmark.both                               UPICKLE_JSON         _1_K  avgt    5     25554.651 ±    754.480  ns/op
SiteBenchmark.both                               UPICKLE_JSON         _2_K  avgt    5     49171.569 ±    483.453  ns/op
SiteBenchmark.both                               UPICKLE_JSON         _4_K  avgt    5    105683.512 ±   6533.774  ns/op
SiteBenchmark.both                               UPICKLE_JSON         _8_K  avgt    5    225329.991 ±  14145.323  ns/op
SiteBenchmark.both                               UPICKLE_JSON        _64_K  avgt    5   1808172.897 ± 129621.007  ns/op
SiteBenchmark.both                        UPICKLE_POOLED_JSON         _1_K  avgt    5     26259.956 ±    826.022  ns/op
SiteBenchmark.both                        UPICKLE_POOLED_JSON         _2_K  avgt    5     48921.982 ±    704.325  ns/op
SiteBenchmark.both                        UPICKLE_POOLED_JSON         _4_K  avgt    5    108366.056 ±   1695.206  ns/op
SiteBenchmark.both                        UPICKLE_POOLED_JSON         _8_K  avgt    5    231451.556 ±   5897.898  ns/op
SiteBenchmark.both                        UPICKLE_POOLED_JSON        _64_K  avgt    5   1774824.337 ±  53747.445  ns/op
SiteBenchmark.both                            UPICKLE_MSGPACK         _1_K  avgt    5     13639.119 ±    757.927  ns/op
SiteBenchmark.both                            UPICKLE_MSGPACK         _2_K  avgt    5     25515.083 ±   1608.966  ns/op
SiteBenchmark.both                            UPICKLE_MSGPACK         _4_K  avgt    5     55614.237 ±   1738.334  ns/op
SiteBenchmark.both                            UPICKLE_MSGPACK         _8_K  avgt    5    137022.541 ±   3103.103  ns/op
SiteBenchmark.both                            UPICKLE_MSGPACK        _64_K  avgt    5    973134.332 ±  12748.537  ns/op
SiteBenchmark.both                                CAP_N_PROTO         _1_K  avgt    5     17295.507 ±    486.184  ns/op
SiteBenchmark.both                                CAP_N_PROTO         _2_K  avgt    5     30928.744 ±    404.187  ns/op
SiteBenchmark.both                                CAP_N_PROTO         _4_K  avgt    5     56230.780 ±   3748.999  ns/op
SiteBenchmark.both                                CAP_N_PROTO         _8_K  avgt    5    116035.661 ±  18193.247  ns/op
SiteBenchmark.both                                CAP_N_PROTO        _64_K  avgt    5   1140451.625 ± 309236.554  ns/op
SiteBenchmark.both                         CAP_N_PROTO_POOLED         _1_K  avgt    5     18116.188 ±    346.400  ns/op
SiteBenchmark.both                         CAP_N_PROTO_POOLED         _2_K  avgt    5     30731.572 ±   1260.741  ns/op
SiteBenchmark.both                         CAP_N_PROTO_POOLED         _4_K  avgt    5     55820.218 ±    262.880  ns/op
SiteBenchmark.both                         CAP_N_PROTO_POOLED         _8_K  avgt    5    113064.840 ±   3631.471  ns/op
SiteBenchmark.both                         CAP_N_PROTO_POOLED        _64_K  avgt    5   1099031.101 ±  21486.859  ns/op
SiteBenchmark.deserialization                            JSON         _1_K  avgt    5      9363.904 ±     20.887  ns/op
SiteBenchmark.deserialization                            JSON         _2_K  avgt    5     16901.163 ±   1654.267  ns/op
SiteBenchmark.deserialization                            JSON         _4_K  avgt    5     31161.480 ±     57.050  ns/op
SiteBenchmark.deserialization                            JSON         _8_K  avgt    5     70813.191 ±   6557.427  ns/op
SiteBenchmark.deserialization                            JSON        _64_K  avgt    5    507142.295 ±   2832.962  ns/op
SiteBenchmark.deserialization                            CBOR         _1_K  avgt    5      8033.890 ±    392.821  ns/op
SiteBenchmark.deserialization                            CBOR         _2_K  avgt    5     13967.404 ±    962.152  ns/op
SiteBenchmark.deserialization                            CBOR         _4_K  avgt    5     25436.262 ±    396.882  ns/op
SiteBenchmark.deserialization                            CBOR         _8_K  avgt    5     54281.089 ±   1162.925  ns/op
SiteBenchmark.deserialization                            CBOR        _64_K  avgt    5    455430.997 ±   5116.462  ns/op
SiteBenchmark.deserialization                           SMILE         _1_K  avgt    5      8504.477 ±     88.396  ns/op
SiteBenchmark.deserialization                           SMILE         _2_K  avgt    5     14233.261 ±    133.322  ns/op
SiteBenchmark.deserialization                           SMILE         _4_K  avgt    5     25182.619 ±    330.024  ns/op
SiteBenchmark.deserialization                           SMILE         _8_K  avgt    5     51564.142 ±   8725.386  ns/op
SiteBenchmark.deserialization                           SMILE        _64_K  avgt    5    357435.724 ±   2298.239  ns/op
SiteBenchmark.deserialization                        SCALA_PB         _1_K  avgt    5      2856.649 ±     27.215  ns/op
SiteBenchmark.deserialization                        SCALA_PB         _2_K  avgt    5      5600.802 ±    328.449  ns/op
SiteBenchmark.deserialization                        SCALA_PB         _4_K  avgt    5     10459.094 ±     48.880  ns/op
SiteBenchmark.deserialization                        SCALA_PB         _8_K  avgt    5     18459.476 ±    684.665  ns/op
SiteBenchmark.deserialization                        SCALA_PB        _64_K  avgt    5    143836.820 ±  31233.552  ns/op
SiteBenchmark.deserialization                         JAVA_PB         _1_K  avgt    5      4421.175 ±     43.515  ns/op
SiteBenchmark.deserialization                         JAVA_PB         _2_K  avgt    5      8264.814 ±    194.882  ns/op
SiteBenchmark.deserialization                         JAVA_PB         _4_K  avgt    5     14314.534 ±    101.728  ns/op
SiteBenchmark.deserialization                         JAVA_PB         _8_K  avgt    5     27792.606 ±    233.389  ns/op
SiteBenchmark.deserialization                         JAVA_PB        _64_K  avgt    5    239251.325 ±  24549.617  ns/op
SiteBenchmark.deserialization                     JAVA_THRIFT         _1_K  avgt    5      4143.124 ±     28.471  ns/op
SiteBenchmark.deserialization                     JAVA_THRIFT         _2_K  avgt    5      7422.378 ±     52.880  ns/op
SiteBenchmark.deserialization                     JAVA_THRIFT         _4_K  avgt    5     13006.670 ±    104.140  ns/op
SiteBenchmark.deserialization                     JAVA_THRIFT         _8_K  avgt    5     25530.739 ±    255.940  ns/op
SiteBenchmark.deserialization                     JAVA_THRIFT        _64_K  avgt    5    227262.215 ±   6216.248  ns/op
SiteBenchmark.deserialization                    SERIALIZABLE         _1_K  avgt    5     99861.288 ±   5557.854  ns/op
SiteBenchmark.deserialization                    SERIALIZABLE         _2_K  avgt    5    133689.264 ±  12295.217  ns/op
SiteBenchmark.deserialization                    SERIALIZABLE         _4_K  avgt    5    162378.905 ±   8029.816  ns/op
SiteBenchmark.deserialization                    SERIALIZABLE         _8_K  avgt    5    204427.068 ±   1534.099  ns/op
SiteBenchmark.deserialization                    SERIALIZABLE        _64_K  avgt    5    898054.557 ±  42740.794  ns/op
SiteBenchmark.deserialization                       BOOPICKLE         _1_K  avgt    5      2036.469 ±     22.699  ns/op
SiteBenchmark.deserialization                       BOOPICKLE         _2_K  avgt    5      4083.496 ±    119.348  ns/op
SiteBenchmark.deserialization                       BOOPICKLE         _4_K  avgt    5      7049.227 ±     90.856  ns/op
SiteBenchmark.deserialization                       BOOPICKLE         _8_K  avgt    5     14137.481 ±    464.877  ns/op
SiteBenchmark.deserialization                       BOOPICKLE        _64_K  avgt    5    122356.270 ±    900.574  ns/op
SiteBenchmark.deserialization                           CHILL         _1_K  avgt    5      6190.419 ±    135.846  ns/op
SiteBenchmark.deserialization                           CHILL         _2_K  avgt    5     10562.503 ±    229.909  ns/op
SiteBenchmark.deserialization                           CHILL         _4_K  avgt    5     17104.555 ±    272.330  ns/op
SiteBenchmark.deserialization                           CHILL         _8_K  avgt    5     31086.838 ±    143.872  ns/op
SiteBenchmark.deserialization                           CHILL        _64_K  avgt    5    265250.166 ±   9763.879  ns/op
SiteBenchmark.deserialization                        JSONITER         _1_K  avgt    5      3991.936 ±     17.908  ns/op
SiteBenchmark.deserialization                        JSONITER         _2_K  avgt    5      8680.197 ±    703.598  ns/op
SiteBenchmark.deserialization                        JSONITER         _4_K  avgt    5     16731.077 ±    155.532  ns/op
SiteBenchmark.deserialization                        JSONITER         _8_K  avgt    5     31462.773 ±    484.329  ns/op
SiteBenchmark.deserialization                        JSONITER        _64_K  avgt    5    256112.486 ±   5396.026  ns/op
SiteBenchmark.deserialization                           CIRCE         _1_K  avgt    5     23445.723 ±    137.451  ns/op
SiteBenchmark.deserialization                           CIRCE         _2_K  avgt    5     42692.746 ±   4325.654  ns/op
SiteBenchmark.deserialization                           CIRCE         _4_K  avgt    5     95706.582 ±  11920.320  ns/op
SiteBenchmark.deserialization                           CIRCE         _8_K  avgt    5    225869.100 ±   5543.905  ns/op
SiteBenchmark.deserialization                           CIRCE        _64_K  avgt    5   1682158.995 ± 115386.583  ns/op
SiteBenchmark.deserialization                    UPICKLE_JSON         _1_K  avgt    5     15683.441 ±   2145.398  ns/op
SiteBenchmark.deserialization                    UPICKLE_JSON         _2_K  avgt    5     29094.026 ±   1929.031  ns/op
SiteBenchmark.deserialization                    UPICKLE_JSON         _4_K  avgt    5     68709.868 ±  10839.586  ns/op
SiteBenchmark.deserialization                    UPICKLE_JSON         _8_K  avgt    5    157845.738 ±   1876.236  ns/op
SiteBenchmark.deserialization                    UPICKLE_JSON        _64_K  avgt    5   1111126.774 ±   4372.764  ns/op
SiteBenchmark.deserialization             UPICKLE_POOLED_JSON         _1_K  avgt    5     15471.693 ±    147.030  ns/op
SiteBenchmark.deserialization             UPICKLE_POOLED_JSON         _2_K  avgt    5     31435.559 ±    203.508  ns/op
SiteBenchmark.deserialization             UPICKLE_POOLED_JSON         _4_K  avgt    5     65957.010 ±   2575.300  ns/op
SiteBenchmark.deserialization             UPICKLE_POOLED_JSON         _8_K  avgt    5    146844.089 ±   4271.509  ns/op
SiteBenchmark.deserialization             UPICKLE_POOLED_JSON        _64_K  avgt    5   1143141.646 ±  47845.603  ns/op
SiteBenchmark.deserialization                 UPICKLE_MSGPACK         _1_K  avgt    5      8265.768 ±    106.303  ns/op
SiteBenchmark.deserialization                 UPICKLE_MSGPACK         _2_K  avgt    5     15704.801 ±     97.889  ns/op
SiteBenchmark.deserialization                 UPICKLE_MSGPACK         _4_K  avgt    5     35196.634 ±    452.050  ns/op
SiteBenchmark.deserialization                 UPICKLE_MSGPACK         _8_K  avgt    5     82218.105 ±   1287.513  ns/op
SiteBenchmark.deserialization                 UPICKLE_MSGPACK        _64_K  avgt    5    619314.401 ±   5628.995  ns/op
SiteBenchmark.deserialization                     CAP_N_PROTO         _1_K  avgt    5      7725.887 ±    515.090  ns/op
SiteBenchmark.deserialization                     CAP_N_PROTO         _2_K  avgt    5     13394.270 ±    129.723  ns/op
SiteBenchmark.deserialization                     CAP_N_PROTO         _4_K  avgt    5     24761.500 ±    137.991  ns/op
SiteBenchmark.deserialization                     CAP_N_PROTO         _8_K  avgt    5     49892.114 ±    355.252  ns/op
SiteBenchmark.deserialization                     CAP_N_PROTO        _64_K  avgt    5    525111.870 ±   8349.765  ns/op
SiteBenchmark.deserialization              CAP_N_PROTO_POOLED         _1_K  avgt    5      7491.239 ±    187.779  ns/op
SiteBenchmark.deserialization              CAP_N_PROTO_POOLED         _2_K  avgt    5     13537.177 ±    193.918  ns/op
SiteBenchmark.deserialization              CAP_N_PROTO_POOLED         _4_K  avgt    5     24981.180 ±    127.916  ns/op
SiteBenchmark.deserialization              CAP_N_PROTO_POOLED         _8_K  avgt    5     52505.685 ±    278.157  ns/op
SiteBenchmark.deserialization              CAP_N_PROTO_POOLED        _64_K  avgt    5    546481.464 ±  30894.442  ns/op
SiteBenchmark.serialization                              JSON         _1_K  avgt    5      6169.171 ±    197.976  ns/op
SiteBenchmark.serialization                              JSON         _2_K  avgt    5     13095.317 ±    145.552  ns/op
SiteBenchmark.serialization                              JSON         _4_K  avgt    5     23123.207 ±    369.981  ns/op
SiteBenchmark.serialization                              JSON         _8_K  avgt    5     41396.275 ±     62.832  ns/op
SiteBenchmark.serialization                              JSON        _64_K  avgt    5    312031.508 ±   2929.145  ns/op
SiteBenchmark.serialization                              CBOR         _1_K  avgt    5      3769.659 ±    202.735  ns/op
SiteBenchmark.serialization                              CBOR         _2_K  avgt    5      7282.713 ±     95.114  ns/op
SiteBenchmark.serialization                              CBOR         _4_K  avgt    5     15562.818 ±   1543.321  ns/op
SiteBenchmark.serialization                              CBOR         _8_K  avgt    5     29438.330 ±   2432.472  ns/op
SiteBenchmark.serialization                              CBOR        _64_K  avgt    5    234992.787 ±   1064.285  ns/op
SiteBenchmark.serialization                             SMILE         _1_K  avgt    5      4891.587 ±    172.289  ns/op
SiteBenchmark.serialization                             SMILE         _2_K  avgt    5      8564.829 ±     92.517  ns/op
SiteBenchmark.serialization                             SMILE         _4_K  avgt    5     15800.188 ±     90.865  ns/op
SiteBenchmark.serialization                             SMILE         _8_K  avgt    5     28935.523 ±   1592.590  ns/op
SiteBenchmark.serialization                             SMILE        _64_K  avgt    5    216271.874 ±  15971.069  ns/op
SiteBenchmark.serialization                          SCALA_PB         _1_K  avgt    5      1928.672 ±    201.276  ns/op
SiteBenchmark.serialization                          SCALA_PB         _2_K  avgt    5      4186.441 ±     33.080  ns/op
SiteBenchmark.serialization                          SCALA_PB         _4_K  avgt    5      8654.250 ±    343.066  ns/op
SiteBenchmark.serialization                          SCALA_PB         _8_K  avgt    5     16749.715 ±   1027.005  ns/op
SiteBenchmark.serialization                          SCALA_PB        _64_K  avgt    5    133472.516 ±    531.914  ns/op
SiteBenchmark.serialization                           JAVA_PB         _1_K  avgt    5      3183.925 ±     40.640  ns/op
SiteBenchmark.serialization                           JAVA_PB         _2_K  avgt    5      5743.705 ±     88.235  ns/op
SiteBenchmark.serialization                           JAVA_PB         _4_K  avgt    5      9464.048 ±    104.048  ns/op
SiteBenchmark.serialization                           JAVA_PB         _8_K  avgt    5     19751.304 ±   1094.227  ns/op
SiteBenchmark.serialization                           JAVA_PB        _64_K  avgt    5    166773.415 ±   2985.984  ns/op
SiteBenchmark.serialization                       JAVA_THRIFT         _1_K  avgt    5      3957.173 ±     61.622  ns/op
SiteBenchmark.serialization                       JAVA_THRIFT         _2_K  avgt    5      6051.857 ±    764.594  ns/op
SiteBenchmark.serialization                       JAVA_THRIFT         _4_K  avgt    5     13767.908 ±    172.987  ns/op
SiteBenchmark.serialization                       JAVA_THRIFT         _8_K  avgt    5     25616.467 ±    232.478  ns/op
SiteBenchmark.serialization                       JAVA_THRIFT        _64_K  avgt    5    202243.723 ±   1766.836  ns/op
SiteBenchmark.serialization                      SERIALIZABLE         _1_K  avgt    5     27720.838 ±    115.379  ns/op
SiteBenchmark.serialization                      SERIALIZABLE         _2_K  avgt    5     40026.137 ±   1423.264  ns/op
SiteBenchmark.serialization                      SERIALIZABLE         _4_K  avgt    5     62729.659 ±    738.418  ns/op
SiteBenchmark.serialization                      SERIALIZABLE         _8_K  avgt    5    124853.368 ±   2504.836  ns/op
SiteBenchmark.serialization                      SERIALIZABLE        _64_K  avgt    5    993828.592 ±  25901.007  ns/op
SiteBenchmark.serialization                         BOOPICKLE         _1_K  avgt    5      2469.626 ±     24.386  ns/op
SiteBenchmark.serialization                         BOOPICKLE         _2_K  avgt    5      3925.099 ±     33.737  ns/op
SiteBenchmark.serialization                         BOOPICKLE         _4_K  avgt    5      6413.147 ±     77.716  ns/op
SiteBenchmark.serialization                         BOOPICKLE         _8_K  avgt    5     11865.128 ±    656.069  ns/op
SiteBenchmark.serialization                         BOOPICKLE        _64_K  avgt    5    117365.777 ±   1074.756  ns/op
SiteBenchmark.serialization                             CHILL         _1_K  avgt    5      5802.327 ±    800.254  ns/op
SiteBenchmark.serialization                             CHILL         _2_K  avgt    5      9734.938 ±   1733.965  ns/op
SiteBenchmark.serialization                             CHILL         _4_K  avgt    5     19402.875 ±  17924.492  ns/op
SiteBenchmark.serialization                             CHILL         _8_K  avgt    5     33299.700 ±    741.592  ns/op
SiteBenchmark.serialization                             CHILL        _64_K  avgt    5    527202.411 ±  49597.448  ns/op
SiteBenchmark.serialization                          JSONITER         _1_K  avgt    5      2088.570 ±     93.743  ns/op
SiteBenchmark.serialization                          JSONITER         _2_K  avgt    5      5172.980 ±    198.165  ns/op
SiteBenchmark.serialization                          JSONITER         _4_K  avgt    5     11233.724 ±   1188.432  ns/op
SiteBenchmark.serialization                          JSONITER         _8_K  avgt    5     12707.609 ±    111.995  ns/op
SiteBenchmark.serialization                          JSONITER        _64_K  avgt    5    137146.149 ±  17030.200  ns/op
SiteBenchmark.serialization                             CIRCE         _1_K  avgt    5     21095.734 ±   1801.331  ns/op
SiteBenchmark.serialization                             CIRCE         _2_K  avgt    5     34710.123 ±    140.950  ns/op
SiteBenchmark.serialization                             CIRCE         _4_K  avgt    5     78238.162 ±    974.432  ns/op
SiteBenchmark.serialization                             CIRCE         _8_K  avgt    5    182016.106 ±   2286.687  ns/op
SiteBenchmark.serialization                             CIRCE        _64_K  avgt    5   1621286.954 ± 284944.640  ns/op
SiteBenchmark.serialization                      UPICKLE_JSON         _1_K  avgt    5      9095.252 ±    303.009  ns/op
SiteBenchmark.serialization                      UPICKLE_JSON         _2_K  avgt    5     16826.628 ±   1064.227  ns/op
SiteBenchmark.serialization                      UPICKLE_JSON         _4_K  avgt    5     35797.598 ±    733.119  ns/op
SiteBenchmark.serialization                      UPICKLE_JSON         _8_K  avgt    5     76427.838 ±    981.120  ns/op
SiteBenchmark.serialization                      UPICKLE_JSON        _64_K  avgt    5    615281.823 ±   2649.325  ns/op
SiteBenchmark.serialization               UPICKLE_POOLED_JSON         _1_K  avgt    5      7465.760 ±    219.969  ns/op
SiteBenchmark.serialization               UPICKLE_POOLED_JSON         _2_K  avgt    5     14078.846 ±   1307.306  ns/op
SiteBenchmark.serialization               UPICKLE_POOLED_JSON         _4_K  avgt    5     35888.149 ±   1193.157  ns/op
SiteBenchmark.serialization               UPICKLE_POOLED_JSON         _8_K  avgt    5     62289.282 ±    966.815  ns/op
SiteBenchmark.serialization               UPICKLE_POOLED_JSON        _64_K  avgt    5    548118.552 ±   6634.641  ns/op
SiteBenchmark.serialization                   UPICKLE_MSGPACK         _1_K  avgt    5      4232.253 ±     64.027  ns/op
SiteBenchmark.serialization                   UPICKLE_MSGPACK         _2_K  avgt    5      7850.351 ±    181.522  ns/op
SiteBenchmark.serialization                   UPICKLE_MSGPACK         _4_K  avgt    5     17794.890 ±    157.585  ns/op
SiteBenchmark.serialization                   UPICKLE_MSGPACK         _8_K  avgt    5     41256.727 ±    206.823  ns/op
SiteBenchmark.serialization                   UPICKLE_MSGPACK        _64_K  avgt    5    276060.830 ±   2999.716  ns/op
SiteBenchmark.serialization                       CAP_N_PROTO         _1_K  avgt    5      9235.048 ±    777.183  ns/op
SiteBenchmark.serialization                       CAP_N_PROTO         _2_K  avgt    5     16398.506 ±     37.855  ns/op
SiteBenchmark.serialization                       CAP_N_PROTO         _4_K  avgt    5     30117.858 ±    384.875  ns/op
SiteBenchmark.serialization                       CAP_N_PROTO         _8_K  avgt    5     59235.318 ±    371.933  ns/op
SiteBenchmark.serialization                       CAP_N_PROTO        _64_K  avgt    5    550202.798 ±  32399.910  ns/op
SiteBenchmark.serialization                CAP_N_PROTO_POOLED         _1_K  avgt    5      8672.010 ±     72.348  ns/op
SiteBenchmark.serialization                CAP_N_PROTO_POOLED         _2_K  avgt    5     16145.275 ±    136.281  ns/op
SiteBenchmark.serialization                CAP_N_PROTO_POOLED         _4_K  avgt    5     29415.820 ±    167.476  ns/op
SiteBenchmark.serialization                CAP_N_PROTO_POOLED         _8_K  avgt    5     58176.667 ±    541.304  ns/op
SiteBenchmark.serialization                CAP_N_PROTO_POOLED        _64_K  avgt    5    536706.268 ±  34454.078  ns/op
SiteRawScalaPbBenchmark.both                  SCALA_PB_DIRECT         _1_K  avgt    5      3684.731 ±    102.447  ns/op
SiteRawScalaPbBenchmark.both                  SCALA_PB_DIRECT         _2_K  avgt    5      7411.902 ±    492.640  ns/op
SiteRawScalaPbBenchmark.both                  SCALA_PB_DIRECT         _4_K  avgt    5     13182.723 ±    140.549  ns/op
SiteRawScalaPbBenchmark.both                  SCALA_PB_DIRECT         _8_K  avgt    5     23912.666 ±   1988.823  ns/op
SiteRawScalaPbBenchmark.both                  SCALA_PB_DIRECT        _64_K  avgt    5    204955.550 ±   2420.394  ns/op
SiteRawScalaPbBenchmark.deserialization       SCALA_PB_DIRECT         _1_K  avgt    5      2656.346 ±    293.470  ns/op
SiteRawScalaPbBenchmark.deserialization       SCALA_PB_DIRECT         _2_K  avgt    5      4962.101 ±     76.726  ns/op
SiteRawScalaPbBenchmark.deserialization       SCALA_PB_DIRECT         _4_K  avgt    5      8533.260 ±    117.829  ns/op
SiteRawScalaPbBenchmark.deserialization       SCALA_PB_DIRECT         _8_K  avgt    5     15970.661 ±     89.998  ns/op
SiteRawScalaPbBenchmark.deserialization       SCALA_PB_DIRECT        _64_K  avgt    5    139393.277 ±  15363.257  ns/op
SiteRawScalaPbBenchmark.serialization         SCALA_PB_DIRECT         _1_K  avgt    5       931.051 ±    125.123  ns/op
SiteRawScalaPbBenchmark.serialization         SCALA_PB_DIRECT         _2_K  avgt    5      1944.388 ±     13.050  ns/op
SiteRawScalaPbBenchmark.serialization         SCALA_PB_DIRECT         _4_K  avgt    5      4105.949 ±     56.171  ns/op
SiteRawScalaPbBenchmark.serialization         SCALA_PB_DIRECT         _8_K  avgt    5      7423.804 ±     69.792  ns/op
SiteRawScalaPbBenchmark.serialization         SCALA_PB_DIRECT        _64_K  avgt    5     62773.916 ±   4788.634  ns/op

Benchmark result is saved to /static/data/charts/scala-serialization-2022/jdk11.json
