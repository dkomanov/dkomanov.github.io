# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000)

# Run progress: 0.00% complete, ETA 00:22:24
# Fork: 1 of 1
# Warmup Iteration   1: 130.180 ns/op
# Warmup Iteration   2: 120.621 ns/op
Iteration   1: 92.110 ns/op
Iteration   2: 91.850 ns/op
Iteration   3: 91.899 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  91.953 ±(99.9%) 2.520 ns/op [Average]
  (min, avg, max) = (91.850, 91.953, 92.110), stdev = 0.138
  CI (99.9%): [89.433, 94.473] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 10000)

# Run progress: 1.56% complete, ETA 00:22:44
# Fork: 1 of 1
# Warmup Iteration   1: 134.141 ns/op
# Warmup Iteration   2: 128.742 ns/op
Iteration   1: 101.279 ns/op
Iteration   2: 101.561 ns/op
Iteration   3: 101.576 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  101.472 ±(99.9%) 3.056 ns/op [Average]
  (min, avg, max) = (101.279, 101.472, 101.576), stdev = 0.168
  CI (99.9%): [98.416, 104.528] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 100000)

# Run progress: 3.13% complete, ETA 00:22:27
# Fork: 1 of 1
# Warmup Iteration   1: 139.909 ns/op
# Warmup Iteration   2: 127.618 ns/op
Iteration   1: 101.524 ns/op
Iteration   2: 100.857 ns/op
Iteration   3: 103.151 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  101.844 ±(99.9%) 21.525 ns/op [Average]
  (min, avg, max) = (100.857, 101.844, 103.151), stdev = 1.180
  CI (99.9%): [80.319, 123.368] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit
# Parameters: (size = 1000000)

# Run progress: 4.69% complete, ETA 00:22:15
# Fork: 1 of 1
# Warmup Iteration   1: 164.996 ns/op
# Warmup Iteration   2: 142.806 ns/op
Iteration   1: 116.481 ns/op
Iteration   2: 116.591 ns/op
Iteration   3: 116.671 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapHit":
  116.581 ±(99.9%) 1.746 ns/op [Average]
  (min, avg, max) = (116.481, 116.581, 116.671), stdev = 0.096
  CI (99.9%): [114.835, 118.327] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000)

# Run progress: 6.25% complete, ETA 00:22:44
# Fork: 1 of 1
# Warmup Iteration   1: 129.045 ns/op
# Warmup Iteration   2: 112.457 ns/op
Iteration   1: 75.977 ns/op
Iteration   2: 75.742 ns/op
Iteration   3: 76.212 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  75.977 ±(99.9%) 4.286 ns/op [Average]
  (min, avg, max) = (75.742, 75.977, 76.212), stdev = 0.235
  CI (99.9%): [71.690, 80.263] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 10000)

# Run progress: 7.81% complete, ETA 00:22:08
# Fork: 1 of 1
# Warmup Iteration   1: 122.492 ns/op
# Warmup Iteration   2: 116.597 ns/op
Iteration   1: 82.160 ns/op
Iteration   2: 81.841 ns/op
Iteration   3: 82.954 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  82.319 ±(99.9%) 10.456 ns/op [Average]
  (min, avg, max) = (81.841, 82.319, 82.954), stdev = 0.573
  CI (99.9%): [71.863, 92.774] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 100000)

# Run progress: 9.38% complete, ETA 00:21:38
# Fork: 1 of 1
# Warmup Iteration   1: 117.498 ns/op
# Warmup Iteration   2: 112.947 ns/op
Iteration   1: 78.097 ns/op
Iteration   2: 78.312 ns/op
Iteration   3: 78.072 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  78.160 ±(99.9%) 2.414 ns/op [Average]
  (min, avg, max) = (78.072, 78.160, 78.312), stdev = 0.132
  CI (99.9%): [75.746, 80.574] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss
# Parameters: (size = 1000000)

# Run progress: 10.94% complete, ETA 00:21:13
# Fork: 1 of 1
# Warmup Iteration   1: 123.868 ns/op
# Warmup Iteration   2: 114.911 ns/op
Iteration   1: 81.485 ns/op
Iteration   2: 81.404 ns/op
Iteration   3: 81.578 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaMapMiss":
  81.489 ±(99.9%) 1.593 ns/op [Average]
  (min, avg, max) = (81.404, 81.489, 81.578), stdev = 0.087
  CI (99.9%): [79.896, 83.082] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000)

# Run progress: 12.50% complete, ETA 00:21:12
# Fork: 1 of 1
# Warmup Iteration   1: 87.366 ns/op
# Warmup Iteration   2: 80.734 ns/op
Iteration   1: 79.388 ns/op
Iteration   2: 80.297 ns/op
Iteration   3: 79.318 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  79.668 ±(99.9%) 9.960 ns/op [Average]
  (min, avg, max) = (79.318, 79.668, 80.297), stdev = 0.546
  CI (99.9%): [69.708, 89.628] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 10000)

# Run progress: 14.06% complete, ETA 00:20:43
# Fork: 1 of 1
# Warmup Iteration   1: 100.924 ns/op
# Warmup Iteration   2: 95.854 ns/op
Iteration   1: 94.741 ns/op
Iteration   2: 94.844 ns/op
Iteration   3: 96.303 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  95.296 ±(99.9%) 15.936 ns/op [Average]
  (min, avg, max) = (94.741, 95.296, 96.303), stdev = 0.873
  CI (99.9%): [79.360, 111.231] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 100000)

# Run progress: 15.63% complete, ETA 00:20:15
# Fork: 1 of 1
# Warmup Iteration   1: 87.736 ns/op
# Warmup Iteration   2: 83.158 ns/op
Iteration   1: 79.750 ns/op
Iteration   2: 80.259 ns/op
Iteration   3: 79.702 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  79.904 ±(99.9%) 5.628 ns/op [Average]
  (min, avg, max) = (79.702, 79.904, 80.259), stdev = 0.308
  CI (99.9%): [74.276, 85.531] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit
# Parameters: (size = 1000000)

# Run progress: 17.19% complete, ETA 00:19:51
# Fork: 1 of 1
# Warmup Iteration   1: 106.610 ns/op
# Warmup Iteration   2: 95.910 ns/op
Iteration   1: 93.492 ns/op
Iteration   2: 93.955 ns/op
Iteration   3: 93.203 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetHit":
  93.550 ±(99.9%) 6.924 ns/op [Average]
  (min, avg, max) = (93.203, 93.550, 93.955), stdev = 0.380
  CI (99.9%): [86.627, 100.474] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000)

# Run progress: 18.75% complete, ETA 00:19:40
# Fork: 1 of 1
# Warmup Iteration   1: 81.916 ns/op
# Warmup Iteration   2: 78.761 ns/op
Iteration   1: 74.388 ns/op
Iteration   2: 73.694 ns/op
Iteration   3: 73.781 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  73.954 ±(99.9%) 6.898 ns/op [Average]
  (min, avg, max) = (73.694, 73.954, 74.388), stdev = 0.378
  CI (99.9%): [67.056, 80.853] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 10000)

# Run progress: 20.31% complete, ETA 00:19:13
# Fork: 1 of 1
# Warmup Iteration   1: 89.092 ns/op
# Warmup Iteration   2: 86.760 ns/op
Iteration   1: 85.561 ns/op
Iteration   2: 85.793 ns/op
Iteration   3: 86.693 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  86.016 ±(99.9%) 10.906 ns/op [Average]
  (min, avg, max) = (85.561, 86.016, 86.693), stdev = 0.598
  CI (99.9%): [75.110, 96.922] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 100000)

# Run progress: 21.88% complete, ETA 00:18:47
# Fork: 1 of 1
# Warmup Iteration   1: 81.660 ns/op
# Warmup Iteration   2: 77.663 ns/op
Iteration   1: 72.677 ns/op
Iteration   2: 72.749 ns/op
Iteration   3: 72.759 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  72.728 ±(99.9%) 0.816 ns/op [Average]
  (min, avg, max) = (72.677, 72.728, 72.759), stdev = 0.045
  CI (99.9%): [71.913, 73.544] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss
# Parameters: (size = 1000000)

# Run progress: 23.44% complete, ETA 00:18:24
# Fork: 1 of 1
# Warmup Iteration   1: 85.995 ns/op
# Warmup Iteration   2: 78.644 ns/op
Iteration   1: 74.871 ns/op
Iteration   2: 75.109 ns/op
Iteration   3: 74.932 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaSetMiss":
  74.971 ±(99.9%) 2.257 ns/op [Average]
  (min, avg, max) = (74.871, 74.971, 75.109), stdev = 0.124
  CI (99.9%): [72.713, 77.228] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000)

# Run progress: 25.00% complete, ETA 00:18:09
# Fork: 1 of 1
# Warmup Iteration   1: 244.975 ns/op
# Warmup Iteration   2: 236.147 ns/op
Iteration   1: 228.078 ns/op
Iteration   2: 229.446 ns/op
Iteration   3: 227.736 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  228.420 ±(99.9%) 16.506 ns/op [Average]
  (min, avg, max) = (227.736, 228.420, 229.446), stdev = 0.905
  CI (99.9%): [211.914, 244.925] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 10000)

# Run progress: 26.56% complete, ETA 00:17:44
# Fork: 1 of 1
# Warmup Iteration   1: 260.871 ns/op
# Warmup Iteration   2: 257.657 ns/op
Iteration   1: 251.645 ns/op
Iteration   2: 253.210 ns/op
Iteration   3: 251.711 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  252.189 ±(99.9%) 16.143 ns/op [Average]
  (min, avg, max) = (251.645, 252.189, 253.210), stdev = 0.885
  CI (99.9%): [236.046, 268.332] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 100000)

# Run progress: 28.13% complete, ETA 00:17:19
# Fork: 1 of 1
# Warmup Iteration   1: 268.061 ns/op
# Warmup Iteration   2: 255.765 ns/op
Iteration   1: 255.694 ns/op
Iteration   2: 252.654 ns/op
Iteration   3: 254.776 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  254.374 ±(99.9%) 28.448 ns/op [Average]
  (min, avg, max) = (252.654, 254.374, 255.694), stdev = 1.559
  CI (99.9%): [225.927, 282.822] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit
# Parameters: (size = 1000000)

# Run progress: 29.69% complete, ETA 00:16:55
# Fork: 1 of 1
# Warmup Iteration   1: 284.298 ns/op
# Warmup Iteration   2: 255.884 ns/op
Iteration   1: 248.033 ns/op
Iteration   2: 248.593 ns/op
Iteration   3: 251.015 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapHit":
  249.214 ±(99.9%) 28.915 ns/op [Average]
  (min, avg, max) = (248.033, 249.214, 251.015), stdev = 1.585
  CI (99.9%): [220.299, 278.128] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000)

# Run progress: 31.25% complete, ETA 00:16:38
# Fork: 1 of 1
# Warmup Iteration   1: 271.171 ns/op
# Warmup Iteration   2: 265.232 ns/op
Iteration   1: 257.013 ns/op
Iteration   2: 258.515 ns/op
Iteration   3: 260.082 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  258.536 ±(99.9%) 27.995 ns/op [Average]
  (min, avg, max) = (257.013, 258.536, 260.082), stdev = 1.535
  CI (99.9%): [230.541, 286.532] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 10000)

# Run progress: 32.81% complete, ETA 00:16:13
# Fork: 1 of 1
# Warmup Iteration   1: 314.162 ns/op
# Warmup Iteration   2: 308.435 ns/op
Iteration   1: 299.351 ns/op
Iteration   2: 300.132 ns/op
Iteration   3: 304.207 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  301.230 ±(99.9%) 47.571 ns/op [Average]
  (min, avg, max) = (299.351, 301.230, 304.207), stdev = 2.608
  CI (99.9%): [253.658, 348.801] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 100000)

# Run progress: 34.38% complete, ETA 00:15:49
# Fork: 1 of 1
# Warmup Iteration   1: 321.299 ns/op
# Warmup Iteration   2: 309.009 ns/op
Iteration   1: 302.282 ns/op
Iteration   2: 309.932 ns/op
Iteration   3: 303.035 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  305.083 ±(99.9%) 76.918 ns/op [Average]
  (min, avg, max) = (302.282, 305.083, 309.932), stdev = 4.216
  CI (99.9%): [228.165, 382.001] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss
# Parameters: (size = 1000000)

# Run progress: 35.94% complete, ETA 00:15:25
# Fork: 1 of 1
# Warmup Iteration   1: 360.959 ns/op
# Warmup Iteration   2: 330.206 ns/op
Iteration   1: 329.638 ns/op
Iteration   2: 331.195 ns/op
Iteration   3: 329.020 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss":
  329.951 ±(99.9%) 20.451 ns/op [Average]
  (min, avg, max) = (329.020, 329.951, 331.195), stdev = 1.121
  CI (99.9%): [309.500, 350.402] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000)

# Run progress: 37.50% complete, ETA 00:15:07
# Fork: 1 of 1
# Warmup Iteration   1: 98.371 ns/op
# Warmup Iteration   2: 93.181 ns/op
Iteration   1: 90.707 ns/op
Iteration   2: 90.674 ns/op
Iteration   3: 91.276 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  90.885 ±(99.9%) 6.172 ns/op [Average]
  (min, avg, max) = (90.674, 90.885, 91.276), stdev = 0.338
  CI (99.9%): [84.714, 97.057] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 10000)

# Run progress: 39.06% complete, ETA 00:14:43
# Fork: 1 of 1
# Warmup Iteration   1: 98.369 ns/op
# Warmup Iteration   2: 96.978 ns/op
Iteration   1: 97.506 ns/op
Iteration   2: 98.296 ns/op
Iteration   3: 99.941 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  98.581 ±(99.9%) 22.660 ns/op [Average]
  (min, avg, max) = (97.506, 98.581, 99.941), stdev = 1.242
  CI (99.9%): [75.921, 121.241] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 100000)

# Run progress: 40.63% complete, ETA 00:14:19
# Fork: 1 of 1
# Warmup Iteration   1: 104.638 ns/op
# Warmup Iteration   2: 97.681 ns/op
Iteration   1: 93.055 ns/op
Iteration   2: 92.466 ns/op
Iteration   3: 92.208 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  92.576 ±(99.9%) 7.914 ns/op [Average]
  (min, avg, max) = (92.208, 92.576, 93.055), stdev = 0.434
  CI (99.9%): [84.662, 100.490] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit
# Parameters: (size = 1000000)

# Run progress: 42.19% complete, ETA 00:13:56
# Fork: 1 of 1
# Warmup Iteration   1: 106.694 ns/op
# Warmup Iteration   2: 94.682 ns/op
Iteration   1: 90.451 ns/op
Iteration   2: 90.344 ns/op
Iteration   3: 91.124 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetHit":
  90.640 ±(99.9%) 7.712 ns/op [Average]
  (min, avg, max) = (90.344, 90.640, 91.124), stdev = 0.423
  CI (99.9%): [82.927, 98.352] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000)

# Run progress: 43.75% complete, ETA 00:13:37
# Fork: 1 of 1
# Warmup Iteration   1: 89.384 ns/op
# Warmup Iteration   2: 85.037 ns/op
Iteration   1: 81.190 ns/op
Iteration   2: 81.172 ns/op
Iteration   3: 81.066 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  81.143 ±(99.9%) 1.220 ns/op [Average]
  (min, avg, max) = (81.066, 81.143, 81.190), stdev = 0.067
  CI (99.9%): [79.922, 82.363] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 10000)

# Run progress: 45.31% complete, ETA 00:13:13
# Fork: 1 of 1
# Warmup Iteration   1: 100.401 ns/op
# Warmup Iteration   2: 98.089 ns/op
Iteration   1: 94.091 ns/op
Iteration   2: 94.057 ns/op
Iteration   3: 94.130 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  94.093 ±(99.9%) 0.669 ns/op [Average]
  (min, avg, max) = (94.057, 94.093, 94.130), stdev = 0.037
  CI (99.9%): [93.423, 94.762] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 100000)

# Run progress: 46.88% complete, ETA 00:12:49
# Fork: 1 of 1
# Warmup Iteration   1: 87.704 ns/op
# Warmup Iteration   2: 82.794 ns/op
Iteration   1: 78.770 ns/op
Iteration   2: 79.044 ns/op
Iteration   3: 78.436 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  78.750 ±(99.9%) 5.552 ns/op [Average]
  (min, avg, max) = (78.436, 78.750, 79.044), stdev = 0.304
  CI (99.9%): [73.198, 84.302] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss
# Parameters: (size = 1000000)

# Run progress: 48.44% complete, ETA 00:12:26
# Fork: 1 of 1
# Warmup Iteration   1: 94.106 ns/op
# Warmup Iteration   2: 86.789 ns/op
Iteration   1: 82.348 ns/op
Iteration   2: 81.770 ns/op
Iteration   3: 82.000 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss":
  82.039 ±(99.9%) 5.310 ns/op [Average]
  (min, avg, max) = (81.770, 82.039, 82.348), stdev = 0.291
  CI (99.9%): [76.729, 87.349] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000)

# Run progress: 50.00% complete, ETA 00:12:06
# Fork: 1 of 1
# Warmup Iteration   1: 301.231 ns/op
# Warmup Iteration   2: 291.982 ns/op
Iteration   1: 288.848 ns/op
Iteration   2: 286.277 ns/op
Iteration   3: 290.598 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  288.575 ±(99.9%) 39.656 ns/op [Average]
  (min, avg, max) = (286.277, 288.575, 290.598), stdev = 2.174
  CI (99.9%): [248.919, 328.230] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 10000)

# Run progress: 51.56% complete, ETA 00:11:42
# Fork: 1 of 1
# Warmup Iteration   1: 347.881 ns/op
# Warmup Iteration   2: 343.939 ns/op
Iteration   1: 342.058 ns/op
Iteration   2: 341.383 ns/op
Iteration   3: 343.163 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  342.201 ±(99.9%) 16.388 ns/op [Average]
  (min, avg, max) = (341.383, 342.201, 343.163), stdev = 0.898
  CI (99.9%): [325.813, 358.590] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 100000)

# Run progress: 53.13% complete, ETA 00:11:19
# Fork: 1 of 1
# Warmup Iteration   1: 459.191 ns/op
# Warmup Iteration   2: 435.447 ns/op
Iteration   1: 433.117 ns/op
Iteration   2: 431.981 ns/op
Iteration   3: 435.392 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  433.497 ±(99.9%) 31.690 ns/op [Average]
  (min, avg, max) = (431.981, 433.497, 435.392), stdev = 1.737
  CI (99.9%): [401.807, 465.187] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit
# Parameters: (size = 1000000)

# Run progress: 54.69% complete, ETA 00:10:56
# Fork: 1 of 1
# Warmup Iteration   1: 479.341 ns/op
# Warmup Iteration   2: 430.819 ns/op
Iteration   1: 425.606 ns/op
Iteration   2: 426.497 ns/op
Iteration   3: 426.499 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapHit":
  426.200 ±(99.9%) 9.396 ns/op [Average]
  (min, avg, max) = (425.606, 426.200, 426.499), stdev = 0.515
  CI (99.9%): [416.804, 435.597] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000)

# Run progress: 56.25% complete, ETA 00:10:35
# Fork: 1 of 1
# Warmup Iteration   1: 185.798 ns/op
# Warmup Iteration   2: 178.710 ns/op
Iteration   1: 173.845 ns/op
Iteration   2: 173.995 ns/op
Iteration   3: 174.973 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  174.271 ±(99.9%) 11.179 ns/op [Average]
  (min, avg, max) = (173.845, 174.271, 174.973), stdev = 0.613
  CI (99.9%): [163.092, 185.450] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 10000)

# Run progress: 57.81% complete, ETA 00:10:12
# Fork: 1 of 1
# Warmup Iteration   1: 240.942 ns/op
# Warmup Iteration   2: 226.107 ns/op
Iteration   1: 217.355 ns/op
Iteration   2: 217.344 ns/op
Iteration   3: 217.065 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  217.254 ±(99.9%) 2.996 ns/op [Average]
  (min, avg, max) = (217.065, 217.254, 217.355), stdev = 0.164
  CI (99.9%): [214.258, 220.251] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 100000)

# Run progress: 59.38% complete, ETA 00:09:48
# Fork: 1 of 1
# Warmup Iteration   1: 310.454 ns/op
# Warmup Iteration   2: 304.109 ns/op
Iteration   1: 297.449 ns/op
Iteration   2: 297.975 ns/op
Iteration   3: 297.621 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  297.682 ±(99.9%) 4.890 ns/op [Average]
  (min, avg, max) = (297.449, 297.682, 297.975), stdev = 0.268
  CI (99.9%): [292.792, 302.572] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss
# Parameters: (size = 1000000)

# Run progress: 60.94% complete, ETA 00:09:25
# Fork: 1 of 1
# Warmup Iteration   1: 389.301 ns/op
# Warmup Iteration   2: 378.787 ns/op
Iteration   1: 349.528 ns/op
Iteration   2: 349.362 ns/op
Iteration   3: 349.858 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMapMiss":
  349.583 ±(99.9%) 4.606 ns/op [Average]
  (min, avg, max) = (349.362, 349.583, 349.858), stdev = 0.252
  CI (99.9%): [344.977, 354.189] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000)

# Run progress: 62.50% complete, ETA 00:09:04
# Fork: 1 of 1
# Warmup Iteration   1: 230.503 ns/op
# Warmup Iteration   2: 220.124 ns/op
Iteration   1: 215.762 ns/op
Iteration   2: 218.104 ns/op
Iteration   3: 222.578 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  218.815 ±(99.9%) 63.174 ns/op [Average]
  (min, avg, max) = (215.762, 218.815, 222.578), stdev = 3.463
  CI (99.9%): [155.641, 281.988] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 10000)

# Run progress: 64.06% complete, ETA 00:08:41
# Fork: 1 of 1
# Warmup Iteration   1: 245.175 ns/op
# Warmup Iteration   2: 249.376 ns/op
Iteration   1: 223.591 ns/op
Iteration   2: 225.399 ns/op
Iteration   3: 224.084 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  224.358 ±(99.9%) 17.056 ns/op [Average]
  (min, avg, max) = (223.591, 224.358, 225.399), stdev = 0.935
  CI (99.9%): [207.302, 241.414] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 100000)

# Run progress: 65.63% complete, ETA 00:08:18
# Fork: 1 of 1
# Warmup Iteration   1: 261.179 ns/op
# Warmup Iteration   2: 253.544 ns/op
Iteration   1: 235.281 ns/op
Iteration   2: 234.559 ns/op
Iteration   3: 234.165 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  234.668 ±(99.9%) 10.319 ns/op [Average]
  (min, avg, max) = (234.165, 234.668, 235.281), stdev = 0.566
  CI (99.9%): [224.349, 244.988] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit
# Parameters: (size = 1000000)

# Run progress: 67.19% complete, ETA 00:07:55
# Fork: 1 of 1
# Warmup Iteration   1: 266.001 ns/op
# Warmup Iteration   2: 237.642 ns/op
Iteration   1: 223.776 ns/op
Iteration   2: 222.733 ns/op
Iteration   3: 223.146 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapHit":
  223.218 ±(99.9%) 9.582 ns/op [Average]
  (min, avg, max) = (222.733, 223.218, 223.776), stdev = 0.525
  CI (99.9%): [213.636, 232.800] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000)

# Run progress: 68.75% complete, ETA 00:07:33
# Fork: 1 of 1
# Warmup Iteration   1: 160.141 ns/op
# Warmup Iteration   2: 152.757 ns/op
Iteration   1: 138.762 ns/op
Iteration   2: 138.623 ns/op
Iteration   3: 138.521 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  138.635 ±(99.9%) 2.211 ns/op [Average]
  (min, avg, max) = (138.521, 138.635, 138.762), stdev = 0.121
  CI (99.9%): [136.424, 140.846] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 10000)

# Run progress: 70.31% complete, ETA 00:07:10
# Fork: 1 of 1
# Warmup Iteration   1: 161.757 ns/op
# Warmup Iteration   2: 168.382 ns/op
Iteration   1: 153.743 ns/op
Iteration   2: 154.964 ns/op
Iteration   3: 153.638 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  154.115 ±(99.9%) 13.443 ns/op [Average]
  (min, avg, max) = (153.638, 154.115, 154.964), stdev = 0.737
  CI (99.9%): [140.672, 167.558] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 100000)

# Run progress: 71.88% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: 184.852 ns/op
# Warmup Iteration   2: 182.649 ns/op
Iteration   1: 169.955 ns/op
Iteration   2: 172.275 ns/op
Iteration   3: 169.919 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  170.716 ±(99.9%) 24.628 ns/op [Average]
  (min, avg, max) = (169.919, 170.716, 172.275), stdev = 1.350
  CI (99.9%): [146.088, 195.344] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss
# Parameters: (size = 1000000)

# Run progress: 73.44% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: 177.141 ns/op
# Warmup Iteration   2: 157.629 ns/op
Iteration   1: 153.264 ns/op
Iteration   2: 153.386 ns/op
Iteration   3: 153.428 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss":
  153.359 ±(99.9%) 1.556 ns/op [Average]
  (min, avg, max) = (153.264, 153.359, 153.428), stdev = 0.085
  CI (99.9%): [151.804, 154.915] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000)

# Run progress: 75.00% complete, ETA 00:06:03
# Fork: 1 of 1
# Warmup Iteration   1: 5361.724 ns/op
# Warmup Iteration   2: 5370.598 ns/op
Iteration   1: 6004.278 ns/op
Iteration   2: 5967.878 ns/op
Iteration   3: 5834.890 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  5935.682 ±(99.9%) 1626.716 ns/op [Average]
  (min, avg, max) = (5834.890, 5935.682, 6004.278), stdev = 89.166
  CI (99.9%): [4308.966, 7562.398] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 10000)

# Run progress: 76.56% complete, ETA 00:05:40
# Fork: 1 of 1
# Warmup Iteration   1: 5291.717 ns/op
# Warmup Iteration   2: 5336.971 ns/op
Iteration   1: 5709.875 ns/op
Iteration   2: 5738.183 ns/op
Iteration   3: 5796.446 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  5748.168 ±(99.9%) 805.295 ns/op [Average]
  (min, avg, max) = (5709.875, 5748.168, 5796.446), stdev = 44.141
  CI (99.9%): [4942.873, 6553.463] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 100000)

# Run progress: 78.13% complete, ETA 00:05:17
# Fork: 1 of 1
# Warmup Iteration   1: 174.479 ns/op
# Warmup Iteration   2: 164.245 ns/op
Iteration   1: 158.806 ns/op
Iteration   2: 161.181 ns/op
Iteration   3: 158.260 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  159.416 ±(99.9%) 28.336 ns/op [Average]
  (min, avg, max) = (158.260, 159.416, 161.181), stdev = 1.553
  CI (99.9%): [131.079, 187.752] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit
# Parameters: (size = 1000000)

# Run progress: 79.69% complete, ETA 00:04:54
# Fork: 1 of 1
# Warmup Iteration   1: 4804.629 ns/op
# Warmup Iteration   2: 5075.883 ns/op
Iteration   1: 5408.428 ns/op
Iteration   2: 4651.828 ns/op
Iteration   3: 4686.417 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetHit":
  4915.558 ±(99.9%) 7793.499 ns/op [Average]
  (min, avg, max) = (4651.828, 4915.558, 5408.428), stdev = 427.188
  CI (99.9%): [≈ 0, 12709.057] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000)

# Run progress: 81.25% complete, ETA 00:04:32
# Fork: 1 of 1
# Warmup Iteration   1: 4859.242 ns/op
# Warmup Iteration   2: 5014.568 ns/op
Iteration   1: 5379.293 ns/op
Iteration   2: 5261.342 ns/op
Iteration   3: 5010.579 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  5217.072 ±(99.9%) 3435.320 ns/op [Average]
  (min, avg, max) = (5010.579, 5217.072, 5379.293), stdev = 188.301
  CI (99.9%): [1781.751, 8652.392] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 10000)

# Run progress: 82.81% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: 5342.026 ns/op
# Warmup Iteration   2: 5561.510 ns/op
Iteration   1: 6075.685 ns/op
Iteration   2: 6280.870 ns/op
Iteration   3: 6380.714 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  6245.757 ±(99.9%) 2837.201 ns/op [Average]
  (min, avg, max) = (6075.685, 6245.757, 6380.714), stdev = 155.517
  CI (99.9%): [3408.556, 9082.957] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 100000)

# Run progress: 84.38% complete, ETA 00:03:46
# Fork: 1 of 1
# Warmup Iteration   1: 5016.496 ns/op
# Warmup Iteration   2: 5096.979 ns/op
Iteration   1: 5298.820 ns/op
Iteration   2: 5107.718 ns/op
Iteration   3: 4917.900 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  5108.146 ±(99.9%) 3474.712 ns/op [Average]
  (min, avg, max) = (4917.900, 5108.146, 5298.820), stdev = 190.461
  CI (99.9%): [1633.434, 8582.858] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss
# Parameters: (size = 1000000)

# Run progress: 85.94% complete, ETA 00:03:23
# Fork: 1 of 1
# Warmup Iteration   1: 5207.784 ns/op
# Warmup Iteration   2: 4928.263 ns/op
Iteration   1: 6296.517 ns/op
Iteration   2: 5179.544 ns/op
Iteration   3: 5137.850 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss":
  5537.970 ±(99.9%) 11990.709 ns/op [Average]
  (min, avg, max) = (5137.850, 5537.970, 6296.517), stdev = 657.251
  CI (99.9%): [≈ 0, 17528.680] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000)

# Run progress: 87.50% complete, ETA 00:03:01
# Fork: 1 of 1
# Warmup Iteration   1: 306.042 ns/op
# Warmup Iteration   2: 296.279 ns/op
Iteration   1: 289.323 ns/op
Iteration   2: 289.444 ns/op
Iteration   3: 289.405 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  289.391 ±(99.9%) 1.128 ns/op [Average]
  (min, avg, max) = (289.323, 289.391, 289.444), stdev = 0.062
  CI (99.9%): [288.263, 290.518] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 10000)

# Run progress: 89.06% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: 321.754 ns/op
# Warmup Iteration   2: 312.988 ns/op
Iteration   1: 310.831 ns/op
Iteration   2: 311.802 ns/op
Iteration   3: 309.544 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  310.725 ±(99.9%) 20.662 ns/op [Average]
  (min, avg, max) = (309.544, 310.725, 311.802), stdev = 1.133
  CI (99.9%): [290.063, 331.388] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 100000)

# Run progress: 90.63% complete, ETA 00:02:15
# Fork: 1 of 1
# Warmup Iteration   1: 399.042 ns/op
# Warmup Iteration   2: 385.255 ns/op
Iteration   1: 378.174 ns/op
Iteration   2: 379.261 ns/op
Iteration   3: 378.993 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  378.809 ±(99.9%) 10.332 ns/op [Average]
  (min, avg, max) = (378.174, 378.809, 379.261), stdev = 0.566
  CI (99.9%): [368.477, 389.141] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit
# Parameters: (size = 1000000)

# Run progress: 92.19% complete, ETA 00:01:53
# Fork: 1 of 1
# Warmup Iteration   1: 531.896 ns/op
# Warmup Iteration   2: 505.345 ns/op
Iteration   1: 481.579 ns/op
Iteration   2: 480.738 ns/op
Iteration   3: 477.881 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetHit":
  480.066 ±(99.9%) 35.364 ns/op [Average]
  (min, avg, max) = (477.881, 480.066, 481.579), stdev = 1.938
  CI (99.9%): [444.702, 515.430] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000)

# Run progress: 93.75% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 190.903 ns/op
# Warmup Iteration   2: 183.718 ns/op
Iteration   1: 179.182 ns/op
Iteration   2: 179.391 ns/op
Iteration   3: 181.535 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  180.036 ±(99.9%) 23.763 ns/op [Average]
  (min, avg, max) = (179.182, 180.036, 181.535), stdev = 1.303
  CI (99.9%): [156.273, 203.799] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 10000)

# Run progress: 95.31% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 254.796 ns/op
# Warmup Iteration   2: 250.447 ns/op
Iteration   1: 238.985 ns/op
Iteration   2: 242.492 ns/op
Iteration   3: 239.225 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  240.234 ±(99.9%) 35.744 ns/op [Average]
  (min, avg, max) = (238.985, 240.234, 242.492), stdev = 1.959
  CI (99.9%): [204.490, 275.978] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 100000)

# Run progress: 96.88% complete, ETA 00:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 273.431 ns/op
# Warmup Iteration   2: 267.373 ns/op
Iteration   1: 258.765 ns/op
Iteration   2: 263.601 ns/op
Iteration   3: 258.900 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  260.422 ±(99.9%) 50.239 ns/op [Average]
  (min, avg, max) = (258.765, 260.422, 263.601), stdev = 2.754
  CI (99.9%): [210.183, 310.661] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.3, VM 17.0.3+7-Ubuntu-0ubuntu0.22.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss
# Parameters: (size = 1000000)

# Run progress: 98.44% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 400.750 ns/op
# Warmup Iteration   2: 360.144 ns/op
Iteration   1: 356.280 ns/op
Iteration   2: 356.406 ns/op
Iteration   3: 355.683 ns/op


Result "com.komanov.collection.jmh.SetMapJavaVsScalaBenchmarks.scalaSetMiss":
  356.123 ±(99.9%) 7.046 ns/op [Average]
  (min, avg, max) = (355.683, 356.123, 356.406), stdev = 0.386
  CI (99.9%): [349.077, 363.169] (assumes normal distribution)


# Run complete. Total time: 00:24:12

Benchmark                                         (size)  Mode  Cnt     Score       Error  Units
SetMapJavaVsScalaBenchmarks.javaMapHit              1000  avgt    3    91.953 ±     2.520  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit             10000  avgt    3   101.472 ±     3.056  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit            100000  avgt    3   101.844 ±    21.525  ns/op
SetMapJavaVsScalaBenchmarks.javaMapHit           1000000  avgt    3   116.581 ±     1.746  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss             1000  avgt    3    75.977 ±     4.286  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss            10000  avgt    3    82.319 ±    10.456  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss           100000  avgt    3    78.160 ±     2.414  ns/op
SetMapJavaVsScalaBenchmarks.javaMapMiss          1000000  avgt    3    81.489 ±     1.593  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit              1000  avgt    3    79.668 ±     9.960  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit             10000  avgt    3    95.296 ±    15.936  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit            100000  avgt    3    79.904 ±     5.628  ns/op
SetMapJavaVsScalaBenchmarks.javaSetHit           1000000  avgt    3    93.550 ±     6.924  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss             1000  avgt    3    73.954 ±     6.898  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss            10000  avgt    3    86.016 ±    10.906  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss           100000  avgt    3    72.728 ±     0.816  ns/op
SetMapJavaVsScalaBenchmarks.javaSetMiss          1000000  avgt    3    74.971 ±     2.257  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit       1000  avgt    3   228.420 ±    16.506  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit      10000  avgt    3   252.189 ±    16.143  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit     100000  avgt    3   254.374 ±    28.448  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapHit    1000000  avgt    3   249.214 ±    28.915  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss      1000  avgt    3   258.536 ±    27.995  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss     10000  avgt    3   301.230 ±    47.571  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss    100000  avgt    3   305.083 ±    76.918  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedMapMiss   1000000  avgt    3   329.951 ±    20.451  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit       1000  avgt    3    90.885 ±     6.172  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit      10000  avgt    3    98.581 ±    22.660  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit     100000  avgt    3    92.576 ±     7.914  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetHit    1000000  avgt    3    90.640 ±     7.712  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss      1000  avgt    3    81.143 ±     1.220  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss     10000  avgt    3    94.093 ±     0.669  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss    100000  avgt    3    78.750 ±     5.552  ns/op
SetMapJavaVsScalaBenchmarks.javaWrappedSetMiss   1000000  avgt    3    82.039 ±     5.310  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit             1000  avgt    3   288.575 ±    39.656  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit            10000  avgt    3   342.201 ±    16.388  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit           100000  avgt    3   433.497 ±    31.690  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapHit          1000000  avgt    3   426.200 ±     9.396  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss            1000  avgt    3   174.271 ±    11.179  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss           10000  avgt    3   217.254 ±     2.996  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss          100000  avgt    3   297.682 ±     4.890  ns/op
SetMapJavaVsScalaBenchmarks.scalaMapMiss         1000000  avgt    3   349.583 ±     4.606  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit      1000  avgt    3   218.815 ±    63.174  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit     10000  avgt    3   224.358 ±    17.056  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit    100000  avgt    3   234.668 ±    10.319  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapHit   1000000  avgt    3   223.218 ±     9.582  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss     1000  avgt    3   138.635 ±     2.211  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss    10000  avgt    3   154.115 ±    13.443  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss   100000  avgt    3   170.716 ±    24.628  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableMapMiss  1000000  avgt    3   153.359 ±     1.556  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit      1000  avgt    3  5935.682 ±  1626.716  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit     10000  avgt    3  5748.168 ±   805.295  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit    100000  avgt    3   159.416 ±    28.336  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetHit   1000000  avgt    3  4915.558 ±  7793.499  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss     1000  avgt    3  5217.072 ±  3435.320  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss    10000  avgt    3  6245.757 ±  2837.201  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss   100000  avgt    3  5108.146 ±  3474.712  ns/op
SetMapJavaVsScalaBenchmarks.scalaMutableSetMiss  1000000  avgt    3  5537.970 ± 11990.709  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit             1000  avgt    3   289.391 ±     1.128  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit            10000  avgt    3   310.725 ±    20.662  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit           100000  avgt    3   378.809 ±    10.332  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetHit          1000000  avgt    3   480.066 ±    35.364  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss            1000  avgt    3   180.036 ±    23.763  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss           10000  avgt    3   240.234 ±    35.744  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss          100000  avgt    3   260.422 ±    50.239  ns/op
SetMapJavaVsScalaBenchmarks.scalaSetMiss         1000000  avgt    3   356.123 ±     7.046  ns/op

Benchmark result is saved to /static/data/charts/set-map-java-vs-scala-2-12/jdk17.json
