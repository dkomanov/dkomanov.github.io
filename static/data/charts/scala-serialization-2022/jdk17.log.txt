# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 0.00% complete, ETA 01:16:30
# Fork: 1 of 1
# Warmup Iteration   1: 196694.439 ns/op
# Warmup Iteration   2: 28403.800 ns/op
# Warmup Iteration   3: 26399.082 ns/op
# Warmup Iteration   4: 26233.379 ns/op
Iteration   1: 25950.125 ns/op
Iteration   2: 26250.696 ns/op
Iteration   3: 25872.338 ns/op
Iteration   4: 25927.620 ns/op
Iteration   5: 25909.034 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  25981.963 ±(99.9%) 588.785 ns/op [Average]
  (min, avg, max) = (25872.338, 25981.963, 26250.696), stdev = 152.906
  CI (99.9%): [25393.178, 26570.747] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 0.20% complete, ETA 01:38:37
# Fork: 1 of 1
# Warmup Iteration   1: 240124.882 ns/op
# Warmup Iteration   2: 57199.533 ns/op
# Warmup Iteration   3: 53529.205 ns/op
# Warmup Iteration   4: 53453.465 ns/op
Iteration   1: 52814.058 ns/op
Iteration   2: 54474.377 ns/op
Iteration   3: 52772.212 ns/op
Iteration   4: 52936.299 ns/op
Iteration   5: 52786.175 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  53156.624 ±(99.9%) 2847.507 ns/op [Average]
  (min, avg, max) = (52772.212, 53156.624, 54474.377), stdev = 739.489
  CI (99.9%): [50309.117, 56004.131] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 0.39% complete, ETA 01:38:41
# Fork: 1 of 1
# Warmup Iteration   1: 1105914.369 ns/op
# Warmup Iteration   2: 154454.265 ns/op
# Warmup Iteration   3: 102213.153 ns/op
# Warmup Iteration   4: 100267.205 ns/op
Iteration   1: 100228.808 ns/op
Iteration   2: 101898.916 ns/op
Iteration   3: 100947.545 ns/op
Iteration   4: 103331.481 ns/op
Iteration   5: 100564.505 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  101394.251 ±(99.9%) 4814.779 ns/op [Average]
  (min, avg, max) = (100228.808, 101394.251, 103331.481), stdev = 1250.383
  CI (99.9%): [96579.472, 106209.030] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 0.59% complete, ETA 01:38:31
# Fork: 1 of 1
# Warmup Iteration   1: 1958436.570 ns/op
# Warmup Iteration   2: 297164.496 ns/op
# Warmup Iteration   3: 233428.595 ns/op
# Warmup Iteration   4: 226867.537 ns/op
Iteration   1: 227560.634 ns/op
Iteration   2: 227927.790 ns/op
Iteration   3: 226914.527 ns/op
Iteration   4: 227169.842 ns/op
Iteration   5: 228229.544 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  227560.468 ±(99.9%) 2066.845 ns/op [Average]
  (min, avg, max) = (226914.527, 227560.468, 228229.544), stdev = 536.753
  CI (99.9%): [225493.622, 229627.313] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 0.78% complete, ETA 01:38:35
# Fork: 1 of 1
# Warmup Iteration   1: 13177585.099 ns/op
# Warmup Iteration   2: 2522625.189 ns/op
# Warmup Iteration   3: 2145947.229 ns/op
# Warmup Iteration   4: 2136239.410 ns/op
Iteration   1: 2166952.365 ns/op
Iteration   2: 2262125.637 ns/op
Iteration   3: 2167352.944 ns/op
Iteration   4: 2137298.421 ns/op
Iteration   5: 2225389.047 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2191823.683 ±(99.9%) 195013.371 ns/op [Average]
  (min, avg, max) = (2137298.421, 2191823.683, 2262125.637), stdev = 50644.353
  CI (99.9%): [1996810.311, 2386837.054] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 0.98% complete, ETA 01:38:25
# Fork: 1 of 1
# Warmup Iteration   1: 114997.474 ns/op
# Warmup Iteration   2: 25025.270 ns/op
# Warmup Iteration   3: 22730.718 ns/op
# Warmup Iteration   4: 22401.673 ns/op
Iteration   1: 22341.319 ns/op
Iteration   2: 22887.752 ns/op
Iteration   3: 22410.484 ns/op
Iteration   4: 22288.846 ns/op
Iteration   5: 22372.520 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  22460.184 ±(99.9%) 936.220 ns/op [Average]
  (min, avg, max) = (22288.846, 22460.184, 22887.752), stdev = 243.133
  CI (99.9%): [21523.964, 23396.404] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 1.18% complete, ETA 01:38:03
# Fork: 1 of 1
# Warmup Iteration   1: 184289.391 ns/op
# Warmup Iteration   2: 52162.586 ns/op
# Warmup Iteration   3: 44176.262 ns/op
# Warmup Iteration   4: 44197.726 ns/op
Iteration   1: 43850.277 ns/op
Iteration   2: 43731.307 ns/op
Iteration   3: 43919.776 ns/op
Iteration   4: 43891.669 ns/op
Iteration   5: 44014.813 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  43881.568 ±(99.9%) 398.655 ns/op [Average]
  (min, avg, max) = (43731.307, 43881.568, 44014.813), stdev = 103.530
  CI (99.9%): [43482.913, 44280.224] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 1.37% complete, ETA 01:37:45
# Fork: 1 of 1
# Warmup Iteration   1: 424578.486 ns/op
# Warmup Iteration   2: 92939.032 ns/op
# Warmup Iteration   3: 86328.437 ns/op
# Warmup Iteration   4: 82157.404 ns/op
Iteration   1: 82374.360 ns/op
Iteration   2: 82596.489 ns/op
Iteration   3: 81625.381 ns/op
Iteration   4: 81677.094 ns/op
Iteration   5: 81727.756 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  82000.216 ±(99.9%) 1737.776 ns/op [Average]
  (min, avg, max) = (81625.381, 82000.216, 82596.489), stdev = 451.295
  CI (99.9%): [80262.440, 83737.992] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 1.57% complete, ETA 01:37:30
# Fork: 1 of 1
# Warmup Iteration   1: 644850.914 ns/op
# Warmup Iteration   2: 189295.100 ns/op
# Warmup Iteration   3: 172160.759 ns/op
# Warmup Iteration   4: 171765.998 ns/op
Iteration   1: 171709.584 ns/op
Iteration   2: 175563.830 ns/op
Iteration   3: 173670.230 ns/op
Iteration   4: 173547.094 ns/op
Iteration   5: 174049.478 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  173708.043 ±(99.9%) 5301.351 ns/op [Average]
  (min, avg, max) = (171709.584, 173708.043, 175563.830), stdev = 1376.744
  CI (99.9%): [168406.692, 179009.394] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 1.76% complete, ETA 01:37:19
# Fork: 1 of 1
# Warmup Iteration   1: 7950937.446 ns/op
# Warmup Iteration   2: 1944037.359 ns/op
# Warmup Iteration   3: 1788470.098 ns/op
# Warmup Iteration   4: 1791075.460 ns/op
Iteration   1: 1785428.150 ns/op
Iteration   2: 1859691.993 ns/op
Iteration   3: 1783521.370 ns/op
Iteration   4: 1787740.386 ns/op
Iteration   5: 1782985.702 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1799873.520 ±(99.9%) 128963.845 ns/op [Average]
  (min, avg, max) = (1782985.702, 1799873.520, 1859691.993), stdev = 33491.501
  CI (99.9%): [1670909.675, 1928837.365] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 1.96% complete, ETA 01:37:06
# Fork: 1 of 1
# Warmup Iteration   1: 153719.155 ns/op
# Warmup Iteration   2: 26704.095 ns/op
# Warmup Iteration   3: 25856.068 ns/op
# Warmup Iteration   4: 23801.797 ns/op
Iteration   1: 23931.974 ns/op
Iteration   2: 23917.194 ns/op
Iteration   3: 24030.971 ns/op
Iteration   4: 23785.942 ns/op
Iteration   5: 23843.413 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  23901.899 ±(99.9%) 358.465 ns/op [Average]
  (min, avg, max) = (23785.942, 23901.899, 24030.971), stdev = 93.092
  CI (99.9%): [23543.433, 24260.364] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 2.16% complete, ETA 01:36:57
# Fork: 1 of 1
# Warmup Iteration   1: 347536.494 ns/op
# Warmup Iteration   2: 55329.867 ns/op
# Warmup Iteration   3: 47985.957 ns/op
# Warmup Iteration   4: 46710.218 ns/op
Iteration   1: 46172.543 ns/op
Iteration   2: 46405.010 ns/op
Iteration   3: 46207.981 ns/op
Iteration   4: 46123.032 ns/op
Iteration   5: 46103.680 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  46202.449 ±(99.9%) 463.752 ns/op [Average]
  (min, avg, max) = (46103.680, 46202.449, 46405.010), stdev = 120.435
  CI (99.9%): [45738.697, 46666.201] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 2.35% complete, ETA 01:36:42
# Fork: 1 of 1
# Warmup Iteration   1: 769889.957 ns/op
# Warmup Iteration   2: 109425.649 ns/op
# Warmup Iteration   3: 94230.174 ns/op
# Warmup Iteration   4: 93187.583 ns/op
Iteration   1: 93683.538 ns/op
Iteration   2: 94114.613 ns/op
Iteration   3: 93286.337 ns/op
Iteration   4: 92605.768 ns/op
Iteration   5: 92422.278 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  93222.507 ±(99.9%) 2745.330 ns/op [Average]
  (min, avg, max) = (92422.278, 93222.507, 94114.613), stdev = 712.954
  CI (99.9%): [90477.177, 95967.837] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 2.55% complete, ETA 01:36:27
# Fork: 1 of 1
# Warmup Iteration   1: 947310.666 ns/op
# Warmup Iteration   2: 230096.239 ns/op
# Warmup Iteration   3: 205292.234 ns/op
# Warmup Iteration   4: 204709.019 ns/op
Iteration   1: 204671.288 ns/op
Iteration   2: 205405.481 ns/op
Iteration   3: 205898.231 ns/op
Iteration   4: 205439.129 ns/op
Iteration   5: 206082.317 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  205499.289 ±(99.9%) 2106.518 ns/op [Average]
  (min, avg, max) = (204671.288, 205499.289, 206082.317), stdev = 547.056
  CI (99.9%): [203392.771, 207605.807] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 2.75% complete, ETA 01:36:22
# Fork: 1 of 1
# Warmup Iteration   1: 9339205.851 ns/op
# Warmup Iteration   2: 2337529.259 ns/op
# Warmup Iteration   3: 2194127.667 ns/op
# Warmup Iteration   4: 2212916.447 ns/op
Iteration   1: 2183661.275 ns/op
Iteration   2: 2178737.850 ns/op
Iteration   3: 2233523.282 ns/op
Iteration   4: 2181110.670 ns/op
Iteration   5: 2181739.415 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  2191754.498 ±(99.9%) 90165.064 ns/op [Average]
  (min, avg, max) = (2178737.850, 2191754.498, 2233523.282), stdev = 23415.581
  CI (99.9%): [2101589.434, 2281919.562] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 2.94% complete, ETA 01:36:13
# Fork: 1 of 1
# Warmup Iteration   1: 17840.679 ns/op
# Warmup Iteration   2: 10960.839 ns/op
# Warmup Iteration   3: 10511.150 ns/op
# Warmup Iteration   4: 10499.717 ns/op
Iteration   1: 10446.205 ns/op
Iteration   2: 10490.614 ns/op
Iteration   3: 10503.430 ns/op
Iteration   4: 10469.082 ns/op
Iteration   5: 10464.327 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  10474.732 ±(99.9%) 86.742 ns/op [Average]
  (min, avg, max) = (10446.205, 10474.732, 10503.430), stdev = 22.527
  CI (99.9%): [10387.989, 10561.474] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 3.14% complete, ETA 01:35:58
# Fork: 1 of 1
# Warmup Iteration   1: 54657.246 ns/op
# Warmup Iteration   2: 22275.298 ns/op
# Warmup Iteration   3: 21166.129 ns/op
# Warmup Iteration   4: 20690.076 ns/op
Iteration   1: 20637.910 ns/op
Iteration   2: 20748.842 ns/op
Iteration   3: 20874.933 ns/op
Iteration   4: 20971.559 ns/op
Iteration   5: 20746.684 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  20795.986 ±(99.9%) 497.238 ns/op [Average]
  (min, avg, max) = (20637.910, 20795.986, 20971.559), stdev = 129.131
  CI (99.9%): [20298.747, 21293.224] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 3.33% complete, ETA 01:35:42
# Fork: 1 of 1
# Warmup Iteration   1: 110050.752 ns/op
# Warmup Iteration   2: 39305.634 ns/op
# Warmup Iteration   3: 37033.684 ns/op
# Warmup Iteration   4: 37643.838 ns/op
Iteration   1: 37308.025 ns/op
Iteration   2: 37170.108 ns/op
Iteration   3: 36913.552 ns/op
Iteration   4: 36667.533 ns/op
Iteration   5: 36699.232 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  36951.690 ±(99.9%) 1090.175 ns/op [Average]
  (min, avg, max) = (36667.533, 36951.690, 37308.025), stdev = 283.115
  CI (99.9%): [35861.515, 38041.865] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 3.53% complete, ETA 01:35:28
# Fork: 1 of 1
# Warmup Iteration   1: 143182.469 ns/op
# Warmup Iteration   2: 73663.779 ns/op
# Warmup Iteration   3: 67450.602 ns/op
# Warmup Iteration   4: 67657.023 ns/op
Iteration   1: 68314.730 ns/op
Iteration   2: 67259.382 ns/op
Iteration   3: 67205.404 ns/op
Iteration   4: 67169.377 ns/op
Iteration   5: 67740.680 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  67537.915 ±(99.9%) 1894.774 ns/op [Average]
  (min, avg, max) = (67169.377, 67537.915, 68314.730), stdev = 492.067
  CI (99.9%): [65643.140, 69432.689] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 3.73% complete, ETA 01:35:15
# Fork: 1 of 1
# Warmup Iteration   1: 1142803.552 ns/op
# Warmup Iteration   2: 625126.652 ns/op
# Warmup Iteration   3: 612351.955 ns/op
# Warmup Iteration   4: 590755.670 ns/op
Iteration   1: 595024.646 ns/op
Iteration   2: 581920.466 ns/op
Iteration   3: 579977.164 ns/op
Iteration   4: 583927.252 ns/op
Iteration   5: 578657.823 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  583901.470 ±(99.9%) 25143.415 ns/op [Average]
  (min, avg, max) = (578657.823, 583901.470, 595024.646), stdev = 6529.665
  CI (99.9%): [558758.055, 609044.885] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 3.92% complete, ETA 01:35:01
# Fork: 1 of 1
# Warmup Iteration   1: 22467.536 ns/op
# Warmup Iteration   2: 6464.066 ns/op
# Warmup Iteration   3: 6108.956 ns/op
# Warmup Iteration   4: 6101.873 ns/op
Iteration   1: 6275.617 ns/op
Iteration   2: 6102.606 ns/op
Iteration   3: 6120.894 ns/op
Iteration   4: 6112.845 ns/op
Iteration   5: 6106.365 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  6143.666 ±(99.9%) 285.292 ns/op [Average]
  (min, avg, max) = (6102.606, 6143.666, 6275.617), stdev = 74.089
  CI (99.9%): [5858.374, 6428.957] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 4.12% complete, ETA 01:34:46
# Fork: 1 of 1
# Warmup Iteration   1: 63853.553 ns/op
# Warmup Iteration   2: 13415.301 ns/op
# Warmup Iteration   3: 13227.521 ns/op
# Warmup Iteration   4: 12558.053 ns/op
Iteration   1: 12453.489 ns/op
Iteration   2: 12498.255 ns/op
Iteration   3: 12466.705 ns/op
Iteration   4: 12536.482 ns/op
Iteration   5: 12491.274 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12489.241 ±(99.9%) 123.330 ns/op [Average]
  (min, avg, max) = (12453.489, 12489.241, 12536.482), stdev = 32.028
  CI (99.9%): [12365.911, 12612.571] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 4.31% complete, ETA 01:34:35
# Fork: 1 of 1
# Warmup Iteration   1: 98886.989 ns/op
# Warmup Iteration   2: 26825.867 ns/op
# Warmup Iteration   3: 22731.227 ns/op
# Warmup Iteration   4: 22512.564 ns/op
Iteration   1: 22476.368 ns/op
Iteration   2: 22510.406 ns/op
Iteration   3: 22695.375 ns/op
Iteration   4: 23555.456 ns/op
Iteration   5: 22524.872 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  22752.495 ±(99.9%) 1758.984 ns/op [Average]
  (min, avg, max) = (22476.368, 22752.495, 23555.456), stdev = 456.803
  CI (99.9%): [20993.511, 24511.480] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 4.51% complete, ETA 01:34:25
# Fork: 1 of 1
# Warmup Iteration   1: 198183.216 ns/op
# Warmup Iteration   2: 61360.023 ns/op
# Warmup Iteration   3: 48885.159 ns/op
# Warmup Iteration   4: 48253.889 ns/op
Iteration   1: 47879.516 ns/op
Iteration   2: 47951.735 ns/op
Iteration   3: 47757.097 ns/op
Iteration   4: 47972.960 ns/op
Iteration   5: 49563.177 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  48224.897 ±(99.9%) 2899.005 ns/op [Average]
  (min, avg, max) = (47757.097, 48224.897, 49563.177), stdev = 752.862
  CI (99.9%): [45325.892, 51123.902] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 4.71% complete, ETA 01:34:11
# Fork: 1 of 1
# Warmup Iteration   1: 1661555.099 ns/op
# Warmup Iteration   2: 633063.851 ns/op
# Warmup Iteration   3: 532191.952 ns/op
# Warmup Iteration   4: 513585.775 ns/op
Iteration   1: 496120.194 ns/op
Iteration   2: 493506.226 ns/op
Iteration   3: 495531.347 ns/op
Iteration   4: 493309.217 ns/op
Iteration   5: 495897.099 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  494872.816 ±(99.9%) 5220.136 ns/op [Average]
  (min, avg, max) = (493309.217, 494872.816, 496120.194), stdev = 1355.653
  CI (99.9%): [489652.680, 500092.953] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 4.90% complete, ETA 01:33:59
# Fork: 1 of 1
# Warmup Iteration   1: 34602.030 ns/op
# Warmup Iteration   2: 11606.536 ns/op
# Warmup Iteration   3: 11168.478 ns/op
# Warmup Iteration   4: 11352.806 ns/op
Iteration   1: 11005.437 ns/op
Iteration   2: 10969.127 ns/op
Iteration   3: 10961.045 ns/op
Iteration   4: 10978.431 ns/op
Iteration   5: 10975.549 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  10977.918 ±(99.9%) 64.581 ns/op [Average]
  (min, avg, max) = (10961.045, 10977.918, 11005.437), stdev = 16.771
  CI (99.9%): [10913.337, 11042.499] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 5.10% complete, ETA 01:33:44
# Fork: 1 of 1
# Warmup Iteration   1: 64118.648 ns/op
# Warmup Iteration   2: 22566.348 ns/op
# Warmup Iteration   3: 21797.350 ns/op
# Warmup Iteration   4: 22565.871 ns/op
Iteration   1: 21384.551 ns/op
Iteration   2: 21425.085 ns/op
Iteration   3: 21354.619 ns/op
Iteration   4: 21684.130 ns/op
Iteration   5: 21345.728 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  21438.823 ±(99.9%) 541.376 ns/op [Average]
  (min, avg, max) = (21345.728, 21438.823, 21684.130), stdev = 140.594
  CI (99.9%): [20897.446, 21980.199] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 5.29% complete, ETA 01:33:32
# Fork: 1 of 1
# Warmup Iteration   1: 115137.909 ns/op
# Warmup Iteration   2: 45540.840 ns/op
# Warmup Iteration   3: 43432.317 ns/op
# Warmup Iteration   4: 43019.842 ns/op
Iteration   1: 43371.931 ns/op
Iteration   2: 44321.037 ns/op
Iteration   3: 43114.050 ns/op
Iteration   4: 42958.312 ns/op
Iteration   5: 42989.818 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  43351.030 ±(99.9%) 2180.135 ns/op [Average]
  (min, avg, max) = (42958.312, 43351.030, 44321.037), stdev = 566.174
  CI (99.9%): [41170.895, 45531.164] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 5.49% complete, ETA 01:33:18
# Fork: 1 of 1
# Warmup Iteration   1: 272736.778 ns/op
# Warmup Iteration   2: 98216.034 ns/op
# Warmup Iteration   3: 94973.009 ns/op
# Warmup Iteration   4: 95445.747 ns/op
Iteration   1: 94210.461 ns/op
Iteration   2: 94111.264 ns/op
Iteration   3: 93189.176 ns/op
Iteration   4: 93397.835 ns/op
Iteration   5: 93271.431 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  93636.033 ±(99.9%) 1871.792 ns/op [Average]
  (min, avg, max) = (93189.176, 93636.033, 94210.461), stdev = 486.098
  CI (99.9%): [91764.242, 95507.825] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 5.69% complete, ETA 01:33:05
# Fork: 1 of 1
# Warmup Iteration   1: 2058891.310 ns/op
# Warmup Iteration   2: 996151.721 ns/op
# Warmup Iteration   3: 992111.715 ns/op
# Warmup Iteration   4: 1045541.572 ns/op
Iteration   1: 966496.343 ns/op
Iteration   2: 946132.568 ns/op
Iteration   3: 960360.272 ns/op
Iteration   4: 949215.906 ns/op
Iteration   5: 974643.247 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  959369.667 ±(99.9%) 45698.429 ns/op [Average]
  (min, avg, max) = (946132.568, 959369.667, 974643.247), stdev = 11867.737
  CI (99.9%): [913671.238, 1005068.096] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 5.88% complete, ETA 01:32:54
# Fork: 1 of 1
# Warmup Iteration   1: 536533.110 ns/op
# Warmup Iteration   2: 224244.335 ns/op
# Warmup Iteration   3: 133514.659 ns/op
# Warmup Iteration   4: 133167.043 ns/op
Iteration   1: 132676.093 ns/op
Iteration   2: 132892.428 ns/op
Iteration   3: 133537.733 ns/op
Iteration   4: 133141.035 ns/op
Iteration   5: 133217.109 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  133092.880 ±(99.9%) 1261.840 ns/op [Average]
  (min, avg, max) = (132676.093, 133092.880, 133537.733), stdev = 327.696
  CI (99.9%): [131831.040, 134354.719] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 6.08% complete, ETA 01:32:44
# Fork: 1 of 1
# Warmup Iteration   1: 882719.348 ns/op
# Warmup Iteration   2: 425239.772 ns/op
# Warmup Iteration   3: 254192.321 ns/op
# Warmup Iteration   4: 247912.748 ns/op
Iteration   1: 244282.135 ns/op
Iteration   2: 250385.414 ns/op
Iteration   3: 252354.982 ns/op
Iteration   4: 245377.069 ns/op
Iteration   5: 246486.661 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  247777.252 ±(99.9%) 13255.455 ns/op [Average]
  (min, avg, max) = (244282.135, 247777.252, 252354.982), stdev = 3442.400
  CI (99.9%): [234521.797, 261032.707] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 6.27% complete, ETA 01:32:30
# Fork: 1 of 1
# Warmup Iteration   1: 1934200.791 ns/op
# Warmup Iteration   2: 696661.478 ns/op
# Warmup Iteration   3: 575985.097 ns/op
# Warmup Iteration   4: 570754.039 ns/op
Iteration   1: 568158.887 ns/op
Iteration   2: 568490.107 ns/op
Iteration   3: 570103.110 ns/op
Iteration   4: 568921.644 ns/op
Iteration   5: 582919.431 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  571718.636 ±(99.9%) 24276.326 ns/op [Average]
  (min, avg, max) = (568158.887, 571718.636, 582919.431), stdev = 6304.485
  CI (99.9%): [547442.310, 595994.961] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 6.47% complete, ETA 01:32:17
# Fork: 1 of 1
# Warmup Iteration   1: 4933746.947 ns/op
# Warmup Iteration   2: 2407650.183 ns/op
# Warmup Iteration   3: 1440503.964 ns/op
# Warmup Iteration   4: 1420279.245 ns/op
Iteration   1: 1368077.079 ns/op
Iteration   2: 1367300.547 ns/op
Iteration   3: 1366763.026 ns/op
Iteration   4: 1411009.487 ns/op
Iteration   5: 1355094.738 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1373648.976 ±(99.9%) 83008.675 ns/op [Average]
  (min, avg, max) = (1355094.738, 1373648.976, 1411009.487), stdev = 21557.089
  CI (99.9%): [1290640.301, 1456657.650] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 6.67% complete, ETA 01:32:04
# Fork: 1 of 1
# Warmup Iteration   1: 32593878.668 ns/op
# Warmup Iteration   2: 14632247.233 ns/op
# Warmup Iteration   3: 12619929.687 ns/op
# Warmup Iteration   4: 12543406.017 ns/op
Iteration   1: 12818639.269 ns/op
Iteration   2: 13258546.420 ns/op
Iteration   3: 12529397.693 ns/op
Iteration   4: 12620053.266 ns/op
Iteration   5: 12501298.019 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12745586.933 ±(99.9%) 1203345.699 ns/op [Average]
  (min, avg, max) = (12501298.019, 12745586.933, 13258546.420), stdev = 312505.057
  CI (99.9%): [11542241.234, 13948932.633] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 6.86% complete, ETA 01:31:54
# Fork: 1 of 1
# Warmup Iteration   1: 15961.397 ns/op
# Warmup Iteration   2: 6110.650 ns/op
# Warmup Iteration   3: 5984.267 ns/op
# Warmup Iteration   4: 6103.752 ns/op
Iteration   1: 5921.271 ns/op
Iteration   2: 6244.964 ns/op
Iteration   3: 5932.101 ns/op
Iteration   4: 5967.607 ns/op
Iteration   5: 5937.917 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  6000.772 ±(99.9%) 529.784 ns/op [Average]
  (min, avg, max) = (5921.271, 6000.772, 6244.964), stdev = 137.583
  CI (99.9%): [5470.988, 6530.556] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 7.06% complete, ETA 01:31:42
# Fork: 1 of 1
# Warmup Iteration   1: 22572.062 ns/op
# Warmup Iteration   2: 11724.893 ns/op
# Warmup Iteration   3: 11204.580 ns/op
# Warmup Iteration   4: 11131.026 ns/op
Iteration   1: 11200.470 ns/op
Iteration   2: 11237.234 ns/op
Iteration   3: 11178.060 ns/op
Iteration   4: 11210.719 ns/op
Iteration   5: 11168.905 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  11199.078 ±(99.9%) 104.491 ns/op [Average]
  (min, avg, max) = (11168.905, 11199.078, 11237.234), stdev = 27.136
  CI (99.9%): [11094.586, 11303.569] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 7.25% complete, ETA 01:31:29
# Fork: 1 of 1
# Warmup Iteration   1: 52640.173 ns/op
# Warmup Iteration   2: 22512.768 ns/op
# Warmup Iteration   3: 22085.407 ns/op
# Warmup Iteration   4: 21075.294 ns/op
Iteration   1: 21051.713 ns/op
Iteration   2: 21084.797 ns/op
Iteration   3: 21084.275 ns/op
Iteration   4: 21095.259 ns/op
Iteration   5: 21081.575 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  21079.524 ±(99.9%) 63.144 ns/op [Average]
  (min, avg, max) = (21051.713, 21079.524, 21095.259), stdev = 16.398
  CI (99.9%): [21016.380, 21142.667] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 7.45% complete, ETA 01:31:16
# Fork: 1 of 1
# Warmup Iteration   1: 112692.176 ns/op
# Warmup Iteration   2: 41079.631 ns/op
# Warmup Iteration   3: 41613.689 ns/op
# Warmup Iteration   4: 40755.971 ns/op
Iteration   1: 40760.597 ns/op
Iteration   2: 40968.711 ns/op
Iteration   3: 40714.595 ns/op
Iteration   4: 40746.836 ns/op
Iteration   5: 40830.360 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  40804.220 ±(99.9%) 389.701 ns/op [Average]
  (min, avg, max) = (40714.595, 40804.220, 40968.711), stdev = 101.204
  CI (99.9%): [40414.519, 41193.921] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 7.65% complete, ETA 01:31:04
# Fork: 1 of 1
# Warmup Iteration   1: 705471.743 ns/op
# Warmup Iteration   2: 434526.399 ns/op
# Warmup Iteration   3: 408995.381 ns/op
# Warmup Iteration   4: 416523.318 ns/op
Iteration   1: 407256.385 ns/op
Iteration   2: 408527.444 ns/op
Iteration   3: 408480.679 ns/op
Iteration   4: 433398.816 ns/op
Iteration   5: 408425.352 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  413217.735 ±(99.9%) 43489.234 ns/op [Average]
  (min, avg, max) = (407256.385, 413217.735, 433398.816), stdev = 11294.016
  CI (99.9%): [369728.501, 456706.970] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 7.84% complete, ETA 01:30:52
# Fork: 1 of 1
# Warmup Iteration   1: 85344.631 ns/op
# Warmup Iteration   2: 74657.389 ns/op
# Warmup Iteration   3: 72216.526 ns/op
# Warmup Iteration   4: 74710.166 ns/op
Iteration   1: 73306.080 ns/op
Iteration   2: 70572.743 ns/op
Iteration   3: 68724.537 ns/op
Iteration   4: 72959.426 ns/op
Iteration   5: 71959.333 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  71504.424 ±(99.9%) 7246.412 ns/op [Average]
  (min, avg, max) = (68724.537, 71504.424, 73306.080), stdev = 1881.870
  CI (99.9%): [64258.012, 78750.835] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 8.04% complete, ETA 01:30:41
# Fork: 1 of 1
# Warmup Iteration   1: 164907.427 ns/op
# Warmup Iteration   2: 137927.278 ns/op
# Warmup Iteration   3: 145649.882 ns/op
# Warmup Iteration   4: 147734.807 ns/op
Iteration   1: 147677.379 ns/op
Iteration   2: 152697.829 ns/op
Iteration   3: 151145.470 ns/op
Iteration   4: 144650.675 ns/op
Iteration   5: 146691.831 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  148572.637 ±(99.9%) 12677.537 ns/op [Average]
  (min, avg, max) = (144650.675, 148572.637, 152697.829), stdev = 3292.316
  CI (99.9%): [135895.100, 161250.173] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 8.24% complete, ETA 01:30:29
# Fork: 1 of 1
# Warmup Iteration   1: 243478.431 ns/op
# Warmup Iteration   2: 275809.143 ns/op
# Warmup Iteration   3: 305942.207 ns/op
# Warmup Iteration   4: 318317.541 ns/op
Iteration   1: 322095.401 ns/op
Iteration   2: 313901.105 ns/op
Iteration   3: 308125.750 ns/op
Iteration   4: 315509.474 ns/op
Iteration   5: 318679.912 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  315662.328 ±(99.9%) 20231.050 ns/op [Average]
  (min, avg, max) = (308125.750, 315662.328, 322095.401), stdev = 5253.940
  CI (99.9%): [295431.278, 335893.379] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 8.43% complete, ETA 01:30:19
# Fork: 1 of 1
# Warmup Iteration   1: 739134.295 ns/op
# Warmup Iteration   2: 600255.374 ns/op
# Warmup Iteration   3: 606458.073 ns/op
# Warmup Iteration   4: 633508.067 ns/op
Iteration   1: 636480.222 ns/op
Iteration   2: 640416.118 ns/op
Iteration   3: 606726.263 ns/op
Iteration   4: 596625.278 ns/op
Iteration   5: 641573.088 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  624364.194 ±(99.9%) 81255.715 ns/op [Average]
  (min, avg, max) = (596625.278, 624364.194, 641573.088), stdev = 21101.851
  CI (99.9%): [543108.479, 705619.909] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 8.63% complete, ETA 01:30:07
# Fork: 1 of 1
# Warmup Iteration   1: 5996112.225 ns/op
# Warmup Iteration   2: 6349735.901 ns/op
# Warmup Iteration   3: 6263292.301 ns/op
# Warmup Iteration   4: 6436549.493 ns/op
Iteration   1: 6364325.850 ns/op
Iteration   2: 6518519.965 ns/op
Iteration   3: 6411386.880 ns/op
Iteration   4: 6384143.747 ns/op
Iteration   5: 6326671.851 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  6401009.659 ±(99.9%) 279487.718 ns/op [Average]
  (min, avg, max) = (6326671.851, 6401009.659, 6518519.965), stdev = 72582.073
  CI (99.9%): [6121521.940, 6680497.377] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 8.82% complete, ETA 01:29:57
# Fork: 1 of 1
# Warmup Iteration   1: 21884.025 ns/op
# Warmup Iteration   2: 9858.996 ns/op
# Warmup Iteration   3: 9871.394 ns/op
# Warmup Iteration   4: 10297.837 ns/op
Iteration   1: 10262.731 ns/op
Iteration   2: 10446.816 ns/op
Iteration   3: 10344.774 ns/op
Iteration   4: 10308.282 ns/op
Iteration   5: 10352.855 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  10343.092 ±(99.9%) 262.058 ns/op [Average]
  (min, avg, max) = (10262.731, 10343.092, 10446.816), stdev = 68.056
  CI (99.9%): [10081.033, 10605.150] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 9.02% complete, ETA 01:29:44
# Fork: 1 of 1
# Warmup Iteration   1: 41906.772 ns/op
# Warmup Iteration   2: 21402.928 ns/op
# Warmup Iteration   3: 21260.146 ns/op
# Warmup Iteration   4: 21928.028 ns/op
Iteration   1: 21755.514 ns/op
Iteration   2: 21803.721 ns/op
Iteration   3: 21755.246 ns/op
Iteration   4: 21709.794 ns/op
Iteration   5: 21821.351 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  21769.125 ±(99.9%) 170.285 ns/op [Average]
  (min, avg, max) = (21709.794, 21769.125, 21821.351), stdev = 44.223
  CI (99.9%): [21598.840, 21939.411] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 9.22% complete, ETA 01:29:32
# Fork: 1 of 1
# Warmup Iteration   1: 89425.377 ns/op
# Warmup Iteration   2: 39979.788 ns/op
# Warmup Iteration   3: 42346.488 ns/op
# Warmup Iteration   4: 40825.753 ns/op
Iteration   1: 40790.052 ns/op
Iteration   2: 41377.537 ns/op
Iteration   3: 41655.492 ns/op
Iteration   4: 41293.115 ns/op
Iteration   5: 41180.315 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  41259.302 ±(99.9%) 1215.433 ns/op [Average]
  (min, avg, max) = (40790.052, 41259.302, 41655.492), stdev = 315.644
  CI (99.9%): [40043.869, 42474.735] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 9.41% complete, ETA 01:29:21
# Fork: 1 of 1
# Warmup Iteration   1: 193498.299 ns/op
# Warmup Iteration   2: 82138.895 ns/op
# Warmup Iteration   3: 82870.421 ns/op
# Warmup Iteration   4: 80912.883 ns/op
Iteration   1: 80153.510 ns/op
Iteration   2: 79077.387 ns/op
Iteration   3: 79788.186 ns/op
Iteration   4: 79959.510 ns/op
Iteration   5: 79363.078 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  79668.334 ±(99.9%) 1697.062 ns/op [Average]
  (min, avg, max) = (79077.387, 79668.334, 80153.510), stdev = 440.722
  CI (99.9%): [77971.272, 81365.396] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 9.61% complete, ETA 01:29:08
# Fork: 1 of 1
# Warmup Iteration   1: 1549399.589 ns/op
# Warmup Iteration   2: 782333.522 ns/op
# Warmup Iteration   3: 823006.044 ns/op
# Warmup Iteration   4: 837870.550 ns/op
Iteration   1: 825619.098 ns/op
Iteration   2: 827002.847 ns/op
Iteration   3: 823234.246 ns/op
Iteration   4: 824425.965 ns/op
Iteration   5: 816616.163 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  823379.664 ±(99.9%) 15522.842 ns/op [Average]
  (min, avg, max) = (816616.163, 823379.664, 827002.847), stdev = 4031.233
  CI (99.9%): [807856.821, 838902.506] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 9.80% complete, ETA 01:28:57
# Fork: 1 of 1
# Warmup Iteration   1: 364272.650 ns/op
# Warmup Iteration   2: 201792.334 ns/op
# Warmup Iteration   3: 178366.935 ns/op
# Warmup Iteration   4: 177027.034 ns/op
Iteration   1: 179831.673 ns/op
Iteration   2: 175238.710 ns/op
Iteration   3: 175822.097 ns/op
Iteration   4: 191418.366 ns/op
Iteration   5: 177742.954 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  180010.760 ±(99.9%) 25515.117 ns/op [Average]
  (min, avg, max) = (175238.710, 180010.760, 191418.366), stdev = 6626.195
  CI (99.9%): [154495.643, 205525.877] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 10.00% complete, ETA 01:28:48
# Fork: 1 of 1
# Warmup Iteration   1: 655486.855 ns/op
# Warmup Iteration   2: 346180.825 ns/op
# Warmup Iteration   3: 280232.381 ns/op
# Warmup Iteration   4: 267361.801 ns/op
Iteration   1: 265120.030 ns/op
Iteration   2: 264466.771 ns/op
Iteration   3: 276323.900 ns/op
Iteration   4: 263859.730 ns/op
Iteration   5: 266001.509 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  267154.388 ±(99.9%) 19973.835 ns/op [Average]
  (min, avg, max) = (263859.730, 267154.388, 276323.900), stdev = 5187.142
  CI (99.9%): [247180.553, 287128.223] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 10.20% complete, ETA 01:28:38
# Fork: 1 of 1
# Warmup Iteration   1: 1528315.504 ns/op
# Warmup Iteration   2: 656415.960 ns/op
# Warmup Iteration   3: 538664.339 ns/op
# Warmup Iteration   4: 549027.402 ns/op
Iteration   1: 560687.389 ns/op
Iteration   2: 524532.848 ns/op
Iteration   3: 530690.743 ns/op
Iteration   4: 514541.408 ns/op
Iteration   5: 523288.793 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  530748.236 ±(99.9%) 68159.980 ns/op [Average]
  (min, avg, max) = (514541.408, 530748.236, 560687.389), stdev = 17700.930
  CI (99.9%): [462588.256, 598908.217] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 10.39% complete, ETA 01:28:28
# Fork: 1 of 1
# Warmup Iteration   1: 3136492.190 ns/op
# Warmup Iteration   2: 1405971.712 ns/op
# Warmup Iteration   3: 1230980.626 ns/op
# Warmup Iteration   4: 1229885.134 ns/op
Iteration   1: 1248189.756 ns/op
Iteration   2: 1209576.887 ns/op
Iteration   3: 1217586.498 ns/op
Iteration   4: 1199387.736 ns/op
Iteration   5: 1240669.254 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1223082.026 ±(99.9%) 79702.694 ns/op [Average]
  (min, avg, max) = (1199387.736, 1223082.026, 1248189.756), stdev = 20698.537
  CI (99.9%): [1143379.332, 1302784.720] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 10.59% complete, ETA 01:28:18
# Fork: 1 of 1
# Warmup Iteration   1: 26091193.192 ns/op
# Warmup Iteration   2: 12402274.143 ns/op
# Warmup Iteration   3: 11801338.121 ns/op
# Warmup Iteration   4: 13015678.659 ns/op
Iteration   1: 11854612.839 ns/op
Iteration   2: 11852141.458 ns/op
Iteration   3: 11717349.067 ns/op
Iteration   4: 11863639.706 ns/op
Iteration   5: 11916243.899 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  11840797.394 ±(99.9%) 284094.223 ns/op [Average]
  (min, avg, max) = (11717349.067, 11840797.394, 11916243.899), stdev = 73778.367
  CI (99.9%): [11556703.171, 12124891.616] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 10.78% complete, ETA 01:28:10
# Fork: 1 of 1
# Warmup Iteration   1: 93386.489 ns/op
# Warmup Iteration   2: 39204.869 ns/op
# Warmup Iteration   3: 38042.163 ns/op
# Warmup Iteration   4: 37232.181 ns/op
Iteration   1: 38168.871 ns/op
Iteration   2: 38839.721 ns/op
Iteration   3: 38419.384 ns/op
Iteration   4: 37403.305 ns/op
Iteration   5: 39428.964 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  38452.049 ±(99.9%) 2910.852 ns/op [Average]
  (min, avg, max) = (37403.305, 38452.049, 39428.964), stdev = 755.939
  CI (99.9%): [35541.198, 41362.901] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 10.98% complete, ETA 01:27:58
# Fork: 1 of 1
# Warmup Iteration   1: 217306.885 ns/op
# Warmup Iteration   2: 86879.794 ns/op
# Warmup Iteration   3: 83383.811 ns/op
# Warmup Iteration   4: 81297.504 ns/op
Iteration   1: 81581.411 ns/op
Iteration   2: 80762.060 ns/op
Iteration   3: 80821.829 ns/op
Iteration   4: 79683.693 ns/op
Iteration   5: 80540.470 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  80677.893 ±(99.9%) 2619.758 ns/op [Average]
  (min, avg, max) = (79683.693, 80677.893, 81581.411), stdev = 680.343
  CI (99.9%): [78058.135, 83297.651] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 11.18% complete, ETA 01:27:45
# Fork: 1 of 1
# Warmup Iteration   1: 527730.837 ns/op
# Warmup Iteration   2: 193367.624 ns/op
# Warmup Iteration   3: 173214.477 ns/op
# Warmup Iteration   4: 167526.211 ns/op
Iteration   1: 168142.352 ns/op
Iteration   2: 167847.606 ns/op
Iteration   3: 168546.129 ns/op
Iteration   4: 172941.587 ns/op
Iteration   5: 168155.693 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  169126.673 ±(99.9%) 8267.303 ns/op [Average]
  (min, avg, max) = (167847.606, 169126.673, 172941.587), stdev = 2146.992
  CI (99.9%): [160859.370, 177393.977] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 11.37% complete, ETA 01:27:34
# Fork: 1 of 1
# Warmup Iteration   1: 920009.215 ns/op
# Warmup Iteration   2: 450617.108 ns/op
# Warmup Iteration   3: 422465.133 ns/op
# Warmup Iteration   4: 390110.910 ns/op
Iteration   1: 392054.376 ns/op
Iteration   2: 387245.905 ns/op
Iteration   3: 388138.810 ns/op
Iteration   4: 387896.672 ns/op
Iteration   5: 388892.077 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  388845.568 ±(99.9%) 7269.829 ns/op [Average]
  (min, avg, max) = (387245.905, 388845.568, 392054.376), stdev = 1887.952
  CI (99.9%): [381575.739, 396115.397] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 11.57% complete, ETA 01:27:23
# Fork: 1 of 1
# Warmup Iteration   1: 7686694.283 ns/op
# Warmup Iteration   2: 4128183.817 ns/op
# Warmup Iteration   3: 3901748.685 ns/op
# Warmup Iteration   4: 3878246.235 ns/op
Iteration   1: 3884483.877 ns/op
Iteration   2: 3890591.976 ns/op
Iteration   3: 3885881.563 ns/op
Iteration   4: 3892640.618 ns/op
Iteration   5: 3883758.200 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  3887471.247 ±(99.9%) 15123.223 ns/op [Average]
  (min, avg, max) = (3883758.200, 3887471.247, 3892640.618), stdev = 3927.453
  CI (99.9%): [3872348.024, 3902594.470] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 11.76% complete, ETA 01:27:11
# Fork: 1 of 1
# Warmup Iteration   1: 115635.900 ns/op
# Warmup Iteration   2: 37699.876 ns/op
# Warmup Iteration   3: 35203.574 ns/op
# Warmup Iteration   4: 34531.618 ns/op
Iteration   1: 34537.265 ns/op
Iteration   2: 34370.267 ns/op
Iteration   3: 34481.852 ns/op
Iteration   4: 34349.419 ns/op
Iteration   5: 35526.352 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  34653.031 ±(99.9%) 1903.567 ns/op [Average]
  (min, avg, max) = (34349.419, 34653.031, 35526.352), stdev = 494.350
  CI (99.9%): [32749.464, 36556.598] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 11.96% complete, ETA 01:26:59
# Fork: 1 of 1
# Warmup Iteration   1: 224686.444 ns/op
# Warmup Iteration   2: 82730.634 ns/op
# Warmup Iteration   3: 71996.993 ns/op
# Warmup Iteration   4: 72647.419 ns/op
Iteration   1: 72304.523 ns/op
Iteration   2: 72157.632 ns/op
Iteration   3: 72043.611 ns/op
Iteration   4: 71887.324 ns/op
Iteration   5: 71906.095 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  72059.837 ±(99.9%) 675.500 ns/op [Average]
  (min, avg, max) = (71887.324, 72059.837, 72304.523), stdev = 175.425
  CI (99.9%): [71384.338, 72735.337] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 12.16% complete, ETA 01:26:47
# Fork: 1 of 1
# Warmup Iteration   1: 303796.919 ns/op
# Warmup Iteration   2: 153361.751 ns/op
# Warmup Iteration   3: 143699.035 ns/op
# Warmup Iteration   4: 140551.592 ns/op
Iteration   1: 140755.991 ns/op
Iteration   2: 140035.140 ns/op
Iteration   3: 139690.735 ns/op
Iteration   4: 140389.678 ns/op
Iteration   5: 140733.808 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  140321.070 ±(99.9%) 1768.044 ns/op [Average]
  (min, avg, max) = (139690.735, 140321.070, 140755.991), stdev = 459.155
  CI (99.9%): [138553.027, 142089.114] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 12.35% complete, ETA 01:26:34
# Fork: 1 of 1
# Warmup Iteration   1: 756082.766 ns/op
# Warmup Iteration   2: 352739.315 ns/op
# Warmup Iteration   3: 321564.774 ns/op
# Warmup Iteration   4: 301958.004 ns/op
Iteration   1: 301016.618 ns/op
Iteration   2: 301115.085 ns/op
Iteration   3: 301449.735 ns/op
Iteration   4: 301712.681 ns/op
Iteration   5: 300061.409 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  301071.106 ±(99.9%) 2419.610 ns/op [Average]
  (min, avg, max) = (300061.409, 301071.106, 301712.681), stdev = 628.365
  CI (99.9%): [298651.496, 303490.715] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 12.55% complete, ETA 01:26:22
# Fork: 1 of 1
# Warmup Iteration   1: 8993200.011 ns/op
# Warmup Iteration   2: 3500820.060 ns/op
# Warmup Iteration   3: 3281483.992 ns/op
# Warmup Iteration   4: 3271105.430 ns/op
Iteration   1: 3352293.307 ns/op
Iteration   2: 3361293.905 ns/op
Iteration   3: 3283415.516 ns/op
Iteration   4: 3266081.986 ns/op
Iteration   5: 3269931.807 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  3306603.304 ±(99.9%) 178579.063 ns/op [Average]
  (min, avg, max) = (3266081.986, 3306603.304, 3361293.905), stdev = 46376.416
  CI (99.9%): [3128024.241, 3485182.367] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 12.75% complete, ETA 01:26:11
# Fork: 1 of 1
# Warmup Iteration   1: 34663.758 ns/op
# Warmup Iteration   2: 18542.757 ns/op
# Warmup Iteration   3: 17764.307 ns/op
# Warmup Iteration   4: 17454.814 ns/op
Iteration   1: 17487.827 ns/op
Iteration   2: 17443.829 ns/op
Iteration   3: 18098.047 ns/op
Iteration   4: 17462.358 ns/op
Iteration   5: 18169.664 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  17732.345 ±(99.9%) 1416.008 ns/op [Average]
  (min, avg, max) = (17443.829, 17732.345, 18169.664), stdev = 367.733
  CI (99.9%): [16316.337, 19148.353] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 12.94% complete, ETA 01:25:59
# Fork: 1 of 1
# Warmup Iteration   1: 64559.208 ns/op
# Warmup Iteration   2: 34620.571 ns/op
# Warmup Iteration   3: 34283.880 ns/op
# Warmup Iteration   4: 33796.960 ns/op
Iteration   1: 33790.907 ns/op
Iteration   2: 33811.373 ns/op
Iteration   3: 33776.047 ns/op
Iteration   4: 33749.604 ns/op
Iteration   5: 33770.190 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  33779.624 ±(99.9%) 89.030 ns/op [Average]
  (min, avg, max) = (33749.604, 33779.624, 33811.373), stdev = 23.121
  CI (99.9%): [33690.594, 33868.655] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 13.14% complete, ETA 01:25:47
# Fork: 1 of 1
# Warmup Iteration   1: 165728.671 ns/op
# Warmup Iteration   2: 74918.629 ns/op
# Warmup Iteration   3: 73285.855 ns/op
# Warmup Iteration   4: 78435.806 ns/op
Iteration   1: 74596.460 ns/op
Iteration   2: 73364.135 ns/op
Iteration   3: 73682.627 ns/op
Iteration   4: 72937.988 ns/op
Iteration   5: 80577.895 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  75031.821 ±(99.9%) 12166.773 ns/op [Average]
  (min, avg, max) = (72937.988, 75031.821, 80577.895), stdev = 3159.672
  CI (99.9%): [62865.048, 87198.594] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 13.33% complete, ETA 01:25:35
# Fork: 1 of 1
# Warmup Iteration   1: 319064.736 ns/op
# Warmup Iteration   2: 174274.031 ns/op
# Warmup Iteration   3: 178579.160 ns/op
# Warmup Iteration   4: 170438.356 ns/op
Iteration   1: 170852.624 ns/op
Iteration   2: 170780.845 ns/op
Iteration   3: 176451.165 ns/op
Iteration   4: 170386.794 ns/op
Iteration   5: 170438.660 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  171782.018 ±(99.9%) 10081.467 ns/op [Average]
  (min, avg, max) = (170386.794, 171782.018, 176451.165), stdev = 2618.125
  CI (99.9%): [161700.551, 181863.484] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 13.53% complete, ETA 01:25:23
# Fork: 1 of 1
# Warmup Iteration   1: 3077632.466 ns/op
# Warmup Iteration   2: 1796581.305 ns/op
# Warmup Iteration   3: 1756915.856 ns/op
# Warmup Iteration   4: 1740017.447 ns/op
Iteration   1: 1741802.238 ns/op
Iteration   2: 1720416.568 ns/op
Iteration   3: 1710367.531 ns/op
Iteration   4: 1716187.010 ns/op
Iteration   5: 1702354.455 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1718225.560 ±(99.9%) 57064.170 ns/op [Average]
  (min, avg, max) = (1702354.455, 1718225.560, 1741802.238), stdev = 14819.384
  CI (99.9%): [1661161.390, 1775289.731] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 13.73% complete, ETA 01:25:11
# Fork: 1 of 1
# Warmup Iteration   1: 159665.908 ns/op
# Warmup Iteration   2: 71408.678 ns/op
# Warmup Iteration   3: 67362.335 ns/op
# Warmup Iteration   4: 67282.437 ns/op
Iteration   1: 67159.623 ns/op
Iteration   2: 67995.798 ns/op
Iteration   3: 66581.688 ns/op
Iteration   4: 66834.885 ns/op
Iteration   5: 66575.455 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  67029.490 ±(99.9%) 2274.189 ns/op [Average]
  (min, avg, max) = (66575.455, 67029.490, 67995.798), stdev = 590.600
  CI (99.9%): [64755.301, 69303.679] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 13.92% complete, ETA 01:24:59
# Fork: 1 of 1
# Warmup Iteration   1: 264406.655 ns/op
# Warmup Iteration   2: 131185.582 ns/op
# Warmup Iteration   3: 122648.943 ns/op
# Warmup Iteration   4: 122531.795 ns/op
Iteration   1: 123360.821 ns/op
Iteration   2: 122915.420 ns/op
Iteration   3: 123659.250 ns/op
Iteration   4: 122991.189 ns/op
Iteration   5: 122144.064 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  123014.149 ±(99.9%) 2198.292 ns/op [Average]
  (min, avg, max) = (122144.064, 123014.149, 123659.250), stdev = 570.889
  CI (99.9%): [120815.857, 125212.441] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 14.12% complete, ETA 01:24:47
# Fork: 1 of 1
# Warmup Iteration   1: 800582.015 ns/op
# Warmup Iteration   2: 292366.251 ns/op
# Warmup Iteration   3: 247191.176 ns/op
# Warmup Iteration   4: 242330.483 ns/op
Iteration   1: 241410.844 ns/op
Iteration   2: 241395.379 ns/op
Iteration   3: 246742.097 ns/op
Iteration   4: 284909.854 ns/op
Iteration   5: 241480.830 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  251187.801 ±(99.9%) 73127.947 ns/op [Average]
  (min, avg, max) = (241395.379, 251187.801, 284909.854), stdev = 18991.095
  CI (99.9%): [178059.854, 324315.747] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 14.31% complete, ETA 01:24:35
# Fork: 1 of 1
# Warmup Iteration   1: 1626405.772 ns/op
# Warmup Iteration   2: 581375.128 ns/op
# Warmup Iteration   3: 560749.265 ns/op
# Warmup Iteration   4: 555831.296 ns/op
Iteration   1: 553227.509 ns/op
Iteration   2: 555773.638 ns/op
Iteration   3: 551501.722 ns/op
Iteration   4: 553787.303 ns/op
Iteration   5: 553559.631 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  553569.961 ±(99.9%) 5870.944 ns/op [Average]
  (min, avg, max) = (551501.722, 553569.961, 555773.638), stdev = 1524.666
  CI (99.9%): [547699.016, 559440.905] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 14.51% complete, ETA 01:24:23
# Fork: 1 of 1
# Warmup Iteration   1: 17331334.585 ns/op
# Warmup Iteration   2: 5636974.603 ns/op
# Warmup Iteration   3: 5521816.701 ns/op
# Warmup Iteration   4: 5388525.489 ns/op
Iteration   1: 5420366.067 ns/op
Iteration   2: 5355396.306 ns/op
Iteration   3: 5379214.001 ns/op
Iteration   4: 5443884.970 ns/op
Iteration   5: 5387921.733 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  5397356.615 ±(99.9%) 134402.942 ns/op [Average]
  (min, avg, max) = (5355396.306, 5397356.615, 5443884.970), stdev = 34904.017
  CI (99.9%): [5262953.674, 5531759.557] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 14.71% complete, ETA 01:24:12
# Fork: 1 of 1
# Warmup Iteration   1: 203028.013 ns/op
# Warmup Iteration   2: 74726.363 ns/op
# Warmup Iteration   3: 68354.901 ns/op
# Warmup Iteration   4: 66255.369 ns/op
Iteration   1: 68274.821 ns/op
Iteration   2: 65580.874 ns/op
Iteration   3: 65182.636 ns/op
Iteration   4: 67425.789 ns/op
Iteration   5: 71284.783 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  67549.780 ±(99.9%) 9426.465 ns/op [Average]
  (min, avg, max) = (65182.636, 67549.780, 71284.783), stdev = 2448.023
  CI (99.9%): [58123.315, 76976.246] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 14.90% complete, ETA 01:24:00
# Fork: 1 of 1
# Warmup Iteration   1: 286408.138 ns/op
# Warmup Iteration   2: 138191.695 ns/op
# Warmup Iteration   3: 120873.136 ns/op
# Warmup Iteration   4: 120545.613 ns/op
Iteration   1: 129884.333 ns/op
Iteration   2: 120955.000 ns/op
Iteration   3: 121366.502 ns/op
Iteration   4: 121635.422 ns/op
Iteration   5: 126242.094 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  124016.670 ±(99.9%) 15092.552 ns/op [Average]
  (min, avg, max) = (120955.000, 124016.670, 129884.333), stdev = 3919.488
  CI (99.9%): [108924.118, 139109.222] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 15.10% complete, ETA 01:23:49
# Fork: 1 of 1
# Warmup Iteration   1: 817981.840 ns/op
# Warmup Iteration   2: 266693.062 ns/op
# Warmup Iteration   3: 240585.551 ns/op
# Warmup Iteration   4: 239835.076 ns/op
Iteration   1: 245742.809 ns/op
Iteration   2: 239980.108 ns/op
Iteration   3: 258721.336 ns/op
Iteration   4: 244536.933 ns/op
Iteration   5: 253752.983 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  248546.834 ±(99.9%) 29068.863 ns/op [Average]
  (min, avg, max) = (239980.108, 248546.834, 258721.336), stdev = 7549.091
  CI (99.9%): [219477.971, 277615.697] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 15.29% complete, ETA 01:23:37
# Fork: 1 of 1
# Warmup Iteration   1: 1737058.791 ns/op
# Warmup Iteration   2: 581630.698 ns/op
# Warmup Iteration   3: 565156.289 ns/op
# Warmup Iteration   4: 557014.098 ns/op
Iteration   1: 553786.441 ns/op
Iteration   2: 553054.101 ns/op
Iteration   3: 549607.201 ns/op
Iteration   4: 587327.311 ns/op
Iteration   5: 550523.762 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  558859.763 ±(99.9%) 61638.707 ns/op [Average]
  (min, avg, max) = (549607.201, 558859.763, 587327.311), stdev = 16007.376
  CI (99.9%): [497221.056, 620498.470] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 15.49% complete, ETA 01:23:26
# Fork: 1 of 1
# Warmup Iteration   1: 15844336.187 ns/op
# Warmup Iteration   2: 5585455.744 ns/op
# Warmup Iteration   3: 5259044.523 ns/op
# Warmup Iteration   4: 5317796.484 ns/op
Iteration   1: 5275909.139 ns/op
Iteration   2: 5298285.675 ns/op
Iteration   3: 5252910.705 ns/op
Iteration   4: 5306908.445 ns/op
Iteration   5: 5295825.180 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  5285967.829 ±(99.9%) 83510.089 ns/op [Average]
  (min, avg, max) = (5252910.705, 5285967.829, 5306908.445), stdev = 21687.305
  CI (99.9%): [5202457.740, 5369477.918] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 15.69% complete, ETA 01:23:14
# Fork: 1 of 1
# Warmup Iteration   1: 28835.932 ns/op
# Warmup Iteration   2: 14821.520 ns/op
# Warmup Iteration   3: 13945.410 ns/op
# Warmup Iteration   4: 14687.100 ns/op
Iteration   1: 13938.725 ns/op
Iteration   2: 13966.770 ns/op
Iteration   3: 13959.886 ns/op
Iteration   4: 14132.421 ns/op
Iteration   5: 13944.221 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  13988.405 ±(99.9%) 313.078 ns/op [Average]
  (min, avg, max) = (13938.725, 13988.405, 14132.421), stdev = 81.305
  CI (99.9%): [13675.326, 14301.483] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 15.88% complete, ETA 01:23:02
# Fork: 1 of 1
# Warmup Iteration   1: 55059.845 ns/op
# Warmup Iteration   2: 29045.845 ns/op
# Warmup Iteration   3: 27386.555 ns/op
# Warmup Iteration   4: 27055.084 ns/op
Iteration   1: 27146.298 ns/op
Iteration   2: 27100.865 ns/op
Iteration   3: 27084.860 ns/op
Iteration   4: 27092.837 ns/op
Iteration   5: 27111.045 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  27107.181 ±(99.9%) 92.112 ns/op [Average]
  (min, avg, max) = (27084.860, 27107.181, 27146.298), stdev = 23.921
  CI (99.9%): [27015.069, 27199.293] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 16.08% complete, ETA 01:22:51
# Fork: 1 of 1
# Warmup Iteration   1: 128024.949 ns/op
# Warmup Iteration   2: 59651.304 ns/op
# Warmup Iteration   3: 57795.966 ns/op
# Warmup Iteration   4: 57721.303 ns/op
Iteration   1: 56725.480 ns/op
Iteration   2: 56686.116 ns/op
Iteration   3: 57429.963 ns/op
Iteration   4: 56712.295 ns/op
Iteration   5: 57741.829 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  57059.137 ±(99.9%) 1900.469 ns/op [Average]
  (min, avg, max) = (56686.116, 57059.137, 57741.829), stdev = 493.546
  CI (99.9%): [55158.667, 58959.606] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 16.27% complete, ETA 01:22:40
# Fork: 1 of 1
# Warmup Iteration   1: 287733.023 ns/op
# Warmup Iteration   2: 132613.149 ns/op
# Warmup Iteration   3: 128559.784 ns/op
# Warmup Iteration   4: 130753.545 ns/op
Iteration   1: 124149.526 ns/op
Iteration   2: 124731.260 ns/op
Iteration   3: 124751.160 ns/op
Iteration   4: 124131.382 ns/op
Iteration   5: 123292.203 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  124211.106 ±(99.9%) 2291.659 ns/op [Average]
  (min, avg, max) = (123292.203, 124211.106, 124751.160), stdev = 595.137
  CI (99.9%): [121919.447, 126502.765] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 16.47% complete, ETA 01:22:28
# Fork: 1 of 1
# Warmup Iteration   1: 2926353.086 ns/op
# Warmup Iteration   2: 1215644.529 ns/op
# Warmup Iteration   3: 1160172.980 ns/op
# Warmup Iteration   4: 1228796.714 ns/op
Iteration   1: 1149270.637 ns/op
Iteration   2: 1149211.269 ns/op
Iteration   3: 1147162.111 ns/op
Iteration   4: 1147766.701 ns/op
Iteration   5: 1147839.325 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1148250.008 ±(99.9%) 3628.337 ns/op [Average]
  (min, avg, max) = (1147162.111, 1148250.008, 1149270.637), stdev = 942.268
  CI (99.9%): [1144621.671, 1151878.346] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 16.67% complete, ETA 01:22:17
# Fork: 1 of 1
# Warmup Iteration   1: 25014.902 ns/op
# Warmup Iteration   2: 14587.936 ns/op
# Warmup Iteration   3: 14097.835 ns/op
# Warmup Iteration   4: 14031.445 ns/op
Iteration   1: 14123.759 ns/op
Iteration   2: 14138.674 ns/op
Iteration   3: 13898.476 ns/op
Iteration   4: 13919.979 ns/op
Iteration   5: 14039.141 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14024.006 ±(99.9%) 430.119 ns/op [Average]
  (min, avg, max) = (13898.476, 14024.006, 14138.674), stdev = 111.701
  CI (99.9%): [13593.887, 14454.125] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 16.86% complete, ETA 01:22:05
# Fork: 1 of 1
# Warmup Iteration   1: 51725.882 ns/op
# Warmup Iteration   2: 26940.231 ns/op
# Warmup Iteration   3: 25554.360 ns/op
# Warmup Iteration   4: 24646.878 ns/op
Iteration   1: 25467.050 ns/op
Iteration   2: 24673.326 ns/op
Iteration   3: 24612.223 ns/op
Iteration   4: 24666.411 ns/op
Iteration   5: 24729.242 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  24829.651 ±(99.9%) 1381.302 ns/op [Average]
  (min, avg, max) = (24612.223, 24829.651, 25467.050), stdev = 358.720
  CI (99.9%): [23448.349, 26210.952] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 17.06% complete, ETA 01:21:54
# Fork: 1 of 1
# Warmup Iteration   1: 116714.850 ns/op
# Warmup Iteration   2: 54914.197 ns/op
# Warmup Iteration   3: 49962.777 ns/op
# Warmup Iteration   4: 49557.900 ns/op
Iteration   1: 48772.102 ns/op
Iteration   2: 48791.369 ns/op
Iteration   3: 48707.391 ns/op
Iteration   4: 50401.935 ns/op
Iteration   5: 50090.432 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  49352.646 ±(99.9%) 3171.673 ns/op [Average]
  (min, avg, max) = (48707.391, 49352.646, 50401.935), stdev = 823.674
  CI (99.9%): [46180.972, 52524.319] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 17.25% complete, ETA 01:21:42
# Fork: 1 of 1
# Warmup Iteration   1: 314291.067 ns/op
# Warmup Iteration   2: 112067.354 ns/op
# Warmup Iteration   3: 104628.384 ns/op
# Warmup Iteration   4: 104654.164 ns/op
Iteration   1: 104922.760 ns/op
Iteration   2: 105145.514 ns/op
Iteration   3: 105008.890 ns/op
Iteration   4: 104467.402 ns/op
Iteration   5: 104722.902 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  104853.494 ±(99.9%) 1019.408 ns/op [Average]
  (min, avg, max) = (104467.402, 104853.494, 105145.514), stdev = 264.737
  CI (99.9%): [103834.085, 105872.902] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 17.45% complete, ETA 01:21:30
# Fork: 1 of 1
# Warmup Iteration   1: 2623912.032 ns/op
# Warmup Iteration   2: 1104823.353 ns/op
# Warmup Iteration   3: 1068424.452 ns/op
# Warmup Iteration   4: 1064402.527 ns/op
Iteration   1: 1068843.815 ns/op
Iteration   2: 1062748.595 ns/op
Iteration   3: 1088158.254 ns/op
Iteration   4: 1058419.894 ns/op
Iteration   5: 1122627.926 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1080159.697 ±(99.9%) 101355.760 ns/op [Average]
  (min, avg, max) = (1058419.894, 1080159.697, 1122627.926), stdev = 26321.769
  CI (99.9%): [978803.937, 1181515.457] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 17.65% complete, ETA 01:21:19
# Fork: 1 of 1
# Warmup Iteration   1: 29400.689 ns/op
# Warmup Iteration   2: 14067.065 ns/op
# Warmup Iteration   3: 13772.832 ns/op
# Warmup Iteration   4: 13231.975 ns/op
Iteration   1: 13218.086 ns/op
Iteration   2: 13218.852 ns/op
Iteration   3: 13291.483 ns/op
Iteration   4: 13283.427 ns/op
Iteration   5: 13273.775 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  13257.125 ±(99.9%) 138.012 ns/op [Average]
  (min, avg, max) = (13218.086, 13257.125, 13291.483), stdev = 35.841
  CI (99.9%): [13119.113, 13395.136] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 17.84% complete, ETA 01:21:07
# Fork: 1 of 1
# Warmup Iteration   1: 55389.579 ns/op
# Warmup Iteration   2: 30353.826 ns/op
# Warmup Iteration   3: 27770.116 ns/op
# Warmup Iteration   4: 27341.956 ns/op
Iteration   1: 27340.947 ns/op
Iteration   2: 27299.627 ns/op
Iteration   3: 27322.387 ns/op
Iteration   4: 27341.260 ns/op
Iteration   5: 27369.745 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  27334.793 ±(99.9%) 99.892 ns/op [Average]
  (min, avg, max) = (27299.627, 27334.793, 27369.745), stdev = 25.942
  CI (99.9%): [27234.901, 27434.685] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 18.04% complete, ETA 01:20:55
# Fork: 1 of 1
# Warmup Iteration   1: 191842.058 ns/op
# Warmup Iteration   2: 56059.334 ns/op
# Warmup Iteration   3: 54021.025 ns/op
# Warmup Iteration   4: 53014.352 ns/op
Iteration   1: 52078.376 ns/op
Iteration   2: 52040.315 ns/op
Iteration   3: 52086.374 ns/op
Iteration   4: 52206.808 ns/op
Iteration   5: 52270.551 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  52136.485 ±(99.9%) 375.587 ns/op [Average]
  (min, avg, max) = (52040.315, 52136.485, 52270.551), stdev = 97.539
  CI (99.9%): [51760.898, 52512.072] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 18.24% complete, ETA 01:20:44
# Fork: 1 of 1
# Warmup Iteration   1: 284278.399 ns/op
# Warmup Iteration   2: 122499.537 ns/op
# Warmup Iteration   3: 111905.432 ns/op
# Warmup Iteration   4: 112099.999 ns/op
Iteration   1: 112056.576 ns/op
Iteration   2: 118865.369 ns/op
Iteration   3: 112862.889 ns/op
Iteration   4: 111072.008 ns/op
Iteration   5: 110745.923 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  113120.553 ±(99.9%) 12776.474 ns/op [Average]
  (min, avg, max) = (110745.923, 113120.553, 118865.369), stdev = 3318.010
  CI (99.9%): [100344.079, 125897.027] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 18.43% complete, ETA 01:20:32
# Fork: 1 of 1
# Warmup Iteration   1: 1818528.998 ns/op
# Warmup Iteration   2: 1167281.806 ns/op
# Warmup Iteration   3: 1153146.757 ns/op
# Warmup Iteration   4: 1154362.159 ns/op
Iteration   1: 1155041.250 ns/op
Iteration   2: 1150772.342 ns/op
Iteration   3: 1152043.385 ns/op
Iteration   4: 1152671.473 ns/op
Iteration   5: 1148560.688 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1151817.828 ±(99.9%) 9207.798 ns/op [Average]
  (min, avg, max) = (1148560.688, 1151817.828, 1155041.250), stdev = 2391.236
  CI (99.9%): [1142610.030, 1161025.626] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 18.63% complete, ETA 01:20:21
# Fork: 1 of 1
# Warmup Iteration   1: 9028.481 ns/op
# Warmup Iteration   2: 5480.142 ns/op
# Warmup Iteration   3: 5115.210 ns/op
# Warmup Iteration   4: 5242.162 ns/op
Iteration   1: 5146.290 ns/op
Iteration   2: 5172.481 ns/op
Iteration   3: 5134.296 ns/op
Iteration   4: 5098.169 ns/op
Iteration   5: 5194.982 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  5149.244 ±(99.9%) 142.431 ns/op [Average]
  (min, avg, max) = (5098.169, 5149.244, 5194.982), stdev = 36.989
  CI (99.9%): [5006.813, 5291.675] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 18.82% complete, ETA 01:20:09
# Fork: 1 of 1
# Warmup Iteration   1: 15481.084 ns/op
# Warmup Iteration   2: 9893.381 ns/op
# Warmup Iteration   3: 9279.492 ns/op
# Warmup Iteration   4: 9366.198 ns/op
Iteration   1: 9510.486 ns/op
Iteration   2: 9907.190 ns/op
Iteration   3: 9689.591 ns/op
Iteration   4: 9480.044 ns/op
Iteration   5: 9356.292 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9588.720 ±(99.9%) 824.865 ns/op [Average]
  (min, avg, max) = (9356.292, 9588.720, 9907.190), stdev = 214.215
  CI (99.9%): [8763.855, 10413.586] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 19.02% complete, ETA 01:19:57
# Fork: 1 of 1
# Warmup Iteration   1: 24559.232 ns/op
# Warmup Iteration   2: 17893.092 ns/op
# Warmup Iteration   3: 17190.561 ns/op
# Warmup Iteration   4: 17238.190 ns/op
Iteration   1: 17164.971 ns/op
Iteration   2: 17097.115 ns/op
Iteration   3: 17150.256 ns/op
Iteration   4: 17093.595 ns/op
Iteration   5: 17076.310 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  17116.449 ±(99.9%) 149.191 ns/op [Average]
  (min, avg, max) = (17076.310, 17116.449, 17164.971), stdev = 38.744
  CI (99.9%): [16967.258, 17265.641] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 19.22% complete, ETA 01:19:45
# Fork: 1 of 1
# Warmup Iteration   1: 58233.216 ns/op
# Warmup Iteration   2: 43062.727 ns/op
# Warmup Iteration   3: 41294.847 ns/op
# Warmup Iteration   4: 41029.455 ns/op
Iteration   1: 40871.955 ns/op
Iteration   2: 40662.189 ns/op
Iteration   3: 41570.670 ns/op
Iteration   4: 40908.429 ns/op
Iteration   5: 40755.747 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  40953.798 ±(99.9%) 1379.728 ns/op [Average]
  (min, avg, max) = (40662.189, 40953.798, 41570.670), stdev = 358.311
  CI (99.9%): [39574.070, 42333.526] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 19.41% complete, ETA 01:19:33
# Fork: 1 of 1
# Warmup Iteration   1: 543307.531 ns/op
# Warmup Iteration   2: 394326.001 ns/op
# Warmup Iteration   3: 374471.998 ns/op
# Warmup Iteration   4: 377907.553 ns/op
Iteration   1: 380589.265 ns/op
Iteration   2: 377387.146 ns/op
Iteration   3: 386406.254 ns/op
Iteration   4: 386621.988 ns/op
Iteration   5: 397865.415 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  385774.013 ±(99.9%) 30107.871 ns/op [Average]
  (min, avg, max) = (377387.146, 385774.013, 397865.415), stdev = 7818.919
  CI (99.9%): [355666.142, 415881.885] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 19.61% complete, ETA 01:19:21
# Fork: 1 of 1
# Warmup Iteration   1: 6459.991 ns/op
# Warmup Iteration   2: 3543.453 ns/op
# Warmup Iteration   3: 3225.103 ns/op
# Warmup Iteration   4: 3225.182 ns/op
Iteration   1: 3230.312 ns/op
Iteration   2: 3231.706 ns/op
Iteration   3: 3214.594 ns/op
Iteration   4: 3235.224 ns/op
Iteration   5: 3221.857 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3226.739 ±(99.9%) 32.261 ns/op [Average]
  (min, avg, max) = (3214.594, 3226.739, 3235.224), stdev = 8.378
  CI (99.9%): [3194.478, 3258.999] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 19.80% complete, ETA 01:19:09
# Fork: 1 of 1
# Warmup Iteration   1: 16617.151 ns/op
# Warmup Iteration   2: 6766.271 ns/op
# Warmup Iteration   3: 6399.999 ns/op
# Warmup Iteration   4: 6408.995 ns/op
Iteration   1: 6636.976 ns/op
Iteration   2: 6369.466 ns/op
Iteration   3: 6625.840 ns/op
Iteration   4: 6371.093 ns/op
Iteration   5: 6363.891 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  6473.453 ±(99.9%) 555.536 ns/op [Average]
  (min, avg, max) = (6363.891, 6473.453, 6636.976), stdev = 144.271
  CI (99.9%): [5917.918, 7028.989] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 20.00% complete, ETA 01:18:57
# Fork: 1 of 1
# Warmup Iteration   1: 23827.924 ns/op
# Warmup Iteration   2: 12837.578 ns/op
# Warmup Iteration   3: 12029.619 ns/op
# Warmup Iteration   4: 12041.178 ns/op
Iteration   1: 11998.859 ns/op
Iteration   2: 11973.223 ns/op
Iteration   3: 12101.264 ns/op
Iteration   4: 12326.405 ns/op
Iteration   5: 12204.121 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  12120.774 ±(99.9%) 565.421 ns/op [Average]
  (min, avg, max) = (11973.223, 12120.774, 12326.405), stdev = 146.838
  CI (99.9%): [11555.353, 12686.195] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 20.20% complete, ETA 01:18:45
# Fork: 1 of 1
# Warmup Iteration   1: 61360.686 ns/op
# Warmup Iteration   2: 28189.703 ns/op
# Warmup Iteration   3: 25487.288 ns/op
# Warmup Iteration   4: 26025.845 ns/op
Iteration   1: 25330.844 ns/op
Iteration   2: 25333.047 ns/op
Iteration   3: 25335.337 ns/op
Iteration   4: 25375.597 ns/op
Iteration   5: 25265.749 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  25328.115 ±(99.9%) 151.942 ns/op [Average]
  (min, avg, max) = (25265.749, 25328.115, 25375.597), stdev = 39.459
  CI (99.9%): [25176.173, 25480.056] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 20.39% complete, ETA 01:18:33
# Fork: 1 of 1
# Warmup Iteration   1: 616225.254 ns/op
# Warmup Iteration   2: 294399.906 ns/op
# Warmup Iteration   3: 250149.968 ns/op
# Warmup Iteration   4: 261575.495 ns/op
Iteration   1: 248616.814 ns/op
Iteration   2: 249915.910 ns/op
Iteration   3: 254446.145 ns/op
Iteration   4: 248338.189 ns/op
Iteration   5: 248708.057 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  250005.023 ±(99.9%) 9839.711 ns/op [Average]
  (min, avg, max) = (248338.189, 250005.023, 254446.145), stdev = 2555.342
  CI (99.9%): [240165.312, 259844.734] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 20.59% complete, ETA 01:18:22
# Fork: 1 of 1
# Warmup Iteration   1: 9407.682 ns/op
# Warmup Iteration   2: 4042.458 ns/op
# Warmup Iteration   3: 3875.100 ns/op
# Warmup Iteration   4: 3878.861 ns/op
Iteration   1: 3936.960 ns/op
Iteration   2: 3870.791 ns/op
Iteration   3: 3962.139 ns/op
Iteration   4: 3849.342 ns/op
Iteration   5: 3842.542 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3892.355 ±(99.9%) 207.862 ns/op [Average]
  (min, avg, max) = (3842.542, 3892.355, 3962.139), stdev = 53.981
  CI (99.9%): [3684.493, 4100.217] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 20.78% complete, ETA 01:18:10
# Fork: 1 of 1
# Warmup Iteration   1: 16352.604 ns/op
# Warmup Iteration   2: 8512.831 ns/op
# Warmup Iteration   3: 8344.161 ns/op
# Warmup Iteration   4: 8132.988 ns/op
Iteration   1: 8162.794 ns/op
Iteration   2: 8517.901 ns/op
Iteration   3: 8147.200 ns/op
Iteration   4: 8161.336 ns/op
Iteration   5: 8184.568 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8234.760 ±(99.9%) 611.650 ns/op [Average]
  (min, avg, max) = (8147.200, 8234.760, 8517.901), stdev = 158.843
  CI (99.9%): [7623.110, 8846.409] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 20.98% complete, ETA 01:17:58
# Fork: 1 of 1
# Warmup Iteration   1: 33191.516 ns/op
# Warmup Iteration   2: 16748.951 ns/op
# Warmup Iteration   3: 15300.931 ns/op
# Warmup Iteration   4: 14796.365 ns/op
Iteration   1: 14871.518 ns/op
Iteration   2: 15293.813 ns/op
Iteration   3: 15357.315 ns/op
Iteration   4: 15171.126 ns/op
Iteration   5: 15412.701 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  15221.295 ±(99.9%) 828.688 ns/op [Average]
  (min, avg, max) = (14871.518, 15221.295, 15412.701), stdev = 215.208
  CI (99.9%): [14392.607, 16049.982] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 21.18% complete, ETA 01:17:46
# Fork: 1 of 1
# Warmup Iteration   1: 61302.226 ns/op
# Warmup Iteration   2: 32754.648 ns/op
# Warmup Iteration   3: 32655.726 ns/op
# Warmup Iteration   4: 30837.384 ns/op
Iteration   1: 30845.263 ns/op
Iteration   2: 30836.852 ns/op
Iteration   3: 30813.333 ns/op
Iteration   4: 31356.177 ns/op
Iteration   5: 32102.808 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  31190.887 ±(99.9%) 2149.357 ns/op [Average]
  (min, avg, max) = (30813.333, 31190.887, 32102.808), stdev = 558.181
  CI (99.9%): [29041.530, 33340.244] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 21.37% complete, ETA 01:17:34
# Fork: 1 of 1
# Warmup Iteration   1: 527726.241 ns/op
# Warmup Iteration   2: 309336.792 ns/op
# Warmup Iteration   3: 299888.017 ns/op
# Warmup Iteration   4: 299686.775 ns/op
Iteration   1: 300048.948 ns/op
Iteration   2: 299084.939 ns/op
Iteration   3: 299239.045 ns/op
Iteration   4: 307978.673 ns/op
Iteration   5: 300687.684 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  301407.858 ±(99.9%) 14361.483 ns/op [Average]
  (min, avg, max) = (299084.939, 301407.858, 307978.673), stdev = 3729.631
  CI (99.9%): [287046.375, 315769.340] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 21.57% complete, ETA 01:17:23
# Fork: 1 of 1
# Warmup Iteration   1: 226553.225 ns/op
# Warmup Iteration   2: 110004.750 ns/op
# Warmup Iteration   3: 105400.172 ns/op
# Warmup Iteration   4: 107788.628 ns/op
Iteration   1: 104962.740 ns/op
Iteration   2: 104852.060 ns/op
Iteration   3: 105190.003 ns/op
Iteration   4: 104779.481 ns/op
Iteration   5: 104808.884 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  104918.633 ±(99.9%) 642.687 ns/op [Average]
  (min, avg, max) = (104779.481, 104918.633, 105190.003), stdev = 166.904
  CI (99.9%): [104275.946, 105561.320] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 21.76% complete, ETA 01:17:10
# Fork: 1 of 1
# Warmup Iteration   1: 369267.325 ns/op
# Warmup Iteration   2: 195203.124 ns/op
# Warmup Iteration   3: 186789.036 ns/op
# Warmup Iteration   4: 187401.357 ns/op
Iteration   1: 187391.519 ns/op
Iteration   2: 187940.151 ns/op
Iteration   3: 187655.195 ns/op
Iteration   4: 187230.479 ns/op
Iteration   5: 187051.808 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  187453.831 ±(99.9%) 1351.084 ns/op [Average]
  (min, avg, max) = (187051.808, 187453.831, 187940.151), stdev = 350.872
  CI (99.9%): [186102.746, 188804.915] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 21.96% complete, ETA 01:16:59
# Fork: 1 of 1
# Warmup Iteration   1: 1152133.273 ns/op
# Warmup Iteration   2: 486516.582 ns/op
# Warmup Iteration   3: 464667.367 ns/op
# Warmup Iteration   4: 461610.340 ns/op
Iteration   1: 459605.797 ns/op
Iteration   2: 459553.348 ns/op
Iteration   3: 482881.993 ns/op
Iteration   4: 459228.893 ns/op
Iteration   5: 458952.381 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  464044.482 ±(99.9%) 40561.898 ns/op [Average]
  (min, avg, max) = (458952.381, 464044.482, 482881.993), stdev = 10533.796
  CI (99.9%): [423482.585, 504606.380] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 22.16% complete, ETA 01:16:47
# Fork: 1 of 1
# Warmup Iteration   1: 2374381.445 ns/op
# Warmup Iteration   2: 1123616.257 ns/op
# Warmup Iteration   3: 1117949.736 ns/op
# Warmup Iteration   4: 1083018.009 ns/op
Iteration   1: 1086740.853 ns/op
Iteration   2: 1084246.213 ns/op
Iteration   3: 1084331.743 ns/op
Iteration   4: 1084692.798 ns/op
Iteration   5: 1081896.721 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1084381.666 ±(99.9%) 6630.032 ns/op [Average]
  (min, avg, max) = (1081896.721, 1084381.666, 1086740.853), stdev = 1721.798
  CI (99.9%): [1077751.633, 1091011.698] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 22.35% complete, ETA 01:16:35
# Fork: 1 of 1
# Warmup Iteration   1: 23813562.853 ns/op
# Warmup Iteration   2: 9652481.901 ns/op
# Warmup Iteration   3: 9574207.710 ns/op
# Warmup Iteration   4: 9397091.801 ns/op
Iteration   1: 9400714.722 ns/op
Iteration   2: 9370676.723 ns/op
Iteration   3: 9379731.922 ns/op
Iteration   4: 9704993.840 ns/op
Iteration   5: 9347712.488 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9440765.939 ±(99.9%) 573465.082 ns/op [Average]
  (min, avg, max) = (9347712.488, 9440765.939, 9704993.840), stdev = 148927.061
  CI (99.9%): [8867300.856, 10014231.021] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 22.55% complete, ETA 01:16:23
# Fork: 1 of 1
# Warmup Iteration   1: 4228.482 ns/op
# Warmup Iteration   2: 2378.810 ns/op
# Warmup Iteration   3: 2299.565 ns/op
# Warmup Iteration   4: 2291.806 ns/op
Iteration   1: 2296.263 ns/op
Iteration   2: 2291.933 ns/op
Iteration   3: 2347.792 ns/op
Iteration   4: 2293.340 ns/op
Iteration   5: 2428.760 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2331.618 ±(99.9%) 227.712 ns/op [Average]
  (min, avg, max) = (2291.933, 2331.618, 2428.760), stdev = 59.136
  CI (99.9%): [2103.906, 2559.330] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 22.75% complete, ETA 01:16:11
# Fork: 1 of 1
# Warmup Iteration   1: 8535.719 ns/op
# Warmup Iteration   2: 4919.042 ns/op
# Warmup Iteration   3: 4762.084 ns/op
# Warmup Iteration   4: 4585.936 ns/op
Iteration   1: 4582.028 ns/op
Iteration   2: 4574.494 ns/op
Iteration   3: 4784.399 ns/op
Iteration   4: 4708.318 ns/op
Iteration   5: 4566.216 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4643.091 ±(99.9%) 378.102 ns/op [Average]
  (min, avg, max) = (4566.216, 4643.091, 4784.399), stdev = 98.192
  CI (99.9%): [4264.989, 5021.192] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 22.94% complete, ETA 01:16:00
# Fork: 1 of 1
# Warmup Iteration   1: 16867.306 ns/op
# Warmup Iteration   2: 9166.098 ns/op
# Warmup Iteration   3: 8898.995 ns/op
# Warmup Iteration   4: 8896.021 ns/op
Iteration   1: 8967.449 ns/op
Iteration   2: 8913.439 ns/op
Iteration   3: 9332.191 ns/op
Iteration   4: 8979.301 ns/op
Iteration   5: 8917.025 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9021.881 ±(99.9%) 677.491 ns/op [Average]
  (min, avg, max) = (8913.439, 9021.881, 9332.191), stdev = 175.942
  CI (99.9%): [8344.390, 9699.371] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 23.14% complete, ETA 01:15:49
# Fork: 1 of 1
# Warmup Iteration   1: 26520.994 ns/op
# Warmup Iteration   2: 18651.412 ns/op
# Warmup Iteration   3: 18110.158 ns/op
# Warmup Iteration   4: 17977.212 ns/op
Iteration   1: 18073.913 ns/op
Iteration   2: 18491.554 ns/op
Iteration   3: 18034.520 ns/op
Iteration   4: 18023.588 ns/op
Iteration   5: 18072.920 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  18139.299 ±(99.9%) 763.198 ns/op [Average]
  (min, avg, max) = (18023.588, 18139.299, 18491.554), stdev = 198.200
  CI (99.9%): [17376.101, 18902.497] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 23.33% complete, ETA 01:15:36
# Fork: 1 of 1
# Warmup Iteration   1: 348789.727 ns/op
# Warmup Iteration   2: 206561.385 ns/op
# Warmup Iteration   3: 197563.714 ns/op
# Warmup Iteration   4: 196966.389 ns/op
Iteration   1: 197599.330 ns/op
Iteration   2: 197326.050 ns/op
Iteration   3: 201173.565 ns/op
Iteration   4: 201463.839 ns/op
Iteration   5: 205342.446 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  200581.046 ±(99.9%) 12667.238 ns/op [Average]
  (min, avg, max) = (197326.050, 200581.046, 205342.446), stdev = 3289.641
  CI (99.9%): [187913.808, 213248.284] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 23.53% complete, ETA 01:15:25
# Fork: 1 of 1
# Warmup Iteration   1: 44921.702 ns/op
# Warmup Iteration   2: 35863.186 ns/op
# Warmup Iteration   3: 33432.280 ns/op
# Warmup Iteration   4: 33737.041 ns/op
Iteration   1: 33502.135 ns/op
Iteration   2: 32960.920 ns/op
Iteration   3: 33391.504 ns/op
Iteration   4: 34136.385 ns/op
Iteration   5: 33660.189 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  33530.227 ±(99.9%) 1643.260 ns/op [Average]
  (min, avg, max) = (32960.920, 33530.227, 34136.385), stdev = 426.749
  CI (99.9%): [31886.966, 35173.487] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 23.73% complete, ETA 01:15:13
# Fork: 1 of 1
# Warmup Iteration   1: 89699.106 ns/op
# Warmup Iteration   2: 78572.929 ns/op
# Warmup Iteration   3: 77808.244 ns/op
# Warmup Iteration   4: 80497.868 ns/op
Iteration   1: 77072.869 ns/op
Iteration   2: 77128.735 ns/op
Iteration   3: 77464.982 ns/op
Iteration   4: 79249.361 ns/op
Iteration   5: 78142.847 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  77811.759 ±(99.9%) 3502.315 ns/op [Average]
  (min, avg, max) = (77072.869, 77811.759, 79249.361), stdev = 909.540
  CI (99.9%): [74309.444, 81314.074] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 23.92% complete, ETA 01:15:02
# Fork: 1 of 1
# Warmup Iteration   1: 180583.811 ns/op
# Warmup Iteration   2: 139033.604 ns/op
# Warmup Iteration   3: 131482.387 ns/op
# Warmup Iteration   4: 145385.444 ns/op
Iteration   1: 144965.367 ns/op
Iteration   2: 151277.552 ns/op
Iteration   3: 147678.425 ns/op
Iteration   4: 142452.420 ns/op
Iteration   5: 142492.828 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  145773.318 ±(99.9%) 14455.153 ns/op [Average]
  (min, avg, max) = (142452.420, 145773.318, 151277.552), stdev = 3753.957
  CI (99.9%): [131318.166, 160228.471] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 24.12% complete, ETA 01:14:50
# Fork: 1 of 1
# Warmup Iteration   1: 243110.358 ns/op
# Warmup Iteration   2: 286857.072 ns/op
# Warmup Iteration   3: 292893.659 ns/op
# Warmup Iteration   4: 297840.651 ns/op
Iteration   1: 293631.102 ns/op
Iteration   2: 309150.542 ns/op
Iteration   3: 317514.361 ns/op
Iteration   4: 302331.601 ns/op
Iteration   5: 311017.560 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  306729.033 ±(99.9%) 35053.112 ns/op [Average]
  (min, avg, max) = (293631.102, 306729.033, 317514.361), stdev = 9103.182
  CI (99.9%): [271675.921, 341782.145] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 24.31% complete, ETA 01:14:39
# Fork: 1 of 1
# Warmup Iteration   1: 3411924.212 ns/op
# Warmup Iteration   2: 3193042.090 ns/op
# Warmup Iteration   3: 3136933.350 ns/op
# Warmup Iteration   4: 3252734.406 ns/op
Iteration   1: 3115446.573 ns/op
Iteration   2: 3254964.880 ns/op
Iteration   3: 3244476.146 ns/op
Iteration   4: 3237487.411 ns/op
Iteration   5: 3142383.983 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3198951.798 ±(99.9%) 250054.523 ns/op [Average]
  (min, avg, max) = (3115446.573, 3198951.798, 3254964.880), stdev = 64938.365
  CI (99.9%): [2948897.276, 3449006.321] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 24.51% complete, ETA 01:14:27
# Fork: 1 of 1
# Warmup Iteration   1: 11732.809 ns/op
# Warmup Iteration   2: 6700.270 ns/op
# Warmup Iteration   3: 6642.518 ns/op
# Warmup Iteration   4: 7213.967 ns/op
Iteration   1: 7279.633 ns/op
Iteration   2: 7271.080 ns/op
Iteration   3: 7218.140 ns/op
Iteration   4: 7316.931 ns/op
Iteration   5: 7259.113 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  7268.980 ±(99.9%) 137.485 ns/op [Average]
  (min, avg, max) = (7218.140, 7268.980, 7316.931), stdev = 35.704
  CI (99.9%): [7131.495, 7406.465] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 24.71% complete, ETA 01:14:16
# Fork: 1 of 1
# Warmup Iteration   1: 22667.945 ns/op
# Warmup Iteration   2: 13086.410 ns/op
# Warmup Iteration   3: 12946.633 ns/op
# Warmup Iteration   4: 13686.311 ns/op
Iteration   1: 13637.359 ns/op
Iteration   2: 13826.659 ns/op
Iteration   3: 13807.038 ns/op
Iteration   4: 13714.542 ns/op
Iteration   5: 13546.684 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  13706.456 ±(99.9%) 451.250 ns/op [Average]
  (min, avg, max) = (13546.684, 13706.456, 13826.659), stdev = 117.188
  CI (99.9%): [13255.206, 14157.707] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 24.90% complete, ETA 01:14:04
# Fork: 1 of 1
# Warmup Iteration   1: 37610.708 ns/op
# Warmup Iteration   2: 25263.126 ns/op
# Warmup Iteration   3: 25417.551 ns/op
# Warmup Iteration   4: 24823.562 ns/op
Iteration   1: 24879.316 ns/op
Iteration   2: 24798.877 ns/op
Iteration   3: 24907.331 ns/op
Iteration   4: 24813.004 ns/op
Iteration   5: 24836.045 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  24846.914 ±(99.9%) 175.148 ns/op [Average]
  (min, avg, max) = (24798.877, 24846.914, 24907.331), stdev = 45.485
  CI (99.9%): [24671.766, 25022.063] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 25.10% complete, ETA 01:13:52
# Fork: 1 of 1
# Warmup Iteration   1: 77135.408 ns/op
# Warmup Iteration   2: 50536.631 ns/op
# Warmup Iteration   3: 52829.790 ns/op
# Warmup Iteration   4: 50158.133 ns/op
Iteration   1: 49801.269 ns/op
Iteration   2: 49856.831 ns/op
Iteration   3: 49829.605 ns/op
Iteration   4: 49945.918 ns/op
Iteration   5: 50193.178 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  49925.360 ±(99.9%) 613.126 ns/op [Average]
  (min, avg, max) = (49801.269, 49925.360, 50193.178), stdev = 159.227
  CI (99.9%): [49312.234, 50538.486] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 25.29% complete, ETA 01:13:40
# Fork: 1 of 1
# Warmup Iteration   1: 765785.968 ns/op
# Warmup Iteration   2: 546639.439 ns/op
# Warmup Iteration   3: 489856.506 ns/op
# Warmup Iteration   4: 503749.628 ns/op
Iteration   1: 505274.094 ns/op
Iteration   2: 508266.505 ns/op
Iteration   3: 519949.243 ns/op
Iteration   4: 515105.707 ns/op
Iteration   5: 502947.721 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  510308.654 ±(99.9%) 27204.546 ns/op [Average]
  (min, avg, max) = (502947.721, 510308.654, 519949.243), stdev = 7064.934
  CI (99.9%): [483104.108, 537513.200] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 25.49% complete, ETA 01:13:28
# Fork: 1 of 1
# Warmup Iteration   1: 266316.526 ns/op
# Warmup Iteration   2: 156953.694 ns/op
# Warmup Iteration   3: 144856.060 ns/op
# Warmup Iteration   4: 144282.008 ns/op
Iteration   1: 144134.960 ns/op
Iteration   2: 140696.070 ns/op
Iteration   3: 144020.703 ns/op
Iteration   4: 144923.224 ns/op
Iteration   5: 146005.555 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  143956.103 ±(99.9%) 7652.896 ns/op [Average]
  (min, avg, max) = (140696.070, 143956.103, 146005.555), stdev = 1987.433
  CI (99.9%): [136303.207, 151608.998] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 25.69% complete, ETA 01:13:17
# Fork: 1 of 1
# Warmup Iteration   1: 322721.638 ns/op
# Warmup Iteration   2: 214916.451 ns/op
# Warmup Iteration   3: 207733.462 ns/op
# Warmup Iteration   4: 198921.478 ns/op
Iteration   1: 196980.020 ns/op
Iteration   2: 208360.666 ns/op
Iteration   3: 201836.481 ns/op
Iteration   4: 204074.472 ns/op
Iteration   5: 209733.288 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  204196.985 ±(99.9%) 19790.442 ns/op [Average]
  (min, avg, max) = (196980.020, 204196.985, 209733.288), stdev = 5139.515
  CI (99.9%): [184406.543, 223987.428] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 25.88% complete, ETA 01:13:06
# Fork: 1 of 1
# Warmup Iteration   1: 700281.239 ns/op
# Warmup Iteration   2: 443077.292 ns/op
# Warmup Iteration   3: 410475.051 ns/op
# Warmup Iteration   4: 397921.805 ns/op
Iteration   1: 398865.678 ns/op
Iteration   2: 398594.941 ns/op
Iteration   3: 393908.979 ns/op
Iteration   4: 395444.524 ns/op
Iteration   5: 398799.578 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  397122.740 ±(99.9%) 8856.828 ns/op [Average]
  (min, avg, max) = (393908.979, 397122.740, 398865.678), stdev = 2300.090
  CI (99.9%): [388265.912, 405979.568] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 26.08% complete, ETA 01:12:55
# Fork: 1 of 1
# Warmup Iteration   1: 1617602.699 ns/op
# Warmup Iteration   2: 983763.886 ns/op
# Warmup Iteration   3: 927926.470 ns/op
# Warmup Iteration   4: 932278.377 ns/op
Iteration   1: 926563.215 ns/op
Iteration   2: 904622.211 ns/op
Iteration   3: 948875.991 ns/op
Iteration   4: 893278.711 ns/op
Iteration   5: 929139.017 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  920495.829 ±(99.9%) 84136.675 ns/op [Average]
  (min, avg, max) = (893278.711, 920495.829, 948875.991), stdev = 21850.027
  CI (99.9%): [836359.154, 1004632.504] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 26.27% complete, ETA 01:12:44
# Fork: 1 of 1
# Warmup Iteration   1: 12856167.471 ns/op
# Warmup Iteration   2: 8964743.846 ns/op
# Warmup Iteration   3: 8539586.089 ns/op
# Warmup Iteration   4: 8424296.297 ns/op
Iteration   1: 8672121.135 ns/op
Iteration   2: 8673535.381 ns/op
Iteration   3: 8608482.545 ns/op
Iteration   4: 8559963.724 ns/op
Iteration   5: 8546529.707 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8612126.498 ±(99.9%) 231099.434 ns/op [Average]
  (min, avg, max) = (8546529.707, 8612126.498, 8673535.381), stdev = 60015.789
  CI (99.9%): [8381027.065, 8843225.932] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 26.47% complete, ETA 01:12:33
# Fork: 1 of 1
# Warmup Iteration   1: 37149.250 ns/op
# Warmup Iteration   2: 17195.769 ns/op
# Warmup Iteration   3: 16359.255 ns/op
# Warmup Iteration   4: 16268.861 ns/op
Iteration   1: 16103.341 ns/op
Iteration   2: 16047.763 ns/op
Iteration   3: 16312.980 ns/op
Iteration   4: 16246.411 ns/op
Iteration   5: 16062.906 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  16154.680 ±(99.9%) 455.463 ns/op [Average]
  (min, avg, max) = (16047.763, 16154.680, 16312.980), stdev = 118.282
  CI (99.9%): [15699.217, 16610.143] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 26.67% complete, ETA 01:12:22
# Fork: 1 of 1
# Warmup Iteration   1: 79081.614 ns/op
# Warmup Iteration   2: 41694.233 ns/op
# Warmup Iteration   3: 41766.117 ns/op
# Warmup Iteration   4: 40997.359 ns/op
Iteration   1: 40913.656 ns/op
Iteration   2: 40899.028 ns/op
Iteration   3: 40857.951 ns/op
Iteration   4: 40990.553 ns/op
Iteration   5: 42301.810 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  41192.600 ±(99.9%) 2394.804 ns/op [Average]
  (min, avg, max) = (40857.951, 41192.600, 42301.810), stdev = 621.923
  CI (99.9%): [38797.796, 43587.404] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 26.86% complete, ETA 01:12:10
# Fork: 1 of 1
# Warmup Iteration   1: 176393.173 ns/op
# Warmup Iteration   2: 87722.176 ns/op
# Warmup Iteration   3: 83381.932 ns/op
# Warmup Iteration   4: 86986.033 ns/op
Iteration   1: 86258.659 ns/op
Iteration   2: 83646.374 ns/op
Iteration   3: 83277.199 ns/op
Iteration   4: 83529.345 ns/op
Iteration   5: 83530.895 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  84048.494 ±(99.9%) 4785.829 ns/op [Average]
  (min, avg, max) = (83277.199, 84048.494, 86258.659), stdev = 1242.864
  CI (99.9%): [79262.666, 88834.323] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 27.06% complete, ETA 01:11:58
# Fork: 1 of 1
# Warmup Iteration   1: 302746.958 ns/op
# Warmup Iteration   2: 159367.855 ns/op
# Warmup Iteration   3: 144537.767 ns/op
# Warmup Iteration   4: 143841.523 ns/op
Iteration   1: 144138.350 ns/op
Iteration   2: 143916.739 ns/op
Iteration   3: 143756.411 ns/op
Iteration   4: 143914.721 ns/op
Iteration   5: 143668.386 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  143878.921 ±(99.9%) 692.445 ns/op [Average]
  (min, avg, max) = (143668.386, 143878.921, 144138.350), stdev = 179.826
  CI (99.9%): [143186.477, 144571.366] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 27.25% complete, ETA 01:11:47
# Fork: 1 of 1
# Warmup Iteration   1: 3388696.768 ns/op
# Warmup Iteration   2: 2132981.460 ns/op
# Warmup Iteration   3: 2093009.089 ns/op
# Warmup Iteration   4: 2155876.482 ns/op
Iteration   1: 2082840.378 ns/op
Iteration   2: 2170726.416 ns/op
Iteration   3: 2090983.069 ns/op
Iteration   4: 2107881.650 ns/op
Iteration   5: 2095249.516 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2109536.206 ±(99.9%) 136249.351 ns/op [Average]
  (min, avg, max) = (2082840.378, 2109536.206, 2170726.416), stdev = 35383.524
  CI (99.9%): [1973286.855, 2245785.557] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 27.45% complete, ETA 01:11:35
# Fork: 1 of 1
# Warmup Iteration   1: 35021.641 ns/op
# Warmup Iteration   2: 18104.201 ns/op
# Warmup Iteration   3: 18061.967 ns/op
# Warmup Iteration   4: 17062.694 ns/op
Iteration   1: 17079.138 ns/op
Iteration   2: 17104.976 ns/op
Iteration   3: 17458.051 ns/op
Iteration   4: 17051.965 ns/op
Iteration   5: 17043.155 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  17147.457 ±(99.9%) 675.067 ns/op [Average]
  (min, avg, max) = (17043.155, 17147.457, 17458.051), stdev = 175.313
  CI (99.9%): [16472.390, 17822.524] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 27.65% complete, ETA 01:11:23
# Fork: 1 of 1
# Warmup Iteration   1: 78031.109 ns/op
# Warmup Iteration   2: 42568.129 ns/op
# Warmup Iteration   3: 42393.756 ns/op
# Warmup Iteration   4: 40710.854 ns/op
Iteration   1: 40936.188 ns/op
Iteration   2: 40865.760 ns/op
Iteration   3: 40949.053 ns/op
Iteration   4: 40812.377 ns/op
Iteration   5: 40837.259 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  40880.127 ±(99.9%) 232.061 ns/op [Average]
  (min, avg, max) = (40812.377, 40880.127, 40949.053), stdev = 60.265
  CI (99.9%): [40648.067, 41112.188] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 27.84% complete, ETA 01:11:11
# Fork: 1 of 1
# Warmup Iteration   1: 189646.228 ns/op
# Warmup Iteration   2: 100221.322 ns/op
# Warmup Iteration   3: 98232.845 ns/op
# Warmup Iteration   4: 98329.894 ns/op
Iteration   1: 98060.712 ns/op
Iteration   2: 100012.498 ns/op
Iteration   3: 97983.131 ns/op
Iteration   4: 98075.548 ns/op
Iteration   5: 97951.948 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  98416.767 ±(99.9%) 3440.707 ns/op [Average]
  (min, avg, max) = (97951.948, 98416.767, 100012.498), stdev = 893.541
  CI (99.9%): [94976.060, 101857.475] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 28.04% complete, ETA 01:10:59
# Fork: 1 of 1
# Warmup Iteration   1: 398725.495 ns/op
# Warmup Iteration   2: 212681.281 ns/op
# Warmup Iteration   3: 195339.322 ns/op
# Warmup Iteration   4: 195140.092 ns/op
Iteration   1: 201335.040 ns/op
Iteration   2: 194980.638 ns/op
Iteration   3: 194739.789 ns/op
Iteration   4: 194908.515 ns/op
Iteration   5: 194912.481 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  196175.292 ±(99.9%) 11112.007 ns/op [Average]
  (min, avg, max) = (194739.789, 196175.292, 201335.040), stdev = 2885.753
  CI (99.9%): [185063.285, 207287.299] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 28.24% complete, ETA 01:10:48
# Fork: 1 of 1
# Warmup Iteration   1: 2619793.554 ns/op
# Warmup Iteration   2: 1620886.450 ns/op
# Warmup Iteration   3: 1479314.498 ns/op
# Warmup Iteration   4: 1618599.133 ns/op
Iteration   1: 1554653.887 ns/op
Iteration   2: 1564624.723 ns/op
Iteration   3: 1473410.360 ns/op
Iteration   4: 1475137.100 ns/op
Iteration   5: 1477161.754 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1508997.565 ±(99.9%) 178602.848 ns/op [Average]
  (min, avg, max) = (1473410.360, 1508997.565, 1564624.723), stdev = 46382.593
  CI (99.9%): [1330394.717, 1687600.413] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 28.43% complete, ETA 01:10:36
# Fork: 1 of 1
# Warmup Iteration   1: 15082.300 ns/op
# Warmup Iteration   2: 8400.716 ns/op
# Warmup Iteration   3: 8050.968 ns/op
# Warmup Iteration   4: 8029.850 ns/op
Iteration   1: 8066.548 ns/op
Iteration   2: 8150.146 ns/op
Iteration   3: 8178.415 ns/op
Iteration   4: 8024.879 ns/op
Iteration   5: 8029.257 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8089.849 ±(99.9%) 271.703 ns/op [Average]
  (min, avg, max) = (8024.879, 8089.849, 8178.415), stdev = 70.560
  CI (99.9%): [7818.146, 8361.552] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 28.63% complete, ETA 01:10:24
# Fork: 1 of 1
# Warmup Iteration   1: 33938.731 ns/op
# Warmup Iteration   2: 16608.565 ns/op
# Warmup Iteration   3: 17156.433 ns/op
# Warmup Iteration   4: 15782.877 ns/op
Iteration   1: 15749.562 ns/op
Iteration   2: 15867.688 ns/op
Iteration   3: 15800.358 ns/op
Iteration   4: 15795.560 ns/op
Iteration   5: 17047.900 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  16052.214 ±(99.9%) 2149.423 ns/op [Average]
  (min, avg, max) = (15749.562, 16052.214, 17047.900), stdev = 558.198
  CI (99.9%): [13902.791, 18201.636] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 28.82% complete, ETA 01:10:13
# Fork: 1 of 1
# Warmup Iteration   1: 61145.758 ns/op
# Warmup Iteration   2: 38061.376 ns/op
# Warmup Iteration   3: 38524.810 ns/op
# Warmup Iteration   4: 38339.735 ns/op
Iteration   1: 37924.593 ns/op
Iteration   2: 36897.161 ns/op
Iteration   3: 37031.487 ns/op
Iteration   4: 36950.270 ns/op
Iteration   5: 36949.638 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  37150.630 ±(99.9%) 1676.250 ns/op [Average]
  (min, avg, max) = (36897.161, 37150.630, 37924.593), stdev = 435.317
  CI (99.9%): [35474.380, 38826.880] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 29.02% complete, ETA 01:10:01
# Fork: 1 of 1
# Warmup Iteration   1: 132024.054 ns/op
# Warmup Iteration   2: 90175.811 ns/op
# Warmup Iteration   3: 89978.299 ns/op
# Warmup Iteration   4: 92385.541 ns/op
Iteration   1: 90266.807 ns/op
Iteration   2: 89063.198 ns/op
Iteration   3: 92383.611 ns/op
Iteration   4: 90458.500 ns/op
Iteration   5: 88342.612 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  90102.945 ±(99.9%) 5945.023 ns/op [Average]
  (min, avg, max) = (88342.612, 90102.945, 92383.611), stdev = 1543.904
  CI (99.9%): [84157.922, 96047.969] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 29.22% complete, ETA 01:09:49
# Fork: 1 of 1
# Warmup Iteration   1: 1302475.240 ns/op
# Warmup Iteration   2: 866964.049 ns/op
# Warmup Iteration   3: 863823.382 ns/op
# Warmup Iteration   4: 841028.055 ns/op
Iteration   1: 835993.588 ns/op
Iteration   2: 835545.422 ns/op
Iteration   3: 859280.844 ns/op
Iteration   4: 836912.836 ns/op
Iteration   5: 869777.439 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  847502.026 ±(99.9%) 61564.260 ns/op [Average]
  (min, avg, max) = (835545.422, 847502.026, 869777.439), stdev = 15988.043
  CI (99.9%): [785937.766, 909066.286] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 29.41% complete, ETA 01:09:37
# Fork: 1 of 1
# Warmup Iteration   1: 45677.333 ns/op
# Warmup Iteration   2: 24726.184 ns/op
# Warmup Iteration   3: 25385.088 ns/op
# Warmup Iteration   4: 25524.885 ns/op
Iteration   1: 25274.285 ns/op
Iteration   2: 23849.967 ns/op
Iteration   3: 23712.949 ns/op
Iteration   4: 23719.267 ns/op
Iteration   5: 23935.038 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  24098.301 ±(99.9%) 2556.713 ns/op [Average]
  (min, avg, max) = (23712.949, 24098.301, 25274.285), stdev = 663.970
  CI (99.9%): [21541.588, 26655.015] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 29.61% complete, ETA 01:09:26
# Fork: 1 of 1
# Warmup Iteration   1: 80606.774 ns/op
# Warmup Iteration   2: 45977.101 ns/op
# Warmup Iteration   3: 44538.044 ns/op
# Warmup Iteration   4: 43532.744 ns/op
Iteration   1: 43468.346 ns/op
Iteration   2: 43645.989 ns/op
Iteration   3: 43500.527 ns/op
Iteration   4: 43514.125 ns/op
Iteration   5: 43810.996 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  43587.996 ±(99.9%) 546.317 ns/op [Average]
  (min, avg, max) = (43468.346, 43587.996, 43810.996), stdev = 141.877
  CI (99.9%): [43041.679, 44134.314] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 29.80% complete, ETA 01:09:14
# Fork: 1 of 1
# Warmup Iteration   1: 198813.867 ns/op
# Warmup Iteration   2: 97330.045 ns/op
# Warmup Iteration   3: 87954.128 ns/op
# Warmup Iteration   4: 94385.066 ns/op
Iteration   1: 90365.747 ns/op
Iteration   2: 88728.960 ns/op
Iteration   3: 87893.814 ns/op
Iteration   4: 88425.156 ns/op
Iteration   5: 87871.295 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  88656.994 ±(99.9%) 3935.639 ns/op [Average]
  (min, avg, max) = (87871.295, 88656.994, 90365.747), stdev = 1022.073
  CI (99.9%): [84721.355, 92592.633] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 30.00% complete, ETA 01:09:02
# Fork: 1 of 1
# Warmup Iteration   1: 394295.455 ns/op
# Warmup Iteration   2: 215706.070 ns/op
# Warmup Iteration   3: 203080.844 ns/op
# Warmup Iteration   4: 202134.589 ns/op
Iteration   1: 201808.908 ns/op
Iteration   2: 202168.670 ns/op
Iteration   3: 201329.089 ns/op
Iteration   4: 202698.274 ns/op
Iteration   5: 203451.854 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  202291.359 ±(99.9%) 3155.475 ns/op [Average]
  (min, avg, max) = (201329.089, 202291.359, 203451.854), stdev = 819.467
  CI (99.9%): [199135.884, 205446.834] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 30.20% complete, ETA 01:08:50
# Fork: 1 of 1
# Warmup Iteration   1: 4482299.505 ns/op
# Warmup Iteration   2: 1926709.345 ns/op
# Warmup Iteration   3: 2022153.220 ns/op
# Warmup Iteration   4: 1977199.139 ns/op
Iteration   1: 1912543.895 ns/op
Iteration   2: 1971128.672 ns/op
Iteration   3: 1905628.773 ns/op
Iteration   4: 1913270.612 ns/op
Iteration   5: 1902018.162 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1920918.023 ±(99.9%) 109602.817 ns/op [Average]
  (min, avg, max) = (1902018.162, 1920918.023, 1971128.672), stdev = 28463.503
  CI (99.9%): [1811315.206, 2030520.840] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 30.39% complete, ETA 01:08:39
# Fork: 1 of 1
# Warmup Iteration   1: 44006.550 ns/op
# Warmup Iteration   2: 26036.682 ns/op
# Warmup Iteration   3: 26139.894 ns/op
# Warmup Iteration   4: 25492.830 ns/op
Iteration   1: 25463.926 ns/op
Iteration   2: 25258.312 ns/op
Iteration   3: 25222.672 ns/op
Iteration   4: 25089.090 ns/op
Iteration   5: 25112.571 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  25229.314 ±(99.9%) 575.087 ns/op [Average]
  (min, avg, max) = (25089.090, 25229.314, 25463.926), stdev = 149.348
  CI (99.9%): [24654.227, 25804.401] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 30.59% complete, ETA 01:08:27
# Fork: 1 of 1
# Warmup Iteration   1: 76800.579 ns/op
# Warmup Iteration   2: 48189.264 ns/op
# Warmup Iteration   3: 46863.979 ns/op
# Warmup Iteration   4: 44706.413 ns/op
Iteration   1: 44157.882 ns/op
Iteration   2: 45635.719 ns/op
Iteration   3: 44211.412 ns/op
Iteration   4: 44204.946 ns/op
Iteration   5: 44159.384 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  44473.869 ±(99.9%) 2502.806 ns/op [Average]
  (min, avg, max) = (44157.882, 44473.869, 45635.719), stdev = 649.971
  CI (99.9%): [41971.063, 46976.674] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 30.78% complete, ETA 01:08:16
# Fork: 1 of 1
# Warmup Iteration   1: 169068.214 ns/op
# Warmup Iteration   2: 93124.243 ns/op
# Warmup Iteration   3: 88099.578 ns/op
# Warmup Iteration   4: 90831.420 ns/op
Iteration   1: 88833.065 ns/op
Iteration   2: 89049.299 ns/op
Iteration   3: 88458.943 ns/op
Iteration   4: 88357.558 ns/op
Iteration   5: 88216.836 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  88583.140 ±(99.9%) 1334.260 ns/op [Average]
  (min, avg, max) = (88216.836, 88583.140, 89049.299), stdev = 346.503
  CI (99.9%): [87248.880, 89917.401] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 30.98% complete, ETA 01:08:04
# Fork: 1 of 1
# Warmup Iteration   1: 407916.992 ns/op
# Warmup Iteration   2: 245861.092 ns/op
# Warmup Iteration   3: 212876.567 ns/op
# Warmup Iteration   4: 212478.530 ns/op
Iteration   1: 202702.732 ns/op
Iteration   2: 203073.511 ns/op
Iteration   3: 203929.065 ns/op
Iteration   4: 210486.592 ns/op
Iteration   5: 220002.962 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  208038.973 ±(99.9%) 28501.951 ns/op [Average]
  (min, avg, max) = (202702.732, 208038.973, 220002.962), stdev = 7401.866
  CI (99.9%): [179537.021, 236540.924] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 31.18% complete, ETA 01:07:52
# Fork: 1 of 1
# Warmup Iteration   1: 3951147.440 ns/op
# Warmup Iteration   2: 1973005.872 ns/op
# Warmup Iteration   3: 1941666.087 ns/op
# Warmup Iteration   4: 1938135.385 ns/op
Iteration   1: 1936549.589 ns/op
Iteration   2: 1972166.103 ns/op
Iteration   3: 1959408.204 ns/op
Iteration   4: 1954216.735 ns/op
Iteration   5: 1932796.926 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1951027.512 ±(99.9%) 62955.723 ns/op [Average]
  (min, avg, max) = (1932796.926, 1951027.512, 1972166.103), stdev = 16349.401
  CI (99.9%): [1888071.789, 2013983.235] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 31.37% complete, ETA 01:07:41
# Fork: 1 of 1
# Warmup Iteration   1: 22705.796 ns/op
# Warmup Iteration   2: 10637.921 ns/op
# Warmup Iteration   3: 10209.054 ns/op
# Warmup Iteration   4: 10183.857 ns/op
Iteration   1: 10189.310 ns/op
Iteration   2: 10557.755 ns/op
Iteration   3: 10236.552 ns/op
Iteration   4: 10187.186 ns/op
Iteration   5: 10191.459 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  10272.453 ±(99.9%) 619.192 ns/op [Average]
  (min, avg, max) = (10187.186, 10272.453, 10557.755), stdev = 160.802
  CI (99.9%): [9653.260, 10891.645] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 31.57% complete, ETA 01:07:29
# Fork: 1 of 1
# Warmup Iteration   1: 89090.609 ns/op
# Warmup Iteration   2: 25128.479 ns/op
# Warmup Iteration   3: 23501.788 ns/op
# Warmup Iteration   4: 23551.504 ns/op
Iteration   1: 23473.118 ns/op
Iteration   2: 23378.256 ns/op
Iteration   3: 23494.188 ns/op
Iteration   4: 23419.130 ns/op
Iteration   5: 23477.981 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  23448.535 ±(99.9%) 186.263 ns/op [Average]
  (min, avg, max) = (23378.256, 23448.535, 23494.188), stdev = 48.372
  CI (99.9%): [23262.271, 23634.798] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 31.76% complete, ETA 01:07:17
# Fork: 1 of 1
# Warmup Iteration   1: 81292.196 ns/op
# Warmup Iteration   2: 41738.624 ns/op
# Warmup Iteration   3: 42608.047 ns/op
# Warmup Iteration   4: 40379.426 ns/op
Iteration   1: 40419.225 ns/op
Iteration   2: 40444.968 ns/op
Iteration   3: 40476.914 ns/op
Iteration   4: 40450.003 ns/op
Iteration   5: 41646.034 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  40687.429 ±(99.9%) 2064.975 ns/op [Average]
  (min, avg, max) = (40419.225, 40687.429, 41646.034), stdev = 536.267
  CI (99.9%): [38622.454, 42752.404] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 31.96% complete, ETA 01:07:06
# Fork: 1 of 1
# Warmup Iteration   1: 399467.613 ns/op
# Warmup Iteration   2: 104800.722 ns/op
# Warmup Iteration   3: 98050.156 ns/op
# Warmup Iteration   4: 98065.076 ns/op
Iteration   1: 98090.555 ns/op
Iteration   2: 102475.989 ns/op
Iteration   3: 98101.641 ns/op
Iteration   4: 97911.011 ns/op
Iteration   5: 97916.435 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  98899.126 ±(99.9%) 7707.487 ns/op [Average]
  (min, avg, max) = (97911.011, 98899.126, 102475.989), stdev = 2001.610
  CI (99.9%): [91191.639, 106606.613] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 32.16% complete, ETA 01:06:54
# Fork: 1 of 1
# Warmup Iteration   1: 1395505.107 ns/op
# Warmup Iteration   2: 825882.944 ns/op
# Warmup Iteration   3: 805653.532 ns/op
# Warmup Iteration   4: 768915.821 ns/op
Iteration   1: 756327.138 ns/op
Iteration   2: 757174.026 ns/op
Iteration   3: 754335.936 ns/op
Iteration   4: 759907.282 ns/op
Iteration   5: 756717.560 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  756892.388 ±(99.9%) 7714.375 ns/op [Average]
  (min, avg, max) = (754335.936, 756892.388, 759907.282), stdev = 2003.399
  CI (99.9%): [749178.013, 764606.764] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 32.35% complete, ETA 01:06:43
# Fork: 1 of 1
# Warmup Iteration   1: 19506.737 ns/op
# Warmup Iteration   2: 8009.125 ns/op
# Warmup Iteration   3: 7689.429 ns/op
# Warmup Iteration   4: 7666.112 ns/op
Iteration   1: 7667.019 ns/op
Iteration   2: 7663.870 ns/op
Iteration   3: 7676.029 ns/op
Iteration   4: 7918.488 ns/op
Iteration   5: 7724.869 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  7730.055 ±(99.9%) 416.541 ns/op [Average]
  (min, avg, max) = (7663.870, 7730.055, 7918.488), stdev = 108.174
  CI (99.9%): [7313.514, 8146.596] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 32.55% complete, ETA 01:06:31
# Fork: 1 of 1
# Warmup Iteration   1: 30632.723 ns/op
# Warmup Iteration   2: 14800.555 ns/op
# Warmup Iteration   3: 14174.224 ns/op
# Warmup Iteration   4: 14473.224 ns/op
Iteration   1: 14132.779 ns/op
Iteration   2: 14148.233 ns/op
Iteration   3: 15305.131 ns/op
Iteration   4: 14187.749 ns/op
Iteration   5: 14572.105 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  14469.199 ±(99.9%) 1929.921 ns/op [Average]
  (min, avg, max) = (14132.779, 14469.199, 15305.131), stdev = 501.194
  CI (99.9%): [12539.278, 16399.120] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 32.75% complete, ETA 01:06:19
# Fork: 1 of 1
# Warmup Iteration   1: 81977.196 ns/op
# Warmup Iteration   2: 29034.800 ns/op
# Warmup Iteration   3: 26881.047 ns/op
# Warmup Iteration   4: 26385.888 ns/op
Iteration   1: 26263.400 ns/op
Iteration   2: 26273.931 ns/op
Iteration   3: 26316.090 ns/op
Iteration   4: 26355.197 ns/op
Iteration   5: 26326.803 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  26307.084 ±(99.9%) 146.529 ns/op [Average]
  (min, avg, max) = (26263.400, 26307.084, 26355.197), stdev = 38.053
  CI (99.9%): [26160.555, 26453.613] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 32.94% complete, ETA 01:06:08
# Fork: 1 of 1
# Warmup Iteration   1: 114076.158 ns/op
# Warmup Iteration   2: 55879.209 ns/op
# Warmup Iteration   3: 55203.896 ns/op
# Warmup Iteration   4: 54997.967 ns/op
Iteration   1: 54589.409 ns/op
Iteration   2: 54611.904 ns/op
Iteration   3: 54458.709 ns/op
Iteration   4: 54533.310 ns/op
Iteration   5: 54580.850 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  54554.836 ±(99.9%) 234.483 ns/op [Average]
  (min, avg, max) = (54458.709, 54554.836, 54611.904), stdev = 60.895
  CI (99.9%): [54320.353, 54789.320] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 33.14% complete, ETA 01:05:57
# Fork: 1 of 1
# Warmup Iteration   1: 996505.643 ns/op
# Warmup Iteration   2: 594224.403 ns/op
# Warmup Iteration   3: 584410.105 ns/op
# Warmup Iteration   4: 581443.039 ns/op
Iteration   1: 579078.161 ns/op
Iteration   2: 580833.205 ns/op
Iteration   3: 581165.133 ns/op
Iteration   4: 580474.113 ns/op
Iteration   5: 580066.890 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  580323.500 ±(99.9%) 3108.992 ns/op [Average]
  (min, avg, max) = (579078.161, 580323.500, 581165.133), stdev = 807.395
  CI (99.9%): [577214.508, 583432.493] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 33.33% complete, ETA 01:05:45
# Fork: 1 of 1
# Warmup Iteration   1: 21964.844 ns/op
# Warmup Iteration   2: 10624.574 ns/op
# Warmup Iteration   3: 10522.145 ns/op
# Warmup Iteration   4: 10532.048 ns/op
Iteration   1: 10717.653 ns/op
Iteration   2: 10518.257 ns/op
Iteration   3: 10536.956 ns/op
Iteration   4: 10535.250 ns/op
Iteration   5: 10503.149 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  10562.253 ±(99.9%) 338.698 ns/op [Average]
  (min, avg, max) = (10503.149, 10562.253, 10717.653), stdev = 87.959
  CI (99.9%): [10223.554, 10900.951] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 33.53% complete, ETA 01:05:34
# Fork: 1 of 1
# Warmup Iteration   1: 39152.539 ns/op
# Warmup Iteration   2: 18977.772 ns/op
# Warmup Iteration   3: 18086.002 ns/op
# Warmup Iteration   4: 17716.999 ns/op
Iteration   1: 17728.203 ns/op
Iteration   2: 17719.322 ns/op
Iteration   3: 17766.096 ns/op
Iteration   4: 17776.210 ns/op
Iteration   5: 17750.913 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  17748.149 ±(99.9%) 93.254 ns/op [Average]
  (min, avg, max) = (17719.322, 17748.149, 17776.210), stdev = 24.218
  CI (99.9%): [17654.895, 17841.403] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 33.73% complete, ETA 01:05:22
# Fork: 1 of 1
# Warmup Iteration   1: 76029.098 ns/op
# Warmup Iteration   2: 39162.315 ns/op
# Warmup Iteration   3: 38858.469 ns/op
# Warmup Iteration   4: 38254.745 ns/op
Iteration   1: 40841.964 ns/op
Iteration   2: 38313.897 ns/op
Iteration   3: 39285.723 ns/op
Iteration   4: 38164.873 ns/op
Iteration   5: 38201.787 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  38961.649 ±(99.9%) 4420.882 ns/op [Average]
  (min, avg, max) = (38164.873, 38961.649, 40841.964), stdev = 1148.089
  CI (99.9%): [34540.767, 43382.531] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 33.92% complete, ETA 01:05:11
# Fork: 1 of 1
# Warmup Iteration   1: 303302.485 ns/op
# Warmup Iteration   2: 103628.195 ns/op
# Warmup Iteration   3: 99308.085 ns/op
# Warmup Iteration   4: 99070.715 ns/op
Iteration   1: 101478.863 ns/op
Iteration   2: 99194.983 ns/op
Iteration   3: 98934.371 ns/op
Iteration   4: 98973.028 ns/op
Iteration   5: 98556.464 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  99427.542 ±(99.9%) 4503.188 ns/op [Average]
  (min, avg, max) = (98556.464, 99427.542, 101478.863), stdev = 1169.464
  CI (99.9%): [94924.354, 103930.729] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 34.12% complete, ETA 01:04:59
# Fork: 1 of 1
# Warmup Iteration   1: 1748944.372 ns/op
# Warmup Iteration   2: 833949.097 ns/op
# Warmup Iteration   3: 784211.410 ns/op
# Warmup Iteration   4: 771278.229 ns/op
Iteration   1: 765535.670 ns/op
Iteration   2: 765323.523 ns/op
Iteration   3: 765237.990 ns/op
Iteration   4: 765635.432 ns/op
Iteration   5: 766544.216 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  765655.366 ±(99.9%) 2009.267 ns/op [Average]
  (min, avg, max) = (765237.990, 765655.366, 766544.216), stdev = 521.800
  CI (99.9%): [763646.099, 767664.633] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 34.31% complete, ETA 01:04:48
# Fork: 1 of 1
# Warmup Iteration   1: 8488.651 ns/op
# Warmup Iteration   2: 5612.351 ns/op
# Warmup Iteration   3: 5354.964 ns/op
# Warmup Iteration   4: 5345.540 ns/op
Iteration   1: 5334.987 ns/op
Iteration   2: 5336.977 ns/op
Iteration   3: 5319.525 ns/op
Iteration   4: 5546.905 ns/op
Iteration   5: 5337.150 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5375.109 ±(99.9%) 370.885 ns/op [Average]
  (min, avg, max) = (5319.525, 5375.109, 5546.905), stdev = 96.318
  CI (99.9%): [5004.224, 5745.994] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 34.51% complete, ETA 01:04:36
# Fork: 1 of 1
# Warmup Iteration   1: 26440.233 ns/op
# Warmup Iteration   2: 12211.871 ns/op
# Warmup Iteration   3: 11640.300 ns/op
# Warmup Iteration   4: 11584.988 ns/op
Iteration   1: 11581.365 ns/op
Iteration   2: 11599.203 ns/op
Iteration   3: 11603.760 ns/op
Iteration   4: 11561.344 ns/op
Iteration   5: 11577.123 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11584.559 ±(99.9%) 66.349 ns/op [Average]
  (min, avg, max) = (11561.344, 11584.559, 11603.760), stdev = 17.231
  CI (99.9%): [11518.210, 11650.908] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 34.71% complete, ETA 01:04:24
# Fork: 1 of 1
# Warmup Iteration   1: 36679.083 ns/op
# Warmup Iteration   2: 18863.926 ns/op
# Warmup Iteration   3: 18693.734 ns/op
# Warmup Iteration   4: 17988.335 ns/op
Iteration   1: 17997.913 ns/op
Iteration   2: 17970.469 ns/op
Iteration   3: 17951.529 ns/op
Iteration   4: 18105.931 ns/op
Iteration   5: 18049.027 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  18014.974 ±(99.9%) 241.471 ns/op [Average]
  (min, avg, max) = (17951.529, 18014.974, 18105.931), stdev = 62.709
  CI (99.9%): [17773.502, 18256.445] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 34.90% complete, ETA 01:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 57053.398 ns/op
# Warmup Iteration   2: 31692.626 ns/op
# Warmup Iteration   3: 27008.536 ns/op
# Warmup Iteration   4: 27396.286 ns/op
Iteration   1: 26782.533 ns/op
Iteration   2: 27290.832 ns/op
Iteration   3: 26802.815 ns/op
Iteration   4: 26824.263 ns/op
Iteration   5: 26847.114 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  26909.511 ±(99.9%) 826.036 ns/op [Average]
  (min, avg, max) = (26782.533, 26909.511, 27290.832), stdev = 214.519
  CI (99.9%): [26083.476, 27735.547] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 35.10% complete, ETA 01:04:00
# Fork: 1 of 1
# Warmup Iteration   1: 395064.514 ns/op
# Warmup Iteration   2: 259220.761 ns/op
# Warmup Iteration   3: 230196.754 ns/op
# Warmup Iteration   4: 236148.983 ns/op
Iteration   1: 231861.366 ns/op
Iteration   2: 230554.490 ns/op
Iteration   3: 230230.278 ns/op
Iteration   4: 230094.255 ns/op
Iteration   5: 233212.980 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  231190.674 ±(99.9%) 5118.886 ns/op [Average]
  (min, avg, max) = (230094.255, 231190.674, 233212.980), stdev = 1329.358
  CI (99.9%): [226071.788, 236309.560] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 35.29% complete, ETA 01:03:49
# Fork: 1 of 1
# Warmup Iteration   1: 5575.908 ns/op
# Warmup Iteration   2: 2816.311 ns/op
# Warmup Iteration   3: 2613.975 ns/op
# Warmup Iteration   4: 2611.318 ns/op
Iteration   1: 2615.413 ns/op
Iteration   2: 2645.736 ns/op
Iteration   3: 2622.773 ns/op
Iteration   4: 2620.367 ns/op
Iteration   5: 2622.437 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2625.345 ±(99.9%) 45.329 ns/op [Average]
  (min, avg, max) = (2615.413, 2625.345, 2645.736), stdev = 11.772
  CI (99.9%): [2580.016, 2670.674] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 35.49% complete, ETA 01:03:37
# Fork: 1 of 1
# Warmup Iteration   1: 12706.167 ns/op
# Warmup Iteration   2: 5545.180 ns/op
# Warmup Iteration   3: 5391.814 ns/op
# Warmup Iteration   4: 5369.479 ns/op
Iteration   1: 5429.422 ns/op
Iteration   2: 5436.412 ns/op
Iteration   3: 5324.079 ns/op
Iteration   4: 5412.081 ns/op
Iteration   5: 5377.176 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5395.834 ±(99.9%) 177.877 ns/op [Average]
  (min, avg, max) = (5324.079, 5395.834, 5436.412), stdev = 46.194
  CI (99.9%): [5217.956, 5573.711] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 35.69% complete, ETA 01:03:26
# Fork: 1 of 1
# Warmup Iteration   1: 21441.234 ns/op
# Warmup Iteration   2: 10880.715 ns/op
# Warmup Iteration   3: 10571.785 ns/op
# Warmup Iteration   4: 10509.952 ns/op
Iteration   1: 10476.969 ns/op
Iteration   2: 10506.484 ns/op
Iteration   3: 10485.746 ns/op
Iteration   4: 10512.852 ns/op
Iteration   5: 10515.922 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  10499.595 ±(99.9%) 66.515 ns/op [Average]
  (min, avg, max) = (10476.969, 10499.595, 10515.922), stdev = 17.274
  CI (99.9%): [10433.079, 10566.110] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 35.88% complete, ETA 01:03:14
# Fork: 1 of 1
# Warmup Iteration   1: 44463.328 ns/op
# Warmup Iteration   2: 23882.356 ns/op
# Warmup Iteration   3: 25267.323 ns/op
# Warmup Iteration   4: 22793.636 ns/op
Iteration   1: 22725.974 ns/op
Iteration   2: 23275.071 ns/op
Iteration   3: 22698.638 ns/op
Iteration   4: 22717.951 ns/op
Iteration   5: 22723.011 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  22828.129 ±(99.9%) 962.950 ns/op [Average]
  (min, avg, max) = (22698.638, 22828.129, 23275.071), stdev = 250.075
  CI (99.9%): [21865.179, 23791.079] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 36.08% complete, ETA 01:03:02
# Fork: 1 of 1
# Warmup Iteration   1: 412335.658 ns/op
# Warmup Iteration   2: 227022.315 ns/op
# Warmup Iteration   3: 203765.638 ns/op
# Warmup Iteration   4: 203477.867 ns/op
Iteration   1: 204534.505 ns/op
Iteration   2: 204390.667 ns/op
Iteration   3: 203761.642 ns/op
Iteration   4: 205815.495 ns/op
Iteration   5: 207075.995 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  205115.661 ±(99.9%) 5104.611 ns/op [Average]
  (min, avg, max) = (203761.642, 205115.661, 207075.995), stdev = 1325.651
  CI (99.9%): [200011.050, 210220.272] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 36.27% complete, ETA 01:02:51
# Fork: 1 of 1
# Warmup Iteration   1: 13743.026 ns/op
# Warmup Iteration   2: 6897.976 ns/op
# Warmup Iteration   3: 6432.046 ns/op
# Warmup Iteration   4: 6433.852 ns/op
Iteration   1: 6515.336 ns/op
Iteration   2: 6442.718 ns/op
Iteration   3: 6435.366 ns/op
Iteration   4: 6618.639 ns/op
Iteration   5: 6547.788 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6511.969 ±(99.9%) 294.118 ns/op [Average]
  (min, avg, max) = (6435.366, 6511.969, 6618.639), stdev = 76.382
  CI (99.9%): [6217.851, 6806.088] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 36.47% complete, ETA 01:02:39
# Fork: 1 of 1
# Warmup Iteration   1: 28012.578 ns/op
# Warmup Iteration   2: 12758.019 ns/op
# Warmup Iteration   3: 12669.346 ns/op
# Warmup Iteration   4: 12675.825 ns/op
Iteration   1: 12779.611 ns/op
Iteration   2: 12789.044 ns/op
Iteration   3: 13021.044 ns/op
Iteration   4: 12897.444 ns/op
Iteration   5: 12821.468 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  12861.722 ±(99.9%) 386.526 ns/op [Average]
  (min, avg, max) = (12779.611, 12861.722, 13021.044), stdev = 100.380
  CI (99.9%): [12475.196, 13248.248] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 36.67% complete, ETA 01:02:27
# Fork: 1 of 1
# Warmup Iteration   1: 41414.527 ns/op
# Warmup Iteration   2: 26754.321 ns/op
# Warmup Iteration   3: 26622.176 ns/op
# Warmup Iteration   4: 26115.846 ns/op
Iteration   1: 26158.939 ns/op
Iteration   2: 26169.100 ns/op
Iteration   3: 26121.697 ns/op
Iteration   4: 26417.012 ns/op
Iteration   5: 26125.411 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  26198.432 ±(99.9%) 477.144 ns/op [Average]
  (min, avg, max) = (26121.697, 26198.432, 26417.012), stdev = 123.913
  CI (99.9%): [25721.288, 26675.576] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 36.86% complete, ETA 01:02:15
# Fork: 1 of 1
# Warmup Iteration   1: 99359.804 ns/op
# Warmup Iteration   2: 59450.202 ns/op
# Warmup Iteration   3: 59799.513 ns/op
# Warmup Iteration   4: 59790.565 ns/op
Iteration   1: 59149.690 ns/op
Iteration   2: 58993.122 ns/op
Iteration   3: 59161.649 ns/op
Iteration   4: 59094.320 ns/op
Iteration   5: 59060.754 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  59091.907 ±(99.9%) 264.951 ns/op [Average]
  (min, avg, max) = (58993.122, 59091.907, 59161.649), stdev = 68.807
  CI (99.9%): [58826.956, 59356.858] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 37.06% complete, ETA 01:02:04
# Fork: 1 of 1
# Warmup Iteration   1: 1074756.273 ns/op
# Warmup Iteration   2: 627123.121 ns/op
# Warmup Iteration   3: 665777.341 ns/op
# Warmup Iteration   4: 606593.542 ns/op
Iteration   1: 619889.647 ns/op
Iteration   2: 605667.662 ns/op
Iteration   3: 607386.209 ns/op
Iteration   4: 621791.716 ns/op
Iteration   5: 605400.052 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  612027.057 ±(99.9%) 31227.360 ns/op [Average]
  (min, avg, max) = (605400.052, 612027.057, 621791.716), stdev = 8109.646
  CI (99.9%): [580799.697, 643254.417] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 37.25% complete, ETA 01:01:52
# Fork: 1 of 1
# Warmup Iteration   1: 67523.186 ns/op
# Warmup Iteration   2: 33410.525 ns/op
# Warmup Iteration   3: 25954.497 ns/op
# Warmup Iteration   4: 25660.044 ns/op
Iteration   1: 25666.364 ns/op
Iteration   2: 25635.605 ns/op
Iteration   3: 26439.146 ns/op
Iteration   4: 25820.744 ns/op
Iteration   5: 25740.934 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  25860.559 ±(99.9%) 1275.624 ns/op [Average]
  (min, avg, max) = (25635.605, 25860.559, 26439.146), stdev = 331.276
  CI (99.9%): [24584.935, 27136.183] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 37.45% complete, ETA 01:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 112288.228 ns/op
# Warmup Iteration   2: 55551.056 ns/op
# Warmup Iteration   3: 51140.977 ns/op
# Warmup Iteration   4: 46988.189 ns/op
Iteration   1: 47600.885 ns/op
Iteration   2: 46737.860 ns/op
Iteration   3: 46824.916 ns/op
Iteration   4: 47050.238 ns/op
Iteration   5: 46894.068 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  47021.593 ±(99.9%) 1322.528 ns/op [Average]
  (min, avg, max) = (46737.860, 47021.593, 47600.885), stdev = 343.456
  CI (99.9%): [45699.066, 48344.121] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 37.65% complete, ETA 01:01:29
# Fork: 1 of 1
# Warmup Iteration   1: 303950.691 ns/op
# Warmup Iteration   2: 134271.015 ns/op
# Warmup Iteration   3: 108146.164 ns/op
# Warmup Iteration   4: 99331.872 ns/op
Iteration   1: 99692.620 ns/op
Iteration   2: 99998.266 ns/op
Iteration   3: 100348.305 ns/op
Iteration   4: 107127.114 ns/op
Iteration   5: 98364.097 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  101106.080 ±(99.9%) 13279.233 ns/op [Average]
  (min, avg, max) = (98364.097, 101106.080, 107127.114), stdev = 3448.575
  CI (99.9%): [87826.847, 114385.314] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 37.84% complete, ETA 01:01:17
# Fork: 1 of 1
# Warmup Iteration   1: 499678.873 ns/op
# Warmup Iteration   2: 273978.793 ns/op
# Warmup Iteration   3: 233274.895 ns/op
# Warmup Iteration   4: 233181.303 ns/op
Iteration   1: 234810.738 ns/op
Iteration   2: 232589.578 ns/op
Iteration   3: 232022.537 ns/op
Iteration   4: 233309.020 ns/op
Iteration   5: 233902.869 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  233326.948 ±(99.9%) 4208.862 ns/op [Average]
  (min, avg, max) = (232022.537, 233326.948, 234810.738), stdev = 1093.028
  CI (99.9%): [229118.086, 237535.810] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 38.04% complete, ETA 01:01:05
# Fork: 1 of 1
# Warmup Iteration   1: 3841774.828 ns/op
# Warmup Iteration   2: 2729186.889 ns/op
# Warmup Iteration   3: 2455693.535 ns/op
# Warmup Iteration   4: 2138567.472 ns/op
Iteration   1: 2129170.370 ns/op
Iteration   2: 2134564.509 ns/op
Iteration   3: 2191769.783 ns/op
Iteration   4: 2144384.870 ns/op
Iteration   5: 2141766.505 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2148331.208 ±(99.9%) 96309.185 ns/op [Average]
  (min, avg, max) = (2129170.370, 2148331.208, 2191769.783), stdev = 25011.190
  CI (99.9%): [2052022.022, 2244640.393] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 38.24% complete, ETA 01:00:54
# Fork: 1 of 1
# Warmup Iteration   1: 6503.084 ns/op
# Warmup Iteration   2: 3720.891 ns/op
# Warmup Iteration   3: 3564.762 ns/op
# Warmup Iteration   4: 3605.102 ns/op
Iteration   1: 3546.293 ns/op
Iteration   2: 3544.012 ns/op
Iteration   3: 3549.462 ns/op
Iteration   4: 3652.547 ns/op
Iteration   5: 3550.740 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3568.611 ±(99.9%) 180.964 ns/op [Average]
  (min, avg, max) = (3544.012, 3568.611, 3652.547), stdev = 46.996
  CI (99.9%): [3387.647, 3749.575] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 38.43% complete, ETA 01:00:42
# Fork: 1 of 1
# Warmup Iteration   1: 12439.279 ns/op
# Warmup Iteration   2: 6915.902 ns/op
# Warmup Iteration   3: 6041.401 ns/op
# Warmup Iteration   4: 6024.454 ns/op
Iteration   1: 6061.630 ns/op
Iteration   2: 6067.755 ns/op
Iteration   3: 6090.438 ns/op
Iteration   4: 6030.646 ns/op
Iteration   5: 6141.251 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6078.344 ±(99.9%) 158.418 ns/op [Average]
  (min, avg, max) = (6030.646, 6078.344, 6141.251), stdev = 41.141
  CI (99.9%): [5919.926, 6236.762] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 38.63% complete, ETA 01:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 25094.632 ns/op
# Warmup Iteration   2: 11955.641 ns/op
# Warmup Iteration   3: 11568.742 ns/op
# Warmup Iteration   4: 11470.821 ns/op
Iteration   1: 11477.314 ns/op
Iteration   2: 11520.766 ns/op
Iteration   3: 11529.520 ns/op
Iteration   4: 11518.333 ns/op
Iteration   5: 11754.446 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11560.076 ±(99.9%) 425.538 ns/op [Average]
  (min, avg, max) = (11477.314, 11560.076, 11754.446), stdev = 110.511
  CI (99.9%): [11134.538, 11985.613] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 38.82% complete, ETA 01:00:19
# Fork: 1 of 1
# Warmup Iteration   1: 55119.587 ns/op
# Warmup Iteration   2: 24168.199 ns/op
# Warmup Iteration   3: 23222.183 ns/op
# Warmup Iteration   4: 22503.670 ns/op
Iteration   1: 22454.955 ns/op
Iteration   2: 22819.461 ns/op
Iteration   3: 22484.620 ns/op
Iteration   4: 22464.222 ns/op
Iteration   5: 23611.938 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  22767.039 ±(99.9%) 1911.271 ns/op [Average]
  (min, avg, max) = (22454.955, 22767.039, 23611.938), stdev = 496.351
  CI (99.9%): [20855.768, 24678.310] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 39.02% complete, ETA 01:00:07
# Fork: 1 of 1
# Warmup Iteration   1: 395613.428 ns/op
# Warmup Iteration   2: 218585.139 ns/op
# Warmup Iteration   3: 207783.668 ns/op
# Warmup Iteration   4: 207919.995 ns/op
Iteration   1: 207854.095 ns/op
Iteration   2: 208009.833 ns/op
Iteration   3: 207115.419 ns/op
Iteration   4: 207931.433 ns/op
Iteration   5: 209972.799 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  208176.716 ±(99.9%) 4104.307 ns/op [Average]
  (min, avg, max) = (207115.419, 208176.716, 209972.799), stdev = 1065.875
  CI (99.9%): [204072.409, 212281.023] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 39.22% complete, ETA 00:59:55
# Fork: 1 of 1
# Warmup Iteration   1: 44573.254 ns/op
# Warmup Iteration   2: 35987.265 ns/op
# Warmup Iteration   3: 29167.351 ns/op
# Warmup Iteration   4: 37950.018 ns/op
Iteration   1: 37885.415 ns/op
Iteration   2: 38011.680 ns/op
Iteration   3: 37892.274 ns/op
Iteration   4: 38039.098 ns/op
Iteration   5: 38381.174 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  38041.928 ±(99.9%) 777.086 ns/op [Average]
  (min, avg, max) = (37885.415, 38041.928, 38381.174), stdev = 201.807
  CI (99.9%): [37264.842, 38819.014] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 39.41% complete, ETA 00:59:44
# Fork: 1 of 1
# Warmup Iteration   1: 77387.871 ns/op
# Warmup Iteration   2: 68436.770 ns/op
# Warmup Iteration   3: 71666.714 ns/op
# Warmup Iteration   4: 73881.172 ns/op
Iteration   1: 70601.403 ns/op
Iteration   2: 67947.019 ns/op
Iteration   3: 71888.019 ns/op
Iteration   4: 69687.658 ns/op
Iteration   5: 70694.234 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  70163.667 ±(99.9%) 5641.757 ns/op [Average]
  (min, avg, max) = (67947.019, 70163.667, 71888.019), stdev = 1465.146
  CI (99.9%): [64521.909, 75805.424] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 39.61% complete, ETA 00:59:32
# Fork: 1 of 1
# Warmup Iteration   1: 141041.010 ns/op
# Warmup Iteration   2: 124255.887 ns/op
# Warmup Iteration   3: 139730.309 ns/op
# Warmup Iteration   4: 139582.716 ns/op
Iteration   1: 139210.364 ns/op
Iteration   2: 138162.387 ns/op
Iteration   3: 132302.518 ns/op
Iteration   4: 129655.365 ns/op
Iteration   5: 135566.358 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  134979.398 ±(99.9%) 15389.096 ns/op [Average]
  (min, avg, max) = (129655.365, 134979.398, 139210.364), stdev = 3996.499
  CI (99.9%): [119590.303, 150368.494] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 39.80% complete, ETA 00:59:21
# Fork: 1 of 1
# Warmup Iteration   1: 310665.075 ns/op
# Warmup Iteration   2: 316869.385 ns/op
# Warmup Iteration   3: 329694.603 ns/op
# Warmup Iteration   4: 330644.446 ns/op
Iteration   1: 338485.910 ns/op
Iteration   2: 338780.147 ns/op
Iteration   3: 333912.109 ns/op
Iteration   4: 333561.276 ns/op
Iteration   5: 330048.776 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  334957.644 ±(99.9%) 14174.367 ns/op [Average]
  (min, avg, max) = (330048.776, 334957.644, 338780.147), stdev = 3681.038
  CI (99.9%): [320783.277, 349132.010] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 40.00% complete, ETA 00:59:09
# Fork: 1 of 1
# Warmup Iteration   1: 2693226.971 ns/op
# Warmup Iteration   2: 2986002.860 ns/op
# Warmup Iteration   3: 3066034.933 ns/op
# Warmup Iteration   4: 3131242.280 ns/op
Iteration   1: 3116903.579 ns/op
Iteration   2: 3158221.359 ns/op
Iteration   3: 3112176.920 ns/op
Iteration   4: 3104826.053 ns/op
Iteration   5: 3042212.612 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3106868.105 ±(99.9%) 160514.055 ns/op [Average]
  (min, avg, max) = (3042212.612, 3106868.105, 3158221.359), stdev = 41684.990
  CI (99.9%): [2946354.050, 3267382.159] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 40.20% complete, ETA 00:58:58
# Fork: 1 of 1
# Warmup Iteration   1: 5152.254 ns/op
# Warmup Iteration   2: 3336.772 ns/op
# Warmup Iteration   3: 3603.326 ns/op
# Warmup Iteration   4: 3597.199 ns/op
Iteration   1: 3594.561 ns/op
Iteration   2: 3616.340 ns/op
Iteration   3: 3728.828 ns/op
Iteration   4: 3596.341 ns/op
Iteration   5: 3577.732 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3622.760 ±(99.9%) 234.323 ns/op [Average]
  (min, avg, max) = (3577.732, 3622.760, 3728.828), stdev = 60.853
  CI (99.9%): [3388.437, 3857.083] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 40.39% complete, ETA 00:58:46
# Fork: 1 of 1
# Warmup Iteration   1: 11627.098 ns/op
# Warmup Iteration   2: 5809.782 ns/op
# Warmup Iteration   3: 6273.266 ns/op
# Warmup Iteration   4: 6199.653 ns/op
Iteration   1: 6248.538 ns/op
Iteration   2: 6339.152 ns/op
Iteration   3: 6260.863 ns/op
Iteration   4: 6149.934 ns/op
Iteration   5: 6299.037 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6259.505 ±(99.9%) 272.515 ns/op [Average]
  (min, avg, max) = (6149.934, 6259.505, 6339.152), stdev = 70.771
  CI (99.9%): [5986.990, 6532.020] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 40.59% complete, ETA 00:58:34
# Fork: 1 of 1
# Warmup Iteration   1: 20977.642 ns/op
# Warmup Iteration   2: 13079.012 ns/op
# Warmup Iteration   3: 13546.263 ns/op
# Warmup Iteration   4: 13332.064 ns/op
Iteration   1: 13370.578 ns/op
Iteration   2: 13212.014 ns/op
Iteration   3: 13277.778 ns/op
Iteration   4: 13400.719 ns/op
Iteration   5: 14059.819 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  13464.182 ±(99.9%) 1314.175 ns/op [Average]
  (min, avg, max) = (13212.014, 13464.182, 14059.819), stdev = 341.287
  CI (99.9%): [12150.007, 14778.356] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 40.78% complete, ETA 00:58:22
# Fork: 1 of 1
# Warmup Iteration   1: 49379.169 ns/op
# Warmup Iteration   2: 30249.656 ns/op
# Warmup Iteration   3: 30195.935 ns/op
# Warmup Iteration   4: 29945.226 ns/op
Iteration   1: 29990.645 ns/op
Iteration   2: 30390.217 ns/op
Iteration   3: 30430.364 ns/op
Iteration   4: 29960.106 ns/op
Iteration   5: 30325.637 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  30219.394 ±(99.9%) 870.733 ns/op [Average]
  (min, avg, max) = (29960.106, 30219.394, 30430.364), stdev = 226.127
  CI (99.9%): [29348.661, 31090.127] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 40.98% complete, ETA 00:58:10
# Fork: 1 of 1
# Warmup Iteration   1: 290666.134 ns/op
# Warmup Iteration   2: 251264.480 ns/op
# Warmup Iteration   3: 343015.024 ns/op
# Warmup Iteration   4: 351285.990 ns/op
Iteration   1: 351159.234 ns/op
Iteration   2: 354349.401 ns/op
Iteration   3: 345801.342 ns/op
Iteration   4: 340653.060 ns/op
Iteration   5: 333026.356 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  344997.879 ±(99.9%) 32688.181 ns/op [Average]
  (min, avg, max) = (333026.356, 344997.879, 354349.401), stdev = 8489.017
  CI (99.9%): [312309.698, 377686.059] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 41.18% complete, ETA 00:57:59
# Fork: 1 of 1
# Warmup Iteration   1: 62760.792 ns/op
# Warmup Iteration   2: 28762.842 ns/op
# Warmup Iteration   3: 27494.480 ns/op
# Warmup Iteration   4: 27318.256 ns/op
Iteration   1: 27206.597 ns/op
Iteration   2: 27160.255 ns/op
Iteration   3: 27902.451 ns/op
Iteration   4: 27094.168 ns/op
Iteration   5: 27245.649 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  27321.824 ±(99.9%) 1268.580 ns/op [Average]
  (min, avg, max) = (27094.168, 27321.824, 27902.451), stdev = 329.446
  CI (99.9%): [26053.244, 28590.404] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 41.37% complete, ETA 00:57:47
# Fork: 1 of 1
# Warmup Iteration   1: 129497.058 ns/op
# Warmup Iteration   2: 58863.138 ns/op
# Warmup Iteration   3: 58741.106 ns/op
# Warmup Iteration   4: 58406.876 ns/op
Iteration   1: 58393.764 ns/op
Iteration   2: 60284.126 ns/op
Iteration   3: 58141.477 ns/op
Iteration   4: 58473.072 ns/op
Iteration   5: 57926.980 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  58643.884 ±(99.9%) 3626.815 ns/op [Average]
  (min, avg, max) = (57926.980, 58643.884, 60284.126), stdev = 941.872
  CI (99.9%): [55017.069, 62270.699] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 41.57% complete, ETA 00:57:36
# Fork: 1 of 1
# Warmup Iteration   1: 246935.830 ns/op
# Warmup Iteration   2: 121500.501 ns/op
# Warmup Iteration   3: 127058.200 ns/op
# Warmup Iteration   4: 115510.155 ns/op
Iteration   1: 116557.889 ns/op
Iteration   2: 116557.978 ns/op
Iteration   3: 119334.380 ns/op
Iteration   4: 115973.652 ns/op
Iteration   5: 117568.898 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  117198.559 ±(99.9%) 5101.225 ns/op [Average]
  (min, avg, max) = (115973.652, 117198.559, 119334.380), stdev = 1324.772
  CI (99.9%): [112097.334, 122299.784] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 41.76% complete, ETA 00:57:25
# Fork: 1 of 1
# Warmup Iteration   1: 477047.466 ns/op
# Warmup Iteration   2: 269654.962 ns/op
# Warmup Iteration   3: 286676.937 ns/op
# Warmup Iteration   4: 267737.201 ns/op
Iteration   1: 261946.303 ns/op
Iteration   2: 261075.881 ns/op
Iteration   3: 261680.742 ns/op
Iteration   4: 260062.723 ns/op
Iteration   5: 260927.829 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  261138.696 ±(99.9%) 2824.502 ns/op [Average]
  (min, avg, max) = (260062.723, 261138.696, 261946.303), stdev = 733.514
  CI (99.9%): [258314.194, 263963.197] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 41.96% complete, ETA 00:57:14
# Fork: 1 of 1
# Warmup Iteration   1: 4498380.303 ns/op
# Warmup Iteration   2: 2673697.521 ns/op
# Warmup Iteration   3: 2649617.870 ns/op
# Warmup Iteration   4: 2635549.654 ns/op
Iteration   1: 2628178.635 ns/op
Iteration   2: 2617376.724 ns/op
Iteration   3: 2721801.627 ns/op
Iteration   4: 2704545.249 ns/op
Iteration   5: 2642079.481 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2662796.343 ±(99.9%) 181788.636 ns/op [Average]
  (min, avg, max) = (2617376.724, 2662796.343, 2721801.627), stdev = 47209.931
  CI (99.9%): [2481007.707, 2844584.979] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 42.16% complete, ETA 00:57:03
# Fork: 1 of 1
# Warmup Iteration   1: 28783.944 ns/op
# Warmup Iteration   2: 19030.407 ns/op
# Warmup Iteration   3: 18617.673 ns/op
# Warmup Iteration   4: 18584.988 ns/op
Iteration   1: 18573.631 ns/op
Iteration   2: 18581.095 ns/op
Iteration   3: 18587.830 ns/op
Iteration   4: 18623.886 ns/op
Iteration   5: 19186.916 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  18710.671 ±(99.9%) 1027.842 ns/op [Average]
  (min, avg, max) = (18573.631, 18710.671, 19186.916), stdev = 266.927
  CI (99.9%): [17682.830, 19738.513] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 42.35% complete, ETA 00:56:51
# Fork: 1 of 1
# Warmup Iteration   1: 63051.441 ns/op
# Warmup Iteration   2: 35797.479 ns/op
# Warmup Iteration   3: 37971.806 ns/op
# Warmup Iteration   4: 35362.285 ns/op
Iteration   1: 34874.153 ns/op
Iteration   2: 36925.389 ns/op
Iteration   3: 34986.286 ns/op
Iteration   4: 34794.495 ns/op
Iteration   5: 34916.165 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  35299.298 ±(99.9%) 3510.487 ns/op [Average]
  (min, avg, max) = (34794.495, 35299.298, 36925.389), stdev = 911.662
  CI (99.9%): [31788.811, 38809.784] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 42.55% complete, ETA 00:56:39
# Fork: 1 of 1
# Warmup Iteration   1: 127477.859 ns/op
# Warmup Iteration   2: 71238.498 ns/op
# Warmup Iteration   3: 72394.767 ns/op
# Warmup Iteration   4: 70181.389 ns/op
Iteration   1: 71448.819 ns/op
Iteration   2: 72718.671 ns/op
Iteration   3: 72230.016 ns/op
Iteration   4: 72583.698 ns/op
Iteration   5: 72674.201 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  72331.081 ±(99.9%) 2037.908 ns/op [Average]
  (min, avg, max) = (71448.819, 72331.081, 72718.671), stdev = 529.238
  CI (99.9%): [70293.173, 74368.989] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 42.75% complete, ETA 00:56:28
# Fork: 1 of 1
# Warmup Iteration   1: 278247.442 ns/op
# Warmup Iteration   2: 188893.322 ns/op
# Warmup Iteration   3: 189826.417 ns/op
# Warmup Iteration   4: 179141.101 ns/op
Iteration   1: 182165.628 ns/op
Iteration   2: 178502.019 ns/op
Iteration   3: 179169.029 ns/op
Iteration   4: 179407.629 ns/op
Iteration   5: 180108.181 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  179870.497 ±(99.9%) 5412.572 ns/op [Average]
  (min, avg, max) = (178502.019, 179870.497, 182165.628), stdev = 1405.628
  CI (99.9%): [174457.925, 185283.069] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 42.94% complete, ETA 00:56:16
# Fork: 1 of 1
# Warmup Iteration   1: 2232051.854 ns/op
# Warmup Iteration   2: 1609282.695 ns/op
# Warmup Iteration   3: 1642494.901 ns/op
# Warmup Iteration   4: 1671691.973 ns/op
Iteration   1: 1595792.405 ns/op
Iteration   2: 1582794.439 ns/op
Iteration   3: 1583363.985 ns/op
Iteration   4: 1589014.999 ns/op
Iteration   5: 1584153.463 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  1587023.858 ±(99.9%) 21123.676 ns/op [Average]
  (min, avg, max) = (1582794.439, 1587023.858, 1595792.405), stdev = 5485.752
  CI (99.9%): [1565900.182, 1608147.535] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 43.14% complete, ETA 00:56:04
# Fork: 1 of 1
# Warmup Iteration   1: 20360.314 ns/op
# Warmup Iteration   2: 15588.762 ns/op
# Warmup Iteration   3: 15613.770 ns/op
# Warmup Iteration   4: 15616.236 ns/op
Iteration   1: 15715.043 ns/op
Iteration   2: 15644.633 ns/op
Iteration   3: 15477.553 ns/op
Iteration   4: 15454.947 ns/op
Iteration   5: 16057.834 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  15670.002 ±(99.9%) 936.053 ns/op [Average]
  (min, avg, max) = (15454.947, 15670.002, 16057.834), stdev = 243.090
  CI (99.9%): [14733.949, 16606.055] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 43.33% complete, ETA 00:55:53
# Fork: 1 of 1
# Warmup Iteration   1: 39283.678 ns/op
# Warmup Iteration   2: 26950.133 ns/op
# Warmup Iteration   3: 27111.699 ns/op
# Warmup Iteration   4: 25872.265 ns/op
Iteration   1: 25895.749 ns/op
Iteration   2: 26068.918 ns/op
Iteration   3: 26014.399 ns/op
Iteration   4: 25900.828 ns/op
Iteration   5: 25924.904 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  25960.960 ±(99.9%) 296.268 ns/op [Average]
  (min, avg, max) = (25895.749, 25960.960, 26068.918), stdev = 76.940
  CI (99.9%): [25664.692, 26257.228] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 43.53% complete, ETA 00:55:41
# Fork: 1 of 1
# Warmup Iteration   1: 103764.315 ns/op
# Warmup Iteration   2: 64075.319 ns/op
# Warmup Iteration   3: 64548.554 ns/op
# Warmup Iteration   4: 62937.124 ns/op
Iteration   1: 62248.843 ns/op
Iteration   2: 63053.020 ns/op
Iteration   3: 62539.784 ns/op
Iteration   4: 63308.431 ns/op
Iteration   5: 62671.080 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  62764.232 ±(99.9%) 1615.700 ns/op [Average]
  (min, avg, max) = (62248.843, 62764.232, 63308.431), stdev = 419.592
  CI (99.9%): [61148.531, 64379.932] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 43.73% complete, ETA 00:55:29
# Fork: 1 of 1
# Warmup Iteration   1: 241887.066 ns/op
# Warmup Iteration   2: 144516.735 ns/op
# Warmup Iteration   3: 154537.460 ns/op
# Warmup Iteration   4: 161666.665 ns/op
Iteration   1: 156084.318 ns/op
Iteration   2: 160826.261 ns/op
Iteration   3: 157999.270 ns/op
Iteration   4: 161030.587 ns/op
Iteration   5: 155599.716 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  158308.030 ±(99.9%) 9841.577 ns/op [Average]
  (min, avg, max) = (155599.716, 158308.030, 161030.587), stdev = 2555.826
  CI (99.9%): [148466.453, 168149.608] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 43.92% complete, ETA 00:55:18
# Fork: 1 of 1
# Warmup Iteration   1: 1916367.189 ns/op
# Warmup Iteration   2: 1486233.751 ns/op
# Warmup Iteration   3: 1440263.463 ns/op
# Warmup Iteration   4: 1457875.447 ns/op
Iteration   1: 1458699.096 ns/op
Iteration   2: 1439113.729 ns/op
Iteration   3: 1450703.779 ns/op
Iteration   4: 1459076.574 ns/op
Iteration   5: 1445970.474 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  1450712.730 ±(99.9%) 32830.089 ns/op [Average]
  (min, avg, max) = (1439113.729, 1450712.730, 1459076.574), stdev = 8525.870
  CI (99.9%): [1417882.641, 1483542.820] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 44.12% complete, ETA 00:55:06
# Fork: 1 of 1
# Warmup Iteration   1: 15549.626 ns/op
# Warmup Iteration   2: 10393.506 ns/op
# Warmup Iteration   3: 9784.589 ns/op
# Warmup Iteration   4: 9775.352 ns/op
Iteration   1: 9764.689 ns/op
Iteration   2: 10161.983 ns/op
Iteration   3: 10187.846 ns/op
Iteration   4: 9783.868 ns/op
Iteration   5: 9781.936 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9936.065 ±(99.9%) 840.821 ns/op [Average]
  (min, avg, max) = (9764.689, 9936.065, 10187.846), stdev = 218.358
  CI (99.9%): [9095.244, 10776.885] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 44.31% complete, ETA 00:54:55
# Fork: 1 of 1
# Warmup Iteration   1: 30411.637 ns/op
# Warmup Iteration   2: 19343.203 ns/op
# Warmup Iteration   3: 18585.525 ns/op
# Warmup Iteration   4: 18664.799 ns/op
Iteration   1: 18569.445 ns/op
Iteration   2: 18744.437 ns/op
Iteration   3: 18612.127 ns/op
Iteration   4: 18549.799 ns/op
Iteration   5: 18491.662 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  18593.494 ±(99.9%) 365.245 ns/op [Average]
  (min, avg, max) = (18491.662, 18593.494, 18744.437), stdev = 94.853
  CI (99.9%): [18228.249, 18958.739] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 44.51% complete, ETA 00:54:43
# Fork: 1 of 1
# Warmup Iteration   1: 58619.317 ns/op
# Warmup Iteration   2: 42891.607 ns/op
# Warmup Iteration   3: 43061.486 ns/op
# Warmup Iteration   4: 41853.646 ns/op
Iteration   1: 41929.603 ns/op
Iteration   2: 41793.782 ns/op
Iteration   3: 41669.877 ns/op
Iteration   4: 43353.289 ns/op
Iteration   5: 41805.348 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  42110.380 ±(99.9%) 2698.767 ns/op [Average]
  (min, avg, max) = (41669.877, 42110.380, 43353.289), stdev = 700.861
  CI (99.9%): [39411.613, 44809.146] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 44.71% complete, ETA 00:54:31
# Fork: 1 of 1
# Warmup Iteration   1: 174810.597 ns/op
# Warmup Iteration   2: 98697.960 ns/op
# Warmup Iteration   3: 98598.809 ns/op
# Warmup Iteration   4: 101367.663 ns/op
Iteration   1: 99142.419 ns/op
Iteration   2: 99350.048 ns/op
Iteration   3: 102730.052 ns/op
Iteration   4: 98008.065 ns/op
Iteration   5: 98211.702 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  99488.457 ±(99.9%) 7323.441 ns/op [Average]
  (min, avg, max) = (98008.065, 99488.457, 102730.052), stdev = 1901.874
  CI (99.9%): [92165.016, 106811.898] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 44.90% complete, ETA 00:54:19
# Fork: 1 of 1
# Warmup Iteration   1: 1428349.480 ns/op
# Warmup Iteration   2: 905621.570 ns/op
# Warmup Iteration   3: 930420.981 ns/op
# Warmup Iteration   4: 850265.253 ns/op
Iteration   1: 867648.206 ns/op
Iteration   2: 850871.810 ns/op
Iteration   3: 850573.462 ns/op
Iteration   4: 852997.599 ns/op
Iteration   5: 852235.924 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  854865.400 ±(99.9%) 27778.897 ns/op [Average]
  (min, avg, max) = (850573.462, 854865.400, 867648.206), stdev = 7214.091
  CI (99.9%): [827086.503, 882644.297] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 45.10% complete, ETA 00:54:08
# Fork: 1 of 1
# Warmup Iteration   1: 70132.759 ns/op
# Warmup Iteration   2: 46915.663 ns/op
# Warmup Iteration   3: 41036.640 ns/op
# Warmup Iteration   4: 43320.604 ns/op
Iteration   1: 40507.155 ns/op
Iteration   2: 40384.783 ns/op
Iteration   3: 40453.839 ns/op
Iteration   4: 40429.944 ns/op
Iteration   5: 41639.091 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  40682.962 ±(99.9%) 2065.142 ns/op [Average]
  (min, avg, max) = (40384.783, 40682.962, 41639.091), stdev = 536.311
  CI (99.9%): [38617.821, 42748.104] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 45.29% complete, ETA 00:53:56
# Fork: 1 of 1
# Warmup Iteration   1: 165812.661 ns/op
# Warmup Iteration   2: 79922.754 ns/op
# Warmup Iteration   3: 74405.138 ns/op
# Warmup Iteration   4: 74755.012 ns/op
Iteration   1: 77265.056 ns/op
Iteration   2: 74345.974 ns/op
Iteration   3: 74455.602 ns/op
Iteration   4: 74374.922 ns/op
Iteration   5: 74202.287 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  74928.768 ±(99.9%) 5041.365 ns/op [Average]
  (min, avg, max) = (74202.287, 74928.768, 77265.056), stdev = 1309.227
  CI (99.9%): [69887.403, 79970.133] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 45.49% complete, ETA 00:53:44
# Fork: 1 of 1
# Warmup Iteration   1: 268758.787 ns/op
# Warmup Iteration   2: 150509.645 ns/op
# Warmup Iteration   3: 156123.783 ns/op
# Warmup Iteration   4: 151864.961 ns/op
Iteration   1: 150092.647 ns/op
Iteration   2: 148597.648 ns/op
Iteration   3: 147767.013 ns/op
Iteration   4: 157456.217 ns/op
Iteration   5: 152449.884 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  151272.682 ±(99.9%) 14970.529 ns/op [Average]
  (min, avg, max) = (147767.013, 151272.682, 157456.217), stdev = 3887.799
  CI (99.9%): [136302.153, 166243.211] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 45.69% complete, ETA 00:53:33
# Fork: 1 of 1
# Warmup Iteration   1: 702671.814 ns/op
# Warmup Iteration   2: 437409.726 ns/op
# Warmup Iteration   3: 369474.178 ns/op
# Warmup Iteration   4: 369090.288 ns/op
Iteration   1: 336529.305 ns/op
Iteration   2: 337081.708 ns/op
Iteration   3: 373021.682 ns/op
Iteration   4: 349382.031 ns/op
Iteration   5: 360000.474 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  351203.040 ±(99.9%) 60009.990 ns/op [Average]
  (min, avg, max) = (336529.305, 351203.040, 373021.682), stdev = 15584.404
  CI (99.9%): [291193.049, 411213.030] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 45.88% complete, ETA 00:53:21
# Fork: 1 of 1
# Warmup Iteration   1: 5880594.353 ns/op
# Warmup Iteration   2: 3353171.176 ns/op
# Warmup Iteration   3: 3330676.407 ns/op
# Warmup Iteration   4: 3332956.283 ns/op
Iteration   1: 3432974.985 ns/op
Iteration   2: 3315140.095 ns/op
Iteration   3: 3389237.259 ns/op
Iteration   4: 3439075.022 ns/op
Iteration   5: 3310548.672 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3377395.207 ±(99.9%) 238754.703 ns/op [Average]
  (min, avg, max) = (3310548.672, 3377395.207, 3439075.022), stdev = 62003.838
  CI (99.9%): [3138640.504, 3616149.910] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 46.08% complete, ETA 00:53:10
# Fork: 1 of 1
# Warmup Iteration   1: 84252.828 ns/op
# Warmup Iteration   2: 40413.237 ns/op
# Warmup Iteration   3: 39739.957 ns/op
# Warmup Iteration   4: 39020.044 ns/op
Iteration   1: 38754.524 ns/op
Iteration   2: 38809.966 ns/op
Iteration   3: 38838.959 ns/op
Iteration   4: 39043.721 ns/op
Iteration   5: 39015.104 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  38892.455 ±(99.9%) 496.925 ns/op [Average]
  (min, avg, max) = (38754.524, 38892.455, 39043.721), stdev = 129.050
  CI (99.9%): [38395.530, 39389.380] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 46.27% complete, ETA 00:52:58
# Fork: 1 of 1
# Warmup Iteration   1: 200646.979 ns/op
# Warmup Iteration   2: 74353.777 ns/op
# Warmup Iteration   3: 72725.312 ns/op
# Warmup Iteration   4: 71607.037 ns/op
Iteration   1: 71538.500 ns/op
Iteration   2: 71251.971 ns/op
Iteration   3: 71163.886 ns/op
Iteration   4: 71674.269 ns/op
Iteration   5: 71657.446 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  71457.215 ±(99.9%) 907.109 ns/op [Average]
  (min, avg, max) = (71163.886, 71457.215, 71674.269), stdev = 235.573
  CI (99.9%): [70550.106, 72364.324] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 46.47% complete, ETA 00:52:46
# Fork: 1 of 1
# Warmup Iteration   1: 274061.766 ns/op
# Warmup Iteration   2: 180080.121 ns/op
# Warmup Iteration   3: 141393.976 ns/op
# Warmup Iteration   4: 140952.753 ns/op
Iteration   1: 153580.584 ns/op
Iteration   2: 144858.536 ns/op
Iteration   3: 141527.272 ns/op
Iteration   4: 141865.809 ns/op
Iteration   5: 141964.513 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  144759.343 ±(99.9%) 19677.320 ns/op [Average]
  (min, avg, max) = (141527.272, 144759.343, 153580.584), stdev = 5110.138
  CI (99.9%): [125082.023, 164436.663] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 46.67% complete, ETA 00:52:35
# Fork: 1 of 1
# Warmup Iteration   1: 598449.681 ns/op
# Warmup Iteration   2: 351263.617 ns/op
# Warmup Iteration   3: 337625.918 ns/op
# Warmup Iteration   4: 319766.397 ns/op
Iteration   1: 319796.120 ns/op
Iteration   2: 327062.557 ns/op
Iteration   3: 319885.415 ns/op
Iteration   4: 321779.524 ns/op
Iteration   5: 322852.877 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  322275.299 ±(99.9%) 11447.995 ns/op [Average]
  (min, avg, max) = (319796.120, 322275.299, 327062.557), stdev = 2973.008
  CI (99.9%): [310827.304, 333723.293] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 46.86% complete, ETA 00:52:23
# Fork: 1 of 1
# Warmup Iteration   1: 4740851.041 ns/op
# Warmup Iteration   2: 3394379.037 ns/op
# Warmup Iteration   3: 3335992.937 ns/op
# Warmup Iteration   4: 3237634.334 ns/op
Iteration   1: 3234027.837 ns/op
Iteration   2: 3228326.901 ns/op
Iteration   3: 3258004.628 ns/op
Iteration   4: 3248359.595 ns/op
Iteration   5: 3264634.549 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3246670.702 ±(99.9%) 59353.249 ns/op [Average]
  (min, avg, max) = (3228326.901, 3246670.702, 3264634.549), stdev = 15413.850
  CI (99.9%): [3187317.453, 3306023.950] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 47.06% complete, ETA 00:52:12
# Fork: 1 of 1
# Warmup Iteration   1: 29667.718 ns/op
# Warmup Iteration   2: 13518.058 ns/op
# Warmup Iteration   3: 12956.664 ns/op
# Warmup Iteration   4: 12915.578 ns/op
Iteration   1: 12888.973 ns/op
Iteration   2: 12902.630 ns/op
Iteration   3: 12951.389 ns/op
Iteration   4: 13068.459 ns/op
Iteration   5: 12947.022 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both":
  12951.695 ±(99.9%) 272.263 ns/op [Average]
  (min, avg, max) = (12888.973, 12951.695, 13068.459), stdev = 70.706
  CI (99.9%): [12679.432, 13223.958] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 47.25% complete, ETA 00:51:59
# Fork: 1 of 1
# Warmup Iteration   1: 98529.223 ns/op
# Warmup Iteration   2: 33012.253 ns/op
# Warmup Iteration   3: 32762.002 ns/op
# Warmup Iteration   4: 33201.568 ns/op
Iteration   1: 32577.976 ns/op
Iteration   2: 35798.568 ns/op
Iteration   3: 32932.141 ns/op
Iteration   4: 33117.864 ns/op
Iteration   5: 32851.170 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both":
  33455.544 ±(99.9%) 5098.700 ns/op [Average]
  (min, avg, max) = (32577.976, 33455.544, 35798.568), stdev = 1324.116
  CI (99.9%): [28356.843, 38554.244] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 47.45% complete, ETA 00:51:47
# Fork: 1 of 1
# Warmup Iteration   1: 147915.239 ns/op
# Warmup Iteration   2: 61966.448 ns/op
# Warmup Iteration   3: 63078.468 ns/op
# Warmup Iteration   4: 64217.421 ns/op
Iteration   1: 61914.652 ns/op
Iteration   2: 61423.788 ns/op
Iteration   3: 61430.791 ns/op
Iteration   4: 61462.575 ns/op
Iteration   5: 65238.854 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both":
  62294.132 ±(99.9%) 6388.396 ns/op [Average]
  (min, avg, max) = (61423.788, 62294.132, 65238.854), stdev = 1659.046
  CI (99.9%): [55905.736, 68682.527] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 47.65% complete, ETA 00:51:34
# Fork: 1 of 1
# Warmup Iteration   1: 283487.387 ns/op
# Warmup Iteration   2: 117640.922 ns/op
# Warmup Iteration   3: 107553.027 ns/op
# Warmup Iteration   4: 115343.644 ns/op
Iteration   1: 107704.897 ns/op
Iteration   2: 111661.285 ns/op
Iteration   3: 107718.391 ns/op
Iteration   4: 110019.844 ns/op
Iteration   5: 115114.245 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both":
  110443.732 ±(99.9%) 11931.484 ns/op [Average]
  (min, avg, max) = (107704.897, 110443.732, 115114.245), stdev = 3098.569
  CI (99.9%): [98512.248, 122375.216] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 47.84% complete, ETA 00:51:22
# Fork: 1 of 1
# Warmup Iteration   1: 2366908.523 ns/op
# Warmup Iteration   2: 1012002.510 ns/op
# Warmup Iteration   3: 981828.532 ns/op
# Warmup Iteration   4: 959742.867 ns/op
Iteration   1: 1016747.154 ns/op
Iteration   2: 952608.447 ns/op
Iteration   3: 937797.278 ns/op
Iteration   4: 928181.579 ns/op
Iteration   5: 925072.506 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.both":
  952081.393 ±(99.9%) 145188.368 ns/op [Average]
  (min, avg, max) = (925072.506, 952081.393, 1016747.154), stdev = 37704.958
  CI (99.9%): [806893.025, 1097269.760] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 48.04% complete, ETA 00:51:10
# Fork: 1 of 1
# Warmup Iteration   1: 3068.717 ns/op
# Warmup Iteration   2: 2348.938 ns/op
# Warmup Iteration   3: 2208.452 ns/op
# Warmup Iteration   4: 2209.877 ns/op
Iteration   1: 2206.107 ns/op
Iteration   2: 2206.871 ns/op
Iteration   3: 2212.993 ns/op
Iteration   4: 2290.099 ns/op
Iteration   5: 2358.864 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization":
  2254.987 ±(99.9%) 261.810 ns/op [Average]
  (min, avg, max) = (2206.107, 2254.987, 2358.864), stdev = 67.991
  CI (99.9%): [1993.177, 2516.797] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 48.24% complete, ETA 00:50:57
# Fork: 1 of 1
# Warmup Iteration   1: 6880.725 ns/op
# Warmup Iteration   2: 4788.818 ns/op
# Warmup Iteration   3: 4440.117 ns/op
# Warmup Iteration   4: 4440.539 ns/op
Iteration   1: 4473.241 ns/op
Iteration   2: 4448.943 ns/op
Iteration   3: 4443.889 ns/op
Iteration   4: 4444.229 ns/op
Iteration   5: 4442.143 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization":
  4450.489 ±(99.9%) 49.927 ns/op [Average]
  (min, avg, max) = (4442.143, 4450.489, 4473.241), stdev = 12.966
  CI (99.9%): [4400.562, 4500.416] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 48.43% complete, ETA 00:50:45
# Fork: 1 of 1
# Warmup Iteration   1: 13953.647 ns/op
# Warmup Iteration   2: 8509.997 ns/op
# Warmup Iteration   3: 8350.650 ns/op
# Warmup Iteration   4: 8709.905 ns/op
Iteration   1: 8622.179 ns/op
Iteration   2: 8370.244 ns/op
Iteration   3: 8345.960 ns/op
Iteration   4: 8407.604 ns/op
Iteration   5: 8558.593 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization":
  8460.916 ±(99.9%) 470.917 ns/op [Average]
  (min, avg, max) = (8345.960, 8460.916, 8622.179), stdev = 122.296
  CI (99.9%): [7989.999, 8931.833] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 48.63% complete, ETA 00:50:33
# Fork: 1 of 1
# Warmup Iteration   1: 25845.300 ns/op
# Warmup Iteration   2: 16722.163 ns/op
# Warmup Iteration   3: 16917.262 ns/op
# Warmup Iteration   4: 16595.415 ns/op
Iteration   1: 16528.355 ns/op
Iteration   2: 16573.838 ns/op
Iteration   3: 16562.238 ns/op
Iteration   4: 16530.369 ns/op
Iteration   5: 16535.399 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization":
  16546.040 ±(99.9%) 79.539 ns/op [Average]
  (min, avg, max) = (16528.355, 16546.040, 16573.838), stdev = 20.656
  CI (99.9%): [16466.501, 16625.578] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 48.82% complete, ETA 00:50:20
# Fork: 1 of 1
# Warmup Iteration   1: 302202.497 ns/op
# Warmup Iteration   2: 160839.907 ns/op
# Warmup Iteration   3: 158437.256 ns/op
# Warmup Iteration   4: 158118.474 ns/op
Iteration   1: 157655.075 ns/op
Iteration   2: 159492.333 ns/op
Iteration   3: 161232.319 ns/op
Iteration   4: 160493.327 ns/op
Iteration   5: 160963.747 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.deserialization":
  159967.360 ±(99.9%) 5594.001 ns/op [Average]
  (min, avg, max) = (157655.075, 159967.360, 161232.319), stdev = 1452.744
  CI (99.9%): [154373.359, 165561.361] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 49.02% complete, ETA 00:50:08
# Fork: 1 of 1
# Warmup Iteration   1: 18553.424 ns/op
# Warmup Iteration   2: 9689.576 ns/op
# Warmup Iteration   3: 9728.152 ns/op
# Warmup Iteration   4: 9753.476 ns/op
Iteration   1: 9697.025 ns/op
Iteration   2: 9649.303 ns/op
Iteration   3: 9670.082 ns/op
Iteration   4: 9702.825 ns/op
Iteration   5: 9750.301 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization":
  9693.907 ±(99.9%) 146.965 ns/op [Average]
  (min, avg, max) = (9649.303, 9693.907, 9750.301), stdev = 38.166
  CI (99.9%): [9546.942, 9840.873] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 49.22% complete, ETA 00:49:56
# Fork: 1 of 1
# Warmup Iteration   1: 46707.774 ns/op
# Warmup Iteration   2: 24996.757 ns/op
# Warmup Iteration   3: 25249.688 ns/op
# Warmup Iteration   4: 26245.935 ns/op
Iteration   1: 25979.065 ns/op
Iteration   2: 26078.641 ns/op
Iteration   3: 26124.854 ns/op
Iteration   4: 25679.915 ns/op
Iteration   5: 25876.814 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization":
  25947.858 ±(99.9%) 684.089 ns/op [Average]
  (min, avg, max) = (25679.915, 25947.858, 26124.854), stdev = 177.656
  CI (99.9%): [25263.768, 26631.947] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 49.41% complete, ETA 00:49:43
# Fork: 1 of 1
# Warmup Iteration   1: 86533.691 ns/op
# Warmup Iteration   2: 48952.738 ns/op
# Warmup Iteration   3: 49723.961 ns/op
# Warmup Iteration   4: 49200.523 ns/op
Iteration   1: 48980.514 ns/op
Iteration   2: 50603.147 ns/op
Iteration   3: 49037.059 ns/op
Iteration   4: 48964.767 ns/op
Iteration   5: 48923.036 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization":
  49301.705 ±(99.9%) 2805.868 ns/op [Average]
  (min, avg, max) = (48923.036, 49301.705, 50603.147), stdev = 728.675
  CI (99.9%): [46495.837, 52107.572] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 49.61% complete, ETA 00:49:31
# Fork: 1 of 1
# Warmup Iteration   1: 153030.540 ns/op
# Warmup Iteration   2: 85172.586 ns/op
# Warmup Iteration   3: 84050.419 ns/op
# Warmup Iteration   4: 83070.479 ns/op
Iteration   1: 82973.440 ns/op
Iteration   2: 83092.484 ns/op
Iteration   3: 83313.238 ns/op
Iteration   4: 83509.413 ns/op
Iteration   5: 83546.641 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization":
  83287.043 ±(99.9%) 969.807 ns/op [Average]
  (min, avg, max) = (82973.440, 83287.043, 83546.641), stdev = 251.856
  CI (99.9%): [82317.236, 84256.851] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 49.80% complete, ETA 00:49:19
# Fork: 1 of 1
# Warmup Iteration   1: 1126473.480 ns/op
# Warmup Iteration   2: 649969.333 ns/op
# Warmup Iteration   3: 657573.756 ns/op
# Warmup Iteration   4: 618335.425 ns/op
Iteration   1: 620397.335 ns/op
Iteration   2: 620647.155 ns/op
Iteration   3: 616676.171 ns/op
Iteration   4: 615154.977 ns/op
Iteration   5: 624704.336 ns/op


Result "com.komanov.serialization.jmh.EventRawScalaPbBenchmark.serialization":
  619515.995 ±(99.9%) 14415.280 ns/op [Average]
  (min, avg, max) = (615154.977, 619515.995, 624704.336), stdev = 3743.602
  CI (99.9%): [605100.715, 633931.275] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 50.00% complete, ETA 00:49:07
# Fork: 1 of 1
# Warmup Iteration   1: 59510.856 ns/op
# Warmup Iteration   2: 17433.669 ns/op
# Warmup Iteration   3: 16652.343 ns/op
# Warmup Iteration   4: 16714.550 ns/op
Iteration   1: 16017.397 ns/op
Iteration   2: 16026.743 ns/op
Iteration   3: 16115.596 ns/op
Iteration   4: 16079.315 ns/op
Iteration   5: 16102.250 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  16068.260 ±(99.9%) 170.354 ns/op [Average]
  (min, avg, max) = (16017.397, 16068.260, 16115.596), stdev = 44.240
  CI (99.9%): [15897.906, 16238.614] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 50.20% complete, ETA 00:48:55
# Fork: 1 of 1
# Warmup Iteration   1: 117854.407 ns/op
# Warmup Iteration   2: 35983.381 ns/op
# Warmup Iteration   3: 30916.963 ns/op
# Warmup Iteration   4: 30315.249 ns/op
Iteration   1: 30218.533 ns/op
Iteration   2: 30230.472 ns/op
Iteration   3: 30277.311 ns/op
Iteration   4: 30342.721 ns/op
Iteration   5: 31393.742 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  30492.556 ±(99.9%) 1948.948 ns/op [Average]
  (min, avg, max) = (30218.533, 30492.556, 31393.742), stdev = 506.136
  CI (99.9%): [28543.608, 32441.504] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 50.39% complete, ETA 00:48:43
# Fork: 1 of 1
# Warmup Iteration   1: 379710.334 ns/op
# Warmup Iteration   2: 302085.328 ns/op
# Warmup Iteration   3: 122999.439 ns/op
# Warmup Iteration   4: 56738.634 ns/op
Iteration   1: 54996.966 ns/op
Iteration   2: 54903.989 ns/op
Iteration   3: 54707.601 ns/op
Iteration   4: 54814.404 ns/op
Iteration   5: 54652.473 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  54815.087 ±(99.9%) 541.083 ns/op [Average]
  (min, avg, max) = (54652.473, 54815.087, 54996.966), stdev = 140.517
  CI (99.9%): [54274.004, 55356.169] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 50.59% complete, ETA 00:48:32
# Fork: 1 of 1
# Warmup Iteration   1: 323804.018 ns/op
# Warmup Iteration   2: 125081.836 ns/op
# Warmup Iteration   3: 109657.472 ns/op
# Warmup Iteration   4: 109392.230 ns/op
Iteration   1: 109333.910 ns/op
Iteration   2: 109580.265 ns/op
Iteration   3: 109841.186 ns/op
Iteration   4: 109151.733 ns/op
Iteration   5: 109271.646 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  109435.748 ±(99.9%) 1060.205 ns/op [Average]
  (min, avg, max) = (109151.733, 109435.748, 109841.186), stdev = 275.332
  CI (99.9%): [108375.544, 110495.953] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 50.78% complete, ETA 00:48:20
# Fork: 1 of 1
# Warmup Iteration   1: 3549061.548 ns/op
# Warmup Iteration   2: 928743.861 ns/op
# Warmup Iteration   3: 860358.309 ns/op
# Warmup Iteration   4: 843358.825 ns/op
Iteration   1: 836802.050 ns/op
Iteration   2: 828607.337 ns/op
Iteration   3: 829110.735 ns/op
Iteration   4: 831524.299 ns/op
Iteration   5: 829853.898 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  831179.664 ±(99.9%) 12826.891 ns/op [Average]
  (min, avg, max) = (828607.337, 831179.664, 836802.050), stdev = 3331.103
  CI (99.9%): [818352.773, 844006.555] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 50.98% complete, ETA 00:48:09
# Fork: 1 of 1
# Warmup Iteration   1: 33149.268 ns/op
# Warmup Iteration   2: 13065.697 ns/op
# Warmup Iteration   3: 12768.425 ns/op
# Warmup Iteration   4: 12818.366 ns/op
Iteration   1: 12260.595 ns/op
Iteration   2: 12182.198 ns/op
Iteration   3: 12177.547 ns/op
Iteration   4: 12217.008 ns/op
Iteration   5: 12249.833 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  12217.436 ±(99.9%) 145.935 ns/op [Average]
  (min, avg, max) = (12177.547, 12217.436, 12260.595), stdev = 37.899
  CI (99.9%): [12071.502, 12363.371] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 51.18% complete, ETA 00:47:57
# Fork: 1 of 1
# Warmup Iteration   1: 201780.754 ns/op
# Warmup Iteration   2: 42035.743 ns/op
# Warmup Iteration   3: 21268.638 ns/op
# Warmup Iteration   4: 21253.119 ns/op
Iteration   1: 21815.114 ns/op
Iteration   2: 21020.969 ns/op
Iteration   3: 21054.387 ns/op
Iteration   4: 21088.888 ns/op
Iteration   5: 21106.279 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  21217.127 ±(99.9%) 1293.385 ns/op [Average]
  (min, avg, max) = (21020.969, 21217.127, 21815.114), stdev = 335.888
  CI (99.9%): [19923.743, 22510.512] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 51.37% complete, ETA 00:47:46
# Fork: 1 of 1
# Warmup Iteration   1: 111674.625 ns/op
# Warmup Iteration   2: 42994.231 ns/op
# Warmup Iteration   3: 41790.586 ns/op
# Warmup Iteration   4: 42421.819 ns/op
Iteration   1: 42466.788 ns/op
Iteration   2: 41038.057 ns/op
Iteration   3: 42140.687 ns/op
Iteration   4: 41201.302 ns/op
Iteration   5: 41223.358 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  41614.038 ±(99.9%) 2480.064 ns/op [Average]
  (min, avg, max) = (41038.057, 41614.038, 42466.788), stdev = 644.065
  CI (99.9%): [39133.974, 44094.103] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 51.57% complete, ETA 00:47:34
# Fork: 1 of 1
# Warmup Iteration   1: 257007.950 ns/op
# Warmup Iteration   2: 103758.563 ns/op
# Warmup Iteration   3: 80541.433 ns/op
# Warmup Iteration   4: 80451.730 ns/op
Iteration   1: 80270.576 ns/op
Iteration   2: 80333.285 ns/op
Iteration   3: 80322.797 ns/op
Iteration   4: 80146.696 ns/op
Iteration   5: 80430.488 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  80300.768 ±(99.9%) 399.334 ns/op [Average]
  (min, avg, max) = (80146.696, 80300.768, 80430.488), stdev = 103.706
  CI (99.9%): [79901.434, 80700.102] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 51.76% complete, ETA 00:47:22
# Fork: 1 of 1
# Warmup Iteration   1: 1766568.231 ns/op
# Warmup Iteration   2: 687037.757 ns/op
# Warmup Iteration   3: 667861.389 ns/op
# Warmup Iteration   4: 660471.274 ns/op
Iteration   1: 656277.923 ns/op
Iteration   2: 654869.011 ns/op
Iteration   3: 657388.546 ns/op
Iteration   4: 654725.583 ns/op
Iteration   5: 656865.075 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  656025.228 ±(99.9%) 4577.956 ns/op [Average]
  (min, avg, max) = (654725.583, 656025.228, 657388.546), stdev = 1188.881
  CI (99.9%): [651447.272, 660603.183] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 51.96% complete, ETA 00:47:11
# Fork: 1 of 1
# Warmup Iteration   1: 77800.242 ns/op
# Warmup Iteration   2: 17225.522 ns/op
# Warmup Iteration   3: 14957.738 ns/op
# Warmup Iteration   4: 13625.406 ns/op
Iteration   1: 14529.127 ns/op
Iteration   2: 13624.577 ns/op
Iteration   3: 13642.290 ns/op
Iteration   4: 13612.509 ns/op
Iteration   5: 13630.612 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13807.823 ±(99.9%) 1553.211 ns/op [Average]
  (min, avg, max) = (13612.509, 13807.823, 14529.127), stdev = 403.364
  CI (99.9%): [12254.612, 15361.035] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 52.16% complete, ETA 00:46:59
# Fork: 1 of 1
# Warmup Iteration   1: 171069.852 ns/op
# Warmup Iteration   2: 29300.137 ns/op
# Warmup Iteration   3: 23748.734 ns/op
# Warmup Iteration   4: 25427.530 ns/op
Iteration   1: 22973.576 ns/op
Iteration   2: 22991.778 ns/op
Iteration   3: 22965.605 ns/op
Iteration   4: 22943.738 ns/op
Iteration   5: 23001.201 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  22975.179 ±(99.9%) 86.863 ns/op [Average]
  (min, avg, max) = (22943.738, 22975.179, 23001.201), stdev = 22.558
  CI (99.9%): [22888.316, 23062.043] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 52.35% complete, ETA 00:46:48
# Fork: 1 of 1
# Warmup Iteration   1: 424588.104 ns/op
# Warmup Iteration   2: 87663.828 ns/op
# Warmup Iteration   3: 44234.518 ns/op
# Warmup Iteration   4: 42825.684 ns/op
Iteration   1: 41844.493 ns/op
Iteration   2: 41904.706 ns/op
Iteration   3: 41828.606 ns/op
Iteration   4: 41857.592 ns/op
Iteration   5: 42386.788 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  41964.437 ±(99.9%) 915.694 ns/op [Average]
  (min, avg, max) = (41828.606, 41964.437, 42386.788), stdev = 237.803
  CI (99.9%): [41048.743, 42880.131] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 52.55% complete, ETA 00:46:36
# Fork: 1 of 1
# Warmup Iteration   1: 443799.902 ns/op
# Warmup Iteration   2: 119286.063 ns/op
# Warmup Iteration   3: 82198.495 ns/op
# Warmup Iteration   4: 85485.692 ns/op
Iteration   1: 79584.566 ns/op
Iteration   2: 79524.715 ns/op
Iteration   3: 79313.387 ns/op
Iteration   4: 79039.853 ns/op
Iteration   5: 79035.912 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  79299.687 ±(99.9%) 998.706 ns/op [Average]
  (min, avg, max) = (79035.912, 79299.687, 79584.566), stdev = 259.361
  CI (99.9%): [78300.980, 80298.393] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 52.75% complete, ETA 00:46:25
# Fork: 1 of 1
# Warmup Iteration   1: 1714965.209 ns/op
# Warmup Iteration   2: 636519.005 ns/op
# Warmup Iteration   3: 603973.725 ns/op
# Warmup Iteration   4: 593354.902 ns/op
Iteration   1: 587901.714 ns/op
Iteration   2: 585667.262 ns/op
Iteration   3: 589721.090 ns/op
Iteration   4: 589883.186 ns/op
Iteration   5: 588851.337 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  588404.918 ±(99.9%) 6631.848 ns/op [Average]
  (min, avg, max) = (585667.262, 588404.918, 589883.186), stdev = 1722.270
  CI (99.9%): [581773.070, 595036.766] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 52.94% complete, ETA 00:46:13
# Fork: 1 of 1
# Warmup Iteration   1: 37568.483 ns/op
# Warmup Iteration   2: 9474.499 ns/op
# Warmup Iteration   3: 8477.428 ns/op
# Warmup Iteration   4: 8306.274 ns/op
Iteration   1: 8228.844 ns/op
Iteration   2: 8256.211 ns/op
Iteration   3: 8247.414 ns/op
Iteration   4: 8235.320 ns/op
Iteration   5: 8239.620 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8241.482 ±(99.9%) 40.991 ns/op [Average]
  (min, avg, max) = (8228.844, 8241.482, 8256.211), stdev = 10.645
  CI (99.9%): [8200.490, 8282.473] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 53.14% complete, ETA 00:46:01
# Fork: 1 of 1
# Warmup Iteration   1: 72416.022 ns/op
# Warmup Iteration   2: 34855.349 ns/op
# Warmup Iteration   3: 19945.785 ns/op
# Warmup Iteration   4: 18620.358 ns/op
Iteration   1: 19440.485 ns/op
Iteration   2: 18557.358 ns/op
Iteration   3: 18589.482 ns/op
Iteration   4: 18570.912 ns/op
Iteration   5: 18515.858 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  18734.819 ±(99.9%) 1522.575 ns/op [Average]
  (min, avg, max) = (18515.858, 18734.819, 19440.485), stdev = 395.408
  CI (99.9%): [17212.245, 20257.394] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 53.33% complete, ETA 00:45:50
# Fork: 1 of 1
# Warmup Iteration   1: 144775.311 ns/op
# Warmup Iteration   2: 63244.074 ns/op
# Warmup Iteration   3: 27679.752 ns/op
# Warmup Iteration   4: 28353.333 ns/op
Iteration   1: 27085.337 ns/op
Iteration   2: 27002.489 ns/op
Iteration   3: 27039.240 ns/op
Iteration   4: 27065.617 ns/op
Iteration   5: 26928.104 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  27024.157 ±(99.9%) 238.811 ns/op [Average]
  (min, avg, max) = (26928.104, 27024.157, 27085.337), stdev = 62.018
  CI (99.9%): [26785.347, 27262.968] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 53.53% complete, ETA 00:45:38
# Fork: 1 of 1
# Warmup Iteration   1: 206168.192 ns/op
# Warmup Iteration   2: 66826.670 ns/op
# Warmup Iteration   3: 44384.233 ns/op
# Warmup Iteration   4: 44418.346 ns/op
Iteration   1: 42545.441 ns/op
Iteration   2: 42432.461 ns/op
Iteration   3: 42520.498 ns/op
Iteration   4: 42425.137 ns/op
Iteration   5: 42456.728 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  42476.053 ±(99.9%) 207.866 ns/op [Average]
  (min, avg, max) = (42425.137, 42476.053, 42545.441), stdev = 53.982
  CI (99.9%): [42268.188, 42683.919] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 53.73% complete, ETA 00:45:27
# Fork: 1 of 1
# Warmup Iteration   1: 1108467.390 ns/op
# Warmup Iteration   2: 358032.784 ns/op
# Warmup Iteration   3: 286398.799 ns/op
# Warmup Iteration   4: 297755.650 ns/op
Iteration   1: 285801.786 ns/op
Iteration   2: 286714.579 ns/op
Iteration   3: 285805.569 ns/op
Iteration   4: 295645.745 ns/op
Iteration   5: 285330.268 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  287859.589 ±(99.9%) 16871.170 ns/op [Average]
  (min, avg, max) = (285330.268, 287859.589, 295645.745), stdev = 4381.389
  CI (99.9%): [270988.420, 304730.759] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 53.92% complete, ETA 00:45:15
# Fork: 1 of 1
# Warmup Iteration   1: 48662.588 ns/op
# Warmup Iteration   2: 10192.082 ns/op
# Warmup Iteration   3: 8175.699 ns/op
# Warmup Iteration   4: 7905.853 ns/op
Iteration   1: 8016.975 ns/op
Iteration   2: 7976.515 ns/op
Iteration   3: 7911.551 ns/op
Iteration   4: 7911.328 ns/op
Iteration   5: 7907.541 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  7944.782 ±(99.9%) 190.881 ns/op [Average]
  (min, avg, max) = (7907.541, 7944.782, 8016.975), stdev = 49.571
  CI (99.9%): [7753.901, 8135.663] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 54.12% complete, ETA 00:45:04
# Fork: 1 of 1
# Warmup Iteration   1: 65209.117 ns/op
# Warmup Iteration   2: 22733.687 ns/op
# Warmup Iteration   3: 13550.812 ns/op
# Warmup Iteration   4: 13373.797 ns/op
Iteration   1: 13471.371 ns/op
Iteration   2: 13435.743 ns/op
Iteration   3: 14862.203 ns/op
Iteration   4: 13439.705 ns/op
Iteration   5: 13551.081 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13752.021 ±(99.9%) 2396.403 ns/op [Average]
  (min, avg, max) = (13435.743, 13752.021, 14862.203), stdev = 622.338
  CI (99.9%): [11355.618, 16148.423] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 54.31% complete, ETA 00:44:52
# Fork: 1 of 1
# Warmup Iteration   1: 154156.201 ns/op
# Warmup Iteration   2: 29797.083 ns/op
# Warmup Iteration   3: 22182.105 ns/op
# Warmup Iteration   4: 22040.319 ns/op
Iteration   1: 22053.034 ns/op
Iteration   2: 22074.484 ns/op
Iteration   3: 22099.436 ns/op
Iteration   4: 22063.235 ns/op
Iteration   5: 22077.415 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  22073.521 ±(99.9%) 67.061 ns/op [Average]
  (min, avg, max) = (22053.034, 22073.521, 22099.436), stdev = 17.416
  CI (99.9%): [22006.460, 22140.582] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 54.51% complete, ETA 00:44:40
# Fork: 1 of 1
# Warmup Iteration   1: 327852.818 ns/op
# Warmup Iteration   2: 76063.723 ns/op
# Warmup Iteration   3: 44627.210 ns/op
# Warmup Iteration   4: 44477.517 ns/op
Iteration   1: 44541.984 ns/op
Iteration   2: 44283.844 ns/op
Iteration   3: 44300.054 ns/op
Iteration   4: 44254.296 ns/op
Iteration   5: 44267.390 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  44329.513 ±(99.9%) 462.134 ns/op [Average]
  (min, avg, max) = (44254.296, 44329.513, 44541.984), stdev = 120.015
  CI (99.9%): [43867.379, 44791.647] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 54.71% complete, ETA 00:44:29
# Fork: 1 of 1
# Warmup Iteration   1: 2257205.491 ns/op
# Warmup Iteration   2: 584444.797 ns/op
# Warmup Iteration   3: 370965.179 ns/op
# Warmup Iteration   4: 369361.404 ns/op
Iteration   1: 351645.285 ns/op
Iteration   2: 350881.437 ns/op
Iteration   3: 352315.415 ns/op
Iteration   4: 352549.230 ns/op
Iteration   5: 351612.124 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  351800.698 ±(99.9%) 2532.356 ns/op [Average]
  (min, avg, max) = (350881.437, 351800.698, 352549.230), stdev = 657.645
  CI (99.9%): [349268.342, 354333.055] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 54.90% complete, ETA 00:44:17
# Fork: 1 of 1
# Warmup Iteration   1: 44111.135 ns/op
# Warmup Iteration   2: 11123.273 ns/op
# Warmup Iteration   3: 9597.357 ns/op
# Warmup Iteration   4: 9273.788 ns/op
Iteration   1: 9265.254 ns/op
Iteration   2: 9357.738 ns/op
Iteration   3: 9336.762 ns/op
Iteration   4: 9298.332 ns/op
Iteration   5: 9420.723 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  9335.762 ±(99.9%) 228.414 ns/op [Average]
  (min, avg, max) = (9265.254, 9335.762, 9420.723), stdev = 59.318
  CI (99.9%): [9107.348, 9564.176] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 55.10% complete, ETA 00:44:06
# Fork: 1 of 1
# Warmup Iteration   1: 75259.624 ns/op
# Warmup Iteration   2: 19918.607 ns/op
# Warmup Iteration   3: 15979.061 ns/op
# Warmup Iteration   4: 15942.774 ns/op
Iteration   1: 15820.368 ns/op
Iteration   2: 15846.574 ns/op
Iteration   3: 15895.005 ns/op
Iteration   4: 16261.346 ns/op
Iteration   5: 16045.840 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  15973.827 ±(99.9%) 704.280 ns/op [Average]
  (min, avg, max) = (15820.368, 15973.827, 16261.346), stdev = 182.899
  CI (99.9%): [15269.546, 16678.107] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 55.29% complete, ETA 00:43:54
# Fork: 1 of 1
# Warmup Iteration   1: 139349.536 ns/op
# Warmup Iteration   2: 39798.940 ns/op
# Warmup Iteration   3: 35613.512 ns/op
# Warmup Iteration   4: 32635.408 ns/op
Iteration   1: 32786.468 ns/op
Iteration   2: 31975.706 ns/op
Iteration   3: 32051.645 ns/op
Iteration   4: 32029.048 ns/op
Iteration   5: 32697.159 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  32308.005 ±(99.9%) 1533.417 ns/op [Average]
  (min, avg, max) = (31975.706, 32308.005, 32786.468), stdev = 398.224
  CI (99.9%): [30774.588, 33841.422] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 55.49% complete, ETA 00:43:42
# Fork: 1 of 1
# Warmup Iteration   1: 160508.869 ns/op
# Warmup Iteration   2: 71201.637 ns/op
# Warmup Iteration   3: 65214.973 ns/op
# Warmup Iteration   4: 65152.673 ns/op
Iteration   1: 67490.134 ns/op
Iteration   2: 65065.258 ns/op
Iteration   3: 64891.675 ns/op
Iteration   4: 64910.627 ns/op
Iteration   5: 65002.639 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  65472.067 ±(99.9%) 4352.471 ns/op [Average]
  (min, avg, max) = (64891.675, 65472.067, 67490.134), stdev = 1130.323
  CI (99.9%): [61119.596, 69824.538] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 55.69% complete, ETA 00:43:31
# Fork: 1 of 1
# Warmup Iteration   1: 1297401.344 ns/op
# Warmup Iteration   2: 700334.216 ns/op
# Warmup Iteration   3: 635738.502 ns/op
# Warmup Iteration   4: 599405.398 ns/op
Iteration   1: 611217.804 ns/op
Iteration   2: 599380.952 ns/op
Iteration   3: 598482.627 ns/op
Iteration   4: 623290.599 ns/op
Iteration   5: 607262.600 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  607926.917 ±(99.9%) 38963.022 ns/op [Average]
  (min, avg, max) = (598482.627, 607926.917, 623290.599), stdev = 10118.573
  CI (99.9%): [568963.894, 646889.939] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 55.88% complete, ETA 00:43:19
# Fork: 1 of 1
# Warmup Iteration   1: 431841.448 ns/op
# Warmup Iteration   2: 193276.831 ns/op
# Warmup Iteration   3: 129929.370 ns/op
# Warmup Iteration   4: 125155.317 ns/op
Iteration   1: 125190.850 ns/op
Iteration   2: 124638.207 ns/op
Iteration   3: 124435.851 ns/op
Iteration   4: 129665.411 ns/op
Iteration   5: 124840.238 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  125754.111 ±(99.9%) 8487.536 ns/op [Average]
  (min, avg, max) = (124435.851, 125754.111, 129665.411), stdev = 2204.186
  CI (99.9%): [117266.575, 134241.647] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 56.08% complete, ETA 00:43:08
# Fork: 1 of 1
# Warmup Iteration   1: 545173.685 ns/op
# Warmup Iteration   2: 217039.312 ns/op
# Warmup Iteration   3: 175229.775 ns/op
# Warmup Iteration   4: 174968.664 ns/op
Iteration   1: 173517.233 ns/op
Iteration   2: 174752.023 ns/op
Iteration   3: 174875.336 ns/op
Iteration   4: 174997.369 ns/op
Iteration   5: 175051.310 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  174638.654 ±(99.9%) 2454.630 ns/op [Average]
  (min, avg, max) = (173517.233, 174638.654, 175051.310), stdev = 637.460
  CI (99.9%): [172184.024, 177093.284] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 56.27% complete, ETA 00:42:56
# Fork: 1 of 1
# Warmup Iteration   1: 579833.312 ns/op
# Warmup Iteration   2: 287033.675 ns/op
# Warmup Iteration   3: 233191.467 ns/op
# Warmup Iteration   4: 236613.860 ns/op
Iteration   1: 237770.382 ns/op
Iteration   2: 231513.173 ns/op
Iteration   3: 231096.641 ns/op
Iteration   4: 231226.248 ns/op
Iteration   5: 231435.123 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  232608.313 ±(99.9%) 11129.947 ns/op [Average]
  (min, avg, max) = (231096.641, 232608.313, 237770.382), stdev = 2890.412
  CI (99.9%): [221478.367, 243738.260] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 56.47% complete, ETA 00:42:45
# Fork: 1 of 1
# Warmup Iteration   1: 2049995.563 ns/op
# Warmup Iteration   2: 518701.659 ns/op
# Warmup Iteration   3: 365321.924 ns/op
# Warmup Iteration   4: 354483.381 ns/op
Iteration   1: 354700.052 ns/op
Iteration   2: 354201.137 ns/op
Iteration   3: 353997.123 ns/op
Iteration   4: 353755.624 ns/op
Iteration   5: 354604.035 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  354251.594 ±(99.9%) 1538.593 ns/op [Average]
  (min, avg, max) = (353755.624, 354251.594, 354700.052), stdev = 399.568
  CI (99.9%): [352713.001, 355790.187] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 56.67% complete, ETA 00:42:33
# Fork: 1 of 1
# Warmup Iteration   1: 5348953.874 ns/op
# Warmup Iteration   2: 2560920.903 ns/op
# Warmup Iteration   3: 2207715.400 ns/op
# Warmup Iteration   4: 2152830.898 ns/op
Iteration   1: 2169907.624 ns/op
Iteration   2: 2149320.430 ns/op
Iteration   3: 2395639.619 ns/op
Iteration   4: 2137915.585 ns/op
Iteration   5: 2135167.810 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  2197590.214 ±(99.9%) 429556.040 ns/op [Average]
  (min, avg, max) = (2135167.810, 2197590.214, 2395639.619), stdev = 111554.339
  CI (99.9%): [1768034.174, 2627146.254] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 56.86% complete, ETA 00:42:21
# Fork: 1 of 1
# Warmup Iteration   1: 12781.100 ns/op
# Warmup Iteration   2: 4904.582 ns/op
# Warmup Iteration   3: 4681.595 ns/op
# Warmup Iteration   4: 4680.376 ns/op
Iteration   1: 4688.999 ns/op
Iteration   2: 4696.828 ns/op
Iteration   3: 4691.788 ns/op
Iteration   4: 4688.966 ns/op
Iteration   5: 4701.697 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  4693.656 ±(99.9%) 21.257 ns/op [Average]
  (min, avg, max) = (4688.966, 4693.656, 4701.697), stdev = 5.520
  CI (99.9%): [4672.399, 4714.912] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 57.06% complete, ETA 00:42:10
# Fork: 1 of 1
# Warmup Iteration   1: 32364.609 ns/op
# Warmup Iteration   2: 8776.296 ns/op
# Warmup Iteration   3: 8226.293 ns/op
# Warmup Iteration   4: 8092.146 ns/op
Iteration   1: 8097.981 ns/op
Iteration   2: 8346.124 ns/op
Iteration   3: 8111.704 ns/op
Iteration   4: 8122.490 ns/op
Iteration   5: 8131.272 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8161.914 ±(99.9%) 399.406 ns/op [Average]
  (min, avg, max) = (8097.981, 8161.914, 8346.124), stdev = 103.724
  CI (99.9%): [7762.509, 8561.320] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 57.25% complete, ETA 00:41:58
# Fork: 1 of 1
# Warmup Iteration   1: 56182.052 ns/op
# Warmup Iteration   2: 14970.018 ns/op
# Warmup Iteration   3: 14256.822 ns/op
# Warmup Iteration   4: 14232.780 ns/op
Iteration   1: 14577.772 ns/op
Iteration   2: 14253.274 ns/op
Iteration   3: 14199.196 ns/op
Iteration   4: 14266.001 ns/op
Iteration   5: 14267.782 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14312.805 ±(99.9%) 580.401 ns/op [Average]
  (min, avg, max) = (14199.196, 14312.805, 14577.772), stdev = 150.728
  CI (99.9%): [13732.405, 14893.206] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 57.45% complete, ETA 00:41:47
# Fork: 1 of 1
# Warmup Iteration   1: 75155.810 ns/op
# Warmup Iteration   2: 28929.264 ns/op
# Warmup Iteration   3: 28897.923 ns/op
# Warmup Iteration   4: 28444.051 ns/op
Iteration   1: 26972.124 ns/op
Iteration   2: 28260.883 ns/op
Iteration   3: 26804.567 ns/op
Iteration   4: 26660.145 ns/op
Iteration   5: 26705.710 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  27080.686 ±(99.9%) 2581.910 ns/op [Average]
  (min, avg, max) = (26660.145, 27080.686, 28260.883), stdev = 670.514
  CI (99.9%): [24498.776, 29662.596] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 57.65% complete, ETA 00:41:35
# Fork: 1 of 1
# Warmup Iteration   1: 603456.340 ns/op
# Warmup Iteration   2: 265843.782 ns/op
# Warmup Iteration   3: 241373.255 ns/op
# Warmup Iteration   4: 241521.748 ns/op
Iteration   1: 240424.420 ns/op
Iteration   2: 242893.120 ns/op
Iteration   3: 241479.445 ns/op
Iteration   4: 245321.569 ns/op
Iteration   5: 240883.470 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  242200.405 ±(99.9%) 7611.658 ns/op [Average]
  (min, avg, max) = (240424.420, 242200.405, 245321.569), stdev = 1976.723
  CI (99.9%): [234588.747, 249812.063] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 57.84% complete, ETA 00:41:24
# Fork: 1 of 1
# Warmup Iteration   1: 23728.524 ns/op
# Warmup Iteration   2: 12245.065 ns/op
# Warmup Iteration   3: 13210.742 ns/op
# Warmup Iteration   4: 11967.031 ns/op
Iteration   1: 11779.069 ns/op
Iteration   2: 11940.008 ns/op
Iteration   3: 11965.730 ns/op
Iteration   4: 12304.865 ns/op
Iteration   5: 11896.703 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  11977.275 ±(99.9%) 757.057 ns/op [Average]
  (min, avg, max) = (11779.069, 11977.275, 12304.865), stdev = 196.605
  CI (99.9%): [11220.218, 12734.332] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 58.04% complete, ETA 00:41:12
# Fork: 1 of 1
# Warmup Iteration   1: 47031.130 ns/op
# Warmup Iteration   2: 20045.810 ns/op
# Warmup Iteration   3: 20648.154 ns/op
# Warmup Iteration   4: 20810.119 ns/op
Iteration   1: 20603.263 ns/op
Iteration   2: 20451.390 ns/op
Iteration   3: 21444.223 ns/op
Iteration   4: 20562.871 ns/op
Iteration   5: 20593.551 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  20731.060 ±(99.9%) 1552.657 ns/op [Average]
  (min, avg, max) = (20451.390, 20731.060, 21444.223), stdev = 403.220
  CI (99.9%): [19178.403, 22283.717] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 58.24% complete, ETA 00:41:01
# Fork: 1 of 1
# Warmup Iteration   1: 68841.131 ns/op
# Warmup Iteration   2: 33950.573 ns/op
# Warmup Iteration   3: 33141.082 ns/op
# Warmup Iteration   4: 34052.203 ns/op
Iteration   1: 34118.379 ns/op
Iteration   2: 34013.483 ns/op
Iteration   3: 34501.138 ns/op
Iteration   4: 34016.399 ns/op
Iteration   5: 34055.483 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  34140.977 ±(99.9%) 792.218 ns/op [Average]
  (min, avg, max) = (34013.483, 34140.977, 34501.138), stdev = 205.737
  CI (99.9%): [33348.758, 34933.195] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 58.43% complete, ETA 00:40:49
# Fork: 1 of 1
# Warmup Iteration   1: 187478.104 ns/op
# Warmup Iteration   2: 72323.846 ns/op
# Warmup Iteration   3: 65561.568 ns/op
# Warmup Iteration   4: 69917.197 ns/op
Iteration   1: 70215.918 ns/op
Iteration   2: 70161.594 ns/op
Iteration   3: 70865.658 ns/op
Iteration   4: 70035.856 ns/op
Iteration   5: 70882.091 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  70432.223 ±(99.9%) 1572.861 ns/op [Average]
  (min, avg, max) = (70035.856, 70432.223, 70882.091), stdev = 408.467
  CI (99.9%): [68859.362, 72005.085] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 58.63% complete, ETA 00:40:38
# Fork: 1 of 1
# Warmup Iteration   1: 1818276.175 ns/op
# Warmup Iteration   2: 1230842.138 ns/op
# Warmup Iteration   3: 1302898.192 ns/op
# Warmup Iteration   4: 1281284.357 ns/op
Iteration   1: 1271159.311 ns/op
Iteration   2: 1364584.341 ns/op
Iteration   3: 1350125.250 ns/op
Iteration   4: 1353236.061 ns/op
Iteration   5: 1361378.775 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1340096.748 ±(99.9%) 150102.890 ns/op [Average]
  (min, avg, max) = (1271159.311, 1340096.748, 1364584.341), stdev = 38981.244
  CI (99.9%): [1189993.858, 1490199.638] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 58.82% complete, ETA 00:40:26
# Fork: 1 of 1
# Warmup Iteration   1: 25058.651 ns/op
# Warmup Iteration   2: 7353.952 ns/op
# Warmup Iteration   3: 6589.205 ns/op
# Warmup Iteration   4: 6493.140 ns/op
Iteration   1: 6524.297 ns/op
Iteration   2: 6552.801 ns/op
Iteration   3: 6534.554 ns/op
Iteration   4: 6673.316 ns/op
Iteration   5: 6707.333 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  6598.460 ±(99.9%) 328.580 ns/op [Average]
  (min, avg, max) = (6524.297, 6598.460, 6707.333), stdev = 85.331
  CI (99.9%): [6269.880, 6927.040] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 59.02% complete, ETA 00:40:15
# Fork: 1 of 1
# Warmup Iteration   1: 40286.299 ns/op
# Warmup Iteration   2: 14190.001 ns/op
# Warmup Iteration   3: 14071.329 ns/op
# Warmup Iteration   4: 14505.180 ns/op
Iteration   1: 13807.573 ns/op
Iteration   2: 13948.688 ns/op
Iteration   3: 13879.866 ns/op
Iteration   4: 14146.298 ns/op
Iteration   5: 13846.805 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13925.846 ±(99.9%) 514.716 ns/op [Average]
  (min, avg, max) = (13807.573, 13925.846, 14146.298), stdev = 133.670
  CI (99.9%): [13411.129, 14440.562] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 59.22% complete, ETA 00:40:03
# Fork: 1 of 1
# Warmup Iteration   1: 190265.819 ns/op
# Warmup Iteration   2: 40396.297 ns/op
# Warmup Iteration   3: 26542.560 ns/op
# Warmup Iteration   4: 25317.553 ns/op
Iteration   1: 25877.123 ns/op
Iteration   2: 25212.365 ns/op
Iteration   3: 25231.096 ns/op
Iteration   4: 25264.952 ns/op
Iteration   5: 25225.235 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  25362.154 ±(99.9%) 1111.031 ns/op [Average]
  (min, avg, max) = (25212.365, 25362.154, 25877.123), stdev = 288.531
  CI (99.9%): [24251.123, 26473.185] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 59.41% complete, ETA 00:39:51
# Fork: 1 of 1
# Warmup Iteration   1: 170780.299 ns/op
# Warmup Iteration   2: 60476.825 ns/op
# Warmup Iteration   3: 48068.929 ns/op
# Warmup Iteration   4: 46485.666 ns/op
Iteration   1: 45655.323 ns/op
Iteration   2: 45612.920 ns/op
Iteration   3: 45629.506 ns/op
Iteration   4: 45673.484 ns/op
Iteration   5: 45682.553 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  45650.757 ±(99.9%) 112.785 ns/op [Average]
  (min, avg, max) = (45612.920, 45650.757, 45682.553), stdev = 29.290
  CI (99.9%): [45537.972, 45763.542] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 59.61% complete, ETA 00:39:40
# Fork: 1 of 1
# Warmup Iteration   1: 1001104.164 ns/op
# Warmup Iteration   2: 410741.153 ns/op
# Warmup Iteration   3: 383603.247 ns/op
# Warmup Iteration   4: 376496.753 ns/op
Iteration   1: 376733.097 ns/op
Iteration   2: 384230.342 ns/op
Iteration   3: 376561.588 ns/op
Iteration   4: 376417.022 ns/op
Iteration   5: 376987.091 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  378185.828 ±(99.9%) 13036.915 ns/op [Average]
  (min, avg, max) = (376417.022, 378185.828, 384230.342), stdev = 3385.645
  CI (99.9%): [365148.914, 391222.743] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 59.80% complete, ETA 00:39:28
# Fork: 1 of 1
# Warmup Iteration   1: 363938.014 ns/op
# Warmup Iteration   2: 73729.322 ns/op
# Warmup Iteration   3: 41248.849 ns/op
# Warmup Iteration   4: 41195.177 ns/op
Iteration   1: 40087.507 ns/op
Iteration   2: 40113.266 ns/op
Iteration   3: 40087.249 ns/op
Iteration   4: 40103.824 ns/op
Iteration   5: 40128.895 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  40104.148 ±(99.9%) 68.293 ns/op [Average]
  (min, avg, max) = (40087.249, 40104.148, 40128.895), stdev = 17.735
  CI (99.9%): [40035.855, 40172.441] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 60.00% complete, ETA 00:39:17
# Fork: 1 of 1
# Warmup Iteration   1: 760120.112 ns/op
# Warmup Iteration   2: 125035.694 ns/op
# Warmup Iteration   3: 83224.659 ns/op
# Warmup Iteration   4: 75780.013 ns/op
Iteration   1: 73652.531 ns/op
Iteration   2: 73574.151 ns/op
Iteration   3: 73135.271 ns/op
Iteration   4: 73985.299 ns/op
Iteration   5: 73367.040 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  73542.858 ±(99.9%) 1226.477 ns/op [Average]
  (min, avg, max) = (73135.271, 73542.858, 73985.299), stdev = 318.512
  CI (99.9%): [72316.381, 74769.336] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 60.20% complete, ETA 00:39:05
# Fork: 1 of 1
# Warmup Iteration   1: 1057612.661 ns/op
# Warmup Iteration   2: 267305.563 ns/op
# Warmup Iteration   3: 169047.537 ns/op
# Warmup Iteration   4: 181107.107 ns/op
Iteration   1: 166742.984 ns/op
Iteration   2: 167162.484 ns/op
Iteration   3: 167136.939 ns/op
Iteration   4: 166344.313 ns/op
Iteration   5: 173533.988 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  168184.142 ±(99.9%) 11587.683 ns/op [Average]
  (min, avg, max) = (166344.313, 168184.142, 173533.988), stdev = 3009.285
  CI (99.9%): [156596.458, 179771.825] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 60.39% complete, ETA 00:38:54
# Fork: 1 of 1
# Warmup Iteration   1: 1890726.411 ns/op
# Warmup Iteration   2: 609906.106 ns/op
# Warmup Iteration   3: 415438.103 ns/op
# Warmup Iteration   4: 437879.473 ns/op
Iteration   1: 377929.611 ns/op
Iteration   2: 379181.403 ns/op
Iteration   3: 378088.691 ns/op
Iteration   4: 378320.264 ns/op
Iteration   5: 379011.636 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  378506.321 ±(99.9%) 2154.904 ns/op [Average]
  (min, avg, max) = (377929.611, 378506.321, 379181.403), stdev = 559.622
  CI (99.9%): [376351.417, 380661.225] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 60.59% complete, ETA 00:38:43
# Fork: 1 of 1
# Warmup Iteration   1: 12112624.239 ns/op
# Warmup Iteration   2: 4427353.974 ns/op
# Warmup Iteration   3: 3246612.231 ns/op
# Warmup Iteration   4: 3070618.179 ns/op
Iteration   1: 3137921.528 ns/op
Iteration   2: 3297895.534 ns/op
Iteration   3: 3167286.619 ns/op
Iteration   4: 3067942.974 ns/op
Iteration   5: 3054102.734 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  3145029.878 ±(99.9%) 375925.887 ns/op [Average]
  (min, avg, max) = (3054102.734, 3145029.878, 3297895.534), stdev = 97626.759
  CI (99.9%): [2769103.991, 3520955.765] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 60.78% complete, ETA 00:38:31
# Fork: 1 of 1
# Warmup Iteration   1: 86142.373 ns/op
# Warmup Iteration   2: 30957.003 ns/op
# Warmup Iteration   3: 25795.788 ns/op
# Warmup Iteration   4: 25693.049 ns/op
Iteration   1: 25668.918 ns/op
Iteration   2: 26246.119 ns/op
Iteration   3: 25667.597 ns/op
Iteration   4: 25652.558 ns/op
Iteration   5: 25688.913 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  25784.821 ±(99.9%) 994.225 ns/op [Average]
  (min, avg, max) = (25652.558, 25784.821, 26246.119), stdev = 258.197
  CI (99.9%): [24790.597, 26779.046] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 60.98% complete, ETA 00:38:20
# Fork: 1 of 1
# Warmup Iteration   1: 120225.118 ns/op
# Warmup Iteration   2: 54164.725 ns/op
# Warmup Iteration   3: 53250.786 ns/op
# Warmup Iteration   4: 52839.587 ns/op
Iteration   1: 52634.041 ns/op
Iteration   2: 52563.718 ns/op
Iteration   3: 52486.669 ns/op
Iteration   4: 54117.419 ns/op
Iteration   5: 52798.738 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  52920.117 ±(99.9%) 2615.182 ns/op [Average]
  (min, avg, max) = (52486.669, 52920.117, 54117.419), stdev = 679.155
  CI (99.9%): [50304.935, 55535.299] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 61.18% complete, ETA 00:38:08
# Fork: 1 of 1
# Warmup Iteration   1: 332831.596 ns/op
# Warmup Iteration   2: 112358.298 ns/op
# Warmup Iteration   3: 103601.512 ns/op
# Warmup Iteration   4: 102936.074 ns/op
Iteration   1: 103314.932 ns/op
Iteration   2: 109431.448 ns/op
Iteration   3: 106526.380 ns/op
Iteration   4: 104666.988 ns/op
Iteration   5: 102678.852 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  105323.720 ±(99.9%) 10506.980 ns/op [Average]
  (min, avg, max) = (102678.852, 105323.720, 109431.448), stdev = 2728.629
  CI (99.9%): [94816.740, 115830.700] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 61.37% complete, ETA 00:37:57
# Fork: 1 of 1
# Warmup Iteration   1: 555200.073 ns/op
# Warmup Iteration   2: 243434.156 ns/op
# Warmup Iteration   3: 215362.950 ns/op
# Warmup Iteration   4: 221114.058 ns/op
Iteration   1: 214978.419 ns/op
Iteration   2: 214978.758 ns/op
Iteration   3: 215484.133 ns/op
Iteration   4: 214707.216 ns/op
Iteration   5: 215224.307 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  215074.566 ±(99.9%) 1128.470 ns/op [Average]
  (min, avg, max) = (214707.216, 215074.566, 215484.133), stdev = 293.060
  CI (99.9%): [213946.096, 216203.037] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 61.57% complete, ETA 00:37:45
# Fork: 1 of 1
# Warmup Iteration   1: 4027438.871 ns/op
# Warmup Iteration   2: 1798531.666 ns/op
# Warmup Iteration   3: 1673097.531 ns/op
# Warmup Iteration   4: 1666812.612 ns/op
Iteration   1: 1654862.226 ns/op
Iteration   2: 1653232.974 ns/op
Iteration   3: 1649464.807 ns/op
Iteration   4: 1647054.017 ns/op
Iteration   5: 1647487.932 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1650420.392 ±(99.9%) 13406.305 ns/op [Average]
  (min, avg, max) = (1647054.017, 1650420.392, 1654862.226), stdev = 3481.575
  CI (99.9%): [1637014.087, 1663826.696] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 61.76% complete, ETA 00:37:33
# Fork: 1 of 1
# Warmup Iteration   1: 116442.518 ns/op
# Warmup Iteration   2: 26518.733 ns/op
# Warmup Iteration   3: 24030.036 ns/op
# Warmup Iteration   4: 23922.330 ns/op
Iteration   1: 25220.400 ns/op
Iteration   2: 24021.473 ns/op
Iteration   3: 23877.772 ns/op
Iteration   4: 23821.633 ns/op
Iteration   5: 23870.140 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24162.284 ±(99.9%) 2295.719 ns/op [Average]
  (min, avg, max) = (23821.633, 24162.284, 25220.400), stdev = 596.191
  CI (99.9%): [21866.564, 26458.003] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 61.96% complete, ETA 00:37:22
# Fork: 1 of 1
# Warmup Iteration   1: 151175.429 ns/op
# Warmup Iteration   2: 51427.376 ns/op
# Warmup Iteration   3: 48901.688 ns/op
# Warmup Iteration   4: 48711.382 ns/op
Iteration   1: 48028.816 ns/op
Iteration   2: 47840.881 ns/op
Iteration   3: 47932.262 ns/op
Iteration   4: 48015.887 ns/op
Iteration   5: 48054.436 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  47974.456 ±(99.9%) 337.294 ns/op [Average]
  (min, avg, max) = (47840.881, 47974.456, 48054.436), stdev = 87.594
  CI (99.9%): [47637.162, 48311.750] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 62.16% complete, ETA 00:37:10
# Fork: 1 of 1
# Warmup Iteration   1: 350693.860 ns/op
# Warmup Iteration   2: 128993.547 ns/op
# Warmup Iteration   3: 100517.259 ns/op
# Warmup Iteration   4: 100895.375 ns/op
Iteration   1: 100405.653 ns/op
Iteration   2: 98673.037 ns/op
Iteration   3: 98545.521 ns/op
Iteration   4: 98160.784 ns/op
Iteration   5: 98343.885 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  98825.776 ±(99.9%) 3482.820 ns/op [Average]
  (min, avg, max) = (98160.784, 98825.776, 100405.653), stdev = 904.477
  CI (99.9%): [95342.956, 102308.596] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 62.35% complete, ETA 00:36:59
# Fork: 1 of 1
# Warmup Iteration   1: 730384.785 ns/op
# Warmup Iteration   2: 253561.874 ns/op
# Warmup Iteration   3: 225445.149 ns/op
# Warmup Iteration   4: 213665.141 ns/op
Iteration   1: 213352.255 ns/op
Iteration   2: 213627.952 ns/op
Iteration   3: 213295.148 ns/op
Iteration   4: 213311.787 ns/op
Iteration   5: 214792.984 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  213676.025 ±(99.9%) 2459.949 ns/op [Average]
  (min, avg, max) = (213295.148, 213676.025, 214792.984), stdev = 638.841
  CI (99.9%): [211216.076, 216135.974] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 62.55% complete, ETA 00:36:47
# Fork: 1 of 1
# Warmup Iteration   1: 4691159.591 ns/op
# Warmup Iteration   2: 1635487.122 ns/op
# Warmup Iteration   3: 1699619.619 ns/op
# Warmup Iteration   4: 1632085.448 ns/op
Iteration   1: 1642846.430 ns/op
Iteration   2: 1582335.772 ns/op
Iteration   3: 1584806.104 ns/op
Iteration   4: 1575513.789 ns/op
Iteration   5: 1576718.056 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1592444.030 ±(99.9%) 109504.218 ns/op [Average]
  (min, avg, max) = (1575513.789, 1592444.030, 1642846.430), stdev = 28437.898
  CI (99.9%): [1482939.813, 1701948.248] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 62.75% complete, ETA 00:36:36
# Fork: 1 of 1
# Warmup Iteration   1: 33842.446 ns/op
# Warmup Iteration   2: 10441.062 ns/op
# Warmup Iteration   3: 10355.021 ns/op
# Warmup Iteration   4: 10629.932 ns/op
Iteration   1: 10234.931 ns/op
Iteration   2: 10217.663 ns/op
Iteration   3: 10205.535 ns/op
Iteration   4: 10259.800 ns/op
Iteration   5: 10247.379 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  10233.062 ±(99.9%) 84.325 ns/op [Average]
  (min, avg, max) = (10205.535, 10233.062, 10259.800), stdev = 21.899
  CI (99.9%): [10148.737, 10317.386] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 62.94% complete, ETA 00:36:24
# Fork: 1 of 1
# Warmup Iteration   1: 49696.852 ns/op
# Warmup Iteration   2: 22328.572 ns/op
# Warmup Iteration   3: 20978.196 ns/op
# Warmup Iteration   4: 20793.256 ns/op
Iteration   1: 20830.765 ns/op
Iteration   2: 20751.850 ns/op
Iteration   3: 21531.160 ns/op
Iteration   4: 20778.470 ns/op
Iteration   5: 20808.830 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  20940.215 ±(99.9%) 1277.259 ns/op [Average]
  (min, avg, max) = (20751.850, 20940.215, 21531.160), stdev = 331.700
  CI (99.9%): [19662.955, 22217.474] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 63.14% complete, ETA 00:36:13
# Fork: 1 of 1
# Warmup Iteration   1: 99785.470 ns/op
# Warmup Iteration   2: 45808.889 ns/op
# Warmup Iteration   3: 44252.345 ns/op
# Warmup Iteration   4: 43995.549 ns/op
Iteration   1: 43958.205 ns/op
Iteration   2: 44095.588 ns/op
Iteration   3: 43919.605 ns/op
Iteration   4: 44005.061 ns/op
Iteration   5: 44032.483 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  44002.188 ±(99.9%) 261.193 ns/op [Average]
  (min, avg, max) = (43919.605, 44002.188, 44095.588), stdev = 67.831
  CI (99.9%): [43740.996, 44263.381] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 63.33% complete, ETA 00:36:01
# Fork: 1 of 1
# Warmup Iteration   1: 227312.494 ns/op
# Warmup Iteration   2: 98586.434 ns/op
# Warmup Iteration   3: 91012.989 ns/op
# Warmup Iteration   4: 90689.801 ns/op
Iteration   1: 90978.265 ns/op
Iteration   2: 90794.858 ns/op
Iteration   3: 88591.551 ns/op
Iteration   4: 93014.409 ns/op
Iteration   5: 89418.339 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  90559.484 ±(99.9%) 6509.869 ns/op [Average]
  (min, avg, max) = (88591.551, 90559.484, 93014.409), stdev = 1690.592
  CI (99.9%): [84049.616, 97069.353] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 63.53% complete, ETA 00:35:49
# Fork: 1 of 1
# Warmup Iteration   1: 1329755.508 ns/op
# Warmup Iteration   2: 797720.619 ns/op
# Warmup Iteration   3: 766782.749 ns/op
# Warmup Iteration   4: 748942.001 ns/op
Iteration   1: 745553.034 ns/op
Iteration   2: 750501.576 ns/op
Iteration   3: 747561.959 ns/op
Iteration   4: 749955.176 ns/op
Iteration   5: 747863.681 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  748287.085 ±(99.9%) 7669.119 ns/op [Average]
  (min, avg, max) = (745553.034, 748287.085, 750501.576), stdev = 1991.646
  CI (99.9%): [740617.966, 755956.204] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 63.73% complete, ETA 00:35:38
# Fork: 1 of 1
# Warmup Iteration   1: 71490.050 ns/op
# Warmup Iteration   2: 20916.553 ns/op
# Warmup Iteration   3: 18027.294 ns/op
# Warmup Iteration   4: 17909.393 ns/op
Iteration   1: 18918.812 ns/op
Iteration   2: 17948.585 ns/op
Iteration   3: 17887.596 ns/op
Iteration   4: 18357.305 ns/op
Iteration   5: 18394.301 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  18301.320 ±(99.9%) 1597.746 ns/op [Average]
  (min, avg, max) = (17887.596, 18301.320, 18918.812), stdev = 414.929
  CI (99.9%): [16703.574, 19899.065] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 63.92% complete, ETA 00:35:26
# Fork: 1 of 1
# Warmup Iteration   1: 130771.447 ns/op
# Warmup Iteration   2: 54709.632 ns/op
# Warmup Iteration   3: 30418.649 ns/op
# Warmup Iteration   4: 30232.716 ns/op
Iteration   1: 29949.846 ns/op
Iteration   2: 30038.233 ns/op
Iteration   3: 30125.292 ns/op
Iteration   4: 29996.838 ns/op
Iteration   5: 30127.901 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  30047.622 ±(99.9%) 302.616 ns/op [Average]
  (min, avg, max) = (29949.846, 30047.622, 30127.901), stdev = 78.589
  CI (99.9%): [29745.006, 30350.238] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 64.12% complete, ETA 00:35:15
# Fork: 1 of 1
# Warmup Iteration   1: 263685.733 ns/op
# Warmup Iteration   2: 93353.725 ns/op
# Warmup Iteration   3: 53316.586 ns/op
# Warmup Iteration   4: 54016.493 ns/op
Iteration   1: 52838.231 ns/op
Iteration   2: 52686.291 ns/op
Iteration   3: 52578.889 ns/op
Iteration   4: 52747.340 ns/op
Iteration   5: 52704.731 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  52711.096 ±(99.9%) 363.326 ns/op [Average]
  (min, avg, max) = (52578.889, 52711.096, 52838.231), stdev = 94.355
  CI (99.9%): [52347.770, 53074.423] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 64.31% complete, ETA 00:35:03
# Fork: 1 of 1
# Warmup Iteration   1: 354016.308 ns/op
# Warmup Iteration   2: 142631.659 ns/op
# Warmup Iteration   3: 129741.773 ns/op
# Warmup Iteration   4: 106964.345 ns/op
Iteration   1: 106765.670 ns/op
Iteration   2: 106642.535 ns/op
Iteration   3: 109891.561 ns/op
Iteration   4: 106220.560 ns/op
Iteration   5: 106093.638 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  107122.793 ±(99.9%) 6057.103 ns/op [Average]
  (min, avg, max) = (106093.638, 107122.793, 109891.561), stdev = 1573.010
  CI (99.9%): [101065.690, 113179.896] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 64.51% complete, ETA 00:34:52
# Fork: 1 of 1
# Warmup Iteration   1: 3967956.799 ns/op
# Warmup Iteration   2: 1154903.312 ns/op
# Warmup Iteration   3: 1070794.002 ns/op
# Warmup Iteration   4: 1070828.431 ns/op
Iteration   1: 1074605.186 ns/op
Iteration   2: 1060678.899 ns/op
Iteration   3: 1060902.624 ns/op
Iteration   4: 1060553.123 ns/op
Iteration   5: 1060880.668 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1063524.100 ±(99.9%) 23859.410 ns/op [Average]
  (min, avg, max) = (1060553.123, 1063524.100, 1074605.186), stdev = 6196.213
  CI (99.9%): [1039664.690, 1087383.509] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 64.71% complete, ETA 00:34:40
# Fork: 1 of 1
# Warmup Iteration   1: 60291.006 ns/op
# Warmup Iteration   2: 18135.229 ns/op
# Warmup Iteration   3: 17850.329 ns/op
# Warmup Iteration   4: 16629.423 ns/op
Iteration   1: 16713.178 ns/op
Iteration   2: 16706.923 ns/op
Iteration   3: 16649.389 ns/op
Iteration   4: 16633.367 ns/op
Iteration   5: 16903.301 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  16721.232 ±(99.9%) 414.282 ns/op [Average]
  (min, avg, max) = (16633.367, 16721.232, 16903.301), stdev = 107.588
  CI (99.9%): [16306.950, 17135.514] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 64.90% complete, ETA 00:34:29
# Fork: 1 of 1
# Warmup Iteration   1: 88931.781 ns/op
# Warmup Iteration   2: 44739.535 ns/op
# Warmup Iteration   3: 30081.682 ns/op
# Warmup Iteration   4: 30272.508 ns/op
Iteration   1: 29390.964 ns/op
Iteration   2: 29312.332 ns/op
Iteration   3: 29374.069 ns/op
Iteration   4: 29354.947 ns/op
Iteration   5: 29402.830 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  29367.028 ±(99.9%) 136.710 ns/op [Average]
  (min, avg, max) = (29312.332, 29367.028, 29402.830), stdev = 35.503
  CI (99.9%): [29230.318, 29503.738] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 65.10% complete, ETA 00:34:17
# Fork: 1 of 1
# Warmup Iteration   1: 180394.418 ns/op
# Warmup Iteration   2: 61257.335 ns/op
# Warmup Iteration   3: 54800.666 ns/op
# Warmup Iteration   4: 54019.813 ns/op
Iteration   1: 53856.913 ns/op
Iteration   2: 54216.120 ns/op
Iteration   3: 53620.795 ns/op
Iteration   4: 53699.420 ns/op
Iteration   5: 53643.936 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  53807.437 ±(99.9%) 948.513 ns/op [Average]
  (min, avg, max) = (53620.795, 53807.437, 54216.120), stdev = 246.326
  CI (99.9%): [52858.924, 54755.950] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 65.29% complete, ETA 00:34:06
# Fork: 1 of 1
# Warmup Iteration   1: 398093.725 ns/op
# Warmup Iteration   2: 139694.111 ns/op
# Warmup Iteration   3: 106443.390 ns/op
# Warmup Iteration   4: 106063.876 ns/op
Iteration   1: 106293.017 ns/op
Iteration   2: 106494.727 ns/op
Iteration   3: 106564.508 ns/op
Iteration   4: 105894.171 ns/op
Iteration   5: 105962.995 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  106241.884 ±(99.9%) 1170.041 ns/op [Average]
  (min, avg, max) = (105894.171, 106241.884, 106564.508), stdev = 303.856
  CI (99.9%): [105071.842, 107411.925] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 65.49% complete, ETA 00:33:54
# Fork: 1 of 1
# Warmup Iteration   1: 6056192.987 ns/op
# Warmup Iteration   2: 1233833.481 ns/op
# Warmup Iteration   3: 1103992.245 ns/op
# Warmup Iteration   4: 1077292.912 ns/op
Iteration   1: 1072422.415 ns/op
Iteration   2: 1178393.849 ns/op
Iteration   3: 1160112.976 ns/op
Iteration   4: 1050882.749 ns/op
Iteration   5: 1047358.924 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1101834.183 ±(99.9%) 241138.062 ns/op [Average]
  (min, avg, max) = (1047358.924, 1101834.183, 1178393.849), stdev = 62622.789
  CI (99.9%): [860696.121, 1342972.245] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 65.69% complete, ETA 00:33:42
# Fork: 1 of 1
# Warmup Iteration   1: 25816.402 ns/op
# Warmup Iteration   2: 9580.363 ns/op
# Warmup Iteration   3: 9419.530 ns/op
# Warmup Iteration   4: 9250.371 ns/op
Iteration   1: 9311.907 ns/op
Iteration   2: 9273.735 ns/op
Iteration   3: 9274.902 ns/op
Iteration   4: 9270.062 ns/op
Iteration   5: 9265.187 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  9279.159 ±(99.9%) 71.987 ns/op [Average]
  (min, avg, max) = (9265.187, 9279.159, 9311.907), stdev = 18.695
  CI (99.9%): [9207.172, 9351.145] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 65.88% complete, ETA 00:33:31
# Fork: 1 of 1
# Warmup Iteration   1: 44813.523 ns/op
# Warmup Iteration   2: 16604.341 ns/op
# Warmup Iteration   3: 16061.723 ns/op
# Warmup Iteration   4: 15565.184 ns/op
Iteration   1: 15565.290 ns/op
Iteration   2: 15677.833 ns/op
Iteration   3: 15676.935 ns/op
Iteration   4: 15564.749 ns/op
Iteration   5: 15559.984 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  15608.958 ±(99.9%) 240.661 ns/op [Average]
  (min, avg, max) = (15559.984, 15608.958, 15677.833), stdev = 62.499
  CI (99.9%): [15368.298, 15849.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 66.08% complete, ETA 00:33:19
# Fork: 1 of 1
# Warmup Iteration   1: 68250.060 ns/op
# Warmup Iteration   2: 33418.613 ns/op
# Warmup Iteration   3: 32176.469 ns/op
# Warmup Iteration   4: 31809.381 ns/op
Iteration   1: 31905.923 ns/op
Iteration   2: 31770.893 ns/op
Iteration   3: 31804.552 ns/op
Iteration   4: 31785.878 ns/op
Iteration   5: 31758.135 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  31805.076 ±(99.9%) 227.081 ns/op [Average]
  (min, avg, max) = (31758.135, 31805.076, 31905.923), stdev = 58.972
  CI (99.9%): [31577.995, 32032.157] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 66.27% complete, ETA 00:33:08
# Fork: 1 of 1
# Warmup Iteration   1: 186109.099 ns/op
# Warmup Iteration   2: 71574.924 ns/op
# Warmup Iteration   3: 67641.624 ns/op
# Warmup Iteration   4: 67215.398 ns/op
Iteration   1: 67354.975 ns/op
Iteration   2: 66951.479 ns/op
Iteration   3: 67067.174 ns/op
Iteration   4: 67017.372 ns/op
Iteration   5: 67089.990 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  67096.198 ±(99.9%) 593.436 ns/op [Average]
  (min, avg, max) = (66951.479, 67096.198, 67354.975), stdev = 154.113
  CI (99.9%): [66502.762, 67689.634] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 66.47% complete, ETA 00:32:56
# Fork: 1 of 1
# Warmup Iteration   1: 1696783.324 ns/op
# Warmup Iteration   2: 568123.465 ns/op
# Warmup Iteration   3: 524480.008 ns/op
# Warmup Iteration   4: 517774.992 ns/op
Iteration   1: 516465.880 ns/op
Iteration   2: 516510.177 ns/op
Iteration   3: 517622.756 ns/op
Iteration   4: 517654.607 ns/op
Iteration   5: 518561.400 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  517362.964 ±(99.9%) 3401.233 ns/op [Average]
  (min, avg, max) = (516465.880, 517362.964, 518561.400), stdev = 883.289
  CI (99.9%): [513961.731, 520764.197] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 66.67% complete, ETA 00:32:45
# Fork: 1 of 1
# Warmup Iteration   1: 15370.966 ns/op
# Warmup Iteration   2: 8277.253 ns/op
# Warmup Iteration   3: 7937.895 ns/op
# Warmup Iteration   4: 7991.048 ns/op
Iteration   1: 8068.176 ns/op
Iteration   2: 8279.200 ns/op
Iteration   3: 7932.882 ns/op
Iteration   4: 7955.100 ns/op
Iteration   5: 7980.312 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8043.134 ±(99.9%) 545.265 ns/op [Average]
  (min, avg, max) = (7932.882, 8043.134, 8279.200), stdev = 141.603
  CI (99.9%): [7497.869, 8588.399] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 66.86% complete, ETA 00:32:33
# Fork: 1 of 1
# Warmup Iteration   1: 25951.628 ns/op
# Warmup Iteration   2: 14088.568 ns/op
# Warmup Iteration   3: 13731.689 ns/op
# Warmup Iteration   4: 13827.718 ns/op
Iteration   1: 13811.186 ns/op
Iteration   2: 13781.983 ns/op
Iteration   3: 13748.013 ns/op
Iteration   4: 13734.247 ns/op
Iteration   5: 14097.798 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13834.645 ±(99.9%) 578.103 ns/op [Average]
  (min, avg, max) = (13734.247, 13834.645, 14097.798), stdev = 150.131
  CI (99.9%): [13256.542, 14412.748] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 67.06% complete, ETA 00:32:21
# Fork: 1 of 1
# Warmup Iteration   1: 66929.825 ns/op
# Warmup Iteration   2: 26373.326 ns/op
# Warmup Iteration   3: 25297.102 ns/op
# Warmup Iteration   4: 25084.066 ns/op
Iteration   1: 25061.825 ns/op
Iteration   2: 25095.522 ns/op
Iteration   3: 25118.869 ns/op
Iteration   4: 25143.134 ns/op
Iteration   5: 25128.198 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  25109.509 ±(99.9%) 122.329 ns/op [Average]
  (min, avg, max) = (25061.825, 25109.509, 25143.134), stdev = 31.769
  CI (99.9%): [24987.180, 25231.839] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 67.25% complete, ETA 00:32:10
# Fork: 1 of 1
# Warmup Iteration   1: 98520.497 ns/op
# Warmup Iteration   2: 59857.198 ns/op
# Warmup Iteration   3: 53221.632 ns/op
# Warmup Iteration   4: 52421.615 ns/op
Iteration   1: 52209.474 ns/op
Iteration   2: 52161.445 ns/op
Iteration   3: 52047.330 ns/op
Iteration   4: 52387.708 ns/op
Iteration   5: 52344.952 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  52230.182 ±(99.9%) 532.778 ns/op [Average]
  (min, avg, max) = (52047.330, 52230.182, 52387.708), stdev = 138.361
  CI (99.9%): [51697.403, 52762.960] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 67.45% complete, ETA 00:31:58
# Fork: 1 of 1
# Warmup Iteration   1: 842135.800 ns/op
# Warmup Iteration   2: 458135.665 ns/op
# Warmup Iteration   3: 440616.440 ns/op
# Warmup Iteration   4: 440010.589 ns/op
Iteration   1: 439545.120 ns/op
Iteration   2: 438970.090 ns/op
Iteration   3: 438749.107 ns/op
Iteration   4: 439847.537 ns/op
Iteration   5: 439610.008 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  439344.372 ±(99.9%) 1783.876 ns/op [Average]
  (min, avg, max) = (438749.107, 439344.372, 439847.537), stdev = 463.267
  CI (99.9%): [437560.496, 441128.248] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 67.65% complete, ETA 00:31:47
# Fork: 1 of 1
# Warmup Iteration   1: 110451.279 ns/op
# Warmup Iteration   2: 11151.704 ns/op
# Warmup Iteration   3: 8786.161 ns/op
# Warmup Iteration   4: 8527.726 ns/op
Iteration   1: 8524.082 ns/op
Iteration   2: 8552.272 ns/op
Iteration   3: 8565.620 ns/op
Iteration   4: 8569.132 ns/op
Iteration   5: 8546.601 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8551.542 ±(99.9%) 69.060 ns/op [Average]
  (min, avg, max) = (8524.082, 8551.542, 8569.132), stdev = 17.935
  CI (99.9%): [8482.481, 8620.602] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 67.84% complete, ETA 00:31:35
# Fork: 1 of 1
# Warmup Iteration   1: 31947.223 ns/op
# Warmup Iteration   2: 14734.094 ns/op
# Warmup Iteration   3: 14094.638 ns/op
# Warmup Iteration   4: 14031.455 ns/op
Iteration   1: 14498.291 ns/op
Iteration   2: 14037.136 ns/op
Iteration   3: 14111.061 ns/op
Iteration   4: 14066.740 ns/op
Iteration   5: 14234.790 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14189.604 ±(99.9%) 725.110 ns/op [Average]
  (min, avg, max) = (14037.136, 14189.604, 14498.291), stdev = 188.309
  CI (99.9%): [13464.493, 14914.714] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 68.04% complete, ETA 00:31:24
# Fork: 1 of 1
# Warmup Iteration   1: 142305.037 ns/op
# Warmup Iteration   2: 28160.453 ns/op
# Warmup Iteration   3: 25066.140 ns/op
# Warmup Iteration   4: 24926.399 ns/op
Iteration   1: 24932.342 ns/op
Iteration   2: 24868.559 ns/op
Iteration   3: 24946.572 ns/op
Iteration   4: 24944.124 ns/op
Iteration   5: 24936.905 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  24925.700 ±(99.9%) 124.922 ns/op [Average]
  (min, avg, max) = (24868.559, 24925.700, 24946.572), stdev = 32.442
  CI (99.9%): [24800.778, 25050.623] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 68.24% complete, ETA 00:31:12
# Fork: 1 of 1
# Warmup Iteration   1: 225181.569 ns/op
# Warmup Iteration   2: 56431.473 ns/op
# Warmup Iteration   3: 50913.086 ns/op
# Warmup Iteration   4: 49788.508 ns/op
Iteration   1: 49575.708 ns/op
Iteration   2: 49362.572 ns/op
Iteration   3: 53434.647 ns/op
Iteration   4: 49607.343 ns/op
Iteration   5: 49670.514 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  50330.157 ±(99.9%) 6697.480 ns/op [Average]
  (min, avg, max) = (49362.572, 50330.157, 53434.647), stdev = 1739.314
  CI (99.9%): [43632.676, 57027.637] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 68.43% complete, ETA 00:31:00
# Fork: 1 of 1
# Warmup Iteration   1: 657704.390 ns/op
# Warmup Iteration   2: 390759.559 ns/op
# Warmup Iteration   3: 372465.809 ns/op
# Warmup Iteration   4: 405323.800 ns/op
Iteration   1: 370947.298 ns/op
Iteration   2: 371356.521 ns/op
Iteration   3: 370175.285 ns/op
Iteration   4: 370205.036 ns/op
Iteration   5: 372203.172 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  370977.462 ±(99.9%) 3271.400 ns/op [Average]
  (min, avg, max) = (370175.285, 370977.462, 372203.172), stdev = 849.572
  CI (99.9%): [367706.062, 374248.863] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 68.63% complete, ETA 00:30:49
# Fork: 1 of 1
# Warmup Iteration   1: 7408.139 ns/op
# Warmup Iteration   2: 2531.584 ns/op
# Warmup Iteration   3: 2336.250 ns/op
# Warmup Iteration   4: 2373.555 ns/op
Iteration   1: 2429.395 ns/op
Iteration   2: 2337.841 ns/op
Iteration   3: 2344.633 ns/op
Iteration   4: 2352.263 ns/op
Iteration   5: 2350.209 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2362.868 ±(99.9%) 144.814 ns/op [Average]
  (min, avg, max) = (2337.841, 2362.868, 2429.395), stdev = 37.608
  CI (99.9%): [2218.055, 2507.682] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 68.82% complete, ETA 00:30:37
# Fork: 1 of 1
# Warmup Iteration   1: 11396.212 ns/op
# Warmup Iteration   2: 4711.089 ns/op
# Warmup Iteration   3: 4667.805 ns/op
# Warmup Iteration   4: 4860.190 ns/op
Iteration   1: 4663.323 ns/op
Iteration   2: 4695.754 ns/op
Iteration   3: 4668.674 ns/op
Iteration   4: 4673.167 ns/op
Iteration   5: 4664.749 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4673.133 ±(99.9%) 50.871 ns/op [Average]
  (min, avg, max) = (4663.323, 4673.133, 4695.754), stdev = 13.211
  CI (99.9%): [4622.262, 4724.004] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 69.02% complete, ETA 00:30:26
# Fork: 1 of 1
# Warmup Iteration   1: 31373.441 ns/op
# Warmup Iteration   2: 9129.150 ns/op
# Warmup Iteration   3: 7994.469 ns/op
# Warmup Iteration   4: 8009.868 ns/op
Iteration   1: 8017.323 ns/op
Iteration   2: 8336.076 ns/op
Iteration   3: 7978.719 ns/op
Iteration   4: 8021.453 ns/op
Iteration   5: 8288.952 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8128.505 ±(99.9%) 653.154 ns/op [Average]
  (min, avg, max) = (7978.719, 8128.505, 8336.076), stdev = 169.622
  CI (99.9%): [7475.351, 8781.659] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 69.22% complete, ETA 00:30:14
# Fork: 1 of 1
# Warmup Iteration   1: 53398.977 ns/op
# Warmup Iteration   2: 17388.064 ns/op
# Warmup Iteration   3: 16494.773 ns/op
# Warmup Iteration   4: 16185.150 ns/op
Iteration   1: 16108.293 ns/op
Iteration   2: 16070.903 ns/op
Iteration   3: 16052.553 ns/op
Iteration   4: 16065.733 ns/op
Iteration   5: 16035.776 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  16066.652 ±(99.9%) 103.772 ns/op [Average]
  (min, avg, max) = (16035.776, 16066.652, 16108.293), stdev = 26.949
  CI (99.9%): [15962.880, 16170.423] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 69.41% complete, ETA 00:30:03
# Fork: 1 of 1
# Warmup Iteration   1: 374542.106 ns/op
# Warmup Iteration   2: 133933.019 ns/op
# Warmup Iteration   3: 116363.557 ns/op
# Warmup Iteration   4: 115936.731 ns/op
Iteration   1: 116686.565 ns/op
Iteration   2: 116129.282 ns/op
Iteration   3: 116483.568 ns/op
Iteration   4: 116164.308 ns/op
Iteration   5: 115704.038 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  116233.552 ±(99.9%) 1445.635 ns/op [Average]
  (min, avg, max) = (115704.038, 116233.552, 116686.565), stdev = 375.427
  CI (99.9%): [114787.917, 117679.187] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 69.61% complete, ETA 00:29:51
# Fork: 1 of 1
# Warmup Iteration   1: 9326.597 ns/op
# Warmup Iteration   2: 5120.124 ns/op
# Warmup Iteration   3: 4969.277 ns/op
# Warmup Iteration   4: 4964.486 ns/op
Iteration   1: 4963.578 ns/op
Iteration   2: 5195.747 ns/op
Iteration   3: 4960.118 ns/op
Iteration   4: 4953.761 ns/op
Iteration   5: 4989.453 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  5012.532 ±(99.9%) 397.840 ns/op [Average]
  (min, avg, max) = (4953.761, 5012.532, 5195.747), stdev = 103.318
  CI (99.9%): [4614.692, 5410.372] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 69.80% complete, ETA 00:29:40
# Fork: 1 of 1
# Warmup Iteration   1: 19617.689 ns/op
# Warmup Iteration   2: 8234.494 ns/op
# Warmup Iteration   3: 8147.758 ns/op
# Warmup Iteration   4: 8125.108 ns/op
Iteration   1: 8135.704 ns/op
Iteration   2: 8149.925 ns/op
Iteration   3: 8209.362 ns/op
Iteration   4: 8164.184 ns/op
Iteration   5: 8147.651 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8161.365 ±(99.9%) 110.418 ns/op [Average]
  (min, avg, max) = (8135.704, 8161.365, 8209.362), stdev = 28.675
  CI (99.9%): [8050.947, 8271.783] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 70.00% complete, ETA 00:29:28
# Fork: 1 of 1
# Warmup Iteration   1: 35667.662 ns/op
# Warmup Iteration   2: 12565.212 ns/op
# Warmup Iteration   3: 12320.734 ns/op
# Warmup Iteration   4: 12183.789 ns/op
Iteration   1: 12186.206 ns/op
Iteration   2: 12189.728 ns/op
Iteration   3: 12444.194 ns/op
Iteration   4: 12142.772 ns/op
Iteration   5: 12155.811 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  12223.742 ±(99.9%) 480.697 ns/op [Average]
  (min, avg, max) = (12142.772, 12223.742, 12444.194), stdev = 124.836
  CI (99.9%): [11743.045, 12704.439] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 70.20% complete, ETA 00:29:17
# Fork: 1 of 1
# Warmup Iteration   1: 64814.634 ns/op
# Warmup Iteration   2: 28584.609 ns/op
# Warmup Iteration   3: 28767.662 ns/op
# Warmup Iteration   4: 27591.013 ns/op
Iteration   1: 27500.784 ns/op
Iteration   2: 27550.175 ns/op
Iteration   3: 27619.867 ns/op
Iteration   4: 27553.122 ns/op
Iteration   5: 27674.219 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  27579.633 ±(99.9%) 260.830 ns/op [Average]
  (min, avg, max) = (27500.784, 27579.633, 27674.219), stdev = 67.737
  CI (99.9%): [27318.804, 27840.463] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 70.39% complete, ETA 00:29:05
# Fork: 1 of 1
# Warmup Iteration   1: 495614.621 ns/op
# Warmup Iteration   2: 222508.308 ns/op
# Warmup Iteration   3: 199439.667 ns/op
# Warmup Iteration   4: 199651.678 ns/op
Iteration   1: 203446.610 ns/op
Iteration   2: 200620.273 ns/op
Iteration   3: 202177.651 ns/op
Iteration   4: 205112.745 ns/op
Iteration   5: 199484.661 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  202168.388 ±(99.9%) 8589.229 ns/op [Average]
  (min, avg, max) = (199484.661, 202168.388, 205112.745), stdev = 2230.596
  CI (99.9%): [193579.159, 210757.617] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 70.59% complete, ETA 00:28:53
# Fork: 1 of 1
# Warmup Iteration   1: 10991.905 ns/op
# Warmup Iteration   2: 4553.731 ns/op
# Warmup Iteration   3: 4622.201 ns/op
# Warmup Iteration   4: 4654.953 ns/op
Iteration   1: 4600.011 ns/op
Iteration   2: 4638.616 ns/op
Iteration   3: 4618.151 ns/op
Iteration   4: 4720.346 ns/op
Iteration   5: 4632.733 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4641.972 ±(99.9%) 178.207 ns/op [Average]
  (min, avg, max) = (4600.011, 4641.972, 4720.346), stdev = 46.280
  CI (99.9%): [4463.764, 4820.179] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 70.78% complete, ETA 00:28:42
# Fork: 1 of 1
# Warmup Iteration   1: 17574.151 ns/op
# Warmup Iteration   2: 7678.584 ns/op
# Warmup Iteration   3: 7308.305 ns/op
# Warmup Iteration   4: 7153.709 ns/op
Iteration   1: 7151.833 ns/op
Iteration   2: 7158.614 ns/op
Iteration   3: 7151.320 ns/op
Iteration   4: 7146.054 ns/op
Iteration   5: 7159.909 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7153.546 ±(99.9%) 21.969 ns/op [Average]
  (min, avg, max) = (7146.054, 7153.546, 7159.909), stdev = 5.705
  CI (99.9%): [7131.577, 7175.515] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 70.98% complete, ETA 00:28:30
# Fork: 1 of 1
# Warmup Iteration   1: 39170.270 ns/op
# Warmup Iteration   2: 12893.085 ns/op
# Warmup Iteration   3: 12251.000 ns/op
# Warmup Iteration   4: 12080.790 ns/op
Iteration   1: 12128.332 ns/op
Iteration   2: 12412.548 ns/op
Iteration   3: 12080.474 ns/op
Iteration   4: 12083.510 ns/op
Iteration   5: 12052.805 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  12151.534 ±(99.9%) 571.437 ns/op [Average]
  (min, avg, max) = (12052.805, 12151.534, 12412.548), stdev = 148.400
  CI (99.9%): [11580.097, 12722.971] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 71.18% complete, ETA 00:28:19
# Fork: 1 of 1
# Warmup Iteration   1: 58450.094 ns/op
# Warmup Iteration   2: 27168.744 ns/op
# Warmup Iteration   3: 25494.009 ns/op
# Warmup Iteration   4: 24262.033 ns/op
Iteration   1: 24202.113 ns/op
Iteration   2: 24278.782 ns/op
Iteration   3: 24213.755 ns/op
Iteration   4: 24914.206 ns/op
Iteration   5: 24238.093 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  24369.390 ±(99.9%) 1178.193 ns/op [Average]
  (min, avg, max) = (24202.113, 24369.390, 24914.206), stdev = 305.973
  CI (99.9%): [23191.197, 25547.582] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 71.37% complete, ETA 00:28:07
# Fork: 1 of 1
# Warmup Iteration   1: 364938.554 ns/op
# Warmup Iteration   2: 192966.296 ns/op
# Warmup Iteration   3: 177898.568 ns/op
# Warmup Iteration   4: 186556.883 ns/op
Iteration   1: 177572.304 ns/op
Iteration   2: 177767.339 ns/op
Iteration   3: 177386.452 ns/op
Iteration   4: 190605.977 ns/op
Iteration   5: 176756.991 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  180017.813 ±(99.9%) 22838.522 ns/op [Average]
  (min, avg, max) = (176756.991, 180017.813, 190605.977), stdev = 5931.092
  CI (99.9%): [157179.290, 202856.335] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 71.57% complete, ETA 00:27:56
# Fork: 1 of 1
# Warmup Iteration   1: 285411.968 ns/op
# Warmup Iteration   2: 100054.604 ns/op
# Warmup Iteration   3: 97543.510 ns/op
# Warmup Iteration   4: 97214.558 ns/op
Iteration   1: 97197.144 ns/op
Iteration   2: 97032.477 ns/op
Iteration   3: 97004.536 ns/op
Iteration   4: 96647.530 ns/op
Iteration   5: 96708.476 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  96918.033 ±(99.9%) 893.917 ns/op [Average]
  (min, avg, max) = (96647.530, 96918.033, 97197.144), stdev = 232.147
  CI (99.9%): [96024.116, 97811.950] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 71.76% complete, ETA 00:27:44
# Fork: 1 of 1
# Warmup Iteration   1: 475699.485 ns/op
# Warmup Iteration   2: 147037.584 ns/op
# Warmup Iteration   3: 130272.597 ns/op
# Warmup Iteration   4: 129200.564 ns/op
Iteration   1: 129465.356 ns/op
Iteration   2: 131127.339 ns/op
Iteration   3: 129937.461 ns/op
Iteration   4: 129154.522 ns/op
Iteration   5: 129746.796 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  129886.295 ±(99.9%) 2903.950 ns/op [Average]
  (min, avg, max) = (129154.522, 129886.295, 131127.339), stdev = 754.147
  CI (99.9%): [126982.344, 132790.245] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 71.96% complete, ETA 00:27:32
# Fork: 1 of 1
# Warmup Iteration   1: 462207.524 ns/op
# Warmup Iteration   2: 169411.240 ns/op
# Warmup Iteration   3: 164266.612 ns/op
# Warmup Iteration   4: 163226.009 ns/op
Iteration   1: 163215.677 ns/op
Iteration   2: 163089.502 ns/op
Iteration   3: 163092.309 ns/op
Iteration   4: 163438.890 ns/op
Iteration   5: 164024.997 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  163372.275 ±(99.9%) 1507.846 ns/op [Average]
  (min, avg, max) = (163089.502, 163372.275, 164024.997), stdev = 391.583
  CI (99.9%): [161864.430, 164880.121] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 72.16% complete, ETA 00:27:21
# Fork: 1 of 1
# Warmup Iteration   1: 406778.874 ns/op
# Warmup Iteration   2: 224853.195 ns/op
# Warmup Iteration   3: 221032.655 ns/op
# Warmup Iteration   4: 221522.054 ns/op
Iteration   1: 220191.582 ns/op
Iteration   2: 220010.188 ns/op
Iteration   3: 220138.518 ns/op
Iteration   4: 220937.162 ns/op
Iteration   5: 220591.379 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  220373.766 ±(99.9%) 1473.208 ns/op [Average]
  (min, avg, max) = (220010.188, 220373.766, 220937.162), stdev = 382.587
  CI (99.9%): [218900.558, 221846.974] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 72.35% complete, ETA 00:27:09
# Fork: 1 of 1
# Warmup Iteration   1: 2635718.954 ns/op
# Warmup Iteration   2: 1156559.848 ns/op
# Warmup Iteration   3: 1129535.207 ns/op
# Warmup Iteration   4: 1100011.074 ns/op
Iteration   1: 1091290.954 ns/op
Iteration   2: 1094588.913 ns/op
Iteration   3: 1091622.069 ns/op
Iteration   4: 1093913.049 ns/op
Iteration   5: 1096315.031 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1093546.003 ±(99.9%) 8094.752 ns/op [Average]
  (min, avg, max) = (1091290.954, 1093546.003, 1096315.031), stdev = 2102.181
  CI (99.9%): [1085451.252, 1101640.755] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 72.55% complete, ETA 00:26:58
# Fork: 1 of 1
# Warmup Iteration   1: 3146.807 ns/op
# Warmup Iteration   2: 1975.757 ns/op
# Warmup Iteration   3: 1941.817 ns/op
# Warmup Iteration   4: 1944.538 ns/op
Iteration   1: 1971.069 ns/op
Iteration   2: 1946.266 ns/op
Iteration   3: 1942.763 ns/op
Iteration   4: 1946.213 ns/op
Iteration   5: 1948.841 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1951.030 ±(99.9%) 43.930 ns/op [Average]
  (min, avg, max) = (1942.763, 1951.030, 1971.069), stdev = 11.408
  CI (99.9%): [1907.100, 1994.960] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 72.75% complete, ETA 00:26:46
# Fork: 1 of 1
# Warmup Iteration   1: 8226.809 ns/op
# Warmup Iteration   2: 3993.391 ns/op
# Warmup Iteration   3: 3926.923 ns/op
# Warmup Iteration   4: 3833.723 ns/op
Iteration   1: 3834.319 ns/op
Iteration   2: 3836.748 ns/op
Iteration   3: 4075.010 ns/op
Iteration   4: 3831.237 ns/op
Iteration   5: 3932.753 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3902.013 ±(99.9%) 407.169 ns/op [Average]
  (min, avg, max) = (3831.237, 3902.013, 4075.010), stdev = 105.740
  CI (99.9%): [3494.844, 4309.182] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 72.94% complete, ETA 00:26:35
# Fork: 1 of 1
# Warmup Iteration   1: 14489.398 ns/op
# Warmup Iteration   2: 7442.970 ns/op
# Warmup Iteration   3: 6938.287 ns/op
# Warmup Iteration   4: 7305.368 ns/op
Iteration   1: 7222.329 ns/op
Iteration   2: 7038.228 ns/op
Iteration   3: 6927.693 ns/op
Iteration   4: 6901.131 ns/op
Iteration   5: 6931.432 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7004.163 ±(99.9%) 511.244 ns/op [Average]
  (min, avg, max) = (6901.131, 7004.163, 7222.329), stdev = 132.768
  CI (99.9%): [6492.919, 7515.407] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 73.14% complete, ETA 00:26:23
# Fork: 1 of 1
# Warmup Iteration   1: 22956.999 ns/op
# Warmup Iteration   2: 13314.456 ns/op
# Warmup Iteration   3: 13186.890 ns/op
# Warmup Iteration   4: 13235.782 ns/op
Iteration   1: 13203.851 ns/op
Iteration   2: 13199.350 ns/op
Iteration   3: 13657.170 ns/op
Iteration   4: 13171.595 ns/op
Iteration   5: 13378.802 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13322.154 ±(99.9%) 787.239 ns/op [Average]
  (min, avg, max) = (13171.595, 13322.154, 13657.170), stdev = 204.444
  CI (99.9%): [12534.914, 14109.393] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 73.33% complete, ETA 00:26:11
# Fork: 1 of 1
# Warmup Iteration   1: 175691.865 ns/op
# Warmup Iteration   2: 127717.959 ns/op
# Warmup Iteration   3: 124669.666 ns/op
# Warmup Iteration   4: 124516.314 ns/op
Iteration   1: 128275.155 ns/op
Iteration   2: 126440.831 ns/op
Iteration   3: 124384.167 ns/op
Iteration   4: 125123.174 ns/op
Iteration   5: 124376.723 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  125720.010 ±(99.9%) 6383.672 ns/op [Average]
  (min, avg, max) = (124376.723, 125720.010, 128275.155), stdev = 1657.819
  CI (99.9%): [119336.338, 132103.682] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 73.53% complete, ETA 00:26:00
# Fork: 1 of 1
# Warmup Iteration   1: 10096.165 ns/op
# Warmup Iteration   2: 5909.249 ns/op
# Warmup Iteration   3: 7694.619 ns/op
# Warmup Iteration   4: 7182.548 ns/op
Iteration   1: 7529.714 ns/op
Iteration   2: 7507.694 ns/op
Iteration   3: 7488.329 ns/op
Iteration   4: 7482.308 ns/op
Iteration   5: 7758.777 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7553.365 ±(99.9%) 447.894 ns/op [Average]
  (min, avg, max) = (7482.308, 7553.365, 7758.777), stdev = 116.317
  CI (99.9%): [7105.471, 8001.258] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 73.73% complete, ETA 00:25:48
# Fork: 1 of 1
# Warmup Iteration   1: 23862.233 ns/op
# Warmup Iteration   2: 15040.716 ns/op
# Warmup Iteration   3: 18474.236 ns/op
# Warmup Iteration   4: 24853.549 ns/op
Iteration   1: 24925.659 ns/op
Iteration   2: 25297.944 ns/op
Iteration   3: 25003.203 ns/op
Iteration   4: 25798.411 ns/op
Iteration   5: 25010.546 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  25207.153 ±(99.9%) 1384.784 ns/op [Average]
  (min, avg, max) = (24925.659, 25207.153, 25798.411), stdev = 359.624
  CI (99.9%): [23822.368, 26591.937] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 73.92% complete, ETA 00:25:37
# Fork: 1 of 1
# Warmup Iteration   1: 33479.354 ns/op
# Warmup Iteration   2: 16812.127 ns/op
# Warmup Iteration   3: 17119.266 ns/op
# Warmup Iteration   4: 17510.161 ns/op
Iteration   1: 17264.204 ns/op
Iteration   2: 17213.055 ns/op
Iteration   3: 17137.678 ns/op
Iteration   4: 17166.938 ns/op
Iteration   5: 17195.505 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  17195.476 ±(99.9%) 184.545 ns/op [Average]
  (min, avg, max) = (17137.678, 17195.476, 17264.204), stdev = 47.926
  CI (99.9%): [17010.931, 17380.021] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 74.12% complete, ETA 00:25:25
# Fork: 1 of 1
# Warmup Iteration   1: 54268.266 ns/op
# Warmup Iteration   2: 32913.228 ns/op
# Warmup Iteration   3: 34333.669 ns/op
# Warmup Iteration   4: 29791.413 ns/op
Iteration   1: 29852.762 ns/op
Iteration   2: 29776.094 ns/op
Iteration   3: 29884.434 ns/op
Iteration   4: 29864.945 ns/op
Iteration   5: 29790.812 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  29833.809 ±(99.9%) 183.374 ns/op [Average]
  (min, avg, max) = (29776.094, 29833.809, 29884.434), stdev = 47.622
  CI (99.9%): [29650.435, 30017.183] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 74.31% complete, ETA 00:25:14
# Fork: 1 of 1
# Warmup Iteration   1: 397668.968 ns/op
# Warmup Iteration   2: 266374.239 ns/op
# Warmup Iteration   3: 252784.892 ns/op
# Warmup Iteration   4: 261675.384 ns/op
Iteration   1: 253455.368 ns/op
Iteration   2: 252314.020 ns/op
Iteration   3: 253561.857 ns/op
Iteration   4: 253310.536 ns/op
Iteration   5: 255853.609 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  253699.078 ±(99.9%) 5016.777 ns/op [Average]
  (min, avg, max) = (252314.020, 253699.078, 255853.609), stdev = 1302.841
  CI (99.9%): [248682.301, 258715.855] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 74.51% complete, ETA 00:25:02
# Fork: 1 of 1
# Warmup Iteration   1: 7493.989 ns/op
# Warmup Iteration   2: 4126.141 ns/op
# Warmup Iteration   3: 3984.497 ns/op
# Warmup Iteration   4: 3983.025 ns/op
Iteration   1: 4056.123 ns/op
Iteration   2: 3974.508 ns/op
Iteration   3: 4266.573 ns/op
Iteration   4: 3987.580 ns/op
Iteration   5: 3972.272 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4051.411 ±(99.9%) 481.595 ns/op [Average]
  (min, avg, max) = (3972.272, 4051.411, 4266.573), stdev = 125.069
  CI (99.9%): [3569.816, 4533.006] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 74.71% complete, ETA 00:24:51
# Fork: 1 of 1
# Warmup Iteration   1: 20350.196 ns/op
# Warmup Iteration   2: 8687.183 ns/op
# Warmup Iteration   3: 8410.255 ns/op
# Warmup Iteration   4: 8405.869 ns/op
Iteration   1: 8394.433 ns/op
Iteration   2: 8380.446 ns/op
Iteration   3: 8383.529 ns/op
Iteration   4: 8405.467 ns/op
Iteration   5: 8417.049 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8396.185 ±(99.9%) 58.791 ns/op [Average]
  (min, avg, max) = (8380.446, 8396.185, 8417.049), stdev = 15.268
  CI (99.9%): [8337.394, 8454.976] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 74.90% complete, ETA 00:24:39
# Fork: 1 of 1
# Warmup Iteration   1: 29955.581 ns/op
# Warmup Iteration   2: 16263.546 ns/op
# Warmup Iteration   3: 16476.330 ns/op
# Warmup Iteration   4: 16906.985 ns/op
Iteration   1: 16548.148 ns/op
Iteration   2: 16413.476 ns/op
Iteration   3: 16447.676 ns/op
Iteration   4: 16392.558 ns/op
Iteration   5: 16407.270 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  16441.826 ±(99.9%) 241.731 ns/op [Average]
  (min, avg, max) = (16392.558, 16441.826, 16548.148), stdev = 62.777
  CI (99.9%): [16200.094, 16683.557] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 75.10% complete, ETA 00:24:28
# Fork: 1 of 1
# Warmup Iteration   1: 78292.833 ns/op
# Warmup Iteration   2: 32482.227 ns/op
# Warmup Iteration   3: 31816.455 ns/op
# Warmup Iteration   4: 31455.727 ns/op
Iteration   1: 31535.747 ns/op
Iteration   2: 31523.769 ns/op
Iteration   3: 31565.834 ns/op
Iteration   4: 31511.204 ns/op
Iteration   5: 33216.168 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  31870.545 ±(99.9%) 2897.606 ns/op [Average]
  (min, avg, max) = (31511.204, 31870.545, 33216.168), stdev = 752.499
  CI (99.9%): [28972.939, 34768.150] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 75.29% complete, ETA 00:24:16
# Fork: 1 of 1
# Warmup Iteration   1: 428151.305 ns/op
# Warmup Iteration   2: 246949.666 ns/op
# Warmup Iteration   3: 240496.392 ns/op
# Warmup Iteration   4: 240464.012 ns/op
Iteration   1: 240911.050 ns/op
Iteration   2: 240470.675 ns/op
Iteration   3: 240267.713 ns/op
Iteration   4: 244388.516 ns/op
Iteration   5: 256109.619 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  244429.515 ±(99.9%) 25959.676 ns/op [Average]
  (min, avg, max) = (240267.713, 244429.515, 256109.619), stdev = 6741.645
  CI (99.9%): [218469.839, 270389.190] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 75.49% complete, ETA 00:24:04
# Fork: 1 of 1
# Warmup Iteration   1: 95754.736 ns/op
# Warmup Iteration   2: 28149.466 ns/op
# Warmup Iteration   3: 22669.925 ns/op
# Warmup Iteration   4: 22976.688 ns/op
Iteration   1: 22645.803 ns/op
Iteration   2: 23480.332 ns/op
Iteration   3: 23074.864 ns/op
Iteration   4: 22645.088 ns/op
Iteration   5: 22668.546 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  22902.927 ±(99.9%) 1428.489 ns/op [Average]
  (min, avg, max) = (22645.088, 22902.927, 23480.332), stdev = 370.974
  CI (99.9%): [21474.438, 24331.415] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 75.69% complete, ETA 00:23:53
# Fork: 1 of 1
# Warmup Iteration   1: 178422.555 ns/op
# Warmup Iteration   2: 46376.634 ns/op
# Warmup Iteration   3: 39915.404 ns/op
# Warmup Iteration   4: 39744.678 ns/op
Iteration   1: 39701.931 ns/op
Iteration   2: 39616.810 ns/op
Iteration   3: 39640.163 ns/op
Iteration   4: 40715.846 ns/op
Iteration   5: 40667.692 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  40068.488 ±(99.9%) 2195.169 ns/op [Average]
  (min, avg, max) = (39616.810, 40068.488, 40715.846), stdev = 570.078
  CI (99.9%): [37873.320, 42263.657] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 75.88% complete, ETA 00:23:42
# Fork: 1 of 1
# Warmup Iteration   1: 922400.274 ns/op
# Warmup Iteration   2: 130267.990 ns/op
# Warmup Iteration   3: 93884.592 ns/op
# Warmup Iteration   4: 91963.790 ns/op
Iteration   1: 91737.661 ns/op
Iteration   2: 91788.206 ns/op
Iteration   3: 91707.345 ns/op
Iteration   4: 91517.305 ns/op
Iteration   5: 91517.252 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  91653.554 ±(99.9%) 491.770 ns/op [Average]
  (min, avg, max) = (91517.252, 91653.554, 91788.206), stdev = 127.711
  CI (99.9%): [91161.783, 92145.324] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 76.08% complete, ETA 00:23:30
# Fork: 1 of 1
# Warmup Iteration   1: 1146398.205 ns/op
# Warmup Iteration   2: 273466.156 ns/op
# Warmup Iteration   3: 213815.145 ns/op
# Warmup Iteration   4: 212677.902 ns/op
Iteration   1: 208701.889 ns/op
Iteration   2: 208698.561 ns/op
Iteration   3: 209498.664 ns/op
Iteration   4: 208613.520 ns/op
Iteration   5: 208951.459 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  208892.818 ±(99.9%) 1391.949 ns/op [Average]
  (min, avg, max) = (208613.520, 208892.818, 209498.664), stdev = 361.485
  CI (99.9%): [207500.869, 210284.767] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 76.27% complete, ETA 00:23:19
# Fork: 1 of 1
# Warmup Iteration   1: 7762756.773 ns/op
# Warmup Iteration   2: 1824857.440 ns/op
# Warmup Iteration   3: 1636918.235 ns/op
# Warmup Iteration   4: 1678208.130 ns/op
Iteration   1: 1638301.354 ns/op
Iteration   2: 1641332.338 ns/op
Iteration   3: 1666589.424 ns/op
Iteration   4: 1639059.874 ns/op
Iteration   5: 1625185.199 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1642093.638 ±(99.9%) 58082.964 ns/op [Average]
  (min, avg, max) = (1625185.199, 1642093.638, 1666589.424), stdev = 15083.961
  CI (99.9%): [1584010.674, 1700176.602] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 76.47% complete, ETA 00:23:07
# Fork: 1 of 1
# Warmup Iteration   1: 29846.792 ns/op
# Warmup Iteration   2: 14476.109 ns/op
# Warmup Iteration   3: 14059.911 ns/op
# Warmup Iteration   4: 14131.968 ns/op
Iteration   1: 14046.981 ns/op
Iteration   2: 14141.673 ns/op
Iteration   3: 13986.474 ns/op
Iteration   4: 15166.477 ns/op
Iteration   5: 14073.426 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14283.006 ±(99.9%) 1913.792 ns/op [Average]
  (min, avg, max) = (13986.474, 14283.006, 15166.477), stdev = 497.006
  CI (99.9%): [12369.214, 16196.798] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 76.67% complete, ETA 00:22:56
# Fork: 1 of 1
# Warmup Iteration   1: 51822.278 ns/op
# Warmup Iteration   2: 30187.237 ns/op
# Warmup Iteration   3: 29212.192 ns/op
# Warmup Iteration   4: 28282.290 ns/op
Iteration   1: 28059.962 ns/op
Iteration   2: 28058.907 ns/op
Iteration   3: 28104.384 ns/op
Iteration   4: 28144.020 ns/op
Iteration   5: 28099.382 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  28093.331 ±(99.9%) 136.503 ns/op [Average]
  (min, avg, max) = (28058.907, 28093.331, 28144.020), stdev = 35.449
  CI (99.9%): [27956.828, 28229.834] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 76.86% complete, ETA 00:22:44
# Fork: 1 of 1
# Warmup Iteration   1: 104137.639 ns/op
# Warmup Iteration   2: 65060.374 ns/op
# Warmup Iteration   3: 61980.016 ns/op
# Warmup Iteration   4: 61188.418 ns/op
Iteration   1: 60794.640 ns/op
Iteration   2: 63652.848 ns/op
Iteration   3: 63343.505 ns/op
Iteration   4: 60910.062 ns/op
Iteration   5: 60463.350 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  61832.881 ±(99.9%) 5902.743 ns/op [Average]
  (min, avg, max) = (60463.350, 61832.881, 63652.848), stdev = 1532.924
  CI (99.9%): [55930.138, 67735.624] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 77.06% complete, ETA 00:22:32
# Fork: 1 of 1
# Warmup Iteration   1: 252819.090 ns/op
# Warmup Iteration   2: 160008.868 ns/op
# Warmup Iteration   3: 133472.100 ns/op
# Warmup Iteration   4: 129167.978 ns/op
Iteration   1: 128790.757 ns/op
Iteration   2: 128933.319 ns/op
Iteration   3: 129188.874 ns/op
Iteration   4: 129035.666 ns/op
Iteration   5: 128052.165 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  128800.156 ±(99.9%) 1704.620 ns/op [Average]
  (min, avg, max) = (128052.165, 128800.156, 129188.874), stdev = 442.684
  CI (99.9%): [127095.536, 130504.776] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 77.25% complete, ETA 00:22:21
# Fork: 1 of 1
# Warmup Iteration   1: 1534314.449 ns/op
# Warmup Iteration   2: 950341.205 ns/op
# Warmup Iteration   3: 927334.900 ns/op
# Warmup Iteration   4: 925936.298 ns/op
Iteration   1: 923056.430 ns/op
Iteration   2: 926877.677 ns/op
Iteration   3: 925490.888 ns/op
Iteration   4: 937563.647 ns/op
Iteration   5: 923618.110 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  927321.351 ±(99.9%) 22809.631 ns/op [Average]
  (min, avg, max) = (923056.430, 927321.351, 937563.647), stdev = 5923.589
  CI (99.9%): [904511.719, 950130.982] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 77.45% complete, ETA 00:22:09
# Fork: 1 of 1
# Warmup Iteration   1: 34985.158 ns/op
# Warmup Iteration   2: 16328.806 ns/op
# Warmup Iteration   3: 15013.693 ns/op
# Warmup Iteration   4: 15254.186 ns/op
Iteration   1: 14842.728 ns/op
Iteration   2: 14922.070 ns/op
Iteration   3: 15034.754 ns/op
Iteration   4: 14730.481 ns/op
Iteration   5: 15022.526 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14910.512 ±(99.9%) 491.326 ns/op [Average]
  (min, avg, max) = (14730.481, 14910.512, 15034.754), stdev = 127.596
  CI (99.9%): [14419.186, 15401.838] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 77.65% complete, ETA 00:21:58
# Fork: 1 of 1
# Warmup Iteration   1: 47858.403 ns/op
# Warmup Iteration   2: 28815.411 ns/op
# Warmup Iteration   3: 29034.047 ns/op
# Warmup Iteration   4: 28227.705 ns/op
Iteration   1: 27618.473 ns/op
Iteration   2: 28805.054 ns/op
Iteration   3: 27644.163 ns/op
Iteration   4: 29041.058 ns/op
Iteration   5: 28566.404 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  28335.031 ±(99.9%) 2556.899 ns/op [Average]
  (min, avg, max) = (27618.473, 28335.031, 29041.058), stdev = 664.019
  CI (99.9%): [25778.132, 30891.930] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 77.84% complete, ETA 00:21:46
# Fork: 1 of 1
# Warmup Iteration   1: 113027.070 ns/op
# Warmup Iteration   2: 64844.680 ns/op
# Warmup Iteration   3: 60637.448 ns/op
# Warmup Iteration   4: 61618.855 ns/op
Iteration   1: 60216.302 ns/op
Iteration   2: 64643.929 ns/op
Iteration   3: 60592.183 ns/op
Iteration   4: 61098.635 ns/op
Iteration   5: 61725.903 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  61655.390 ±(99.9%) 6792.785 ns/op [Average]
  (min, avg, max) = (60216.302, 61655.390, 64643.929), stdev = 1764.065
  CI (99.9%): [54862.606, 68448.175] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 78.04% complete, ETA 00:21:35
# Fork: 1 of 1
# Warmup Iteration   1: 221538.240 ns/op
# Warmup Iteration   2: 141913.937 ns/op
# Warmup Iteration   3: 130880.910 ns/op
# Warmup Iteration   4: 149164.287 ns/op
Iteration   1: 131193.605 ns/op
Iteration   2: 130874.927 ns/op
Iteration   3: 131237.436 ns/op
Iteration   4: 131833.048 ns/op
Iteration   5: 130734.240 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  131174.651 ±(99.9%) 1635.487 ns/op [Average]
  (min, avg, max) = (130734.240, 131174.651, 131833.048), stdev = 424.731
  CI (99.9%): [129539.164, 132810.138] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 78.24% complete, ETA 00:21:23
# Fork: 1 of 1
# Warmup Iteration   1: 1561450.126 ns/op
# Warmup Iteration   2: 998992.172 ns/op
# Warmup Iteration   3: 928192.243 ns/op
# Warmup Iteration   4: 923839.805 ns/op
Iteration   1: 913675.367 ns/op
Iteration   2: 1006722.006 ns/op
Iteration   3: 915485.333 ns/op
Iteration   4: 914314.340 ns/op
Iteration   5: 913786.318 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  932796.673 ±(99.9%) 159153.825 ns/op [Average]
  (min, avg, max) = (913675.367, 932796.673, 1006722.006), stdev = 41331.743
  CI (99.9%): [773642.848, 1091950.499] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 78.43% complete, ETA 00:21:12
# Fork: 1 of 1
# Warmup Iteration   1: 8180.517 ns/op
# Warmup Iteration   2: 6760.069 ns/op
# Warmup Iteration   3: 6454.649 ns/op
# Warmup Iteration   4: 6192.525 ns/op
Iteration   1: 6176.636 ns/op
Iteration   2: 6243.712 ns/op
Iteration   3: 6482.181 ns/op
Iteration   4: 6193.375 ns/op
Iteration   5: 6198.329 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  6258.847 ±(99.9%) 490.164 ns/op [Average]
  (min, avg, max) = (6176.636, 6258.847, 6482.181), stdev = 127.294
  CI (99.9%): [5768.683, 6749.010] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 78.63% complete, ETA 00:21:00
# Fork: 1 of 1
# Warmup Iteration   1: 18778.487 ns/op
# Warmup Iteration   2: 12556.385 ns/op
# Warmup Iteration   3: 12473.080 ns/op
# Warmup Iteration   4: 12257.339 ns/op
Iteration   1: 12266.511 ns/op
Iteration   2: 12308.789 ns/op
Iteration   3: 12310.871 ns/op
Iteration   4: 12263.941 ns/op
Iteration   5: 12270.471 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  12284.117 ±(99.9%) 90.874 ns/op [Average]
  (min, avg, max) = (12263.941, 12284.117, 12310.871), stdev = 23.600
  CI (99.9%): [12193.242, 12374.991] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 78.82% complete, ETA 00:20:48
# Fork: 1 of 1
# Warmup Iteration   1: 38831.724 ns/op
# Warmup Iteration   2: 27048.828 ns/op
# Warmup Iteration   3: 26484.345 ns/op
# Warmup Iteration   4: 26072.905 ns/op
Iteration   1: 26058.876 ns/op
Iteration   2: 26089.595 ns/op
Iteration   3: 27443.755 ns/op
Iteration   4: 26013.043 ns/op
Iteration   5: 26185.095 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  26358.073 ±(99.9%) 2349.580 ns/op [Average]
  (min, avg, max) = (26013.043, 26358.073, 27443.755), stdev = 610.178
  CI (99.9%): [24008.493, 28707.653] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 79.02% complete, ETA 00:20:37
# Fork: 1 of 1
# Warmup Iteration   1: 96465.687 ns/op
# Warmup Iteration   2: 61025.363 ns/op
# Warmup Iteration   3: 60863.053 ns/op
# Warmup Iteration   4: 61043.090 ns/op
Iteration   1: 60685.795 ns/op
Iteration   2: 60583.279 ns/op
Iteration   3: 60549.198 ns/op
Iteration   4: 60484.684 ns/op
Iteration   5: 60538.884 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  60568.368 ±(99.9%) 287.198 ns/op [Average]
  (min, avg, max) = (60484.684, 60568.368, 60685.795), stdev = 74.584
  CI (99.9%): [60281.170, 60855.566] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 79.22% complete, ETA 00:20:25
# Fork: 1 of 1
# Warmup Iteration   1: 676434.078 ns/op
# Warmup Iteration   2: 502462.295 ns/op
# Warmup Iteration   3: 495349.124 ns/op
# Warmup Iteration   4: 494700.895 ns/op
Iteration   1: 494463.050 ns/op
Iteration   2: 494191.426 ns/op
Iteration   3: 495533.486 ns/op
Iteration   4: 493812.457 ns/op
Iteration   5: 496280.818 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  494856.247 ±(99.9%) 3933.570 ns/op [Average]
  (min, avg, max) = (493812.457, 494856.247, 496280.818), stdev = 1021.536
  CI (99.9%): [490922.677, 498789.818] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 79.41% complete, ETA 00:20:14
# Fork: 1 of 1
# Warmup Iteration   1: 22544.784 ns/op
# Warmup Iteration   2: 8513.181 ns/op
# Warmup Iteration   3: 8514.572 ns/op
# Warmup Iteration   4: 8280.396 ns/op
Iteration   1: 8424.941 ns/op
Iteration   2: 8540.726 ns/op
Iteration   3: 8253.030 ns/op
Iteration   4: 8270.768 ns/op
Iteration   5: 8267.621 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8351.417 ±(99.9%) 488.780 ns/op [Average]
  (min, avg, max) = (8253.030, 8351.417, 8540.726), stdev = 126.935
  CI (99.9%): [7862.637, 8840.197] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 79.61% complete, ETA 00:20:02
# Fork: 1 of 1
# Warmup Iteration   1: 39762.334 ns/op
# Warmup Iteration   2: 15940.716 ns/op
# Warmup Iteration   3: 12846.555 ns/op
# Warmup Iteration   4: 12966.679 ns/op
Iteration   1: 13199.701 ns/op
Iteration   2: 12823.883 ns/op
Iteration   3: 13293.843 ns/op
Iteration   4: 12772.097 ns/op
Iteration   5: 12745.258 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  12966.956 ±(99.9%) 997.857 ns/op [Average]
  (min, avg, max) = (12745.258, 12966.956, 13293.843), stdev = 259.140
  CI (99.9%): [11969.099, 13964.813] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 79.80% complete, ETA 00:19:51
# Fork: 1 of 1
# Warmup Iteration   1: 64358.384 ns/op
# Warmup Iteration   2: 25639.174 ns/op
# Warmup Iteration   3: 22867.825 ns/op
# Warmup Iteration   4: 22893.183 ns/op
Iteration   1: 22827.605 ns/op
Iteration   2: 22865.774 ns/op
Iteration   3: 22819.513 ns/op
Iteration   4: 22880.455 ns/op
Iteration   5: 22761.396 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  22830.949 ±(99.9%) 178.994 ns/op [Average]
  (min, avg, max) = (22761.396, 22830.949, 22880.455), stdev = 46.484
  CI (99.9%): [22651.955, 23009.942] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 80.00% complete, ETA 00:19:39
# Fork: 1 of 1
# Warmup Iteration   1: 120443.273 ns/op
# Warmup Iteration   2: 54083.283 ns/op
# Warmup Iteration   3: 47149.869 ns/op
# Warmup Iteration   4: 46931.633 ns/op
Iteration   1: 46889.113 ns/op
Iteration   2: 46812.798 ns/op
Iteration   3: 46830.243 ns/op
Iteration   4: 46808.276 ns/op
Iteration   5: 48260.654 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  47120.217 ±(99.9%) 2458.015 ns/op [Average]
  (min, avg, max) = (46808.276, 47120.217, 48260.654), stdev = 638.339
  CI (99.9%): [44662.202, 49578.232] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 80.20% complete, ETA 00:19:27
# Fork: 1 of 1
# Warmup Iteration   1: 960061.055 ns/op
# Warmup Iteration   2: 528639.671 ns/op
# Warmup Iteration   3: 482726.671 ns/op
# Warmup Iteration   4: 480819.299 ns/op
Iteration   1: 478199.418 ns/op
Iteration   2: 478149.271 ns/op
Iteration   3: 479905.813 ns/op
Iteration   4: 477800.552 ns/op
Iteration   5: 477516.703 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  478314.351 ±(99.9%) 3588.257 ns/op [Average]
  (min, avg, max) = (477516.703, 478314.351, 479905.813), stdev = 931.859
  CI (99.9%): [474726.094, 481902.609] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 80.39% complete, ETA 00:19:16
# Fork: 1 of 1
# Warmup Iteration   1: 19465.842 ns/op
# Warmup Iteration   2: 8069.956 ns/op
# Warmup Iteration   3: 7390.262 ns/op
# Warmup Iteration   4: 7528.524 ns/op
Iteration   1: 7369.374 ns/op
Iteration   2: 7375.107 ns/op
Iteration   3: 7344.843 ns/op
Iteration   4: 7347.890 ns/op
Iteration   5: 7359.770 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7359.397 ±(99.9%) 50.601 ns/op [Average]
  (min, avg, max) = (7344.843, 7359.397, 7375.107), stdev = 13.141
  CI (99.9%): [7308.796, 7409.997] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 80.59% complete, ETA 00:19:04
# Fork: 1 of 1
# Warmup Iteration   1: 32784.356 ns/op
# Warmup Iteration   2: 16764.521 ns/op
# Warmup Iteration   3: 12659.495 ns/op
# Warmup Iteration   4: 12758.542 ns/op
Iteration   1: 12854.895 ns/op
Iteration   2: 12616.093 ns/op
Iteration   3: 12909.180 ns/op
Iteration   4: 12787.141 ns/op
Iteration   5: 12657.229 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  12764.908 ±(99.9%) 483.815 ns/op [Average]
  (min, avg, max) = (12616.093, 12764.908, 12909.180), stdev = 125.645
  CI (99.9%): [12281.093, 13248.723] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 80.78% complete, ETA 00:18:53
# Fork: 1 of 1
# Warmup Iteration   1: 70253.859 ns/op
# Warmup Iteration   2: 26089.327 ns/op
# Warmup Iteration   3: 23270.992 ns/op
# Warmup Iteration   4: 23179.462 ns/op
Iteration   1: 24010.904 ns/op
Iteration   2: 23172.018 ns/op
Iteration   3: 23203.751 ns/op
Iteration   4: 23190.908 ns/op
Iteration   5: 23173.736 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  23350.263 ±(99.9%) 1422.967 ns/op [Average]
  (min, avg, max) = (23172.018, 23350.263, 24010.904), stdev = 369.540
  CI (99.9%): [21927.296, 24773.231] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 80.98% complete, ETA 00:18:41
# Fork: 1 of 1
# Warmup Iteration   1: 95558.526 ns/op
# Warmup Iteration   2: 56960.396 ns/op
# Warmup Iteration   3: 48463.811 ns/op
# Warmup Iteration   4: 48077.274 ns/op
Iteration   1: 48081.047 ns/op
Iteration   2: 48183.891 ns/op
Iteration   3: 48362.497 ns/op
Iteration   4: 47987.675 ns/op
Iteration   5: 48146.274 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  48152.277 ±(99.9%) 535.625 ns/op [Average]
  (min, avg, max) = (47987.675, 48152.277, 48362.497), stdev = 139.100
  CI (99.9%): [47616.651, 48687.902] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 81.18% complete, ETA 00:18:30
# Fork: 1 of 1
# Warmup Iteration   1: 942840.805 ns/op
# Warmup Iteration   2: 482421.152 ns/op
# Warmup Iteration   3: 467308.434 ns/op
# Warmup Iteration   4: 461543.811 ns/op
Iteration   1: 456361.788 ns/op
Iteration   2: 456810.139 ns/op
Iteration   3: 470886.405 ns/op
Iteration   4: 456283.539 ns/op
Iteration   5: 457481.203 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  459564.615 ±(99.9%) 24439.779 ns/op [Average]
  (min, avg, max) = (456283.539, 459564.615, 470886.405), stdev = 6346.933
  CI (99.9%): [435124.835, 484004.394] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 81.37% complete, ETA 00:18:18
# Fork: 1 of 1
# Warmup Iteration   1: 11545.594 ns/op
# Warmup Iteration   2: 4818.527 ns/op
# Warmup Iteration   3: 4647.771 ns/op
# Warmup Iteration   4: 4630.690 ns/op
Iteration   1: 4637.258 ns/op
Iteration   2: 4634.691 ns/op
Iteration   3: 4656.141 ns/op
Iteration   4: 4663.640 ns/op
Iteration   5: 4642.468 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4646.839 ±(99.9%) 48.221 ns/op [Average]
  (min, avg, max) = (4634.691, 4646.839, 4663.640), stdev = 12.523
  CI (99.9%): [4598.618, 4695.060] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 81.57% complete, ETA 00:18:06
# Fork: 1 of 1
# Warmup Iteration   1: 17972.611 ns/op
# Warmup Iteration   2: 10427.337 ns/op
# Warmup Iteration   3: 9936.100 ns/op
# Warmup Iteration   4: 9878.806 ns/op
Iteration   1: 9878.204 ns/op
Iteration   2: 9886.497 ns/op
Iteration   3: 9893.081 ns/op
Iteration   4: 9956.907 ns/op
Iteration   5: 9936.645 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9910.267 ±(99.9%) 132.825 ns/op [Average]
  (min, avg, max) = (9878.204, 9910.267, 9956.907), stdev = 34.494
  CI (99.9%): [9777.441, 10043.092] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 81.76% complete, ETA 00:17:55
# Fork: 1 of 1
# Warmup Iteration   1: 62047.262 ns/op
# Warmup Iteration   2: 21693.822 ns/op
# Warmup Iteration   3: 20855.657 ns/op
# Warmup Iteration   4: 20393.993 ns/op
Iteration   1: 20319.538 ns/op
Iteration   2: 20400.062 ns/op
Iteration   3: 20324.720 ns/op
Iteration   4: 20354.223 ns/op
Iteration   5: 20330.785 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  20345.866 ±(99.9%) 127.346 ns/op [Average]
  (min, avg, max) = (20319.538, 20345.866, 20400.062), stdev = 33.071
  CI (99.9%): [20218.520, 20473.211] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 81.96% complete, ETA 00:17:43
# Fork: 1 of 1
# Warmup Iteration   1: 246711.299 ns/op
# Warmup Iteration   2: 50354.824 ns/op
# Warmup Iteration   3: 40096.288 ns/op
# Warmup Iteration   4: 39070.606 ns/op
Iteration   1: 38972.751 ns/op
Iteration   2: 39407.434 ns/op
Iteration   3: 40261.564 ns/op
Iteration   4: 39227.510 ns/op
Iteration   5: 39116.290 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  39397.110 ±(99.9%) 1958.813 ns/op [Average]
  (min, avg, max) = (38972.751, 39397.110, 40261.564), stdev = 508.697
  CI (99.9%): [37438.297, 41355.922] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 82.16% complete, ETA 00:17:32
# Fork: 1 of 1
# Warmup Iteration   1: 2862156.980 ns/op
# Warmup Iteration   2: 339325.354 ns/op
# Warmup Iteration   3: 315153.745 ns/op
# Warmup Iteration   4: 299684.530 ns/op
Iteration   1: 300376.367 ns/op
Iteration   2: 299184.481 ns/op
Iteration   3: 299666.564 ns/op
Iteration   4: 299410.417 ns/op
Iteration   5: 299789.367 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  299685.439 ±(99.9%) 1738.274 ns/op [Average]
  (min, avg, max) = (299184.481, 299685.439, 300376.367), stdev = 451.424
  CI (99.9%): [297947.165, 301423.713] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _1_K)

# Run progress: 82.35% complete, ETA 00:17:20
# Fork: 1 of 1
# Warmup Iteration   1: 12456.441 ns/op
# Warmup Iteration   2: 3662.157 ns/op
# Warmup Iteration   3: 3524.181 ns/op
# Warmup Iteration   4: 3505.677 ns/op
Iteration   1: 3500.388 ns/op
Iteration   2: 3500.935 ns/op
Iteration   3: 3514.594 ns/op
Iteration   4: 3679.584 ns/op
Iteration   5: 3688.579 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3576.816 ±(99.9%) 377.889 ns/op [Average]
  (min, avg, max) = (3500.388, 3576.816, 3688.579), stdev = 98.137
  CI (99.9%): [3198.927, 3954.705] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _2_K)

# Run progress: 82.55% complete, ETA 00:17:09
# Fork: 1 of 1
# Warmup Iteration   1: 12680.154 ns/op
# Warmup Iteration   2: 7087.811 ns/op
# Warmup Iteration   3: 6805.551 ns/op
# Warmup Iteration   4: 6784.335 ns/op
Iteration   1: 6799.447 ns/op
Iteration   2: 6818.481 ns/op
Iteration   3: 6770.770 ns/op
Iteration   4: 6799.558 ns/op
Iteration   5: 6790.920 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6795.835 ±(99.9%) 66.476 ns/op [Average]
  (min, avg, max) = (6770.770, 6795.835, 6818.481), stdev = 17.264
  CI (99.9%): [6729.360, 6862.311] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _4_K)

# Run progress: 82.75% complete, ETA 00:16:57
# Fork: 1 of 1
# Warmup Iteration   1: 70161.300 ns/op
# Warmup Iteration   2: 16140.602 ns/op
# Warmup Iteration   3: 13927.956 ns/op
# Warmup Iteration   4: 13396.477 ns/op
Iteration   1: 13382.450 ns/op
Iteration   2: 13352.655 ns/op
Iteration   3: 13774.468 ns/op
Iteration   4: 13339.946 ns/op
Iteration   5: 13305.247 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  13430.953 ±(99.9%) 747.089 ns/op [Average]
  (min, avg, max) = (13305.247, 13430.953, 13774.468), stdev = 194.017
  CI (99.9%): [12683.864, 14178.042] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _8_K)

# Run progress: 82.94% complete, ETA 00:16:45
# Fork: 1 of 1
# Warmup Iteration   1: 152020.492 ns/op
# Warmup Iteration   2: 27270.720 ns/op
# Warmup Iteration   3: 25165.182 ns/op
# Warmup Iteration   4: 24814.010 ns/op
Iteration   1: 24839.426 ns/op
Iteration   2: 25895.573 ns/op
Iteration   3: 24872.328 ns/op
Iteration   4: 24854.584 ns/op
Iteration   5: 24857.617 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  25063.906 ±(99.9%) 1790.792 ns/op [Average]
  (min, avg, max) = (24839.426, 25063.906, 25895.573), stdev = 465.063
  CI (99.9%): [23273.113, 26854.698] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CBOR, inputType = _64_K)

# Run progress: 83.14% complete, ETA 00:16:34
# Fork: 1 of 1
# Warmup Iteration   1: 1176388.052 ns/op
# Warmup Iteration   2: 232744.059 ns/op
# Warmup Iteration   3: 256231.230 ns/op
# Warmup Iteration   4: 222849.644 ns/op
Iteration   1: 222378.472 ns/op
Iteration   2: 222322.527 ns/op
Iteration   3: 223405.109 ns/op
Iteration   4: 223531.390 ns/op
Iteration   5: 221279.362 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  222583.372 ±(99.9%) 3541.994 ns/op [Average]
  (min, avg, max) = (221279.362, 222583.372, 223531.390), stdev = 919.845
  CI (99.9%): [219041.378, 226125.366] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _1_K)

# Run progress: 83.33% complete, ETA 00:16:22
# Fork: 1 of 1
# Warmup Iteration   1: 13032.114 ns/op
# Warmup Iteration   2: 4474.231 ns/op
# Warmup Iteration   3: 4504.515 ns/op
# Warmup Iteration   4: 4433.347 ns/op
Iteration   1: 4557.368 ns/op
Iteration   2: 4437.932 ns/op
Iteration   3: 4437.628 ns/op
Iteration   4: 4425.014 ns/op
Iteration   5: 4430.443 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4457.677 ±(99.9%) 215.590 ns/op [Average]
  (min, avg, max) = (4425.014, 4457.677, 4557.368), stdev = 55.988
  CI (99.9%): [4242.087, 4673.267] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _2_K)

# Run progress: 83.53% complete, ETA 00:16:11
# Fork: 1 of 1
# Warmup Iteration   1: 57537.509 ns/op
# Warmup Iteration   2: 9486.027 ns/op
# Warmup Iteration   3: 8312.020 ns/op
# Warmup Iteration   4: 8186.475 ns/op
Iteration   1: 8160.984 ns/op
Iteration   2: 8182.817 ns/op
Iteration   3: 8185.186 ns/op
Iteration   4: 8200.320 ns/op
Iteration   5: 8313.144 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8208.490 ±(99.9%) 231.665 ns/op [Average]
  (min, avg, max) = (8160.984, 8208.490, 8313.144), stdev = 60.163
  CI (99.9%): [7976.825, 8440.155] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _4_K)

# Run progress: 83.73% complete, ETA 00:15:59
# Fork: 1 of 1
# Warmup Iteration   1: 118630.715 ns/op
# Warmup Iteration   2: 20383.903 ns/op
# Warmup Iteration   3: 16125.355 ns/op
# Warmup Iteration   4: 15386.772 ns/op
Iteration   1: 15329.652 ns/op
Iteration   2: 15437.134 ns/op
Iteration   3: 15439.875 ns/op
Iteration   4: 15401.398 ns/op
Iteration   5: 15402.848 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15402.181 ±(99.9%) 171.170 ns/op [Average]
  (min, avg, max) = (15329.652, 15402.181, 15439.875), stdev = 44.452
  CI (99.9%): [15231.012, 15573.351] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _8_K)

# Run progress: 83.92% complete, ETA 00:15:48
# Fork: 1 of 1
# Warmup Iteration   1: 242393.632 ns/op
# Warmup Iteration   2: 34633.693 ns/op
# Warmup Iteration   3: 28740.525 ns/op
# Warmup Iteration   4: 28569.297 ns/op
Iteration   1: 28574.835 ns/op
Iteration   2: 28533.495 ns/op
Iteration   3: 28492.088 ns/op
Iteration   4: 28583.497 ns/op
Iteration   5: 28871.828 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  28611.149 ±(99.9%) 578.375 ns/op [Average]
  (min, avg, max) = (28492.088, 28611.149, 28871.828), stdev = 150.202
  CI (99.9%): [28032.774, 29189.523] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SMILE, inputType = _64_K)

# Run progress: 84.12% complete, ETA 00:15:36
# Fork: 1 of 1
# Warmup Iteration   1: 2030591.784 ns/op
# Warmup Iteration   2: 248419.279 ns/op
# Warmup Iteration   3: 224472.777 ns/op
# Warmup Iteration   4: 215411.887 ns/op
Iteration   1: 215871.741 ns/op
Iteration   2: 216069.957 ns/op
Iteration   3: 214866.357 ns/op
Iteration   4: 223546.296 ns/op
Iteration   5: 215532.806 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  217177.431 ±(99.9%) 13822.098 ns/op [Average]
  (min, avg, max) = (214866.357, 217177.431, 223546.296), stdev = 3589.555
  CI (99.9%): [203355.334, 230999.529] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 84.31% complete, ETA 00:15:25
# Fork: 1 of 1
# Warmup Iteration   1: 14249.606 ns/op
# Warmup Iteration   2: 6379.327 ns/op
# Warmup Iteration   3: 6337.669 ns/op
# Warmup Iteration   4: 6305.760 ns/op
Iteration   1: 6282.383 ns/op
Iteration   2: 6308.387 ns/op
Iteration   3: 6304.085 ns/op
Iteration   4: 6301.423 ns/op
Iteration   5: 6291.974 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6297.651 ±(99.9%) 40.212 ns/op [Average]
  (min, avg, max) = (6282.383, 6297.651, 6308.387), stdev = 10.443
  CI (99.9%): [6257.438, 6337.863] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 84.51% complete, ETA 00:15:13
# Fork: 1 of 1
# Warmup Iteration   1: 54016.865 ns/op
# Warmup Iteration   2: 15327.380 ns/op
# Warmup Iteration   3: 12311.091 ns/op
# Warmup Iteration   4: 12007.046 ns/op
Iteration   1: 11976.481 ns/op
Iteration   2: 11962.055 ns/op
Iteration   3: 11982.937 ns/op
Iteration   4: 11951.465 ns/op
Iteration   5: 11953.164 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  11965.221 ±(99.9%) 53.952 ns/op [Average]
  (min, avg, max) = (11951.465, 11965.221, 11982.937), stdev = 14.011
  CI (99.9%): [11911.268, 12019.173] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 84.71% complete, ETA 00:15:01
# Fork: 1 of 1
# Warmup Iteration   1: 90561.054 ns/op
# Warmup Iteration   2: 27736.730 ns/op
# Warmup Iteration   3: 18311.960 ns/op
# Warmup Iteration   4: 18177.805 ns/op
Iteration   1: 18547.772 ns/op
Iteration   2: 18123.132 ns/op
Iteration   3: 18575.103 ns/op
Iteration   4: 18089.791 ns/op
Iteration   5: 18002.508 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  18267.661 ±(99.9%) 1047.161 ns/op [Average]
  (min, avg, max) = (18002.508, 18267.661, 18575.103), stdev = 271.944
  CI (99.9%): [17220.500, 19314.822] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 84.90% complete, ETA 00:14:50
# Fork: 1 of 1
# Warmup Iteration   1: 182057.078 ns/op
# Warmup Iteration   2: 27965.327 ns/op
# Warmup Iteration   3: 26780.523 ns/op
# Warmup Iteration   4: 23681.693 ns/op
Iteration   1: 23689.978 ns/op
Iteration   2: 23644.778 ns/op
Iteration   3: 23670.376 ns/op
Iteration   4: 23699.780 ns/op
Iteration   5: 23692.712 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  23679.525 ±(99.9%) 85.769 ns/op [Average]
  (min, avg, max) = (23644.778, 23679.525, 23699.780), stdev = 22.274
  CI (99.9%): [23593.755, 23765.294] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 85.10% complete, ETA 00:14:38
# Fork: 1 of 1
# Warmup Iteration   1: 354555.955 ns/op
# Warmup Iteration   2: 176999.787 ns/op
# Warmup Iteration   3: 160688.496 ns/op
# Warmup Iteration   4: 166234.206 ns/op
Iteration   1: 168899.620 ns/op
Iteration   2: 160749.127 ns/op
Iteration   3: 159273.176 ns/op
Iteration   4: 160749.010 ns/op
Iteration   5: 159805.375 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  161895.262 ±(99.9%) 15273.460 ns/op [Average]
  (min, avg, max) = (159273.176, 161895.262, 168899.620), stdev = 3966.469
  CI (99.9%): [146621.801, 177168.722] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 85.29% complete, ETA 00:14:27
# Fork: 1 of 1
# Warmup Iteration   1: 12882.724 ns/op
# Warmup Iteration   2: 2902.574 ns/op
# Warmup Iteration   3: 2756.382 ns/op
# Warmup Iteration   4: 2755.762 ns/op
Iteration   1: 2748.478 ns/op
Iteration   2: 2749.464 ns/op
Iteration   3: 2754.145 ns/op
Iteration   4: 2752.000 ns/op
Iteration   5: 2749.700 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2750.757 ±(99.9%) 8.824 ns/op [Average]
  (min, avg, max) = (2748.478, 2750.757, 2754.145), stdev = 2.291
  CI (99.9%): [2741.934, 2759.581] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 85.49% complete, ETA 00:14:15
# Fork: 1 of 1
# Warmup Iteration   1: 29789.759 ns/op
# Warmup Iteration   2: 5918.212 ns/op
# Warmup Iteration   3: 5017.816 ns/op
# Warmup Iteration   4: 5015.405 ns/op
Iteration   1: 5015.103 ns/op
Iteration   2: 5018.398 ns/op
Iteration   3: 5087.462 ns/op
Iteration   4: 5023.223 ns/op
Iteration   5: 5161.085 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5061.054 ±(99.9%) 244.036 ns/op [Average]
  (min, avg, max) = (5015.103, 5061.054, 5161.085), stdev = 63.375
  CI (99.9%): [4817.018, 5305.090] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 85.69% complete, ETA 00:14:04
# Fork: 1 of 1
# Warmup Iteration   1: 56551.974 ns/op
# Warmup Iteration   2: 10870.894 ns/op
# Warmup Iteration   3: 9439.779 ns/op
# Warmup Iteration   4: 9023.786 ns/op
Iteration   1: 9549.904 ns/op
Iteration   2: 9079.752 ns/op
Iteration   3: 9072.034 ns/op
Iteration   4: 9074.208 ns/op
Iteration   5: 9028.026 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9160.785 ±(99.9%) 841.383 ns/op [Average]
  (min, avg, max) = (9028.026, 9160.785, 9549.904), stdev = 218.505
  CI (99.9%): [8319.402, 10002.168] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 85.88% complete, ETA 00:13:52
# Fork: 1 of 1
# Warmup Iteration   1: 150418.690 ns/op
# Warmup Iteration   2: 20745.487 ns/op
# Warmup Iteration   3: 18490.691 ns/op
# Warmup Iteration   4: 17838.810 ns/op
Iteration   1: 18823.784 ns/op
Iteration   2: 17782.786 ns/op
Iteration   3: 17804.658 ns/op
Iteration   4: 17770.142 ns/op
Iteration   5: 17778.633 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  17992.001 ±(99.9%) 1791.148 ns/op [Average]
  (min, avg, max) = (17770.142, 17992.001, 18823.784), stdev = 465.155
  CI (99.9%): [16200.852, 19783.149] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 86.08% complete, ETA 00:13:40
# Fork: 1 of 1
# Warmup Iteration   1: 372412.719 ns/op
# Warmup Iteration   2: 161820.162 ns/op
# Warmup Iteration   3: 156494.939 ns/op
# Warmup Iteration   4: 158002.001 ns/op
Iteration   1: 155581.588 ns/op
Iteration   2: 159186.084 ns/op
Iteration   3: 155607.958 ns/op
Iteration   4: 155193.769 ns/op
Iteration   5: 155446.080 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  156203.096 ±(99.9%) 6452.124 ns/op [Average]
  (min, avg, max) = (155193.769, 156203.096, 159186.084), stdev = 1675.596
  CI (99.9%): [149750.971, 162655.220] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 86.27% complete, ETA 00:13:29
# Fork: 1 of 1
# Warmup Iteration   1: 8170.355 ns/op
# Warmup Iteration   2: 4781.462 ns/op
# Warmup Iteration   3: 4674.472 ns/op
# Warmup Iteration   4: 4684.500 ns/op
Iteration   1: 4681.209 ns/op
Iteration   2: 4685.931 ns/op
Iteration   3: 4694.005 ns/op
Iteration   4: 4687.972 ns/op
Iteration   5: 4680.964 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4686.016 ±(99.9%) 20.763 ns/op [Average]
  (min, avg, max) = (4680.964, 4686.016, 4694.005), stdev = 5.392
  CI (99.9%): [4665.253, 4706.779] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 86.47% complete, ETA 00:13:17
# Fork: 1 of 1
# Warmup Iteration   1: 21874.338 ns/op
# Warmup Iteration   2: 9445.341 ns/op
# Warmup Iteration   3: 9223.260 ns/op
# Warmup Iteration   4: 9206.551 ns/op
Iteration   1: 9206.970 ns/op
Iteration   2: 9206.407 ns/op
Iteration   3: 9227.687 ns/op
Iteration   4: 9239.013 ns/op
Iteration   5: 9224.962 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9221.008 ±(99.9%) 54.275 ns/op [Average]
  (min, avg, max) = (9206.407, 9221.008, 9239.013), stdev = 14.095
  CI (99.9%): [9166.733, 9275.283] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 86.67% complete, ETA 00:13:06
# Fork: 1 of 1
# Warmup Iteration   1: 66022.701 ns/op
# Warmup Iteration   2: 20541.132 ns/op
# Warmup Iteration   3: 19336.843 ns/op
# Warmup Iteration   4: 19194.946 ns/op
Iteration   1: 19168.118 ns/op
Iteration   2: 19189.446 ns/op
Iteration   3: 19169.041 ns/op
Iteration   4: 19380.072 ns/op
Iteration   5: 19517.696 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  19284.875 ±(99.9%) 607.086 ns/op [Average]
  (min, avg, max) = (19168.118, 19284.875, 19517.696), stdev = 157.658
  CI (99.9%): [18677.789, 19891.960] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 86.86% complete, ETA 00:12:54
# Fork: 1 of 1
# Warmup Iteration   1: 73250.205 ns/op
# Warmup Iteration   2: 41372.136 ns/op
# Warmup Iteration   3: 40053.035 ns/op
# Warmup Iteration   4: 39775.498 ns/op
Iteration   1: 39745.180 ns/op
Iteration   2: 39762.098 ns/op
Iteration   3: 39799.092 ns/op
Iteration   4: 40486.877 ns/op
Iteration   5: 39810.241 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  39920.698 ±(99.9%) 1223.008 ns/op [Average]
  (min, avg, max) = (39745.180, 39920.698, 40486.877), stdev = 317.611
  CI (99.9%): [38697.689, 41143.706] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 87.06% complete, ETA 00:12:43
# Fork: 1 of 1
# Warmup Iteration   1: 817844.877 ns/op
# Warmup Iteration   2: 399966.976 ns/op
# Warmup Iteration   3: 379296.788 ns/op
# Warmup Iteration   4: 378608.499 ns/op
Iteration   1: 378004.954 ns/op
Iteration   2: 379313.931 ns/op
Iteration   3: 378695.862 ns/op
Iteration   4: 378740.949 ns/op
Iteration   5: 378957.707 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  378742.681 ±(99.9%) 1845.700 ns/op [Average]
  (min, avg, max) = (378004.954, 378742.681, 379313.931), stdev = 479.322
  CI (99.9%): [376896.981, 380588.380] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 87.25% complete, ETA 00:12:31
# Fork: 1 of 1
# Warmup Iteration   1: 65096.566 ns/op
# Warmup Iteration   2: 30930.753 ns/op
# Warmup Iteration   3: 26125.617 ns/op
# Warmup Iteration   4: 26116.680 ns/op
Iteration   1: 26451.690 ns/op
Iteration   2: 26167.530 ns/op
Iteration   3: 25994.726 ns/op
Iteration   4: 26053.910 ns/op
Iteration   5: 26178.381 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  26169.248 ±(99.9%) 676.939 ns/op [Average]
  (min, avg, max) = (25994.726, 26169.248, 26451.690), stdev = 175.799
  CI (99.9%): [25492.309, 26846.186] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 87.45% complete, ETA 00:12:19
# Fork: 1 of 1
# Warmup Iteration   1: 129742.745 ns/op
# Warmup Iteration   2: 46284.003 ns/op
# Warmup Iteration   3: 38502.526 ns/op
# Warmup Iteration   4: 38317.651 ns/op
Iteration   1: 38736.973 ns/op
Iteration   2: 38350.444 ns/op
Iteration   3: 38323.243 ns/op
Iteration   4: 39937.572 ns/op
Iteration   5: 38569.894 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  38783.625 ±(99.9%) 2568.013 ns/op [Average]
  (min, avg, max) = (38323.243, 38783.625, 39937.572), stdev = 666.905
  CI (99.9%): [36215.612, 41351.639] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 87.65% complete, ETA 00:12:08
# Fork: 1 of 1
# Warmup Iteration   1: 122675.367 ns/op
# Warmup Iteration   2: 69479.444 ns/op
# Warmup Iteration   3: 63066.662 ns/op
# Warmup Iteration   4: 61806.937 ns/op
Iteration   1: 62075.522 ns/op
Iteration   2: 62436.400 ns/op
Iteration   3: 61284.042 ns/op
Iteration   4: 61096.753 ns/op
Iteration   5: 61229.031 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  61624.350 ±(99.9%) 2288.969 ns/op [Average]
  (min, avg, max) = (61096.753, 61624.350, 62436.400), stdev = 594.438
  CI (99.9%): [59335.381, 63913.319] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 87.84% complete, ETA 00:11:56
# Fork: 1 of 1
# Warmup Iteration   1: 302144.571 ns/op
# Warmup Iteration   2: 146277.141 ns/op
# Warmup Iteration   3: 119440.099 ns/op
# Warmup Iteration   4: 120318.322 ns/op
Iteration   1: 121766.205 ns/op
Iteration   2: 119894.240 ns/op
Iteration   3: 121520.866 ns/op
Iteration   4: 120127.231 ns/op
Iteration   5: 119996.603 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  120661.029 ±(99.9%) 3484.302 ns/op [Average]
  (min, avg, max) = (119894.240, 120661.029, 121766.205), stdev = 904.862
  CI (99.9%): [117176.727, 124145.331] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 88.04% complete, ETA 00:11:45
# Fork: 1 of 1
# Warmup Iteration   1: 1754256.463 ns/op
# Warmup Iteration   2: 1225840.986 ns/op
# Warmup Iteration   3: 987427.477 ns/op
# Warmup Iteration   4: 977056.496 ns/op
Iteration   1: 981407.786 ns/op
Iteration   2: 977442.205 ns/op
Iteration   3: 979772.974 ns/op
Iteration   4: 979293.776 ns/op
Iteration   5: 975106.220 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  978604.592 ±(99.9%) 9291.097 ns/op [Average]
  (min, avg, max) = (975106.220, 978604.592, 981407.786), stdev = 2412.868
  CI (99.9%): [969313.495, 987895.689] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 88.24% complete, ETA 00:11:33
# Fork: 1 of 1
# Warmup Iteration   1: 4235.029 ns/op
# Warmup Iteration   2: 2209.808 ns/op
# Warmup Iteration   3: 2181.169 ns/op
# Warmup Iteration   4: 2175.463 ns/op
Iteration   1: 2175.779 ns/op
Iteration   2: 2214.701 ns/op
Iteration   3: 2187.416 ns/op
Iteration   4: 2179.965 ns/op
Iteration   5: 2185.985 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2188.769 ±(99.9%) 58.661 ns/op [Average]
  (min, avg, max) = (2175.779, 2188.769, 2214.701), stdev = 15.234
  CI (99.9%): [2130.109, 2247.430] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 88.43% complete, ETA 00:11:22
# Fork: 1 of 1
# Warmup Iteration   1: 8941.630 ns/op
# Warmup Iteration   2: 4061.288 ns/op
# Warmup Iteration   3: 3883.705 ns/op
# Warmup Iteration   4: 3989.982 ns/op
Iteration   1: 3866.322 ns/op
Iteration   2: 3887.486 ns/op
Iteration   3: 3860.922 ns/op
Iteration   4: 3878.238 ns/op
Iteration   5: 3863.167 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3871.227 ±(99.9%) 43.426 ns/op [Average]
  (min, avg, max) = (3860.922, 3871.227, 3887.486), stdev = 11.278
  CI (99.9%): [3827.801, 3914.653] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 88.63% complete, ETA 00:11:10
# Fork: 1 of 1
# Warmup Iteration   1: 15437.616 ns/op
# Warmup Iteration   2: 6934.662 ns/op
# Warmup Iteration   3: 6784.736 ns/op
# Warmup Iteration   4: 6880.702 ns/op
Iteration   1: 6908.959 ns/op
Iteration   2: 6816.936 ns/op
Iteration   3: 6836.690 ns/op
Iteration   4: 6818.222 ns/op
Iteration   5: 6860.507 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6848.263 ±(99.9%) 147.280 ns/op [Average]
  (min, avg, max) = (6816.936, 6848.263, 6908.959), stdev = 38.248
  CI (99.9%): [6700.983, 6995.542] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 88.82% complete, ETA 00:10:58
# Fork: 1 of 1
# Warmup Iteration   1: 30956.901 ns/op
# Warmup Iteration   2: 13314.030 ns/op
# Warmup Iteration   3: 13104.110 ns/op
# Warmup Iteration   4: 12661.611 ns/op
Iteration   1: 12581.779 ns/op
Iteration   2: 12616.126 ns/op
Iteration   3: 12601.239 ns/op
Iteration   4: 12602.908 ns/op
Iteration   5: 12633.995 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  12607.210 ±(99.9%) 74.513 ns/op [Average]
  (min, avg, max) = (12581.779, 12607.210, 12633.995), stdev = 19.351
  CI (99.9%): [12532.696, 12681.723] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 89.02% complete, ETA 00:10:47
# Fork: 1 of 1
# Warmup Iteration   1: 237138.887 ns/op
# Warmup Iteration   2: 121010.580 ns/op
# Warmup Iteration   3: 114915.951 ns/op
# Warmup Iteration   4: 115084.051 ns/op
Iteration   1: 115101.746 ns/op
Iteration   2: 114901.512 ns/op
Iteration   3: 126870.548 ns/op
Iteration   4: 114751.574 ns/op
Iteration   5: 115010.551 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  117327.186 ±(99.9%) 20548.951 ns/op [Average]
  (min, avg, max) = (114751.574, 117327.186, 126870.548), stdev = 5336.497
  CI (99.9%): [96778.236, 137876.137] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 89.22% complete, ETA 00:10:35
# Fork: 1 of 1
# Warmup Iteration   1: 10274.524 ns/op
# Warmup Iteration   2: 5776.582 ns/op
# Warmup Iteration   3: 5882.073 ns/op
# Warmup Iteration   4: 5748.324 ns/op
Iteration   1: 5919.029 ns/op
Iteration   2: 6073.143 ns/op
Iteration   3: 6067.760 ns/op
Iteration   4: 6033.166 ns/op
Iteration   5: 6032.877 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6025.195 ±(99.9%) 239.735 ns/op [Average]
  (min, avg, max) = (5919.029, 6025.195, 6073.143), stdev = 62.258
  CI (99.9%): [5785.460, 6264.930] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 89.41% complete, ETA 00:10:24
# Fork: 1 of 1
# Warmup Iteration   1: 13045.810 ns/op
# Warmup Iteration   2: 8373.724 ns/op
# Warmup Iteration   3: 8571.520 ns/op
# Warmup Iteration   4: 9663.105 ns/op
Iteration   1: 10034.896 ns/op
Iteration   2: 10051.173 ns/op
Iteration   3: 9982.225 ns/op
Iteration   4: 10029.412 ns/op
Iteration   5: 10007.918 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  10021.125 ±(99.9%) 102.763 ns/op [Average]
  (min, avg, max) = (9982.225, 10021.125, 10051.173), stdev = 26.687
  CI (99.9%): [9918.362, 10123.888] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 89.61% complete, ETA 00:10:12
# Fork: 1 of 1
# Warmup Iteration   1: 25818.362 ns/op
# Warmup Iteration   2: 17340.483 ns/op
# Warmup Iteration   3: 17289.296 ns/op
# Warmup Iteration   4: 17370.378 ns/op
Iteration   1: 17725.243 ns/op
Iteration   2: 19078.543 ns/op
Iteration   3: 17808.694 ns/op
Iteration   4: 17750.965 ns/op
Iteration   5: 17802.886 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  18033.266 ±(99.9%) 2254.093 ns/op [Average]
  (min, avg, max) = (17725.243, 18033.266, 19078.543), stdev = 585.381
  CI (99.9%): [15779.173, 20287.359] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 89.80% complete, ETA 00:10:01
# Fork: 1 of 1
# Warmup Iteration   1: 55966.017 ns/op
# Warmup Iteration   2: 32855.109 ns/op
# Warmup Iteration   3: 32871.164 ns/op
# Warmup Iteration   4: 32789.444 ns/op
Iteration   1: 32642.475 ns/op
Iteration   2: 33985.681 ns/op
Iteration   3: 33957.907 ns/op
Iteration   4: 33870.530 ns/op
Iteration   5: 33918.158 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  33674.950 ±(99.9%) 2228.742 ns/op [Average]
  (min, avg, max) = (32642.475, 33674.950, 33985.681), stdev = 578.797
  CI (99.9%): [31446.208, 35903.692] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 90.00% complete, ETA 00:09:49
# Fork: 1 of 1
# Warmup Iteration   1: 819678.097 ns/op
# Warmup Iteration   2: 587914.622 ns/op
# Warmup Iteration   3: 562996.620 ns/op
# Warmup Iteration   4: 564036.552 ns/op
Iteration   1: 565417.665 ns/op
Iteration   2: 565215.891 ns/op
Iteration   3: 564714.302 ns/op
Iteration   4: 569408.863 ns/op
Iteration   5: 563638.476 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  565679.039 ±(99.9%) 8455.874 ns/op [Average]
  (min, avg, max) = (563638.476, 565679.039, 569408.863), stdev = 2195.964
  CI (99.9%): [557223.165, 574134.914] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _1_K)

# Run progress: 90.20% complete, ETA 00:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 6034.152 ns/op
# Warmup Iteration   2: 2592.531 ns/op
# Warmup Iteration   3: 2304.559 ns/op
# Warmup Iteration   4: 2242.841 ns/op
Iteration   1: 2253.633 ns/op
Iteration   2: 2244.911 ns/op
Iteration   3: 2242.873 ns/op
Iteration   4: 2386.151 ns/op
Iteration   5: 2224.593 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2270.432 ±(99.9%) 252.395 ns/op [Average]
  (min, avg, max) = (2224.593, 2270.432, 2386.151), stdev = 65.546
  CI (99.9%): [2018.037, 2522.828] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _2_K)

# Run progress: 90.39% complete, ETA 00:09:26
# Fork: 1 of 1
# Warmup Iteration   1: 10493.161 ns/op
# Warmup Iteration   2: 5128.461 ns/op
# Warmup Iteration   3: 4635.458 ns/op
# Warmup Iteration   4: 4479.745 ns/op
Iteration   1: 4552.619 ns/op
Iteration   2: 4468.783 ns/op
Iteration   3: 4493.424 ns/op
Iteration   4: 4478.724 ns/op
Iteration   5: 4712.488 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4541.207 ±(99.9%) 389.372 ns/op [Average]
  (min, avg, max) = (4468.783, 4541.207, 4712.488), stdev = 101.119
  CI (99.9%): [4151.835, 4930.580] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _4_K)

# Run progress: 90.59% complete, ETA 00:09:14
# Fork: 1 of 1
# Warmup Iteration   1: 19400.731 ns/op
# Warmup Iteration   2: 8415.058 ns/op
# Warmup Iteration   3: 8042.078 ns/op
# Warmup Iteration   4: 8016.486 ns/op
Iteration   1: 8031.241 ns/op
Iteration   2: 8038.141 ns/op
Iteration   3: 8024.444 ns/op
Iteration   4: 8014.970 ns/op
Iteration   5: 8000.149 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8021.789 ±(99.9%) 57.068 ns/op [Average]
  (min, avg, max) = (8000.149, 8021.789, 8038.141), stdev = 14.820
  CI (99.9%): [7964.721, 8078.857] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _8_K)

# Run progress: 90.78% complete, ETA 00:09:03
# Fork: 1 of 1
# Warmup Iteration   1: 36520.015 ns/op
# Warmup Iteration   2: 18695.455 ns/op
# Warmup Iteration   3: 19984.266 ns/op
# Warmup Iteration   4: 20511.761 ns/op
Iteration   1: 20329.796 ns/op
Iteration   2: 20220.898 ns/op
Iteration   3: 20533.340 ns/op
Iteration   4: 20467.861 ns/op
Iteration   5: 20446.625 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  20399.704 ±(99.9%) 477.714 ns/op [Average]
  (min, avg, max) = (20220.898, 20399.704, 20533.340), stdev = 124.061
  CI (99.9%): [19921.990, 20877.418] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSONITER, inputType = _64_K)

# Run progress: 90.98% complete, ETA 00:08:51
# Fork: 1 of 1
# Warmup Iteration   1: 360091.388 ns/op
# Warmup Iteration   2: 145050.499 ns/op
# Warmup Iteration   3: 138882.023 ns/op
# Warmup Iteration   4: 127425.577 ns/op
Iteration   1: 129038.787 ns/op
Iteration   2: 127832.068 ns/op
Iteration   3: 127229.222 ns/op
Iteration   4: 131301.117 ns/op
Iteration   5: 127175.476 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  128515.334 ±(99.9%) 6655.810 ns/op [Average]
  (min, avg, max) = (127175.476, 128515.334, 131301.117), stdev = 1728.493
  CI (99.9%): [121859.524, 135171.143] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 91.18% complete, ETA 00:08:40
# Fork: 1 of 1
# Warmup Iteration   1: 34258.837 ns/op
# Warmup Iteration   2: 18242.572 ns/op
# Warmup Iteration   3: 16863.381 ns/op
# Warmup Iteration   4: 16696.331 ns/op
Iteration   1: 16776.470 ns/op
Iteration   2: 16702.189 ns/op
Iteration   3: 16764.464 ns/op
Iteration   4: 17286.182 ns/op
Iteration   5: 16788.225 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16863.506 ±(99.9%) 918.785 ns/op [Average]
  (min, avg, max) = (16702.189, 16863.506, 17286.182), stdev = 238.605
  CI (99.9%): [15944.722, 17782.291] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 91.37% complete, ETA 00:08:28
# Fork: 1 of 1
# Warmup Iteration   1: 64992.795 ns/op
# Warmup Iteration   2: 34906.375 ns/op
# Warmup Iteration   3: 31755.805 ns/op
# Warmup Iteration   4: 32764.360 ns/op
Iteration   1: 32131.025 ns/op
Iteration   2: 31797.473 ns/op
Iteration   3: 31661.309 ns/op
Iteration   4: 31718.911 ns/op
Iteration   5: 31780.849 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  31817.913 ±(99.9%) 705.195 ns/op [Average]
  (min, avg, max) = (31661.309, 31817.913, 32131.025), stdev = 183.137
  CI (99.9%): [31112.718, 32523.108] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 91.57% complete, ETA 00:08:17
# Fork: 1 of 1
# Warmup Iteration   1: 154019.112 ns/op
# Warmup Iteration   2: 74881.045 ns/op
# Warmup Iteration   3: 70904.122 ns/op
# Warmup Iteration   4: 71647.181 ns/op
Iteration   1: 73233.524 ns/op
Iteration   2: 70931.634 ns/op
Iteration   3: 70666.736 ns/op
Iteration   4: 71063.759 ns/op
Iteration   5: 70813.744 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  71341.879 ±(99.9%) 4110.784 ns/op [Average]
  (min, avg, max) = (70666.736, 71341.879, 73233.524), stdev = 1067.558
  CI (99.9%): [67231.095, 75452.663] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 91.76% complete, ETA 00:08:05
# Fork: 1 of 1
# Warmup Iteration   1: 338531.548 ns/op
# Warmup Iteration   2: 163138.717 ns/op
# Warmup Iteration   3: 177966.399 ns/op
# Warmup Iteration   4: 161708.899 ns/op
Iteration   1: 159718.911 ns/op
Iteration   2: 157096.631 ns/op
Iteration   3: 160768.013 ns/op
Iteration   4: 156042.309 ns/op
Iteration   5: 157008.720 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  158126.917 ±(99.9%) 7741.441 ns/op [Average]
  (min, avg, max) = (156042.309, 158126.917, 160768.013), stdev = 2010.428
  CI (99.9%): [150385.476, 165868.357] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 91.96% complete, ETA 00:07:54
# Fork: 1 of 1
# Warmup Iteration   1: 2805772.448 ns/op
# Warmup Iteration   2: 1462513.680 ns/op
# Warmup Iteration   3: 1455805.074 ns/op
# Warmup Iteration   4: 1401979.858 ns/op
Iteration   1: 1396858.588 ns/op
Iteration   2: 1397663.661 ns/op
Iteration   3: 1372744.830 ns/op
Iteration   4: 1401962.201 ns/op
Iteration   5: 1406123.541 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1395070.564 ±(99.9%) 50133.200 ns/op [Average]
  (min, avg, max) = (1372744.830, 1395070.564, 1406123.541), stdev = 13019.433
  CI (99.9%): [1344937.364, 1445203.764] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _1_K)

# Run progress: 92.16% complete, ETA 00:07:42
# Fork: 1 of 1
# Warmup Iteration   1: 17309.006 ns/op
# Warmup Iteration   2: 9286.176 ns/op
# Warmup Iteration   3: 8853.737 ns/op
# Warmup Iteration   4: 8830.129 ns/op
Iteration   1: 8645.971 ns/op
Iteration   2: 8662.974 ns/op
Iteration   3: 8628.332 ns/op
Iteration   4: 8641.628 ns/op
Iteration   5: 8653.415 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8646.464 ±(99.9%) 49.958 ns/op [Average]
  (min, avg, max) = (8628.332, 8646.464, 8662.974), stdev = 12.974
  CI (99.9%): [8596.506, 8696.423] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _2_K)

# Run progress: 92.35% complete, ETA 00:07:30
# Fork: 1 of 1
# Warmup Iteration   1: 28166.222 ns/op
# Warmup Iteration   2: 19262.541 ns/op
# Warmup Iteration   3: 19266.043 ns/op
# Warmup Iteration   4: 18748.721 ns/op
Iteration   1: 18987.417 ns/op
Iteration   2: 18618.125 ns/op
Iteration   3: 18774.417 ns/op
Iteration   4: 18670.937 ns/op
Iteration   5: 18732.973 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  18756.774 ±(99.9%) 546.823 ns/op [Average]
  (min, avg, max) = (18618.125, 18756.774, 18987.417), stdev = 142.008
  CI (99.9%): [18209.951, 19303.597] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _4_K)

# Run progress: 92.55% complete, ETA 00:07:19
# Fork: 1 of 1
# Warmup Iteration   1: 70381.272 ns/op
# Warmup Iteration   2: 38793.122 ns/op
# Warmup Iteration   3: 38442.514 ns/op
# Warmup Iteration   4: 38354.536 ns/op
Iteration   1: 38232.226 ns/op
Iteration   2: 38426.891 ns/op
Iteration   3: 38286.760 ns/op
Iteration   4: 38370.386 ns/op
Iteration   5: 38295.479 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  38322.348 ±(99.9%) 294.187 ns/op [Average]
  (min, avg, max) = (38232.226, 38322.348, 38426.891), stdev = 76.399
  CI (99.9%): [38028.161, 38616.535] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _8_K)

# Run progress: 92.75% complete, ETA 00:07:07
# Fork: 1 of 1
# Warmup Iteration   1: 132391.726 ns/op
# Warmup Iteration   2: 81720.892 ns/op
# Warmup Iteration   3: 79653.451 ns/op
# Warmup Iteration   4: 79558.398 ns/op
Iteration   1: 79813.282 ns/op
Iteration   2: 79585.986 ns/op
Iteration   3: 84511.898 ns/op
Iteration   4: 79664.703 ns/op
Iteration   5: 79304.682 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  80576.110 ±(99.9%) 8501.963 ns/op [Average]
  (min, avg, max) = (79304.682, 80576.110, 84511.898), stdev = 2207.933
  CI (99.9%): [72074.147, 89078.073] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_JSON, inputType = _64_K)

# Run progress: 92.94% complete, ETA 00:06:56
# Fork: 1 of 1
# Warmup Iteration   1: 1030456.947 ns/op
# Warmup Iteration   2: 677193.476 ns/op
# Warmup Iteration   3: 659170.436 ns/op
# Warmup Iteration   4: 649244.686 ns/op
Iteration   1: 651138.576 ns/op
Iteration   2: 654542.037 ns/op
Iteration   3: 650260.201 ns/op
Iteration   4: 649687.103 ns/op
Iteration   5: 683711.242 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  657867.832 ±(99.9%) 56100.128 ns/op [Average]
  (min, avg, max) = (649687.103, 657867.832, 683711.242), stdev = 14569.025
  CI (99.9%): [601767.704, 713967.960] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _1_K)

# Run progress: 93.14% complete, ETA 00:06:44
# Fork: 1 of 1
# Warmup Iteration   1: 14374.828 ns/op
# Warmup Iteration   2: 9327.899 ns/op
# Warmup Iteration   3: 9521.368 ns/op
# Warmup Iteration   4: 8636.713 ns/op
Iteration   1: 8657.065 ns/op
Iteration   2: 8685.459 ns/op
Iteration   3: 8653.813 ns/op
Iteration   4: 8689.230 ns/op
Iteration   5: 8646.723 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8666.458 ±(99.9%) 74.993 ns/op [Average]
  (min, avg, max) = (8646.723, 8666.458, 8689.230), stdev = 19.475
  CI (99.9%): [8591.465, 8741.451] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _2_K)

# Run progress: 93.33% complete, ETA 00:06:33
# Fork: 1 of 1
# Warmup Iteration   1: 34265.857 ns/op
# Warmup Iteration   2: 17191.149 ns/op
# Warmup Iteration   3: 16221.836 ns/op
# Warmup Iteration   4: 15130.419 ns/op
Iteration   1: 15215.814 ns/op
Iteration   2: 15202.661 ns/op
Iteration   3: 15136.040 ns/op
Iteration   4: 15215.678 ns/op
Iteration   5: 16017.645 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15357.568 ±(99.9%) 1426.557 ns/op [Average]
  (min, avg, max) = (15136.040, 15357.568, 16017.645), stdev = 370.472
  CI (99.9%): [13931.010, 16784.125] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _4_K)

# Run progress: 93.53% complete, ETA 00:06:21
# Fork: 1 of 1
# Warmup Iteration   1: 75289.342 ns/op
# Warmup Iteration   2: 33784.293 ns/op
# Warmup Iteration   3: 35319.547 ns/op
# Warmup Iteration   4: 38028.355 ns/op
Iteration   1: 39495.454 ns/op
Iteration   2: 39492.003 ns/op
Iteration   3: 39551.908 ns/op
Iteration   4: 39109.348 ns/op
Iteration   5: 38859.435 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  39301.630 ±(99.9%) 1169.476 ns/op [Average]
  (min, avg, max) = (38859.435, 39301.630, 39551.908), stdev = 303.709
  CI (99.9%): [38132.153, 40471.106] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _8_K)

# Run progress: 93.73% complete, ETA 00:06:10
# Fork: 1 of 1
# Warmup Iteration   1: 137715.148 ns/op
# Warmup Iteration   2: 70476.348 ns/op
# Warmup Iteration   3: 69034.511 ns/op
# Warmup Iteration   4: 68628.896 ns/op
Iteration   1: 70090.243 ns/op
Iteration   2: 70622.113 ns/op
Iteration   3: 68688.776 ns/op
Iteration   4: 68828.783 ns/op
Iteration   5: 68939.135 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  69433.810 ±(99.9%) 3339.646 ns/op [Average]
  (min, avg, max) = (68688.776, 69433.810, 70622.113), stdev = 867.295
  CI (99.9%): [66094.164, 72773.455] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_POOLED_JSON, inputType = _64_K)

# Run progress: 93.92% complete, ETA 00:05:58
# Fork: 1 of 1
# Warmup Iteration   1: 831787.463 ns/op
# Warmup Iteration   2: 534340.603 ns/op
# Warmup Iteration   3: 528384.672 ns/op
# Warmup Iteration   4: 511107.358 ns/op
Iteration   1: 523365.727 ns/op
Iteration   2: 509362.908 ns/op
Iteration   3: 510229.641 ns/op
Iteration   4: 509443.795 ns/op
Iteration   5: 506935.719 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  511867.558 ±(99.9%) 25203.458 ns/op [Average]
  (min, avg, max) = (506935.719, 511867.558, 523365.727), stdev = 6545.258
  CI (99.9%): [486664.100, 537071.016] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _1_K)

# Run progress: 94.12% complete, ETA 00:05:46
# Fork: 1 of 1
# Warmup Iteration   1: 5746.588 ns/op
# Warmup Iteration   2: 3366.427 ns/op
# Warmup Iteration   3: 3356.457 ns/op
# Warmup Iteration   4: 3407.143 ns/op
Iteration   1: 3493.056 ns/op
Iteration   2: 3373.139 ns/op
Iteration   3: 3362.816 ns/op
Iteration   4: 3374.621 ns/op
Iteration   5: 3378.533 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3396.433 ±(99.9%) 209.186 ns/op [Average]
  (min, avg, max) = (3362.816, 3396.433, 3493.056), stdev = 54.325
  CI (99.9%): [3187.247, 3605.619] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _2_K)

# Run progress: 94.31% complete, ETA 00:05:35
# Fork: 1 of 1
# Warmup Iteration   1: 11772.213 ns/op
# Warmup Iteration   2: 6296.158 ns/op
# Warmup Iteration   3: 6271.103 ns/op
# Warmup Iteration   4: 6269.188 ns/op
Iteration   1: 6257.118 ns/op
Iteration   2: 6256.628 ns/op
Iteration   3: 6266.307 ns/op
Iteration   4: 6252.634 ns/op
Iteration   5: 6278.274 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6262.192 ±(99.9%) 39.628 ns/op [Average]
  (min, avg, max) = (6252.634, 6262.192, 6278.274), stdev = 10.291
  CI (99.9%): [6222.565, 6301.820] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _4_K)

# Run progress: 94.51% complete, ETA 00:05:23
# Fork: 1 of 1
# Warmup Iteration   1: 35547.329 ns/op
# Warmup Iteration   2: 15136.917 ns/op
# Warmup Iteration   3: 15470.127 ns/op
# Warmup Iteration   4: 14917.522 ns/op
Iteration   1: 14977.289 ns/op
Iteration   2: 14921.631 ns/op
Iteration   3: 14978.124 ns/op
Iteration   4: 14971.924 ns/op
Iteration   5: 15018.078 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  14973.409 ±(99.9%) 132.214 ns/op [Average]
  (min, avg, max) = (14921.631, 14973.409, 15018.078), stdev = 34.336
  CI (99.9%): [14841.195, 15105.623] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _8_K)

# Run progress: 94.71% complete, ETA 00:05:12
# Fork: 1 of 1
# Warmup Iteration   1: 94526.534 ns/op
# Warmup Iteration   2: 35836.722 ns/op
# Warmup Iteration   3: 33384.776 ns/op
# Warmup Iteration   4: 32457.732 ns/op
Iteration   1: 34413.301 ns/op
Iteration   2: 32041.207 ns/op
Iteration   3: 31852.938 ns/op
Iteration   4: 35337.972 ns/op
Iteration   5: 33115.194 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  33352.122 ±(99.9%) 5805.377 ns/op [Average]
  (min, avg, max) = (31852.938, 33352.122, 35337.972), stdev = 1507.638
  CI (99.9%): [27546.746, 39157.499] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = UPICKLE_MSGPACK, inputType = _64_K)

# Run progress: 94.90% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 480299.323 ns/op
# Warmup Iteration   2: 298473.989 ns/op
# Warmup Iteration   3: 284561.961 ns/op
# Warmup Iteration   4: 282233.283 ns/op
Iteration   1: 284195.479 ns/op
Iteration   2: 274392.951 ns/op
Iteration   3: 274721.414 ns/op
Iteration   4: 282430.105 ns/op
Iteration   5: 275057.257 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  278159.441 ±(99.9%) 18295.862 ns/op [Average]
  (min, avg, max) = (274392.951, 278159.441, 284195.479), stdev = 4751.377
  CI (99.9%): [259863.579, 296455.303] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _1_K)

# Run progress: 95.10% complete, ETA 00:04:49
# Fork: 1 of 1
# Warmup Iteration   1: 23328.325 ns/op
# Warmup Iteration   2: 9074.127 ns/op
# Warmup Iteration   3: 8973.582 ns/op
# Warmup Iteration   4: 8967.982 ns/op
Iteration   1: 9269.054 ns/op
Iteration   2: 8956.596 ns/op
Iteration   3: 8958.960 ns/op
Iteration   4: 8954.465 ns/op
Iteration   5: 8980.129 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9023.841 ±(99.9%) 529.323 ns/op [Average]
  (min, avg, max) = (8954.465, 9023.841, 9269.054), stdev = 137.463
  CI (99.9%): [8494.518, 9553.164] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _2_K)

# Run progress: 95.29% complete, ETA 00:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 62787.621 ns/op
# Warmup Iteration   2: 17271.751 ns/op
# Warmup Iteration   3: 17063.353 ns/op
# Warmup Iteration   4: 16925.106 ns/op
Iteration   1: 17697.448 ns/op
Iteration   2: 16516.468 ns/op
Iteration   3: 16314.865 ns/op
Iteration   4: 16218.276 ns/op
Iteration   5: 16256.327 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16600.677 ±(99.9%) 2402.022 ns/op [Average]
  (min, avg, max) = (16218.276, 16600.677, 17697.448), stdev = 623.798
  CI (99.9%): [14198.655, 19002.699] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _4_K)

# Run progress: 95.49% complete, ETA 00:04:25
# Fork: 1 of 1
# Warmup Iteration   1: 70033.687 ns/op
# Warmup Iteration   2: 30534.131 ns/op
# Warmup Iteration   3: 29191.622 ns/op
# Warmup Iteration   4: 29016.864 ns/op
Iteration   1: 29053.580 ns/op
Iteration   2: 29088.340 ns/op
Iteration   3: 29068.896 ns/op
Iteration   4: 29043.656 ns/op
Iteration   5: 29057.258 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  29062.346 ±(99.9%) 65.874 ns/op [Average]
  (min, avg, max) = (29043.656, 29062.346, 29088.340), stdev = 17.107
  CI (99.9%): [28996.472, 29128.219] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _8_K)

# Run progress: 95.69% complete, ETA 00:04:14
# Fork: 1 of 1
# Warmup Iteration   1: 139742.908 ns/op
# Warmup Iteration   2: 60677.965 ns/op
# Warmup Iteration   3: 56733.891 ns/op
# Warmup Iteration   4: 56707.126 ns/op
Iteration   1: 56713.199 ns/op
Iteration   2: 56745.617 ns/op
Iteration   3: 57935.085 ns/op
Iteration   4: 56738.970 ns/op
Iteration   5: 56555.060 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  56937.586 ±(99.9%) 2168.003 ns/op [Average]
  (min, avg, max) = (56555.060, 56937.586, 57935.085), stdev = 563.023
  CI (99.9%): [54769.584, 59105.589] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO, inputType = _64_K)

# Run progress: 95.88% complete, ETA 00:04:02
# Fork: 1 of 1
# Warmup Iteration   1: 1096426.396 ns/op
# Warmup Iteration   2: 572681.154 ns/op
# Warmup Iteration   3: 567012.457 ns/op
# Warmup Iteration   4: 545761.404 ns/op
Iteration   1: 544884.186 ns/op
Iteration   2: 547612.421 ns/op
Iteration   3: 545849.479 ns/op
Iteration   4: 546245.787 ns/op
Iteration   5: 546116.859 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  546141.746 ±(99.9%) 3773.437 ns/op [Average]
  (min, avg, max) = (544884.186, 546141.746, 547612.421), stdev = 979.950
  CI (99.9%): [542368.309, 549915.183] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _1_K)

# Run progress: 96.08% complete, ETA 00:03:51
# Fork: 1 of 1
# Warmup Iteration   1: 24962.792 ns/op
# Warmup Iteration   2: 9115.754 ns/op
# Warmup Iteration   3: 8832.393 ns/op
# Warmup Iteration   4: 8821.519 ns/op
Iteration   1: 8833.973 ns/op
Iteration   2: 9171.306 ns/op
Iteration   3: 8833.676 ns/op
Iteration   4: 9321.311 ns/op
Iteration   5: 8844.510 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9000.955 ±(99.9%) 886.459 ns/op [Average]
  (min, avg, max) = (8833.676, 9000.955, 9321.311), stdev = 230.211
  CI (99.9%): [8114.496, 9887.414] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _2_K)

# Run progress: 96.27% complete, ETA 00:03:39
# Fork: 1 of 1
# Warmup Iteration   1: 39768.097 ns/op
# Warmup Iteration   2: 17044.547 ns/op
# Warmup Iteration   3: 16120.560 ns/op
# Warmup Iteration   4: 16033.193 ns/op
Iteration   1: 16050.183 ns/op
Iteration   2: 16070.824 ns/op
Iteration   3: 16012.511 ns/op
Iteration   4: 17260.043 ns/op
Iteration   5: 16813.829 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16441.478 ±(99.9%) 2180.976 ns/op [Average]
  (min, avg, max) = (16012.511, 16441.478, 17260.043), stdev = 566.393
  CI (99.9%): [14260.501, 18622.454] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _4_K)

# Run progress: 96.47% complete, ETA 00:03:28
# Fork: 1 of 1
# Warmup Iteration   1: 55641.870 ns/op
# Warmup Iteration   2: 30657.774 ns/op
# Warmup Iteration   3: 28505.607 ns/op
# Warmup Iteration   4: 28381.387 ns/op
Iteration   1: 28410.936 ns/op
Iteration   2: 28425.112 ns/op
Iteration   3: 28410.610 ns/op
Iteration   4: 28398.065 ns/op
Iteration   5: 28407.987 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  28410.542 ±(99.9%) 37.267 ns/op [Average]
  (min, avg, max) = (28398.065, 28410.542, 28425.112), stdev = 9.678
  CI (99.9%): [28373.275, 28447.809] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _8_K)

# Run progress: 96.67% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: 138116.787 ns/op
# Warmup Iteration   2: 58017.153 ns/op
# Warmup Iteration   3: 56528.887 ns/op
# Warmup Iteration   4: 56216.815 ns/op
Iteration   1: 56034.065 ns/op
Iteration   2: 57651.495 ns/op
Iteration   3: 55992.388 ns/op
Iteration   4: 57697.091 ns/op
Iteration   5: 59043.477 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  57283.703 ±(99.9%) 4958.238 ns/op [Average]
  (min, avg, max) = (55992.388, 57283.703, 59043.477), stdev = 1287.639
  CI (99.9%): [52325.465, 62241.941] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CAP_N_PROTO_POOLED, inputType = _64_K)

# Run progress: 96.86% complete, ETA 00:03:05
# Fork: 1 of 1
# Warmup Iteration   1: 924795.567 ns/op
# Warmup Iteration   2: 593221.389 ns/op
# Warmup Iteration   3: 533183.469 ns/op
# Warmup Iteration   4: 529526.625 ns/op
Iteration   1: 528341.507 ns/op
Iteration   2: 527566.848 ns/op
Iteration   3: 528531.561 ns/op
Iteration   4: 527439.642 ns/op
Iteration   5: 528809.201 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  528137.752 ±(99.9%) 2326.960 ns/op [Average]
  (min, avg, max) = (527439.642, 528137.752, 528809.201), stdev = 604.304
  CI (99.9%): [525810.792, 530464.712] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 97.06% complete, ETA 00:02:53
# Fork: 1 of 1
# Warmup Iteration   1: 9779.452 ns/op
# Warmup Iteration   2: 4850.218 ns/op
# Warmup Iteration   3: 4482.457 ns/op
# Warmup Iteration   4: 4655.210 ns/op
Iteration   1: 4505.008 ns/op
Iteration   2: 4506.237 ns/op
Iteration   3: 4511.161 ns/op
Iteration   4: 4484.934 ns/op
Iteration   5: 4494.195 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both":
  4500.307 ±(99.9%) 40.786 ns/op [Average]
  (min, avg, max) = (4484.934, 4500.307, 4511.161), stdev = 10.592
  CI (99.9%): [4459.521, 4541.093] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 97.25% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: 30767.421 ns/op
# Warmup Iteration   2: 9518.005 ns/op
# Warmup Iteration   3: 9041.896 ns/op
# Warmup Iteration   4: 9188.390 ns/op
Iteration   1: 9091.941 ns/op
Iteration   2: 9087.823 ns/op
Iteration   3: 9055.498 ns/op
Iteration   4: 9064.363 ns/op
Iteration   5: 9084.295 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both":
  9076.784 ±(99.9%) 61.350 ns/op [Average]
  (min, avg, max) = (9055.498, 9076.784, 9091.941), stdev = 15.933
  CI (99.9%): [9015.433, 9138.134] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 97.45% complete, ETA 00:02:30
# Fork: 1 of 1
# Warmup Iteration   1: 45038.965 ns/op
# Warmup Iteration   2: 16169.862 ns/op
# Warmup Iteration   3: 16036.316 ns/op
# Warmup Iteration   4: 15441.737 ns/op
Iteration   1: 15440.269 ns/op
Iteration   2: 15460.510 ns/op
Iteration   3: 15387.202 ns/op
Iteration   4: 15481.075 ns/op
Iteration   5: 15490.102 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both":
  15451.832 ±(99.9%) 157.662 ns/op [Average]
  (min, avg, max) = (15387.202, 15451.832, 15490.102), stdev = 40.944
  CI (99.9%): [15294.170, 15609.494] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 97.65% complete, ETA 00:02:18
# Fork: 1 of 1
# Warmup Iteration   1: 164153.999 ns/op
# Warmup Iteration   2: 26864.947 ns/op
# Warmup Iteration   3: 24943.594 ns/op
# Warmup Iteration   4: 24640.452 ns/op
Iteration   1: 24641.242 ns/op
Iteration   2: 25088.118 ns/op
Iteration   3: 24657.004 ns/op
Iteration   4: 24712.774 ns/op
Iteration   5: 24643.673 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both":
  24748.562 ±(99.9%) 739.386 ns/op [Average]
  (min, avg, max) = (24641.242, 24748.562, 25088.118), stdev = 192.016
  CI (99.9%): [24009.177, 25487.948] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 97.84% complete, ETA 00:02:07
# Fork: 1 of 1
# Warmup Iteration   1: 566047.999 ns/op
# Warmup Iteration   2: 206776.877 ns/op
# Warmup Iteration   3: 181808.710 ns/op
# Warmup Iteration   4: 181801.771 ns/op
Iteration   1: 196373.490 ns/op
Iteration   2: 188537.195 ns/op
Iteration   3: 191619.816 ns/op
Iteration   4: 182779.779 ns/op
Iteration   5: 181987.511 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.both":
  188259.558 ±(99.9%) 23309.190 ns/op [Average]
  (min, avg, max) = (181987.511, 188259.558, 196373.490), stdev = 6053.323
  CI (99.9%): [164950.368, 211568.748] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 98.04% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 4008.162 ns/op
# Warmup Iteration   2: 2097.197 ns/op
# Warmup Iteration   3: 2027.470 ns/op
# Warmup Iteration   4: 2026.841 ns/op
Iteration   1: 2028.874 ns/op
Iteration   2: 2030.807 ns/op
Iteration   3: 2031.644 ns/op
Iteration   4: 2029.831 ns/op
Iteration   5: 2031.969 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization":
  2030.625 ±(99.9%) 4.936 ns/op [Average]
  (min, avg, max) = (2028.874, 2030.625, 2031.969), stdev = 1.282
  CI (99.9%): [2025.689, 2035.562] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 98.24% complete, ETA 00:01:43
# Fork: 1 of 1
# Warmup Iteration   1: 7797.590 ns/op
# Warmup Iteration   2: 4450.828 ns/op
# Warmup Iteration   3: 3913.313 ns/op
# Warmup Iteration   4: 4035.617 ns/op
Iteration   1: 4055.957 ns/op
Iteration   2: 3929.209 ns/op
Iteration   3: 3925.236 ns/op
Iteration   4: 3932.581 ns/op
Iteration   5: 3916.582 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization":
  3951.913 ±(99.9%) 225.141 ns/op [Average]
  (min, avg, max) = (3916.582, 3951.913, 4055.957), stdev = 58.468
  CI (99.9%): [3726.772, 4177.054] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 98.43% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: 17967.311 ns/op
# Warmup Iteration   2: 7020.410 ns/op
# Warmup Iteration   3: 6841.790 ns/op
# Warmup Iteration   4: 6850.843 ns/op
Iteration   1: 6881.987 ns/op
Iteration   2: 6897.205 ns/op
Iteration   3: 6881.653 ns/op
Iteration   4: 7253.412 ns/op
Iteration   5: 7546.786 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization":
  7092.209 ±(99.9%) 1153.877 ns/op [Average]
  (min, avg, max) = (6881.653, 7092.209, 7546.786), stdev = 299.658
  CI (99.9%): [5938.332, 8246.086] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 98.63% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 28143.122 ns/op
# Warmup Iteration   2: 12634.783 ns/op
# Warmup Iteration   3: 11946.996 ns/op
# Warmup Iteration   4: 11938.121 ns/op
Iteration   1: 11952.872 ns/op
Iteration   2: 12248.653 ns/op
Iteration   3: 12187.022 ns/op
Iteration   4: 13454.710 ns/op
Iteration   5: 12578.753 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization":
  12484.402 ±(99.9%) 2259.229 ns/op [Average]
  (min, avg, max) = (11952.872, 12484.402, 13454.710), stdev = 586.715
  CI (99.9%): [10225.173, 14743.631] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 98.82% complete, ETA 00:01:09
# Fork: 1 of 1
# Warmup Iteration   1: 277979.557 ns/op
# Warmup Iteration   2: 110788.551 ns/op
# Warmup Iteration   3: 99939.672 ns/op
# Warmup Iteration   4: 99852.349 ns/op
Iteration   1: 100254.113 ns/op
Iteration   2: 100119.722 ns/op
Iteration   3: 100113.406 ns/op
Iteration   4: 99931.822 ns/op
Iteration   5: 99679.171 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.deserialization":
  100019.647 ±(99.9%) 855.451 ns/op [Average]
  (min, avg, max) = (99679.171, 100019.647, 100254.113), stdev = 222.158
  CI (99.9%): [99164.195, 100875.098] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _1_K)

# Run progress: 99.02% complete, ETA 00:00:57
# Fork: 1 of 1
# Warmup Iteration   1: 3614.746 ns/op
# Warmup Iteration   2: 2386.531 ns/op
# Warmup Iteration   3: 2568.147 ns/op
# Warmup Iteration   4: 2500.681 ns/op
Iteration   1: 2322.999 ns/op
Iteration   2: 2312.624 ns/op
Iteration   3: 2313.010 ns/op
Iteration   4: 2317.013 ns/op
Iteration   5: 2321.327 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization":
  2317.395 ±(99.9%) 18.164 ns/op [Average]
  (min, avg, max) = (2312.624, 2317.395, 2322.999), stdev = 4.717
  CI (99.9%): [2299.231, 2335.558] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _2_K)

# Run progress: 99.22% complete, ETA 00:00:46
# Fork: 1 of 1
# Warmup Iteration   1: 9169.598 ns/op
# Warmup Iteration   2: 4913.784 ns/op
# Warmup Iteration   3: 4809.463 ns/op
# Warmup Iteration   4: 4817.474 ns/op
Iteration   1: 5410.060 ns/op
Iteration   2: 5210.380 ns/op
Iteration   3: 4808.353 ns/op
Iteration   4: 4834.249 ns/op
Iteration   5: 4818.864 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization":
  5016.381 ±(99.9%) 1068.649 ns/op [Average]
  (min, avg, max) = (4808.353, 5016.381, 5410.060), stdev = 277.525
  CI (99.9%): [3947.732, 6085.030] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _4_K)

# Run progress: 99.41% complete, ETA 00:00:34
# Fork: 1 of 1
# Warmup Iteration   1: 21248.224 ns/op
# Warmup Iteration   2: 8439.707 ns/op
# Warmup Iteration   3: 8392.364 ns/op
# Warmup Iteration   4: 8379.053 ns/op
Iteration   1: 8406.677 ns/op
Iteration   2: 8589.396 ns/op
Iteration   3: 8348.942 ns/op
Iteration   4: 8355.840 ns/op
Iteration   5: 8354.847 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization":
  8411.140 ±(99.9%) 394.060 ns/op [Average]
  (min, avg, max) = (8348.942, 8411.140, 8589.396), stdev = 102.336
  CI (99.9%): [8017.080, 8805.201] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _8_K)

# Run progress: 99.61% complete, ETA 00:00:23
# Fork: 1 of 1
# Warmup Iteration   1: 20491.678 ns/op
# Warmup Iteration   2: 11406.599 ns/op
# Warmup Iteration   3: 11367.893 ns/op
# Warmup Iteration   4: 11334.502 ns/op
Iteration   1: 11341.471 ns/op
Iteration   2: 11335.495 ns/op
Iteration   3: 11331.723 ns/op
Iteration   4: 11626.525 ns/op
Iteration   5: 11354.316 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization":
  11397.906 ±(99.9%) 493.223 ns/op [Average]
  (min, avg, max) = (11331.723, 11397.906, 11626.525), stdev = 128.089
  CI (99.9%): [10904.683, 11891.129] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 17.0.4, VM 17.0.4+8-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -Xmx2G --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED
# Warmup: 4 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization
# Parameters: (converterType = SCALA_PB_DIRECT, inputType = _64_K)

# Run progress: 99.80% complete, ETA 00:00:11
# Fork: 1 of 1
# Warmup Iteration   1: 107463.673 ns/op
# Warmup Iteration   2: 79131.145 ns/op
# Warmup Iteration   3: 78687.052 ns/op
# Warmup Iteration   4: 78379.580 ns/op
Iteration   1: 79460.871 ns/op
Iteration   2: 78809.240 ns/op
Iteration   3: 79272.654 ns/op
Iteration   4: 79485.610 ns/op
Iteration   5: 78189.986 ns/op


Result "com.komanov.serialization.jmh.SiteRawScalaPbBenchmark.serialization":
  79043.672 ±(99.9%) 2113.942 ns/op [Average]
  (min, avg, max) = (78189.986, 79043.672, 79485.610), stdev = 548.984
  CI (99.9%): [76929.730, 81157.614] (assumes normal distribution)


# Run complete. Total time: 01:38:06

Benchmark                                     (converterType)  (inputType)  Mode  Cnt         Score         Error  Units
EventBenchmark.both                                      JSON         _1_K  avgt    5     25981.963 ±     588.785  ns/op
EventBenchmark.both                                      JSON         _2_K  avgt    5     53156.624 ±    2847.507  ns/op
EventBenchmark.both                                      JSON         _4_K  avgt    5    101394.251 ±    4814.779  ns/op
EventBenchmark.both                                      JSON         _8_K  avgt    5    227560.468 ±    2066.845  ns/op
EventBenchmark.both                                      JSON        _64_K  avgt    5   2191823.683 ±  195013.371  ns/op
EventBenchmark.both                                      CBOR         _1_K  avgt    5     22460.184 ±     936.220  ns/op
EventBenchmark.both                                      CBOR         _2_K  avgt    5     43881.568 ±     398.655  ns/op
EventBenchmark.both                                      CBOR         _4_K  avgt    5     82000.216 ±    1737.776  ns/op
EventBenchmark.both                                      CBOR         _8_K  avgt    5    173708.043 ±    5301.351  ns/op
EventBenchmark.both                                      CBOR        _64_K  avgt    5   1799873.520 ±  128963.845  ns/op
EventBenchmark.both                                     SMILE         _1_K  avgt    5     23901.899 ±     358.465  ns/op
EventBenchmark.both                                     SMILE         _2_K  avgt    5     46202.449 ±     463.752  ns/op
EventBenchmark.both                                     SMILE         _4_K  avgt    5     93222.507 ±    2745.330  ns/op
EventBenchmark.both                                     SMILE         _8_K  avgt    5    205499.289 ±    2106.518  ns/op
EventBenchmark.both                                     SMILE        _64_K  avgt    5   2191754.498 ±   90165.064  ns/op
EventBenchmark.both                                  SCALA_PB         _1_K  avgt    5     10474.732 ±      86.742  ns/op
EventBenchmark.both                                  SCALA_PB         _2_K  avgt    5     20795.986 ±     497.238  ns/op
EventBenchmark.both                                  SCALA_PB         _4_K  avgt    5     36951.690 ±    1090.175  ns/op
EventBenchmark.both                                  SCALA_PB         _8_K  avgt    5     67537.915 ±    1894.774  ns/op
EventBenchmark.both                                  SCALA_PB        _64_K  avgt    5    583901.470 ±   25143.415  ns/op
EventBenchmark.both                                   JAVA_PB         _1_K  avgt    5      6143.666 ±     285.292  ns/op
EventBenchmark.both                                   JAVA_PB         _2_K  avgt    5     12489.241 ±     123.330  ns/op
EventBenchmark.both                                   JAVA_PB         _4_K  avgt    5     22752.495 ±    1758.984  ns/op
EventBenchmark.both                                   JAVA_PB         _8_K  avgt    5     48224.897 ±    2899.005  ns/op
EventBenchmark.both                                   JAVA_PB        _64_K  avgt    5    494872.816 ±    5220.136  ns/op
EventBenchmark.both                               JAVA_THRIFT         _1_K  avgt    5     10977.918 ±      64.581  ns/op
EventBenchmark.both                               JAVA_THRIFT         _2_K  avgt    5     21438.823 ±     541.376  ns/op
EventBenchmark.both                               JAVA_THRIFT         _4_K  avgt    5     43351.030 ±    2180.135  ns/op
EventBenchmark.both                               JAVA_THRIFT         _8_K  avgt    5     93636.033 ±    1871.792  ns/op
EventBenchmark.both                               JAVA_THRIFT        _64_K  avgt    5    959369.667 ±   45698.429  ns/op
EventBenchmark.both                              SERIALIZABLE         _1_K  avgt    5    133092.880 ±    1261.840  ns/op
EventBenchmark.both                              SERIALIZABLE         _2_K  avgt    5    247777.252 ±   13255.455  ns/op
EventBenchmark.both                              SERIALIZABLE         _4_K  avgt    5    571718.636 ±   24276.326  ns/op
EventBenchmark.both                              SERIALIZABLE         _8_K  avgt    5   1373648.976 ±   83008.675  ns/op
EventBenchmark.both                              SERIALIZABLE        _64_K  avgt    5  12745586.933 ± 1203345.699  ns/op
EventBenchmark.both                                 BOOPICKLE         _1_K  avgt    5      6000.772 ±     529.784  ns/op
EventBenchmark.both                                 BOOPICKLE         _2_K  avgt    5     11199.078 ±     104.491  ns/op
EventBenchmark.both                                 BOOPICKLE         _4_K  avgt    5     21079.524 ±      63.144  ns/op
EventBenchmark.both                                 BOOPICKLE         _8_K  avgt    5     40804.220 ±     389.701  ns/op
EventBenchmark.both                                 BOOPICKLE        _64_K  avgt    5    413217.735 ±   43489.234  ns/op
EventBenchmark.both                                     CHILL         _1_K  avgt    5     71504.424 ±    7246.412  ns/op
EventBenchmark.both                                     CHILL         _2_K  avgt    5    148572.637 ±   12677.537  ns/op
EventBenchmark.both                                     CHILL         _4_K  avgt    5    315662.328 ±   20231.050  ns/op
EventBenchmark.both                                     CHILL         _8_K  avgt    5    624364.194 ±   81255.715  ns/op
EventBenchmark.both                                     CHILL        _64_K  avgt    5   6401009.659 ±  279487.718  ns/op
EventBenchmark.both                                  JSONITER         _1_K  avgt    5     10343.092 ±     262.058  ns/op
EventBenchmark.both                                  JSONITER         _2_K  avgt    5     21769.125 ±     170.285  ns/op
EventBenchmark.both                                  JSONITER         _4_K  avgt    5     41259.302 ±    1215.433  ns/op
EventBenchmark.both                                  JSONITER         _8_K  avgt    5     79668.334 ±    1697.062  ns/op
EventBenchmark.both                                  JSONITER        _64_K  avgt    5    823379.664 ±   15522.842  ns/op
EventBenchmark.both                                     CIRCE         _1_K  avgt    5    180010.760 ±   25515.117  ns/op
EventBenchmark.both                                     CIRCE         _2_K  avgt    5    267154.388 ±   19973.835  ns/op
EventBenchmark.both                                     CIRCE         _4_K  avgt    5    530748.236 ±   68159.980  ns/op
EventBenchmark.both                                     CIRCE         _8_K  avgt    5   1223082.026 ±   79702.694  ns/op
EventBenchmark.both                                     CIRCE        _64_K  avgt    5  11840797.394 ±  284094.223  ns/op
EventBenchmark.both                              UPICKLE_JSON         _1_K  avgt    5     38452.049 ±    2910.852  ns/op
EventBenchmark.both                              UPICKLE_JSON         _2_K  avgt    5     80677.893 ±    2619.758  ns/op
EventBenchmark.both                              UPICKLE_JSON         _4_K  avgt    5    169126.673 ±    8267.303  ns/op
EventBenchmark.both                              UPICKLE_JSON         _8_K  avgt    5    388845.568 ±    7269.829  ns/op
EventBenchmark.both                              UPICKLE_JSON        _64_K  avgt    5   3887471.247 ±   15123.223  ns/op
EventBenchmark.both                       UPICKLE_POOLED_JSON         _1_K  avgt    5     34653.031 ±    1903.567  ns/op
EventBenchmark.both                       UPICKLE_POOLED_JSON         _2_K  avgt    5     72059.837 ±     675.500  ns/op
EventBenchmark.both                       UPICKLE_POOLED_JSON         _4_K  avgt    5    140321.070 ±    1768.044  ns/op
EventBenchmark.both                       UPICKLE_POOLED_JSON         _8_K  avgt    5    301071.106 ±    2419.610  ns/op
EventBenchmark.both                       UPICKLE_POOLED_JSON        _64_K  avgt    5   3306603.304 ±  178579.063  ns/op
EventBenchmark.both                           UPICKLE_MSGPACK         _1_K  avgt    5     17732.345 ±    1416.008  ns/op
EventBenchmark.both                           UPICKLE_MSGPACK         _2_K  avgt    5     33779.624 ±      89.030  ns/op
EventBenchmark.both                           UPICKLE_MSGPACK         _4_K  avgt    5     75031.821 ±   12166.773  ns/op
EventBenchmark.both                           UPICKLE_MSGPACK         _8_K  avgt    5    171782.018 ±   10081.467  ns/op
EventBenchmark.both                           UPICKLE_MSGPACK        _64_K  avgt    5   1718225.560 ±   57064.170  ns/op
EventBenchmark.both                               CAP_N_PROTO         _1_K  avgt    5     67029.490 ±    2274.189  ns/op
EventBenchmark.both                               CAP_N_PROTO         _2_K  avgt    5    123014.149 ±    2198.292  ns/op
EventBenchmark.both                               CAP_N_PROTO         _4_K  avgt    5    251187.801 ±   73127.947  ns/op
EventBenchmark.both                               CAP_N_PROTO         _8_K  avgt    5    553569.961 ±    5870.944  ns/op
EventBenchmark.both                               CAP_N_PROTO        _64_K  avgt    5   5397356.615 ±  134402.942  ns/op
EventBenchmark.both                        CAP_N_PROTO_POOLED         _1_K  avgt    5     67549.780 ±    9426.465  ns/op
EventBenchmark.both                        CAP_N_PROTO_POOLED         _2_K  avgt    5    124016.670 ±   15092.552  ns/op
EventBenchmark.both                        CAP_N_PROTO_POOLED         _4_K  avgt    5    248546.834 ±   29068.863  ns/op
EventBenchmark.both                        CAP_N_PROTO_POOLED         _8_K  avgt    5    558859.763 ±   61638.707  ns/op
EventBenchmark.both                        CAP_N_PROTO_POOLED        _64_K  avgt    5   5285967.829 ±   83510.089  ns/op
EventBenchmark.deserialization                           JSON         _1_K  avgt    5     13988.405 ±     313.078  ns/op
EventBenchmark.deserialization                           JSON         _2_K  avgt    5     27107.181 ±      92.112  ns/op
EventBenchmark.deserialization                           JSON         _4_K  avgt    5     57059.137 ±    1900.469  ns/op
EventBenchmark.deserialization                           JSON         _8_K  avgt    5    124211.106 ±    2291.659  ns/op
EventBenchmark.deserialization                           JSON        _64_K  avgt    5   1148250.008 ±    3628.337  ns/op
EventBenchmark.deserialization                           CBOR         _1_K  avgt    5     14024.006 ±     430.119  ns/op
EventBenchmark.deserialization                           CBOR         _2_K  avgt    5     24829.651 ±    1381.302  ns/op
EventBenchmark.deserialization                           CBOR         _4_K  avgt    5     49352.646 ±    3171.673  ns/op
EventBenchmark.deserialization                           CBOR         _8_K  avgt    5    104853.494 ±    1019.408  ns/op
EventBenchmark.deserialization                           CBOR        _64_K  avgt    5   1080159.697 ±  101355.760  ns/op
EventBenchmark.deserialization                          SMILE         _1_K  avgt    5     13257.125 ±     138.012  ns/op
EventBenchmark.deserialization                          SMILE         _2_K  avgt    5     27334.793 ±      99.892  ns/op
EventBenchmark.deserialization                          SMILE         _4_K  avgt    5     52136.485 ±     375.587  ns/op
EventBenchmark.deserialization                          SMILE         _8_K  avgt    5    113120.553 ±   12776.474  ns/op
EventBenchmark.deserialization                          SMILE        _64_K  avgt    5   1151817.828 ±    9207.798  ns/op
EventBenchmark.deserialization                       SCALA_PB         _1_K  avgt    5      5149.244 ±     142.431  ns/op
EventBenchmark.deserialization                       SCALA_PB         _2_K  avgt    5      9588.720 ±     824.865  ns/op
EventBenchmark.deserialization                       SCALA_PB         _4_K  avgt    5     17116.449 ±     149.191  ns/op
EventBenchmark.deserialization                       SCALA_PB         _8_K  avgt    5     40953.798 ±    1379.728  ns/op
EventBenchmark.deserialization                       SCALA_PB        _64_K  avgt    5    385774.013 ±   30107.871  ns/op
EventBenchmark.deserialization                        JAVA_PB         _1_K  avgt    5      3226.739 ±      32.261  ns/op
EventBenchmark.deserialization                        JAVA_PB         _2_K  avgt    5      6473.453 ±     555.536  ns/op
EventBenchmark.deserialization                        JAVA_PB         _4_K  avgt    5     12120.774 ±     565.421  ns/op
EventBenchmark.deserialization                        JAVA_PB         _8_K  avgt    5     25328.115 ±     151.942  ns/op
EventBenchmark.deserialization                        JAVA_PB        _64_K  avgt    5    250005.023 ±    9839.711  ns/op
EventBenchmark.deserialization                    JAVA_THRIFT         _1_K  avgt    5      3892.355 ±     207.862  ns/op
EventBenchmark.deserialization                    JAVA_THRIFT         _2_K  avgt    5      8234.760 ±     611.650  ns/op
EventBenchmark.deserialization                    JAVA_THRIFT         _4_K  avgt    5     15221.295 ±     828.688  ns/op
EventBenchmark.deserialization                    JAVA_THRIFT         _8_K  avgt    5     31190.887 ±    2149.357  ns/op
EventBenchmark.deserialization                    JAVA_THRIFT        _64_K  avgt    5    301407.858 ±   14361.483  ns/op
EventBenchmark.deserialization                   SERIALIZABLE         _1_K  avgt    5    104918.633 ±     642.687  ns/op
EventBenchmark.deserialization                   SERIALIZABLE         _2_K  avgt    5    187453.831 ±    1351.084  ns/op
EventBenchmark.deserialization                   SERIALIZABLE         _4_K  avgt    5    464044.482 ±   40561.898  ns/op
EventBenchmark.deserialization                   SERIALIZABLE         _8_K  avgt    5   1084381.666 ±    6630.032  ns/op
EventBenchmark.deserialization                   SERIALIZABLE        _64_K  avgt    5   9440765.939 ±  573465.082  ns/op
EventBenchmark.deserialization                      BOOPICKLE         _1_K  avgt    5      2331.618 ±     227.712  ns/op
EventBenchmark.deserialization                      BOOPICKLE         _2_K  avgt    5      4643.091 ±     378.102  ns/op
EventBenchmark.deserialization                      BOOPICKLE         _4_K  avgt    5      9021.881 ±     677.491  ns/op
EventBenchmark.deserialization                      BOOPICKLE         _8_K  avgt    5     18139.299 ±     763.198  ns/op
EventBenchmark.deserialization                      BOOPICKLE        _64_K  avgt    5    200581.046 ±   12667.238  ns/op
EventBenchmark.deserialization                          CHILL         _1_K  avgt    5     33530.227 ±    1643.260  ns/op
EventBenchmark.deserialization                          CHILL         _2_K  avgt    5     77811.759 ±    3502.315  ns/op
EventBenchmark.deserialization                          CHILL         _4_K  avgt    5    145773.318 ±   14455.153  ns/op
EventBenchmark.deserialization                          CHILL         _8_K  avgt    5    306729.033 ±   35053.112  ns/op
EventBenchmark.deserialization                          CHILL        _64_K  avgt    5   3198951.798 ±  250054.523  ns/op
EventBenchmark.deserialization                       JSONITER         _1_K  avgt    5      7268.980 ±     137.485  ns/op
EventBenchmark.deserialization                       JSONITER         _2_K  avgt    5     13706.456 ±     451.250  ns/op
EventBenchmark.deserialization                       JSONITER         _4_K  avgt    5     24846.914 ±     175.148  ns/op
EventBenchmark.deserialization                       JSONITER         _8_K  avgt    5     49925.360 ±     613.126  ns/op
EventBenchmark.deserialization                       JSONITER        _64_K  avgt    5    510308.654 ±   27204.546  ns/op
EventBenchmark.deserialization                          CIRCE         _1_K  avgt    5    143956.103 ±    7652.896  ns/op
EventBenchmark.deserialization                          CIRCE         _2_K  avgt    5    204196.985 ±   19790.442  ns/op
EventBenchmark.deserialization                          CIRCE         _4_K  avgt    5    397122.740 ±    8856.828  ns/op
EventBenchmark.deserialization                          CIRCE         _8_K  avgt    5    920495.829 ±   84136.675  ns/op
EventBenchmark.deserialization                          CIRCE        _64_K  avgt    5   8612126.498 ±  231099.434  ns/op
EventBenchmark.deserialization                   UPICKLE_JSON         _1_K  avgt    5     16154.680 ±     455.463  ns/op
EventBenchmark.deserialization                   UPICKLE_JSON         _2_K  avgt    5     41192.600 ±    2394.804  ns/op
EventBenchmark.deserialization                   UPICKLE_JSON         _4_K  avgt    5     84048.494 ±    4785.829  ns/op
EventBenchmark.deserialization                   UPICKLE_JSON         _8_K  avgt    5    143878.921 ±     692.445  ns/op
EventBenchmark.deserialization                   UPICKLE_JSON        _64_K  avgt    5   2109536.206 ±  136249.351  ns/op
EventBenchmark.deserialization            UPICKLE_POOLED_JSON         _1_K  avgt    5     17147.457 ±     675.067  ns/op
EventBenchmark.deserialization            UPICKLE_POOLED_JSON         _2_K  avgt    5     40880.127 ±     232.061  ns/op
EventBenchmark.deserialization            UPICKLE_POOLED_JSON         _4_K  avgt    5     98416.767 ±    3440.707  ns/op
EventBenchmark.deserialization            UPICKLE_POOLED_JSON         _8_K  avgt    5    196175.292 ±   11112.007  ns/op
EventBenchmark.deserialization            UPICKLE_POOLED_JSON        _64_K  avgt    5   1508997.565 ±  178602.848  ns/op
EventBenchmark.deserialization                UPICKLE_MSGPACK         _1_K  avgt    5      8089.849 ±     271.703  ns/op
EventBenchmark.deserialization                UPICKLE_MSGPACK         _2_K  avgt    5     16052.214 ±    2149.423  ns/op
EventBenchmark.deserialization                UPICKLE_MSGPACK         _4_K  avgt    5     37150.630 ±    1676.250  ns/op
EventBenchmark.deserialization                UPICKLE_MSGPACK         _8_K  avgt    5     90102.945 ±    5945.023  ns/op
EventBenchmark.deserialization                UPICKLE_MSGPACK        _64_K  avgt    5    847502.026 ±   61564.260  ns/op
EventBenchmark.deserialization                    CAP_N_PROTO         _1_K  avgt    5     24098.301 ±    2556.713  ns/op
EventBenchmark.deserialization                    CAP_N_PROTO         _2_K  avgt    5     43587.996 ±     546.317  ns/op
EventBenchmark.deserialization                    CAP_N_PROTO         _4_K  avgt    5     88656.994 ±    3935.639  ns/op
EventBenchmark.deserialization                    CAP_N_PROTO         _8_K  avgt    5    202291.359 ±    3155.475  ns/op
EventBenchmark.deserialization                    CAP_N_PROTO        _64_K  avgt    5   1920918.023 ±  109602.817  ns/op
EventBenchmark.deserialization             CAP_N_PROTO_POOLED         _1_K  avgt    5     25229.314 ±     575.087  ns/op
EventBenchmark.deserialization             CAP_N_PROTO_POOLED         _2_K  avgt    5     44473.869 ±    2502.806  ns/op
EventBenchmark.deserialization             CAP_N_PROTO_POOLED         _4_K  avgt    5     88583.140 ±    1334.260  ns/op
EventBenchmark.deserialization             CAP_N_PROTO_POOLED         _8_K  avgt    5    208038.973 ±   28501.951  ns/op
EventBenchmark.deserialization             CAP_N_PROTO_POOLED        _64_K  avgt    5   1951027.512 ±   62955.723  ns/op
EventBenchmark.serialization                             JSON         _1_K  avgt    5     10272.453 ±     619.192  ns/op
EventBenchmark.serialization                             JSON         _2_K  avgt    5     23448.535 ±     186.263  ns/op
EventBenchmark.serialization                             JSON         _4_K  avgt    5     40687.429 ±    2064.975  ns/op
EventBenchmark.serialization                             JSON         _8_K  avgt    5     98899.126 ±    7707.487  ns/op
EventBenchmark.serialization                             JSON        _64_K  avgt    5    756892.388 ±    7714.375  ns/op
EventBenchmark.serialization                             CBOR         _1_K  avgt    5      7730.055 ±     416.541  ns/op
EventBenchmark.serialization                             CBOR         _2_K  avgt    5     14469.199 ±    1929.921  ns/op
EventBenchmark.serialization                             CBOR         _4_K  avgt    5     26307.084 ±     146.529  ns/op
EventBenchmark.serialization                             CBOR         _8_K  avgt    5     54554.836 ±     234.483  ns/op
EventBenchmark.serialization                             CBOR        _64_K  avgt    5    580323.500 ±    3108.992  ns/op
EventBenchmark.serialization                            SMILE         _1_K  avgt    5     10562.253 ±     338.698  ns/op
EventBenchmark.serialization                            SMILE         _2_K  avgt    5     17748.149 ±      93.254  ns/op
EventBenchmark.serialization                            SMILE         _4_K  avgt    5     38961.649 ±    4420.882  ns/op
EventBenchmark.serialization                            SMILE         _8_K  avgt    5     99427.542 ±    4503.188  ns/op
EventBenchmark.serialization                            SMILE        _64_K  avgt    5    765655.366 ±    2009.267  ns/op
EventBenchmark.serialization                         SCALA_PB         _1_K  avgt    5      5375.109 ±     370.885  ns/op
EventBenchmark.serialization                         SCALA_PB         _2_K  avgt    5     11584.559 ±      66.349  ns/op
EventBenchmark.serialization                         SCALA_PB         _4_K  avgt    5     18014.974 ±     241.471  ns/op
EventBenchmark.serialization                         SCALA_PB         _8_K  avgt    5     26909.511 ±     826.036  ns/op
EventBenchmark.serialization                         SCALA_PB        _64_K  avgt    5    231190.674 ±    5118.886  ns/op
EventBenchmark.serialization                          JAVA_PB         _1_K  avgt    5      2625.345 ±      45.329  ns/op
EventBenchmark.serialization                          JAVA_PB         _2_K  avgt    5      5395.834 ±     177.877  ns/op
EventBenchmark.serialization                          JAVA_PB         _4_K  avgt    5     10499.595 ±      66.515  ns/op
EventBenchmark.serialization                          JAVA_PB         _8_K  avgt    5     22828.129 ±     962.950  ns/op
EventBenchmark.serialization                          JAVA_PB        _64_K  avgt    5    205115.661 ±    5104.611  ns/op
EventBenchmark.serialization                      JAVA_THRIFT         _1_K  avgt    5      6511.969 ±     294.118  ns/op
EventBenchmark.serialization                      JAVA_THRIFT         _2_K  avgt    5     12861.722 ±     386.526  ns/op
EventBenchmark.serialization                      JAVA_THRIFT         _4_K  avgt    5     26198.432 ±     477.144  ns/op
EventBenchmark.serialization                      JAVA_THRIFT         _8_K  avgt    5     59091.907 ±     264.951  ns/op
EventBenchmark.serialization                      JAVA_THRIFT        _64_K  avgt    5    612027.057 ±   31227.360  ns/op
EventBenchmark.serialization                     SERIALIZABLE         _1_K  avgt    5     25860.559 ±    1275.624  ns/op
EventBenchmark.serialization                     SERIALIZABLE         _2_K  avgt    5     47021.593 ±    1322.528  ns/op
EventBenchmark.serialization                     SERIALIZABLE         _4_K  avgt    5    101106.080 ±   13279.233  ns/op
EventBenchmark.serialization                     SERIALIZABLE         _8_K  avgt    5    233326.948 ±    4208.862  ns/op
EventBenchmark.serialization                     SERIALIZABLE        _64_K  avgt    5   2148331.208 ±   96309.185  ns/op
EventBenchmark.serialization                        BOOPICKLE         _1_K  avgt    5      3568.611 ±     180.964  ns/op
EventBenchmark.serialization                        BOOPICKLE         _2_K  avgt    5      6078.344 ±     158.418  ns/op
EventBenchmark.serialization                        BOOPICKLE         _4_K  avgt    5     11560.076 ±     425.538  ns/op
EventBenchmark.serialization                        BOOPICKLE         _8_K  avgt    5     22767.039 ±    1911.271  ns/op
EventBenchmark.serialization                        BOOPICKLE        _64_K  avgt    5    208176.716 ±    4104.307  ns/op
EventBenchmark.serialization                            CHILL         _1_K  avgt    5     38041.928 ±     777.086  ns/op
EventBenchmark.serialization                            CHILL         _2_K  avgt    5     70163.667 ±    5641.757  ns/op
EventBenchmark.serialization                            CHILL         _4_K  avgt    5    134979.398 ±   15389.096  ns/op
EventBenchmark.serialization                            CHILL         _8_K  avgt    5    334957.644 ±   14174.367  ns/op
EventBenchmark.serialization                            CHILL        _64_K  avgt    5   3106868.105 ±  160514.055  ns/op
EventBenchmark.serialization                         JSONITER         _1_K  avgt    5      3622.760 ±     234.323  ns/op
EventBenchmark.serialization                         JSONITER         _2_K  avgt    5      6259.505 ±     272.515  ns/op
EventBenchmark.serialization                         JSONITER         _4_K  avgt    5     13464.182 ±    1314.175  ns/op
EventBenchmark.serialization                         JSONITER         _8_K  avgt    5     30219.394 ±     870.733  ns/op
EventBenchmark.serialization                         JSONITER        _64_K  avgt    5    344997.879 ±   32688.181  ns/op
EventBenchmark.serialization                            CIRCE         _1_K  avgt    5     27321.824 ±    1268.580  ns/op
EventBenchmark.serialization                            CIRCE         _2_K  avgt    5     58643.884 ±    3626.815  ns/op
EventBenchmark.serialization                            CIRCE         _4_K  avgt    5    117198.559 ±    5101.225  ns/op
EventBenchmark.serialization                            CIRCE         _8_K  avgt    5    261138.696 ±    2824.502  ns/op
EventBenchmark.serialization                            CIRCE        _64_K  avgt    5   2662796.343 ±  181788.636  ns/op
EventBenchmark.serialization                     UPICKLE_JSON         _1_K  avgt    5     18710.671 ±    1027.842  ns/op
EventBenchmark.serialization                     UPICKLE_JSON         _2_K  avgt    5     35299.298 ±    3510.487  ns/op
EventBenchmark.serialization                     UPICKLE_JSON         _4_K  avgt    5     72331.081 ±    2037.908  ns/op
EventBenchmark.serialization                     UPICKLE_JSON         _8_K  avgt    5    179870.497 ±    5412.572  ns/op
EventBenchmark.serialization                     UPICKLE_JSON        _64_K  avgt    5   1587023.858 ±   21123.676  ns/op
EventBenchmark.serialization              UPICKLE_POOLED_JSON         _1_K  avgt    5     15670.002 ±     936.053  ns/op
EventBenchmark.serialization              UPICKLE_POOLED_JSON         _2_K  avgt    5     25960.960 ±     296.268  ns/op
EventBenchmark.serialization              UPICKLE_POOLED_JSON         _4_K  avgt    5     62764.232 ±    1615.700  ns/op
EventBenchmark.serialization              UPICKLE_POOLED_JSON         _8_K  avgt    5    158308.030 ±    9841.577  ns/op
EventBenchmark.serialization              UPICKLE_POOLED_JSON        _64_K  avgt    5   1450712.730 ±   32830.089  ns/op
EventBenchmark.serialization                  UPICKLE_MSGPACK         _1_K  avgt    5      9936.065 ±     840.821  ns/op
EventBenchmark.serialization                  UPICKLE_MSGPACK         _2_K  avgt    5     18593.494 ±     365.245  ns/op
EventBenchmark.serialization                  UPICKLE_MSGPACK         _4_K  avgt    5     42110.380 ±    2698.767  ns/op
EventBenchmark.serialization                  UPICKLE_MSGPACK         _8_K  avgt    5     99488.457 ±    7323.441  ns/op
EventBenchmark.serialization                  UPICKLE_MSGPACK        _64_K  avgt    5    854865.400 ±   27778.897  ns/op
EventBenchmark.serialization                      CAP_N_PROTO         _1_K  avgt    5     40682.962 ±    2065.142  ns/op
EventBenchmark.serialization                      CAP_N_PROTO         _2_K  avgt    5     74928.768 ±    5041.365  ns/op
EventBenchmark.serialization                      CAP_N_PROTO         _4_K  avgt    5    151272.682 ±   14970.529  ns/op
EventBenchmark.serialization                      CAP_N_PROTO         _8_K  avgt    5    351203.040 ±   60009.990  ns/op
EventBenchmark.serialization                      CAP_N_PROTO        _64_K  avgt    5   3377395.207 ±  238754.703  ns/op
EventBenchmark.serialization               CAP_N_PROTO_POOLED         _1_K  avgt    5     38892.455 ±     496.925  ns/op
EventBenchmark.serialization               CAP_N_PROTO_POOLED         _2_K  avgt    5     71457.215 ±     907.109  ns/op
EventBenchmark.serialization               CAP_N_PROTO_POOLED         _4_K  avgt    5    144759.343 ±   19677.320  ns/op
EventBenchmark.serialization               CAP_N_PROTO_POOLED         _8_K  avgt    5    322275.299 ±   11447.995  ns/op
EventBenchmark.serialization               CAP_N_PROTO_POOLED        _64_K  avgt    5   3246670.702 ±   59353.249  ns/op
EventRawScalaPbBenchmark.both                 SCALA_PB_DIRECT         _1_K  avgt    5     12951.695 ±     272.263  ns/op
EventRawScalaPbBenchmark.both                 SCALA_PB_DIRECT         _2_K  avgt    5     33455.544 ±    5098.700  ns/op
EventRawScalaPbBenchmark.both                 SCALA_PB_DIRECT         _4_K  avgt    5     62294.132 ±    6388.396  ns/op
EventRawScalaPbBenchmark.both                 SCALA_PB_DIRECT         _8_K  avgt    5    110443.732 ±   11931.484  ns/op
EventRawScalaPbBenchmark.both                 SCALA_PB_DIRECT        _64_K  avgt    5    952081.393 ±  145188.368  ns/op
EventRawScalaPbBenchmark.deserialization      SCALA_PB_DIRECT         _1_K  avgt    5      2254.987 ±     261.810  ns/op
EventRawScalaPbBenchmark.deserialization      SCALA_PB_DIRECT         _2_K  avgt    5      4450.489 ±      49.927  ns/op
EventRawScalaPbBenchmark.deserialization      SCALA_PB_DIRECT         _4_K  avgt    5      8460.916 ±     470.917  ns/op
EventRawScalaPbBenchmark.deserialization      SCALA_PB_DIRECT         _8_K  avgt    5     16546.040 ±      79.539  ns/op
EventRawScalaPbBenchmark.deserialization      SCALA_PB_DIRECT        _64_K  avgt    5    159967.360 ±    5594.001  ns/op
EventRawScalaPbBenchmark.serialization        SCALA_PB_DIRECT         _1_K  avgt    5      9693.907 ±     146.965  ns/op
EventRawScalaPbBenchmark.serialization        SCALA_PB_DIRECT         _2_K  avgt    5     25947.858 ±     684.089  ns/op
EventRawScalaPbBenchmark.serialization        SCALA_PB_DIRECT         _4_K  avgt    5     49301.705 ±    2805.868  ns/op
EventRawScalaPbBenchmark.serialization        SCALA_PB_DIRECT         _8_K  avgt    5     83287.043 ±     969.807  ns/op
EventRawScalaPbBenchmark.serialization        SCALA_PB_DIRECT        _64_K  avgt    5    619515.995 ±   14415.280  ns/op
SiteBenchmark.both                                       JSON         _1_K  avgt    5     16068.260 ±     170.354  ns/op
SiteBenchmark.both                                       JSON         _2_K  avgt    5     30492.556 ±    1948.948  ns/op
SiteBenchmark.both                                       JSON         _4_K  avgt    5     54815.087 ±     541.083  ns/op
SiteBenchmark.both                                       JSON         _8_K  avgt    5    109435.748 ±    1060.205  ns/op
SiteBenchmark.both                                       JSON        _64_K  avgt    5    831179.664 ±   12826.891  ns/op
SiteBenchmark.both                                       CBOR         _1_K  avgt    5     12217.436 ±     145.935  ns/op
SiteBenchmark.both                                       CBOR         _2_K  avgt    5     21217.127 ±    1293.385  ns/op
SiteBenchmark.both                                       CBOR         _4_K  avgt    5     41614.038 ±    2480.064  ns/op
SiteBenchmark.both                                       CBOR         _8_K  avgt    5     80300.768 ±     399.334  ns/op
SiteBenchmark.both                                       CBOR        _64_K  avgt    5    656025.228 ±    4577.956  ns/op
SiteBenchmark.both                                      SMILE         _1_K  avgt    5     13807.823 ±    1553.211  ns/op
SiteBenchmark.both                                      SMILE         _2_K  avgt    5     22975.179 ±      86.863  ns/op
SiteBenchmark.both                                      SMILE         _4_K  avgt    5     41964.437 ±     915.694  ns/op
SiteBenchmark.both                                      SMILE         _8_K  avgt    5     79299.687 ±     998.706  ns/op
SiteBenchmark.both                                      SMILE        _64_K  avgt    5    588404.918 ±    6631.848  ns/op
SiteBenchmark.both                                   SCALA_PB         _1_K  avgt    5      8241.482 ±      40.991  ns/op
SiteBenchmark.both                                   SCALA_PB         _2_K  avgt    5     18734.819 ±    1522.575  ns/op
SiteBenchmark.both                                   SCALA_PB         _4_K  avgt    5     27024.157 ±     238.811  ns/op
SiteBenchmark.both                                   SCALA_PB         _8_K  avgt    5     42476.053 ±     207.866  ns/op
SiteBenchmark.both                                   SCALA_PB        _64_K  avgt    5    287859.589 ±   16871.170  ns/op
SiteBenchmark.both                                    JAVA_PB         _1_K  avgt    5      7944.782 ±     190.881  ns/op
SiteBenchmark.both                                    JAVA_PB         _2_K  avgt    5     13752.021 ±    2396.403  ns/op
SiteBenchmark.both                                    JAVA_PB         _4_K  avgt    5     22073.521 ±      67.061  ns/op
SiteBenchmark.both                                    JAVA_PB         _8_K  avgt    5     44329.513 ±     462.134  ns/op
SiteBenchmark.both                                    JAVA_PB        _64_K  avgt    5    351800.698 ±    2532.356  ns/op
SiteBenchmark.both                                JAVA_THRIFT         _1_K  avgt    5      9335.762 ±     228.414  ns/op
SiteBenchmark.both                                JAVA_THRIFT         _2_K  avgt    5     15973.827 ±     704.280  ns/op
SiteBenchmark.both                                JAVA_THRIFT         _4_K  avgt    5     32308.005 ±    1533.417  ns/op
SiteBenchmark.both                                JAVA_THRIFT         _8_K  avgt    5     65472.067 ±    4352.471  ns/op
SiteBenchmark.both                                JAVA_THRIFT        _64_K  avgt    5    607926.917 ±   38963.022  ns/op
SiteBenchmark.both                               SERIALIZABLE         _1_K  avgt    5    125754.111 ±    8487.536  ns/op
SiteBenchmark.both                               SERIALIZABLE         _2_K  avgt    5    174638.654 ±    2454.630  ns/op
SiteBenchmark.both                               SERIALIZABLE         _4_K  avgt    5    232608.313 ±   11129.947  ns/op
SiteBenchmark.both                               SERIALIZABLE         _8_K  avgt    5    354251.594 ±    1538.593  ns/op
SiteBenchmark.both                               SERIALIZABLE        _64_K  avgt    5   2197590.214 ±  429556.040  ns/op
SiteBenchmark.both                                  BOOPICKLE         _1_K  avgt    5      4693.656 ±      21.257  ns/op
SiteBenchmark.both                                  BOOPICKLE         _2_K  avgt    5      8161.914 ±     399.406  ns/op
SiteBenchmark.both                                  BOOPICKLE         _4_K  avgt    5     14312.805 ±     580.401  ns/op
SiteBenchmark.both                                  BOOPICKLE         _8_K  avgt    5     27080.686 ±    2581.910  ns/op
SiteBenchmark.both                                  BOOPICKLE        _64_K  avgt    5    242200.405 ±    7611.658  ns/op
SiteBenchmark.both                                      CHILL         _1_K  avgt    5     11977.275 ±     757.057  ns/op
SiteBenchmark.both                                      CHILL         _2_K  avgt    5     20731.060 ±    1552.657  ns/op
SiteBenchmark.both                                      CHILL         _4_K  avgt    5     34140.977 ±     792.218  ns/op
SiteBenchmark.both                                      CHILL         _8_K  avgt    5     70432.223 ±    1572.861  ns/op
SiteBenchmark.both                                      CHILL        _64_K  avgt    5   1340096.748 ±  150102.890  ns/op
SiteBenchmark.both                                   JSONITER         _1_K  avgt    5      6598.460 ±     328.580  ns/op
SiteBenchmark.both                                   JSONITER         _2_K  avgt    5     13925.846 ±     514.716  ns/op
SiteBenchmark.both                                   JSONITER         _4_K  avgt    5     25362.154 ±    1111.031  ns/op
SiteBenchmark.both                                   JSONITER         _8_K  avgt    5     45650.757 ±     112.785  ns/op
SiteBenchmark.both                                   JSONITER        _64_K  avgt    5    378185.828 ±   13036.915  ns/op
SiteBenchmark.both                                      CIRCE         _1_K  avgt    5     40104.148 ±      68.293  ns/op
SiteBenchmark.both                                      CIRCE         _2_K  avgt    5     73542.858 ±    1226.477  ns/op
SiteBenchmark.both                                      CIRCE         _4_K  avgt    5    168184.142 ±   11587.683  ns/op
SiteBenchmark.both                                      CIRCE         _8_K  avgt    5    378506.321 ±    2154.904  ns/op
SiteBenchmark.both                                      CIRCE        _64_K  avgt    5   3145029.878 ±  375925.887  ns/op
SiteBenchmark.both                               UPICKLE_JSON         _1_K  avgt    5     25784.821 ±     994.225  ns/op
SiteBenchmark.both                               UPICKLE_JSON         _2_K  avgt    5     52920.117 ±    2615.182  ns/op
SiteBenchmark.both                               UPICKLE_JSON         _4_K  avgt    5    105323.720 ±   10506.980  ns/op
SiteBenchmark.both                               UPICKLE_JSON         _8_K  avgt    5    215074.566 ±    1128.470  ns/op
SiteBenchmark.both                               UPICKLE_JSON        _64_K  avgt    5   1650420.392 ±   13406.305  ns/op
SiteBenchmark.both                        UPICKLE_POOLED_JSON         _1_K  avgt    5     24162.284 ±    2295.719  ns/op
SiteBenchmark.both                        UPICKLE_POOLED_JSON         _2_K  avgt    5     47974.456 ±     337.294  ns/op
SiteBenchmark.both                        UPICKLE_POOLED_JSON         _4_K  avgt    5     98825.776 ±    3482.820  ns/op
SiteBenchmark.both                        UPICKLE_POOLED_JSON         _8_K  avgt    5    213676.025 ±    2459.949  ns/op
SiteBenchmark.both                        UPICKLE_POOLED_JSON        _64_K  avgt    5   1592444.030 ±  109504.218  ns/op
SiteBenchmark.both                            UPICKLE_MSGPACK         _1_K  avgt    5     10233.062 ±      84.325  ns/op
SiteBenchmark.both                            UPICKLE_MSGPACK         _2_K  avgt    5     20940.215 ±    1277.259  ns/op
SiteBenchmark.both                            UPICKLE_MSGPACK         _4_K  avgt    5     44002.188 ±     261.193  ns/op
SiteBenchmark.both                            UPICKLE_MSGPACK         _8_K  avgt    5     90559.484 ±    6509.869  ns/op
SiteBenchmark.both                            UPICKLE_MSGPACK        _64_K  avgt    5    748287.085 ±    7669.119  ns/op
SiteBenchmark.both                                CAP_N_PROTO         _1_K  avgt    5     18301.320 ±    1597.746  ns/op
SiteBenchmark.both                                CAP_N_PROTO         _2_K  avgt    5     30047.622 ±     302.616  ns/op
SiteBenchmark.both                                CAP_N_PROTO         _4_K  avgt    5     52711.096 ±     363.326  ns/op
SiteBenchmark.both                                CAP_N_PROTO         _8_K  avgt    5    107122.793 ±    6057.103  ns/op
SiteBenchmark.both                                CAP_N_PROTO        _64_K  avgt    5   1063524.100 ±   23859.410  ns/op
SiteBenchmark.both                         CAP_N_PROTO_POOLED         _1_K  avgt    5     16721.232 ±     414.282  ns/op
SiteBenchmark.both                         CAP_N_PROTO_POOLED         _2_K  avgt    5     29367.028 ±     136.710  ns/op
SiteBenchmark.both                         CAP_N_PROTO_POOLED         _4_K  avgt    5     53807.437 ±     948.513  ns/op
SiteBenchmark.both                         CAP_N_PROTO_POOLED         _8_K  avgt    5    106241.884 ±    1170.041  ns/op
SiteBenchmark.both                         CAP_N_PROTO_POOLED        _64_K  avgt    5   1101834.183 ±  241138.062  ns/op
SiteBenchmark.deserialization                            JSON         _1_K  avgt    5      9279.159 ±      71.987  ns/op
SiteBenchmark.deserialization                            JSON         _2_K  avgt    5     15608.958 ±     240.661  ns/op
SiteBenchmark.deserialization                            JSON         _4_K  avgt    5     31805.076 ±     227.081  ns/op
SiteBenchmark.deserialization                            JSON         _8_K  avgt    5     67096.198 ±     593.436  ns/op
SiteBenchmark.deserialization                            JSON        _64_K  avgt    5    517362.964 ±    3401.233  ns/op
SiteBenchmark.deserialization                            CBOR         _1_K  avgt    5      8043.134 ±     545.265  ns/op
SiteBenchmark.deserialization                            CBOR         _2_K  avgt    5     13834.645 ±     578.103  ns/op
SiteBenchmark.deserialization                            CBOR         _4_K  avgt    5     25109.509 ±     122.329  ns/op
SiteBenchmark.deserialization                            CBOR         _8_K  avgt    5     52230.182 ±     532.778  ns/op
SiteBenchmark.deserialization                            CBOR        _64_K  avgt    5    439344.372 ±    1783.876  ns/op
SiteBenchmark.deserialization                           SMILE         _1_K  avgt    5      8551.542 ±      69.060  ns/op
SiteBenchmark.deserialization                           SMILE         _2_K  avgt    5     14189.604 ±     725.110  ns/op
SiteBenchmark.deserialization                           SMILE         _4_K  avgt    5     24925.700 ±     124.922  ns/op
SiteBenchmark.deserialization                           SMILE         _8_K  avgt    5     50330.157 ±    6697.480  ns/op
SiteBenchmark.deserialization                           SMILE        _64_K  avgt    5    370977.462 ±    3271.400  ns/op
SiteBenchmark.deserialization                        SCALA_PB         _1_K  avgt    5      2362.868 ±     144.814  ns/op
SiteBenchmark.deserialization                        SCALA_PB         _2_K  avgt    5      4673.133 ±      50.871  ns/op
SiteBenchmark.deserialization                        SCALA_PB         _4_K  avgt    5      8128.505 ±     653.154  ns/op
SiteBenchmark.deserialization                        SCALA_PB         _8_K  avgt    5     16066.652 ±     103.772  ns/op
SiteBenchmark.deserialization                        SCALA_PB        _64_K  avgt    5    116233.552 ±    1445.635  ns/op
SiteBenchmark.deserialization                         JAVA_PB         _1_K  avgt    5      5012.532 ±     397.840  ns/op
SiteBenchmark.deserialization                         JAVA_PB         _2_K  avgt    5      8161.365 ±     110.418  ns/op
SiteBenchmark.deserialization                         JAVA_PB         _4_K  avgt    5     12223.742 ±     480.697  ns/op
SiteBenchmark.deserialization                         JAVA_PB         _8_K  avgt    5     27579.633 ±     260.830  ns/op
SiteBenchmark.deserialization                         JAVA_PB        _64_K  avgt    5    202168.388 ±    8589.229  ns/op
SiteBenchmark.deserialization                     JAVA_THRIFT         _1_K  avgt    5      4641.972 ±     178.207  ns/op
SiteBenchmark.deserialization                     JAVA_THRIFT         _2_K  avgt    5      7153.546 ±      21.969  ns/op
SiteBenchmark.deserialization                     JAVA_THRIFT         _4_K  avgt    5     12151.534 ±     571.437  ns/op
SiteBenchmark.deserialization                     JAVA_THRIFT         _8_K  avgt    5     24369.390 ±    1178.193  ns/op
SiteBenchmark.deserialization                     JAVA_THRIFT        _64_K  avgt    5    180017.813 ±   22838.522  ns/op
SiteBenchmark.deserialization                    SERIALIZABLE         _1_K  avgt    5     96918.033 ±     893.917  ns/op
SiteBenchmark.deserialization                    SERIALIZABLE         _2_K  avgt    5    129886.295 ±    2903.950  ns/op
SiteBenchmark.deserialization                    SERIALIZABLE         _4_K  avgt    5    163372.275 ±    1507.846  ns/op
SiteBenchmark.deserialization                    SERIALIZABLE         _8_K  avgt    5    220373.766 ±    1473.208  ns/op
SiteBenchmark.deserialization                    SERIALIZABLE        _64_K  avgt    5   1093546.003 ±    8094.752  ns/op
SiteBenchmark.deserialization                       BOOPICKLE         _1_K  avgt    5      1951.030 ±      43.930  ns/op
SiteBenchmark.deserialization                       BOOPICKLE         _2_K  avgt    5      3902.013 ±     407.169  ns/op
SiteBenchmark.deserialization                       BOOPICKLE         _4_K  avgt    5      7004.163 ±     511.244  ns/op
SiteBenchmark.deserialization                       BOOPICKLE         _8_K  avgt    5     13322.154 ±     787.239  ns/op
SiteBenchmark.deserialization                       BOOPICKLE        _64_K  avgt    5    125720.010 ±    6383.672  ns/op
SiteBenchmark.deserialization                           CHILL         _1_K  avgt    5      7553.365 ±     447.894  ns/op
SiteBenchmark.deserialization                           CHILL         _2_K  avgt    5     25207.153 ±    1384.784  ns/op
SiteBenchmark.deserialization                           CHILL         _4_K  avgt    5     17195.476 ±     184.545  ns/op
SiteBenchmark.deserialization                           CHILL         _8_K  avgt    5     29833.809 ±     183.374  ns/op
SiteBenchmark.deserialization                           CHILL        _64_K  avgt    5    253699.078 ±    5016.777  ns/op
SiteBenchmark.deserialization                        JSONITER         _1_K  avgt    5      4051.411 ±     481.595  ns/op
SiteBenchmark.deserialization                        JSONITER         _2_K  avgt    5      8396.185 ±      58.791  ns/op
SiteBenchmark.deserialization                        JSONITER         _4_K  avgt    5     16441.826 ±     241.731  ns/op
SiteBenchmark.deserialization                        JSONITER         _8_K  avgt    5     31870.545 ±    2897.606  ns/op
SiteBenchmark.deserialization                        JSONITER        _64_K  avgt    5    244429.515 ±   25959.676  ns/op
SiteBenchmark.deserialization                           CIRCE         _1_K  avgt    5     22902.927 ±    1428.489  ns/op
SiteBenchmark.deserialization                           CIRCE         _2_K  avgt    5     40068.488 ±    2195.169  ns/op
SiteBenchmark.deserialization                           CIRCE         _4_K  avgt    5     91653.554 ±     491.770  ns/op
SiteBenchmark.deserialization                           CIRCE         _8_K  avgt    5    208892.818 ±    1391.949  ns/op
SiteBenchmark.deserialization                           CIRCE        _64_K  avgt    5   1642093.638 ±   58082.964  ns/op
SiteBenchmark.deserialization                    UPICKLE_JSON         _1_K  avgt    5     14283.006 ±    1913.792  ns/op
SiteBenchmark.deserialization                    UPICKLE_JSON         _2_K  avgt    5     28093.331 ±     136.503  ns/op
SiteBenchmark.deserialization                    UPICKLE_JSON         _4_K  avgt    5     61832.881 ±    5902.743  ns/op
SiteBenchmark.deserialization                    UPICKLE_JSON         _8_K  avgt    5    128800.156 ±    1704.620  ns/op
SiteBenchmark.deserialization                    UPICKLE_JSON        _64_K  avgt    5    927321.351 ±   22809.631  ns/op
SiteBenchmark.deserialization             UPICKLE_POOLED_JSON         _1_K  avgt    5     14910.512 ±     491.326  ns/op
SiteBenchmark.deserialization             UPICKLE_POOLED_JSON         _2_K  avgt    5     28335.031 ±    2556.899  ns/op
SiteBenchmark.deserialization             UPICKLE_POOLED_JSON         _4_K  avgt    5     61655.390 ±    6792.785  ns/op
SiteBenchmark.deserialization             UPICKLE_POOLED_JSON         _8_K  avgt    5    131174.651 ±    1635.487  ns/op
SiteBenchmark.deserialization             UPICKLE_POOLED_JSON        _64_K  avgt    5    932796.673 ±  159153.825  ns/op
SiteBenchmark.deserialization                 UPICKLE_MSGPACK         _1_K  avgt    5      6258.847 ±     490.164  ns/op
SiteBenchmark.deserialization                 UPICKLE_MSGPACK         _2_K  avgt    5     12284.117 ±      90.874  ns/op
SiteBenchmark.deserialization                 UPICKLE_MSGPACK         _4_K  avgt    5     26358.073 ±    2349.580  ns/op
SiteBenchmark.deserialization                 UPICKLE_MSGPACK         _8_K  avgt    5     60568.368 ±     287.198  ns/op
SiteBenchmark.deserialization                 UPICKLE_MSGPACK        _64_K  avgt    5    494856.247 ±    3933.570  ns/op
SiteBenchmark.deserialization                     CAP_N_PROTO         _1_K  avgt    5      8351.417 ±     488.780  ns/op
SiteBenchmark.deserialization                     CAP_N_PROTO         _2_K  avgt    5     12966.956 ±     997.857  ns/op
SiteBenchmark.deserialization                     CAP_N_PROTO         _4_K  avgt    5     22830.949 ±     178.994  ns/op
SiteBenchmark.deserialization                     CAP_N_PROTO         _8_K  avgt    5     47120.217 ±    2458.015  ns/op
SiteBenchmark.deserialization                     CAP_N_PROTO        _64_K  avgt    5    478314.351 ±    3588.257  ns/op
SiteBenchmark.deserialization              CAP_N_PROTO_POOLED         _1_K  avgt    5      7359.397 ±      50.601  ns/op
SiteBenchmark.deserialization              CAP_N_PROTO_POOLED         _2_K  avgt    5     12764.908 ±     483.815  ns/op
SiteBenchmark.deserialization              CAP_N_PROTO_POOLED         _4_K  avgt    5     23350.263 ±    1422.967  ns/op
SiteBenchmark.deserialization              CAP_N_PROTO_POOLED         _8_K  avgt    5     48152.277 ±     535.625  ns/op
SiteBenchmark.deserialization              CAP_N_PROTO_POOLED        _64_K  avgt    5    459564.615 ±   24439.779  ns/op
SiteBenchmark.serialization                              JSON         _1_K  avgt    5      4646.839 ±      48.221  ns/op
SiteBenchmark.serialization                              JSON         _2_K  avgt    5      9910.267 ±     132.825  ns/op
SiteBenchmark.serialization                              JSON         _4_K  avgt    5     20345.866 ±     127.346  ns/op
SiteBenchmark.serialization                              JSON         _8_K  avgt    5     39397.110 ±    1958.813  ns/op
SiteBenchmark.serialization                              JSON        _64_K  avgt    5    299685.439 ±    1738.274  ns/op
SiteBenchmark.serialization                              CBOR         _1_K  avgt    5      3576.816 ±     377.889  ns/op
SiteBenchmark.serialization                              CBOR         _2_K  avgt    5      6795.835 ±      66.476  ns/op
SiteBenchmark.serialization                              CBOR         _4_K  avgt    5     13430.953 ±     747.089  ns/op
SiteBenchmark.serialization                              CBOR         _8_K  avgt    5     25063.906 ±    1790.792  ns/op
SiteBenchmark.serialization                              CBOR        _64_K  avgt    5    222583.372 ±    3541.994  ns/op
SiteBenchmark.serialization                             SMILE         _1_K  avgt    5      4457.677 ±     215.590  ns/op
SiteBenchmark.serialization                             SMILE         _2_K  avgt    5      8208.490 ±     231.665  ns/op
SiteBenchmark.serialization                             SMILE         _4_K  avgt    5     15402.181 ±     171.170  ns/op
SiteBenchmark.serialization                             SMILE         _8_K  avgt    5     28611.149 ±     578.375  ns/op
SiteBenchmark.serialization                             SMILE        _64_K  avgt    5    217177.431 ±   13822.098  ns/op
SiteBenchmark.serialization                          SCALA_PB         _1_K  avgt    5      6297.651 ±      40.212  ns/op
SiteBenchmark.serialization                          SCALA_PB         _2_K  avgt    5     11965.221 ±      53.952  ns/op
SiteBenchmark.serialization                          SCALA_PB         _4_K  avgt    5     18267.661 ±    1047.161  ns/op
SiteBenchmark.serialization                          SCALA_PB         _8_K  avgt    5     23679.525 ±      85.769  ns/op
SiteBenchmark.serialization                          SCALA_PB        _64_K  avgt    5    161895.262 ±   15273.460  ns/op
SiteBenchmark.serialization                           JAVA_PB         _1_K  avgt    5      2750.757 ±       8.824  ns/op
SiteBenchmark.serialization                           JAVA_PB         _2_K  avgt    5      5061.054 ±     244.036  ns/op
SiteBenchmark.serialization                           JAVA_PB         _4_K  avgt    5      9160.785 ±     841.383  ns/op
SiteBenchmark.serialization                           JAVA_PB         _8_K  avgt    5     17992.001 ±    1791.148  ns/op
SiteBenchmark.serialization                           JAVA_PB        _64_K  avgt    5    156203.096 ±    6452.124  ns/op
SiteBenchmark.serialization                       JAVA_THRIFT         _1_K  avgt    5      4686.016 ±      20.763  ns/op
SiteBenchmark.serialization                       JAVA_THRIFT         _2_K  avgt    5      9221.008 ±      54.275  ns/op
SiteBenchmark.serialization                       JAVA_THRIFT         _4_K  avgt    5     19284.875 ±     607.086  ns/op
SiteBenchmark.serialization                       JAVA_THRIFT         _8_K  avgt    5     39920.698 ±    1223.008  ns/op
SiteBenchmark.serialization                       JAVA_THRIFT        _64_K  avgt    5    378742.681 ±    1845.700  ns/op
SiteBenchmark.serialization                      SERIALIZABLE         _1_K  avgt    5     26169.248 ±     676.939  ns/op
SiteBenchmark.serialization                      SERIALIZABLE         _2_K  avgt    5     38783.625 ±    2568.013  ns/op
SiteBenchmark.serialization                      SERIALIZABLE         _4_K  avgt    5     61624.350 ±    2288.969  ns/op
SiteBenchmark.serialization                      SERIALIZABLE         _8_K  avgt    5    120661.029 ±    3484.302  ns/op
SiteBenchmark.serialization                      SERIALIZABLE        _64_K  avgt    5    978604.592 ±    9291.097  ns/op
SiteBenchmark.serialization                         BOOPICKLE         _1_K  avgt    5      2188.769 ±      58.661  ns/op
SiteBenchmark.serialization                         BOOPICKLE         _2_K  avgt    5      3871.227 ±      43.426  ns/op
SiteBenchmark.serialization                         BOOPICKLE         _4_K  avgt    5      6848.263 ±     147.280  ns/op
SiteBenchmark.serialization                         BOOPICKLE         _8_K  avgt    5     12607.210 ±      74.513  ns/op
SiteBenchmark.serialization                         BOOPICKLE        _64_K  avgt    5    117327.186 ±   20548.951  ns/op
SiteBenchmark.serialization                             CHILL         _1_K  avgt    5      6025.195 ±     239.735  ns/op
SiteBenchmark.serialization                             CHILL         _2_K  avgt    5     10021.125 ±     102.763  ns/op
SiteBenchmark.serialization                             CHILL         _4_K  avgt    5     18033.266 ±    2254.093  ns/op
SiteBenchmark.serialization                             CHILL         _8_K  avgt    5     33674.950 ±    2228.742  ns/op
SiteBenchmark.serialization                             CHILL        _64_K  avgt    5    565679.039 ±    8455.874  ns/op
SiteBenchmark.serialization                          JSONITER         _1_K  avgt    5      2270.432 ±     252.395  ns/op
SiteBenchmark.serialization                          JSONITER         _2_K  avgt    5      4541.207 ±     389.372  ns/op
SiteBenchmark.serialization                          JSONITER         _4_K  avgt    5      8021.789 ±      57.068  ns/op
SiteBenchmark.serialization                          JSONITER         _8_K  avgt    5     20399.704 ±     477.714  ns/op
SiteBenchmark.serialization                          JSONITER        _64_K  avgt    5    128515.334 ±    6655.810  ns/op
SiteBenchmark.serialization                             CIRCE         _1_K  avgt    5     16863.506 ±     918.785  ns/op
SiteBenchmark.serialization                             CIRCE         _2_K  avgt    5     31817.913 ±     705.195  ns/op
SiteBenchmark.serialization                             CIRCE         _4_K  avgt    5     71341.879 ±    4110.784  ns/op
SiteBenchmark.serialization                             CIRCE         _8_K  avgt    5    158126.917 ±    7741.441  ns/op
SiteBenchmark.serialization                             CIRCE        _64_K  avgt    5   1395070.564 ±   50133.200  ns/op
SiteBenchmark.serialization                      UPICKLE_JSON         _1_K  avgt    5      8646.464 ±      49.958  ns/op
SiteBenchmark.serialization                      UPICKLE_JSON         _2_K  avgt    5     18756.774 ±     546.823  ns/op
SiteBenchmark.serialization                      UPICKLE_JSON         _4_K  avgt    5     38322.348 ±     294.187  ns/op
SiteBenchmark.serialization                      UPICKLE_JSON         _8_K  avgt    5     80576.110 ±    8501.963  ns/op
SiteBenchmark.serialization                      UPICKLE_JSON        _64_K  avgt    5    657867.832 ±   56100.128  ns/op
SiteBenchmark.serialization               UPICKLE_POOLED_JSON         _1_K  avgt    5      8666.458 ±      74.993  ns/op
SiteBenchmark.serialization               UPICKLE_POOLED_JSON         _2_K  avgt    5     15357.568 ±    1426.557  ns/op
SiteBenchmark.serialization               UPICKLE_POOLED_JSON         _4_K  avgt    5     39301.630 ±    1169.476  ns/op
SiteBenchmark.serialization               UPICKLE_POOLED_JSON         _8_K  avgt    5     69433.810 ±    3339.646  ns/op
SiteBenchmark.serialization               UPICKLE_POOLED_JSON        _64_K  avgt    5    511867.558 ±   25203.458  ns/op
SiteBenchmark.serialization                   UPICKLE_MSGPACK         _1_K  avgt    5      3396.433 ±     209.186  ns/op
SiteBenchmark.serialization                   UPICKLE_MSGPACK         _2_K  avgt    5      6262.192 ±      39.628  ns/op
SiteBenchmark.serialization                   UPICKLE_MSGPACK         _4_K  avgt    5     14973.409 ±     132.214  ns/op
SiteBenchmark.serialization                   UPICKLE_MSGPACK         _8_K  avgt    5     33352.122 ±    5805.377  ns/op
SiteBenchmark.serialization                   UPICKLE_MSGPACK        _64_K  avgt    5    278159.441 ±   18295.862  ns/op
SiteBenchmark.serialization                       CAP_N_PROTO         _1_K  avgt    5      9023.841 ±     529.323  ns/op
SiteBenchmark.serialization                       CAP_N_PROTO         _2_K  avgt    5     16600.677 ±    2402.022  ns/op
SiteBenchmark.serialization                       CAP_N_PROTO         _4_K  avgt    5     29062.346 ±      65.874  ns/op
SiteBenchmark.serialization                       CAP_N_PROTO         _8_K  avgt    5     56937.586 ±    2168.003  ns/op
SiteBenchmark.serialization                       CAP_N_PROTO        _64_K  avgt    5    546141.746 ±    3773.437  ns/op
SiteBenchmark.serialization                CAP_N_PROTO_POOLED         _1_K  avgt    5      9000.955 ±     886.459  ns/op
SiteBenchmark.serialization                CAP_N_PROTO_POOLED         _2_K  avgt    5     16441.478 ±    2180.976  ns/op
SiteBenchmark.serialization                CAP_N_PROTO_POOLED         _4_K  avgt    5     28410.542 ±      37.267  ns/op
SiteBenchmark.serialization                CAP_N_PROTO_POOLED         _8_K  avgt    5     57283.703 ±    4958.238  ns/op
SiteBenchmark.serialization                CAP_N_PROTO_POOLED        _64_K  avgt    5    528137.752 ±    2326.960  ns/op
SiteRawScalaPbBenchmark.both                  SCALA_PB_DIRECT         _1_K  avgt    5      4500.307 ±      40.786  ns/op
SiteRawScalaPbBenchmark.both                  SCALA_PB_DIRECT         _2_K  avgt    5      9076.784 ±      61.350  ns/op
SiteRawScalaPbBenchmark.both                  SCALA_PB_DIRECT         _4_K  avgt    5     15451.832 ±     157.662  ns/op
SiteRawScalaPbBenchmark.both                  SCALA_PB_DIRECT         _8_K  avgt    5     24748.562 ±     739.386  ns/op
SiteRawScalaPbBenchmark.both                  SCALA_PB_DIRECT        _64_K  avgt    5    188259.558 ±   23309.190  ns/op
SiteRawScalaPbBenchmark.deserialization       SCALA_PB_DIRECT         _1_K  avgt    5      2030.625 ±       4.936  ns/op
SiteRawScalaPbBenchmark.deserialization       SCALA_PB_DIRECT         _2_K  avgt    5      3951.913 ±     225.141  ns/op
SiteRawScalaPbBenchmark.deserialization       SCALA_PB_DIRECT         _4_K  avgt    5      7092.209 ±    1153.877  ns/op
SiteRawScalaPbBenchmark.deserialization       SCALA_PB_DIRECT         _8_K  avgt    5     12484.402 ±    2259.229  ns/op
SiteRawScalaPbBenchmark.deserialization       SCALA_PB_DIRECT        _64_K  avgt    5    100019.647 ±     855.451  ns/op
SiteRawScalaPbBenchmark.serialization         SCALA_PB_DIRECT         _1_K  avgt    5      2317.395 ±      18.164  ns/op
SiteRawScalaPbBenchmark.serialization         SCALA_PB_DIRECT         _2_K  avgt    5      5016.381 ±    1068.649  ns/op
SiteRawScalaPbBenchmark.serialization         SCALA_PB_DIRECT         _4_K  avgt    5      8411.140 ±     394.060  ns/op
SiteRawScalaPbBenchmark.serialization         SCALA_PB_DIRECT         _8_K  avgt    5     11397.906 ±     493.223  ns/op
SiteRawScalaPbBenchmark.serialization         SCALA_PB_DIRECT        _64_K  avgt    5     79043.672 ±    2113.942  ns/op

Benchmark result is saved to /static/data/charts/scala-serialization-2022/jdk17.json
