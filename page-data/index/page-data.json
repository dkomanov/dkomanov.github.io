{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"excerpt":"It’s time to consolidate my Base64 findings: take the best of JVM world, the best of Rust world and benchmark it together from within the…","fields":{"slug":"/p/java-exploring-jni-performance-via-decoding-base64/"},"frontmatter":{"date":"October 27, 2022","title":"Java: Exploring JNI performance via Decoding Base64","description":"What is the overhead of calling native libraries via JNI? A performance benchmark on a more or less real-world example of decoding Base64."}}},{"node":{"excerpt":"This is a remake of java-native-benchmark: performance benchmark of different ways (libraries) of using native libraries. The original…","fields":{"slug":"/p/java-native-access-performance/"},"frontmatter":{"date":"October 22, 2022","title":"Java Native Access Performance","description":"Performance comparison of  native libraries access from Java: JNI vs JNR vs JavaCPP vs BridJ vs JNA"}}},{"node":{"excerpt":"UPD: A lot of interesting comments on reddit: Added benchmarks for data-encoding crate. Added an optimized version of JDK ported…","fields":{"slug":"/p/base64-encoding-performance-java-vs-rust/"},"frontmatter":{"date":"October 16, 2022","title":"Base64 Encoding Performance: Java vs Rust","description":"Performance comparison of base64 encoding/decoding between base64, crypto2 and JDK implementations with some unexpected results!"}}},{"node":{"excerpt":"UPD. Charts updated with better input data. Recently I stumbled upon some old code that used Base64 from Apache Commons. So I decided to…","fields":{"slug":"/p/base64-encoding-performance-jdk-vs-apache-commons/"},"frontmatter":{"date":"September 25, 2022","title":"Base64 Encoding Performance: JDK vs Apache Commons","description":"Performance comparison of base64 encoding/decoding between java.util.Base64 and Apache Commons implementation"}}},{"node":{"excerpt":"Wow, that’s the fifth (and I hope that last, famous last words) episode in my series “Benchmarking something that almost no one needs” :) I…","fields":{"slug":"/p/replacing-hash-map-with-off-heap-hash-map-in-java/"},"frontmatter":{"date":"September 08, 2022","title":"Replacing HashMap with Off-Heap HashMap in Java?","description":"Implementing a simple read only HashMap stored off-heap in Java and benchmarking it against java.util.HashMap!"}}},{"node":{"excerpt":"This is the next portion of my “research” around my UUID set cache. I’ve benchmarked Map Performance Java vs Scala, binary search instead of…","fields":{"slug":"/p/mysql-as-redis-vs-redis/"},"frontmatter":{"date":"September 05, 2022","title":"MySQL as Redis vs Redis?","description":"Simple one column table in MySQL representing a Set. Let's benchmark it (against Redis)!"}}},{"node":{"excerpt":"After my post about making off-heap Set-like data structure, my friend threw an idea at me: why not to go all the way, and use not just off…","fields":{"slug":"/p/ultimate-off-heap-hash-set-using-redis/"},"frontmatter":{"date":"August 31, 2022","title":"Ultimate Off-Heap Hash Set: Using Redis","description":"A benchmark to check the performance of out-of-process cache in Redis to potentially replace in-process cache"}}},{"node":{"excerpt":"This post is not about a Magical Solution that I found or some performances issues in JDK or in Scala. Here I want to describe my findings…","fields":{"slug":"/p/replacing-hash-set-with-sorted-array-in-java/"},"frontmatter":{"date":"August 14, 2022","title":"Replacing HashSet with Sorted Array and Binary Search in Java?","description":"An attempt to replace HashSet with sorted array and binary search for memory optimization. Including off-heap storage."}}},{"node":{"excerpt":"Yet another post about performance and microbenchmarks. Beware of the results. I was wondering about performance of Scala collections and…","fields":{"slug":"/p/map-performance-java-vs-scala/"},"frontmatter":{"date":"August 02, 2022","title":"Map Performance: Java vs Scala","description":"A microbenchmark of Map.get and Set.contains performance for different JDK and Scala versions"}}},{"node":{"excerpt":"Yet another post about performance and microbenchmarks. Beware of the results. There is a method in String class, called regionMatches…","fields":{"slug":"/p/benchmarking-string-regionmatches/"},"frontmatter":{"date":"April 24, 2022","title":"Benchmarking String.regionMatches","description":"A simple just for fun benchmark reveals some bizarre performance of regionMatches method"}}},{"node":{"excerpt":"I was introduced to software development sometime in 1999, back in High School in Moscow (Hello, 1580.) We studied Pascal, but the Web was…","fields":{"slug":"/p/my-front-end-story/"},"frontmatter":{"date":"January 24, 2022","title":"My Front End Story","description":"My view on how front-end technologies evolved over the years from my personal experience of mostly back-end developer..."}}},{"node":{"excerpt":"One of our services recently started to perform multiple inserts and deletes in MySQL database. To the point of a noticeable\nresponse time…","fields":{"slug":"/p/benchmarking-batch-jdbc-queries/"},"frontmatter":{"date":"June 17, 2021","title":"Benchmarking batch JDBC queries","description":"Benchmarks for different kinds of batch queries to MySQL"}}},{"node":{"excerpt":"Part 1. Coding.  Part 2. Exception Handling.  Part 3. Threading Model.  Part 4. Rewrite Blocking App.  Part 5. What’s next? In previous…","fields":{"slug":"/p/writing-async-app-in-scala-part-3-threading-model/"},"frontmatter":{"date":"May 26, 2020","title":"Writing Async App in Scala. Part 3: Threading Model","description":"How many threads to use? How many thread pools or execution contexts do we need? How to minimize overhead for the better performance in async world?"}}},{"node":{"excerpt":"In this part we will cover the exception handling for async programming in Scala with Futures.  Part 1. Coding.  Part 2. Exception Handling…","fields":{"slug":"/p/writing-async-app-in-scala-part-2-exception-handling/"},"frontmatter":{"date":"May 24, 2020","title":"Writing Async App in Scala. Part 2: Exception Handling","description":"How to propagate errors in async world? What are caveats of using exceptions in async programming? Use exceptions as a primary propagation mechanism while being on a safe side."}}},{"node":{"excerpt":"Part 1. Coding In this part we will cover the most basic part of async programming in Scala with Futures.  Part 1. Coding.  Part…","fields":{"slug":"/p/writing-async-app-in-scala-part-1-coding/"},"frontmatter":{"date":"May 23, 2020","title":"Writing Async App in Scala. Part 1: Coding","description":"How the async code looks like, How to make it more readable and look like non-async code. Extending Future capabilities to match our needs."}}},{"node":{"excerpt":"UPD: Apparently in top5 from Google there are no correct examples, changed text accordingly. Resource management is a very important topic…","fields":{"slug":"/p/scala-try-with-resources/"},"frontmatter":{"date":"March 12, 2018","title":"Scala try-with-resources","description":"My 2 cents on how to properly manage resources in Scala, or a story of reimplementing try-with-resources in Scala."}}},{"node":{"excerpt":"Repost of my blog post in Wix Engineering Blog with some extra information. Cover image via pixabay. Though the question of “How to query…","fields":{"slug":"/p/the-cost-of-streaming-data-from-mysql/"},"frontmatter":{"date":"September 18, 2017","title":"The Cost of Streaming Data from MySQL","description":"How streaming from MySQL (on client side) affects performance comparing to non-streaming..."}}},{"node":{"excerpt":"UPD: Here is the Pull Request to scala-compiler with changes inspired by this post. String concatenation is a basic building block in every…","fields":{"slug":"/p/scala-string-interpolation-performance/"},"frontmatter":{"date":"December 05, 2016","title":"Scala: String Interpolation Performance","description":"Performance comparison between different kinds of string concatenation/formatting in Java/Scala..."}}},{"node":{"excerpt":"Yet another post about performance and microbenchmarks. Yes, I know. Very small JMH benchmark: And the result: Wow. Apparently, JVM doesn’t…","fields":{"slug":"/p/scala-stringbuilder-vs-java-stringbuilder-performance/"},"frontmatter":{"date":"December 03, 2016","title":"Scala StringBuilder vs Java StringBuilder Performance","description":"O_O performance benchmark of StringBuilder wrapper in Scala..."}}},{"node":{"excerpt":"I’ve just created charts. There I’ve put my recent benchmark results from the\nScala Serialization article. Things changed: Results gathered…","fields":{"slug":"/p/scala-serialization-updated/"},"frontmatter":{"date":"June 26, 2016","title":"Scala Serialization Updated","description":"Short update on Scala Serialization post..."}}},{"node":{"excerpt":"UPD-2022: A remake of this blog post on 2022.\nUPD: Recent benchmark charts are here. It’s common to use JSON as the main format of…","fields":{"slug":"/p/scala-serialization/"},"frontmatter":{"date":"June 12, 2016","title":"Scala Serialization","description":"Performance comparison of popular serialization libraries for Scala..."}}},{"node":{"excerpt":"Mockito is a great tool. It helps a lot. But nothing\nis perfect. Recently I’ve encountered the one scary thing and I want to share it…","fields":{"slug":"/p/one-more-threat-of-mockito/"},"frontmatter":{"date":"February 02, 2016","title":"One more threat of Mockito","description":"Discovery during testing of a mutable code with Mockito..."}}},{"node":{"excerpt":"First of all, I don’t want to raise\na topic “Exceptions versus Error Codes”.\nBut if you need to return a result code and you use Scala, I…","fields":{"slug":"/p/scala-how-to-return-a-result-code-in-a-concise-way/"},"frontmatter":{"date":"January 09, 2016","title":"Scala: How to return a result code in a concise way","description":"My attempt to reinvent wheel during my learning of Scala. Right-biased Either..."}}},{"node":{"excerpt":"I doubt a bit, but then I decided to try to submit a patch to JDK with\nthe performance improvement. I’ve read couple articles,\ncloned code…","fields":{"slug":"/p/lets-continue-with-uuid-fromstring/"},"frontmatter":{"date":"November 16, 2015","title":"Let’s continue with UUID.fromString","description":"Everything is invented before us: my attempt to contribute UUID.fromString to JDK9..."}}},{"node":{"excerpt":"I spent some time on optimizing UUID.fromString\nfunction and I want to share my experience about it. TL;DR — we will improve\nit’s…","fields":{"slug":"/p/micro-optimization-for-uuid-fromstring-in-7-steps/"},"frontmatter":{"date":"November 05, 2015","title":"Micro-optimization for UUID.fromString in 7 steps","description":"A sequence of 7 micro-optimizations for parsing UUID from String to make it really fast!"}}},{"node":{"excerpt":"My blog post was published in a Wix Engineering Blog. It was hugely edited before with the real editor. It’s funny to find out that your…","fields":{"slug":"/p/first-time-on-wix-engineering-blog/"},"frontmatter":{"date":"October 12, 2015","title":"First time on Wix Engineering Blog","description":null}}},{"node":{"excerpt":"Recently I’ve fixed a flaky test and I want to share some thoughts (very trivial)\nabout how to make no mistakes. So, we have a simple class…","fields":{"slug":"/p/testing-asynchronous-code/"},"frontmatter":{"date":"September 13, 2015","title":"Testing Asynchronous Code","description":"Some tricks how to reliably test multithreaded code in Java/Scala..."}}},{"node":{"excerpt":"Recently I’ve found that I cannot use anonymous matching function with specs2\nMockito’s answers function. I wanted to do something like this…","fields":{"slug":"/p/small-design-issues/"},"frontmatter":{"date":"September 10, 2015","title":"Small design issues","description":"Learning about function overloading in Scala on a real case with specs2 Mockito wrapper..."}}},{"node":{"excerpt":"I went to Ulpan (the school for studying Hebrew). 2 times a week for a 3 hours. It’s hard to me to speak unknown words. The same as it was…","fields":{"slug":"/p/about-ulpan/"},"frontmatter":{"date":"July 15, 2015","title":"About Ulpan","description":"I went to Ulpan (the school for studying Hebrew). 2 times a week for a 3 hours..."}}}]}},"pageContext":{}},"staticQueryHashes":["3675711862"]}